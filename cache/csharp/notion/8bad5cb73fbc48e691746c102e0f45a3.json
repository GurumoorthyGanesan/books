{
  "ID": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
  "Root": {
    "alive": true,
    "content": [
      "6ef623c6-e37b-490b-958d-522893e2ba9e",
      "e09b3152-4869-47b1-8439-961fbeeac4aa",
      "32ffc34f-d362-4e76-a991-c6a220e37809",
      "65d874f6-69fb-4be9-a7f4-7829394d86ba",
      "94d69221-4440-4522-a601-5071f46674ac",
      "984bf665-3dab-4e4c-8e43-22d96ad00ec7",
      "12498803-93fc-4c3f-a332-72dbe25ee305",
      "97fc2c30-53fd-4b69-815b-71236c21cbfa",
      "66c19774-5062-41d5-8488-593c9e73cbaf",
      "5c010c62-9627-44b5-9497-8aea041827f6",
      "f0bd4cb4-5f17-4614-9eda-788e2caca2ae",
      "7b05c50f-cdcc-43f5-a347-913d5df29ae2",
      "78d5db31-1d3d-48db-8d89-03f5e48a5246",
      "075f08d2-b875-4182-bb2c-9b65e17f1a4f",
      "2f02d097-f335-4e2a-b79d-50b395411fdf",
      "574061d0-172d-4bdf-a191-278a50a576c6",
      "89d25cf1-fa8d-4d57-8118-a93999348a23",
      "0e43f997-29c4-4335-b141-c35864173a4a",
      "36348117-9245-49b8-829a-18fb8833a4bb"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525004292,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549613760000,
    "parent_id": "1cef0e56-e2c1-46b9-9c66-002b53d2c779",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "stackalloc"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525004287,
        "id": "6ef623c6-e37b-490b-958d-522893e2ba9e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525004287,
        "parent_id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "stackalloc",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword creates a region of memory on the stack and returns a pointer to the start of that memory. Stack allocated memory is automatically removed when the scope it was created in is exited."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "stackalloc",
            "AttrFlags": 2
          },
          {
            "Text": " keyword creates a region of memory on the stack and returns a pointer to the start of that memory. Stack allocated memory is automatically removed when the scope it was created in is exited."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525004290,
        "id": "e09b3152-4869-47b1-8439-961fbeeac4aa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525004290,
        "parent_id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//Allocate 1024 bytes. This returns a pointer to the first byte.\nbyte* ptr = stackalloc byte[1024];"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//Allocate 1024 bytes. This returns a pointer to the first byte.\nbyte* ptr = stackalloc byte[1024];",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525004290,
        "id": "32ffc34f-d362-4e76-a991-c6a220e37809",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525004290,
        "parent_id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//Assign some values...\nptr[0] = 109;\nptr[1] = 13;\nptr[2] = 232;\n..."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//Assign some values...\nptr[0] = 109;\nptr[1] = 13;\nptr[2] = 232;\n...",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525004290,
        "id": "65d874f6-69fb-4be9-a7f4-7829394d86ba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525004290,
        "parent_id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Used in an unsafe context.",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Used in an unsafe context.",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525004290,
        "id": "94d69221-4440-4522-a601-5071f46674ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525004290,
        "parent_id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As with all pointers in C# there is no bounds checking on reads and assignments. Reading beyond the bounds of the allocated memory will have unpredictable results - it may access some arbitrary location within memory or it may cause an access violation exception."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As with all pointers in C# there is no bounds checking on reads and assignments. Reading beyond the bounds of the allocated memory will have unpredictable results - it may access some arbitrary location within memory or it may cause an access violation exception."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525004290,
        "id": "984bf665-3dab-4e4c-8e43-22d96ad00ec7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525004290,
        "parent_id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//Allocate 1 byte\nbyte* ptr = stackalloc byte[1];"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//Allocate 1 byte\nbyte* ptr = stackalloc byte[1];",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525004290,
        "id": "12498803-93fc-4c3f-a332-72dbe25ee305",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525004290,
        "parent_id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//Unpredictable results...\nptr[10] = 1;\nptr[-1] = 2;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//Unpredictable results...\nptr[10] = 1;\nptr[-1] = 2;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525004291,
        "id": "97fc2c30-53fd-4b69-815b-71236c21cbfa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525004291,
        "parent_id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Stack allocated memory is automatically removed when the scope it was created in is exited. This means that you should never return the memory created with stackalloc or store it beyond the lifetime of the scope."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Stack allocated memory is automatically removed when the scope it was created in is exited. This means that you should never return the memory created with stackalloc or store it beyond the lifetime of the scope."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525004291,
        "id": "66c19774-5062-41d5-8488-593c9e73cbaf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525004291,
        "parent_id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "unsafe IntPtr Leak() {\n    //Allocate some memory on the stack\n    var ptr = stackalloc byte[1024];"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "unsafe IntPtr Leak() {\n    //Allocate some memory on the stack\n    var ptr = stackalloc byte[1024];",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525004291,
        "id": "5c010c62-9627-44b5-9497-8aea041827f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525004291,
        "parent_id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//Return a pointer to that memory (this exits the scope of \"Leak\")\n    return new IntPtr(ptr);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//Return a pointer to that memory (this exits the scope of \"Leak\")\n    return new IntPtr(ptr);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525004291,
        "id": "f0bd4cb4-5f17-4614-9eda-788e2caca2ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525004291,
        "parent_id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "unsafe void Bad() {\n     //ptr is now an invalid pointer, using it in any way will have\n     //unpredictable results. This is exactly the same as accessing beyond\n     //the bounds of the pointer.\n     var ptr = Leak();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "unsafe void Bad() {\n     //ptr is now an invalid pointer, using it in any way will have\n     //unpredictable results. This is exactly the same as accessing beyond\n     //the bounds of the pointer.\n     var ptr = Leak();\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525004291,
        "id": "7b05c50f-cdcc-43f5-a347-913d5df29ae2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525004291,
        "parent_id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "stackalloc",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can only be used when declaring "
            ],
            [
              "and",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " initialising variables. The following is "
            ],
            [
              "not",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " valid:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "stackalloc",
            "AttrFlags": 2
          },
          {
            "Text": " can only be used when declaring "
          },
          {
            "Text": "and",
            "AttrFlags": 4
          },
          {
            "Text": " initialising variables. The following is "
          },
          {
            "Text": "not",
            "AttrFlags": 4
          },
          {
            "Text": " valid:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525004291,
        "id": "78d5db31-1d3d-48db-8d89-03f5e48a5246",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525004291,
        "parent_id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "byte* ptr;\n...\nptr = stackalloc byte[1024];"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "byte* ptr;\n...\nptr = stackalloc byte[1024];",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525004291,
        "id": "075f08d2-b875-4182-bb2c-9b65e17f1a4f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525004291,
        "parent_id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525004291,
        "id": "2f02d097-f335-4e2a-b79d-50b395411fdf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525004291,
        "parent_id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525004291,
        "id": "574061d0-172d-4bdf-a191-278a50a576c6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525004291,
        "parent_id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "stackalloc",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " should only be used for performance optimizations (either for computation or interop). This is due to the fact that:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "stackalloc",
            "AttrFlags": 2
          },
          {
            "Text": " should only be used for performance optimizations (either for computation or interop). This is due to the fact that:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525004292,
        "id": "89d25cf1-fa8d-4d57-8118-a93999348a23",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525004292,
        "parent_id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The garbage collector is not required as the memory is allocated on the stack rather than the heap - the memory is released as soon as the variable goes out of scope"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The garbage collector is not required as the memory is allocated on the stack rather than the heap - the memory is released as soon as the variable goes out of scope"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525004292,
        "id": "0e43f997-29c4-4335-b141-c35864173a4a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525004292,
        "parent_id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is faster to allocate memory on the stack rather than the heap"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is faster to allocate memory on the stack rather than the heap"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525004292,
        "id": "36348117-9245-49b8-829a-18fb8833a4bb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525004292,
        "parent_id": "8bad5cb7-3fbc-48e6-9174-6c102e0f45a3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Increase the chance of cache hits on the CPU due to the locality of data"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Increase the chance of cache hits on the CPU due to the locality of data"
          }
        ]
      }
    ],
    "title": "stackalloc",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}