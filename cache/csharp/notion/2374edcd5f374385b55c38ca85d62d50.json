{
  "ID": "2374edcd-5f37-4385-b55c-38ca85d62d50",
  "Root": {
    "id": "2374edcd-5f37-4385-b55c-38ca85d62d50",
    "alive": true,
    "content": [
      "c59388c8-1464-4b22-80e4-638ca46821e2",
      "882d96c2-ab56-48ca-aee9-7f6529268743",
      "16ec0b4f-e230-42c3-83a7-590e2ba05b49",
      "797fbe49-f2b5-4d3e-8d8d-f8e8efe1253e",
      "cae708f1-de81-46ba-8155-30f6ce29ef88",
      "5cf3787f-ae66-41d5-99e6-7140c1b15f8d",
      "001b7448-71b2-48cc-a616-0ee3d696cfd9",
      "2f745b80-f8b8-4552-a9be-44e97c428f59",
      "9fdbf803-2ba0-410b-8c44-4aa24178c7d8",
      "80292150-8821-456b-bade-0569506a9f19",
      "298f9acc-88ba-4aea-8154-91643f7602e2"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549527767288,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550204820000,
    "parent_id": "15c7c6c1-34d3-4692-bbfc-311e63288f8d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "DateTime.ParseExactStringStringIFormatProvider"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "id": "c59388c8-1464-4b22-80e4-638ca46821e2",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527767283,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527767283,
        "parent_id": "2374edcd-5f37-4385-b55c-38ca85d62d50",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Converts the specified string representation of a date and time to its DateTime equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Converts the specified string representation of a date and time to its DateTime equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly."
          }
        ]
      },
      {
        "id": "882d96c2-ab56-48ca-aee9-7f6529268743",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527767286,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527767286,
        "parent_id": "2374edcd-5f37-4385-b55c-38ca85d62d50",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Convert a specific format string to equivalent DateTime",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Convert a specific format string to equivalent DateTime",
            "AttrFlags": 1
          }
        ]
      },
      {
        "id": "16ec0b4f-e230-42c3-83a7-590e2ba05b49",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527767286,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527767286,
        "parent_id": "2374edcd-5f37-4385-b55c-38ca85d62d50",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s say we have a culture-specific DateTime string "
            ],
            [
              "08-07-2016 11:30:12 PM",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as "
            ],
            [
              "MM-dd-yyyy hh:mm:ss tt",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " format and we want it to convert to equivalent "
            ],
            [
              "DateTime",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s say we have a culture-specific DateTime string "
          },
          {
            "Text": "08-07-2016 11:30:12 PM",
            "AttrFlags": 2
          },
          {
            "Text": " as "
          },
          {
            "Text": "MM-dd-yyyy hh:mm:ss tt",
            "AttrFlags": 2
          },
          {
            "Text": " format and we want it to convert to equivalent "
          },
          {
            "Text": "DateTime",
            "AttrFlags": 2
          },
          {
            "Text": " object"
          }
        ]
      },
      {
        "id": "797fbe49-f2b5-4d3e-8d8d-f8e8efe1253e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527767286,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550204820000,
        "parent_id": "2374edcd-5f37-4385-b55c-38ca85d62d50",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "string str = \"08-07-2016 11:30:12 PM\";\nDateTime date = DateTime.ParseExact(str, \"MM-dd-yyyy hh:mm:ss tt\", CultureInfo.CurrentCulture);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "string str = \"08-07-2016 11:30:12 PM\";\nDateTime date = DateTime.ParseExact(str, \"MM-dd-yyyy hh:mm:ss tt\", CultureInfo.CurrentCulture);",
        "code_language": "C#"
      },
      {
        "id": "cae708f1-de81-46ba-8155-30f6ce29ef88",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527767287,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527767287,
        "parent_id": "2374edcd-5f37-4385-b55c-38ca85d62d50",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Convert a date time string to equivalent ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "DateTime",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " object without any specific culture format",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Convert a date time string to equivalent ",
            "AttrFlags": 1
          },
          {
            "Text": "DateTime",
            "AttrFlags": 3
          },
          {
            "Text": " object without any specific culture format",
            "AttrFlags": 1
          }
        ]
      },
      {
        "id": "5cf3787f-ae66-41d5-99e6-7140c1b15f8d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527767287,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527767287,
        "parent_id": "2374edcd-5f37-4385-b55c-38ca85d62d50",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s say we have a DateTime string in "
            ],
            [
              "dd-MM-yy hh:mm:ss tt",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " format and we want it to convert to equivalent "
            ],
            [
              "DateTime",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object, without any specific culture information"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s say we have a DateTime string in "
          },
          {
            "Text": "dd-MM-yy hh:mm:ss tt",
            "AttrFlags": 2
          },
          {
            "Text": " format and we want it to convert to equivalent "
          },
          {
            "Text": "DateTime",
            "AttrFlags": 2
          },
          {
            "Text": " object, without any specific culture information"
          }
        ]
      },
      {
        "id": "001b7448-71b2-48cc-a616-0ee3d696cfd9",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527767287,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550204820000,
        "parent_id": "2374edcd-5f37-4385-b55c-38ca85d62d50",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "string str = \"17-06-16 11:30:12 PM\";\nDateTime date = DateTime.ParseExact(str, \"dd-MM-yy hh:mm:ss tt\", CultureInfo.InvariantCulture);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "string str = \"17-06-16 11:30:12 PM\";\nDateTime date = DateTime.ParseExact(str, \"dd-MM-yy hh:mm:ss tt\", CultureInfo.InvariantCulture);",
        "code_language": "C#"
      },
      {
        "id": "2f745b80-f8b8-4552-a9be-44e97c428f59",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527767287,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527767287,
        "parent_id": "2374edcd-5f37-4385-b55c-38ca85d62d50",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Convert a date time string to equivalent DateTime object without any specific culture format with different format",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Convert a date time string to equivalent DateTime object without any specific culture format with different format",
            "AttrFlags": 1
          }
        ]
      },
      {
        "id": "9fdbf803-2ba0-410b-8c44-4aa24178c7d8",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527767287,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527767287,
        "parent_id": "2374edcd-5f37-4385-b55c-38ca85d62d50",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s say we have a Date string , example like ‘23-12-2016’ or ‘12/23/2016’ and we want it to convert to equivalent "
            ],
            [
              "DateTime",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object, without any specific culture information"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s say we have a Date string , example like ‘23-12-2016’ or ‘12/23/2016’ and we want it to convert to equivalent "
          },
          {
            "Text": "DateTime",
            "AttrFlags": 2
          },
          {
            "Text": " object, without any specific culture information"
          }
        ]
      },
      {
        "id": "80292150-8821-456b-bade-0569506a9f19",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527767287,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550204820000,
        "parent_id": "2374edcd-5f37-4385-b55c-38ca85d62d50",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "string date =  '23-12-2016' or date = 12/23/2016';\nstring[] formats = new string[] {\"dd-MM-yyyy\",\"MM/dd/yyyy\"}; // even can add more possible formats.\nDateTime date = DateTime.ParseExact(date,formats, CultureInfo.InvariantCulture,DateTimeStyles.None);"
            ]
          ]
        },
        "type": "code",
        "version": 5,
        "code": "string date =  '23-12-2016' or date = 12/23/2016';\nstring[] formats = new string[] {\"dd-MM-yyyy\",\"MM/dd/yyyy\"}; // even can add more possible formats.\nDateTime date = DateTime.ParseExact(date,formats, CultureInfo.InvariantCulture,DateTimeStyles.None);",
        "code_language": "C#"
      },
      {
        "id": "298f9acc-88ba-4aea-8154-91643f7602e2",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527767287,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527767287,
        "parent_id": "2374edcd-5f37-4385-b55c-38ca85d62d50",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "NOTE : ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "System.Globalization",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " needs to be added for CultureInfo Class",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "NOTE : ",
            "AttrFlags": 1
          },
          {
            "Text": "System.Globalization",
            "AttrFlags": 3
          },
          {
            "Text": " needs to be added for CultureInfo Class",
            "AttrFlags": 1
          }
        ]
      }
    ],
    "title": "DateTime.ParseExactStringStringIFormatProvider",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}