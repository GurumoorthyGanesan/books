{
  "ID": "8516b4f7-7ac0-4bb8-a035-fb152d60f55e",
  "Root": {
    "id": "8516b4f7-7ac0-4bb8-a035-fb152d60f55e",
    "alive": true,
    "content": [
      "dadc34f8-eec2-4aa2-8772-436accc77696",
      "50c9f589-bbd9-452e-9d9a-3ff38dbb27b8",
      "8dedf685-153f-40cb-8414-f560ff832e0a",
      "ac18a745-c488-4779-bcb9-12d48f20970c",
      "51c89bfd-075d-4166-a6f6-1cb28fdca6b0",
      "a3f1124d-b14f-49f6-a2f1-e77cd0a297cd",
      "f0a7da89-0858-45c5-bd59-0a9e3337f905"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549529862657,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550222220000,
    "parent_id": "88aef988-965a-4112-8cce-4b4d068e95b6",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Authenticated SSL LDAP connection SSL cert does not match reverse DNS"
        ]
      ]
    },
    "type": "page",
    "version": 14,
    "content_resolved": [
      {
        "id": "dadc34f8-eec2-4aa2-8772-436accc77696",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529862653,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529862653,
        "parent_id": "8516b4f7-7ac0-4bb8-a035-fb152d60f55e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Set up some constants for the server and authentication information. Assuming LDAPv3, but it’s easy enough to change that."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Set up some constants for the server and authentication information. Assuming LDAPv3, but it’s easy enough to change that."
          }
        ]
      },
      {
        "id": "50c9f589-bbd9-452e-9d9a-3ff38dbb27b8",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529862656,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550222160000,
        "parent_id": "8516b4f7-7ac0-4bb8-a035-fb152d60f55e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "// Authentication, and the name of the server.\nprivate const string LDAPUser = \"cn=example:app:mygroup:accts,ou=Applications,dc=example,dc=com\";\nprivate readonly char[] password = { 'p', 'a', 's', 's', 'w', 'o', 'r', 'd' };\nprivate const string TargetServer = \"ldap.example.com\";\n\n// Specific to your company. Might start \"cn=manager\" instead of \"ou=people\", for example.\nprivate const string CompanyDN = \"ou=people,dc=example,dc=com\";"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "// Authentication, and the name of the server.\nprivate const string LDAPUser = \"cn=example:app:mygroup:accts,ou=Applications,dc=example,dc=com\";\nprivate readonly char[] password = { 'p', 'a', 's', 's', 'w', 'o', 'r', 'd' };\nprivate const string TargetServer = \"ldap.example.com\";\n\n// Specific to your company. Might start \"cn=manager\" instead of \"ou=people\", for example.\nprivate const string CompanyDN = \"ou=people,dc=example,dc=com\";",
        "code_language": "C#"
      },
      {
        "id": "8dedf685-153f-40cb-8414-f560ff832e0a",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529862657,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529862657,
        "parent_id": "8516b4f7-7ac0-4bb8-a035-fb152d60f55e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Actually create the connection with three parts: an LdapDirectoryIdentifier (the server), and NetworkCredentials."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Actually create the connection with three parts: an LdapDirectoryIdentifier (the server), and NetworkCredentials."
          }
        ]
      },
      {
        "id": "ac18a745-c488-4779-bcb9-12d48f20970c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529862657,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550222160000,
        "parent_id": "8516b4f7-7ac0-4bb8-a035-fb152d60f55e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "// Configure server and port. LDAP w/ SSL, aka LDAPS, uses port 636.\n// If you don't have SSL, don't give it the SSL port. \nLdapDirectoryIdentifier identifier = new LdapDirectoryIdentifier(TargetServer, 636);\n\n// Configure network credentials (userid and password)\nvar secureString = new SecureString();\nforeach (var character in password)\n        secureString.AppendChar(character);\nNetworkCredential creds = new NetworkCredential(LDAPUser, secureString);\n\n// Actually create the connection\nLdapConnection connection = new LdapConnection(identifier, creds)\n{\n    AuthType = AuthType.Basic, \n    SessionOptions =\n    {\n        ProtocolVersion = 3,\n        SecureSocketLayer = true\n    }\n};\n\n// Override SChannel reverse DNS lookup.\n// This gets us past the \"The LDAP server is unavailable.\" exception\n// Could be \n//    connection.SessionOptions.VerifyServerCertificate += { return true; };\n// but some certificate validation is probably good.\nconnection.SessionOptions.VerifyServerCertificate +=\n    (sender, certificate) =\u003e certificate.Subject.Contains(string.Format(\"CN={0},\", TargetServer));"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "// Configure server and port. LDAP w/ SSL, aka LDAPS, uses port 636.\n// If you don't have SSL, don't give it the SSL port. \nLdapDirectoryIdentifier identifier = new LdapDirectoryIdentifier(TargetServer, 636);\n\n// Configure network credentials (userid and password)\nvar secureString = new SecureString();\nforeach (var character in password)\n        secureString.AppendChar(character);\nNetworkCredential creds = new NetworkCredential(LDAPUser, secureString);\n\n// Actually create the connection\nLdapConnection connection = new LdapConnection(identifier, creds)\n{\n    AuthType = AuthType.Basic, \n    SessionOptions =\n    {\n        ProtocolVersion = 3,\n        SecureSocketLayer = true\n    }\n};\n\n// Override SChannel reverse DNS lookup.\n// This gets us past the \"The LDAP server is unavailable.\" exception\n// Could be \n//    connection.SessionOptions.VerifyServerCertificate += { return true; };\n// but some certificate validation is probably good.\nconnection.SessionOptions.VerifyServerCertificate +=\n    (sender, certificate) =\u003e certificate.Subject.Contains(string.Format(\"CN={0},\", TargetServer));",
        "code_language": "C#"
      },
      {
        "id": "51c89bfd-075d-4166-a6f6-1cb28fdca6b0",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529862657,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529862657,
        "parent_id": "8516b4f7-7ac0-4bb8-a035-fb152d60f55e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Use the LDAP server, e.g. search for someone by userid for all objectClass values. The objectClass is present to demonstrates a compound search: The ampersand is the boolean “and” operator for the two query clauses."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Use the LDAP server, e.g. search for someone by userid for all objectClass values. The objectClass is present to demonstrates a compound search: The ampersand is the boolean “and” operator for the two query clauses."
          }
        ]
      },
      {
        "id": "a3f1124d-b14f-49f6-a2f1-e77cd0a297cd",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529862657,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550222220000,
        "parent_id": "8516b4f7-7ac0-4bb8-a035-fb152d60f55e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "SearchRequest searchRequest = new SearchRequest(\n        CompanyDN, \n        string.Format((\u0026(objectClass=*)(uid={0})), uid), \n        SearchScope.Subtree,\n        null\n);\n\n// Look at your results\nforeach (SearchResultEntry entry in searchResponse.Entries) {\n    // do something\n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "SearchRequest searchRequest = new SearchRequest(\n        CompanyDN, \n        string.Format((\u0026(objectClass=*)(uid={0})), uid), \n        SearchScope.Subtree,\n        null\n);\n\n// Look at your results\nforeach (SearchResultEntry entry in searchResponse.Entries) {\n    // do something\n}",
        "code_language": "C#"
      },
      {
        "id": "f0a7da89-0858-45c5-bd59-0a9e3337f905",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550222220000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550222220000,
        "parent_id": "8516b4f7-7ac0-4bb8-a035-fb152d60f55e",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "Authenticated SSL LDAP connection SSL cert does not match reverse DNS",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}