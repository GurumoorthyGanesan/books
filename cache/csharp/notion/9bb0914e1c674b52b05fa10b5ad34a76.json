{
  "ID": "9bb0914e-1c67-4b52-b05f-a10b5ad34a76",
  "Root": {
    "alive": true,
    "content": [
      "e45cd52a-ef87-45b9-9f3c-8d5f8cff3545",
      "c8436712-247c-4d65-8d33-d94cdffba9e6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549529103535,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "9bb0914e-1c67-4b52-b05f-a10b5ad34a76",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550216700000,
    "parent_id": "9d39eeb7-5ffe-4396-b61b-ad7f2208347d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Partial classes"
        ]
      ]
    },
    "type": "page",
    "version": 13,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529103533,
        "id": "e45cd52a-ef87-45b9-9f3c-8d5f8cff3545",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529103533,
        "parent_id": "9bb0914e-1c67-4b52-b05f-a10b5ad34a76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Partial classes provide an ability to split class declaration (usually into separate files). A common problem that can be solved with partial classes is allowing users to modify auto-generated code without fearing that their changes will be overwritten if the code is regenerated. Also multiple developers can work on same class or methods."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Partial classes provide an ability to split class declaration (usually into separate files). A common problem that can be solved with partial classes is allowing users to modify auto-generated code without fearing that their changes will be overwritten if the code is regenerated. Also multiple developers can work on same class or methods."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550216718315,
        "id": "c8436712-247c-4d65-8d33-d94cdffba9e6",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550216700000,
        "parent_id": "9bb0914e-1c67-4b52-b05f-a10b5ad34a76",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "using System;\n\nnamespace PartialClassAndMethods\n{\n    public partial class PartialClass\n    {\n        public void ExampleMethod() {\n            Console.WriteLine(\"Method call from the first declaration.\");\n        }\n    }\n\n    public partial class PartialClass\n    {\n        public void AnotherExampleMethod()\n        {\n            Console.WriteLine(\"Method call from the second declaration.\");\n        }\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            PartialClass partial = new PartialClass();\n            partial.ExampleMethod(); // outputs \"Method call from the first declaration.\"\n            partial.AnotherExampleMethod(); // outputs \"Method call from the second declaration.\"\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "using System;\n\nnamespace PartialClassAndMethods\n{\n    public partial class PartialClass\n    {\n        public void ExampleMethod() {\n            Console.WriteLine(\"Method call from the first declaration.\");\n        }\n    }\n\n    public partial class PartialClass\n    {\n        public void AnotherExampleMethod()\n        {\n            Console.WriteLine(\"Method call from the second declaration.\");\n        }\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            PartialClass partial = new PartialClass();\n            partial.ExampleMethod(); // outputs \"Method call from the first declaration.\"\n            partial.AnotherExampleMethod(); // outputs \"Method call from the second declaration.\"\n        }\n    }\n}",
        "code_language": "C#"
      }
    ],
    "title": "Partial classes",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}