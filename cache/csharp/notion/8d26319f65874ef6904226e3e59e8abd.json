{
  "ID": "8d26319f-6587-4ef6-9042-26e3e59e8abd",
  "Root": {
    "id": "8d26319f-6587-4ef6-9042-26e3e59e8abd",
    "alive": true,
    "content": [
      "b1697060-1e54-48e6-b296-178d7f8db301",
      "d4142b44-6edd-4bd3-8c49-07a382938425",
      "e70a03fc-a869-4457-8259-1166968725e1",
      "6f0fb9b0-bec0-476a-b0dc-8346576b981b",
      "4c2a7ce2-e9a8-4907-9998-5881cf78bdd6",
      "a3117413-2214-4a67-92f5-3d35a17fc2cc",
      "d40723fc-39f9-45aa-b4f8-3ca1a3a44b81",
      "a8fb4156-2fe5-4c77-b355-67a41f67eee3",
      "b298088c-c882-43c4-8d3b-ee12496899de",
      "661015e4-74c7-4dae-9e13-5317442c7c0a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549528453255,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550211420000,
    "parent_id": "eee4787e-f48e-4f42-9f08-9a1d031866f9",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "LINQ Casting operations"
        ]
      ]
    },
    "type": "page",
    "version": 12,
    "content_resolved": [
      {
        "id": "b1697060-1e54-48e6-b296-178d7f8db301",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528453251,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528453251,
        "parent_id": "8d26319f-6587-4ef6-9042-26e3e59e8abd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Suppose you have types like the following:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Suppose you have types like the following:"
          }
        ]
      },
      {
        "id": "d4142b44-6edd-4bd3-8c49-07a382938425",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528453253,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550211420000,
        "parent_id": "8d26319f-6587-4ef6-9042-26e3e59e8abd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "interface IThing {  }\nclass Thing : IThing {  }"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "interface IThing {  }\nclass Thing : IThing {  }",
        "code_language": "C#"
      },
      {
        "id": "e70a03fc-a869-4457-8259-1166968725e1",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528453254,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528453254,
        "parent_id": "8d26319f-6587-4ef6-9042-26e3e59e8abd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "LINQ allows you to create a projection that changes the compile-time generic type of an "
            ],
            [
              "IEnumerable\u003c\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " via the "
            ],
            [
              "Enumerable.Cast\u003c\u003e()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Enumerable.OfType\u003c\u003e()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " extension methods."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "LINQ allows you to create a projection that changes the compile-time generic type of an "
          },
          {
            "Text": "IEnumerable\u003c\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " via the "
          },
          {
            "Text": "Enumerable.Cast\u003c\u003e()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Enumerable.OfType\u003c\u003e()",
            "AttrFlags": 2
          },
          {
            "Text": " extension methods."
          }
        ]
      },
      {
        "id": "6f0fb9b0-bec0-476a-b0dc-8346576b981b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528453254,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550211420000,
        "parent_id": "8d26319f-6587-4ef6-9042-26e3e59e8abd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "IEnumerable\u003cIThing\u003e things = new IThing[] {new Thing()};\nIEnumerable\u003cThing\u003e things2 = things.Cast\u003cThing\u003e();\nIEnumerable\u003cThing\u003e things3 = things.OfType\u003cThing\u003e();"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "IEnumerable\u003cIThing\u003e things = new IThing[] {new Thing()};\nIEnumerable\u003cThing\u003e things2 = things.Cast\u003cThing\u003e();\nIEnumerable\u003cThing\u003e things3 = things.OfType\u003cThing\u003e();",
        "code_language": "C#"
      },
      {
        "id": "4c2a7ce2-e9a8-4907-9998-5881cf78bdd6",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528453254,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528453254,
        "parent_id": "8d26319f-6587-4ef6-9042-26e3e59e8abd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When "
            ],
            [
              "things2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is evaluated, the "
            ],
            [
              "Cast\u003c\u003e()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method will try to cast all of the values in "
            ],
            [
              "things",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " into "
            ],
            [
              "Thing",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s. If it encounters a value that cannot be cast, an "
            ],
            [
              "InvalidCastException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be thrown."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When "
          },
          {
            "Text": "things2",
            "AttrFlags": 2
          },
          {
            "Text": " is evaluated, the "
          },
          {
            "Text": "Cast\u003c\u003e()",
            "AttrFlags": 2
          },
          {
            "Text": " method will try to cast all of the values in "
          },
          {
            "Text": "things",
            "AttrFlags": 2
          },
          {
            "Text": " into "
          },
          {
            "Text": "Thing",
            "AttrFlags": 2
          },
          {
            "Text": "s. If it encounters a value that cannot be cast, an "
          },
          {
            "Text": "InvalidCastException",
            "AttrFlags": 2
          },
          {
            "Text": " will be thrown."
          }
        ]
      },
      {
        "id": "a3117413-2214-4a67-92f5-3d35a17fc2cc",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528453254,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528453254,
        "parent_id": "8d26319f-6587-4ef6-9042-26e3e59e8abd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When "
            ],
            [
              "things3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is evaluated, the "
            ],
            [
              "OfType\u003c\u003e()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method will do the same, except that if it encounters a value that cannot be cast, it will simply omit that value rather than throw an exception."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When "
          },
          {
            "Text": "things3",
            "AttrFlags": 2
          },
          {
            "Text": " is evaluated, the "
          },
          {
            "Text": "OfType\u003c\u003e()",
            "AttrFlags": 2
          },
          {
            "Text": " method will do the same, except that if it encounters a value that cannot be cast, it will simply omit that value rather than throw an exception."
          }
        ]
      },
      {
        "id": "d40723fc-39f9-45aa-b4f8-3ca1a3a44b81",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528453254,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528453254,
        "parent_id": "8d26319f-6587-4ef6-9042-26e3e59e8abd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Due to the generic type of these methods, they cannot invoke Conversion Operators or perform numeric conversions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Due to the generic type of these methods, they cannot invoke Conversion Operators or perform numeric conversions."
          }
        ]
      },
      {
        "id": "a8fb4156-2fe5-4c77-b355-67a41f67eee3",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528453254,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550211420000,
        "parent_id": "8d26319f-6587-4ef6-9042-26e3e59e8abd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "double[] doubles = new[]{1,2,3}.Cast\u003cdouble\u003e().ToArray(); // Throws InvalidCastException"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "double[] doubles = new[]{1,2,3}.Cast\u003cdouble\u003e().ToArray(); // Throws InvalidCastException",
        "code_language": "C#"
      },
      {
        "id": "b298088c-c882-43c4-8d3b-ee12496899de",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528453255,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528453255,
        "parent_id": "8d26319f-6587-4ef6-9042-26e3e59e8abd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can simply perform a cast inside a "
            ],
            [
              ".Select()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as a workaround:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can simply perform a cast inside a "
          },
          {
            "Text": ".Select()",
            "AttrFlags": 2
          },
          {
            "Text": " as a workaround:"
          }
        ]
      },
      {
        "id": "661015e4-74c7-4dae-9e13-5317442c7c0a",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550211471875,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550211420000,
        "parent_id": "8d26319f-6587-4ef6-9042-26e3e59e8abd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "double[] doubles = new[]{1,2,3}.Select(i =\u003e (double)i).ToArray();"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "double[] doubles = new[]{1,2,3}.Select(i =\u003e (double)i).ToArray();",
        "code_language": "C#"
      }
    ],
    "title": "LINQ Casting operations",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}