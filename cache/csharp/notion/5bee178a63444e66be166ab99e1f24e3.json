{
  "ID": "5bee178a-6344-4e66-be16-6ab99e1f24e3",
  "Root": {
    "id": "5bee178a-6344-4e66-be16-6ab99e1f24e3",
    "alive": true,
    "content": [
      "8a6004b2-c3b8-4fc9-aa5a-e11954d49fd2",
      "e5cb58c5-b650-4b24-a6fe-3123775647b1",
      "44329390-4012-4e7e-a41d-ce98f2a2bbf9",
      "addc6d86-bff1-47fc-9aea-c251e7449e52"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549526960373,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550135460000,
    "parent_id": "852bbb3c-ca26-4ee2-ae32-0e5376b5a38e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using notation for flags"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "id": "8a6004b2-c3b8-4fc9-aa5a-e11954d49fd2",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526960370,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526960370,
        "parent_id": "5bee178a-6344-4e66-be16-6ab99e1f24e3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The left-shift operator ("
            ],
            [
              "\u003c\u003c",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") can be used in flag enum declarations to ensure that each flag has exactly one "
            ],
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in binary representation, as flags should."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The left-shift operator ("
          },
          {
            "Text": "\u003c\u003c",
            "AttrFlags": 2
          },
          {
            "Text": ") can be used in flag enum declarations to ensure that each flag has exactly one "
          },
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": " in binary representation, as flags should."
          }
        ]
      },
      {
        "id": "e5cb58c5-b650-4b24-a6fe-3123775647b1",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526960373,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526960373,
        "parent_id": "5bee178a-6344-4e66-be16-6ab99e1f24e3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This also helps to improve readability of large enums with plenty of flags in them."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This also helps to improve readability of large enums with plenty of flags in them."
          }
        ]
      },
      {
        "id": "44329390-4012-4e7e-a41d-ce98f2a2bbf9",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526960373,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550135460000,
        "parent_id": "5bee178a-6344-4e66-be16-6ab99e1f24e3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "[Flags]\npublic enum MyEnum \n{\n    None  = 0,\n    Flag1 = 1 \u003c\u003c 0,\n    Flag2 = 1 \u003c\u003c 1,\n    Flag3 = 1 \u003c\u003c 2,\n    Flag4 = 1 \u003c\u003c 3,\n    Flag5 = 1 \u003c\u003c 4,\n    ...\n    Flag31 = 1 \u003c\u003c 30\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "[Flags]\npublic enum MyEnum \n{\n    None  = 0,\n    Flag1 = 1 \u003c\u003c 0,\n    Flag2 = 1 \u003c\u003c 1,\n    Flag3 = 1 \u003c\u003c 2,\n    Flag4 = 1 \u003c\u003c 3,\n    Flag5 = 1 \u003c\u003c 4,\n    ...\n    Flag31 = 1 \u003c\u003c 30\n}",
        "code_language": "C#"
      },
      {
        "id": "addc6d86-bff1-47fc-9aea-c251e7449e52",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526960373,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526960373,
        "parent_id": "5bee178a-6344-4e66-be16-6ab99e1f24e3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is obvious now that "
            ],
            [
              "MyEnum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " contains proper flags only and not any messy stuff like "
            ],
            [
              "Flag30 = 1073741822",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (or 111111111111111111111111111110 in binary) which is inappropriate."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is obvious now that "
          },
          {
            "Text": "MyEnum",
            "AttrFlags": 2
          },
          {
            "Text": " contains proper flags only and not any messy stuff like "
          },
          {
            "Text": "Flag30 = 1073741822",
            "AttrFlags": 2
          },
          {
            "Text": " (or 111111111111111111111111111110 in binary) which is inappropriate."
          }
        ]
      }
    ],
    "title": "Using notation for flags",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}