{
  "ID": "9f8bbe22-3d2b-4dbe-b66c-70dcd9051c14",
  "Root": {
    "id": "9f8bbe22-3d2b-4dbe-b66c-70dcd9051c14",
    "alive": true,
    "content": [
      "9c934596-3098-4b1d-8429-6247cfd196db",
      "005bcf3d-4ae8-4031-9213-10e1c9236d76",
      "cdcd839a-835b-4311-878b-194b435d607e",
      "1770b4b2-696e-470e-afbd-33fcb90b6665",
      "e7a55299-b3bc-483a-8349-738d32bd916b",
      "160e0539-2840-4a17-b7f3-bac454cad3b8",
      "2af95283-e33b-447f-b1a1-6dd296aaf9dc",
      "70e1d087-e5da-455e-9203-4788ed2199f9",
      "e56c1f05-e905-4d0f-b47b-5c42cdb0000e",
      "147fe3d7-94c0-4a3a-a2aa-69dfbd66ec50",
      "8665559a-f239-4a46-8e00-17835abcae46"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525350215,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549612080000,
    "parent_id": "625ceab9-a31c-417d-842a-19793514588c",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Multiple using statements with one block"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "id": "9c934596-3098-4b1d-8429-6247cfd196db",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525350209,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525350209,
        "parent_id": "9f8bbe22-3d2b-4dbe-b66c-70dcd9051c14",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is possible to use multiple nested "
            ],
            [
              "using",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statements without added multiple levels of nested braces. For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is possible to use multiple nested "
          },
          {
            "Text": "using",
            "AttrFlags": 2
          },
          {
            "Text": " statements without added multiple levels of nested braces. For example:"
          }
        ]
      },
      {
        "id": "005bcf3d-4ae8-4031-9213-10e1c9236d76",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525350212,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549612080000,
        "parent_id": "9f8bbe22-3d2b-4dbe-b66c-70dcd9051c14",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "using (var input = File.OpenRead(\"input.txt\"))\n{\n    using (var output = File.OpenWrite(\"output.txt\"))\n    {\n        input.CopyTo(output);\n    } // output is disposed here\n} // input is disposed here"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "using (var input = File.OpenRead(\"input.txt\"))\n{\n    using (var output = File.OpenWrite(\"output.txt\"))\n    {\n        input.CopyTo(output);\n    } // output is disposed here\n} // input is disposed here",
        "code_language": "C#"
      },
      {
        "id": "cdcd839a-835b-4311-878b-194b435d607e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525350212,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525350212,
        "parent_id": "9f8bbe22-3d2b-4dbe-b66c-70dcd9051c14",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An alternative is to write:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An alternative is to write:"
          }
        ]
      },
      {
        "id": "1770b4b2-696e-470e-afbd-33fcb90b6665",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525350212,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549612080000,
        "parent_id": "9f8bbe22-3d2b-4dbe-b66c-70dcd9051c14",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "using (var input = File.OpenRead(\"input.txt\"))\nusing (var output = File.OpenWrite(\"output.txt\"))\n{\n    input.CopyTo(output);\n} // output and then input are disposed here"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "using (var input = File.OpenRead(\"input.txt\"))\nusing (var output = File.OpenWrite(\"output.txt\"))\n{\n    input.CopyTo(output);\n} // output and then input are disposed here",
        "code_language": "C#"
      },
      {
        "id": "e7a55299-b3bc-483a-8349-738d32bd916b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525350212,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525350212,
        "parent_id": "9f8bbe22-3d2b-4dbe-b66c-70dcd9051c14",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Which is exactly equivalent to the first example."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Which is exactly equivalent to the first example."
          }
        ]
      },
      {
        "id": "160e0539-2840-4a17-b7f3-bac454cad3b8",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525350214,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525350214,
        "parent_id": "9f8bbe22-3d2b-4dbe-b66c-70dcd9051c14",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note:",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " Nested "
            ],
            [
              "using",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statements might trigger Microsoft Code Analysis rule "
            ],
            [
              "CS2002",
              [
                [
                  "a",
                  "https://msdn.microsoft.com/en-us/library/ms182334.aspx"
                ]
              ]
            ],
            [
              " (see "
            ],
            [
              "this answer",
              [
                [
                  "a",
                  "http://stackoverflow.com/a/22323027/501011"
                ]
              ]
            ],
            [
              " for clarification) and generate a warning. As explained in the linked answer, it is generally safe to nest "
            ],
            [
              "using",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statements."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note:",
            "AttrFlags": 4
          },
          {
            "Text": " Nested "
          },
          {
            "Text": "using",
            "AttrFlags": 2
          },
          {
            "Text": " statements might trigger Microsoft Code Analysis rule "
          },
          {
            "Text": "CS2002",
            "Link": "https://msdn.microsoft.com/en-us/library/ms182334.aspx"
          },
          {
            "Text": " (see "
          },
          {
            "Text": "this answer",
            "Link": "http://stackoverflow.com/a/22323027/501011"
          },
          {
            "Text": " for clarification) and generate a warning. As explained in the linked answer, it is generally safe to nest "
          },
          {
            "Text": "using",
            "AttrFlags": 2
          },
          {
            "Text": " statements."
          }
        ]
      },
      {
        "id": "2af95283-e33b-447f-b1a1-6dd296aaf9dc",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525350214,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525350214,
        "parent_id": "9f8bbe22-3d2b-4dbe-b66c-70dcd9051c14",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When the types within the "
            ],
            [
              "using",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement are of the same type you can comma-delimit them and specify the type only once (though this is uncommon):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When the types within the "
          },
          {
            "Text": "using",
            "AttrFlags": 2
          },
          {
            "Text": " statement are of the same type you can comma-delimit them and specify the type only once (though this is uncommon):"
          }
        ]
      },
      {
        "id": "70e1d087-e5da-455e-9203-4788ed2199f9",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525350214,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549612080000,
        "parent_id": "9f8bbe22-3d2b-4dbe-b66c-70dcd9051c14",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "using (FileStream file = File.Open(\"MyFile.txt\"), file2 = File.Open(\"MyFile2.txt\"))\n{\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "using (FileStream file = File.Open(\"MyFile.txt\"), file2 = File.Open(\"MyFile2.txt\"))\n{\n}",
        "code_language": "C#"
      },
      {
        "id": "e56c1f05-e905-4d0f-b47b-5c42cdb0000e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525350215,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525350215,
        "parent_id": "9f8bbe22-3d2b-4dbe-b66c-70dcd9051c14",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This can also be used when the types have a shared hierarchy:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This can also be used when the types have a shared hierarchy:"
          }
        ]
      },
      {
        "id": "147fe3d7-94c0-4a3a-a2aa-69dfbd66ec50",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525350215,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549612080000,
        "parent_id": "9f8bbe22-3d2b-4dbe-b66c-70dcd9051c14",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "using (Stream file = File.Open(\"MyFile.txt\"), data = new MemoryStream())\n{\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "using (Stream file = File.Open(\"MyFile.txt\"), data = new MemoryStream())\n{\n}",
        "code_language": "C#"
      },
      {
        "id": "8665559a-f239-4a46-8e00-17835abcae46",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525350215,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525350215,
        "parent_id": "9f8bbe22-3d2b-4dbe-b66c-70dcd9051c14",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "var",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword "
            ],
            [
              "cannot",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " be used in the above example. A compilation error would occur. Even the comma separated declaration won’t work when the declared variables have types from different hierarchies."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "var",
            "AttrFlags": 2
          },
          {
            "Text": " keyword "
          },
          {
            "Text": "cannot",
            "AttrFlags": 4
          },
          {
            "Text": " be used in the above example. A compilation error would occur. Even the comma separated declaration won’t work when the declared variables have types from different hierarchies."
          }
        ]
      }
    ],
    "title": "Multiple using statements with one block",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}