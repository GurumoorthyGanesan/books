{
  "ID": "ff2806ac-d46e-4af3-bc08-c020aada296d",
  "Root": {
    "alive": true,
    "content": [
      "b5d4b3b1-5677-4711-b75e-31a985a6f408",
      "eb74dfeb-77ab-4831-ba9b-d0a7326ff055",
      "42ff664a-c296-401a-9467-34831831334b",
      "67a73d68-5937-422a-bc14-be7326d0227c",
      "13cb69fe-8cb0-4aa0-a284-7e4308b04bb2",
      "ad4df296-0daf-49d0-b4bb-eccb5fc52641",
      "553d6396-de5d-4192-8e01-56f8e04cd0da",
      "fe31fa3a-8aba-4cd7-b043-59d9150d429b",
      "e1f49aa5-d59b-4115-818e-6872884b42fe"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549529732283,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ff2806ac-d46e-4af3-bc08-c020aada296d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549798620000,
    "parent_id": "3f90ad64-662d-4026-9438-8f1c858f7ce9",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Semantic model"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529732279,
        "id": "b5d4b3b1-5677-4711-b75e-31a985a6f408",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529732279,
        "parent_id": "ff2806ac-d46e-4af3-bc08-c020aada296d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A "
            ],
            [
              "Semantic Model",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " offers a deeper level of interpretation and insight of code compare to a syntax tree. Where syntax trees can tell the names of variables, semantic models also give the type and all references. Syntax trees notice method calls, but semantic models give references to the precise location the method is declared (after overload resolution has been applied.)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A "
          },
          {
            "Text": "Semantic Model",
            "AttrFlags": 1
          },
          {
            "Text": " offers a deeper level of interpretation and insight of code compare to a syntax tree. Where syntax trees can tell the names of variables, semantic models also give the type and all references. Syntax trees notice method calls, but semantic models give references to the precise location the method is declared (after overload resolution has been applied.)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529732282,
        "id": "eb74dfeb-77ab-4831-ba9b-d0a7326ff055",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529732282,
        "parent_id": "ff2806ac-d46e-4af3-bc08-c020aada296d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var workspace = Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create();\nvar sln = await workspace.OpenSolutionAsync(solutionFilePath);\nvar project = sln.Projects.First();\nvar compilation = await project.GetCompilationAsync();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var workspace = Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create();\nvar sln = await workspace.OpenSolutionAsync(solutionFilePath);\nvar project = sln.Projects.First();\nvar compilation = await project.GetCompilationAsync();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529732282,
        "id": "42ff664a-c296-401a-9467-34831831334b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529732282,
        "parent_id": "ff2806ac-d46e-4af3-bc08-c020aada296d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "foreach (var syntaxTree in compilation.SyntaxTrees)\n{\n    var root = await syntaxTree.GetRootAsync();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "foreach (var syntaxTree in compilation.SyntaxTrees)\n{\n    var root = await syntaxTree.GetRootAsync();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529732282,
        "id": "67a73d68-5937-422a-bc14-be7326d0227c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529732282,
        "parent_id": "ff2806ac-d46e-4af3-bc08-c020aada296d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var declaredIdentifiers = root.DescendantNodes()\n        .Where(an =\u003e an is VariableDeclaratorSyntax)\n        .Cast\u003cVariableDeclaratorSyntax\u003e();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var declaredIdentifiers = root.DescendantNodes()\n        .Where(an =\u003e an is VariableDeclaratorSyntax)\n        .Cast\u003cVariableDeclaratorSyntax\u003e();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529732282,
        "id": "13cb69fe-8cb0-4aa0-a284-7e4308b04bb2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529732282,
        "parent_id": "ff2806ac-d46e-4af3-bc08-c020aada296d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "foreach (var di in declaredIdentifiers)\n    {\n        Console.WriteLine(di.Identifier);\n        // =\u003e \"root\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "foreach (var di in declaredIdentifiers)\n    {\n        Console.WriteLine(di.Identifier);\n        // =\u003e \"root\"",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529732283,
        "id": "ad4df296-0daf-49d0-b4bb-eccb5fc52641",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529732283,
        "parent_id": "ff2806ac-d46e-4af3-bc08-c020aada296d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var variableSymbol = compilation\n            .GetSemanticModel(syntaxTree)\n            .GetDeclaredSymbol(di) as ILocalSymbol;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var variableSymbol = compilation\n            .GetSemanticModel(syntaxTree)\n            .GetDeclaredSymbol(di) as ILocalSymbol;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529732283,
        "id": "553d6396-de5d-4192-8e01-56f8e04cd0da",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529732283,
        "parent_id": "ff2806ac-d46e-4af3-bc08-c020aada296d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Console.WriteLine(variableSymbol.Type);\n        // =\u003e \"Microsoft.CodeAnalysis.SyntaxNode\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Console.WriteLine(variableSymbol.Type);\n        // =\u003e \"Microsoft.CodeAnalysis.SyntaxNode\"",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529732283,
        "id": "fe31fa3a-8aba-4cd7-b043-59d9150d429b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529732283,
        "parent_id": "ff2806ac-d46e-4af3-bc08-c020aada296d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var references = await SymbolFinder.FindReferencesAsync(variableSymbol, sln);\n        foreach (var reference in references)\n        {\n            foreach (var loc in reference.Locations)\n            {\n                Console.WriteLine(loc.Location.SourceSpan);\n                // =\u003e \"[1375..1379)\"\n            }\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var references = await SymbolFinder.FindReferencesAsync(variableSymbol, sln);\n        foreach (var reference in references)\n        {\n            foreach (var loc in reference.Locations)\n            {\n                Console.WriteLine(loc.Location.SourceSpan);\n                // =\u003e \"[1375..1379)\"\n            }\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529732283,
        "id": "e1f49aa5-d59b-4115-818e-6872884b42fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529732283,
        "parent_id": "ff2806ac-d46e-4af3-bc08-c020aada296d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This outputs a list of local variables using a syntax tree. Then it consults the semantic model to get the full type name and find all references of every variable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This outputs a list of local variables using a syntax tree. Then it consults the semantic model to get the full type name and find all references of every variable."
          }
        ]
      }
    ],
    "title": "Semantic model",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}