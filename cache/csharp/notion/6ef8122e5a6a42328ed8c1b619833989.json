{
  "ID": "6ef8122e-5a6a-4232-8ed8-c1b619833989",
  "Root": {
    "id": "6ef8122e-5a6a-4232-8ed8-c1b619833989",
    "alive": true,
    "content": [
      "0d9a2d76-5d53-45d4-b754-45f1f3ab6964",
      "129d8e76-0b66-4b43-bc2c-0619c757c220",
      "007502fe-00d5-488c-8666-57436fad377a",
      "4c2271e4-793f-48c3-89e7-2127ec403d7f",
      "42dc87f2-e754-45f8-8888-b6db3f8f097f",
      "acdc8057-2482-4553-a8f3-10ae1f2c0d05",
      "209a4e1e-cbbb-46d9-a5f9-db87979136b9",
      "a2f21bef-341a-44e2-80d9-483b44b1b38c",
      "7585ebcd-f161-43c3-93cd-269447578503",
      "1631245d-163b-429c-8efb-40ae7db245ae"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549526110454,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550127000000,
    "parent_id": "a34c1078-f01c-44b1-b468-522f804fbc2d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "DefaultIfEmpty"
        ]
      ]
    },
    "type": "page",
    "version": 14,
    "content_resolved": [
      {
        "id": "0d9a2d76-5d53-45d4-b754-45f1f3ab6964",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526110450,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526110450,
        "parent_id": "6ef8122e-5a6a-4232-8ed8-c1b619833989",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "DefaultIfEmpty is used to return a Default Element if the Sequence contains no elements. This Element can be the Default of the Type or a user defined instance of that Type. Example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "DefaultIfEmpty is used to return a Default Element if the Sequence contains no elements. This Element can be the Default of the Type or a user defined instance of that Type. Example:"
          }
        ]
      },
      {
        "id": "129d8e76-0b66-4b43-bc2c-0619c757c220",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526110453,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550127000000,
        "parent_id": "6ef8122e-5a6a-4232-8ed8-c1b619833989",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "var chars = new List\u003cstring\u003e() { \"a\", \"b\", \"c\", \"d\" };\n\nchars.DefaultIfEmpty(\"N/A\").FirstOrDefault(); // returns \"a\";\n\nchars.Where(str =\u003e str.Length \u003e 1)\n     .DefaultIfEmpty(\"N/A\").FirstOrDefault(); // return \"N/A\"\n\nchars.Where(str =\u003e str.Length \u003e 1)\n        .DefaultIfEmpty().First(); // returns null;\n"
            ]
          ]
        },
        "type": "code",
        "version": 9,
        "code": "var chars = new List\u003cstring\u003e() { \"a\", \"b\", \"c\", \"d\" };\n\nchars.DefaultIfEmpty(\"N/A\").FirstOrDefault(); // returns \"a\";\n\nchars.Where(str =\u003e str.Length \u003e 1)\n     .DefaultIfEmpty(\"N/A\").FirstOrDefault(); // return \"N/A\"\n\nchars.Where(str =\u003e str.Length \u003e 1)\n        .DefaultIfEmpty().First(); // returns null;\n",
        "code_language": "C#"
      },
      {
        "id": "007502fe-00d5-488c-8666-57436fad377a",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526110453,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526110453,
        "parent_id": "6ef8122e-5a6a-4232-8ed8-c1b619833989",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Usage in Left Joins",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Usage in Left Joins",
            "AttrFlags": 1
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "id": "4c2271e4-793f-48c3-89e7-2127ec403d7f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526110453,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526110453,
        "parent_id": "6ef8122e-5a6a-4232-8ed8-c1b619833989",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With "
            ],
            [
              "DefaultIfEmpty",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " the traditional Linq Join can return a default object if no match was found. Thus acting as a SQL’s Left Join. Example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With "
          },
          {
            "Text": "DefaultIfEmpty",
            "AttrFlags": 2
          },
          {
            "Text": " the traditional Linq Join can return a default object if no match was found. Thus acting as a SQL’s Left Join. Example:"
          }
        ]
      },
      {
        "id": "42dc87f2-e754-45f8-8888-b6db3f8f097f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526110453,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550127000000,
        "parent_id": "6ef8122e-5a6a-4232-8ed8-c1b619833989",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "var leftSequence = new List\u003cint\u003e() { 99, 100, 5, 20, 102, 105 };\nvar rightSequence = new List\u003cchar\u003e() { 'a', 'b', 'c', 'i', 'd' };\n\nvar numbersAsChars = from l in leftSequence\n                     join r in rightSequence\n                     on l equals (int)r into leftJoin\n                     from result in leftJoin.DefaultIfEmpty('?')\n                     select new\n                     {\n                         Number = l,\n                         Character = result\n                     };\n\nforeach(var item in numbersAsChars)\n{\n    Console.WriteLine(\"Num = {0} ** Char = {1}\", item.Number, item.Character);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var leftSequence = new List\u003cint\u003e() { 99, 100, 5, 20, 102, 105 };\nvar rightSequence = new List\u003cchar\u003e() { 'a', 'b', 'c', 'i', 'd' };\n\nvar numbersAsChars = from l in leftSequence\n                     join r in rightSequence\n                     on l equals (int)r into leftJoin\n                     from result in leftJoin.DefaultIfEmpty('?')\n                     select new\n                     {\n                         Number = l,\n                         Character = result\n                     };\n\nforeach(var item in numbersAsChars)\n{\n    Console.WriteLine(\"Num = {0} ** Char = {1}\", item.Number, item.Character);\n}",
        "code_language": "C#"
      },
      {
        "id": "acdc8057-2482-4553-a8f3-10ae1f2c0d05",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526110454,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550127000000,
        "parent_id": "6ef8122e-5a6a-4232-8ed8-c1b619833989",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "ouput:"
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "ouput:"
          }
        ],
        "code_language": "Plain Text"
      },
      {
        "id": "209a4e1e-cbbb-46d9-a5f9-db87979136b9",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526110454,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526110454,
        "parent_id": "6ef8122e-5a6a-4232-8ed8-c1b619833989",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Num = 99         Char = c\nNum = 100        Char = d\nNum = 5          Char = ?\nNum = 20         Char = ?\nNum = 102        Char = ?\nNum = 105        Char = i"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Num = 99         Char = c\nNum = 100        Char = d\nNum = 5          Char = ?\nNum = 20         Char = ?\nNum = 102        Char = ?\nNum = 105        Char = i",
        "code_language": "Plain Text"
      },
      {
        "id": "a2f21bef-341a-44e2-80d9-483b44b1b38c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526110454,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526110454,
        "parent_id": "6ef8122e-5a6a-4232-8ed8-c1b619833989",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the case where a "
            ],
            [
              "DefaultIfEmpty",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is used (without specifying a default value) and that will result will no matching items on the right sequence one must make sure that the object is not "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " before accessing its properties. Otherwise it will result in a "
            ],
            [
              "NullReferenceException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the case where a "
          },
          {
            "Text": "DefaultIfEmpty",
            "AttrFlags": 2
          },
          {
            "Text": " is used (without specifying a default value) and that will result will no matching items on the right sequence one must make sure that the object is not "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": " before accessing its properties. Otherwise it will result in a "
          },
          {
            "Text": "NullReferenceException",
            "AttrFlags": 2
          },
          {
            "Text": ". Example:"
          }
        ]
      },
      {
        "id": "7585ebcd-f161-43c3-93cd-269447578503",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526110454,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550127000000,
        "parent_id": "6ef8122e-5a6a-4232-8ed8-c1b619833989",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "var leftSequence = new List\u003cint\u003e { 1, 2, 5 };\nvar rightSequence = new List\u003cdynamic\u003e()\n    {\n        new { Value = 1 },\n        new { Value = 2 },\n        new { Value = 3 },\n        new { Value = 4 },\n    };\n\nvar numbersAsChars = (from l in leftSequence\n                        join r in rightSequence\n                        on l equals r.Value into leftJoin\n                        from result in leftJoin.DefaultIfEmpty()\n                        select new\n                        {\n                            Left = l,\n                            // 5 will not have a matching object in the right so result \n                            // will be equal to null. \n                            // To avoid an error use:\n                            //    -  C# 6.0 or above - ?. \n                            //    -  Under           - result == null ? 0 : result.Value\n                            Right = result?.Value\n                        }).ToList();"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "var leftSequence = new List\u003cint\u003e { 1, 2, 5 };\nvar rightSequence = new List\u003cdynamic\u003e()\n    {\n        new { Value = 1 },\n        new { Value = 2 },\n        new { Value = 3 },\n        new { Value = 4 },\n    };\n\nvar numbersAsChars = (from l in leftSequence\n                        join r in rightSequence\n                        on l equals r.Value into leftJoin\n                        from result in leftJoin.DefaultIfEmpty()\n                        select new\n                        {\n                            Left = l,\n                            // 5 will not have a matching object in the right so result \n                            // will be equal to null. \n                            // To avoid an error use:\n                            //    -  C# 6.0 or above - ?. \n                            //    -  Under           - result == null ? 0 : result.Value\n                            Right = result?.Value\n                        }).ToList();",
        "code_language": "C#"
      },
      {
        "id": "1631245d-163b-429c-8efb-40ae7db245ae",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550127000000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550127000000,
        "parent_id": "6ef8122e-5a6a-4232-8ed8-c1b619833989",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "DefaultIfEmpty",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}