{
  "ID": "f3487756-9562-4e15-aac2-e11e2b6a6212",
  "Root": {
    "id": "f3487756-9562-4e15-aac2-e11e2b6a6212",
    "alive": true,
    "content": [
      "8d12fc8d-ba29-46a9-be38-5f17f7ec1d4f",
      "cc8c82cf-97a1-4582-8644-5c8e9c962929",
      "aa3bb239-9c61-4328-a61d-36cefea865e5",
      "95f759d5-f046-4ded-9ba9-f9e450abbd51",
      "81be8f56-3fce-4f02-88c5-e13cdacb27a7",
      "1366a926-a934-4ba3-ae66-1781ef7609f3",
      "e8e3ea27-c725-474b-9d16-146b823296de",
      "90bc3f08-a4d4-4f2a-81c8-c832bc52ce11",
      "108b57ff-57a9-4a22-be08-a210fe897f12",
      "1338471d-6986-4471-b59b-68b6c0f63c56",
      "6ac88f44-e98d-41b8-a02e-774532fc65d2",
      "f69aecae-5c6a-444b-be51-00c2f6965efb",
      "fe184810-b1cb-4064-a22f-b32b393a2d0c",
      "b29faee5-a4e1-4a93-9021-b9ccb38d2f1d",
      "7820ffa7-4509-41f6-a9f9-8ab386ca377c",
      "cc28562d-eea1-47ed-9f2f-eaceed1b33ad"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549527184541,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550136840000,
    "parent_id": "815daf49-ac2a-4123-8b19-67aa9afb3da8",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Declaring a delegate type"
        ]
      ]
    },
    "type": "page",
    "version": 13,
    "content_resolved": [
      {
        "id": "8d12fc8d-ba29-46a9-be38-5f17f7ec1d4f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527184536,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527184536,
        "parent_id": "f3487756-9562-4e15-aac2-e11e2b6a6212",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following syntax creates a "
            ],
            [
              "delegate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " type with name "
            ],
            [
              "NumberInOutDelegate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", representing a method which takes an "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and returns an "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following syntax creates a "
          },
          {
            "Text": "delegate",
            "AttrFlags": 2
          },
          {
            "Text": " type with name "
          },
          {
            "Text": "NumberInOutDelegate",
            "AttrFlags": 2
          },
          {
            "Text": ", representing a method which takes an "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " and returns an "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "cc8c82cf-97a1-4582-8644-5c8e9c962929",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527184539,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549785720000,
        "parent_id": "f3487756-9562-4e15-aac2-e11e2b6a6212",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public delegate int NumberInOutDelegate(int input);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public delegate int NumberInOutDelegate(int input);",
        "code_language": "C#"
      },
      {
        "id": "aa3bb239-9c61-4328-a61d-36cefea865e5",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527184539,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527184539,
        "parent_id": "f3487756-9562-4e15-aac2-e11e2b6a6212",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This can be used as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This can be used as follows:"
          }
        ]
      },
      {
        "id": "95f759d5-f046-4ded-9ba9-f9e450abbd51",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527184539,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550136840000,
        "parent_id": "f3487756-9562-4e15-aac2-e11e2b6a6212",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public static class Program\n{\n    static void Main()\n    {\n        NumberInOutDelegate square = MathDelegates.Square;\n        int answer1 = square(4); \n        Console.WriteLine(answer1); // Will output 16\n\n        NumberInOutDelegate cube = MathDelegates.Cube;\n        int answer2 = cube(4);\n        Console.WriteLine(answer2); // Will output 64            \n    }\n}\n\npublic static class MathDelegates\n{\n    static int Square (int x)\n    {\n        return x*x;\n    }\n\n    static int Cube (int x)\n    {\n        return x*x*x;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "public static class Program\n{\n    static void Main()\n    {\n        NumberInOutDelegate square = MathDelegates.Square;\n        int answer1 = square(4); \n        Console.WriteLine(answer1); // Will output 16\n\n        NumberInOutDelegate cube = MathDelegates.Cube;\n        int answer2 = cube(4);\n        Console.WriteLine(answer2); // Will output 64            \n    }\n}\n\npublic static class MathDelegates\n{\n    static int Square (int x)\n    {\n        return x*x;\n    }\n\n    static int Cube (int x)\n    {\n        return x*x*x;\n    }\n}",
        "code_language": "C#"
      },
      {
        "id": "81be8f56-3fce-4f02-88c5-e13cdacb27a7",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527184539,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527184539,
        "parent_id": "f3487756-9562-4e15-aac2-e11e2b6a6212",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "example",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " delegate instance is executed in the same way as the "
            ],
            [
              "Square",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method. A delegate instance literally acts as a delegate for the caller: the caller invokes the delegate, and then the delegate calls the target method. This indirection decouples the caller from the target method."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "example",
            "AttrFlags": 2
          },
          {
            "Text": " delegate instance is executed in the same way as the "
          },
          {
            "Text": "Square",
            "AttrFlags": 2
          },
          {
            "Text": " method. A delegate instance literally acts as a delegate for the caller: the caller invokes the delegate, and then the delegate calls the target method. This indirection decouples the caller from the target method."
          }
        ]
      },
      {
        "id": "1366a926-a934-4ba3-ae66-1781ef7609f3",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527184540,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527184540,
        "parent_id": "f3487756-9562-4e15-aac2-e11e2b6a6212",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "id": "e8e3ea27-c725-474b-9d16-146b823296de",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527184540,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527184540,
        "parent_id": "f3487756-9562-4e15-aac2-e11e2b6a6212",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can declare a "
            ],
            [
              "generic",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " delegate type, and in that case you may specify that the type is covariant ("
            ],
            [
              "out",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") or contravariant ("
            ],
            [
              "in",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") in some of the type arguments. For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can declare a "
          },
          {
            "Text": "generic",
            "AttrFlags": 1
          },
          {
            "Text": " delegate type, and in that case you may specify that the type is covariant ("
          },
          {
            "Text": "out",
            "AttrFlags": 2
          },
          {
            "Text": ") or contravariant ("
          },
          {
            "Text": "in",
            "AttrFlags": 2
          },
          {
            "Text": ") in some of the type arguments. For example:"
          }
        ]
      },
      {
        "id": "90bc3f08-a4d4-4f2a-81c8-c832bc52ce11",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527184540,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550136840000,
        "parent_id": "f3487756-9562-4e15-aac2-e11e2b6a6212",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public delegate TTo Converter\u003cin TFrom, out TTo\u003e(TFrom input);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public delegate TTo Converter\u003cin TFrom, out TTo\u003e(TFrom input);",
        "code_language": "C#"
      },
      {
        "id": "108b57ff-57a9-4a22-be08-a210fe897f12",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527184540,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527184540,
        "parent_id": "f3487756-9562-4e15-aac2-e11e2b6a6212",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Like other generic types, generic delegate types can have constraints, such as "
            ],
            [
              "where TFrom : struct, IConvertible where TTo : new()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Like other generic types, generic delegate types can have constraints, such as "
          },
          {
            "Text": "where TFrom : struct, IConvertible where TTo : new()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "1338471d-6986-4471-b59b-68b6c0f63c56",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527184540,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527184540,
        "parent_id": "f3487756-9562-4e15-aac2-e11e2b6a6212",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Avoid co- and contravariance for delegate types that are meant to be used for multicast delegates, such as event handler types. This is because concatenation ("
            ],
            [
              "\\+",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") can fail if the run-time type is different from the compile-time type because of the variance. For example, avoid:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Avoid co- and contravariance for delegate types that are meant to be used for multicast delegates, such as event handler types. This is because concatenation ("
          },
          {
            "Text": "\\+",
            "AttrFlags": 2
          },
          {
            "Text": ") can fail if the run-time type is different from the compile-time type because of the variance. For example, avoid:"
          }
        ]
      },
      {
        "id": "6ac88f44-e98d-41b8-a02e-774532fc65d2",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527184540,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550136840000,
        "parent_id": "f3487756-9562-4e15-aac2-e11e2b6a6212",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public delegate void EventHandler\u003cin TEventArgs\u003e(object sender, TEventArgs e);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public delegate void EventHandler\u003cin TEventArgs\u003e(object sender, TEventArgs e);",
        "code_language": "C#"
      },
      {
        "id": "f69aecae-5c6a-444b-be51-00c2f6965efb",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527184540,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527184540,
        "parent_id": "f3487756-9562-4e15-aac2-e11e2b6a6212",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Instead, use an invariant generic type:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Instead, use an invariant generic type:"
          }
        ]
      },
      {
        "id": "fe184810-b1cb-4064-a22f-b32b393a2d0c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527184540,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550136840000,
        "parent_id": "f3487756-9562-4e15-aac2-e11e2b6a6212",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public delegate void EventHandler\u003cTEventArgs\u003e(object sender, TEventArgs e);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public delegate void EventHandler\u003cTEventArgs\u003e(object sender, TEventArgs e);",
        "code_language": "C#"
      },
      {
        "id": "b29faee5-a4e1-4a93-9021-b9ccb38d2f1d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527184541,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527184541,
        "parent_id": "f3487756-9562-4e15-aac2-e11e2b6a6212",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Also supported are delegates where some parameters are modified by "
            ],
            [
              "ref",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "out",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", as in:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Also supported are delegates where some parameters are modified by "
          },
          {
            "Text": "ref",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "out",
            "AttrFlags": 2
          },
          {
            "Text": ", as in:"
          }
        ]
      },
      {
        "id": "7820ffa7-4509-41f6-a9f9-8ab386ca377c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527184541,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550136840000,
        "parent_id": "f3487756-9562-4e15-aac2-e11e2b6a6212",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public delegate bool TryParser\u003cT\u003e(string input, out T result);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public delegate bool TryParser\u003cT\u003e(string input, out T result);",
        "code_language": "C#"
      },
      {
        "id": "cc28562d-eea1-47ed-9f2f-eaceed1b33ad",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527184541,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527184541,
        "parent_id": "f3487756-9562-4e15-aac2-e11e2b6a6212",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "(sample use "
            ],
            [
              "TryParser\u003cdecimal\u003e example = decimal.TryParse;",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "), or delegates where the last parameter has the "
            ],
            [
              "params",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " modifier. Delegate types can have optional parameters (supply default values). Delegate types can use pointer types like "
            ],
            [
              "int*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "char*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in their signatures or return types (use "
            ],
            [
              "unsafe",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword). A delegate type and its parameters can carry custom attributes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "(sample use "
          },
          {
            "Text": "TryParser\u003cdecimal\u003e example = decimal.TryParse;",
            "AttrFlags": 2
          },
          {
            "Text": "), or delegates where the last parameter has the "
          },
          {
            "Text": "params",
            "AttrFlags": 2
          },
          {
            "Text": " modifier. Delegate types can have optional parameters (supply default values). Delegate types can use pointer types like "
          },
          {
            "Text": "int*",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "char*",
            "AttrFlags": 2
          },
          {
            "Text": " in their signatures or return types (use "
          },
          {
            "Text": "unsafe",
            "AttrFlags": 2
          },
          {
            "Text": " keyword). A delegate type and its parameters can carry custom attributes."
          }
        ]
      }
    ],
    "title": "Declaring a delegate type",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}