{
  "ID": "483212a3-a894-47c8-8494-d0942f113dd8",
  "Root": {
    "alive": true,
    "content": [
      "31500863-b190-4dfb-a198-13baa431bbce",
      "4f176d4d-9a0b-4d18-9f78-7b0b84dd73ef",
      "c262f56b-90e1-4242-aa4e-436ee675d4c3",
      "1af0f418-4ff6-4dea-8f62-5e84d2b26c4e",
      "e8f020a8-4356-4893-b979-662a250b44c3",
      "fdcbb109-af49-4754-9df9-fe20d08940c6",
      "115df630-86ca-41d6-a142-93b1e91a8470",
      "ab4b7edd-49b7-420d-902c-ef7883920958",
      "84f82a34-dec6-47fa-9b31-e4ed8ed6f676",
      "ff6b6335-1b76-4fd5-b67f-0dd135002723",
      "6c75caaa-457a-49f0-bba3-3a646f7173a0",
      "73224d19-b423-4089-8321-233c8297dc65",
      "11a1897e-a37a-4775-bc70-03df23c10974",
      "a890cd44-c454-403f-b8ea-2f53b8764505"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549527762277,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "483212a3-a894-47c8-8494-d0942f113dd8",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550204760000,
    "parent_id": "15c7c6c1-34d3-4692-bbfc-311e63288f8d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "DateTime.TryParseExactStringStringIFormatProviderDateTimeStylesDateTime"
        ]
      ]
    },
    "type": "page",
    "version": 18,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527762273,
        "id": "31500863-b190-4dfb-a198-13baa431bbce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527762273,
        "parent_id": "483212a3-a894-47c8-8494-d0942f113dd8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Converts the specified string representation of a date and time to its DateTime equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly. The method returns a value that indicates whether the conversion succeeded."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Converts the specified string representation of a date and time to its DateTime equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly. The method returns a value that indicates whether the conversion succeeded."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527762276,
        "id": "4f176d4d-9a0b-4d18-9f78-7b0b84dd73ef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527762276,
        "parent_id": "483212a3-a894-47c8-8494-d0942f113dd8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For Example"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For Example"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527762276,
        "id": "c262f56b-90e1-4242-aa4e-436ee675d4c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550204640000,
        "parent_id": "483212a3-a894-47c8-8494-d0942f113dd8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "CultureInfo enUS = new CultureInfo(\"en-US\");\nstring dateString;\nSystem.DateTime dateValue;"
            ]
          ]
        },
        "type": "code",
        "version": 5,
        "code": "CultureInfo enUS = new CultureInfo(\"en-US\");\nstring dateString;\nSystem.DateTime dateValue;",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527762276,
        "id": "1af0f418-4ff6-4dea-8f62-5e84d2b26c4e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527762276,
        "parent_id": "483212a3-a894-47c8-8494-d0942f113dd8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parse date with no style flags."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parse date with no style flags."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527762276,
        "id": "e8f020a8-4356-4893-b979-662a250b44c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550204640000,
        "parent_id": "483212a3-a894-47c8-8494-d0942f113dd8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "dateString = \" 5/01/2009 8:30 AM\";\nif (DateTime.TryParseExact(dateString, \"g\", enUS, DateTimeStyles.None, out dateValue))\n{\n   Console.WriteLine(\"Converted '{0}' to {1} ({2}).\", dateString, dateValue, dateValue.Kind);\n}\nelse\n{\n   Console.WriteLine(\"'{0}' is not in an acceptable format.\", dateString);\n}\n\n// Allow a leading space in the date string.\nif(DateTime.TryParseExact(dateString, \"g\", enUS, DateTimeStyles.AllowLeadingWhite, out dateValue))\n{\n   Console.WriteLine(\"Converted '{0}' to {1} ({2}).\", dateString, dateValue, dateValue.Kind);\nelse\n{\n   Console.WriteLine(\"'{0}' is not in an acceptable format.\", dateString);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "dateString = \" 5/01/2009 8:30 AM\";\nif (DateTime.TryParseExact(dateString, \"g\", enUS, DateTimeStyles.None, out dateValue))\n{\n   Console.WriteLine(\"Converted '{0}' to {1} ({2}).\", dateString, dateValue, dateValue.Kind);\n}\nelse\n{\n   Console.WriteLine(\"'{0}' is not in an acceptable format.\", dateString);\n}\n\n// Allow a leading space in the date string.\nif(DateTime.TryParseExact(dateString, \"g\", enUS, DateTimeStyles.AllowLeadingWhite, out dateValue))\n{\n   Console.WriteLine(\"Converted '{0}' to {1} ({2}).\", dateString, dateValue, dateValue.Kind);\nelse\n{\n   Console.WriteLine(\"'{0}' is not in an acceptable format.\", dateString);\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527762276,
        "id": "fdcbb109-af49-4754-9df9-fe20d08940c6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527762276,
        "parent_id": "483212a3-a894-47c8-8494-d0942f113dd8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Use custom formats with M and MM."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Use custom formats with M and MM."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527762277,
        "id": "115df630-86ca-41d6-a142-93b1e91a8470",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550204640000,
        "parent_id": "483212a3-a894-47c8-8494-d0942f113dd8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "dateString = \"5/01/2009 09:00\";\nif(DateTime.TryParseExact(dateString, \"M/dd/yyyy hh:mm\", enUS, DateTimeStyles.None, out dateValue))\n{\n    Console.WriteLine(\"Converted '{0}' to {1} ({2}).\", dateString, dateValue, dateValue.Kind);\n}\nelse\n{\n   Console.WriteLine(\"'{0}' is not in an acceptable format.\", dateString);\n}\n\n// Allow a leading space in the date string.\nif(DateTime.TryParseExact(dateString, \"MM/dd/yyyy hh:mm\", enUS, DateTimeStyles.None, out dateValue))\n{\n   Console.WriteLine(\"Converted '{0}' to {1} ({2}).\", dateString, dateValue, dateValue.Kind);\n}\nelse\n{\n   Console.WriteLine(\"'{0}' is not in an acceptable format.\", dateString);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "dateString = \"5/01/2009 09:00\";\nif(DateTime.TryParseExact(dateString, \"M/dd/yyyy hh:mm\", enUS, DateTimeStyles.None, out dateValue))\n{\n    Console.WriteLine(\"Converted '{0}' to {1} ({2}).\", dateString, dateValue, dateValue.Kind);\n}\nelse\n{\n   Console.WriteLine(\"'{0}' is not in an acceptable format.\", dateString);\n}\n\n// Allow a leading space in the date string.\nif(DateTime.TryParseExact(dateString, \"MM/dd/yyyy hh:mm\", enUS, DateTimeStyles.None, out dateValue))\n{\n   Console.WriteLine(\"Converted '{0}' to {1} ({2}).\", dateString, dateValue, dateValue.Kind);\n}\nelse\n{\n   Console.WriteLine(\"'{0}' is not in an acceptable format.\", dateString);\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527762277,
        "id": "ab4b7edd-49b7-420d-902c-ef7883920958",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527762277,
        "parent_id": "483212a3-a894-47c8-8494-d0942f113dd8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parse a string with time zone information."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parse a string with time zone information."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527762277,
        "id": "84f82a34-dec6-47fa-9b31-e4ed8ed6f676",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550204700000,
        "parent_id": "483212a3-a894-47c8-8494-d0942f113dd8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "dateString = \"05/01/2009 01:30:42 PM -05:00\";\nif (DateTime.TryParseExact(dateString, \"MM/dd/yyyy hh:mm:ss tt zzz\", enUS, DateTimeStyles.None, out dateValue))\n{\n    Console.WriteLine(\"Converted '{0}' to {1} ({2}).\", dateString, dateValue, dateValue.Kind);\n}\nelse\n{\n   Console.WriteLine(\"'{0}' is not in an acceptable format.\", dateString);\n}\n\n\n// Allow a leading space in the date string.\nif (DateTime.TryParseExact(dateString, \"MM/dd/yyyy hh:mm:ss tt zzz\", enUS, DateTimeStyles.AdjustToUniversal, out dateValue))\n{\n   Console.WriteLine(\"Converted '{0}' to {1} ({2}).\", dateString, dateValue, dateValue.Kind);\n}\nelse\n{\n   Console.WriteLine(\"'{0}' is not in an acceptable format.\", dateString);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 13,
        "code": "dateString = \"05/01/2009 01:30:42 PM -05:00\";\nif (DateTime.TryParseExact(dateString, \"MM/dd/yyyy hh:mm:ss tt zzz\", enUS, DateTimeStyles.None, out dateValue))\n{\n    Console.WriteLine(\"Converted '{0}' to {1} ({2}).\", dateString, dateValue, dateValue.Kind);\n}\nelse\n{\n   Console.WriteLine(\"'{0}' is not in an acceptable format.\", dateString);\n}\n\n\n// Allow a leading space in the date string.\nif (DateTime.TryParseExact(dateString, \"MM/dd/yyyy hh:mm:ss tt zzz\", enUS, DateTimeStyles.AdjustToUniversal, out dateValue))\n{\n   Console.WriteLine(\"Converted '{0}' to {1} ({2}).\", dateString, dateValue, dateValue.Kind);\n}\nelse\n{\n   Console.WriteLine(\"'{0}' is not in an acceptable format.\", dateString);\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527762277,
        "id": "ff6b6335-1b76-4fd5-b67f-0dd135002723",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527762277,
        "parent_id": "483212a3-a894-47c8-8494-d0942f113dd8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parse a string represengting UTC."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parse a string represengting UTC."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527762277,
        "id": "6c75caaa-457a-49f0-bba3-3a646f7173a0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550204700000,
        "parent_id": "483212a3-a894-47c8-8494-d0942f113dd8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "dateString = \"2008-06-11T16:11:20.0904778Z\";\nif(DateTime.TryParseExact(dateString, \"o\", CultureInfo.InvariantCulture, DateTimeStyles.None, out dateValue))\n{\n   Console.WriteLine(\"Converted '{0}' to {1} ({2}).\", dateString, dateValue, dateValue.Kind);\n}\nelse\n{\n  Console.WriteLine(\"'{0}' is not in an acceptable format.\", dateString);\n}\n\nif (DateTime.TryParseExact(dateString, \"o\", CultureInfo.InvariantCulture, DateTimeStyles.RoundtripKind, out dateValue))\n{\n   Console.WriteLine(\"Converted '{0}' to {1} ({2}).\", dateString, dateValue, dateValue.Kind);\n}\nelse\n{\n   Console.WriteLine(\"'{0}' is not in an acceptable format.\", dateString);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "dateString = \"2008-06-11T16:11:20.0904778Z\";\nif(DateTime.TryParseExact(dateString, \"o\", CultureInfo.InvariantCulture, DateTimeStyles.None, out dateValue))\n{\n   Console.WriteLine(\"Converted '{0}' to {1} ({2}).\", dateString, dateValue, dateValue.Kind);\n}\nelse\n{\n  Console.WriteLine(\"'{0}' is not in an acceptable format.\", dateString);\n}\n\nif (DateTime.TryParseExact(dateString, \"o\", CultureInfo.InvariantCulture, DateTimeStyles.RoundtripKind, out dateValue))\n{\n   Console.WriteLine(\"Converted '{0}' to {1} ({2}).\", dateString, dateValue, dateValue.Kind);\n}\nelse\n{\n   Console.WriteLine(\"'{0}' is not in an acceptable format.\", dateString);\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527762277,
        "id": "73224d19-b423-4089-8321-233c8297dc65",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527762277,
        "parent_id": "483212a3-a894-47c8-8494-d0942f113dd8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Outputs"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Outputs"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550204748027,
        "id": "11a1897e-a37a-4775-bc70-03df23c10974",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550204760000,
        "parent_id": "483212a3-a894-47c8-8494-d0942f113dd8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "' 5/01/2009 8:30 AM' is not in an acceptable format.\nConverted ' 5/01/2009 8:30 AM' to 5/1/2009 8:30:00 AM (Unspecified).\nConverted '5/01/2009 09:00' to 5/1/2009 9:00:00 AM (Unspecified).\n'5/01/2009 09:00' is not in an acceptable format.\nConverted '05/01/2009 01:30:42 PM -05:00' to 5/1/2009 11:30:42 AM (Local).\nConverted '05/01/2009 01:30:42 PM -05:00' to 5/1/2009 6:30:42 PM (Utc).\nConverted '2008-06-11T16:11:20.0904778Z' to 6/11/2008 9:11:20 AM (Local).\nConverted '2008-06-11T16:11:20.0904778Z' to 6/11/2008 4:11:20 PM (Utc)."
            ]
          ]
        },
        "type": "code",
        "version": 10,
        "code": "' 5/01/2009 8:30 AM' is not in an acceptable format.\nConverted ' 5/01/2009 8:30 AM' to 5/1/2009 8:30:00 AM (Unspecified).\nConverted '5/01/2009 09:00' to 5/1/2009 9:00:00 AM (Unspecified).\n'5/01/2009 09:00' is not in an acceptable format.\nConverted '05/01/2009 01:30:42 PM -05:00' to 5/1/2009 11:30:42 AM (Local).\nConverted '05/01/2009 01:30:42 PM -05:00' to 5/1/2009 6:30:42 PM (Utc).\nConverted '2008-06-11T16:11:20.0904778Z' to 6/11/2008 9:11:20 AM (Local).\nConverted '2008-06-11T16:11:20.0904778Z' to 6/11/2008 4:11:20 PM (Utc).",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550204760000,
        "id": "a890cd44-c454-403f-b8ea-2f53b8764505",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550204760000,
        "parent_id": "483212a3-a894-47c8-8494-d0942f113dd8",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "DateTime.TryParseExactStringStringIFormatProviderDateTimeStylesDateTime",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}