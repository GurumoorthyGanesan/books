{
  "ID": "379a490f-f402-49c4-bcea-0a5e8fc60c3f",
  "Root": {
    "alive": true,
    "content": [
      "185f19fe-d8b3-4e2e-9d0b-df468e2065d1",
      "604a4333-f391-48e8-89f3-0e1f25bac09d",
      "7703e6f6-ccb9-4159-8793-8526849cb3f8",
      "f3fc6d89-c0fd-4b04-b7f2-8d5e60acd2e3",
      "69582d67-7098-4bf1-ae75-7c8efdaf235d",
      "4898a8d9-f627-4024-8e97-363e88b074b4",
      "4938903c-0ea1-44f5-96bd-99adf7f923c8",
      "32b19239-9590-4da1-8ad6-1cb3ddbee7bf",
      "9fb6ed59-56ed-4dd7-b629-183b8d6fd8a0",
      "f41094f4-3fb7-422a-81e1-0b78d1e06a16",
      "23cb708a-4eb7-43c3-95ab-6d1f730fa316"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525316372,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "379a490f-f402-49c4-bcea-0a5e8fc60c3f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549612380000,
    "parent_id": "b47f62ad-e183-43f6-a9e5-ae42ff99c873",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Lazy properties initialization with null coalescing operator"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525316367,
        "id": "185f19fe-d8b3-4e2e-9d0b-df468e2065d1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549612380000,
        "parent_id": "379a490f-f402-49c4-bcea-0a5e8fc60c3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "private List\u003cFooBar\u003e _fooBars;\n\npublic List\u003cFooBar\u003e FooBars\n{\n    get { return _fooBars ?? (_fooBars = new List\u003cFooBar\u003e()); }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "private List\u003cFooBar\u003e _fooBars;\n\npublic List\u003cFooBar\u003e FooBars\n{\n    get { return _fooBars ?? (_fooBars = new List\u003cFooBar\u003e()); }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525316369,
        "id": "604a4333-f391-48e8-89f3-0e1f25bac09d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525316369,
        "parent_id": "379a490f-f402-49c4-bcea-0a5e8fc60c3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The first time the property "
            ],
            [
              ".FooBars",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is accessed the "
            ],
            [
              "_fooBars",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variable will evaluate as "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", thus falling through to the assignment statement assigns and evaluates to the resulting value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The first time the property "
          },
          {
            "Text": ".FooBars",
            "AttrFlags": 2
          },
          {
            "Text": " is accessed the "
          },
          {
            "Text": "_fooBars",
            "AttrFlags": 2
          },
          {
            "Text": " variable will evaluate as "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": ", thus falling through to the assignment statement assigns and evaluates to the resulting value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525316370,
        "id": "7703e6f6-ccb9-4159-8793-8526849cb3f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525316370,
        "parent_id": "379a490f-f402-49c4-bcea-0a5e8fc60c3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Thread safety"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Thread safety"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525316371,
        "id": "f3fc6d89-c0fd-4b04-b7f2-8d5e60acd2e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525316371,
        "parent_id": "379a490f-f402-49c4-bcea-0a5e8fc60c3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is "
            ],
            [
              "not thread-safe",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " way of implementing lazy properties. For thread-safe laziness, use the "
            ],
            [
              "Lazy\u003cT\u003e",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%23/1192/singleton-implementation/6795/lazy-thread-safe-singleton-using-lazyt"
                ]
              ]
            ],
            [
              " class built into the .NET Framework."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is "
          },
          {
            "Text": "not thread-safe",
            "AttrFlags": 1
          },
          {
            "Text": " way of implementing lazy properties. For thread-safe laziness, use the "
          },
          {
            "Text": "Lazy\u003cT\u003e",
            "AttrFlags": 2,
            "Link": "http://stackoverflow.com/documentation/c%23/1192/singleton-implementation/6795/lazy-thread-safe-singleton-using-lazyt"
          },
          {
            "Text": " class built into the .NET Framework."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525316371,
        "id": "69582d67-7098-4bf1-ae75-7c8efdaf235d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525316371,
        "parent_id": "379a490f-f402-49c4-bcea-0a5e8fc60c3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C# 6 Syntactic Sugar using expression bodies"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "C# 6 Syntactic Sugar using expression bodies"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525316372,
        "id": "4898a8d9-f627-4024-8e97-363e88b074b4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525316372,
        "parent_id": "379a490f-f402-49c4-bcea-0a5e8fc60c3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that since C# 6, this syntax can be simplified using expression body for the property:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that since C# 6, this syntax can be simplified using expression body for the property:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525316372,
        "id": "4938903c-0ea1-44f5-96bd-99adf7f923c8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549612380000,
        "parent_id": "379a490f-f402-49c4-bcea-0a5e8fc60c3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "private List\u003cFooBar\u003e _fooBars;\n\npublic List\u003cFooBar\u003e FooBars =\u003e _fooBars ?? ( _fooBars = new List\u003cFooBar\u003e() );"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "private List\u003cFooBar\u003e _fooBars;\n\npublic List\u003cFooBar\u003e FooBars =\u003e _fooBars ?? ( _fooBars = new List\u003cFooBar\u003e() );",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525316372,
        "id": "32b19239-9590-4da1-8ad6-1cb3ddbee7bf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525316372,
        "parent_id": "379a490f-f402-49c4-bcea-0a5e8fc60c3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Subsequent accesses to the property will yield the value stored in the "
            ],
            [
              "_fooBars",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Subsequent accesses to the property will yield the value stored in the "
          },
          {
            "Text": "_fooBars",
            "AttrFlags": 2
          },
          {
            "Text": " variable."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525316372,
        "id": "9fb6ed59-56ed-4dd7-b629-183b8d6fd8a0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525316372,
        "parent_id": "379a490f-f402-49c4-bcea-0a5e8fc60c3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example in the MVVM pattern"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example in the MVVM pattern"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525316372,
        "id": "f41094f4-3fb7-422a-81e1-0b78d1e06a16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525316372,
        "parent_id": "379a490f-f402-49c4-bcea-0a5e8fc60c3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is often used when implementing commands in the MVVM pattern. Instead of initializing the commands eagerly with the construction of a viewmodel, commands are lazily initialized using this pattern as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is often used when implementing commands in the MVVM pattern. Instead of initializing the commands eagerly with the construction of a viewmodel, commands are lazily initialized using this pattern as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525316372,
        "id": "23cb708a-4eb7-43c3-95ab-6d1f730fa316",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549612380000,
        "parent_id": "379a490f-f402-49c4-bcea-0a5e8fc60c3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "private ICommand _actionCommand = null;\npublic ICommand ActionCommand =\u003e\n   _actionCommand ?? ( _actionCommand = new DelegateCommand( DoAction ) );"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "private ICommand _actionCommand = null;\npublic ICommand ActionCommand =\u003e\n   _actionCommand ?? ( _actionCommand = new DelegateCommand( DoAction ) );",
        "code_language": "C#"
      }
    ],
    "title": "Lazy properties initialization with null coalescing operator",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}