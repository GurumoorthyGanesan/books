{
  "ID": "48ed9f68-dec3-459e-ba4c-eeb2f3f65ba4",
  "Root": {
    "id": "48ed9f68-dec3-459e-ba4c-eeb2f3f65ba4",
    "alive": true,
    "content": [
      "9fa8c976-3330-40be-9a8a-c3705108e0ca",
      "0780644f-369a-480e-a602-43db863aa6b5",
      "8fa04cb0-7fe7-4047-b60d-c0c8b252bcd3",
      "72fde91b-7fdd-471e-b5e4-bc31de131b66",
      "596ec5ce-69b6-4df3-a906-bcee11776e54",
      "b045c1cd-5c38-4a2b-85c9-ca1c97edf6db",
      "fc849d10-8255-4d80-bd3e-32daaf4bad0c",
      "e0a5a5df-4adc-4c45-b7f7-797ff7e88016",
      "465e5539-49a2-4545-924a-e29aff2c2560",
      "07d12787-2c84-4069-a734-970c99181604",
      "be7ebc8b-c476-411c-82f1-9cc210b7b0d1"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549529536298,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550220060000,
    "parent_id": "2667525c-8119-4b5e-a244-20a7a57e4f8e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Assertions to check logic should always be true"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "id": "9fa8c976-3330-40be-9a8a-c3705108e0ca",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529536294,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529536294,
        "parent_id": "48ed9f68-dec3-459e-ba4c-eeb2f3f65ba4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Assertions are used not to perform testing of input parameters, but to verify that program flow is corect – i.e., that you can make certain assumptions about your code at a certain point in time. In other words: a test done with "
            ],
            [
              "Debug.Assert",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " should "
            ],
            [
              "always",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " assume that the value tested is "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Assertions are used not to perform testing of input parameters, but to verify that program flow is corect – i.e., that you can make certain assumptions about your code at a certain point in time. In other words: a test done with "
          },
          {
            "Text": "Debug.Assert",
            "AttrFlags": 2
          },
          {
            "Text": " should "
          },
          {
            "Text": "always",
            "AttrFlags": 4
          },
          {
            "Text": " assume that the value tested is "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "0780644f-369a-480e-a602-43db863aa6b5",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529536297,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529536297,
        "parent_id": "48ed9f68-dec3-459e-ba4c-eeb2f3f65ba4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Debug.Assert only executes in DEBUG builds; it is filtered out of RELEASE builds. It must be considered a debugging tool in addition to unit testing and not as a replacement of code contracts or input validation methods."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Debug.Assert only executes in DEBUG builds; it is filtered out of RELEASE builds. It must be considered a debugging tool in addition to unit testing and not as a replacement of code contracts or input validation methods."
          }
        ]
      },
      {
        "id": "8fa04cb0-7fe7-4047-b60d-c0c8b252bcd3",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529536297,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529536297,
        "parent_id": "48ed9f68-dec3-459e-ba4c-eeb2f3f65ba4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For instance, this is a good assertion:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For instance, this is a good assertion:"
          }
        ]
      },
      {
        "id": "72fde91b-7fdd-471e-b5e4-bc31de131b66",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529536297,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550220060000,
        "parent_id": "48ed9f68-dec3-459e-ba4c-eeb2f3f65ba4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "var systemData = RetrieveSystemConfiguration();\nDebug.Assert(systemData != null);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var systemData = RetrieveSystemConfiguration();\nDebug.Assert(systemData != null);",
        "code_language": "C#"
      },
      {
        "id": "596ec5ce-69b6-4df3-a906-bcee11776e54",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529536297,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529536297,
        "parent_id": "48ed9f68-dec3-459e-ba4c-eeb2f3f65ba4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here assert is a good choice because we can assume that RetrieveSystemConfiguration() will return a valid value and will never return null."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here assert is a good choice because we can assume that RetrieveSystemConfiguration() will return a valid value and will never return null."
          }
        ]
      },
      {
        "id": "b045c1cd-5c38-4a2b-85c9-ca1c97edf6db",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529536298,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529536298,
        "parent_id": "48ed9f68-dec3-459e-ba4c-eeb2f3f65ba4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here is another good example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here is another good example:"
          }
        ]
      },
      {
        "id": "fc849d10-8255-4d80-bd3e-32daaf4bad0c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529536298,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550220060000,
        "parent_id": "48ed9f68-dec3-459e-ba4c-eeb2f3f65ba4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "UserData user = RetrieveUserData();\nDebug.Assert(user != null);\nDebug.Assert(user.Age \u003e 0);\nint year = DateTime.Today.Year - user.Age;"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "UserData user = RetrieveUserData();\nDebug.Assert(user != null);\nDebug.Assert(user.Age \u003e 0);\nint year = DateTime.Today.Year - user.Age;",
        "code_language": "C#"
      },
      {
        "id": "e0a5a5df-4adc-4c45-b7f7-797ff7e88016",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529536298,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529536298,
        "parent_id": "48ed9f68-dec3-459e-ba4c-eeb2f3f65ba4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "First, we may assume that RetrieveUserData() will return a valid value. Then, before using the Age property, we verify the assumption (which should always be true) that the age of the user is strictly positive."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "First, we may assume that RetrieveUserData() will return a valid value. Then, before using the Age property, we verify the assumption (which should always be true) that the age of the user is strictly positive."
          }
        ]
      },
      {
        "id": "465e5539-49a2-4545-924a-e29aff2c2560",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529536298,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529536298,
        "parent_id": "48ed9f68-dec3-459e-ba4c-eeb2f3f65ba4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is a bad example of assert:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is a bad example of assert:"
          }
        ]
      },
      {
        "id": "07d12787-2c84-4069-a734-970c99181604",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529536298,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550220060000,
        "parent_id": "48ed9f68-dec3-459e-ba4c-eeb2f3f65ba4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "string input = Console.ReadLine();\nint age = Convert.ToInt32(input);\nDebug.Assert(age \u003e 16);\nConsole.WriteLine(\"Great, you are over 16\");"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "string input = Console.ReadLine();\nint age = Convert.ToInt32(input);\nDebug.Assert(age \u003e 16);\nConsole.WriteLine(\"Great, you are over 16\");",
        "code_language": "C#"
      },
      {
        "id": "be7ebc8b-c476-411c-82f1-9cc210b7b0d1",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529536298,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529536298,
        "parent_id": "48ed9f68-dec3-459e-ba4c-eeb2f3f65ba4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Assert is not for input validation because it is incorrect to assume that this assertion will always be true. You must use input validation methods for that. In the case above, you should also verify that the input value is a number in the first place."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Assert is not for input validation because it is incorrect to assume that this assertion will always be true. You must use input validation methods for that. In the case above, you should also verify that the input value is a number in the first place."
          }
        ]
      }
    ],
    "title": "Assertions to check logic should always be true",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}