{
  "ID": "ee82d169-361d-4358-a1ad-4f98db16eb71",
  "Root": {
    "alive": true,
    "content": [
      "3b204803-15f2-4d8b-8422-e55edd02eefa",
      "6c74df05-d9c9-4dc5-809c-59f1824f264f",
      "7bfe88bf-7f76-4115-87a5-6bd48b1af7ff",
      "6b8d8c13-9fbb-4da0-a9b8-76f2e41b03b7",
      "b66019e4-7933-4492-910e-bbfd7c6b9499",
      "b76bbc39-acc5-439a-ae14-1174c7ca784c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549529989414,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ee82d169-361d-4358-a1ad-4f98db16eb71",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550222520000,
    "parent_id": "45b56bad-c631-449a-a2a7-063d3f6d06d9",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Accessing Array Elements Using a Pointer"
        ]
      ]
    },
    "type": "page",
    "version": 12,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529989409,
        "id": "3b204803-15f2-4d8b-8422-e55edd02eefa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529989409,
        "parent_id": "ee82d169-361d-4358-a1ad-4f98db16eb71",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In C#, an array name and a pointer to a data type same as the array data, are not the same variable type. For example, "
            ],
            [
              "int *p",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "int[] p",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", are not same type. You can increment the pointer variable "
            ],
            [
              "p",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " because it is not fixed in memory but an array address is fixed in memory, and you can’t increment that."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In C#, an array name and a pointer to a data type same as the array data, are not the same variable type. For example, "
          },
          {
            "Text": "int *p",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "int[] p",
            "AttrFlags": 2
          },
          {
            "Text": ", are not same type. You can increment the pointer variable "
          },
          {
            "Text": "p",
            "AttrFlags": 2
          },
          {
            "Text": " because it is not fixed in memory but an array address is fixed in memory, and you can’t increment that."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529989412,
        "id": "6c74df05-d9c9-4dc5-809c-59f1824f264f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529989412,
        "parent_id": "ee82d169-361d-4358-a1ad-4f98db16eb71",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Therefore, if you need to access an array data using a pointer variable, as we traditionally do in C, or C++, you need to fix the pointer using the fixed keyword."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Therefore, if you need to access an array data using a pointer variable, as we traditionally do in C, or C++, you need to fix the pointer using the fixed keyword."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529989413,
        "id": "7bfe88bf-7f76-4115-87a5-6bd48b1af7ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529989413,
        "parent_id": "ee82d169-361d-4358-a1ad-4f98db16eb71",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following example demonstrates this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following example demonstrates this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529989413,
        "id": "6b8d8c13-9fbb-4da0-a9b8-76f2e41b03b7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549791540000,
        "parent_id": "ee82d169-361d-4358-a1ad-4f98db16eb71",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "using System;\nnamespace UnsafeCodeApplication\n{\n   class TestPointer\n   {\n      public unsafe static void Main()\n      {\n         int[]  list = {10, 100, 200};\n         fixed(int *ptr = list)\n         \n         /* let us have array address in pointer */\n         for ( int i = 0; i \u003c 3; i++)\n         {\n            Console.WriteLine(\"Address of list[{0}]={1}\",i,(int)(ptr + i));\n            Console.WriteLine(\"Value of list[{0}]={1}\", i, *(ptr + i));\n         }\n         \n         Console.ReadKey();\n      }\n   }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "using System;\nnamespace UnsafeCodeApplication\n{\n   class TestPointer\n   {\n      public unsafe static void Main()\n      {\n         int[]  list = {10, 100, 200};\n         fixed(int *ptr = list)\n         \n         /* let us have array address in pointer */\n         for ( int i = 0; i \u003c 3; i++)\n         {\n            Console.WriteLine(\"Address of list[{0}]={1}\",i,(int)(ptr + i));\n            Console.WriteLine(\"Value of list[{0}]={1}\", i, *(ptr + i));\n         }\n         \n         Console.ReadKey();\n      }\n   }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529989414,
        "id": "b66019e4-7933-4492-910e-bbfd7c6b9499",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529989414,
        "parent_id": "ee82d169-361d-4358-a1ad-4f98db16eb71",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When the above code was compiled and executed, it produces the following result:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When the above code was compiled and executed, it produces the following result:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550222565090,
        "id": "b76bbc39-acc5-439a-ae14-1174c7ca784c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550222520000,
        "parent_id": "ee82d169-361d-4358-a1ad-4f98db16eb71",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "Address of list[0] = 31627168\nValue of list[0] = 10\nAddress of list[1] = 31627172\nValue of list[1] = 100\nAddress of list[2] = 31627176\nValue of list[2] = 200"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "Address of list[0] = 31627168\nValue of list[0] = 10\nAddress of list[1] = 31627172\nValue of list[1] = 100\nAddress of list[2] = 31627176\nValue of list[2] = 200",
        "code_language": "C#"
      }
    ],
    "title": "Accessing Array Elements Using a Pointer",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}