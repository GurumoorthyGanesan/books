{
  "ID": "303b375c-d8fc-42aa-b522-0899da5e43ce",
  "Root": {
    "alive": true,
    "content": [
      "c4389546-2c20-44a2-aa22-efd1a5d7bce6",
      "0a13ab2c-9c08-4835-a2c6-079cebe0da53",
      "23925ae8-d620-4c4b-b90c-e7b8c0123c04",
      "fe9a76d2-8de4-42c3-965d-8a2f40d01854",
      "0fe2c12f-3fe3-4d47-9bc6-d96aaca8a3b1",
      "a614ca90-66f1-4d54-8367-1bd3c93ba1fe"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549526103354,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "303b375c-d8fc-42aa-b522-0899da5e43ce",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549626780000,
    "parent_id": "a34c1078-f01c-44b1-b468-522f804fbc2d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Any and FirstOrDefault - best practice"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526103350,
        "id": "c4389546-2c20-44a2-aa22-efd1a5d7bce6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526103350,
        "parent_id": "303b375c-d8fc-42aa-b522-0899da5e43ce",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "I won’t explain what "
            ],
            [
              "Any",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "FirstOrDefault",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " does because there are already two good example about them. See https://stackoverflow.com/documentation/c%23/68/linq-queries/5098/any#t=201707200324548979636 and https://stackoverflow.com/documentation/c%23/68/linq-queries/329/first-firstordefault-last-lastordefault-single-and-singleordefault#t=201707200328069088515 for more information."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "I won’t explain what "
          },
          {
            "Text": "Any",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "FirstOrDefault",
            "AttrFlags": 2
          },
          {
            "Text": " does because there are already two good example about them. See https://stackoverflow.com/documentation/c%23/68/linq-queries/5098/any#t=201707200324548979636 and https://stackoverflow.com/documentation/c%23/68/linq-queries/329/first-firstordefault-last-lastordefault-single-and-singleordefault#t=201707200328069088515 for more information."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526103353,
        "id": "0a13ab2c-9c08-4835-a2c6-079cebe0da53",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526103353,
        "parent_id": "303b375c-d8fc-42aa-b522-0899da5e43ce",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A pattern I often see in code which "
            ],
            [
              "should be avoided",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " is"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A pattern I often see in code which "
          },
          {
            "Text": "should be avoided",
            "AttrFlags": 1
          },
          {
            "Text": " is"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526103353,
        "id": "23925ae8-d620-4c4b-b90c-e7b8c0123c04",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526103353,
        "parent_id": "303b375c-d8fc-42aa-b522-0899da5e43ce",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if (myEnumerable.Any(t=\u003et.Foo == \"Bob\"))\n{\n    var myFoo = myEnumerable.First(t=\u003et.Foo == \"Bob\");\n    //Do stuff\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if (myEnumerable.Any(t=\u003et.Foo == \"Bob\"))\n{\n    var myFoo = myEnumerable.First(t=\u003et.Foo == \"Bob\");\n    //Do stuff\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526103353,
        "id": "fe9a76d2-8de4-42c3-965d-8a2f40d01854",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526103353,
        "parent_id": "303b375c-d8fc-42aa-b522-0899da5e43ce",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It could be written more efficiently like this"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It could be written more efficiently like this"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526103353,
        "id": "0fe2c12f-3fe3-4d47-9bc6-d96aaca8a3b1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526103353,
        "parent_id": "303b375c-d8fc-42aa-b522-0899da5e43ce",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var myFoo = myEnumerable.FirstOrDefault(t=\u003et.Foo == \"Bob\");\nif (myFoo != null)\n{\n    //Do stuff\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var myFoo = myEnumerable.FirstOrDefault(t=\u003et.Foo == \"Bob\");\nif (myFoo != null)\n{\n    //Do stuff\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526103353,
        "id": "a614ca90-66f1-4d54-8367-1bd3c93ba1fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526103353,
        "parent_id": "303b375c-d8fc-42aa-b522-0899da5e43ce",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By using the second example, the collection is searched only once and give the same result as the first one. The same idea can be applied to "
            ],
            [
              "Single",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By using the second example, the collection is searched only once and give the same result as the first one. The same idea can be applied to "
          },
          {
            "Text": "Single",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Any and FirstOrDefault - best practice",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}