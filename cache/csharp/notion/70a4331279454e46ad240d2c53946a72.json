{
  "ID": "70a43312-7945-4e46-ad24-0d2c53946a72",
  "Root": {
    "id": "70a43312-7945-4e46-ad24-0d2c53946a72",
    "alive": true,
    "content": [
      "0d3925bf-2293-4eb8-9cbc-e2ee91377c18",
      "eba2fe0f-d56f-4bcf-9fa6-08a5f8de753c",
      "88713d57-c99f-4b64-988a-ac02a7c2fad2",
      "a5b4a4db-7a7a-4461-b301-25088e73c127",
      "38f97118-297c-42b3-a535-0c07bc60ae01"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549527396388,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550203680000,
    "parent_id": "06a46918-892a-4c7f-9b78-e8c23e0b6d32",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Simple usage"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "id": "0d3925bf-2293-4eb8-9cbc-e2ee91377c18",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527396385,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527396385,
        "parent_id": "70a43312-7945-4e46-ad24-0d2c53946a72",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Common usage of "
            ],
            [
              "lock",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a critical section."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Common usage of "
          },
          {
            "Text": "lock",
            "AttrFlags": 2
          },
          {
            "Text": " is a critical section."
          }
        ]
      },
      {
        "id": "eba2fe0f-d56f-4bcf-9fa6-08a5f8de753c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527396387,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527396387,
        "parent_id": "70a43312-7945-4e46-ad24-0d2c53946a72",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the following example "
            ],
            [
              "ReserveRoom",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is supposed to be called from different threads. Synchronization with "
            ],
            [
              "lock",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the simplest way to prevent race condition here. Method body is surrounded with "
            ],
            [
              "lock",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which ensures that two or more threads cannot execute it simultaneously."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the following example "
          },
          {
            "Text": "ReserveRoom",
            "AttrFlags": 2
          },
          {
            "Text": " is supposed to be called from different threads. Synchronization with "
          },
          {
            "Text": "lock",
            "AttrFlags": 2
          },
          {
            "Text": " is the simplest way to prevent race condition here. Method body is surrounded with "
          },
          {
            "Text": "lock",
            "AttrFlags": 2
          },
          {
            "Text": " which ensures that two or more threads cannot execute it simultaneously."
          }
        ]
      },
      {
        "id": "88713d57-c99f-4b64-988a-ac02a7c2fad2",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527396387,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550203680000,
        "parent_id": "70a43312-7945-4e46-ad24-0d2c53946a72",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class Hotel\n{\n    private readonly object _roomLock = new object();\n\n    public void ReserveRoom(int roomNumber)\n    {\n        // lock keyword ensures that only one thread executes critical section at once\n        // in this case, reserves a hotel room of given number\n        // preventing double bookings\n        lock (_roomLock)\n        {\n            // reserve room logic goes here\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "public class Hotel\n{\n    private readonly object _roomLock = new object();\n\n    public void ReserveRoom(int roomNumber)\n    {\n        // lock keyword ensures that only one thread executes critical section at once\n        // in this case, reserves a hotel room of given number\n        // preventing double bookings\n        lock (_roomLock)\n        {\n            // reserve room logic goes here\n        }\n    }\n}",
        "code_language": "C#"
      },
      {
        "id": "a5b4a4db-7a7a-4461-b301-25088e73c127",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527396388,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527396388,
        "parent_id": "70a43312-7945-4e46-ad24-0d2c53946a72",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If a thread reaches "
            ],
            [
              "lock",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "-ed block while another thread is running within it, the former will wait another to exit the block."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If a thread reaches "
          },
          {
            "Text": "lock",
            "AttrFlags": 2
          },
          {
            "Text": "-ed block while another thread is running within it, the former will wait another to exit the block."
          }
        ]
      },
      {
        "id": "38f97118-297c-42b3-a535-0c07bc60ae01",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527396388,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527396388,
        "parent_id": "70a43312-7945-4e46-ad24-0d2c53946a72",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Best practice is to define a private object to lock on, or a private static object variable to protect data common to all instances."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Best practice is to define a private object to lock on, or a private static object variable to protect data common to all instances."
          }
        ]
      }
    ],
    "title": "Simple usage",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}