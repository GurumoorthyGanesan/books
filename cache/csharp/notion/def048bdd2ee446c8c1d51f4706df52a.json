{
  "ID": "def048bd-d2ee-446c-8c1d-51f4706df52a",
  "Root": {
    "id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
    "alive": true,
    "content": [
      "1ad7f595-69a6-4ff8-ab66-699b90ab7032",
      "156fb421-e528-49c5-9643-3a90c9d7760c",
      "4b69c1bb-b461-4271-bb35-7bfeeed1b212",
      "cc0daa83-a09a-4c31-8abf-6f3bc99cd955",
      "031ad564-c6d6-442d-bad0-94a794d6a74d",
      "1ba4868a-47cd-4158-8b7d-9ea18d951a2d",
      "308bb265-3d38-4a98-a30b-3b88efba615c",
      "a1bc35b8-9c80-4ab7-8eb2-31cc0e47da10",
      "a08d71de-e398-4fd7-97d0-f07d7a0fb843",
      "e1eddc80-942e-4e12-b293-abd4b0649374",
      "6d07cd14-43b9-4cde-bb47-52b303eaa65f",
      "55912947-3c8a-417a-8730-785f5fc4bba2",
      "21325db8-5fce-4e4c-8f88-e7dab6835044",
      "0b90c316-31b5-407b-a2de-2feffeab7600",
      "853e9f32-5471-4ecd-b14d-35e9349f2fe8",
      "8383cded-5215-48fb-afb4-98f323efb539",
      "0981cb53-bce5-4ef5-bd00-6f67e08e031a",
      "7117357a-d93b-4570-b72f-a49b21ab42ab",
      "69c0fba8-ea20-4f89-9f49-96445be82d73",
      "c094d6c2-c030-4719-a4f4-9783b5783a8c",
      "e159cc1f-0705-492d-b674-45aca08a6b83",
      "348cb59c-97e9-42bc-8d46-68a7ca4af805",
      "6e63eab0-4791-43f1-83d0-f4c95bbf9864",
      "55ad445a-95bb-4f4b-8039-f627f44c9b0e",
      "032520a1-9767-4258-baf0-ebb96678ddf5",
      "70b06efe-9fcf-4cfd-9727-532b33c5b2b5",
      "a6915472-5b67-4df8-93d7-e9a539eb146a",
      "6ade8fdf-747b-42ea-b3ba-ea3e72b544dc",
      "437d8413-40dc-48d7-bad7-74897a1f24bb",
      "bf5d2bfb-5fd4-4500-9f0f-e58f160fef99",
      "b57bb71d-8e34-4670-86e8-e1744d20addb"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549524857250,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549938840000,
    "parent_id": "307cbc92-1d45-43c5-9927-7963d630a818",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Operator nameof"
        ]
      ]
    },
    "type": "page",
    "version": 11,
    "content_resolved": [
      {
        "id": "1ad7f595-69a6-4ff8-ab66-699b90ab7032",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857240,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857240,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "nameof",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator returns the name of a code element as a "
            ],
            [
              "string",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This is useful when throwing exceptions related to method arguments and also when implementing "
            ],
            [
              "INotifyPropertyChanged",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "nameof",
            "AttrFlags": 2
          },
          {
            "Text": " operator returns the name of a code element as a "
          },
          {
            "Text": "string",
            "AttrFlags": 2
          },
          {
            "Text": ". This is useful when throwing exceptions related to method arguments and also when implementing "
          },
          {
            "Text": "INotifyPropertyChanged",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "156fb421-e528-49c5-9643-3a90c9d7760c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857243,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549938780000,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public string SayHello(string greeted)\n{\n    if (greeted == null)\n        throw new ArgumentNullException(nameof(greeted));\n    \n    Console.WriteLine(\"Hello, \" + greeted);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public string SayHello(string greeted)\n{\n    if (greeted == null)\n        throw new ArgumentNullException(nameof(greeted));\n    \n    Console.WriteLine(\"Hello, \" + greeted);\n}",
        "code_language": "C#"
      },
      {
        "id": "4b69c1bb-b461-4271-bb35-7bfeeed1b212",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857243,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857243,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "nameof",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator is evaluated at compile time and changes the expression into a string literal. This is also useful for strings that are named after their member that exposes them. Consider the following:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "nameof",
            "AttrFlags": 2
          },
          {
            "Text": " operator is evaluated at compile time and changes the expression into a string literal. This is also useful for strings that are named after their member that exposes them. Consider the following:"
          }
        ]
      },
      {
        "id": "cc0daa83-a09a-4c31-8abf-6f3bc99cd955",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857244,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549938780000,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public static class Strings\n{\n    public const string Foo = nameof(Foo); // Rather than Foo = \"Foo\"\n    public const string Bar = nameof(Bar); // Rather than Bar = \"Bar\"\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public static class Strings\n{\n    public const string Foo = nameof(Foo); // Rather than Foo = \"Foo\"\n    public const string Bar = nameof(Bar); // Rather than Bar = \"Bar\"\n}",
        "code_language": "C#"
      },
      {
        "id": "031ad564-c6d6-442d-bad0-94a794d6a74d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857244,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857244,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Since "
            ],
            [
              "nameof",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " expressions are compile-time constants, they can be used in attributes, "
            ],
            [
              "case",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " labels, "
            ],
            [
              "switch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statements, and so on."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Since "
          },
          {
            "Text": "nameof",
            "AttrFlags": 2
          },
          {
            "Text": " expressions are compile-time constants, they can be used in attributes, "
          },
          {
            "Text": "case",
            "AttrFlags": 2
          },
          {
            "Text": " labels, "
          },
          {
            "Text": "switch",
            "AttrFlags": 2
          },
          {
            "Text": " statements, and so on."
          }
        ]
      },
      {
        "id": "1ba4868a-47cd-4158-8b7d-9ea18d951a2d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857244,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857244,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "id": "308bb265-3d38-4a98-a30b-3b88efba615c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857244,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857244,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is convenient to use "
            ],
            [
              "nameof",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with "
            ],
            [
              "Enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s. Instead of:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is convenient to use "
          },
          {
            "Text": "nameof",
            "AttrFlags": 2
          },
          {
            "Text": " with "
          },
          {
            "Text": "Enum",
            "AttrFlags": 2
          },
          {
            "Text": "s. Instead of:"
          }
        ]
      },
      {
        "id": "a1bc35b8-9c80-4ab7-8eb2-31cc0e47da10",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857244,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549938780000,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "Console.WriteLine(Enum.One.ToString());"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "Console.WriteLine(Enum.One.ToString());",
        "code_language": "C#"
      },
      {
        "id": "a08d71de-e398-4fd7-97d0-f07d7a0fb843",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857244,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857244,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "it is possible to use:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "it is possible to use:"
          }
        ]
      },
      {
        "id": "e1eddc80-942e-4e12-b293-abd4b0649374",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857245,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549938780000,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "Console.WriteLine(nameof(Enum.One))"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "Console.WriteLine(nameof(Enum.One))",
        "code_language": "C#"
      },
      {
        "id": "6d07cd14-43b9-4cde-bb47-52b303eaa65f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857245,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857245,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The output will be "
            ],
            [
              "One",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in both cases."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The output will be "
          },
          {
            "Text": "One",
            "AttrFlags": 2
          },
          {
            "Text": " in both cases."
          }
        ]
      },
      {
        "id": "55912947-3c8a-417a-8730-785f5fc4bba2",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857245,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857245,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "id": "21325db8-5fce-4e4c-8f88-e7dab6835044",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857245,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857245,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "nameof",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator can access non-static members using static-like syntax. Instead of doing:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "nameof",
            "AttrFlags": 2
          },
          {
            "Text": " operator can access non-static members using static-like syntax. Instead of doing:"
          }
        ]
      },
      {
        "id": "0b90c316-31b5-407b-a2de-2feffeab7600",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857245,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549938780000,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "string foo = \"Foo\";\nstring lengthName = nameof(foo.Length);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "string foo = \"Foo\";\nstring lengthName = nameof(foo.Length);",
        "code_language": "C#"
      },
      {
        "id": "853e9f32-5471-4ecd-b14d-35e9349f2fe8",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857245,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857245,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Can be replaced with:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Can be replaced with:"
          }
        ]
      },
      {
        "id": "8383cded-5215-48fb-afb4-98f323efb539",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857245,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549938840000,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "string lengthName = nameof(string.Length);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "string lengthName = nameof(string.Length);",
        "code_language": "C#"
      },
      {
        "id": "0981cb53-bce5-4ef5-bd00-6f67e08e031a",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857246,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857246,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The output will be "
            ],
            [
              "Length",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in both examples. However, the latter prevents the creation of unnecessary instances."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The output will be "
          },
          {
            "Text": "Length",
            "AttrFlags": 2
          },
          {
            "Text": " in both examples. However, the latter prevents the creation of unnecessary instances."
          }
        ]
      },
      {
        "id": "7117357a-d93b-4570-b72f-a49b21ab42ab",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857246,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857246,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "id": "69c0fba8-ea20-4f89-9f49-96445be82d73",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857246,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857246,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Although the "
            ],
            [
              "nameof",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator works with most language constructs, there are some limitations. For example, you cannot use the "
            ],
            [
              "nameof",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator on open generic types or method return values:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Although the "
          },
          {
            "Text": "nameof",
            "AttrFlags": 2
          },
          {
            "Text": " operator works with most language constructs, there are some limitations. For example, you cannot use the "
          },
          {
            "Text": "nameof",
            "AttrFlags": 2
          },
          {
            "Text": " operator on open generic types or method return values:"
          }
        ]
      },
      {
        "id": "c094d6c2-c030-4719-a4f4-9783b5783a8c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857246,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549938840000,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public static int Main()\n{   \n    Console.WriteLine(nameof(List\u003c\u003e)); // Compile-time error\n    Console.WriteLine(nameof(Main())); // Compile-time error\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public static int Main()\n{   \n    Console.WriteLine(nameof(List\u003c\u003e)); // Compile-time error\n    Console.WriteLine(nameof(Main())); // Compile-time error\n}",
        "code_language": "C#"
      },
      {
        "id": "e159cc1f-0705-492d-b674-45aca08a6b83",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857246,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857246,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Furthermore, if you apply it to a generic type, the generic type parameter will be ignored:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Furthermore, if you apply it to a generic type, the generic type parameter will be ignored:"
          }
        ]
      },
      {
        "id": "348cb59c-97e9-42bc-8d46-68a7ca4af805",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857246,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549938840000,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "Console.WriteLine(nameof(List\u003cint\u003e));  // \"List\"\nConsole.WriteLine(nameof(List\u003cbool\u003e)); // \"List\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "Console.WriteLine(nameof(List\u003cint\u003e));  // \"List\"\nConsole.WriteLine(nameof(List\u003cbool\u003e)); // \"List\"",
        "code_language": "C#"
      },
      {
        "id": "6e63eab0-4791-43f1-83d0-f4c95bbf9864",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857248,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857248,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For more examples, see "
            ],
            [
              "this topic",
              [
                [
                  "a",
                  "https://stackoverflow.com/documentation/c%23/80/nameof-operator#t=201608031424500177545"
                ]
              ]
            ],
            [
              " dedicated to "
            ],
            [
              "nameof",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For more examples, see "
          },
          {
            "Text": "this topic",
            "Link": "https://stackoverflow.com/documentation/c%23/80/nameof-operator#t=201608031424500177545"
          },
          {
            "Text": " dedicated to "
          },
          {
            "Text": "nameof",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "55ad445a-95bb-4f4b-8039-f627f44c9b0e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857248,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857248,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "id": "032520a1-9767-4258-baf0-ebb96678ddf5",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857249,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857249,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Workaround for previous versions ("
            ],
            [
              "more detail",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%23/80/nameof-operator/26157/name-of-extension-support-added-for-before-c-sharp-6-version#t=201612071107472552734"
                ]
              ]
            ],
            [
              ")"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Workaround for previous versions ("
          },
          {
            "Text": "more detail",
            "Link": "http://stackoverflow.com/documentation/c%23/80/nameof-operator/26157/name-of-extension-support-added-for-before-c-sharp-6-version#t=201612071107472552734"
          },
          {
            "Text": ")"
          }
        ]
      },
      {
        "id": "70b06efe-9fcf-4cfd-9727-532b33c5b2b5",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857249,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857249,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Although the "
            ],
            [
              "nameof",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator does not exist in C# for versions prior to 6.0, similar functionality can be had by using "
            ],
            [
              "MemberExpression",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as in the following:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Although the "
          },
          {
            "Text": "nameof",
            "AttrFlags": 2
          },
          {
            "Text": " operator does not exist in C# for versions prior to 6.0, similar functionality can be had by using "
          },
          {
            "Text": "MemberExpression",
            "AttrFlags": 2
          },
          {
            "Text": " as in the following:"
          }
        ]
      },
      {
        "id": "a6915472-5b67-4df8-93d7-e9a539eb146a",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857249,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857249,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Expression:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Expression:"
          }
        ]
      },
      {
        "id": "6ade8fdf-747b-42ea-b3ba-ea3e72b544dc",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857249,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549938840000,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public static string NameOf\u003cT\u003e(Expression\u003cFunc\u003cT\u003e\u003e propExp)\n{\n    var memberExpression = propExp.Body as MemberExpression;\n    return memberExpression != null ? memberExpression.Member.Name : null;\n}\n\npublic static string NameOf\u003cTObj, T\u003e(Expression\u003cFunc\u003cTObj, T\u003e\u003e propExp)\n{\n    var memberExpression = propExp.Body as MemberExpression;\n    return memberExpression != null ? memberExpression.Member.Name : null;\n}\n"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "public static string NameOf\u003cT\u003e(Expression\u003cFunc\u003cT\u003e\u003e propExp)\n{\n    var memberExpression = propExp.Body as MemberExpression;\n    return memberExpression != null ? memberExpression.Member.Name : null;\n}\n\npublic static string NameOf\u003cTObj, T\u003e(Expression\u003cFunc\u003cTObj, T\u003e\u003e propExp)\n{\n    var memberExpression = propExp.Body as MemberExpression;\n    return memberExpression != null ? memberExpression.Member.Name : null;\n}\n",
        "code_language": "C#"
      },
      {
        "id": "437d8413-40dc-48d7-bad7-74897a1f24bb",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857250,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857250,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Usage:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Usage:"
          }
        ]
      },
      {
        "id": "bf5d2bfb-5fd4-4500-9f0f-e58f160fef99",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857250,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549938840000,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "string variableName = NameOf(() =\u003e variable);\nstring propertyName = NameOf((Foo o) =\u003e o.Bar);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "string variableName = NameOf(() =\u003e variable);\nstring propertyName = NameOf((Foo o) =\u003e o.Bar);",
        "code_language": "C#"
      },
      {
        "id": "b57bb71d-8e34-4670-86e8-e1744d20addb",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524857250,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524857250,
        "parent_id": "def048bd-d2ee-446c-8c1d-51f4706df52a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that this approach causes an expression tree to be created on every call, so the performance is much worse compared to "
            ],
            [
              "nameof",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator which is evaluated at compile time and has zero overhead at runtime."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that this approach causes an expression tree to be created on every call, so the performance is much worse compared to "
          },
          {
            "Text": "nameof",
            "AttrFlags": 2
          },
          {
            "Text": " operator which is evaluated at compile time and has zero overhead at runtime."
          }
        ]
      }
    ],
    "title": "Operator nameof",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}