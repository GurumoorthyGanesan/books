{
  "ID": "2df315b5-14e6-44ff-809d-7470524d6644",
  "Root": {
    "alive": true,
    "content": [
      "523b420a-ac72-4fe4-9ed3-04c9ecb39056",
      "2187e15b-11c4-43e2-8d6b-f17f6aff6c9d",
      "c4a87a80-14d3-4c13-ab4a-8ffb206472d9",
      "f576aa9f-d8c3-4416-a7da-55bfec62d03d",
      "0464666f-0dd5-4170-a5be-8da8e0e41d33",
      "800ba460-3a73-4442-b621-088e01468bb0",
      "732158e8-03d2-406f-8788-fe83c6dab381",
      "eed31313-68a6-4991-89da-4535f14c6d2d",
      "88e7982a-f48f-4a6e-a1e3-8a36d5bc838c",
      "005a44b8-4567-4187-a8af-72b938e82b3d",
      "69279888-7caa-4708-82d0-2680db3677c7",
      "16ee7a01-83ac-40ee-a836-d6059d1357c2",
      "72ad3abc-7d9b-4eec-a467-934a7ebf3f15",
      "662b1487-08f5-4a86-b9bc-5b08f1ae5439",
      "c4290c64-c149-43f8-a871-931c73c99061",
      "0d429275-0939-4707-9c65-f2bab1b22e44",
      "50cf4e58-ef2b-4fbc-b038-0d146113eaf1",
      "873a0c94-99f9-4c66-9112-ae60f1f0fb38",
      "4e551f64-124a-4562-a6d5-80f5fbe7006b",
      "d5230126-3438-4147-8dab-5e1e4dae218e",
      "05b3b81a-d698-4dbf-b58d-84fd2bfd69ea",
      "156c5620-a126-487d-85f0-e6034485cfe3",
      "0b8b8527-05ee-4ddc-8f08-06abc4e96540",
      "9e832534-db8f-4180-a085-d99c401acd23",
      "dadd0593-a0b4-4259-8b91-6887ecf08f3a",
      "ff53b13a-dfbe-436e-ba3a-f9df626e150a",
      "38e78671-3e4d-4ad0-8c30-89393b89a31a",
      "eae193f1-70ee-4033-9c10-fa5c48412839",
      "0ef73050-3211-4088-a797-c231cf10bc1b",
      "eb92874e-7940-434e-a875-876db7124de3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549530437618,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "2df315b5-14e6-44ff-809d-7470524d6644",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550224680000,
    "parent_id": "b8c4f146-d2bd-4cc4-b711-718656fb4f9d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using LINQ to Objects"
        ]
      ]
    },
    "type": "page",
    "version": 28,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437611,
        "id": "523b420a-ac72-4fe4-9ed3-04c9ecb39056",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437611,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A simple SELECT query in Linq",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A simple SELECT query in Linq",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437613,
        "id": "2187e15b-11c4-43e2-8d6b-f17f6aff6c9d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550224560000,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "static void Main(string[] args)\n{\n    string[] cars = { \"VW Golf\", \n                        \"Opel Astra\", \n                        \"Audi A4\", \n                        \"Ford Focus\", \n                        \"Seat Leon\", \n                        \"VW Passat\", \n                        \"VW Polo\", \n                        \"Mercedes C-Class\" };\n\n    var list = from car in cars\n               select car;\n\n    StringBuilder sb = new StringBuilder();\n\n    foreach (string entry in list)\n    {\n        sb.Append(entry + \"\\n\");\n    }\n\n    Console.WriteLine(sb.ToString());\n    Console.ReadLine();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "static void Main(string[] args)\n{\n    string[] cars = { \"VW Golf\", \n                        \"Opel Astra\", \n                        \"Audi A4\", \n                        \"Ford Focus\", \n                        \"Seat Leon\", \n                        \"VW Passat\", \n                        \"VW Polo\", \n                        \"Mercedes C-Class\" };\n\n    var list = from car in cars\n               select car;\n\n    StringBuilder sb = new StringBuilder();\n\n    foreach (string entry in list)\n    {\n        sb.Append(entry + \"\\n\");\n    }\n\n    Console.WriteLine(sb.ToString());\n    Console.ReadLine();\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437614,
        "id": "c4a87a80-14d3-4c13-ab4a-8ffb206472d9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437614,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the example above, an array of strings (cars) is used as a collection of objects to be queried using LINQ. In a LINQ query, the from clause comes first in order to introduce the data source (cars) and the range variable (car). When the query is executed, the range variable will serve as a reference to each successive element in cars. Because the compiler can infer the type of car, you do not have to specify it explicitly"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the example above, an array of strings (cars) is used as a collection of objects to be queried using LINQ. In a LINQ query, the from clause comes first in order to introduce the data source (cars) and the range variable (car). When the query is executed, the range variable will serve as a reference to each successive element in cars. Because the compiler can infer the type of car, you do not have to specify it explicitly"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437614,
        "id": "f576aa9f-d8c3-4416-a7da-55bfec62d03d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437614,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When the above code is compiled and executed, it produces the following result:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When the above code is compiled and executed, it produces the following result:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437614,
        "id": "0464666f-0dd5-4170-a5be-8da8e0e41d33",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437614,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "https://i.stack.imgur.com/lG65Q.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "https://i.stack.imgur.com/lG65Q.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fi.stack.imgur.com%2FlG65Q.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437615,
        "id": "800ba460-3a73-4442-b621-088e01468bb0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437615,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "SELECT with a WHERE Clause",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "SELECT with a WHERE Clause",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437615,
        "id": "732158e8-03d2-406f-8788-fe83c6dab381",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437615,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var list = from car in cars\n           where car.Contains(\"VW\")\n           select car;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var list = from car in cars\n           where car.Contains(\"VW\")\n           select car;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437615,
        "id": "eed31313-68a6-4991-89da-4535f14c6d2d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437615,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The WHERE clause is used to query the string array (cars) to find and return a subset of array which satisfies the WHERE clause."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The WHERE clause is used to query the string array (cars) to find and return a subset of array which satisfies the WHERE clause."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437615,
        "id": "88e7982a-f48f-4a6e-a1e3-8a36d5bc838c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437615,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When the above code is compiled and executed, it produces the following result:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When the above code is compiled and executed, it produces the following result:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437615,
        "id": "005a44b8-4567-4187-a8af-72b938e82b3d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437615,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "https://i.stack.imgur.com/llGXx.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "https://i.stack.imgur.com/llGXx.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fi.stack.imgur.com%2FllGXx.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437615,
        "id": "69279888-7caa-4708-82d0-2680db3677c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437615,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Generating an Ordered List",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Generating an Ordered List",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437615,
        "id": "16ee7a01-83ac-40ee-a836-d6059d1357c2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550224620000,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "var list = from car in cars\n           orderby car ascending \n           select car;"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var list = from car in cars\n           orderby car ascending \n           select car;",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437615,
        "id": "72ad3abc-7d9b-4eec-a467-934a7ebf3f15",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437615,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sometimes it is useful to sort the returned data. The orderby clause will cause the elements to be sorted according to the default comparer for the type being sorted."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sometimes it is useful to sort the returned data. The orderby clause will cause the elements to be sorted according to the default comparer for the type being sorted."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437616,
        "id": "662b1487-08f5-4a86-b9bc-5b08f1ae5439",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437616,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When the above code is compiled and executed, it produces the following result:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When the above code is compiled and executed, it produces the following result:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437616,
        "id": "c4290c64-c149-43f8-a871-931c73c99061",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437616,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "https://i.stack.imgur.com/ODH55.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "https://i.stack.imgur.com/ODH55.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fi.stack.imgur.com%2FODH55.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437616,
        "id": "0d429275-0939-4707-9c65-f2bab1b22e44",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437616,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Working with a custom type",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Working with a custom type",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437616,
        "id": "50cf4e58-ef2b-4fbc-b038-0d146113eaf1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437616,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example, a typed list is created, populated, and then queried"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example, a typed list is created, populated, and then queried"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437616,
        "id": "873a0c94-99f9-4c66-9112-ae60f1f0fb38",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550224620000,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class Car\n{\n    public String Name { get; private set; }\n    public int UnitsSold { get; private set; }\n\n    public Car(string name, int unitsSold)\n    {\n        Name = name;\n        UnitsSold = unitsSold;\n    }\n}\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n\n        var car1 = new Car(\"VW Golf\", 270952);\n        var car2 = new Car(\"Opel Astra\", 56079);\n        var car3 = new Car(\"Audi A4\", 52493);\n        var car4 = new Car(\"Ford Focus\", 51677);\n        var car5 = new Car(\"Seat Leon\", 42125);\n        var car6 = new Car(\"VW Passat\", 97586);\n        var car7 = new Car(\"VW Polo\", 69867);\n        var car8 = new Car(\"Mercedes C-Class\", 67549);\n\n        var cars = new List\u003cCar\u003e { \n            car1, car2, car3, car4, car5, car6, car7, car8 };\n        var list = from car in cars\n                   select car.Name;\n\n        foreach (var entry in list)\n        {\n            Console.WriteLine(entry);\n        }\n        Console.ReadLine();\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "public class Car\n{\n    public String Name { get; private set; }\n    public int UnitsSold { get; private set; }\n\n    public Car(string name, int unitsSold)\n    {\n        Name = name;\n        UnitsSold = unitsSold;\n    }\n}\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n\n        var car1 = new Car(\"VW Golf\", 270952);\n        var car2 = new Car(\"Opel Astra\", 56079);\n        var car3 = new Car(\"Audi A4\", 52493);\n        var car4 = new Car(\"Ford Focus\", 51677);\n        var car5 = new Car(\"Seat Leon\", 42125);\n        var car6 = new Car(\"VW Passat\", 97586);\n        var car7 = new Car(\"VW Polo\", 69867);\n        var car8 = new Car(\"Mercedes C-Class\", 67549);\n\n        var cars = new List\u003cCar\u003e { \n            car1, car2, car3, car4, car5, car6, car7, car8 };\n        var list = from car in cars\n                   select car.Name;\n\n        foreach (var entry in list)\n        {\n            Console.WriteLine(entry);\n        }\n        Console.ReadLine();\n    }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437617,
        "id": "4e551f64-124a-4562-a6d5-80f5fbe7006b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437617,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When the above code is compiled and executed, it produces the following result:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When the above code is compiled and executed, it produces the following result:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437617,
        "id": "d5230126-3438-4147-8dab-5e1e4dae218e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437617,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "https://i.stack.imgur.com/0jUOC.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "https://i.stack.imgur.com/0jUOC.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fi.stack.imgur.com%2F0jUOC.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437617,
        "id": "05b3b81a-d698-4dbf-b58d-84fd2bfd69ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437617,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Until now the examples don’t seem amazing as one can just iterate through the array to do basically the same. However, with the few examples below you can see how to create more complex queries with LINQ to Objects and achieve more with a lot less of code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Until now the examples don’t seem amazing as one can just iterate through the array to do basically the same. However, with the few examples below you can see how to create more complex queries with LINQ to Objects and achieve more with a lot less of code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437617,
        "id": "156c5620-a126-487d-85f0-e6034485cfe3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437617,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the example below we can select cars that have been sold over 60000 units and sort them over the number of units sold:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the example below we can select cars that have been sold over 60000 units and sort them over the number of units sold:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437617,
        "id": "0b8b8527-05ee-4ddc-8f08-06abc4e96540",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550224620000,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "var list = from car in cars\n           where car.UnitsSold \u003e 60000 \n           orderby car.UnitsSold descending \n           select car;\n\nStringBuilder sb = new StringBuilder();\n\nforeach (var entry in list)\n{\n    sb.AppendLine($\"{entry.Name} - {entry.UnitsSold}\");\n}\nConsole.WriteLine(sb.ToString());"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "var list = from car in cars\n           where car.UnitsSold \u003e 60000 \n           orderby car.UnitsSold descending \n           select car;\n\nStringBuilder sb = new StringBuilder();\n\nforeach (var entry in list)\n{\n    sb.AppendLine($\"{entry.Name} - {entry.UnitsSold}\");\n}\nConsole.WriteLine(sb.ToString());",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437617,
        "id": "9e832534-db8f-4180-a085-d99c401acd23",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437617,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When the above code is compiled and executed, it produces the following result:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When the above code is compiled and executed, it produces the following result:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437617,
        "id": "dadd0593-a0b4-4259-8b91-6887ecf08f3a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437617,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "https://i.stack.imgur.com/ZDeTt.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "https://i.stack.imgur.com/ZDeTt.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fi.stack.imgur.com%2FZDeTt.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437618,
        "id": "ff53b13a-dfbe-436e-ba3a-f9df626e150a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437618,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the example below we can select cars that have sold an odd number of units and order them alphabetically over its name:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the example below we can select cars that have sold an odd number of units and order them alphabetically over its name:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437618,
        "id": "38e78671-3e4d-4ad0-8c30-89393b89a31a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550224680000,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "var list = from car in cars\n           where car.UnitsSold % 2 != 0 \n           orderby car.Name ascending \n           select car;"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var list = from car in cars\n           where car.UnitsSold % 2 != 0 \n           orderby car.Name ascending \n           select car;",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437618,
        "id": "eae193f1-70ee-4033-9c10-fa5c48412839",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437618,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When the above code is compiled and executed, it produces the following result:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When the above code is compiled and executed, it produces the following result:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530437618,
        "id": "0ef73050-3211-4088-a797-c231cf10bc1b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530437618,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "https://i.stack.imgur.com/fJnTp.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "https://i.stack.imgur.com/fJnTp.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fi.stack.imgur.com%2FfJnTp.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550224680000,
        "id": "eb92874e-7940-434e-a875-876db7124de3",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550224680000,
        "parent_id": "2df315b5-14e6-44ff-809d-7470524d6644",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "Using LINQ to Objects",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}