{
  "ID": "2e9aabc9-1dff-494f-8b4f-e3a5dad74f73",
  "Root": {
    "id": "2e9aabc9-1dff-494f-8b4f-e3a5dad74f73",
    "alive": true,
    "content": [
      "cbf232c7-9ac5-424c-9d26-a8b8fc80292e",
      "71f36fdc-13f3-4cb8-aced-c54a38e60220",
      "75088f45-846a-4b65-87bb-c86d86d9482e",
      "95e40163-9ec6-43ca-bced-d2a301e608bf",
      "d229660d-dedc-49bc-98d1-1be6c6f148fb"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525061567,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549944300000,
    "parent_id": "1cef0e56-e2c1-46b9-9c66-002b53d2c779",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "delegate"
        ]
      ]
    },
    "type": "page",
    "version": 17,
    "content_resolved": [
      {
        "id": "cbf232c7-9ac5-424c-9d26-a8b8fc80292e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525061563,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525061563,
        "parent_id": "2e9aabc9-1dff-494f-8b4f-e3a5dad74f73",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Delegates are types that represent a reference to a method. They are used for passing methods as arguments to other methods."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Delegates are types that represent a reference to a method. They are used for passing methods as arguments to other methods."
          }
        ]
      },
      {
        "id": "71f36fdc-13f3-4cb8-aced-c54a38e60220",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525061566,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525061566,
        "parent_id": "2e9aabc9-1dff-494f-8b4f-e3a5dad74f73",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Delegates can hold static methods, instance methods, anonymous methods, or lambda expressions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Delegates can hold static methods, instance methods, anonymous methods, or lambda expressions."
          }
        ]
      },
      {
        "id": "75088f45-846a-4b65-87bb-c86d86d9482e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525061566,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549944300000,
        "parent_id": "2e9aabc9-1dff-494f-8b4f-e3a5dad74f73",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "class DelegateExample\n{\n    public void Run()\n    {\n        //using class method\n        InvokeDelegate( WriteToConsole ); \n        \n        //using anonymous method\n        DelegateInvoker di = delegate ( string input ) \n        { \n            Console.WriteLine( string.Format( \"di: {0} \", input ) );\n            return true; \n        };\n        InvokeDelegate( di ); \n        \n        //using lambda expression\n        InvokeDelegate( input =\u003e false ); \n    }\n\n    public delegate bool DelegateInvoker( string input );\n\n    public void InvokeDelegate(DelegateInvoker func)\n    {\n        var ret = func( \"hello world\" );\n        Console.WriteLine( string.Format( \" \u003e delegate returned {0}\", ret ) );\n    }\n\n    public bool WriteToConsole( string input )\n    {\n        Console.WriteLine( string.Format( \"WriteToConsole: '{0}'\", input ) );\n        return true;\n    }\n}\n"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "class DelegateExample\n{\n    public void Run()\n    {\n        //using class method\n        InvokeDelegate( WriteToConsole ); \n        \n        //using anonymous method\n        DelegateInvoker di = delegate ( string input ) \n        { \n            Console.WriteLine( string.Format( \"di: {0} \", input ) );\n            return true; \n        };\n        InvokeDelegate( di ); \n        \n        //using lambda expression\n        InvokeDelegate( input =\u003e false ); \n    }\n\n    public delegate bool DelegateInvoker( string input );\n\n    public void InvokeDelegate(DelegateInvoker func)\n    {\n        var ret = func( \"hello world\" );\n        Console.WriteLine( string.Format( \" \u003e delegate returned {0}\", ret ) );\n    }\n\n    public bool WriteToConsole( string input )\n    {\n        Console.WriteLine( string.Format( \"WriteToConsole: '{0}'\", input ) );\n        return true;\n    }\n}\n",
        "code_language": "C#"
      },
      {
        "id": "95e40163-9ec6-43ca-bced-d2a301e608bf",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525061567,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525061567,
        "parent_id": "2e9aabc9-1dff-494f-8b4f-e3a5dad74f73",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When assigning a method to a delegate it is important to note that the method must have the same return type as well as parameters. This differs from ‘normal’ method overloading, where only the parameters define the signature of the method."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When assigning a method to a delegate it is important to note that the method must have the same return type as well as parameters. This differs from ‘normal’ method overloading, where only the parameters define the signature of the method."
          }
        ]
      },
      {
        "id": "d229660d-dedc-49bc-98d1-1be6c6f148fb",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525061567,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525061567,
        "parent_id": "2e9aabc9-1dff-494f-8b4f-e3a5dad74f73",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Events are built on top of delegates."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Events are built on top of delegates."
          }
        ]
      }
    ],
    "title": "delegate",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}