{
  "ID": "b4d7dcde-82ad-4a78-80e5-73ccdbfbe6c7",
  "Root": {
    "id": "b4d7dcde-82ad-4a78-80e5-73ccdbfbe6c7",
    "alive": true,
    "content": [
      "d64cca48-aba0-462c-b777-ce25b62582a0",
      "6f35caf2-f591-4c25-8aef-ff98823688a5",
      "8cdca35a-b693-48a8-b9e1-12cf8b028046",
      "6ff26381-bb88-49c3-84e8-4a73548141e0",
      "19542a56-0daa-4309-9a10-a40807d4bbc5",
      "b723cf66-ca6d-4951-ab9d-9c470e54bb7d",
      "435b4da1-fbeb-424c-b0fc-5a1c4a4e084a",
      "b0dea5ac-e795-45fa-ba83-973c6591b375",
      "42475c69-b0da-4c21-8d6c-efb592df2e32",
      "a4f4e62a-a9ed-4432-b4e4-c7f6068fbd4b",
      "8f988d9b-c7e6-4e70-a64d-059701607f7f",
      "d06df3d9-2c6d-4e4c-85d7-4f57bb775e2d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525268482,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550044980000,
    "parent_id": "3367ad51-2d2f-44db-b5a0-5d201dfd7ee1",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Explicit interface implementation"
        ]
      ]
    },
    "type": "page",
    "version": 14,
    "content_resolved": [
      {
        "id": "d64cca48-aba0-462c-b777-ce25b62582a0",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525268478,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525268478,
        "parent_id": "b4d7dcde-82ad-4a78-80e5-73ccdbfbe6c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Explicit interface implementation is necessary when you implement multiple interfaces who define a common method, but different implementations are required depending on which interface is being used to call the method (note that you don’t need explicit implementations if multiple interfaces share the same method and a common implementation is possible)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Explicit interface implementation is necessary when you implement multiple interfaces who define a common method, but different implementations are required depending on which interface is being used to call the method (note that you don’t need explicit implementations if multiple interfaces share the same method and a common implementation is possible)."
          }
        ]
      },
      {
        "id": "6f35caf2-f591-4c25-8aef-ff98823688a5",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525268481,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550044980000,
        "parent_id": "b4d7dcde-82ad-4a78-80e5-73ccdbfbe6c7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "interface IChauffeur \n{\n    string Drive();\n}\n\ninterface IGolfPlayer\n{\n    string Drive();\n}\n\nclass GolfingChauffeur : IChauffeur, IGolfPlayer \n{\n    public string Drive()\n    {\n        return \"Vroom!\";\n    }\n\n    string IGolfPlayer.Drive()\n    {\n        return \"Took a swing...\";\n    }\n}\n\n\nGolfingChauffeur obj = new GolfingChauffeur();\nIChauffeur chauffeur = obj;\nIGolfPlayer golfer = obj;\n\nConsole.WriteLine(obj.Drive()); // Vroom!\nConsole.WriteLine(chauffeur.Drive()); // Vroom!\nConsole.WriteLine(golfer.Drive()); // Took a swing...\n"
            ]
          ]
        },
        "type": "code",
        "version": 9,
        "code": "interface IChauffeur \n{\n    string Drive();\n}\n\ninterface IGolfPlayer\n{\n    string Drive();\n}\n\nclass GolfingChauffeur : IChauffeur, IGolfPlayer \n{\n    public string Drive()\n    {\n        return \"Vroom!\";\n    }\n\n    string IGolfPlayer.Drive()\n    {\n        return \"Took a swing...\";\n    }\n}\n\n\nGolfingChauffeur obj = new GolfingChauffeur();\nIChauffeur chauffeur = obj;\nIGolfPlayer golfer = obj;\n\nConsole.WriteLine(obj.Drive()); // Vroom!\nConsole.WriteLine(chauffeur.Drive()); // Vroom!\nConsole.WriteLine(golfer.Drive()); // Took a swing...\n",
        "code_language": "C#"
      },
      {
        "id": "8cdca35a-b693-48a8-b9e1-12cf8b028046",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525268481,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525268481,
        "parent_id": "b4d7dcde-82ad-4a78-80e5-73ccdbfbe6c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The implementation cannot be called from anywhere else except by using the interface:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The implementation cannot be called from anywhere else except by using the interface:"
          }
        ]
      },
      {
        "id": "6ff26381-bb88-49c3-84e8-4a73548141e0",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525268481,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549612500000,
        "parent_id": "b4d7dcde-82ad-4a78-80e5-73ccdbfbe6c7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class Golfer : IGolfPlayer\n{\n    string IGolfPlayer.Drive()\n    {\n        return \"Swinging hard...\";\n    }\n    public void Swing()\n    {\n        Drive(); // Compiler error: No such method\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public class Golfer : IGolfPlayer\n{\n    string IGolfPlayer.Drive()\n    {\n        return \"Swinging hard...\";\n    }\n    public void Swing()\n    {\n        Drive(); // Compiler error: No such method\n    }\n}",
        "code_language": "C#"
      },
      {
        "id": "19542a56-0daa-4309-9a10-a40807d4bbc5",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525268481,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525268481,
        "parent_id": "b4d7dcde-82ad-4a78-80e5-73ccdbfbe6c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Due to this, it may be advantageous to put complex implementation code of an explicitly implemented interface in a separate, private method."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Due to this, it may be advantageous to put complex implementation code of an explicitly implemented interface in a separate, private method."
          }
        ]
      },
      {
        "id": "b723cf66-ca6d-4951-ab9d-9c470e54bb7d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525268482,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525268482,
        "parent_id": "b4d7dcde-82ad-4a78-80e5-73ccdbfbe6c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An explicit interface implementation can of course only be used for methods that actually exist for that interface:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An explicit interface implementation can of course only be used for methods that actually exist for that interface:"
          }
        ]
      },
      {
        "id": "435b4da1-fbeb-424c-b0fc-5a1c4a4e084a",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525268482,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549612500000,
        "parent_id": "b4d7dcde-82ad-4a78-80e5-73ccdbfbe6c7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class ProGolfer : IGolfPlayer\n{\n    string IGolfPlayer.Swear() // Error\n    {\n        return \"The ball is in the pit\";\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public class ProGolfer : IGolfPlayer\n{\n    string IGolfPlayer.Swear() // Error\n    {\n        return \"The ball is in the pit\";\n    }\n}",
        "code_language": "C#"
      },
      {
        "id": "b0dea5ac-e795-45fa-ba83-973c6591b375",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525268482,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525268482,
        "parent_id": "b4d7dcde-82ad-4a78-80e5-73ccdbfbe6c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Similarly, using an explicit interface implementation without declaring that interface on the class causes an error, too."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Similarly, using an explicit interface implementation without declaring that interface on the class causes an error, too."
          }
        ]
      },
      {
        "id": "42475c69-b0da-4c21-8d6c-efb592df2e32",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525268482,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525268482,
        "parent_id": "b4d7dcde-82ad-4a78-80e5-73ccdbfbe6c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Hint:"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Hint:"
          }
        ]
      },
      {
        "id": "a4f4e62a-a9ed-4432-b4e4-c7f6068fbd4b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525268482,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525268482,
        "parent_id": "b4d7dcde-82ad-4a78-80e5-73ccdbfbe6c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Implementing interfaces explicitly can also be used to avoid dead code. When a method is no longer needed and gets removed from the interface, the compiler will complain about each still existing implementation."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Implementing interfaces explicitly can also be used to avoid dead code. When a method is no longer needed and gets removed from the interface, the compiler will complain about each still existing implementation."
          }
        ]
      },
      {
        "id": "8f988d9b-c7e6-4e70-a64d-059701607f7f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525268482,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525268482,
        "parent_id": "b4d7dcde-82ad-4a78-80e5-73ccdbfbe6c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note:"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note:"
          }
        ]
      },
      {
        "id": "d06df3d9-2c6d-4e4c-85d7-4f57bb775e2d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525268482,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525268482,
        "parent_id": "b4d7dcde-82ad-4a78-80e5-73ccdbfbe6c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Programmers expect the contract to be the same regardless of the context of the type and explicit implementation should not expose different behavior when called. So unlike the example above, "
            ],
            [
              "IGolfPlayer.Drive",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Drive",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " should do the same thing when possible."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Programmers expect the contract to be the same regardless of the context of the type and explicit implementation should not expose different behavior when called. So unlike the example above, "
          },
          {
            "Text": "IGolfPlayer.Drive",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Drive",
            "AttrFlags": 2
          },
          {
            "Text": " should do the same thing when possible."
          }
        ]
      }
    ],
    "title": "Explicit interface implementation",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}