{
  "ID": "00bcd2cc-77bc-4142-82bb-f37db9d723a4",
  "Root": {
    "alive": true,
    "content": [
      "a13c27f4-8261-433a-bd18-c32b744401a6",
      "4dbe419e-74d8-4a7f-9583-6696d7e7ef4b",
      "cb10ca9f-ca72-4ff1-ad67-395039fd99a2",
      "e209cd37-3f31-4da8-8441-58c3f13b5769"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549524682257,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "00bcd2cc-77bc-4142-82bb-f37db9d723a4",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549623480000,
    "parent_id": "190506d8-ff9f-4443-bbce-bdb69e483555",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Extension methods arent supported by dynamic code"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524682256,
        "id": "a13c27f4-8261-433a-bd18-c32b744401a6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549623480000,
        "parent_id": "00bcd2cc-77bc-4142-82bb-f37db9d723a4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "static class Program\n{\n    static void Main()\n    {\n        dynamic dynamicObject = new ExpandoObject();\n\n        string awesomeString = \"Awesome\";\n\n        // Prints True\n        Console.WriteLine(awesomeString.IsThisAwesome());\n\n        dynamicObject.StringValue = awesomeString;\n\n        // Prints True\n        Console.WriteLine(StringExtensions.IsThisAwesome(dynamicObject.StringValue)); \n        \n        // No compile time error or warning, but on runtime throws RuntimeBinderException\n        Console.WriteLine(dynamicObject.StringValue.IsThisAwesome());\n    }\n}\n\nstatic class StringExtensions\n{\n    public static bool IsThisAwesome(this string value)\n    {\n        return value.Equals(\"Awesome\");\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "static class Program\n{\n    static void Main()\n    {\n        dynamic dynamicObject = new ExpandoObject();\n\n        string awesomeString = \"Awesome\";\n\n        // Prints True\n        Console.WriteLine(awesomeString.IsThisAwesome());\n\n        dynamicObject.StringValue = awesomeString;\n\n        // Prints True\n        Console.WriteLine(StringExtensions.IsThisAwesome(dynamicObject.StringValue)); \n        \n        // No compile time error or warning, but on runtime throws RuntimeBinderException\n        Console.WriteLine(dynamicObject.StringValue.IsThisAwesome());\n    }\n}\n\nstatic class StringExtensions\n{\n    public static bool IsThisAwesome(this string value)\n    {\n        return value.Equals(\"Awesome\");\n    }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524682256,
        "id": "4dbe419e-74d8-4a7f-9583-6696d7e7ef4b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524682256,
        "parent_id": "00bcd2cc-77bc-4142-82bb-f37db9d723a4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The reason [calling extension methods from dynamic code] doesn’t work is because in regular, non-dynamic code extension methods work by doing a full search of all the classes known to the compiler for a static class that has an extension method that matches. The search goes in order based on the namespace nesting and available using directives in each namespace."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "The reason [calling extension methods from dynamic code] doesn’t work is because in regular, non-dynamic code extension methods work by doing a full search of all the classes known to the compiler for a static class that has an extension method that matches. The search goes in order based on the namespace nesting and available using directives in each namespace."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524682257,
        "id": "cb10ca9f-ca72-4ff1-ad67-395039fd99a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524682257,
        "parent_id": "00bcd2cc-77bc-4142-82bb-f37db9d723a4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "That means that in order to get a dynamic extension method invocation resolved correctly, somehow the DLR has to know "
            ],
            [
              "at runtime",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " what all the namespace nestings and "
            ],
            [
              "using",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " directives were "
            ],
            [
              "in your source code",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". We do not have a mechanism handy for encoding all that information into the call site. We considered inventing such a mechanism, but decided that it was too high cost and produced too much schedule risk to be worth it."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "That means that in order to get a dynamic extension method invocation resolved correctly, somehow the DLR has to know "
          },
          {
            "Text": "at runtime",
            "AttrFlags": 4
          },
          {
            "Text": " what all the namespace nestings and "
          },
          {
            "Text": "using",
            "AttrFlags": 2
          },
          {
            "Text": " directives were "
          },
          {
            "Text": "in your source code",
            "AttrFlags": 4
          },
          {
            "Text": ". We do not have a mechanism handy for encoding all that information into the call site. We considered inventing such a mechanism, but decided that it was too high cost and produced too much schedule risk to be worth it."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524682257,
        "id": "e209cd37-3f31-4da8-8441-58c3f13b5769",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524682257,
        "parent_id": "00bcd2cc-77bc-4142-82bb-f37db9d723a4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Source",
              [
                [
                  "a",
                  "http://stackoverflow.com/a/5313149/1610754"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Source",
            "Link": "http://stackoverflow.com/a/5313149/1610754"
          }
        ]
      }
    ],
    "title": "Extension methods arent supported by dynamic code",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}