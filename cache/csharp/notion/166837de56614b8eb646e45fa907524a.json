{
  "ID": "166837de-5661-4b8e-b646-e45fa907524a",
  "Root": {
    "id": "166837de-5661-4b8e-b646-e45fa907524a",
    "alive": true,
    "content": [
      "9fa08f78-407b-4269-9f20-d29dae0d3729",
      "d0c23c28-27db-4d9b-8a04-2e1193a99052",
      "02b44159-c781-451b-832a-c91767aac3e8",
      "c64c2025-b46d-43f1-bbca-868562bfe15e",
      "40033461-b94b-485c-b593-da29b5787360"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549527884367,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549626120000,
    "parent_id": "7c9f5ce4-12a1-4115-98ff-cdbe26ce2b63",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "IDisposable Dispose"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "id": "9fa08f78-407b-4269-9f20-d29dae0d3729",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527884364,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527884364,
        "parent_id": "166837de-5661-4b8e-b646-e45fa907524a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              ".NET Framework defines a interface for types requiring a tear-down method:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": ".NET Framework defines a interface for types requiring a tear-down method:"
          }
        ]
      },
      {
        "id": "d0c23c28-27db-4d9b-8a04-2e1193a99052",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527884366,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549626120000,
        "parent_id": "166837de-5661-4b8e-b646-e45fa907524a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public interface IDisposable\n{\n  void Dispose();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public interface IDisposable\n{\n  void Dispose();\n}",
        "code_language": "C#"
      },
      {
        "id": "02b44159-c781-451b-832a-c91767aac3e8",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527884367,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527884367,
        "parent_id": "166837de-5661-4b8e-b646-e45fa907524a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Dispose()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is primarily used for cleaning up resources, like unmanaged references. However, it can also be useful to force the disposing of other resources even though they are managed. Instead of waiting for the GC to eventually also clean up your database connection, you can make sure it’s done in your own "
            ],
            [
              "Dispose()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " implementation."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Dispose()",
            "AttrFlags": 2
          },
          {
            "Text": " is primarily used for cleaning up resources, like unmanaged references. However, it can also be useful to force the disposing of other resources even though they are managed. Instead of waiting for the GC to eventually also clean up your database connection, you can make sure it’s done in your own "
          },
          {
            "Text": "Dispose()",
            "AttrFlags": 2
          },
          {
            "Text": " implementation."
          }
        ]
      },
      {
        "id": "c64c2025-b46d-43f1-bbca-868562bfe15e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527884367,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549626120000,
        "parent_id": "166837de-5661-4b8e-b646-e45fa907524a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public void Dispose()\n{\n   if (null != this.CurrentDatabaseConnection)\n   {\n       this.CurrentDatabaseConnection.Dispose();\n       this.CurrentDatabaseConnection = null;\n   }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public void Dispose()\n{\n   if (null != this.CurrentDatabaseConnection)\n   {\n       this.CurrentDatabaseConnection.Dispose();\n       this.CurrentDatabaseConnection = null;\n   }\n}",
        "code_language": "C#"
      },
      {
        "id": "40033461-b94b-485c-b593-da29b5787360",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527884367,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527884367,
        "parent_id": "166837de-5661-4b8e-b646-e45fa907524a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When you need to directly access unmanaged resources such as unmanaged pointers or win32 resources, create a class inheriting from "
            ],
            [
              "SafeHandle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and use that class’s conventions/tools to do so."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When you need to directly access unmanaged resources such as unmanaged pointers or win32 resources, create a class inheriting from "
          },
          {
            "Text": "SafeHandle",
            "AttrFlags": 2
          },
          {
            "Text": " and use that class’s conventions/tools to do so."
          }
        ]
      }
    ],
    "title": "IDisposable Dispose",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}