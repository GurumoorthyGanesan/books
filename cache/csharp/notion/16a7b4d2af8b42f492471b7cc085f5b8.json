{
  "ID": "16a7b4d2-af8b-42f4-9247-1b7cc085f5b8",
  "Root": {
    "id": "16a7b4d2-af8b-42f4-9247-1b7cc085f5b8",
    "alive": true,
    "content": [
      "3a8d1653-2bda-46c4-af65-1fc63b155277",
      "841710ea-e44d-4c2a-a48e-45d148013995",
      "f001a18f-617b-45cf-aab8-9c3dca7a32ec",
      "49415ae4-3b7b-4f2f-b721-723112d744e8",
      "a772ab50-fe12-4b96-b416-c40e27ac6e3c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549530101406,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550223060000,
    "parent_id": "3bfa5008-c262-4959-8331-361cc5d24a98",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Dependency Injection"
        ]
      ]
    },
    "type": "page",
    "version": 11,
    "content_resolved": [
      {
        "id": "3a8d1653-2bda-46c4-af65-1fc63b155277",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530101405,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530101405,
        "parent_id": "16a7b4d2-af8b-42f4-9247-1b7cc085f5b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "id": "841710ea-e44d-4c2a-a48e-45d148013995",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530101405,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530101405,
        "parent_id": "16a7b4d2-af8b-42f4-9247-1b7cc085f5b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Wikipedia definition of dependency injection is:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Wikipedia definition of dependency injection is:"
          }
        ]
      },
      {
        "id": "f001a18f-617b-45cf-aab8-9c3dca7a32ec",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530101405,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530101405,
        "parent_id": "16a7b4d2-af8b-42f4-9247-1b7cc085f5b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In software engineering, dependency injection is a software design pattern that implements inversion of control for resolving dependencies. A dependency is an object that can be used (a service). An injection is the passing of a dependency to a dependent object (a client) that would use it."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In software engineering, dependency injection is a software design pattern that implements inversion of control for resolving dependencies. A dependency is an object that can be used (a service). An injection is the passing of a dependency to a dependent object (a client) that would use it."
          }
        ]
      },
      {
        "id": "49415ae4-3b7b-4f2f-b721-723112d744e8",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530101405,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530101405,
        "parent_id": "16a7b4d2-af8b-42f4-9247-1b7cc085f5b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "****This site features an answer to the question How to explain Dependency Injection to a 5-year old. The most highly rated answer, provided by John Munsch provides a surprisingly accurate analogy targeted at the (imaginary) five-year-old inquisitor: When you go and get things out of the refrigerator for yourself, you can cause problems. You might leave the door open, you might get something Mommy or Daddy doesn’t want you to have. You might even be looking for something we don’t even have or which has expired. What you should be doing is stating a need, “I need something to drink with lunch,” and then we will make sure you have something when you sit down to eat. What this means in terms of object-oriented software development is this: collaborating classes (the five-year-olds) should rely on the infrastructure (the parents) to provide**"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "****This site features an answer to the question How to explain Dependency Injection to a 5-year old. The most highly rated answer, provided by John Munsch provides a surprisingly accurate analogy targeted at the (imaginary) five-year-old inquisitor: When you go and get things out of the refrigerator for yourself, you can cause problems. You might leave the door open, you might get something Mommy or Daddy doesn’t want you to have. You might even be looking for something we don’t even have or which has expired. What you should be doing is stating a need, “I need something to drink with lunch,” and then we will make sure you have something when you sit down to eat. What this means in terms of object-oriented software development is this: collaborating classes (the five-year-olds) should rely on the infrastructure (the parents) to provide**"
          }
        ]
      },
      {
        "id": "a772ab50-fe12-4b96-b416-c40e27ac6e3c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530101406,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530101406,
        "parent_id": "16a7b4d2-af8b-42f4-9247-1b7cc085f5b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "** This code uses MEF to dynamically load the dll and resolve the dependencies. ILogger dependency is resolved by MEF and injectd into the user class. User class never receives Concrete implementation of ILogger and it has no idea of what or which type of logger its using.**"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "** This code uses MEF to dynamically load the dll and resolve the dependencies. ILogger dependency is resolved by MEF and injectd into the user class. User class never receives Concrete implementation of ILogger and it has no idea of what or which type of logger its using.**"
          }
        ]
      }
    ],
    "title": "Dependency Injection",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}