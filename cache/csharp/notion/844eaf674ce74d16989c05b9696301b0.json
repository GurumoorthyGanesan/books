{
  "ID": "844eaf67-4ce7-4d16-989c-05b9696301b0",
  "Root": {
    "alive": true,
    "content": [
      "66e0ef21-13e2-4ec8-b44d-929d06371167",
      "80b240d1-c5f0-4920-b775-78e4e2ebaedb",
      "e75d70c6-07f3-4c80-82b4-9599da4bc45a",
      "116233eb-defa-4e1e-b09e-8c1e96922963",
      "bcbd1f14-f3ef-4d7e-91ba-eea93a5a6993",
      "079977c9-87d8-4e98-bb01-b67240a21437",
      "9cd9e2ab-7766-427c-97f2-304be46b1c06",
      "f7fd41f6-b369-4421-9db2-e922bde5fca1",
      "14deb440-9489-4318-b769-e44c161ce686",
      "8b282dca-331a-4d69-96b6-838a995c86ac",
      "13f180d8-7989-42fb-826d-9242a3a9a1fd",
      "512ec211-7331-43eb-a632-28828a02fa94",
      "2344de37-89a7-42ff-89f3-5d1fcfa89d32",
      "96f84a08-3c8c-4be6-b2a1-2e842ccd491f",
      "efd88f8c-24c9-4dd7-b8af-0352af280486",
      "d2b87ba7-b198-4684-8985-5dfe4afc55ee",
      "60a16c3d-271f-4699-ba42-6da3bcf126be",
      "78e54214-28ff-49a8-ae6d-d4e05f76a5f4",
      "871ea819-7014-463d-bd6e-9540dc949524",
      "d601fe44-f261-4164-81fb-acbec4e0f718"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549528202818,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550209800000,
    "parent_id": "50abd569-e57b-4eda-b70d-af5f13922aee",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Interface Basics"
        ]
      ]
    },
    "type": "page",
    "version": 28,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528202810,
        "id": "66e0ef21-13e2-4ec8-b44d-929d06371167",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528202810,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An Interface’s function known as a “contract” of functionality. It means that it declares properties and methods but it doesn’t implement them."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An Interface’s function known as a “contract” of functionality. It means that it declares properties and methods but it doesn’t implement them."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528202813,
        "id": "80b240d1-c5f0-4920-b775-78e4e2ebaedb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528202813,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So unlike classes Interfaces:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So unlike classes Interfaces:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528202814,
        "id": "e75d70c6-07f3-4c80-82b4-9599da4bc45a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528202814,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Can’t be instantiated"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Can’t be instantiated"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528202814,
        "id": "116233eb-defa-4e1e-b09e-8c1e96922963",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528202814,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Can’t have any functionality"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Can’t have any functionality"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528202815,
        "id": "bcbd1f14-f3ef-4d7e-91ba-eea93a5a6993",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528202815,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Can only contain methods * "
            ],
            [
              "(Properties and Events are methods internally)",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Can only contain methods * "
          },
          {
            "Text": "(Properties and Events are methods internally)",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528202815,
        "id": "079977c9-87d8-4e98-bb01-b67240a21437",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528202815,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Inheriting an interface is called “Implementing”"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Inheriting an interface is called “Implementing”"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528202815,
        "id": "9cd9e2ab-7766-427c-97f2-304be46b1c06",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528202815,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can inherit from 1 class, but you can “Implement” multiple Interfaces"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can inherit from 1 class, but you can “Implement” multiple Interfaces"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528202815,
        "id": "f7fd41f6-b369-4421-9db2-e922bde5fca1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549622520000,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public interface ICanDoThis{\n    void TheThingICanDo();\n    int SomeValueProperty { get; set; }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public interface ICanDoThis{\n    void TheThingICanDo();\n    int SomeValueProperty { get; set; }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528202815,
        "id": "14deb440-9489-4318-b769-e44c161ce686",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528202815,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Things to notice:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Things to notice:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528202816,
        "id": "8b282dca-331a-4d69-96b6-838a995c86ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528202816,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The “I” prefix is a naming convention used for interfaces."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The “I” prefix is a naming convention used for interfaces."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528202816,
        "id": "13f180d8-7989-42fb-826d-9242a3a9a1fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528202816,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The function body is replaced with a semicolon “;”."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The function body is replaced with a semicolon “;”."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528202816,
        "id": "512ec211-7331-43eb-a632-28828a02fa94",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528202816,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Properties are also allowed because internally they are also methods"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Properties are also allowed because internally they are also methods"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528202816,
        "id": "2344de37-89a7-42ff-89f3-5d1fcfa89d32",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550209740000,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class MyClass : ICanDoThis {\n    public void TheThingICanDo(){\n        // do the thing\n    }\n\n    public int SomeValueProperty { get; set; }\n    public int SomeValueNotImplemtingAnything { get; set; }\n}\n\n.\n\nICanDoThis obj = new MyClass();\n\n// ok\nobj.TheThingICanDo();\n\n// ok\nobj.SomeValueProperty = 5;\n\n// Error, this member doesn't exist in the interface\nobj.SomeValueNotImplemtingAnything = 5;\n\n// in order to access the property in the class you must \"down cast\" it\n((MyClass)obj).SomeValueNotImplemtingAnything = 5; // ok"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "public class MyClass : ICanDoThis {\n    public void TheThingICanDo(){\n        // do the thing\n    }\n\n    public int SomeValueProperty { get; set; }\n    public int SomeValueNotImplemtingAnything { get; set; }\n}\n\n.\n\nICanDoThis obj = new MyClass();\n\n// ok\nobj.TheThingICanDo();\n\n// ok\nobj.SomeValueProperty = 5;\n\n// Error, this member doesn't exist in the interface\nobj.SomeValueNotImplemtingAnything = 5;\n\n// in order to access the property in the class you must \"down cast\" it\n((MyClass)obj).SomeValueNotImplemtingAnything = 5; // ok",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528202817,
        "id": "96f84a08-3c8c-4be6-b2a1-2e842ccd491f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528202817,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is especially useful when you’re working with UI frameworks such as WinForms or WPF because it’s mandatory to inherit from a base class to create user control and you loose the ability to create abstraction over different control types. An example? Coming up:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is especially useful when you’re working with UI frameworks such as WinForms or WPF because it’s mandatory to inherit from a base class to create user control and you loose the ability to create abstraction over different control types. An example? Coming up:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528202817,
        "id": "efd88f8c-24c9-4dd7-b8af-0352af280486",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550209740000,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class MyTextBlock : TextBlock {\n    public void SetText(string str){\n        this.Text = str;\n    }\n}\n\npublic class MyButton : Button {\n    public void SetText(string str){\n        this.Content = str;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "public class MyTextBlock : TextBlock {\n    public void SetText(string str){\n        this.Text = str;\n    }\n}\n\npublic class MyButton : Button {\n    public void SetText(string str){\n        this.Content = str;\n    }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528202817,
        "id": "d2b87ba7-b198-4684-8985-5dfe4afc55ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528202817,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The problem proposed is that both contain some concept of “Text” but the property names differ. And you can’t create create a "
            ],
            [
              "abstract base class",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " because they have a mandatory inheritance to 2 different classes. An interface can alleviate that"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The problem proposed is that both contain some concept of “Text” but the property names differ. And you can’t create create a "
          },
          {
            "Text": "abstract base class",
            "AttrFlags": 4
          },
          {
            "Text": " because they have a mandatory inheritance to 2 different classes. An interface can alleviate that"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528202817,
        "id": "60a16c3d-271f-4699-ba42-6da3bcf126be",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550209740000,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public interface ITextControl{\n    void SetText(string str);\n}\n\npublic class MyTextBlock : TextBlock, ITextControl {\n    public void SetText(string str){\n        this.Text = str;\n    }\n}\n\npublic class MyButton : Button, ITextControl {\n    public void SetText(string str){\n        this.Content = str;\n    }\n\n    public int Clicks { get; set; }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "public interface ITextControl{\n    void SetText(string str);\n}\n\npublic class MyTextBlock : TextBlock, ITextControl {\n    public void SetText(string str){\n        this.Text = str;\n    }\n}\n\npublic class MyButton : Button, ITextControl {\n    public void SetText(string str){\n        this.Content = str;\n    }\n\n    public int Clicks { get; set; }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528202818,
        "id": "78e54214-28ff-49a8-ae6d-d4e05f76a5f4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528202818,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now MyButton and MyTextBlock is interchangeable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now MyButton and MyTextBlock is interchangeable."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528202818,
        "id": "871ea819-7014-463d-bd6e-9540dc949524",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550209800000,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "var controls = new List\u003cITextControls\u003e{\n    new MyTextBlock(),\n    new MyButton()\n};\n\nforeach(var ctrl in controls){\n    ctrl.SetText(\"This text will be applied to both controls despite them being different\");\n\n\n    // Compiler Error, no such member in interface\n    ctrl.Clicks = 0;\n\n    // Runtime Error because 1 class is in fact not a button which makes this cast invalid\n    ((MyButton)ctrl).Clicks = 0;\n\n\n    /* the solution is to check the type first.\n    This is usually considered bad practice since\n    it's a symptom of poor abstraction */\n    var button = ctrl as MyButton;\n    if(button != null)\n        button.Clicks = 0; // no errors\n\n   \n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "var controls = new List\u003cITextControls\u003e{\n    new MyTextBlock(),\n    new MyButton()\n};\n\nforeach(var ctrl in controls){\n    ctrl.SetText(\"This text will be applied to both controls despite them being different\");\n\n\n    // Compiler Error, no such member in interface\n    ctrl.Clicks = 0;\n\n    // Runtime Error because 1 class is in fact not a button which makes this cast invalid\n    ((MyButton)ctrl).Clicks = 0;\n\n\n    /* the solution is to check the type first.\n    This is usually considered bad practice since\n    it's a symptom of poor abstraction */\n    var button = ctrl as MyButton;\n    if(button != null)\n        button.Clicks = 0; // no errors\n\n   \n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550209800000,
        "id": "d601fe44-f261-4164-81fb-acbec4e0f718",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550209800000,
        "parent_id": "844eaf67-4ce7-4d16-989c-05b9696301b0",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "Interface Basics",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}