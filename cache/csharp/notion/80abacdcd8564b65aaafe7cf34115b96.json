{
  "ID": "80abacdc-d856-4b65-aaaf-e7cf34115b96",
  "Root": {
    "alive": true,
    "content": [
      "e8b6d1d5-0352-42ac-bd29-25e09da56bb0",
      "b6c49881-1cbf-4c4a-a2a1-097c99f2eab2",
      "4015bfa9-89ed-478d-a83c-6109d85d78ce",
      "765d66ec-d67a-4826-9902-2a1779760d52",
      "310d3534-aefb-471f-9ac5-50059662dd97",
      "c956554f-df1f-4ca1-b759-ac6850ea5035",
      "c54e164d-6bc9-4f44-a6f6-2c7228dbc1b1"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525016573,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "80abacdc-d856-4b65-aaaf-e7cf34115b96",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549940880000,
    "parent_id": "1cef0e56-e2c1-46b9-9c66-002b53d2c779",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "readonly"
        ]
      ]
    },
    "type": "page",
    "version": 11,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525016567,
        "id": "e8b6d1d5-0352-42ac-bd29-25e09da56bb0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525016567,
        "parent_id": "80abacdc-d856-4b65-aaaf-e7cf34115b96",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "readonly",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword is a field modifier. When a field declaration includes a "
            ],
            [
              "readonly",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " modifier, assignments to that field can only occur as part of the declaration or in a constructor in the same class."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "readonly",
            "AttrFlags": 2
          },
          {
            "Text": " keyword is a field modifier. When a field declaration includes a "
          },
          {
            "Text": "readonly",
            "AttrFlags": 2
          },
          {
            "Text": " modifier, assignments to that field can only occur as part of the declaration or in a constructor in the same class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525016571,
        "id": "b6c49881-1cbf-4c4a-a2a1-097c99f2eab2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525016571,
        "parent_id": "80abacdc-d856-4b65-aaaf-e7cf34115b96",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "readonly",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword is different from the "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword. A "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " field can only be initialized at the declaration of the field. A "
            ],
            [
              "readonly",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " field can be initialized either at the declaration or in a constructor. Therefore, "
            ],
            [
              "readonly",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " fields can have different values depending on the constructor used."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "readonly",
            "AttrFlags": 2
          },
          {
            "Text": " keyword is different from the "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " keyword. A "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " field can only be initialized at the declaration of the field. A "
          },
          {
            "Text": "readonly",
            "AttrFlags": 2
          },
          {
            "Text": " field can be initialized either at the declaration or in a constructor. Therefore, "
          },
          {
            "Text": "readonly",
            "AttrFlags": 2
          },
          {
            "Text": " fields can have different values depending on the constructor used."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525016572,
        "id": "4015bfa9-89ed-478d-a83c-6109d85d78ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525016572,
        "parent_id": "80abacdc-d856-4b65-aaaf-e7cf34115b96",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "readonly",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword is often used when injecting dependencies."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "readonly",
            "AttrFlags": 2
          },
          {
            "Text": " keyword is often used when injecting dependencies."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525016572,
        "id": "765d66ec-d67a-4826-9902-2a1779760d52",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940880000,
        "parent_id": "80abacdc-d856-4b65-aaaf-e7cf34115b96",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "class Person\n{\n    readonly string _name;\n    readonly string _surname = \"Surname\";\n\n    Person(string name)\n    {\n        _name = name;\n    }\n    void ChangeName()\n    {\n        _name = \"another name\"; // Compile error\n        _surname = \"another surname\"; // Compile error\n    }\n}\n"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "class Person\n{\n    readonly string _name;\n    readonly string _surname = \"Surname\";\n\n    Person(string name)\n    {\n        _name = name;\n    }\n    void ChangeName()\n    {\n        _name = \"another name\"; // Compile error\n        _surname = \"another surname\"; // Compile error\n    }\n}\n",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525016572,
        "id": "310d3534-aefb-471f-9ac5-50059662dd97",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525016572,
        "parent_id": "80abacdc-d856-4b65-aaaf-e7cf34115b96",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: Declaring a field readonly does not imply immutability. If the field is a reference type then the content of the object can be changed. Readonly is typically used to prevent having the object being overwritten and assigned only during instantiation of that object."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: Declaring a field readonly does not imply immutability. If the field is a reference type then the content of the object can be changed. Readonly is typically used to prevent having the object being overwritten and assigned only during instantiation of that object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525016572,
        "id": "c956554f-df1f-4ca1-b759-ac6850ea5035",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525016572,
        "parent_id": "80abacdc-d856-4b65-aaaf-e7cf34115b96",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: Inside the constructor a readonly field can be reassigned"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: Inside the constructor a readonly field can be reassigned"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525016573,
        "id": "c54e164d-6bc9-4f44-a6f6-2c7228dbc1b1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940880000,
        "parent_id": "80abacdc-d856-4b65-aaaf-e7cf34115b96",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class Car\n{\n    public double Speed {get; set;}\n}\n\n//In code\n\nprivate readonly Car car = new Car();\n\nprivate void SomeMethod()\n{\n    car.Speed = 100;\n}\n"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "public class Car\n{\n    public double Speed {get; set;}\n}\n\n//In code\n\nprivate readonly Car car = new Car();\n\nprivate void SomeMethod()\n{\n    car.Speed = 100;\n}\n",
        "code_language": "C#"
      }
    ],
    "title": "readonly",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}