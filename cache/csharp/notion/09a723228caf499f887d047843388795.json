{
  "ID": "09a72322-8caf-499f-887d-047843388795",
  "Root": {
    "id": "09a72322-8caf-499f-887d-047843388795",
    "alive": true,
    "content": [
      "df5dc4b3-aa89-43cc-ba5a-1bb67788a904",
      "872b1b61-17ad-40aa-99fb-c92fa2b5b4bd",
      "f58bf37f-3717-4726-9a4b-f8aaf8b7f680",
      "5213975d-b176-43f0-a6e3-e518bfe4d57f",
      "b83edcdb-b8e7-460a-bc3a-7a814b93f7df",
      "36676e74-070a-4dd4-8fc5-6b00be2016f1",
      "7ad96b9f-82cb-448f-b372-2f271b3b6b91",
      "3169cf09-faf6-44d1-bb28-93afa0c6645e",
      "fefddb47-dee0-4b79-9c4e-2dd0bcdea1d0",
      "0e4f3094-f136-4f81-ae2a-192e127c3b5e",
      "a521ee65-dab5-47db-81a7-590631dbd238",
      "75e82955-7e8a-4cef-a942-2a823bfa4e22",
      "09d1ec45-43f0-4b08-bf09-a9972aa00b91",
      "14c05894-28a4-41be-bba4-13ed6fda1bf8",
      "644e6d01-bb45-4840-a3a9-329e4dc99343",
      "e6ad8dcb-552a-4629-b96a-176d9e542198",
      "75abcc84-473e-474c-8c5e-0cdad314eb10",
      "9478bd19-8a59-4f93-9782-9b03863f5ea8",
      "15c16e16-f31f-434d-a9d5-c3be02104043",
      "48096e7b-8eec-4890-a567-68af6ef7e477",
      "dc7c70c1-f8e2-4160-a806-dd4ee4c827c7",
      "2c13c646-d899-4b41-b85b-8761b673cd0c",
      "20b2d5dc-3f7c-46ee-b8ad-0e5d9037b06c",
      "005221b6-c401-476a-aa73-058aabcb9cd5",
      "b5105920-00b3-4370-98c5-2b59f50f5d9c",
      "04573a91-6727-4490-b8d1-d06bb4930b96"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549528641326,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550213340000,
    "parent_id": "771a61e0-eafb-4e91-bf84-4f163eebea2a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Converting string to integer"
        ]
      ]
    },
    "type": "page",
    "version": 14,
    "content_resolved": [
      {
        "id": "df5dc4b3-aa89-43cc-ba5a-1bb67788a904",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641320,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528641320,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are various methods available for explicitly converting a "
            ],
            [
              "string",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to an "
            ],
            [
              "integer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", such as:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are various methods available for explicitly converting a "
          },
          {
            "Text": "string",
            "AttrFlags": 2
          },
          {
            "Text": " to an "
          },
          {
            "Text": "integer",
            "AttrFlags": 2
          },
          {
            "Text": ", such as:"
          }
        ]
      },
      {
        "id": "872b1b61-17ad-40aa-99fb-c92fa2b5b4bd",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641321,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528641321,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Convert.ToInt16();",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Convert.ToInt16();",
            "AttrFlags": 2
          }
        ]
      },
      {
        "id": "f58bf37f-3717-4726-9a4b-f8aaf8b7f680",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641321,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528641321,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Convert.ToInt32();",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Convert.ToInt32();",
            "AttrFlags": 2
          }
        ]
      },
      {
        "id": "5213975d-b176-43f0-a6e3-e518bfe4d57f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641322,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528641322,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Convert.ToInt64();",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Convert.ToInt64();",
            "AttrFlags": 2
          }
        ]
      },
      {
        "id": "b83edcdb-b8e7-460a-bc3a-7a814b93f7df",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641322,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528641322,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "int.Parse();",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "int.Parse();",
            "AttrFlags": 2
          }
        ]
      },
      {
        "id": "36676e74-070a-4dd4-8fc5-6b00be2016f1",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641322,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528641322,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But all these methods will throw a "
            ],
            [
              "FormatException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", if the input string contains non-numeric characters. For this, we need to write an additional exception handling("
            ],
            [
              "try..catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") to deal them in such cases."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But all these methods will throw a "
          },
          {
            "Text": "FormatException",
            "AttrFlags": 2
          },
          {
            "Text": ", if the input string contains non-numeric characters. For this, we need to write an additional exception handling("
          },
          {
            "Text": "try..catch",
            "AttrFlags": 2
          },
          {
            "Text": ") to deal them in such cases."
          }
        ]
      },
      {
        "id": "7ad96b9f-82cb-448f-b372-2f271b3b6b91",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641322,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528641322,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Explanation with Examples:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Explanation with Examples:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "id": "3169cf09-faf6-44d1-bb28-93afa0c6645e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641322,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528641322,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So, let our input be:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So, let our input be:"
          }
        ]
      },
      {
        "id": "fefddb47-dee0-4b79-9c4e-2dd0bcdea1d0",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641323,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550213280000,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "string inputString = \"10.2\";"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "string inputString = \"10.2\";",
        "code_language": "C#"
      },
      {
        "id": "0e4f3094-f136-4f81-ae2a-192e127c3b5e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641323,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528641323,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example 1:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "Convert.ToInt32()",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example 1:",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "Convert.ToInt32()",
            "AttrFlags": 2
          }
        ]
      },
      {
        "id": "a521ee65-dab5-47db-81a7-590631dbd238",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641323,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550213280000,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "int convertedInt = Convert.ToInt32(inputString); // Failed to Convert \n// Throws an Exception \"Input string was not in a correct format.\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "int convertedInt = Convert.ToInt32(inputString); // Failed to Convert \n// Throws an Exception \"Input string was not in a correct format.\"",
        "code_language": "C#"
      },
      {
        "id": "75e82955-7e8a-4cef-a942-2a823bfa4e22",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641323,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528641323,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note:",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " Same goes for the other mentioned methods namely - ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "Convert.ToInt16();",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " and ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "Convert.ToInt64();",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note:",
            "AttrFlags": 5
          },
          {
            "Text": " Same goes for the other mentioned methods namely - ",
            "AttrFlags": 4
          },
          {
            "Text": "Convert.ToInt16();",
            "AttrFlags": 6
          },
          {
            "Text": " and ",
            "AttrFlags": 4
          },
          {
            "Text": "Convert.ToInt64();",
            "AttrFlags": 6
          }
        ]
      },
      {
        "id": "09d1ec45-43f0-4b08-bf09-a9972aa00b91",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641323,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528641323,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example 2:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "int.Parse()",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example 2:",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "int.Parse()",
            "AttrFlags": 2
          }
        ]
      },
      {
        "id": "14c05894-28a4-41be-bba4-13ed6fda1bf8",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641323,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550213340000,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "int convertedInt = int.Parse(inputString); // Same result \"Input string was not in a correct format."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "int convertedInt = int.Parse(inputString); // Same result \"Input string was not in a correct format.",
        "code_language": "C#"
      },
      {
        "id": "644e6d01-bb45-4840-a3a9-329e4dc99343",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641324,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528641324,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "How do we circumvent this?",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "How do we circumvent this?",
            "AttrFlags": 5
          }
        ]
      },
      {
        "id": "e6ad8dcb-552a-4629-b96a-176d9e542198",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641324,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528641324,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As told earlier, for handling the exceptions we usually need a "
            ],
            [
              "try..catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as shown below:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As told earlier, for handling the exceptions we usually need a "
          },
          {
            "Text": "try..catch",
            "AttrFlags": 2
          },
          {
            "Text": " as shown below:"
          }
        ]
      },
      {
        "id": "75abcc84-473e-474c-8c5e-0cdad314eb10",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641324,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550213340000,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "try\n{\n    string inputString = \"10.2\";\n    int convertedInt = int.Parse(inputString);\n}\ncatch (Exception Ex)\n{\n    //Display some message, that the conversion has failed.         \n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "try\n{\n    string inputString = \"10.2\";\n    int convertedInt = int.Parse(inputString);\n}\ncatch (Exception Ex)\n{\n    //Display some message, that the conversion has failed.         \n}",
        "code_language": "C#"
      },
      {
        "id": "9478bd19-8a59-4f93-9782-9b03863f5ea8",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641324,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528641324,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But, using the "
            ],
            [
              "try..catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " everywhere will not be a good practice, and there may be some scenarios where we wanted to give "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if the input is wrong, "
            ],
            [
              "(If we follow the above method we need to assign ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "0",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " to ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "convertedInt",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " from the catch block).",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " To handle such scenarios we can make use of a special method called "
            ],
            [
              ".TryParse()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But, using the "
          },
          {
            "Text": "try..catch",
            "AttrFlags": 2
          },
          {
            "Text": " everywhere will not be a good practice, and there may be some scenarios where we wanted to give "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": " if the input is wrong, "
          },
          {
            "Text": "(If we follow the above method we need to assign ",
            "AttrFlags": 4
          },
          {
            "Text": "0",
            "AttrFlags": 6
          },
          {
            "Text": " to ",
            "AttrFlags": 4
          },
          {
            "Text": "convertedInt",
            "AttrFlags": 6
          },
          {
            "Text": " from the catch block).",
            "AttrFlags": 4
          },
          {
            "Text": " To handle such scenarios we can make use of a special method called "
          },
          {
            "Text": ".TryParse()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "15c16e16-f31f-434d-a9d5-c3be02104043",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641325,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528641325,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              ".TryParse()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method having an internal Exception handling, which will give you the output to the "
            ],
            [
              "out",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " parameter, and returns a Boolean value indicating the conversion status "
            ],
            [
              "(",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "true",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " if the conversion was successful; ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "false",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " if it failed).",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " Based on the return value we can determine the conversion status. Lets see one Example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": ".TryParse()",
            "AttrFlags": 2
          },
          {
            "Text": " method having an internal Exception handling, which will give you the output to the "
          },
          {
            "Text": "out",
            "AttrFlags": 2
          },
          {
            "Text": " parameter, and returns a Boolean value indicating the conversion status "
          },
          {
            "Text": "(",
            "AttrFlags": 4
          },
          {
            "Text": "true",
            "AttrFlags": 6
          },
          {
            "Text": " if the conversion was successful; ",
            "AttrFlags": 4
          },
          {
            "Text": "false",
            "AttrFlags": 6
          },
          {
            "Text": " if it failed).",
            "AttrFlags": 4
          },
          {
            "Text": " Based on the return value we can determine the conversion status. Lets see one Example:"
          }
        ]
      },
      {
        "id": "48096e7b-8eec-4890-a567-68af6ef7e477",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641325,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528641325,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Usage 1:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Store the return value in a Boolean variable"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Usage 1:",
            "AttrFlags": 1
          },
          {
            "Text": " Store the return value in a Boolean variable"
          }
        ]
      },
      {
        "id": "dc7c70c1-f8e2-4160-a806-dd4ee4c827c7",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641325,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550213340000,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "int convertedInt; // Be the required integer\n bool isSuccessConversion = int.TryParse(inputString, out convertedInt);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "int convertedInt; // Be the required integer\n bool isSuccessConversion = int.TryParse(inputString, out convertedInt);",
        "code_language": "C#"
      },
      {
        "id": "2c13c646-d899-4b41-b85b-8761b673cd0c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641326,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528641326,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can check The variable "
            ],
            [
              "isSuccessConversion",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " after the Execution to check the conversion status. If it is false then the value of "
            ],
            [
              "convertedInt",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "(no need to check the return value if you want ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "0",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " for conversion failure).",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can check The variable "
          },
          {
            "Text": "isSuccessConversion",
            "AttrFlags": 2
          },
          {
            "Text": " after the Execution to check the conversion status. If it is false then the value of "
          },
          {
            "Text": "convertedInt",
            "AttrFlags": 2
          },
          {
            "Text": " will be "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": "(no need to check the return value if you want ",
            "AttrFlags": 4
          },
          {
            "Text": "0",
            "AttrFlags": 6
          },
          {
            "Text": " for conversion failure).",
            "AttrFlags": 4
          }
        ]
      },
      {
        "id": "20b2d5dc-3f7c-46ee-b8ad-0e5d9037b06c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641326,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528641326,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Usage 2:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Check the return value with "
            ],
            [
              "if",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Usage 2:",
            "AttrFlags": 1
          },
          {
            "Text": " Check the return value with "
          },
          {
            "Text": "if",
            "AttrFlags": 2
          }
        ]
      },
      {
        "id": "005221b6-c401-476a-aa73-058aabcb9cd5",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641326,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550213340000,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "if (int.TryParse(inputString, out convertedInt))\n{\n    // convertedInt will have the converted value\n    // Proceed with that\n}\nelse \n{\n // Display an error message\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "if (int.TryParse(inputString, out convertedInt))\n{\n    // convertedInt will have the converted value\n    // Proceed with that\n}\nelse \n{\n // Display an error message\n}",
        "code_language": "C#"
      },
      {
        "id": "b5105920-00b3-4370-98c5-2b59f50f5d9c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528641326,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528641326,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Usage 3:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Without checking the return value you can use the following, if you don’t care about the return value "
            ],
            [
              "(converted or not, ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "0",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " will be ok)",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Usage 3:",
            "AttrFlags": 1
          },
          {
            "Text": " Without checking the return value you can use the following, if you don’t care about the return value "
          },
          {
            "Text": "(converted or not, ",
            "AttrFlags": 4
          },
          {
            "Text": "0",
            "AttrFlags": 6
          },
          {
            "Text": " will be ok)",
            "AttrFlags": 4
          }
        ]
      },
      {
        "id": "04573a91-6727-4490-b8d1-d06bb4930b96",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550213364535,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550213340000,
        "parent_id": "09a72322-8caf-499f-887d-047843388795",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "int.TryParse(inputString, out convertedInt);\n// use the value of convertedInt\n// But it will be 0 if not converted"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "int.TryParse(inputString, out convertedInt);\n// use the value of convertedInt\n// But it will be 0 if not converted",
        "code_language": "C#"
      }
    ],
    "title": "Converting string to integer",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}