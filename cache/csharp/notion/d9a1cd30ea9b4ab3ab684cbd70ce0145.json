{
  "ID": "d9a1cd30-ea9b-4ab3-ab68-4cbd70ce0145",
  "Root": {
    "alive": true,
    "content": [
      "44f5c6cc-8e53-4adf-9b16-c170c587f064",
      "8b40e2ed-e42b-41a2-b213-140ca5dfe0cd",
      "c25e45f8-4627-4e04-92ba-cbe7c2ad557b",
      "c595c9ab-386a-421a-974a-050fcde26234",
      "8e2d4e53-0008-4eb3-8b16-13fd6009e4e8",
      "f6b33f49-ee75-4233-b9f0-20f7f4dfe84a",
      "9d49778d-eb07-40a2-a1c9-903c8ae622ae",
      "223bd01a-a152-427d-8e2c-6fef1b00257e",
      "27e3394c-c1b4-47a0-9347-6245ccc0482e",
      "71fe74c0-7e58-41da-87f3-2e3fe2ba1a33",
      "b1787048-22b8-498a-83fa-ed55778753a5",
      "070452c4-8d04-4c4e-9bb8-5356d7aee463",
      "27215c38-51d8-49ef-ae92-01c6a7e0159b",
      "e80e3db1-8fce-44bf-a8ba-f040727fd0ea",
      "50869da1-7777-4a40-947c-2970f2d020d6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549527816414,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d9a1cd30-ea9b-4ab3-ab68-4cbd70ce0145",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549788900000,
    "parent_id": "e8462373-152b-42da-a75e-7bbc13ef80b7",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Another Polymorphism Example"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527816408,
        "id": "44f5c6cc-8e53-4adf-9b16-c170c587f064",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527816408,
        "parent_id": "d9a1cd30-ea9b-4ab3-ab68-4cbd70ce0145",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Polymorphism is one of the pillar of OOP. Poly derives from a Greek term which means ‘multiple forms’."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Polymorphism is one of the pillar of OOP. Poly derives from a Greek term which means ‘multiple forms’."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527816411,
        "id": "8b40e2ed-e42b-41a2-b213-140ca5dfe0cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527816411,
        "parent_id": "d9a1cd30-ea9b-4ab3-ab68-4cbd70ce0145",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Below is an example which exhibits Polymorphism. The class "
            ],
            [
              "Vehicle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " takes multiple forms as a base class."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Below is an example which exhibits Polymorphism. The class "
          },
          {
            "Text": "Vehicle",
            "AttrFlags": 2
          },
          {
            "Text": " takes multiple forms as a base class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527816412,
        "id": "c25e45f8-4627-4e04-92ba-cbe7c2ad557b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527816412,
        "parent_id": "d9a1cd30-ea9b-4ab3-ab68-4cbd70ce0145",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The Derived classes "
            ],
            [
              "Ducati",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Lamborghini",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " inherits from "
            ],
            [
              "Vehicle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and overrides the base class’s "
            ],
            [
              "Display()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method, to display its own "
            ],
            [
              "NumberOfWheels",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The Derived classes "
          },
          {
            "Text": "Ducati",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Lamborghini",
            "AttrFlags": 2
          },
          {
            "Text": " inherits from "
          },
          {
            "Text": "Vehicle",
            "AttrFlags": 2
          },
          {
            "Text": " and overrides the base class’s "
          },
          {
            "Text": "Display()",
            "AttrFlags": 2
          },
          {
            "Text": " method, to display its own "
          },
          {
            "Text": "NumberOfWheels",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527816412,
        "id": "c595c9ab-386a-421a-974a-050fcde26234",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527816412,
        "parent_id": "d9a1cd30-ea9b-4ab3-ab68-4cbd70ce0145",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Vehicle\n{\n    protected int NumberOfWheels { get; set; } = 0;\n    public Vehicle()\n    {\n    }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Vehicle\n{\n    protected int NumberOfWheels { get; set; } = 0;\n    public Vehicle()\n    {\n    }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527816412,
        "id": "8e2d4e53-0008-4eb3-8b16-13fd6009e4e8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527816412,
        "parent_id": "d9a1cd30-ea9b-4ab3-ab68-4cbd70ce0145",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public virtual void Display()\n    {\n        Console.WriteLine($\"The number of wheels for the {nameof(Vehicle)} is {NumberOfWheels}\");\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public virtual void Display()\n    {\n        Console.WriteLine($\"The number of wheels for the {nameof(Vehicle)} is {NumberOfWheels}\");\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527816412,
        "id": "f6b33f49-ee75-4233-b9f0-20f7f4dfe84a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527816412,
        "parent_id": "d9a1cd30-ea9b-4ab3-ab68-4cbd70ce0145",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Ducati : Vehicle\n{\n    public Ducati()\n    {\n        NoOfWheels = 2;\n    }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Ducati : Vehicle\n{\n    public Ducati()\n    {\n        NoOfWheels = 2;\n    }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527816412,
        "id": "9d49778d-eb07-40a2-a1c9-903c8ae622ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527816412,
        "parent_id": "d9a1cd30-ea9b-4ab3-ab68-4cbd70ce0145",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public override void Display()\n    {\n        Console.WriteLine($\"The number of wheels for the {nameof(Ducati)} is {NumberOfWheels}\");\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public override void Display()\n    {\n        Console.WriteLine($\"The number of wheels for the {nameof(Ducati)} is {NumberOfWheels}\");\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527816412,
        "id": "223bd01a-a152-427d-8e2c-6fef1b00257e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527816412,
        "parent_id": "d9a1cd30-ea9b-4ab3-ab68-4cbd70ce0145",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Lamborghini : Vehicle\n{\n    public Lamborghini()\n    {\n        NoOfWheels = 4;\n    }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Lamborghini : Vehicle\n{\n    public Lamborghini()\n    {\n        NoOfWheels = 4;\n    }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527816412,
        "id": "27e3394c-c1b4-47a0-9347-6245ccc0482e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527816412,
        "parent_id": "d9a1cd30-ea9b-4ab3-ab68-4cbd70ce0145",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public override void Display()\n    {\n        Console.WriteLine($\"The number of wheels for the {nameof(Lamborghini)} is {NumberOfWheels}\");\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public override void Display()\n    {\n        Console.WriteLine($\"The number of wheels for the {nameof(Lamborghini)} is {NumberOfWheels}\");\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527816412,
        "id": "71fe74c0-7e58-41da-87f3-2e3fe2ba1a33",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527816412,
        "parent_id": "d9a1cd30-ea9b-4ab3-ab68-4cbd70ce0145",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Below is the code snippet where Polymorphism is exhibited. The object is created for the base type "
            ],
            [
              "Vehicle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " using a variable "
            ],
            [
              "vehicle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " at Line 1. It calls the base class method "
            ],
            [
              "Display()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " at Line 2 and display the output as shown."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Below is the code snippet where Polymorphism is exhibited. The object is created for the base type "
          },
          {
            "Text": "Vehicle",
            "AttrFlags": 2
          },
          {
            "Text": " using a variable "
          },
          {
            "Text": "vehicle",
            "AttrFlags": 2
          },
          {
            "Text": " at Line 1. It calls the base class method "
          },
          {
            "Text": "Display()",
            "AttrFlags": 2
          },
          {
            "Text": " at Line 2 and display the output as shown."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527816413,
        "id": "b1787048-22b8-498a-83fa-ed55778753a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527816413,
        "parent_id": "d9a1cd30-ea9b-4ab3-ab68-4cbd70ce0145",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "static void Main(string[] args)\n {\n    Vehicle vehicle = new Vehicle();    //Line 1\n    vehicle.Display();                  //Line 2  \n    vehicle = new Ducati();             //Line 3\n    vehicle.Display();                  //Line 4\n    vehicle = new Lamborghini();        //Line 5\n    vehicle.Display();                  //Line 6\n }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "static void Main(string[] args)\n {\n    Vehicle vehicle = new Vehicle();    //Line 1\n    vehicle.Display();                  //Line 2  \n    vehicle = new Ducati();             //Line 3\n    vehicle.Display();                  //Line 4\n    vehicle = new Lamborghini();        //Line 5\n    vehicle.Display();                  //Line 6\n }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527816413,
        "id": "070452c4-8d04-4c4e-9bb8-5356d7aee463",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527816413,
        "parent_id": "d9a1cd30-ea9b-4ab3-ab68-4cbd70ce0145",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "At Line 3, the "
            ],
            [
              "vehicle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object is pointed to the derived class "
            ],
            [
              "Ducati",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and calls its "
            ],
            [
              "Display()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method, which displays the output as shown. Here comes the polymorphic behavior, even though the object "
            ],
            [
              "vehicle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is of type "
            ],
            [
              "Vehicle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", it calls the derived class method "
            ],
            [
              "Display()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as the type "
            ],
            [
              "Ducati",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " overrides the base class "
            ],
            [
              "Display()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method, since the "
            ],
            [
              "vehicle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object is pointed towards "
            ],
            [
              "Ducati",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "At Line 3, the "
          },
          {
            "Text": "vehicle",
            "AttrFlags": 2
          },
          {
            "Text": " object is pointed to the derived class "
          },
          {
            "Text": "Ducati",
            "AttrFlags": 2
          },
          {
            "Text": " and calls its "
          },
          {
            "Text": "Display()",
            "AttrFlags": 2
          },
          {
            "Text": " method, which displays the output as shown. Here comes the polymorphic behavior, even though the object "
          },
          {
            "Text": "vehicle",
            "AttrFlags": 2
          },
          {
            "Text": " is of type "
          },
          {
            "Text": "Vehicle",
            "AttrFlags": 2
          },
          {
            "Text": ", it calls the derived class method "
          },
          {
            "Text": "Display()",
            "AttrFlags": 2
          },
          {
            "Text": " as the type "
          },
          {
            "Text": "Ducati",
            "AttrFlags": 2
          },
          {
            "Text": " overrides the base class "
          },
          {
            "Text": "Display()",
            "AttrFlags": 2
          },
          {
            "Text": " method, since the "
          },
          {
            "Text": "vehicle",
            "AttrFlags": 2
          },
          {
            "Text": " object is pointed towards "
          },
          {
            "Text": "Ducati",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527816414,
        "id": "27215c38-51d8-49ef-ae92-01c6a7e0159b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527816414,
        "parent_id": "d9a1cd30-ea9b-4ab3-ab68-4cbd70ce0145",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The same explanation is applicable when it invokes the "
            ],
            [
              "Lamborghini",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " type’s "
            ],
            [
              "Display()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The same explanation is applicable when it invokes the "
          },
          {
            "Text": "Lamborghini",
            "AttrFlags": 2
          },
          {
            "Text": " type’s "
          },
          {
            "Text": "Display()",
            "AttrFlags": 2
          },
          {
            "Text": " method."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527816414,
        "id": "e80e3db1-8fce-44bf-a8ba-f040727fd0ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527816414,
        "parent_id": "d9a1cd30-ea9b-4ab3-ab68-4cbd70ce0145",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The Output is shown below"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The Output is shown below"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527816414,
        "id": "50869da1-7777-4a40-947c-2970f2d020d6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527816414,
        "parent_id": "d9a1cd30-ea9b-4ab3-ab68-4cbd70ce0145",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "The number of wheels for the Vehicle is 0        // Line 2 \nThe number of wheels for the Ducati is 2         // Line 4\nThe number of wheels for the Lamborghini is 4    // Line 6"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "The number of wheels for the Vehicle is 0        // Line 2 \nThe number of wheels for the Ducati is 2         // Line 4\nThe number of wheels for the Lamborghini is 4    // Line 6",
        "code_language": "Plain Text"
      }
    ],
    "title": "Another Polymorphism Example",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}