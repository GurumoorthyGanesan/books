{
  "ID": "5c257ea0-ee1f-4f6f-ae53-59d32610e1f9",
  "Root": {
    "id": "5c257ea0-ee1f-4f6f-ae53-59d32610e1f9",
    "alive": true,
    "content": [
      "62b6ac02-457a-4614-a252-e4a4a04e3c3d",
      "b0b279b7-f562-46f3-9608-f66c464dd464",
      "a74d2e87-e264-4c69-ab82-dc069b8a07ba",
      "c39ac151-6f64-43c8-b4d4-6fd5a558c075",
      "d3c9b88d-3cc2-41a5-bf06-96560888dd5e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549526752494,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550131020000,
    "parent_id": "0d2d1c23-f88d-4ce6-b2d1-22576a6ede45",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Anonymous type equality"
        ]
      ]
    },
    "type": "page",
    "version": 14,
    "content_resolved": [
      {
        "id": "62b6ac02-457a-4614-a252-e4a4a04e3c3d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526752490,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526752490,
        "parent_id": "5c257ea0-ee1f-4f6f-ae53-59d32610e1f9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Anonymous type equality is given by the "
            ],
            [
              "Equals",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instance method. Two objects are equal if they have the same type and equal values (through "
            ],
            [
              "a.Prop.Equals(b.Prop)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") for every property."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Anonymous type equality is given by the "
          },
          {
            "Text": "Equals",
            "AttrFlags": 2
          },
          {
            "Text": " instance method. Two objects are equal if they have the same type and equal values (through "
          },
          {
            "Text": "a.Prop.Equals(b.Prop)",
            "AttrFlags": 2
          },
          {
            "Text": ") for every property."
          }
        ]
      },
      {
        "id": "b0b279b7-f562-46f3-9608-f66c464dd464",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526752493,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550130960000,
        "parent_id": "5c257ea0-ee1f-4f6f-ae53-59d32610e1f9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "var anon = new { Foo = 1, Bar = 2 };\nvar anon2 = new { Foo = 1, Bar = 2 };\nvar anon3 = new { Foo = 5, Bar = 10 };\nvar anon3 = new { Foo = 5, Bar = 10 };\nvar anon4 = new { Bar = 2, Foo = 1 };\n// anon.Equals(anon2) == true\n// anon.Equals(anon3) == false\n// anon.Equals(anon4) == false (anon and anon4 have different types, see below)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var anon = new { Foo = 1, Bar = 2 };\nvar anon2 = new { Foo = 1, Bar = 2 };\nvar anon3 = new { Foo = 5, Bar = 10 };\nvar anon3 = new { Foo = 5, Bar = 10 };\nvar anon4 = new { Bar = 2, Foo = 1 };\n// anon.Equals(anon2) == true\n// anon.Equals(anon3) == false\n// anon.Equals(anon4) == false (anon and anon4 have different types, see below)",
        "code_language": "C#"
      },
      {
        "id": "a74d2e87-e264-4c69-ab82-dc069b8a07ba",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526752493,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526752493,
        "parent_id": "5c257ea0-ee1f-4f6f-ae53-59d32610e1f9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Two anonymous types are considered the same if and only if their properties have the same name and type and appear in the same order."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Two anonymous types are considered the same if and only if their properties have the same name and type and appear in the same order."
          }
        ]
      },
      {
        "id": "c39ac151-6f64-43c8-b4d4-6fd5a558c075",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550131023130,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550131020000,
        "parent_id": "5c257ea0-ee1f-4f6f-ae53-59d32610e1f9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "var anon = new { Foo = 1, Bar = 2 };\nvar anon2 = new { Foo = 7, Bar = 1 };\nvar anon3 = new { Bar = 1, Foo = 3 };\nvar anon4 = new { Fa = 1, Bar = 2 };\n// anon and anon2 have the same type\n// anon and anon3 have diferent types (Bar and Foo appear in different orders)\n// anon and anon4 have different types (property names are different)"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "var anon = new { Foo = 1, Bar = 2 };\nvar anon2 = new { Foo = 7, Bar = 1 };\nvar anon3 = new { Bar = 1, Foo = 3 };\nvar anon4 = new { Fa = 1, Bar = 2 };\n// anon and anon2 have the same type\n// anon and anon3 have diferent types (Bar and Foo appear in different orders)\n// anon and anon4 have different types (property names are different)",
        "code_language": "C#"
      },
      {
        "id": "d3c9b88d-3cc2-41a5-bf06-96560888dd5e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550131020000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550131020000,
        "parent_id": "5c257ea0-ee1f-4f6f-ae53-59d32610e1f9",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "Anonymous type equality",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}