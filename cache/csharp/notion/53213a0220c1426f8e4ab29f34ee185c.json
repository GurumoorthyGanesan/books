{
  "ID": "53213a02-20c1-426f-8e4a-b29f34ee185c",
  "Root": {
    "alive": true,
    "content": [
      "a7de5550-2ddd-4c4e-893a-fbc6d837fbbe",
      "15ac9773-21a1-4625-8b7b-1876264668d5",
      "2889692b-962d-4e20-beb1-9ee4777d2896",
      "b05a1f48-2aa5-4cd9-b6a8-d959a99ce775",
      "def068ee-c996-49ee-b2b0-c2ac712a1a8f",
      "bafca9d6-a2ce-457f-bfee-c0f798a8e9d7",
      "19779d28-c839-43f2-bb9e-531d9e3641d8",
      "f7f80e25-e093-4a62-b2a1-0bcfbf86a0c1",
      "295165f2-7540-4167-88c1-c6afae2fca68",
      "14b756cd-b32f-4a46-a957-94f4f02c137e",
      "bfa3580e-c962-4e43-ac05-ecfe80f6c4a2",
      "d1b2dd83-0716-4574-a604-6d9d6d499dcb"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549527186251,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "53213a02-20c1-426f-8e4a-b29f34ee185c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549785720000,
    "parent_id": "815daf49-ac2a-4123-8b19-67aa9afb3da8",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "The FuncT TResult ActionT and PredicateT delegate types"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527186245,
        "id": "a7de5550-2ddd-4c4e-893a-fbc6d837fbbe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527186245,
        "parent_id": "53213a02-20c1-426f-8e4a-b29f34ee185c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The System namespace contains "
            ],
            [
              "Func\u003c..., TResult\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " delegate types with between 0 and 15 generic parameters, returning type "
            ],
            [
              "TResult",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The System namespace contains "
          },
          {
            "Text": "Func\u003c..., TResult\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " delegate types with between 0 and 15 generic parameters, returning type "
          },
          {
            "Text": "TResult",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527186248,
        "id": "15ac9773-21a1-4625-8b7b-1876264668d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527186248,
        "parent_id": "53213a02-20c1-426f-8e4a-b29f34ee185c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "private void UseFunc(Func\u003cstring\u003e func)\n{\n    string output = func(); // Func with a single generic type parameter returns that type\n    Console.WriteLine(output);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "private void UseFunc(Func\u003cstring\u003e func)\n{\n    string output = func(); // Func with a single generic type parameter returns that type\n    Console.WriteLine(output);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527186248,
        "id": "2889692b-962d-4e20-beb1-9ee4777d2896",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527186248,
        "parent_id": "53213a02-20c1-426f-8e4a-b29f34ee185c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "private void UseFunc(Func\u003cint, int, string\u003e func)\n{\n    string output = func(4, 2); // Func with multiple generic type parameters takes all but the first as parameters of that type\n    Console.WriteLine(output);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "private void UseFunc(Func\u003cint, int, string\u003e func)\n{\n    string output = func(4, 2); // Func with multiple generic type parameters takes all but the first as parameters of that type\n    Console.WriteLine(output);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527186249,
        "id": "b05a1f48-2aa5-4cd9-b6a8-d959a99ce775",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527186249,
        "parent_id": "53213a02-20c1-426f-8e4a-b29f34ee185c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The System namespace also contains "
            ],
            [
              "Action\u003c...\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " delegate types with different number of generic parameters (from 0 to 16). It is similar to "
            ],
            [
              "Func\u003cT1, .., Tn\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", but it always returns "
            ],
            [
              "void",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The System namespace also contains "
          },
          {
            "Text": "Action\u003c...\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " delegate types with different number of generic parameters (from 0 to 16). It is similar to "
          },
          {
            "Text": "Func\u003cT1, .., Tn\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ", but it always returns "
          },
          {
            "Text": "void",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527186249,
        "id": "def068ee-c996-49ee-b2b0-c2ac712a1a8f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527186249,
        "parent_id": "53213a02-20c1-426f-8e4a-b29f34ee185c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "private void UseAction(Action action)\n{\n    action(); // The non-generic Action has no parameters\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "private void UseAction(Action action)\n{\n    action(); // The non-generic Action has no parameters\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527186249,
        "id": "bafca9d6-a2ce-457f-bfee-c0f798a8e9d7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527186249,
        "parent_id": "53213a02-20c1-426f-8e4a-b29f34ee185c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "private void UseAction(Action\u003cint, string\u003e action)\n{\n    action(4, \"two\"); // The generic action is invoked with parameters matching its type arguments\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "private void UseAction(Action\u003cint, string\u003e action)\n{\n    action(4, \"two\"); // The generic action is invoked with parameters matching its type arguments\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527186249,
        "id": "19779d28-c839-43f2-bb9e-531d9e3641d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527186249,
        "parent_id": "53213a02-20c1-426f-8e4a-b29f34ee185c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Predicate\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is also a form of "
            ],
            [
              "Func",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " but it will always return "
            ],
            [
              "bool",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". A predicate is a way of specifying a custom criteria. Depending on the value of the input and the logic defined within the predicate, it will return either "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "false",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "Predicate\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " therefore behaves in the same way as "
            ],
            [
              "Func\u003cT, bool\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and both can be initialized and used in the same way."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Predicate\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " is also a form of "
          },
          {
            "Text": "Func",
            "AttrFlags": 2
          },
          {
            "Text": " but it will always return "
          },
          {
            "Text": "bool",
            "AttrFlags": 2
          },
          {
            "Text": ". A predicate is a way of specifying a custom criteria. Depending on the value of the input and the logic defined within the predicate, it will return either "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "false",
            "AttrFlags": 2
          },
          {
            "Text": ". "
          },
          {
            "Text": "Predicate\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " therefore behaves in the same way as "
          },
          {
            "Text": "Func\u003cT, bool\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " and both can be initialized and used in the same way."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527186249,
        "id": "f7f80e25-e093-4a62-b2a1-0bcfbf86a0c1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527186249,
        "parent_id": "53213a02-20c1-426f-8e4a-b29f34ee185c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Predicate\u003cstring\u003e predicate = s =\u003e s.StartsWith(\"a\");\nFunc\u003cstring, bool\u003e func = s =\u003e s.StartsWith(\"a\");"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Predicate\u003cstring\u003e predicate = s =\u003e s.StartsWith(\"a\");\nFunc\u003cstring, bool\u003e func = s =\u003e s.StartsWith(\"a\");",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527186249,
        "id": "295165f2-7540-4167-88c1-c6afae2fca68",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527186249,
        "parent_id": "53213a02-20c1-426f-8e4a-b29f34ee185c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Both of these return true\nvar predicateReturnsTrue = predicate(\"abc\");\nvar funcReturnsTrue = func(\"abc\");"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Both of these return true\nvar predicateReturnsTrue = predicate(\"abc\");\nvar funcReturnsTrue = func(\"abc\");",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527186250,
        "id": "14b756cd-b32f-4a46-a957-94f4f02c137e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527186250,
        "parent_id": "53213a02-20c1-426f-8e4a-b29f34ee185c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Both of these return false\nvar predicateReturnsFalse = predicate(\"xyz\");\nvar funcReturnsFalse = func(\"xyz\");"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Both of these return false\nvar predicateReturnsFalse = predicate(\"xyz\");\nvar funcReturnsFalse = func(\"xyz\");",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527186250,
        "id": "bfa3580e-c962-4e43-ac05-ecfe80f6c4a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527186250,
        "parent_id": "53213a02-20c1-426f-8e4a-b29f34ee185c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The choice of whether to use "
            ],
            [
              "Predicate\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "Func\u003cT, bool\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is really a matter of opinion. "
            ],
            [
              "Predicate\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is arguably more expressive of the author’s intent, while "
            ],
            [
              "Func\u003cT, bool\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is likely to be familiar to a greater proportion of C# developers."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The choice of whether to use "
          },
          {
            "Text": "Predicate\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "Func\u003cT, bool\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " is really a matter of opinion. "
          },
          {
            "Text": "Predicate\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " is arguably more expressive of the author’s intent, while "
          },
          {
            "Text": "Func\u003cT, bool\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " is likely to be familiar to a greater proportion of C# developers."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527186251,
        "id": "d1b2dd83-0716-4574-a604-6d9d6d499dcb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527186251,
        "parent_id": "53213a02-20c1-426f-8e4a-b29f34ee185c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In addition to that, there are some cases where only one of the options is available, especially when interacting with another API. For example "
            ],
            [
              "List\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Array\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " generally take "
            ],
            [
              "Predicate\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for their methods, while most LINQ extensions only accept "
            ],
            [
              "Func\u003cT, bool\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In addition to that, there are some cases where only one of the options is available, especially when interacting with another API. For example "
          },
          {
            "Text": "List\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Array\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " generally take "
          },
          {
            "Text": "Predicate\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " for their methods, while most LINQ extensions only accept "
          },
          {
            "Text": "Func\u003cT, bool\u003e",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "The FuncT TResult ActionT and PredicateT delegate types",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}