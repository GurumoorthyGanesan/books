{
  "ID": "7db28f2a-b7a1-4c2f-b128-85143cd19dcc",
  "Root": {
    "alive": true,
    "content": [
      "98f04157-9479-4130-995f-d1a23ddc0923",
      "e34bab90-91e0-42e0-b851-1627f200d0f8",
      "73002f1e-6813-404d-9081-c789c95feff1",
      "66132e27-709e-45f7-9130-2cbf9beefacb"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525481422,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "7db28f2a-b7a1-4c2f-b128-85143cd19dcc",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549611780000,
    "parent_id": "9ff3cc78-9f6a-4238-a0a8-e9d9c0209cf7",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Aggregate exceptions multiple exceptions from one method"
        ]
      ]
    },
    "type": "page",
    "version": 13,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525481419,
        "id": "98f04157-9479-4130-995f-d1a23ddc0923",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525481419,
        "parent_id": "7db28f2a-b7a1-4c2f-b128-85143cd19dcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Who says you cannot throw multiple exceptions in one method. If you are not used to playing around with AggregateExceptions you may be tempted to create your own data-structure to represent many things going wrong. There are of course were another data-structure that is not an exception would be more ideal such as the results of a validation. Even if you do play with AggregateExceptions you may be on the receiving side and always handling them not realizing they can be of use to you."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Who says you cannot throw multiple exceptions in one method. If you are not used to playing around with AggregateExceptions you may be tempted to create your own data-structure to represent many things going wrong. There are of course were another data-structure that is not an exception would be more ideal such as the results of a validation. Even if you do play with AggregateExceptions you may be on the receiving side and always handling them not realizing they can be of use to you."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525481422,
        "id": "e34bab90-91e0-42e0-b851-1627f200d0f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525481422,
        "parent_id": "7db28f2a-b7a1-4c2f-b128-85143cd19dcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is quite plausible to have a method execute and even though it will be a failure as a whole you will want to highlight multiple things that went wrong in the exceptions that are thrown. As an example this behavior can be seen with how Parallel methods work were a task broken into multiple threads and any number of them could throw exceptions and this needs to be reported. Here is a silly example of how you could benefit from this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is quite plausible to have a method execute and even though it will be a failure as a whole you will want to highlight multiple things that went wrong in the exceptions that are thrown. As an example this behavior can be seen with how Parallel methods work were a task broken into multiple threads and any number of them could throw exceptions and this needs to be reported. Here is a silly example of how you could benefit from this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525481422,
        "id": "73002f1e-6813-404d-9081-c789c95feff1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611780000,
        "parent_id": "7db28f2a-b7a1-4c2f-b128-85143cd19dcc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public void Run()\n    {\n        try\n        {\n            this.SillyMethod(1, 2);\n        }\n        catch (AggregateException ex)\n        {\n            Console.WriteLine(ex.Message);\n            foreach (Exception innerException in ex.InnerExceptions)\n            {\n                Console.WriteLine(innerException.Message);\n            }\n        }\n    }"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public void Run()\n    {\n        try\n        {\n            this.SillyMethod(1, 2);\n        }\n        catch (AggregateException ex)\n        {\n            Console.WriteLine(ex.Message);\n            foreach (Exception innerException in ex.InnerExceptions)\n            {\n                Console.WriteLine(innerException.Message);\n            }\n        }\n    }",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525481422,
        "id": "66132e27-709e-45f7-9130-2cbf9beefacb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611780000,
        "parent_id": "7db28f2a-b7a1-4c2f-b128-85143cd19dcc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "private void SillyMethod(int input1, int input2)\n    {\n        var exceptions = new List\u003cException\u003e();"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "private void SillyMethod(int input1, int input2)\n    {\n        var exceptions = new List\u003cException\u003e();",
        "code_language": "C#"
      }
    ],
    "title": "Aggregate exceptions multiple exceptions from one method",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}