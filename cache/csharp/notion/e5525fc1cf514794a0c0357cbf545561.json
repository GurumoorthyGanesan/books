{
  "ID": "e5525fc1-cf51-4794-a0c0-357cbf545561",
  "Root": {
    "alive": true,
    "content": [
      "bdaf9e5c-6563-47f3-bfc2-51dd5d4b31e4",
      "cd6539da-1888-4206-bd6d-0c27590d6667",
      "f9ba7ffa-fb04-4537-aea2-35b1b7750fc5",
      "23b4afd0-2ca4-4b40-b2d1-d39c98c40040",
      "9b933e58-9fde-43a9-9532-175de5d64983"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525669821,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e5525fc1-cf51-4794-a0c0-357cbf545561",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549610940000,
    "parent_id": "114a10c9-a82c-42cd-b7ee-4162153e47b0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Async Await will only improve performance if it allows the machine to do additional work"
        ]
      ]
    },
    "type": "page",
    "version": 16,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525669819,
        "id": "bdaf9e5c-6563-47f3-bfc2-51dd5d4b31e4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525669819,
        "parent_id": "e5525fc1-cf51-4794-a0c0-357cbf545561",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consider the following code:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consider the following code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525669819,
        "id": "cd6539da-1888-4206-bd6d-0c27590d6667",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549610880000,
        "parent_id": "e5525fc1-cf51-4794-a0c0-357cbf545561",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public async Task MethodA()\n{\n     await MethodB();\n     // Do other work\n}\n\npublic async Task MethodB()\n{\n     await MethodC();\n     // Do other work\n}\n\npublic async Task MethodC()\n{\n     // Or await some other async work\n     await Task.Delay(100);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 9,
        "code": "public async Task MethodA()\n{\n     await MethodB();\n     // Do other work\n}\n\npublic async Task MethodB()\n{\n     await MethodC();\n     // Do other work\n}\n\npublic async Task MethodC()\n{\n     // Or await some other async work\n     await Task.Delay(100);\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525669820,
        "id": "f9ba7ffa-fb04-4537-aea2-35b1b7750fc5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525669820,
        "parent_id": "e5525fc1-cf51-4794-a0c0-357cbf545561",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This will not perform any better than"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This will not perform any better than"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525669820,
        "id": "23b4afd0-2ca4-4b40-b2d1-d39c98c40040",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549610880000,
        "parent_id": "e5525fc1-cf51-4794-a0c0-357cbf545561",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public void MethodA()\n{\n     MethodB();\n     // Do other work\n}\n\npublic void MethodB()\n{\n     MethodC();\n     // Do other work\n}\n\npublic void MethodC()\n{\n     Thread.Sleep(100);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 9,
        "code": "public void MethodA()\n{\n     MethodB();\n     // Do other work\n}\n\npublic void MethodB()\n{\n     MethodC();\n     // Do other work\n}\n\npublic void MethodC()\n{\n     Thread.Sleep(100);\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525669821,
        "id": "9b933e58-9fde-43a9-9532-175de5d64983",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525669821,
        "parent_id": "e5525fc1-cf51-4794-a0c0-357cbf545561",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The primary purpose of async/await is to allow the machine to do additional work - for example, to allow the calling thread to do other work while it’s waiting for a result from some I/O operation. In this case, the calling thread is never allowed to do more work than it would have been able to do otherwise, so there’s no performance gain over simply calling "
            ],
            [
              "MethodA()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "MethodB()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and "
            ],
            [
              "MethodC()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " synchronously."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The primary purpose of async/await is to allow the machine to do additional work - for example, to allow the calling thread to do other work while it’s waiting for a result from some I/O operation. In this case, the calling thread is never allowed to do more work than it would have been able to do otherwise, so there’s no performance gain over simply calling "
          },
          {
            "Text": "MethodA()",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "MethodB()",
            "AttrFlags": 2
          },
          {
            "Text": ", and "
          },
          {
            "Text": "MethodC()",
            "AttrFlags": 2
          },
          {
            "Text": " synchronously."
          }
        ]
      }
    ],
    "title": "Async Await will only improve performance if it allows the machine to do additional work",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}