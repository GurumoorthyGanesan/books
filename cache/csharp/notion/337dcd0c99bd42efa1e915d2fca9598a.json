{
  "ID": "337dcd0c-99bd-42ef-a1e9-15d2fca9598a",
  "Root": {
    "id": "337dcd0c-99bd-42ef-a1e9-15d2fca9598a",
    "alive": true,
    "content": [
      "af5c60bf-71a7-4100-a389-4f884a6ca6cb",
      "b995b149-b191-4f60-bb7d-2cdf4e61a201",
      "b0f7bb0c-5afa-4a21-bd9d-756ed8fb39dc",
      "489bb459-75ce-4130-a6b9-ec2836bcd1fc",
      "67e7f234-70a0-454b-b608-14336aaa3a1e",
      "227be06b-1ab7-4f51-ac72-cecf161b225d",
      "73a35464-a134-4e67-b142-194453e01322"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525011349,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549940760000,
    "parent_id": "1cef0e56-e2c1-46b9-9c66-002b53d2c779",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "is"
        ]
      ]
    },
    "type": "page",
    "version": 15,
    "content_resolved": [
      {
        "id": "af5c60bf-71a7-4100-a389-4f884a6ca6cb",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525011344,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525011344,
        "parent_id": "337dcd0c-99bd-42ef-a1e9-15d2fca9598a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Checks if an object is compatible with a given type, i.e. if an object is an instance of the "
            ],
            [
              "BaseInterface",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " type, or a type that derives from "
            ],
            [
              "BaseInterface",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Checks if an object is compatible with a given type, i.e. if an object is an instance of the "
          },
          {
            "Text": "BaseInterface",
            "AttrFlags": 2
          },
          {
            "Text": " type, or a type that derives from "
          },
          {
            "Text": "BaseInterface",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "id": "b995b149-b191-4f60-bb7d-2cdf4e61a201",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525011346,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940700000,
        "parent_id": "337dcd0c-99bd-42ef-a1e9-15d2fca9598a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "interface BaseInterface {}\nclass BaseClass : BaseInterface {}\nclass DerivedClass : BaseClass {}\n\nvar d = new DerivedClass();\nConsole.WriteLine(d is DerivedClass);  // True\nConsole.WriteLine(d is BaseClass);     // True\nConsole.WriteLine(d is BaseInterface); // True\nConsole.WriteLine(d is object);        // True\nConsole.WriteLine(d is string);        // False\n\nvar b = new BaseClass();\nConsole.WriteLine(b is DerivedClass);  // False\nConsole.WriteLine(b is BaseClass);     // True\nConsole.WriteLine(b is BaseInterface); // True\nConsole.WriteLine(b is object);        // True\nConsole.WriteLine(b is string);        // False"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "interface BaseInterface {}\nclass BaseClass : BaseInterface {}\nclass DerivedClass : BaseClass {}\n\nvar d = new DerivedClass();\nConsole.WriteLine(d is DerivedClass);  // True\nConsole.WriteLine(d is BaseClass);     // True\nConsole.WriteLine(d is BaseInterface); // True\nConsole.WriteLine(d is object);        // True\nConsole.WriteLine(d is string);        // False\n\nvar b = new BaseClass();\nConsole.WriteLine(b is DerivedClass);  // False\nConsole.WriteLine(b is BaseClass);     // True\nConsole.WriteLine(b is BaseInterface); // True\nConsole.WriteLine(b is object);        // True\nConsole.WriteLine(b is string);        // False",
        "code_language": "C#"
      },
      {
        "id": "b0f7bb0c-5afa-4a21-bd9d-756ed8fb39dc",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525011348,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525011348,
        "parent_id": "337dcd0c-99bd-42ef-a1e9-15d2fca9598a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the intent of the cast is to use the object, it is best practice to use the "
            ],
            [
              "as",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%23/26/keywords/138/as"
                ]
              ]
            ],
            [
              " keyword’"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the intent of the cast is to use the object, it is best practice to use the "
          },
          {
            "Text": "as",
            "AttrFlags": 2,
            "Link": "http://stackoverflow.com/documentation/c%23/26/keywords/138/as"
          },
          {
            "Text": " keyword’"
          }
        ]
      },
      {
        "id": "489bb459-75ce-4130-a6b9-ec2836bcd1fc",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525011348,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940700000,
        "parent_id": "337dcd0c-99bd-42ef-a1e9-15d2fca9598a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "interface BaseInterface {}\nclass BaseClass : BaseInterface {}\nclass DerivedClass : BaseClass {}\n\nvar d = new DerivedClass();\nConsole.WriteLine(d is DerivedClass);  // True - valid use of 'is'\nConsole.WriteLine(d is BaseClass);     // True - valid use of 'is'\n\nif(d is BaseClass){\n    var castedD = (BaseClass)d;\n    castedD.Method(); // valid, but not best practice\n}\n\nvar asD = d as BaseClass;\n\nif (asD!=null) {\n    asD.Method(); //prefered method since you incur only one unboxing penalty\n}"
            ]
          ]
        },
        "type": "code",
        "version": 13,
        "code": "interface BaseInterface {}\nclass BaseClass : BaseInterface {}\nclass DerivedClass : BaseClass {}\n\nvar d = new DerivedClass();\nConsole.WriteLine(d is DerivedClass);  // True - valid use of 'is'\nConsole.WriteLine(d is BaseClass);     // True - valid use of 'is'\n\nif(d is BaseClass){\n    var castedD = (BaseClass)d;\n    castedD.Method(); // valid, but not best practice\n}\n\nvar asD = d as BaseClass;\n\nif (asD!=null) {\n    asD.Method(); //prefered method since you incur only one unboxing penalty\n}",
        "code_language": "Plain Text"
      },
      {
        "id": "67e7f234-70a0-454b-b608-14336aaa3a1e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525011349,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525011349,
        "parent_id": "337dcd0c-99bd-42ef-a1e9-15d2fca9598a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But, from C# 7 "
            ],
            [
              "pattern matching",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://stackoverflow.com/documentation/c%23/1936/c-sharp-7-0-features/13323/pattern-matching#t=201707130940065371224"
                ]
              ]
            ],
            [
              " feature extends the is operator to check for a type and declare a new variable at the same time. Same code part with C# 7 :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But, from C# 7 "
          },
          {
            "Text": "pattern matching",
            "AttrFlags": 2,
            "Link": "https://stackoverflow.com/documentation/c%23/1936/c-sharp-7-0-features/13323/pattern-matching#t=201707130940065371224"
          },
          {
            "Text": " feature extends the is operator to check for a type and declare a new variable at the same time. Same code part with C# 7 :"
          }
        ]
      },
      {
        "id": "227be06b-1ab7-4f51-ac72-cecf161b225d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525011349,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940760000,
        "parent_id": "337dcd0c-99bd-42ef-a1e9-15d2fca9598a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "if (d is BaseClass asD ){\n    asD.Method();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "if (d is BaseClass asD ){\n    asD.Method();\n}",
        "code_language": "C#"
      },
      {
        "id": "73a35464-a134-4e67-b142-194453e01322",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549940700000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940700000,
        "parent_id": "337dcd0c-99bd-42ef-a1e9-15d2fca9598a",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "is",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}