{
  "ID": "73025447-b48d-428e-819c-994bd6c9ef2d",
  "Root": {
    "id": "73025447-b48d-428e-819c-994bd6c9ef2d",
    "alive": true,
    "content": [
      "81ce29fa-1f6b-4bd6-ab8b-3303edce46a4",
      "b8fc01d0-02d1-45c7-9f6d-02e026028532",
      "4111e5e1-a892-4d03-9e79-1df554ae5609",
      "dcce1278-485b-489d-9676-7ba5da1572c6",
      "2aa659d8-8fdf-4f9a-a0eb-30e01b53c4c9",
      "ba588ae2-179b-446e-b1da-800c94cbaf0e",
      "728eabaa-0978-4e91-8021-69e29cf3106b",
      "d56d81f7-d387-42ad-9209-cd1d24af3a25",
      "59927dc2-2a93-42cf-92b2-194223796903",
      "ad0d518e-7a9b-47f5-984e-bc436fa3931b",
      "33eeca16-9c2d-4fef-bc47-ac4f6258cc10",
      "650e5717-d8e7-48f8-8511-fcd881c1325b",
      "377d3786-3f2b-41ed-9bcd-8488f29acdc4",
      "7eef67b8-8d96-4d8c-9c23-f76c435148a2",
      "3ec8afba-fc0b-4fd0-b3c3-be5f7d10e21d",
      "d840dcf1-e7f8-469b-a6cc-ce36688cda0b",
      "e27a5788-6f02-4384-8fed-66e725304dc7",
      "953d130d-c177-4a84-9225-4a63f3f5b43d",
      "6cc25c4c-5f0c-4187-9887-0650d2113af9",
      "105da68f-643d-4282-8740-82e7ab2777a5",
      "0d8a4601-da10-4587-984e-10abad12a97f",
      "5e118d31-6c63-4161-a964-4092df07e28b",
      "a208a083-82b5-4f62-81cf-bc25a7ce83f4",
      "7def4653-bfc8-40e6-b680-a5ce60e7d8ef",
      "b55f932c-db9d-4e51-ab6f-1d82ee789700",
      "f6bb25e6-f5d2-449f-b5ff-74bee728b93b",
      "29ab7028-71ba-48f5-a526-5782c4be61ac",
      "63ffb5c4-ca1b-46eb-8bc2-99f301ad11b4",
      "ad55ae14-5b4f-40f4-932f-0e07a52317a9",
      "a038e7fb-8da2-481a-b218-623e6eb4caf6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549528713933,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549619940000,
    "parent_id": "b11e628d-9a49-4dab-ba8d-ad0de127ca4a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Value type vs Reference type"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "id": "81ce29fa-1f6b-4bd6-ab8b-3303edce46a4",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713926,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713926,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Syntax"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Syntax"
          }
        ]
      },
      {
        "id": "b8fc01d0-02d1-45c7-9f6d-02e026028532",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713929,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713929,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Passing by reference: public void Double(ref int numberToDouble) { }"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Passing by reference: public void Double(ref int numberToDouble) { }"
          }
        ]
      },
      {
        "id": "4111e5e1-a892-4d03-9e79-1df554ae5609",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713929,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713929,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "id": "dcce1278-485b-489d-9676-7ba5da1572c6",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713929,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713929,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "id": "2aa659d8-8fdf-4f9a-a0eb-30e01b53c4c9",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713929,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713929,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Value types"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Value types"
          }
        ]
      },
      {
        "id": "ba588ae2-179b-446e-b1da-800c94cbaf0e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713929,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713929,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Value types are the simpler of the two. Value types are often used to represent data itself. An integer, a Boolean or a point in 3D space are all examples of good value types."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Value types are the simpler of the two. Value types are often used to represent data itself. An integer, a Boolean or a point in 3D space are all examples of good value types."
          }
        ]
      },
      {
        "id": "728eabaa-0978-4e91-8021-69e29cf3106b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713929,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713929,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Value types (structs) are declared by using the struct keyword. See the syntax section for an example of how to declare a new struct."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Value types (structs) are declared by using the struct keyword. See the syntax section for an example of how to declare a new struct."
          }
        ]
      },
      {
        "id": "d56d81f7-d387-42ad-9209-cd1d24af3a25",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713929,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713929,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Generally speaking, We have 2 keywords that are used to declare value types:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Generally speaking, We have 2 keywords that are used to declare value types:"
          }
        ]
      },
      {
        "id": "59927dc2-2a93-42cf-92b2-194223796903",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713930,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713930,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Structs"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Structs"
          }
        ]
      },
      {
        "id": "ad0d518e-7a9b-47f5-984e-bc436fa3931b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713930,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713930,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Enumerations"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Enumerations"
          }
        ]
      },
      {
        "id": "33eeca16-9c2d-4fef-bc47-ac4f6258cc10",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713930,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713930,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Reference types"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Reference types"
          }
        ]
      },
      {
        "id": "650e5717-d8e7-48f8-8511-fcd881c1325b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713930,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713930,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Reference types are slightly more complex. Reference types are traditional objects in the sense of Object Oriented Programming. So, they support inheritance (and the benefits there of) and also support finalizers."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Reference types are slightly more complex. Reference types are traditional objects in the sense of Object Oriented Programming. So, they support inheritance (and the benefits there of) and also support finalizers."
          }
        ]
      },
      {
        "id": "377d3786-3f2b-41ed-9bcd-8488f29acdc4",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713930,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713930,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In C# generally we have this reference types:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In C# generally we have this reference types:"
          }
        ]
      },
      {
        "id": "7eef67b8-8d96-4d8c-9c23-f76c435148a2",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713930,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713930,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Classes"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Classes"
          }
        ]
      },
      {
        "id": "3ec8afba-fc0b-4fd0-b3c3-be5f7d10e21d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713931,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713931,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Delegates"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Delegates"
          }
        ]
      },
      {
        "id": "d840dcf1-e7f8-469b-a6cc-ce36688cda0b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713931,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713931,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Interfaces"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Interfaces"
          }
        ]
      },
      {
        "id": "e27a5788-6f02-4384-8fed-66e725304dc7",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713931,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713931,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "New reference types (classes) are declared using the class keyword. For an example, see the syntax section for how to declare a new reference type."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "New reference types (classes) are declared using the class keyword. For an example, see the syntax section for how to declare a new reference type."
          }
        ]
      },
      {
        "id": "953d130d-c177-4a84-9225-4a63f3f5b43d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713931,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713931,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Major Differences"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Major Differences"
          }
        ]
      },
      {
        "id": "6cc25c4c-5f0c-4187-9887-0650d2113af9",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713931,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713931,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The major differences between reference types and value types can be seen below."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The major differences between reference types and value types can be seen below."
          }
        ]
      },
      {
        "id": "105da68f-643d-4282-8740-82e7ab2777a5",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713931,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713931,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Value types exist on the stack, reference types exist on the heap"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Value types exist on the stack, reference types exist on the heap"
          }
        ]
      },
      {
        "id": "0d8a4601-da10-4587-984e-10abad12a97f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713931,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713931,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is the often mentioned difference between the two, but really, what it boils down to is that when you use a value type in C#, such as an int, the program will use that variable to refer directly to that value. If you say int mine = 0, then the variable mine refers directly to 0, which is efficient. However, reference types actually hold (as the name suggests) a reference to the underlying object, this is akin to pointers in other languages such as C++."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is the often mentioned difference between the two, but really, what it boils down to is that when you use a value type in C#, such as an int, the program will use that variable to refer directly to that value. If you say int mine = 0, then the variable mine refers directly to 0, which is efficient. However, reference types actually hold (as the name suggests) a reference to the underlying object, this is akin to pointers in other languages such as C++."
          }
        ]
      },
      {
        "id": "5e118d31-6c63-4161-a964-4092df07e28b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713932,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713932,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You might not notice the effects of this immediately, but the effects are there, are powerful and are subtle. See the example on changing reference types elsewhere for an example."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You might not notice the effects of this immediately, but the effects are there, are powerful and are subtle. See the example on changing reference types elsewhere for an example."
          }
        ]
      },
      {
        "id": "a208a083-82b5-4f62-81cf-bc25a7ce83f4",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713932,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713932,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This difference is the primary reason for the following other differences, and is worth knowing."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This difference is the primary reason for the following other differences, and is worth knowing."
          }
        ]
      },
      {
        "id": "7def4653-bfc8-40e6-b680-a5ce60e7d8ef",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713932,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713932,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Value types don’t change when you change them in a method, reference types do"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Value types don’t change when you change them in a method, reference types do"
          }
        ]
      },
      {
        "id": "b55f932c-db9d-4e51-ab6f-1d82ee789700",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713932,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713932,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When a value type is passed into a method as a parameter, if the method changes the value in any way, the value is not changed In contrast, passing a reference type into that same method and changing it will change the underlying object, so that other things that use that same object will have the newly changed object rather than their original value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When a value type is passed into a method as a parameter, if the method changes the value in any way, the value is not changed In contrast, passing a reference type into that same method and changing it will change the underlying object, so that other things that use that same object will have the newly changed object rather than their original value."
          }
        ]
      },
      {
        "id": "f6bb25e6-f5d2-449f-b5ff-74bee728b93b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713932,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713932,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "See the example of value types vs reference types in methods for more info."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "See the example of value types vs reference types in methods for more info."
          }
        ]
      },
      {
        "id": "29ab7028-71ba-48f5-a526-5782c4be61ac",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713932,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713932,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "What if I want to change them?"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "What if I want to change them?"
          }
        ]
      },
      {
        "id": "63ffb5c4-ca1b-46eb-8bc2-99f301ad11b4",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713932,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713932,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Simply pass them into your method using the “ref” keyword, and you are then passing this object by reference. Meaning, it’s the same object in memory. So modifications you make will be respected. See the example on passing by reference for an example."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Simply pass them into your method using the “ref” keyword, and you are then passing this object by reference. Meaning, it’s the same object in memory. So modifications you make will be respected. See the example on passing by reference for an example."
          }
        ]
      },
      {
        "id": "ad55ae14-5b4f-40f4-932f-0e07a52317a9",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713932,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713932,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Value types cannot be null, reference types can"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Value types cannot be null, reference types can"
          }
        ]
      },
      {
        "id": "a038e7fb-8da2-481a-b218-623e6eb4caf6",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528713932,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528713932,
        "parent_id": "73025447-b48d-428e-819c-994bd6c9ef2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Pretty much as it says, you can assign null to a reference type, meaning the variable you’ve assigned can have no actual object assigned to it. In the case of value types, however, this is not possible. You can, however, use Nullable, to allow your value type to be nullable, if this is a requirement, though if this is something you are considering, think strongly whether a class might not be the best approach here, if it is your own type."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Pretty much as it says, you can assign null to a reference type, meaning the variable you’ve assigned can have no actual object assigned to it. In the case of value types, however, this is not possible. You can, however, use Nullable, to allow your value type to be nullable, if this is a requirement, though if this is something you are considering, think strongly whether a class might not be the best approach here, if it is your own type."
          }
        ]
      }
    ],
    "title": "Value type vs Reference type",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}