{
  "ID": "db3f35cb-1304-4e1a-89c4-5201506f1759",
  "Root": {
    "alive": true,
    "content": [
      "2bdea64f-0300-416b-8b0d-39542fc742c2",
      "6a484be3-b4c5-4198-9319-f3143d3a6793",
      "1e3223b9-fa94-4ac2-b2fa-709850229f3e",
      "4f3b9096-3052-4db5-802d-be2b258eafba",
      "c1120979-fed3-4b2d-92a5-59f5eee1225f",
      "b620e50b-c1bf-4f1c-93c5-8b512b42f887",
      "d91745c9-25d2-4353-aaa2-9c7a3e3e83d4",
      "b2daa4f5-aab1-4967-91d2-69a9dc1c998a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549529351660,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "db3f35cb-1304-4e1a-89c4-5201506f1759",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550218680000,
    "parent_id": "01f594f2-2bf4-456c-bf45-1a8e1e61915e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Controlling serialization behavior with attributes"
        ]
      ]
    },
    "type": "page",
    "version": 11,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529351656,
        "id": "2bdea64f-0300-416b-8b0d-39542fc742c2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529351656,
        "parent_id": "db3f35cb-1304-4e1a-89c4-5201506f1759",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you use the "
            ],
            [
              "[NonSerialized]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " attribute, then that member will always have its default value after deserialization (ex. 0 for an "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", null for "
            ],
            [
              "string",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", false for a "
            ],
            [
              "bool",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", etc.), regardless of any initialization done in the object itself (constructors, declarations, etc.). To compensate, the attributes "
            ],
            [
              "[OnDeserializing]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (called just BEFORE deserializing) and "
            ],
            [
              "[OnDeserialized]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (called just AFTER deserializing) together with their counterparts, "
            ],
            [
              "[OnSerializing]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "[OnSerialized]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are provided."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you use the "
          },
          {
            "Text": "[NonSerialized]",
            "AttrFlags": 2
          },
          {
            "Text": " attribute, then that member will always have its default value after deserialization (ex. 0 for an "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ", null for "
          },
          {
            "Text": "string",
            "AttrFlags": 2
          },
          {
            "Text": ", false for a "
          },
          {
            "Text": "bool",
            "AttrFlags": 2
          },
          {
            "Text": ", etc.), regardless of any initialization done in the object itself (constructors, declarations, etc.). To compensate, the attributes "
          },
          {
            "Text": "[OnDeserializing]",
            "AttrFlags": 2
          },
          {
            "Text": " (called just BEFORE deserializing) and "
          },
          {
            "Text": "[OnDeserialized]",
            "AttrFlags": 2
          },
          {
            "Text": " (called just AFTER deserializing) together with their counterparts, "
          },
          {
            "Text": "[OnSerializing]",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "[OnSerialized]",
            "AttrFlags": 2
          },
          {
            "Text": " are provided."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529351659,
        "id": "6a484be3-b4c5-4198-9319-f3143d3a6793",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529351659,
        "parent_id": "db3f35cb-1304-4e1a-89c4-5201506f1759",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Assume we want to add a “Rating” to our Vector and we want to make sure the value always starts at 1. The way it is written below, it will be 0 after being deserialized:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Assume we want to add a “Rating” to our Vector and we want to make sure the value always starts at 1. The way it is written below, it will be 0 after being deserialized:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529351659,
        "id": "1e3223b9-fa94-4ac2-b2fa-709850229f3e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550218680000,
        "parent_id": "db3f35cb-1304-4e1a-89c4-5201506f1759",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "[Serializable]\npublic class Vector\n{\n    public int X;\n    public int Y;\n    public int Z;\n\n    [NonSerialized]\n    public decimal Rating = 1M;\n\n    public Vector()\n    {\n        Rating = 1M;\n    }\n\n    public Vector(decimal initialRating)\n    {\n        Rating = initialRating;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "[Serializable]\npublic class Vector\n{\n    public int X;\n    public int Y;\n    public int Z;\n\n    [NonSerialized]\n    public decimal Rating = 1M;\n\n    public Vector()\n    {\n        Rating = 1M;\n    }\n\n    public Vector(decimal initialRating)\n    {\n        Rating = initialRating;\n    }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529351659,
        "id": "4f3b9096-3052-4db5-802d-be2b258eafba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529351659,
        "parent_id": "db3f35cb-1304-4e1a-89c4-5201506f1759",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To fix this problem, we can simply add the following method inside of the class to set it to 1:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To fix this problem, we can simply add the following method inside of the class to set it to 1:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529351659,
        "id": "c1120979-fed3-4b2d-92a5-59f5eee1225f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550218680000,
        "parent_id": "db3f35cb-1304-4e1a-89c4-5201506f1759",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "[OnDeserializing]\nvoid OnDeserializing(StreamingContext context)\n{\n    Rating = 1M;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "[OnDeserializing]\nvoid OnDeserializing(StreamingContext context)\n{\n    Rating = 1M;\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529351659,
        "id": "b620e50b-c1bf-4f1c-93c5-8b512b42f887",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529351659,
        "parent_id": "db3f35cb-1304-4e1a-89c4-5201506f1759",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Or, if we want to set it to a calculated value, we can wait for it to be finished deserializing and then set it:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Or, if we want to set it to a calculated value, we can wait for it to be finished deserializing and then set it:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529351659,
        "id": "d91745c9-25d2-4353-aaa2-9c7a3e3e83d4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550218680000,
        "parent_id": "db3f35cb-1304-4e1a-89c4-5201506f1759",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "[OnDeserialized]\nvoid OnDeserialized(StreamingContext context)\n{\n    Rating = 1 + ((X+Y+Z)/3);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "[OnDeserialized]\nvoid OnDeserialized(StreamingContext context)\n{\n    Rating = 1 + ((X+Y+Z)/3);\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529351660,
        "id": "b2daa4f5-aab1-4967-91d2-69a9dc1c998a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529351660,
        "parent_id": "db3f35cb-1304-4e1a-89c4-5201506f1759",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Similarly, we can control how things are written out by using "
            ],
            [
              "[OnSerializing]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "[OnSerialized]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Similarly, we can control how things are written out by using "
          },
          {
            "Text": "[OnSerializing]",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "[OnSerialized]",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Controlling serialization behavior with attributes",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}