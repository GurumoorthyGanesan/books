{
  "ID": "c7421204-ef22-4fed-bb05-fa74ae5d8c4c",
  "Root": {
    "alive": true,
    "content": [
      "3c6c76c1-d966-4077-aba7-4cf24a2b8446"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549527725504,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c7421204-ef22-4fed-bb05-fa74ae5d8c4c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550204280000,
    "parent_id": "34613783-b94f-49b9-af21-5aac4eb1cd51",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Basic XML document interaction"
        ]
      ]
    },
    "type": "page",
    "version": 12,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527725500,
        "id": "3c6c76c1-d966-4077-aba7-4cf24a2b8446",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550204280000,
        "parent_id": "c7421204-ef22-4fed-bb05-fa74ae5d8c4c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public static void Main()\n{\n    var xml  = new XmlDocument();\n    var root = xml.CreateElement(\"element\");\n        // Creates an attribute, so the element will now be \"\u003celement attribute='value' /\u003e\"\n        root.SetAttribute(\"attribute\", \"value\");\n\n    // All XML documents must have one, and only one, root element        \n    xml.AppendChild(root);\n\n    // Adding data to an XML document\n    foreach (var dayOfWeek in Enum.GetNames((typeof(DayOfWeek))))\n    {\n        var day = xml.CreateElement(\"dayOfWeek\");\n            day.SetAttribute(\"name\", dayOfWeek);\n\n        // Don't forget to add the new value to the current document!\n        root.AppendChild(day);\n    }\n\n    // Looking for data using XPath; BEWARE, this is case-sensitive\n    var monday = xml.SelectSingleNode(\"//dayOfWeek[@name='Monday']\");\n    if (monday != null)\n    {\n        // Once you got a reference to a particular node, you can delete it\n        // by navigating through its parent node and asking for removal\n        monday.ParentNode.RemoveChild(monday);\n    }\n        \n    // Displays the XML document in the screen; optionally can be saved to a file\n    xml.Save(Console.Out);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "public static void Main()\n{\n    var xml  = new XmlDocument();\n    var root = xml.CreateElement(\"element\");\n        // Creates an attribute, so the element will now be \"\u003celement attribute='value' /\u003e\"\n        root.SetAttribute(\"attribute\", \"value\");\n\n    // All XML documents must have one, and only one, root element        \n    xml.AppendChild(root);\n\n    // Adding data to an XML document\n    foreach (var dayOfWeek in Enum.GetNames((typeof(DayOfWeek))))\n    {\n        var day = xml.CreateElement(\"dayOfWeek\");\n            day.SetAttribute(\"name\", dayOfWeek);\n\n        // Don't forget to add the new value to the current document!\n        root.AppendChild(day);\n    }\n\n    // Looking for data using XPath; BEWARE, this is case-sensitive\n    var monday = xml.SelectSingleNode(\"//dayOfWeek[@name='Monday']\");\n    if (monday != null)\n    {\n        // Once you got a reference to a particular node, you can delete it\n        // by navigating through its parent node and asking for removal\n        monday.ParentNode.RemoveChild(monday);\n    }\n        \n    // Displays the XML document in the screen; optionally can be saved to a file\n    xml.Save(Console.Out);\n}",
        "code_language": "C#"
      }
    ],
    "title": "Basic XML document interaction",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}