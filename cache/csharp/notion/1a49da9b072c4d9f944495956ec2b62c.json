{
  "ID": "1a49da9b-072c-4d9f-9444-95956ec2b62c",
  "Root": {
    "alive": true,
    "content": [
      "97b781ef-3428-4d60-8e2b-2c656dcfb89a",
      "2c3402ed-c7c8-407d-8862-17ac84b1a5b6",
      "14540f37-7c25-4333-9ab5-44b2dfe8552c",
      "e696de1e-0c16-4cc0-b391-55e7b2729332",
      "b121b3b9-9d1b-4fde-85af-a1c51ce6927a",
      "8528ea91-60c6-456c-9222-c904c8e21bf4",
      "9020cd42-c0ee-402d-a516-1305744f3478"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549526378370,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1a49da9b-072c-4d9f-9444-95956ec2b62c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550129520000,
    "parent_id": "67965e1c-96fd-4b27-a090-13babac29616",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using unsafe with arrays"
        ]
      ]
    },
    "type": "page",
    "version": 11,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526378367,
        "id": "97b781ef-3428-4d60-8e2b-2c656dcfb89a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526378367,
        "parent_id": "1a49da9b-072c-4d9f-9444-95956ec2b62c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When accessing arrays with pointers, there are no bounds check and therefore no "
            ],
            [
              "IndexOutOfRangeException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be thrown. This makes the code faster."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When accessing arrays with pointers, there are no bounds check and therefore no "
          },
          {
            "Text": "IndexOutOfRangeException",
            "AttrFlags": 2
          },
          {
            "Text": " will be thrown. This makes the code faster."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526378370,
        "id": "2c3402ed-c7c8-407d-8862-17ac84b1a5b6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526378370,
        "parent_id": "1a49da9b-072c-4d9f-9444-95956ec2b62c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Assigning values to an array with a pointer:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Assigning values to an array with a pointer:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526378370,
        "id": "14540f37-7c25-4333-9ab5-44b2dfe8552c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550129520000,
        "parent_id": "1a49da9b-072c-4d9f-9444-95956ec2b62c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "class Program\n{\n    static void Main(string[] args)\n    {\n        unsafe\n        {\n            int[] array = new int[1000]; \n            fixed (int* ptr = array)\n            {\n                for (int i = 0; i \u003c array.Length; i++)\n                {\n                    *(ptr+i) = i; //assigning the value with the pointer\n                }\n            }\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "class Program\n{\n    static void Main(string[] args)\n    {\n        unsafe\n        {\n            int[] array = new int[1000]; \n            fixed (int* ptr = array)\n            {\n                for (int i = 0; i \u003c array.Length; i++)\n                {\n                    *(ptr+i) = i; //assigning the value with the pointer\n                }\n            }\n        }\n    }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526378370,
        "id": "e696de1e-0c16-4cc0-b391-55e7b2729332",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526378370,
        "parent_id": "1a49da9b-072c-4d9f-9444-95956ec2b62c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "While the safe and normal counterpart would be:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "While the safe and normal counterpart would be:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526378370,
        "id": "b121b3b9-9d1b-4fde-85af-a1c51ce6927a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550129520000,
        "parent_id": "1a49da9b-072c-4d9f-9444-95956ec2b62c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "class Program\n{\n    static void Main(string[] args)\n    {            \n        int[] array = new int[1000]; \n\n        for (int i = 0; i \u003c array.Length; i++)\n        {\n            array[i] = i;\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "class Program\n{\n    static void Main(string[] args)\n    {            \n        int[] array = new int[1000]; \n\n        for (int i = 0; i \u003c array.Length; i++)\n        {\n            array[i] = i;\n        }\n    }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526378370,
        "id": "8528ea91-60c6-456c-9222-c904c8e21bf4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526378370,
        "parent_id": "1a49da9b-072c-4d9f-9444-95956ec2b62c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The unsafe part will generally be faster and the difference in performance can vary depending on the complexity of the elements in the array as well as the logic applied to each one. Even though it may be faster, it should be used with care since it is harder to maintain and easier to break."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The unsafe part will generally be faster and the difference in performance can vary depending on the complexity of the elements in the array as well as the logic applied to each one. Even though it may be faster, it should be used with care since it is harder to maintain and easier to break."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550129520000,
        "id": "9020cd42-c0ee-402d-a516-1305744f3478",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550129520000,
        "parent_id": "1a49da9b-072c-4d9f-9444-95956ec2b62c",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "Using unsafe with arrays",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}