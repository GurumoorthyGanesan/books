{
  "ID": "ca5fecfc-fe76-466a-bb97-87f0e5b58a8c",
  "Root": {
    "alive": true,
    "content": [
      "a07f2098-9f2f-4afb-be70-0fa5c369545f",
      "d177e115-cac1-406d-8e80-1afa1c1b57b3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549530475659,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ca5fecfc-fe76-466a-bb97-87f0e5b58a8c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550224860000,
    "parent_id": "e5e846e8-325c-4436-adf5-67186f1e4a66",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Code to access network shared file"
        ]
      ]
    },
    "type": "page",
    "version": 21,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550224872516,
        "id": "a07f2098-9f2f-4afb-be70-0fa5c369545f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550224860000,
        "parent_id": "ca5fecfc-fe76-466a-bb97-87f0e5b58a8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class NetworkConnection : IDisposable\n  {\n      string _networkName;\n\n      public NetworkConnection(string networkName,\n          NetworkCredential credentials)\n      {\n          _networkName = networkName;\n\n          var netResource = new NetResource()\n          {\n              Scope = ResourceScope.GlobalNetwork,\n              ResourceType = ResourceType.Disk,\n              DisplayType = ResourceDisplaytype.Share,\n              RemoteName = networkName\n          };\n\n          var userName = string.IsNullOrEmpty(credentials.Domain)\n              ? credentials.UserName\n              : string.Format(@\"{0}\\{1}\", credentials.Domain, credentials.UserName);\n\n          var result = WNetAddConnection2(\n              netResource,\n              credentials.Password,\n              userName,\n              0);\n\n          if (result != 0)\n          {\n              throw new Win32Exception(result);\n          }\n      }\n\n  ~NetworkConnection()\n  {\n      Dispose(false);\n  }\n\n  public void Dispose()\n  {\n      Dispose(true);\n      GC.SuppressFinalize(this);\n  }\n\n  protected virtual void Dispose(bool disposing)\n  {\n      WNetCancelConnection2(_networkName, 0, true);\n  }\n\n  [DllImport(\"mpr.dll\")]\n  private static extern int WNetAddConnection2(NetResource netResource,\n      string password, string username, int flags);\n\n  [DllImport(\"mpr.dll\")]\n  private static extern int WNetCancelConnection2(string name, int flags,\n      bool force);\n}\n\n[StructLayout(LayoutKind.Sequential)]\npublic class NetResource\n{\n  public ResourceScope Scope;\n  public ResourceType ResourceType;\n  public ResourceDisplaytype DisplayType;\n  public int Usage;\n  public string LocalName;\n  public string RemoteName;\n  public string Comment;\n  public string Provider;\n}\n\npublic enum ResourceScope : int\n{\n  Connected = 1,\n  GlobalNetwork,\n  Remembered,\n  Recent,\n  Context\n};\n\npublic enum ResourceType : int\n{\n  Any = 0,\n  Disk = 1,\n  Print = 2,\n  Reserved = 8,\n}\n\npublic enum ResourceDisplaytype : int\n{\n  Generic = 0x0,\n  Domain = 0x01,\n  Server = 0x02,\n  Share = 0x03,\n  File = 0x04,\n  Group = 0x05,\n  Network = 0x06,\n  Root = 0x07,\n  Shareadmin = 0x08,\n  Directory = 0x09,\n  Tree = 0x0a,\n  Ndscontainer = 0x0b\n}"
            ]
          ]
        },
        "type": "code",
        "version": 12,
        "code": "public class NetworkConnection : IDisposable\n  {\n      string _networkName;\n\n      public NetworkConnection(string networkName,\n          NetworkCredential credentials)\n      {\n          _networkName = networkName;\n\n          var netResource = new NetResource()\n          {\n              Scope = ResourceScope.GlobalNetwork,\n              ResourceType = ResourceType.Disk,\n              DisplayType = ResourceDisplaytype.Share,\n              RemoteName = networkName\n          };\n\n          var userName = string.IsNullOrEmpty(credentials.Domain)\n              ? credentials.UserName\n              : string.Format(@\"{0}\\{1}\", credentials.Domain, credentials.UserName);\n\n          var result = WNetAddConnection2(\n              netResource,\n              credentials.Password,\n              userName,\n              0);\n\n          if (result != 0)\n          {\n              throw new Win32Exception(result);\n          }\n      }\n\n  ~NetworkConnection()\n  {\n      Dispose(false);\n  }\n\n  public void Dispose()\n  {\n      Dispose(true);\n      GC.SuppressFinalize(this);\n  }\n\n  protected virtual void Dispose(bool disposing)\n  {\n      WNetCancelConnection2(_networkName, 0, true);\n  }\n\n  [DllImport(\"mpr.dll\")]\n  private static extern int WNetAddConnection2(NetResource netResource,\n      string password, string username, int flags);\n\n  [DllImport(\"mpr.dll\")]\n  private static extern int WNetCancelConnection2(string name, int flags,\n      bool force);\n}\n\n[StructLayout(LayoutKind.Sequential)]\npublic class NetResource\n{\n  public ResourceScope Scope;\n  public ResourceType ResourceType;\n  public ResourceDisplaytype DisplayType;\n  public int Usage;\n  public string LocalName;\n  public string RemoteName;\n  public string Comment;\n  public string Provider;\n}\n\npublic enum ResourceScope : int\n{\n  Connected = 1,\n  GlobalNetwork,\n  Remembered,\n  Recent,\n  Context\n};\n\npublic enum ResourceType : int\n{\n  Any = 0,\n  Disk = 1,\n  Print = 2,\n  Reserved = 8,\n}\n\npublic enum ResourceDisplaytype : int\n{\n  Generic = 0x0,\n  Domain = 0x01,\n  Server = 0x02,\n  Share = 0x03,\n  File = 0x04,\n  Group = 0x05,\n  Network = 0x06,\n  Root = 0x07,\n  Shareadmin = 0x08,\n  Directory = 0x09,\n  Tree = 0x0a,\n  Ndscontainer = 0x0b\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550224860000,
        "id": "d177e115-cac1-406d-8e80-1afa1c1b57b3",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550224860000,
        "parent_id": "ca5fecfc-fe76-466a-bb97-87f0e5b58a8c",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "Code to access network shared file",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}