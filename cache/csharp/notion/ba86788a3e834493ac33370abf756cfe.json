{
  "ID": "ba86788a-3e83-4493-ac33-370abf756cfe",
  "Root": {
    "alive": true,
    "content": [
      "5d4255ce-dd40-4ca8-ae72-8eee7f5993b6",
      "522f0a0d-8efc-46ec-8e2f-53e3333fb434",
      "98da8d61-afcb-439a-b8b2-6abfed40f323",
      "82b96d0b-0766-45a8-9e06-53093c15ee89",
      "ec66037b-d59d-48e9-8a51-81bb49600135",
      "b70f2d33-af2d-4abe-a289-582fc5303362",
      "efed6af6-3da2-4fe6-a067-c22fde237b15",
      "1734db1d-cc7a-4d92-a126-a2afc38f0919",
      "276e43aa-7888-4e32-92a2-2cec3fb2fc35",
      "5833b140-ca4c-4397-9529-49399164dcbd",
      "6e05b1fa-679b-4a97-906b-f5a8ab6de2fa",
      "148115e7-0e9a-4339-b9ce-88537a722346",
      "40513ce9-9508-4baf-a73f-efcfae49aa99",
      "c0bc7340-a136-4272-aeff-b92f2b7183dd",
      "5e4d2cac-9c27-4227-ab60-f3c6d52f525b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549526485355,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ba86788a-3e83-4493-ac33-370abf756cfe",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549798680000,
    "parent_id": "a251e313-ae47-4531-b960-5000c0f61e47",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Creates a DynamicAssembly that contains a UnixTimestamp helper method"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526485351,
        "id": "5d4255ce-dd40-4ca8-ae72-8eee7f5993b6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526485351,
        "parent_id": "ba86788a-3e83-4493-ac33-370abf756cfe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example shows the usage of the ILGenerator by generating code that makes use of already existing and new created members as well as basic Exception handling. The following code emits a DynamicAssembly that contains an equivalent to this c# code:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example shows the usage of the ILGenerator by generating code that makes use of already existing and new created members as well as basic Exception handling. The following code emits a DynamicAssembly that contains an equivalent to this c# code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526485354,
        "id": "522f0a0d-8efc-46ec-8e2f-53e3333fb434",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526485354,
        "parent_id": "ba86788a-3e83-4493-ac33-370abf756cfe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public static class UnixTimeHelper\n{\n    private readonly static DateTime EpochTime = new DateTime(1970, 1, 1);\n\n    public static int UnixTimestamp(DateTime input)\n    {\n        int totalSeconds;\n        try\n        {\n            totalSeconds = checked((int)input.Subtract(UnixTimeHelper.EpochTime).TotalSeconds);\n        }\n        catch (OverflowException overflowException)\n        {\n            throw new InvalidOperationException(\"It's to late for an Int32 timestamp.\", overflowException);\n        }\n        return totalSeconds;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public static class UnixTimeHelper\n{\n    private readonly static DateTime EpochTime = new DateTime(1970, 1, 1);\n\n    public static int UnixTimestamp(DateTime input)\n    {\n        int totalSeconds;\n        try\n        {\n            totalSeconds = checked((int)input.Subtract(UnixTimeHelper.EpochTime).TotalSeconds);\n        }\n        catch (OverflowException overflowException)\n        {\n            throw new InvalidOperationException(\"It's to late for an Int32 timestamp.\", overflowException);\n        }\n        return totalSeconds;\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526485354,
        "id": "98da8d61-afcb-439a-b8b2-6abfed40f323",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526485354,
        "parent_id": "ba86788a-3e83-4493-ac33-370abf756cfe",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526485354,
        "id": "82b96d0b-0766-45a8-9e06-53093c15ee89",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526485354,
        "parent_id": "ba86788a-3e83-4493-ac33-370abf756cfe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//Get the required methods\nvar dateTimeCtor = typeof (DateTime)\n.GetConstructor(new\\[\\] {typeof (int), typeof (int), typeof (int)});\nvar dateTimeSubstract = typeof (DateTime)\n.GetMethod(nameof(DateTime.Subtract), new\\[\\] {typeof (DateTime)});\nvar timeSpanSecondsGetter = typeof (TimeSpan)\n.GetProperty(nameof(TimeSpan.TotalSeconds)).GetGetMethod();\nvar invalidOperationCtor = typeof (InvalidOperationException)\n.GetConstructor(new\\[\\] {typeof (string), typeof (Exception)});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//Get the required methods\nvar dateTimeCtor = typeof (DateTime)\n.GetConstructor(new\\[\\] {typeof (int), typeof (int), typeof (int)});\nvar dateTimeSubstract = typeof (DateTime)\n.GetMethod(nameof(DateTime.Subtract), new\\[\\] {typeof (DateTime)});\nvar timeSpanSecondsGetter = typeof (TimeSpan)\n.GetProperty(nameof(TimeSpan.TotalSeconds)).GetGetMethod();\nvar invalidOperationCtor = typeof (InvalidOperationException)\n.GetConstructor(new\\[\\] {typeof (string), typeof (Exception)});",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526485354,
        "id": "ec66037b-d59d-48e9-8a51-81bb49600135",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526485354,
        "parent_id": "ba86788a-3e83-4493-ac33-370abf756cfe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if (dateTimeCtor == null || dateTimeSubstract == null ||\ntimeSpanSecondsGetter == null || invalidOperationCtor == null)\n\\{\nthrow new Exception(“Could not find a required Method, can not create Assembly.”);\n\\}\n\n//Setup the required members\nvar an = new AssemblyName(“UnixTimeAsm”);\nvar dynAsm = AppDomain.CurrentDomain.DefineDynamicAssembly(an, AssemblyBuilderAccess.RunAndSave);\nvar dynMod = dynAsm.DefineDynamicModule(an.Name, an.Name + “.dll”);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if (dateTimeCtor == null || dateTimeSubstract == null ||\ntimeSpanSecondsGetter == null || invalidOperationCtor == null)\n\\{\nthrow new Exception(“Could not find a required Method, can not create Assembly.”);\n\\}\n\n//Setup the required members\nvar an = new AssemblyName(“UnixTimeAsm”);\nvar dynAsm = AppDomain.CurrentDomain.DefineDynamicAssembly(an, AssemblyBuilderAccess.RunAndSave);\nvar dynMod = dynAsm.DefineDynamicModule(an.Name, an.Name + “.dll”);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526485354,
        "id": "b70f2d33-af2d-4abe-a289-582fc5303362",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526485354,
        "parent_id": "ba86788a-3e83-4493-ac33-370abf756cfe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var dynType = dynMod.DefineType(“UnixTimeHelper”,\nTypeAttributes.Abstract | TypeAttributes.Sealed | TypeAttributes.Public);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var dynType = dynMod.DefineType(“UnixTimeHelper”,\nTypeAttributes.Abstract | TypeAttributes.Sealed | TypeAttributes.Public);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526485354,
        "id": "efed6af6-3da2-4fe6-a067-c22fde237b15",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526485354,
        "parent_id": "ba86788a-3e83-4493-ac33-370abf756cfe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var epochTimeField = dynType.DefineField(“EpochStartTime”, typeof (DateTime),\nFieldAttributes.Private | FieldAttributes.Static | FieldAttributes.InitOnly);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var epochTimeField = dynType.DefineField(“EpochStartTime”, typeof (DateTime),\nFieldAttributes.Private | FieldAttributes.Static | FieldAttributes.InitOnly);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526485355,
        "id": "1734db1d-cc7a-4d92-a126-a2afc38f0919",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526485355,
        "parent_id": "ba86788a-3e83-4493-ac33-370abf756cfe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var cctor =\ndynType.DefineConstructor(\nMethodAttributes.Private | MethodAttributes.HideBySig | MethodAttributes.SpecialName |\nMethodAttributes.RTSpecialName | MethodAttributes.Static, CallingConventions.Standard,\nType.EmptyTypes);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var cctor =\ndynType.DefineConstructor(\nMethodAttributes.Private | MethodAttributes.HideBySig | MethodAttributes.SpecialName |\nMethodAttributes.RTSpecialName | MethodAttributes.Static, CallingConventions.Standard,\nType.EmptyTypes);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526485355,
        "id": "276e43aa-7888-4e32-92a2-2cec3fb2fc35",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526485355,
        "parent_id": "ba86788a-3e83-4493-ac33-370abf756cfe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var cctorGen = cctor.GetILGenerator();\ncctorGen.Emit(OpCodes.Ldc\\_I4, 1970); //Load the DateTime constructor arguments onto the stack\ncctorGen.Emit(OpCodes.Ldc\\_I4\\_1);\ncctorGen.Emit(OpCodes.Ldc\\_I4\\_1);\ncctorGen.Emit(OpCodes.Newobj, dateTimeCtor); //Call the constructor\ncctorGen.Emit(OpCodes.Stsfld, epochTimeField); //Store the object in the static field\n\ncctorGen.Emit(OpCodes.Ret);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var cctorGen = cctor.GetILGenerator();\ncctorGen.Emit(OpCodes.Ldc\\_I4, 1970); //Load the DateTime constructor arguments onto the stack\ncctorGen.Emit(OpCodes.Ldc\\_I4\\_1);\ncctorGen.Emit(OpCodes.Ldc\\_I4\\_1);\ncctorGen.Emit(OpCodes.Newobj, dateTimeCtor); //Call the constructor\ncctorGen.Emit(OpCodes.Stsfld, epochTimeField); //Store the object in the static field\n\ncctorGen.Emit(OpCodes.Ret);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526485355,
        "id": "5833b140-ca4c-4397-9529-49399164dcbd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526485355,
        "parent_id": "ba86788a-3e83-4493-ac33-370abf756cfe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var unixTimestampMethod = dynType.DefineMethod(“UnixTimestamp”,\nMethodAttributes.Public | MethodAttributes.HideBySig | MethodAttributes.Static,\nCallingConventions.Standard, typeof (int), new\\[\\] {typeof (DateTime)});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var unixTimestampMethod = dynType.DefineMethod(“UnixTimestamp”,\nMethodAttributes.Public | MethodAttributes.HideBySig | MethodAttributes.Static,\nCallingConventions.Standard, typeof (int), new\\[\\] {typeof (DateTime)});",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526485355,
        "id": "6e05b1fa-679b-4a97-906b-f5a8ab6de2fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526485355,
        "parent_id": "ba86788a-3e83-4493-ac33-370abf756cfe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "unixTimestampMethod.DefineParameter(1, ParameterAttributes.None, \"input\");"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "unixTimestampMethod.DefineParameter(1, ParameterAttributes.None, \"input\");",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526485355,
        "id": "148115e7-0e9a-4339-b9ce-88537a722346",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526485355,
        "parent_id": "ba86788a-3e83-4493-ac33-370abf756cfe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var methodGen = unixTimestampMethod.GetILGenerator();\nmethodGen.DeclareLocal(typeof (TimeSpan));\nmethodGen.DeclareLocal(typeof (int));\nmethodGen.DeclareLocal(typeof (OverflowException));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var methodGen = unixTimestampMethod.GetILGenerator();\nmethodGen.DeclareLocal(typeof (TimeSpan));\nmethodGen.DeclareLocal(typeof (int));\nmethodGen.DeclareLocal(typeof (OverflowException));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526485355,
        "id": "40513ce9-9508-4baf-a73f-efcfae49aa99",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526485355,
        "parent_id": "ba86788a-3e83-4493-ac33-370abf756cfe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "methodGen.BeginExceptionBlock(); //Begin the try block\nmethodGen.Emit(OpCodes.Ldarga\\_S, (byte) 0); //To call a method on a struct we need to load the address of it\nmethodGen.Emit(OpCodes.Ldsfld, epochTimeField);\n//Load the object of the static field we created as argument for the following call\nmethodGen.Emit(OpCodes.Call, dateTimeSubstract); //Call the substract method on the input DateTime\nmethodGen.Emit(OpCodes.Stloc\\_0); //Store the resulting TimeSpan in a local\nmethodGen.Emit(OpCodes.Ldloca\\_S, (byte) 0); //Load the locals address to call a method on it\nmethodGen.Emit(OpCodes.Call, timeSpanSecondsGetter); //Call the TotalSeconds Get method on the TimeSpan\nmethodGen.Emit(OpCodes.Conv\\_Ovf\\_I4); //Convert the result to Int32; throws an exception on overflow\nmethodGen.Emit(OpCodes.Stloc\\_1); //store the result for returning later\n//The leave instruction to jump behind the catch block will be automatically emitted\nmethodGen.BeginCatchBlock(typeof (OverflowException)); //Begin the catch block\n//When we are here, an OverflowException was thrown, that is now on the stack\nmethodGen.Emit(OpCodes.Stloc\\_2); //Store the exception in a local.\nmethodGen.Emit(OpCodes.Ldstr, “It’s to late for an Int32 timestamp.”);\n//Load our error message onto the stack\nmethodGen.Emit(OpCodes.Ldloc\\_2); //Load the exception again\nmethodGen.Emit(OpCodes.Newobj, invalidOperationCtor);\n//Create an InvalidOperationException with our message and inner Exception\nmethodGen.Emit(OpCodes.Throw); //Throw the created exception\nmethodGen.EndExceptionBlock(); //End the catch block\n//When we are here, everything is fine\nmethodGen.Emit(OpCodes.Ldloc\\_1); //Load the result value\nmethodGen.Emit(OpCodes.Ret); //Return it"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "methodGen.BeginExceptionBlock(); //Begin the try block\nmethodGen.Emit(OpCodes.Ldarga\\_S, (byte) 0); //To call a method on a struct we need to load the address of it\nmethodGen.Emit(OpCodes.Ldsfld, epochTimeField);\n//Load the object of the static field we created as argument for the following call\nmethodGen.Emit(OpCodes.Call, dateTimeSubstract); //Call the substract method on the input DateTime\nmethodGen.Emit(OpCodes.Stloc\\_0); //Store the resulting TimeSpan in a local\nmethodGen.Emit(OpCodes.Ldloca\\_S, (byte) 0); //Load the locals address to call a method on it\nmethodGen.Emit(OpCodes.Call, timeSpanSecondsGetter); //Call the TotalSeconds Get method on the TimeSpan\nmethodGen.Emit(OpCodes.Conv\\_Ovf\\_I4); //Convert the result to Int32; throws an exception on overflow\nmethodGen.Emit(OpCodes.Stloc\\_1); //store the result for returning later\n//The leave instruction to jump behind the catch block will be automatically emitted\nmethodGen.BeginCatchBlock(typeof (OverflowException)); //Begin the catch block\n//When we are here, an OverflowException was thrown, that is now on the stack\nmethodGen.Emit(OpCodes.Stloc\\_2); //Store the exception in a local.\nmethodGen.Emit(OpCodes.Ldstr, “It’s to late for an Int32 timestamp.”);\n//Load our error message onto the stack\nmethodGen.Emit(OpCodes.Ldloc\\_2); //Load the exception again\nmethodGen.Emit(OpCodes.Newobj, invalidOperationCtor);\n//Create an InvalidOperationException with our message and inner Exception\nmethodGen.Emit(OpCodes.Throw); //Throw the created exception\nmethodGen.EndExceptionBlock(); //End the catch block\n//When we are here, everything is fine\nmethodGen.Emit(OpCodes.Ldloc\\_1); //Load the result value\nmethodGen.Emit(OpCodes.Ret); //Return it",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526485355,
        "id": "c0bc7340-a136-4272-aeff-b92f2b7183dd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526485355,
        "parent_id": "ba86788a-3e83-4493-ac33-370abf756cfe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "dynType.CreateType();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "dynType.CreateType();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526485355,
        "id": "5e4d2cac-9c27-4227-ab60-f3c6d52f525b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526485355,
        "parent_id": "ba86788a-3e83-4493-ac33-370abf756cfe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "```"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "```"
          }
        ]
      }
    ],
    "title": "Creates a DynamicAssembly that contains a UnixTimestamp helper method",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}