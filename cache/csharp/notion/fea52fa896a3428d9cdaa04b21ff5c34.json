{
  "ID": "fea52fa8-96a3-428d-9cda-a04b21ff5c34",
  "Root": {
    "id": "fea52fa8-96a3-428d-9cda-a04b21ff5c34",
    "alive": true,
    "content": [
      "a958466a-ad4b-4710-a7e7-f9db6568893a",
      "61dd743b-33e6-4371-8a88-84c40074b1e1",
      "5e3590a2-c51f-4687-8e14-7f8e86a9a407",
      "131d010f-e4d9-4d01-a962-ad7d75bbb2c7",
      "fb933055-ce23-4039-86b9-3e60680f059d",
      "f65bb628-4e80-467e-9d93-40f4a9feca5b",
      "7a8dcc54-7672-4e9f-beed-1682015e22e7",
      "b61aa804-bfd5-4ca8-b7f3-c82f5eb2d750",
      "f0118486-8601-4988-959c-9ced496f4bf8",
      "f556017d-165d-4c82-8eae-9dcc10491d25",
      "bad819e7-8b60-4698-8b72-c842f80f4c82"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549529355458,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550218920000,
    "parent_id": "01f594f2-2bf4-456c-bf45-1a8e1e61915e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Serialization surrogates Implementing ISerializationSurrogate"
        ]
      ]
    },
    "type": "page",
    "version": 12,
    "content_resolved": [
      {
        "id": "a958466a-ad4b-4710-a7e7-f9db6568893a",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529355454,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529355454,
        "parent_id": "fea52fa8-96a3-428d-9cda-a04b21ff5c34",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Implements a serialization surrogate selector that allows one object to perform serialization and deserialization of another"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Implements a serialization surrogate selector that allows one object to perform serialization and deserialization of another"
          }
        ]
      },
      {
        "id": "61dd743b-33e6-4371-8a88-84c40074b1e1",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529355457,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529355457,
        "parent_id": "fea52fa8-96a3-428d-9cda-a04b21ff5c34",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As well allows to properly serialize or deserialize a class that is not itself serializable"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As well allows to properly serialize or deserialize a class that is not itself serializable"
          }
        ]
      },
      {
        "id": "5e3590a2-c51f-4687-8e14-7f8e86a9a407",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529355457,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529355457,
        "parent_id": "fea52fa8-96a3-428d-9cda-a04b21ff5c34",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Implement ISerializationSurrogate interface"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Implement ISerializationSurrogate interface"
          }
        ]
      },
      {
        "id": "131d010f-e4d9-4d01-a962-ad7d75bbb2c7",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529355457,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550218860000,
        "parent_id": "fea52fa8-96a3-428d-9cda-a04b21ff5c34",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class ItemSurrogate : ISerializationSurrogate\n{\n    public void GetObjectData(object obj, SerializationInfo info, StreamingContext context)\n    {\n        var item = (Item)obj;\n        info.AddValue(\"_name\", item.Name);\n    }\n\n    public object SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector)\n    {\n        var item = (Item)obj;\n        item.Name = (string)info.GetValue(\"_name\", typeof(string));\n        return item;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public class ItemSurrogate : ISerializationSurrogate\n{\n    public void GetObjectData(object obj, SerializationInfo info, StreamingContext context)\n    {\n        var item = (Item)obj;\n        info.AddValue(\"_name\", item.Name);\n    }\n\n    public object SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector)\n    {\n        var item = (Item)obj;\n        item.Name = (string)info.GetValue(\"_name\", typeof(string));\n        return item;\n    }\n}",
        "code_language": "C#"
      },
      {
        "id": "fb933055-ce23-4039-86b9-3e60680f059d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529355458,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529355458,
        "parent_id": "fea52fa8-96a3-428d-9cda-a04b21ff5c34",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Then you need to let your IFormatter know about the surrogates by defining and initializing a SurrogateSelector and assigning it to your IFormatter"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Then you need to let your IFormatter know about the surrogates by defining and initializing a SurrogateSelector and assigning it to your IFormatter"
          }
        ]
      },
      {
        "id": "f65bb628-4e80-467e-9d93-40f4a9feca5b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529355458,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550218860000,
        "parent_id": "fea52fa8-96a3-428d-9cda-a04b21ff5c34",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "var surrogateSelector = new SurrogateSelector();\nsurrogateSelector.AddSurrogate(typeof(Item), new StreamingContext(StreamingContextStates.All), new ItemSurrogate());    \nvar binaryFormatter = new BinaryFormatter\n{\n    SurrogateSelector = surrogateSelector\n};"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var surrogateSelector = new SurrogateSelector();\nsurrogateSelector.AddSurrogate(typeof(Item), new StreamingContext(StreamingContextStates.All), new ItemSurrogate());    \nvar binaryFormatter = new BinaryFormatter\n{\n    SurrogateSelector = surrogateSelector\n};",
        "code_language": "C#"
      },
      {
        "id": "7a8dcc54-7672-4e9f-beed-1682015e22e7",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529355458,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529355458,
        "parent_id": "fea52fa8-96a3-428d-9cda-a04b21ff5c34",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Even if the class is not marked serializable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Even if the class is not marked serializable."
          }
        ]
      },
      {
        "id": "b61aa804-bfd5-4ca8-b7f3-c82f5eb2d750",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529355458,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550218860000,
        "parent_id": "fea52fa8-96a3-428d-9cda-a04b21ff5c34",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "// this class is not serializable\npublic class Item\n{\n    private string _name;\n\n    public string Name\n    {\n        get { return _name; }\n        set { _name = value; }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "// this class is not serializable\npublic class Item\n{\n    private string _name;\n\n    public string Name\n    {\n        get { return _name; }\n        set { _name = value; }\n    }\n}",
        "code_language": "C#"
      },
      {
        "id": "f0118486-8601-4988-959c-9ced496f4bf8",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529355458,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529355458,
        "parent_id": "fea52fa8-96a3-428d-9cda-a04b21ff5c34",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The complete solution"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The complete solution"
          }
        ]
      },
      {
        "id": "f556017d-165d-4c82-8eae-9dcc10491d25",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529355458,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550218920000,
        "parent_id": "fea52fa8-96a3-428d-9cda-a04b21ff5c34",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "using System;\nusing System.IO;\nusing System.Runtime.Serialization;\nusing System.Runtime.Serialization.Formatters.Binary;\n\nnamespace BinarySerializationExample\n{\n    class Item\n    {\n        private string _name;\n\n        public string Name\n        {\n            get { return _name; }\n            set { _name = value; }\n        }\n    }\n\n    class ItemSurrogate : ISerializationSurrogate\n    {\n        public void GetObjectData(object obj, SerializationInfo info, StreamingContext context)\n        {\n            var item = (Item)obj;\n            info.AddValue(\"_name\", item.Name);\n        }\n\n        public object SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector)\n        {\n            var item = (Item)obj;\n            item.Name = (string)info.GetValue(\"_name\", typeof(string));\n            return item;\n        }\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var item = new Item\n            {\n                Name = \"Orange\"\n            };\n\n            var bytes = SerializeData(item);\n            var deserializedData = (Item)DeserializeData(bytes);\n        }\n\n        private static byte[] SerializeData(object obj)\n        {\n            var surrogateSelector = new SurrogateSelector();\n            surrogateSelector.AddSurrogate(typeof(Item), new StreamingContext(StreamingContextStates.All), new ItemSurrogate());\n\n            var binaryFormatter = new BinaryFormatter\n            {\n                SurrogateSelector = surrogateSelector\n            };\n\n            using (var memoryStream = new MemoryStream())\n            {\n                binaryFormatter.Serialize(memoryStream, obj);\n                return memoryStream.ToArray();\n            }\n        }\n\n        private static object DeserializeData(byte[] bytes)\n        {\n            var surrogateSelector = new SurrogateSelector();\n            surrogateSelector.AddSurrogate(typeof(Item), new StreamingContext(StreamingContextStates.All), new ItemSurrogate());\n\n            var binaryFormatter = new BinaryFormatter\n            {\n                SurrogateSelector = surrogateSelector\n            };\n\n            using (var memoryStream = new MemoryStream(bytes))\n                return binaryFormatter.Deserialize(memoryStream);\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "using System;\nusing System.IO;\nusing System.Runtime.Serialization;\nusing System.Runtime.Serialization.Formatters.Binary;\n\nnamespace BinarySerializationExample\n{\n    class Item\n    {\n        private string _name;\n\n        public string Name\n        {\n            get { return _name; }\n            set { _name = value; }\n        }\n    }\n\n    class ItemSurrogate : ISerializationSurrogate\n    {\n        public void GetObjectData(object obj, SerializationInfo info, StreamingContext context)\n        {\n            var item = (Item)obj;\n            info.AddValue(\"_name\", item.Name);\n        }\n\n        public object SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector)\n        {\n            var item = (Item)obj;\n            item.Name = (string)info.GetValue(\"_name\", typeof(string));\n            return item;\n        }\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var item = new Item\n            {\n                Name = \"Orange\"\n            };\n\n            var bytes = SerializeData(item);\n            var deserializedData = (Item)DeserializeData(bytes);\n        }\n\n        private static byte[] SerializeData(object obj)\n        {\n            var surrogateSelector = new SurrogateSelector();\n            surrogateSelector.AddSurrogate(typeof(Item), new StreamingContext(StreamingContextStates.All), new ItemSurrogate());\n\n            var binaryFormatter = new BinaryFormatter\n            {\n                SurrogateSelector = surrogateSelector\n            };\n\n            using (var memoryStream = new MemoryStream())\n            {\n                binaryFormatter.Serialize(memoryStream, obj);\n                return memoryStream.ToArray();\n            }\n        }\n\n        private static object DeserializeData(byte[] bytes)\n        {\n            var surrogateSelector = new SurrogateSelector();\n            surrogateSelector.AddSurrogate(typeof(Item), new StreamingContext(StreamingContextStates.All), new ItemSurrogate());\n\n            var binaryFormatter = new BinaryFormatter\n            {\n                SurrogateSelector = surrogateSelector\n            };\n\n            using (var memoryStream = new MemoryStream(bytes))\n                return binaryFormatter.Deserialize(memoryStream);\n        }\n    }\n}",
        "code_language": "C#"
      },
      {
        "id": "bad819e7-8b60-4698-8b72-c842f80f4c82",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550218860000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550218860000,
        "parent_id": "fea52fa8-96a3-428d-9cda-a04b21ff5c34",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "Serialization surrogates Implementing ISerializationSurrogate",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}