{
  "ID": "a21c8fa2-5d0a-4fe9-86bf-c0cfff519833",
  "Root": {
    "id": "a21c8fa2-5d0a-4fe9-86bf-c0cfff519833",
    "alive": true,
    "content": [
      "12a31d50-5473-4465-bb6e-b07d8cacdee4",
      "7049899e-a3a0-45c5-b2e4-3516736f1534",
      "1cf3fe0f-52fc-4871-97a3-1ff8f3f3cb17",
      "66496b78-b3e2-483d-bfad-55fa73606705",
      "4b8629c6-58ca-420c-be6c-a9534536b8db",
      "76f277da-2806-4d3e-8dd1-61858a2d6b58",
      "362a2f10-e2f1-4518-aaf4-916ac7ec92a8",
      "0851ec88-5cc9-488b-a95a-c8ef77b2c608",
      "db32ddee-d5da-4ae5-a6f0-4aa9bd112ad9",
      "c6504cae-9898-4e80-9ef8-21989649d774",
      "7937fdcd-1a90-4b5e-9e1e-50547fe25442",
      "24b6b2e0-2358-41a9-95cd-f51d11a04c78",
      "7381ca64-4c63-401c-8e5b-7cfe0718e3bb",
      "815be0b3-5517-4968-939a-3a1d6b4bab3d",
      "38a73bae-587b-477b-9053-27b6cc1fdeea",
      "aafc7c38-94e9-436c-87c9-7f78bfa3d42f",
      "7182968f-560a-499d-89df-debef4c99aca"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525001294,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549940160000,
    "parent_id": "1cef0e56-e2c1-46b9-9c66-002b53d2c779",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "volatile"
        ]
      ]
    },
    "type": "page",
    "version": 17,
    "content_resolved": [
      {
        "id": "12a31d50-5473-4465-bb6e-b07d8cacdee4",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525001284,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525001284,
        "parent_id": "a21c8fa2-5d0a-4fe9-86bf-c0cfff519833",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Adding the "
            ],
            [
              "volatile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword to a field indicates to the compiler that the field’s value may be changed by multiple separate threads. The primary purpose of the "
            ],
            [
              "volatile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword is to prevent compiler optimizations that assume only single-threaded access. Using "
            ],
            [
              "volatile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " ensures that the value of the field is the most recent value that is available, and the value is not subject to the caching that non-volatile values are."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Adding the "
          },
          {
            "Text": "volatile",
            "AttrFlags": 2
          },
          {
            "Text": " keyword to a field indicates to the compiler that the field’s value may be changed by multiple separate threads. The primary purpose of the "
          },
          {
            "Text": "volatile",
            "AttrFlags": 2
          },
          {
            "Text": " keyword is to prevent compiler optimizations that assume only single-threaded access. Using "
          },
          {
            "Text": "volatile",
            "AttrFlags": 2
          },
          {
            "Text": " ensures that the value of the field is the most recent value that is available, and the value is not subject to the caching that non-volatile values are."
          }
        ]
      },
      {
        "id": "7049899e-a3a0-45c5-b2e4-3516736f1534",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525001286,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525001286,
        "parent_id": "a21c8fa2-5d0a-4fe9-86bf-c0cfff519833",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is good practice to mark "
            ],
            [
              "every variable",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " that may be used by multiple threads as "
            ],
            [
              "volatile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to prevent unexpected behavior due to behind-the-scenes optimizations. Consider the following code block:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is good practice to mark "
          },
          {
            "Text": "every variable",
            "AttrFlags": 4
          },
          {
            "Text": " that may be used by multiple threads as "
          },
          {
            "Text": "volatile",
            "AttrFlags": 2
          },
          {
            "Text": " to prevent unexpected behavior due to behind-the-scenes optimizations. Consider the following code block:"
          }
        ]
      },
      {
        "id": "1cf3fe0f-52fc-4871-97a3-1ff8f3f3cb17",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525001286,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940100000,
        "parent_id": "a21c8fa2-5d0a-4fe9-86bf-c0cfff519833",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class Example\n{\n    public int x;\n\n    public void DoStuff()\n    {\n        x = 5;\n\n        // the compiler will optimize this to y = 15\n        var y = x + 10;\n\n        /* the value of x will always be the current value, but y will always be \"15\" */\n        Debug.WriteLine(\"x = \" + x + \", y = \" + y);\n    }    \n}\n"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "public class Example\n{\n    public int x;\n\n    public void DoStuff()\n    {\n        x = 5;\n\n        // the compiler will optimize this to y = 15\n        var y = x + 10;\n\n        /* the value of x will always be the current value, but y will always be \"15\" */\n        Debug.WriteLine(\"x = \" + x + \", y = \" + y);\n    }    \n}\n",
        "code_language": "C#"
      },
      {
        "id": "66496b78-b3e2-483d-bfad-55fa73606705",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525001287,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525001287,
        "parent_id": "a21c8fa2-5d0a-4fe9-86bf-c0cfff519833",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the above code-block, the compiler reads the statements "
            ],
            [
              "x = 5",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "y = x + 10",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and determines that the value of "
            ],
            [
              "y",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will always end up as 15. Thus, it will optimize the last statement as "
            ],
            [
              "y = 15",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". However, the variable "
            ],
            [
              "x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is in fact a "
            ],
            [
              "public",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " field and the value of "
            ],
            [
              "x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " may be modified at runtime through a different thread acting on this field separately. Now consider this modified code-block. Do note that the field "
            ],
            [
              "x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is now declared as "
            ],
            [
              "volatile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the above code-block, the compiler reads the statements "
          },
          {
            "Text": "x = 5",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "y = x + 10",
            "AttrFlags": 2
          },
          {
            "Text": " and determines that the value of "
          },
          {
            "Text": "y",
            "AttrFlags": 2
          },
          {
            "Text": " will always end up as 15. Thus, it will optimize the last statement as "
          },
          {
            "Text": "y = 15",
            "AttrFlags": 2
          },
          {
            "Text": ". However, the variable "
          },
          {
            "Text": "x",
            "AttrFlags": 2
          },
          {
            "Text": " is in fact a "
          },
          {
            "Text": "public",
            "AttrFlags": 2
          },
          {
            "Text": " field and the value of "
          },
          {
            "Text": "x",
            "AttrFlags": 2
          },
          {
            "Text": " may be modified at runtime through a different thread acting on this field separately. Now consider this modified code-block. Do note that the field "
          },
          {
            "Text": "x",
            "AttrFlags": 2
          },
          {
            "Text": " is now declared as "
          },
          {
            "Text": "volatile",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "4b8629c6-58ca-420c-be6c-a9534536b8db",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525001287,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940160000,
        "parent_id": "a21c8fa2-5d0a-4fe9-86bf-c0cfff519833",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class Example\n{\n    public volatile int x;\n\n    public void DoStuff()\n    {\n        x = 5;\n\n        // the compiler no longer optimizes this statement\n        var y = x + 10;\n\n        /* the value of x and y will always be the correct values */\n        Debug.WriteLine(\"x = \" + x + \", y = \" + y);\n    }    \n}\n"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "public class Example\n{\n    public volatile int x;\n\n    public void DoStuff()\n    {\n        x = 5;\n\n        // the compiler no longer optimizes this statement\n        var y = x + 10;\n\n        /* the value of x and y will always be the correct values */\n        Debug.WriteLine(\"x = \" + x + \", y = \" + y);\n    }    \n}\n",
        "code_language": "C#"
      },
      {
        "id": "76f277da-2806-4d3e-8dd1-61858a2d6b58",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525001288,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525001288,
        "parent_id": "a21c8fa2-5d0a-4fe9-86bf-c0cfff519833",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now, the compiler looks for "
            ],
            [
              "read",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " usages of the field "
            ],
            [
              "x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and ensures that the current value of the field is always retrieved. This ensures that even if multiple threads are reading and writing to this field, the current value of "
            ],
            [
              "x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is always retrieved."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now, the compiler looks for "
          },
          {
            "Text": "read",
            "AttrFlags": 4
          },
          {
            "Text": " usages of the field "
          },
          {
            "Text": "x",
            "AttrFlags": 2
          },
          {
            "Text": " and ensures that the current value of the field is always retrieved. This ensures that even if multiple threads are reading and writing to this field, the current value of "
          },
          {
            "Text": "x",
            "AttrFlags": 2
          },
          {
            "Text": " is always retrieved."
          }
        ]
      },
      {
        "id": "362a2f10-e2f1-4518-aaf4-916ac7ec92a8",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525001290,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525001290,
        "parent_id": "a21c8fa2-5d0a-4fe9-86bf-c0cfff519833",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "volatile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can only be used on fields within "
            ],
            [
              "class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "es or "
            ],
            [
              "struct",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s. The following "
            ],
            [
              "is ",
              [
                [
                  "a",
                  "https://msdn.microsoft.com/en-us/library/x13ttww7.aspx"
                ]
              ]
            ],
            [
              "not",
              [
                [
                  "i"
                ],
                [
                  "a",
                  "https://msdn.microsoft.com/en-us/library/x13ttww7.aspx"
                ]
              ]
            ],
            [
              " valid",
              [
                [
                  "a",
                  "https://msdn.microsoft.com/en-us/library/x13ttww7.aspx"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "volatile",
            "AttrFlags": 2
          },
          {
            "Text": " can only be used on fields within "
          },
          {
            "Text": "class",
            "AttrFlags": 2
          },
          {
            "Text": "es or "
          },
          {
            "Text": "struct",
            "AttrFlags": 2
          },
          {
            "Text": "s. The following "
          },
          {
            "Text": "is ",
            "Link": "https://msdn.microsoft.com/en-us/library/x13ttww7.aspx"
          },
          {
            "Text": "not",
            "AttrFlags": 4,
            "Link": "https://msdn.microsoft.com/en-us/library/x13ttww7.aspx"
          },
          {
            "Text": " valid",
            "Link": "https://msdn.microsoft.com/en-us/library/x13ttww7.aspx"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "id": "0851ec88-5cc9-488b-a95a-c8ef77b2c608",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525001290,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940160000,
        "parent_id": "a21c8fa2-5d0a-4fe9-86bf-c0cfff519833",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public void MyMethod()\n{\n    volatile int x;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public void MyMethod()\n{\n    volatile int x;\n}",
        "code_language": "C#"
      },
      {
        "id": "db32ddee-d5da-4ae5-a6f0-4aa9bd112ad9",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525001290,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525001290,
        "parent_id": "a21c8fa2-5d0a-4fe9-86bf-c0cfff519833",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "volatile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can only be applied to fields of following types:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "volatile",
            "AttrFlags": 2
          },
          {
            "Text": " can only be applied to fields of following types:"
          }
        ]
      },
      {
        "id": "c6504cae-9898-4e80-9ef8-21989649d774",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525001291,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525001291,
        "parent_id": "a21c8fa2-5d0a-4fe9-86bf-c0cfff519833",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "reference types or generic type parameters known to be reference types"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "reference types or generic type parameters known to be reference types"
          }
        ]
      },
      {
        "id": "7937fdcd-1a90-4b5e-9e1e-50547fe25442",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525001291,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525001291,
        "parent_id": "a21c8fa2-5d0a-4fe9-86bf-c0cfff519833",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "primitive types such as "
            ],
            [
              "sbyte",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "byte",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "short",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "ushort",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "uint",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and "
            ],
            [
              "bool",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "primitive types such as "
          },
          {
            "Text": "sbyte",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "byte",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "short",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "ushort",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "uint",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": ", and "
          },
          {
            "Text": "bool",
            "AttrFlags": 2
          }
        ]
      },
      {
        "id": "24b6b2e0-2358-41a9-95cd-f51d11a04c78",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525001292,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525001292,
        "parent_id": "a21c8fa2-5d0a-4fe9-86bf-c0cfff519833",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "enums types based on "
            ],
            [
              "byte",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "sbyte",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "short",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "ushort",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "uint",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "enums types based on "
          },
          {
            "Text": "byte",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "sbyte",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "short",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "ushort",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "uint",
            "AttrFlags": 2
          }
        ]
      },
      {
        "id": "7381ca64-4c63-401c-8e5b-7cfe0718e3bb",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525001292,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525001292,
        "parent_id": "a21c8fa2-5d0a-4fe9-86bf-c0cfff519833",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "IntPtr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "UIntPtr",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "IntPtr",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "UIntPtr",
            "AttrFlags": 2
          }
        ]
      },
      {
        "id": "815be0b3-5517-4968-939a-3a1d6b4bab3d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525001292,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525001292,
        "parent_id": "a21c8fa2-5d0a-4fe9-86bf-c0cfff519833",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "id": "38a73bae-587b-477b-9053-27b6cc1fdeea",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525001293,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525001293,
        "parent_id": "a21c8fa2-5d0a-4fe9-86bf-c0cfff519833",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "volatile",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://stackoverflow.com/questions/72275/when-should-the-volatile-keyword-be-used-in-c"
                ]
              ]
            ],
            [
              " modifier is usually used for a field that is accessed by multiple threads without using the lock statement to serialize access."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "volatile",
            "AttrFlags": 2,
            "Link": "http://stackoverflow.com/questions/72275/when-should-the-volatile-keyword-be-used-in-c"
          },
          {
            "Text": " modifier is usually used for a field that is accessed by multiple threads without using the lock statement to serialize access."
          }
        ]
      },
      {
        "id": "aafc7c38-94e9-436c-87c9-7f78bfa3d42f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525001293,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525001293,
        "parent_id": "a21c8fa2-5d0a-4fe9-86bf-c0cfff519833",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "volatile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword can be applied to fields of reference types"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "volatile",
            "AttrFlags": 2
          },
          {
            "Text": " keyword can be applied to fields of reference types"
          }
        ]
      },
      {
        "id": "7182968f-560a-499d-89df-debef4c99aca",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525001294,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525001294,
        "parent_id": "a21c8fa2-5d0a-4fe9-86bf-c0cfff519833",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "volatile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword will not make operating on 64-bit primitives on a 32-bit platform atomic. Interlocked operations such as "
            ],
            [
              "Interlocked.Read",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://msdn.microsoft.com/en-us/library/system.threading.interlocked.read(v=vs.110).aspx"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Interlocked.Exchange",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://msdn.microsoft.com/en-us/library/dk0121zy(v=vs.110).aspx"
                ]
              ]
            ],
            [
              " must still be used for safe multi-threaded access on these platforms."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "volatile",
            "AttrFlags": 2
          },
          {
            "Text": " keyword will not make operating on 64-bit primitives on a 32-bit platform atomic. Interlocked operations such as "
          },
          {
            "Text": "Interlocked.Read",
            "AttrFlags": 2,
            "Link": "https://msdn.microsoft.com/en-us/library/system.threading.interlocked.read(v=vs.110).aspx"
          },
          {
            "Text": " and "
          },
          {
            "Text": "Interlocked.Exchange",
            "AttrFlags": 2,
            "Link": "https://msdn.microsoft.com/en-us/library/dk0121zy(v=vs.110).aspx"
          },
          {
            "Text": " must still be used for safe multi-threaded access on these platforms."
          }
        ]
      }
    ],
    "title": "volatile",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}