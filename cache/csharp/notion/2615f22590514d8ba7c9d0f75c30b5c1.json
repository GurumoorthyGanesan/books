{
  "ID": "2615f225-9051-4d8b-a7c9-d0f75c30b5c1",
  "Root": {
    "alive": true,
    "content": [
      "7fc05168-4097-4b59-84c4-ee487f800cab"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525273753,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "2615f225-9051-4d8b-a7c9-d0f75c30b5c1",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549612620000,
    "parent_id": "3367ad51-2d2f-44db-b5a0-5d201dfd7ee1",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Testing and navigating inheritance"
        ]
      ]
    },
    "type": "page",
    "version": 13,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525273753,
        "id": "7fc05168-4097-4b59-84c4-ee487f800cab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549612620000,
        "parent_id": "2615f225-9051-4d8b-a7c9-d0f75c30b5c1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "interface BaseInterface {}\nclass BaseClass : BaseInterface {}\n\ninterface DerivedInterface {}\nclass DerivedClass : BaseClass, DerivedInterface {}\n\nvar baseInterfaceType = typeof(BaseInterface);\nvar derivedInterfaceType = typeof(DerivedInterface);\nvar baseType = typeof(BaseClass);\nvar derivedType = typeof(DerivedClass);\n\nvar baseInstance = new BaseClass();\nvar derivedInstance = new DerivedClass();  \n\nConsole.WriteLine(derivedInstance is DerivedClass); //True\nConsole.WriteLine(derivedInstance is DerivedInterface); //True\nConsole.WriteLine(derivedInstance is BaseClass); //True\nConsole.WriteLine(derivedInstance is BaseInterface); //True\nConsole.WriteLine(derivedInstance is object); //True\n\nConsole.WriteLine(derivedType.BaseType.Name);  //BaseClass\nConsole.WriteLine(baseType.BaseType.Name);  //Object\nConsole.WriteLine(typeof(object).BaseType);  //null\n\nConsole.WriteLine(baseType.IsInstanceOfType(derivedInstance));  //True\nConsole.WriteLine(derivedType.IsInstanceOfType(baseInstance));  //False"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "interface BaseInterface {}\nclass BaseClass : BaseInterface {}\n\ninterface DerivedInterface {}\nclass DerivedClass : BaseClass, DerivedInterface {}\n\nvar baseInterfaceType = typeof(BaseInterface);\nvar derivedInterfaceType = typeof(DerivedInterface);\nvar baseType = typeof(BaseClass);\nvar derivedType = typeof(DerivedClass);\n\nvar baseInstance = new BaseClass();\nvar derivedInstance = new DerivedClass();  \n\nConsole.WriteLine(derivedInstance is DerivedClass); //True\nConsole.WriteLine(derivedInstance is DerivedInterface); //True\nConsole.WriteLine(derivedInstance is BaseClass); //True\nConsole.WriteLine(derivedInstance is BaseInterface); //True\nConsole.WriteLine(derivedInstance is object); //True\n\nConsole.WriteLine(derivedType.BaseType.Name);  //BaseClass\nConsole.WriteLine(baseType.BaseType.Name);  //Object\nConsole.WriteLine(typeof(object).BaseType);  //null\n\nConsole.WriteLine(baseType.IsInstanceOfType(derivedInstance));  //True\nConsole.WriteLine(derivedType.IsInstanceOfType(baseInstance));  //False",
        "code_language": "C#"
      }
    ],
    "title": "Testing and navigating inheritance",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}