{
  "ID": "d94da571-077a-4251-9f1a-67c1b4b23584",
  "Root": {
    "alive": true,
    "content": [
      "635ae71f-cf11-4aaf-a172-5dce3a7c4df2",
      "24f050b1-a9f0-41bb-98b4-011f579d7c3a",
      "679be48d-6c23-4e2b-ac1a-89300c611bac",
      "7f75840b-bbe9-437e-b635-4d133472aa31",
      "66aeaff6-0635-45ee-a233-8ddbe728d1cf",
      "f7fb496b-b401-4bdf-8506-ae92509bf24f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549527141465,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d94da571-077a-4251-9f1a-67c1b4b23584",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550136660000,
    "parent_id": "9b304904-2267-43ba-a97e-7fc56fa64c3c",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Lazy thread-safe Singleton using LazyT"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527141460,
        "id": "635ae71f-cf11-4aaf-a172-5dce3a7c4df2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527141460,
        "parent_id": "d94da571-077a-4251-9f1a-67c1b4b23584",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              ".Net 4.0 type Lazy guarantees thread-safe object initialization, so this type could be used to make Singletons."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": ".Net 4.0 type Lazy guarantees thread-safe object initialization, so this type could be used to make Singletons."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527141462,
        "id": "24f050b1-a9f0-41bb-98b4-011f579d7c3a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550136660000,
        "parent_id": "d94da571-077a-4251-9f1a-67c1b4b23584",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class LazySingleton\n{\n    private static readonly Lazy\u003cLazySingleton\u003e _instance =\n        new Lazy\u003cLazySingleton\u003e(() =\u003e new LazySingleton());\n \n    public static LazySingleton Instance\n    {\n        get { return _instance.Value; }\n    }\n\n    private LazySingleton() { }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "public class LazySingleton\n{\n    private static readonly Lazy\u003cLazySingleton\u003e _instance =\n        new Lazy\u003cLazySingleton\u003e(() =\u003e new LazySingleton());\n \n    public static LazySingleton Instance\n    {\n        get { return _instance.Value; }\n    }\n\n    private LazySingleton() { }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527141463,
        "id": "679be48d-6c23-4e2b-ac1a-89300c611bac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527141463,
        "parent_id": "d94da571-077a-4251-9f1a-67c1b4b23584",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using "
            ],
            [
              "Lazy\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will make sure that the object is only instantiated when it is used somewhere in the calling code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using "
          },
          {
            "Text": "Lazy\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " will make sure that the object is only instantiated when it is used somewhere in the calling code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527141463,
        "id": "7f75840b-bbe9-437e-b635-4d133472aa31",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527141463,
        "parent_id": "d94da571-077a-4251-9f1a-67c1b4b23584",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A simple usage will be like:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A simple usage will be like:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527141463,
        "id": "66aeaff6-0635-45ee-a233-8ddbe728d1cf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550136660000,
        "parent_id": "d94da571-077a-4251-9f1a-67c1b4b23584",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "using System;\n                    \npublic class Program\n{\n    public static void Main()\n    {\n        var instance = LazySingleton.Instance;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "using System;\n                    \npublic class Program\n{\n    public static void Main()\n    {\n        var instance = LazySingleton.Instance;\n    }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527141465,
        "id": "f7fb496b-b401-4bdf-8506-ae92509bf24f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527141465,
        "parent_id": "d94da571-077a-4251-9f1a-67c1b4b23584",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Live Demo on .NET Fiddle",
              [
                [
                  "a",
                  "https://dotnetfiddle.net/oHVpK3"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Live Demo on .NET Fiddle",
            "Link": "https://dotnetfiddle.net/oHVpK3"
          }
        ]
      }
    ],
    "title": "Lazy thread-safe Singleton using LazyT",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}