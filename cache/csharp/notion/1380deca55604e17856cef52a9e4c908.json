{
  "ID": "1380deca-5560-4e17-856c-ef52a9e4c908",
  "Root": {
    "alive": true,
    "content": [
      "ab7b9839-8dd8-49ac-8a66-85c0d63d2bc4",
      "d7585230-34c5-4454-9ec7-c83703cd2134",
      "f92ee625-3349-45c7-874b-81714e2faeaa",
      "1bf76093-3440-4629-9619-26d6e4b13767",
      "9b26a1a4-eb33-408d-bd37-fe686029eb8e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525929375,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1380deca-5560-4e17-856c-ef52a9e4c908",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549790040000,
    "parent_id": "867a03bf-215a-491d-9311-455a673a589d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using yield to create an IEnumeratorT when implementing IEnumerableT"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525929371,
        "id": "ab7b9839-8dd8-49ac-8a66-85c0d63d2bc4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525929371,
        "parent_id": "1380deca-5560-4e17-856c-ef52a9e4c908",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "IEnumerable\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface has a single method, "
            ],
            [
              "GetEnumerator()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which returns an "
            ],
            [
              "IEnumerator\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "IEnumerable\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " interface has a single method, "
          },
          {
            "Text": "GetEnumerator()",
            "AttrFlags": 2
          },
          {
            "Text": ", which returns an "
          },
          {
            "Text": "IEnumerator\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525929375,
        "id": "d7585230-34c5-4454-9ec7-c83703cd2134",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525929375,
        "parent_id": "1380deca-5560-4e17-856c-ef52a9e4c908",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "While the "
            ],
            [
              "yield",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword can be used to directly create an "
            ],
            [
              "IEnumerable\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", it can "
            ],
            [
              "also",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " be used in exactly the same way to create an "
            ],
            [
              "IEnumerator\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The only thing that changes is the return type of the method."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "While the "
          },
          {
            "Text": "yield",
            "AttrFlags": 2
          },
          {
            "Text": " keyword can be used to directly create an "
          },
          {
            "Text": "IEnumerable\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ", it can "
          },
          {
            "Text": "also",
            "AttrFlags": 4
          },
          {
            "Text": " be used in exactly the same way to create an "
          },
          {
            "Text": "IEnumerator\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ". The only thing that changes is the return type of the method."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525929375,
        "id": "f92ee625-3349-45c7-874b-81714e2faeaa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525929375,
        "parent_id": "1380deca-5560-4e17-856c-ef52a9e4c908",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This can be useful if we want to create our own class which implements "
            ],
            [
              "IEnumerable\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This can be useful if we want to create our own class which implements "
          },
          {
            "Text": "IEnumerable\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525929375,
        "id": "1bf76093-3440-4629-9619-26d6e4b13767",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525929375,
        "parent_id": "1380deca-5560-4e17-856c-ef52a9e4c908",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class PrintingEnumerable\u003cT\u003e : IEnumerable\u003cT\u003e\n{\n    private IEnumerable\u003cT\u003e _wrapped;\n\n    public PrintingEnumerable(IEnumerable\u003cT\u003e wrapped)\n    {\n        _wrapped = wrapped;\n    }\n\n    // This method returns an IEnumerator\u003cT\u003e, rather than an IEnumerable\u003cT\u003e\n    // But the yield syntax and usage is identical.\n    public IEnumerator\u003cT\u003e GetEnumerator()\n    {\n        foreach(var item in _wrapped)\n        {\n            Console.WriteLine(\"Yielding: \" + item);\n            yield return item;\n        }\n    }\n\n    IEnumerator IEnumerable.GetEnumerator()\n    {\n        return GetEnumerator();\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class PrintingEnumerable\u003cT\u003e : IEnumerable\u003cT\u003e\n{\n    private IEnumerable\u003cT\u003e _wrapped;\n\n    public PrintingEnumerable(IEnumerable\u003cT\u003e wrapped)\n    {\n        _wrapped = wrapped;\n    }\n\n    // This method returns an IEnumerator\u003cT\u003e, rather than an IEnumerable\u003cT\u003e\n    // But the yield syntax and usage is identical.\n    public IEnumerator\u003cT\u003e GetEnumerator()\n    {\n        foreach(var item in _wrapped)\n        {\n            Console.WriteLine(\"Yielding: \" + item);\n            yield return item;\n        }\n    }\n\n    IEnumerator IEnumerable.GetEnumerator()\n    {\n        return GetEnumerator();\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525929375,
        "id": "9b26a1a4-eb33-408d-bd37-fe686029eb8e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525929375,
        "parent_id": "1380deca-5560-4e17-856c-ef52a9e4c908",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "(Note that this particular example is just illustrative, and could be more cleanly implemented with a single iterator method returning an "
            ],
            [
              "IEnumerable\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ".)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "(Note that this particular example is just illustrative, and could be more cleanly implemented with a single iterator method returning an "
          },
          {
            "Text": "IEnumerable\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ".)"
          }
        ]
      }
    ],
    "title": "Using yield to create an IEnumeratorT when implementing IEnumerableT",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}