{
  "ID": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
  "Root": {
    "alive": true,
    "content": [
      "d91c7612-30e7-4e98-b0cb-42ad9025d543",
      "0dfe2811-9615-4738-90fa-73b81b53f664",
      "ef6aef9f-745d-4465-84a6-aa60971101fb",
      "43c27bda-f160-4aec-9737-af93f2774b84",
      "904d2e50-02e9-425b-aa16-90eb7babb17e",
      "dfd7a23a-b402-4aa1-b9c1-eed173d667b2",
      "c2e90f3d-4c18-49cc-b8e6-0c25a465624a",
      "b637af84-6457-4cd9-a411-83e87264a56d",
      "8563bac9-6bc3-482a-a5cc-f16ed9f031ba",
      "81bc670b-97c5-4c15-ab3b-bf0fea05bf80",
      "9971ec6f-ab7f-4634-9e1f-7486e0cd3adf",
      "d1d0ce43-5e36-4d96-a3ea-35effb79f420",
      "43e356ce-4fd3-4e7d-96e4-3e9298e8ada0",
      "c6f8ca00-8e10-41e0-a5a4-5eb31d15053f",
      "ab84f121-20b7-48c1-b145-3ee495b5ec6c",
      "7d659b81-a088-4868-9818-663a09908287",
      "b65129e2-b173-4dea-9e70-8bdfa55f0538",
      "06cec78e-6968-4862-b887-038ebb87903e",
      "27caaaaf-9ced-43dd-959e-fd5058eaaa46",
      "f2c7dfae-fc23-45dc-8e3a-f40a7c66226e",
      "fa965bc0-ed1f-4188-9dfa-9445b0ce53fe",
      "df94d24a-b81c-435f-aaf4-77d46b1985c0",
      "f03e0856-e103-4320-b1a5-8960f4f751e1",
      "1a017072-8e2a-4f19-8de0-317c6ea643f6",
      "e53fcecc-7efc-441d-a784-5d398bf5fd7b",
      "57ecbd38-4747-478a-9ec7-7e0ff744156c",
      "792492d9-59e0-46be-abe5-79023586f71c",
      "3bfe83cb-f466-47f4-b835-b91a0edaa8e5",
      "eaea7d74-d411-4781-8b5c-dbe76f2e8f2d",
      "878587f2-e7f2-48a8-9a3b-c7c2ac7e5ef2",
      "4065def3-47b1-4784-a3cc-7b43668e649a",
      "5768650e-eac1-49f2-a90c-6cde6564082d",
      "b88fe6d5-de96-4469-97d6-358bcbf1dc87"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525003363,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549940340000,
    "parent_id": "1cef0e56-e2c1-46b9-9c66-002b53d2c779",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "virtual override new"
        ]
      ]
    },
    "type": "page",
    "version": 25,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003353,
        "id": "d91c7612-30e7-4e98-b0cb-42ad9025d543",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003353,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "virtual and override"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "virtual and override"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003356,
        "id": "0dfe2811-9615-4738-90fa-73b81b53f664",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003356,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "virtual",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword allows a method, property, indexer or event to be overridden by derived classes and present polymorphic behavior. (Members are non-virtual by default in C#)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "virtual",
            "AttrFlags": 2
          },
          {
            "Text": " keyword allows a method, property, indexer or event to be overridden by derived classes and present polymorphic behavior. (Members are non-virtual by default in C#)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003356,
        "id": "ef6aef9f-745d-4465-84a6-aa60971101fb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940160000,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class BaseClass\n{\n    public virtual void Foo()\n    {\n        Console.WriteLine(\"Foo from BaseClass\");\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public class BaseClass\n{\n    public virtual void Foo()\n    {\n        Console.WriteLine(\"Foo from BaseClass\");\n    }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003357,
        "id": "43c27bda-f160-4aec-9737-af93f2774b84",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003357,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In order to override a member, the "
            ],
            [
              "override",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword is used in the derived classes. (Note the signature of the members must be identical)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In order to override a member, the "
          },
          {
            "Text": "override",
            "AttrFlags": 2
          },
          {
            "Text": " keyword is used in the derived classes. (Note the signature of the members must be identical)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003357,
        "id": "904d2e50-02e9-425b-aa16-90eb7babb17e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940220000,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class DerivedClass: BaseClass\n{\n    public override void Foo()\n    {\n        Console.WriteLine(\"Foo from DerivedClass\");\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public class DerivedClass: BaseClass\n{\n    public override void Foo()\n    {\n        Console.WriteLine(\"Foo from DerivedClass\");\n    }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003357,
        "id": "dfd7a23a-b402-4aa1-b9c1-eed173d667b2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003357,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The polymorphic behavior of virtual members means that when invoked, the actual member being executed is determined at runtime instead of at compile time. The overriding member in the most derived class the particular object is an instance of will be the one executed."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The polymorphic behavior of virtual members means that when invoked, the actual member being executed is determined at runtime instead of at compile time. The overriding member in the most derived class the particular object is an instance of will be the one executed."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003357,
        "id": "c2e90f3d-4c18-49cc-b8e6-0c25a465624a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003357,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In short, object can be declared of type "
            ],
            [
              "BaseClass",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " at compile time but if at runtime it is an instance of "
            ],
            [
              "DerivedClass",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " then the overridden member will be executed:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In short, object can be declared of type "
          },
          {
            "Text": "BaseClass",
            "AttrFlags": 2
          },
          {
            "Text": " at compile time but if at runtime it is an instance of "
          },
          {
            "Text": "DerivedClass",
            "AttrFlags": 2
          },
          {
            "Text": " then the overridden member will be executed:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003357,
        "id": "b637af84-6457-4cd9-a411-83e87264a56d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940220000,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "BaseClass obj1 = new BaseClass();\nobj1.Foo(); //Outputs \"Foo from BaseClass\"\n\nobj1 = new DerivedClass();\nobj1.Foo(); //Outputs \"Foo from DerivedClass\""
            ]
          ]
        },
        "type": "code",
        "version": 10,
        "code": "BaseClass obj1 = new BaseClass();\nobj1.Foo(); //Outputs \"Foo from BaseClass\"\n\nobj1 = new DerivedClass();\nobj1.Foo(); //Outputs \"Foo from DerivedClass\"",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003357,
        "id": "8563bac9-6bc3-482a-a5cc-f16ed9f031ba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003357,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Overriding a method is optional:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Overriding a method is optional:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003357,
        "id": "81bc670b-97c5-4c15-ab3b-bf0fea05bf80",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940220000,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class SecondDerivedClass: DerivedClass {}\n\nvar obj1 = new SecondDerivedClass();\nobj1.Foo(); //Outputs \"Foo from DerivedClass\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public class SecondDerivedClass: DerivedClass {}\n\nvar obj1 = new SecondDerivedClass();\nobj1.Foo(); //Outputs \"Foo from DerivedClass\"",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003357,
        "id": "9971ec6f-ab7f-4634-9e1f-7486e0cd3adf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003357,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "new"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "new"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003358,
        "id": "d1d0ce43-5e36-4d96-a3ea-35effb79f420",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003358,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Since only members defined as "
            ],
            [
              "virtual",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are overridable and polymorphic, a derived class redefining a non virtual member might lead to unexpected results."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Since only members defined as "
          },
          {
            "Text": "virtual",
            "AttrFlags": 2
          },
          {
            "Text": " are overridable and polymorphic, a derived class redefining a non virtual member might lead to unexpected results."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003358,
        "id": "43e356ce-4fd3-4e7d-96e4-3e9298e8ada0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940280000,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class BaseClass\n{\n    public void Foo()\n    {\n        Console.WriteLine(\"Foo from BaseClass\");\n    }\n}\n\npublic class DerivedClass: BaseClass\n{\n    public void Foo()\n    {\n        Console.WriteLine(\"Foo from DerivedClass\");\n    }\n}\n\nBaseClass obj1 = new BaseClass();\nobj1.Foo(); //Outputs \"Foo from BaseClass\"\n\nobj1 = new DerivedClass();\nobj1.Foo(); //Outputs \"Foo from BaseClass\" too!\n"
            ]
          ]
        },
        "type": "code",
        "version": 9,
        "code": "public class BaseClass\n{\n    public void Foo()\n    {\n        Console.WriteLine(\"Foo from BaseClass\");\n    }\n}\n\npublic class DerivedClass: BaseClass\n{\n    public void Foo()\n    {\n        Console.WriteLine(\"Foo from DerivedClass\");\n    }\n}\n\nBaseClass obj1 = new BaseClass();\nobj1.Foo(); //Outputs \"Foo from BaseClass\"\n\nobj1 = new DerivedClass();\nobj1.Foo(); //Outputs \"Foo from BaseClass\" too!\n",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003358,
        "id": "c6f8ca00-8e10-41e0-a5a4-5eb31d15053f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003358,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When this happens, the member executed is always determined at compile time based on the type of the object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When this happens, the member executed is always determined at compile time based on the type of the object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003359,
        "id": "ab84f121-20b7-48c1-b145-3ee495b5ec6c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003359,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the object is declared of type "
            ],
            [
              "BaseClass",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (even if at runtime is of a derived class) then the method of "
            ],
            [
              "BaseClass",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is executed"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the object is declared of type "
          },
          {
            "Text": "BaseClass",
            "AttrFlags": 2
          },
          {
            "Text": " (even if at runtime is of a derived class) then the method of "
          },
          {
            "Text": "BaseClass",
            "AttrFlags": 2
          },
          {
            "Text": " is executed"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003359,
        "id": "7d659b81-a088-4868-9818-663a09908287",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003359,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the object is declared of type "
            ],
            [
              "DerivedClass",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " then the method of "
            ],
            [
              "DerivedClass",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is executed."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the object is declared of type "
          },
          {
            "Text": "DerivedClass",
            "AttrFlags": 2
          },
          {
            "Text": " then the method of "
          },
          {
            "Text": "DerivedClass",
            "AttrFlags": 2
          },
          {
            "Text": " is executed."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003359,
        "id": "b65129e2-b173-4dea-9e70-8bdfa55f0538",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003359,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is usually an accident (When a member is added to the base type after an identical one was added to the derived type) and a compiler warning "
            ],
            [
              "CS0108",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " is generated in those scenarios."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is usually an accident (When a member is added to the base type after an identical one was added to the derived type) and a compiler warning "
          },
          {
            "Text": "CS0108",
            "AttrFlags": 1
          },
          {
            "Text": " is generated in those scenarios."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003359,
        "id": "06cec78e-6968-4862-b887-038ebb87903e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003359,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If it was intentional, then the "
            ],
            [
              "new",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword is used to suppress the compiler warning (And inform other developers of your intentions!). the behavior remains the same, the "
            ],
            [
              "new",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword just suppresses the compiler warning."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If it was intentional, then the "
          },
          {
            "Text": "new",
            "AttrFlags": 2
          },
          {
            "Text": " keyword is used to suppress the compiler warning (And inform other developers of your intentions!). the behavior remains the same, the "
          },
          {
            "Text": "new",
            "AttrFlags": 2
          },
          {
            "Text": " keyword just suppresses the compiler warning."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003359,
        "id": "27caaaaf-9ced-43dd-959e-fd5058eaaa46",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940280000,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class BaseClass\n{\n    public void Foo()\n    {\n        Console.WriteLine(\"Foo from BaseClass\");\n    }\n}\n\npublic class DerivedClass: BaseClass\n{\n    public new void Foo()\n    {\n        Console.WriteLine(\"Foo from DerivedClass\");\n    }\n}\n\nBaseClass obj1 = new BaseClass();\nobj1.Foo(); //Outputs \"Foo from BaseClass\"\n\nobj1 = new DerivedClass();\nobj1.Foo(); //Outputs \"Foo from BaseClass\" too!\n"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "public class BaseClass\n{\n    public void Foo()\n    {\n        Console.WriteLine(\"Foo from BaseClass\");\n    }\n}\n\npublic class DerivedClass: BaseClass\n{\n    public new void Foo()\n    {\n        Console.WriteLine(\"Foo from DerivedClass\");\n    }\n}\n\nBaseClass obj1 = new BaseClass();\nobj1.Foo(); //Outputs \"Foo from BaseClass\"\n\nobj1 = new DerivedClass();\nobj1.Foo(); //Outputs \"Foo from BaseClass\" too!\n",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003360,
        "id": "f2c7dfae-fc23-45dc-8e3a-f40a7c66226e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003360,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The usage of override is "
            ],
            [
              "not",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " optional"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "The usage of override is "
          },
          {
            "Text": "not",
            "AttrFlags": 4
          },
          {
            "Text": " optional"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003360,
        "id": "fa965bc0-ed1f-4188-9dfa-9445b0ce53fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003360,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Unlike in C++, the usage of the "
            ],
            [
              "override",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword is "
            ],
            [
              "not",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " optional:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Unlike in C++, the usage of the "
          },
          {
            "Text": "override",
            "AttrFlags": 2
          },
          {
            "Text": " keyword is "
          },
          {
            "Text": "not",
            "AttrFlags": 4
          },
          {
            "Text": " optional:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003360,
        "id": "df94d24a-b81c-435f-aaf4-77d46b1985c0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940280000,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class A\n{\n    public virtual void Foo()\n    {\n    }\n}\n\npublic class B : A\n{\n    public void Foo() // Generates CS0108\n    {\n    }\n}\n"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "public class A\n{\n    public virtual void Foo()\n    {\n    }\n}\n\npublic class B : A\n{\n    public void Foo() // Generates CS0108\n    {\n    }\n}\n",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003361,
        "id": "f03e0856-e103-4320-b1a5-8960f4f751e1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003361,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The above example also causes warning "
            ],
            [
              "CS0108",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", because "
            ],
            [
              "B.Foo()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not automatically overriding "
            ],
            [
              "A.Foo()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Add "
            ],
            [
              "override",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when the intention is to override the base class and cause polymorphic behavior, add "
            ],
            [
              "new",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when you want non-polymorphic behavior and resolve the call using the static type. The latter should be used with caution, as it may cause severe confusion."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The above example also causes warning "
          },
          {
            "Text": "CS0108",
            "AttrFlags": 1
          },
          {
            "Text": ", because "
          },
          {
            "Text": "B.Foo()",
            "AttrFlags": 2
          },
          {
            "Text": " is not automatically overriding "
          },
          {
            "Text": "A.Foo()",
            "AttrFlags": 2
          },
          {
            "Text": ". Add "
          },
          {
            "Text": "override",
            "AttrFlags": 2
          },
          {
            "Text": " when the intention is to override the base class and cause polymorphic behavior, add "
          },
          {
            "Text": "new",
            "AttrFlags": 2
          },
          {
            "Text": " when you want non-polymorphic behavior and resolve the call using the static type. The latter should be used with caution, as it may cause severe confusion."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003361,
        "id": "1a017072-8e2a-4f19-8de0-317c6ea643f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003361,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following code even results in an error:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following code even results in an error:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003361,
        "id": "e53fcecc-7efc-441d-a784-5d398bf5fd7b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940340000,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class A\n{\n    public void Foo()\n    {\n    }\n}\n\npublic class B : A\n{\n    public override void Foo() // Error: Nothing to override\n    {\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 10,
        "code": "public class A\n{\n    public void Foo()\n    {\n    }\n}\n\npublic class B : A\n{\n    public override void Foo() // Error: Nothing to override\n    {\n    }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003361,
        "id": "57ecbd38-4747-478a-9ec7-7e0ff744156c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003361,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Derived classes can introduce polymorphism"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Derived classes can introduce polymorphism"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003361,
        "id": "792492d9-59e0-46be-abe5-79023586f71c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003361,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following code is perfectly valid (although rare):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following code is perfectly valid (although rare):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003361,
        "id": "3bfe83cb-f466-47f4-b835-b91a0edaa8e5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940340000,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class A\n{\n    public void Foo()\n    {\n        Console.WriteLine(\"A\");\n    }\n}\n\npublic class B : A\n{\n    public new virtual void Foo() \n    {\n        Console.WriteLine(\"B\");\n    }\n}\n"
            ]
          ]
        },
        "type": "code",
        "version": 10,
        "code": "public class A\n{\n    public void Foo()\n    {\n        Console.WriteLine(\"A\");\n    }\n}\n\npublic class B : A\n{\n    public new virtual void Foo() \n    {\n        Console.WriteLine(\"B\");\n    }\n}\n",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003362,
        "id": "eaea7d74-d411-4781-8b5c-dbe76f2e8f2d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003362,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now all objects with a static reference of B (and its derivatives) use polymorphism to resolve "
            ],
            [
              "Foo()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", while references of A use "
            ],
            [
              "A.Foo()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now all objects with a static reference of B (and its derivatives) use polymorphism to resolve "
          },
          {
            "Text": "Foo()",
            "AttrFlags": 2
          },
          {
            "Text": ", while references of A use "
          },
          {
            "Text": "A.Foo()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003362,
        "id": "878587f2-e7f2-48a8-9a3b-c7c2ac7e5ef2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940340000,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "A a = new A();\na.Foo(); // Prints \"A\";\na = new B();\na.Foo(); // Prints \"A\";\nB b = new B();\nb.Foo(); // Prints \"B\";"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "A a = new A();\na.Foo(); // Prints \"A\";\na = new B();\na.Foo(); // Prints \"A\";\nB b = new B();\nb.Foo(); // Prints \"B\";",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003362,
        "id": "4065def3-47b1-4784-a3cc-7b43668e649a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003362,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Virtual methods cannot be private"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Virtual methods cannot be private"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525003362,
        "id": "5768650e-eac1-49f2-a90c-6cde6564082d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525003362,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The C# compiler is strict in preventing senseless constructs. Methods marked as "
            ],
            [
              "virtual",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " cannot be private. Because a private method cannot be seen from a derived type, it couldn’t be overwritten either. This fails to compile:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The C# compiler is strict in preventing senseless constructs. Methods marked as "
          },
          {
            "Text": "virtual",
            "AttrFlags": 2
          },
          {
            "Text": " cannot be private. Because a private method cannot be seen from a derived type, it couldn’t be overwritten either. This fails to compile:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549940382828,
        "id": "b88fe6d5-de96-4469-97d6-358bcbf1dc87",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940340000,
        "parent_id": "32aaceed-d7f0-48b3-b985-69a82cf279b8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class A\n{\n    private virtual void Foo() // Error: virtual methods cannot be private\n    {\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 10,
        "code": "public class A\n{\n    private virtual void Foo() // Error: virtual methods cannot be private\n    {\n    }\n}",
        "code_language": "C#"
      }
    ],
    "title": "virtual override new",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}