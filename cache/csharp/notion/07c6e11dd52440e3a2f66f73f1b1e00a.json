{
  "ID": "07c6e11d-d524-40e3-a2f6-6f73f1b1e00a",
  "Root": {
    "id": "07c6e11d-d524-40e3-a2f6-6f73f1b1e00a",
    "alive": true,
    "content": [
      "77759feb-1fb4-4d97-9828-32c5c04887f2",
      "e804f942-09ce-4fde-9ea1-f9d6f0b45aab",
      "0401cd23-b992-45c2-9ba9-613d380a506c",
      "94a99490-dcda-494a-8a67-45eca5286299",
      "6f57b228-f9fb-4be2-bf6a-023bc8d117f8",
      "d8ff5c1e-adc8-48cc-84fe-c5fe0570f0db",
      "f225d684-ae0c-43fe-a104-af9a6657bfbf",
      "9c5aeb1c-6f08-43e3-b544-0e2e3aa1bca1",
      "fb936117-43dd-4174-85e8-81c13af0e945"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549528960337,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549609860000,
    "parent_id": "9340bd1d-9542-456c-9914-451d6bc67b1d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Writing a good GetHashCode override"
        ]
      ]
    },
    "type": "page",
    "version": 14,
    "content_resolved": [
      {
        "id": "77759feb-1fb4-4d97-9828-32c5c04887f2",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528960331,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528960331,
        "parent_id": "07c6e11d-d524-40e3-a2f6-6f73f1b1e00a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "GetHashCode",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has major performance effects on Dictionary\u003c\u003e and HashTable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "GetHashCode",
            "AttrFlags": 2
          },
          {
            "Text": " has major performance effects on Dictionary\u003c\u003e and HashTable."
          }
        ]
      },
      {
        "id": "e804f942-09ce-4fde-9ea1-f9d6f0b45aab",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528960334,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528960334,
        "parent_id": "07c6e11d-d524-40e3-a2f6-6f73f1b1e00a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Good "
            ],
            [
              "GetHashCode",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " Methods"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Good "
          },
          {
            "Text": "GetHashCode",
            "AttrFlags": 2
          },
          {
            "Text": " Methods"
          }
        ]
      },
      {
        "id": "0401cd23-b992-45c2-9ba9-613d380a506c",
        "alive": true,
        "content": [
          "dcf80a6f-c55c-44f1-b66b-8c97d209ccaa",
          "da22a196-8aa5-4b4c-ab33-793f606a8299"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528960335,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549609860000,
        "parent_id": "07c6e11d-d524-40e3-a2f6-6f73f1b1e00a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "should have an even distribution"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 4,
        "content_resolved": [
          {
            "id": "dcf80a6f-c55c-44f1-b66b-8c97d209ccaa",
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1549528960335,
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1549609860000,
            "parent_id": "0401cd23-b992-45c2-9ba9-613d380a506c",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "every integer should have a roughly equal chance of returning for a random instance"
                ]
              ]
            },
            "type": "bulleted_list",
            "version": 4,
            "inline_content": [
              {
                "Text": "every integer should have a roughly equal chance of returning for a random instance"
              }
            ]
          },
          {
            "id": "da22a196-8aa5-4b4c-ab33-793f606a8299",
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1549528960335,
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1549609860000,
            "parent_id": "0401cd23-b992-45c2-9ba9-613d380a506c",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "if your method returns the same integer (e.g. the constant ‘999’) for each instance, you’ll have bad performance"
                ]
              ]
            },
            "type": "bulleted_list",
            "version": 4,
            "inline_content": [
              {
                "Text": "if your method returns the same integer (e.g. the constant ‘999’) for each instance, you’ll have bad performance"
              }
            ]
          }
        ],
        "inline_content": [
          {
            "Text": "should have an even distribution"
          }
        ]
      },
      {
        "id": "94a99490-dcda-494a-8a67-45eca5286299",
        "alive": true,
        "content": [
          "83b0575b-4987-4fcb-8a9d-f4d1196f0447",
          "9f824174-b299-40b4-bc4d-9f7e600d974d"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528960335,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549609860000,
        "parent_id": "07c6e11d-d524-40e3-a2f6-6f73f1b1e00a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "should be quick"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 4,
        "content_resolved": [
          {
            "id": "83b0575b-4987-4fcb-8a9d-f4d1196f0447",
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1549528960336,
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1549609860000,
            "parent_id": "94a99490-dcda-494a-8a67-45eca5286299",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "These are NOT cryptographic hashes, where slowness is a feature"
                ]
              ]
            },
            "type": "bulleted_list",
            "version": 4,
            "inline_content": [
              {
                "Text": "These are NOT cryptographic hashes, where slowness is a feature"
              }
            ]
          },
          {
            "id": "9f824174-b299-40b4-bc4d-9f7e600d974d",
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1549528960336,
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1549609860000,
            "parent_id": "94a99490-dcda-494a-8a67-45eca5286299",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "the slower your hash function, the slower your dictionary"
                ]
              ]
            },
            "type": "bulleted_list",
            "version": 4,
            "inline_content": [
              {
                "Text": "the slower your hash function, the slower your dictionary"
              }
            ]
          }
        ],
        "inline_content": [
          {
            "Text": "should be quick"
          }
        ]
      },
      {
        "id": "6f57b228-f9fb-4be2-bf6a-023bc8d117f8",
        "alive": true,
        "content": [
          "0be2e024-2c20-434e-bad4-ca1ce3df92a9"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528960336,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549609860000,
        "parent_id": "07c6e11d-d524-40e3-a2f6-6f73f1b1e00a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "must return the same HashCode on two instances that "
            ],
            [
              "Equals",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " evaluates to true"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 3,
        "content_resolved": [
          {
            "id": "0be2e024-2c20-434e-bad4-ca1ce3df92a9",
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1549528960336,
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1549609860000,
            "parent_id": "6f57b228-f9fb-4be2-bf6a-023bc8d117f8",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "if they do not (e.g. because "
                ],
                [
                  "GetHashCode",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  " returns a random number), items may not be found in a "
                ],
                [
                  "List",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  ", "
                ],
                [
                  "Dictionary",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  ", or similar."
                ]
              ]
            },
            "type": "bulleted_list",
            "version": 4,
            "inline_content": [
              {
                "Text": "if they do not (e.g. because "
              },
              {
                "Text": "GetHashCode",
                "AttrFlags": 2
              },
              {
                "Text": " returns a random number), items may not be found in a "
              },
              {
                "Text": "List",
                "AttrFlags": 2
              },
              {
                "Text": ", "
              },
              {
                "Text": "Dictionary",
                "AttrFlags": 2
              },
              {
                "Text": ", or similar."
              }
            ]
          }
        ],
        "inline_content": [
          {
            "Text": "must return the same HashCode on two instances that "
          },
          {
            "Text": "Equals",
            "AttrFlags": 2
          },
          {
            "Text": " evaluates to true"
          }
        ]
      },
      {
        "id": "d8ff5c1e-adc8-48cc-84fe-c5fe0570f0db",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528960336,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528960336,
        "parent_id": "07c6e11d-d524-40e3-a2f6-6f73f1b1e00a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A good method to implement "
            ],
            [
              "GetHashCode",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is to use one prime number as a starting value, and add the hashcodes of the fields of the type multiplied by other prime numbers to that:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A good method to implement "
          },
          {
            "Text": "GetHashCode",
            "AttrFlags": 2
          },
          {
            "Text": " is to use one prime number as a starting value, and add the hashcodes of the fields of the type multiplied by other prime numbers to that:"
          }
        ]
      },
      {
        "id": "f225d684-ae0c-43fe-a104-af9a6657bfbf",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528960337,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549609860000,
        "parent_id": "07c6e11d-d524-40e3-a2f6-6f73f1b1e00a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public override int GetHashCode()\n{\n    unchecked // Overflow is fine, just wrap\n    {\n        int hash = 3049; // Start value (prime number).\n\n\t\t\t\t// Suitable nullity checks etc, of course :)\n        hash = hash * 5039 + field1.GetHashCode();\n        hash = hash * 883 + field2.GetHashCode();\n        hash = hash * 9719 + field3.GetHashCode();\n        return hash;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 10,
        "code": "public override int GetHashCode()\n{\n    unchecked // Overflow is fine, just wrap\n    {\n        int hash = 3049; // Start value (prime number).\n\n\t\t\t\t// Suitable nullity checks etc, of course :)\n        hash = hash * 5039 + field1.GetHashCode();\n        hash = hash * 883 + field2.GetHashCode();\n        hash = hash * 9719 + field3.GetHashCode();\n        return hash;\n    }\n}",
        "code_language": "C#"
      },
      {
        "id": "9c5aeb1c-6f08-43e3-b544-0e2e3aa1bca1",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528960337,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528960337,
        "parent_id": "07c6e11d-d524-40e3-a2f6-6f73f1b1e00a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Only the fields which are used in the "
            ],
            [
              "Equals",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "-method should be used for the hash function."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Only the fields which are used in the "
          },
          {
            "Text": "Equals",
            "AttrFlags": 2
          },
          {
            "Text": "-method should be used for the hash function."
          }
        ]
      },
      {
        "id": "fb936117-43dd-4174-85e8-81c13af0e945",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528960337,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528960337,
        "parent_id": "07c6e11d-d524-40e3-a2f6-6f73f1b1e00a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you have a need to treat the same type in different ways for Dictionary/HashTables, you can use IEqualityComparer."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you have a need to treat the same type in different ways for Dictionary/HashTables, you can use IEqualityComparer."
          }
        ]
      }
    ],
    "title": "Writing a good GetHashCode override",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}