{
  "ID": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
  "Root": {
    "id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
    "alive": true,
    "content": [
      "3bd86c6c-052c-4afe-8446-e41bba98ec6c",
      "77381acd-0a83-4a0f-824c-9673f871ebb2",
      "a7c17ba0-0735-4b0c-bdbb-a325e4a0e271",
      "eea75b90-04ee-440d-896b-5ba6bc827a69",
      "03809e7d-ee9f-4495-9454-d0b55ef6a02c",
      "4d4b3fcd-15b7-4b79-8581-91f713aba3b5",
      "12ba38e9-d107-416d-a707-ccdadc791393",
      "7f9d67fc-6b88-4141-8a8e-cf039f8e69df",
      "29635616-ff1f-4126-ad85-c8f4c1e3b27c",
      "4f01dc40-ec01-4576-b67b-e8743d299c6e",
      "50bb6fbf-4f8f-4d88-9444-a952f62dad1b",
      "0c473631-ca8a-4ecd-a22c-5b7d1bea3c7d",
      "a070a880-4953-4ca9-aa2a-3bfbe8a939eb",
      "503bba00-8126-4897-ab0c-f2c9a5113bd4",
      "77ef2c92-bff6-4ffc-b978-59b16308d140",
      "c7466189-bc7d-470c-a688-f6ffd8616b54",
      "872841fd-a7b4-4b36-ad65-928bfa696484",
      "d55ab3de-bd12-402b-a155-f44c3da57e10",
      "4d5c1b91-c213-4470-b7c2-a08a7d0f2e4b",
      "67e58e67-140a-4f4b-927f-6ae6d5e18456"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525478320,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550046660000,
    "parent_id": "9ff3cc78-9f6a-4238-a0a8-e9d9c0209cf7",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Exception Anti-patterns"
        ]
      ]
    },
    "type": "page",
    "version": 13,
    "content_resolved": [
      {
        "id": "3bd86c6c-052c-4afe-8446-e41bba98ec6c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525478302,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525478302,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Swallowing Exceptions"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Swallowing Exceptions"
          }
        ]
      },
      {
        "id": "77381acd-0a83-4a0f-824c-9673f871ebb2",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525478304,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525478304,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One should always re-throw exception in the following way:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One should always re-throw exception in the following way:"
          }
        ]
      },
      {
        "id": "a7c17ba0-0735-4b0c-bdbb-a325e4a0e271",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525478305,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550046660000,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "try\n{\n    ...\n}\ncatch (Exception ex)\n{\n    ...\n    throw;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "try\n{\n    ...\n}\ncatch (Exception ex)\n{\n    ...\n    throw;\n}",
        "code_language": "C#"
      },
      {
        "id": "eea75b90-04ee-440d-896b-5ba6bc827a69",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525478305,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525478305,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Re-throwing an exception like below will obfuscate the original exception and will lose the original stack trace. One should never do this! The stack trace prior to the catch and rethrow will be lost."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Re-throwing an exception like below will obfuscate the original exception and will lose the original stack trace. One should never do this! The stack trace prior to the catch and rethrow will be lost."
          }
        ]
      },
      {
        "id": "03809e7d-ee9f-4495-9454-d0b55ef6a02c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525478305,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611720000,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "try\n{\n    ...\n}\ncatch (Exception ex)\n{\n    ...\n    throw ex;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "try\n{\n    ...\n}\ncatch (Exception ex)\n{\n    ...\n    throw ex;\n}",
        "code_language": "C#"
      },
      {
        "id": "4d4b3fcd-15b7-4b79-8581-91f713aba3b5",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525478305,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525478305,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Baseball Exception Handling"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Baseball Exception Handling"
          }
        ]
      },
      {
        "id": "12ba38e9-d107-416d-a707-ccdadc791393",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525478307,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525478307,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One should not use exceptions as a "
            ],
            [
              "substitute for normal flow control constructs",
              [
                [
                  "a",
                  "http://c2.com/cgi/wiki?DontUseExceptionsForFlowControl"
                ]
              ]
            ],
            [
              " like if-then statements and while loops. This anti-pattern is sometimes called "
            ],
            [
              "Baseball Exception Handling",
              [
                [
                  "a",
                  "http://www.stackprinter.com/questions/new-programming-jargon-you-coined.html"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One should not use exceptions as a "
          },
          {
            "Text": "substitute for normal flow control constructs",
            "Link": "http://c2.com/cgi/wiki?DontUseExceptionsForFlowControl"
          },
          {
            "Text": " like if-then statements and while loops. This anti-pattern is sometimes called "
          },
          {
            "Text": "Baseball Exception Handling",
            "Link": "http://www.stackprinter.com/questions/new-programming-jargon-you-coined.html"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "7f9d67fc-6b88-4141-8a8e-cf039f8e69df",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525478307,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525478307,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here is an example of the anti-pattern:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here is an example of the anti-pattern:"
          }
        ]
      },
      {
        "id": "29635616-ff1f-4126-ad85-c8f4c1e3b27c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525478307,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611720000,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "try\n{\n    while (AccountManager.HasMoreAccounts())\n    {\n        account = AccountManager.GetNextAccount();\n        if (account.Name == userName)\n        {\n            //We found it\n            throw new AccountFoundException(account);\n        }\n    }\n}\ncatch (AccountFoundException found)\n{\n    Console.Write(\"Here are your account details: \" + found.Account.Details.ToString());\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "try\n{\n    while (AccountManager.HasMoreAccounts())\n    {\n        account = AccountManager.GetNextAccount();\n        if (account.Name == userName)\n        {\n            //We found it\n            throw new AccountFoundException(account);\n        }\n    }\n}\ncatch (AccountFoundException found)\n{\n    Console.Write(\"Here are your account details: \" + found.Account.Details.ToString());\n}",
        "code_language": "C#"
      },
      {
        "id": "4f01dc40-ec01-4576-b67b-e8743d299c6e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525478319,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525478319,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here is a better way to do it:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here is a better way to do it:"
          }
        ]
      },
      {
        "id": "50bb6fbf-4f8f-4d88-9444-a952f62dad1b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525478319,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611720000,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "Account found = null;\nwhile (AccountManager.HasMoreAccounts() \u0026\u0026 (found==null))\n{\n    account = AccountManager.GetNextAccount();\n    if (account.Name == userName)\n    {\n        //We found it\n        found = account;\n    }\n}\nConsole.Write(\"Here are your account details: \" + found.Details.ToString());"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "Account found = null;\nwhile (AccountManager.HasMoreAccounts() \u0026\u0026 (found==null))\n{\n    account = AccountManager.GetNextAccount();\n    if (account.Name == userName)\n    {\n        //We found it\n        found = account;\n    }\n}\nConsole.Write(\"Here are your account details: \" + found.Details.ToString());",
        "code_language": "C#"
      },
      {
        "id": "0c473631-ca8a-4ecd-a22c-5b7d1bea3c7d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525478319,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525478319,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "catch (Exception)"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "catch (Exception)"
          }
        ]
      },
      {
        "id": "a070a880-4953-4ca9-aa2a-3bfbe8a939eb",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525478320,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525478320,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are almost no (some say none!) reasons to catch the generic exception type in your code. You should catch only the exception types you expect to happen, because you hide bugs in your code otherwise."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are almost no (some say none!) reasons to catch the generic exception type in your code. You should catch only the exception types you expect to happen, because you hide bugs in your code otherwise."
          }
        ]
      },
      {
        "id": "503bba00-8126-4897-ab0c-f2c9a5113bd4",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525478320,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611720000,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "try \n{\n     var f = File.Open(myfile);\n     // do something\n}\ncatch (Exception x)\n{\n     // Assume file not found\n     Console.Write(\"Could not open file\");\n     // but maybe the error was a NullReferenceException because of a bug in the file handling code?\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "try \n{\n     var f = File.Open(myfile);\n     // do something\n}\ncatch (Exception x)\n{\n     // Assume file not found\n     Console.Write(\"Could not open file\");\n     // but maybe the error was a NullReferenceException because of a bug in the file handling code?\n}",
        "code_language": "C#"
      },
      {
        "id": "77ef2c92-bff6-4ffc-b978-59b16308d140",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525478320,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525478320,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Better do:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Better do:"
          }
        ]
      },
      {
        "id": "c7466189-bc7d-470c-a688-f6ffd8616b54",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525478320,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611720000,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "try \n{\n     var f = File.Open(myfile);\n     // do something which should normally not throw exceptions\n}\ncatch (IOException)\n{\n     Console.Write(\"File not found\");\n}\n// Unfortunatelly, this one does not derive from the above, so declare separatelly\ncatch (UnauthorizedAccessException) \n{\n     Console.Write(\"Insufficient rights\");\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "try \n{\n     var f = File.Open(myfile);\n     // do something which should normally not throw exceptions\n}\ncatch (IOException)\n{\n     Console.Write(\"File not found\");\n}\n// Unfortunatelly, this one does not derive from the above, so declare separatelly\ncatch (UnauthorizedAccessException) \n{\n     Console.Write(\"Insufficient rights\");\n}",
        "code_language": "C#"
      },
      {
        "id": "872841fd-a7b4-4b36-ad65-928bfa696484",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525478320,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525478320,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If any other exception happens, we purposedly let the application crash, so it directly steps in the debugger and we can fix the problem. We mustn’t ship a program where any other exceptions than these happen anyway, so it’s not a problem to have a crash."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If any other exception happens, we purposedly let the application crash, so it directly steps in the debugger and we can fix the problem. We mustn’t ship a program where any other exceptions than these happen anyway, so it’s not a problem to have a crash."
          }
        ]
      },
      {
        "id": "d55ab3de-bd12-402b-a155-f44c3da57e10",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525478320,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525478320,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following is a bad example, too, because it uses exceptions to work around a programming error. That’s not what they’re designed for."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following is a bad example, too, because it uses exceptions to work around a programming error. That’s not what they’re designed for."
          }
        ]
      },
      {
        "id": "4d5c1b91-c213-4470-b7c2-a08a7d0f2e4b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525478320,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550046660000,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public void DoSomething(String s)\n{\n     if (s == null)\n         throw new ArgumentNullException(nameof(s));\n     // Implementation goes here\n}\n\ntry \n{    \n     DoSomething(myString);\n}\ncatch (ArgumentNullException x)\n{\n    // if this happens, we have a programming error and we should check\n    // why myString was null in the first place.\n}"
            ]
          ]
        },
        "type": "code",
        "version": 5,
        "code": "public void DoSomething(String s)\n{\n     if (s == null)\n         throw new ArgumentNullException(nameof(s));\n     // Implementation goes here\n}\n\ntry \n{    \n     DoSomething(myString);\n}\ncatch (ArgumentNullException x)\n{\n    // if this happens, we have a programming error and we should check\n    // why myString was null in the first place.\n}",
        "code_language": "C#"
      },
      {
        "id": "67e58e67-140a-4f4b-927f-6ae6d5e18456",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550046660000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550046660000,
        "parent_id": "bcb62968-fb6f-467c-9ea5-5a9ed58c6664",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "Exception Anti-patterns",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}