{
  "ID": "a0317283-20e1-446c-b263-525979c97205",
  "Root": {
    "id": "a0317283-20e1-446c-b263-525979c97205",
    "alive": true,
    "content": [
      "d56e9ae9-75c2-4c15-af77-094160d7b1a5",
      "43a26c97-640a-4c03-a15f-aedf391b6dc2",
      "87c92add-b551-4e45-b452-1f25f3e567fe",
      "0db33638-fce5-4a98-ae33-4fcc4b1cf8ac",
      "a2fef21a-651c-417d-9702-9dae433f8794",
      "11dc4ceb-8c28-4c60-a441-a036d83f0b90",
      "516f840b-57b9-44c0-bdfc-b899bb8bfb95",
      "eda55d55-96ed-4254-93dd-4e95e84a7ec2",
      "77cc7e6a-9a77-49c8-8b83-3d547b16a98a",
      "f2881c07-2781-4e34-97ba-6409d79267f7",
      "5cf2eb17-6a7b-4c78-b1a6-be694e40893e",
      "4d50b923-9556-4751-8198-31dacb5a91a9",
      "faee6e1a-0e9c-4a85-ad8f-b0f7371ae0a9",
      "f4648dfd-369b-4cee-ab1e-ce7503c4e66b",
      "4ffc40d6-4c9f-4eda-a8b9-cc1d9512b67f",
      "3abc6f48-9b6d-46df-b873-4e25faf48131",
      "94e237cc-f70e-4c6e-a398-4eb419d11869",
      "9da54820-442c-479b-a704-0c8eb9a0474f",
      "a9a69380-97e6-496e-a11b-d08a734533c0"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549526162658,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550127780000,
    "parent_id": "88c86302-2982-4e71-8e49-bcc2f620df46",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Correctly reversing a string"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "id": "d56e9ae9-75c2-4c15-af77-094160d7b1a5",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526162652,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526162652,
        "parent_id": "a0317283-20e1-446c-b263-525979c97205",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Most times when people have to reverse a string, they do it more or less like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Most times when people have to reverse a string, they do it more or less like this:"
          }
        ]
      },
      {
        "id": "43a26c97-640a-4c03-a15f-aedf391b6dc2",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526162655,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550127780000,
        "parent_id": "a0317283-20e1-446c-b263-525979c97205",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "char[] a = s.ToCharArray();\nSystem.Array.Reverse(a);\nstring r = new string(a);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "char[] a = s.ToCharArray();\nSystem.Array.Reverse(a);\nstring r = new string(a);",
        "code_language": "C#"
      },
      {
        "id": "87c92add-b551-4e45-b452-1f25f3e567fe",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526162655,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526162655,
        "parent_id": "a0317283-20e1-446c-b263-525979c97205",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, what these people don’t realize is that this is actually wrong. And I don’t mean because of the missing NULL check."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, what these people don’t realize is that this is actually wrong. And I don’t mean because of the missing NULL check."
          }
        ]
      },
      {
        "id": "0db33638-fce5-4a98-ae33-4fcc4b1cf8ac",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526162655,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526162655,
        "parent_id": "a0317283-20e1-446c-b263-525979c97205",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is actually wrong because a Glyph/GraphemeCluster can consist out of several codepoints (aka. characters)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is actually wrong because a Glyph/GraphemeCluster can consist out of several codepoints (aka. characters)."
          }
        ]
      },
      {
        "id": "a2fef21a-651c-417d-9702-9dae433f8794",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526162655,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526162655,
        "parent_id": "a0317283-20e1-446c-b263-525979c97205",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To see why this is so, we first have to be aware of the fact what the term “character” actually means."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To see why this is so, we first have to be aware of the fact what the term “character” actually means."
          }
        ]
      },
      {
        "id": "11dc4ceb-8c28-4c60-a441-a036d83f0b90",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526162657,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526162657,
        "parent_id": "a0317283-20e1-446c-b263-525979c97205",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Reference:",
              [
                [
                  "a",
                  "https://stackoverflow.com/questions/27331819/whats-the-difference-between-a-character-a-code-point-a-glyph-and-a-grapheme"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Reference:",
            "Link": "https://stackoverflow.com/questions/27331819/whats-the-difference-between-a-character-a-code-point-a-glyph-and-a-grapheme"
          }
        ]
      },
      {
        "id": "516f840b-57b9-44c0-bdfc-b899bb8bfb95",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526162657,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526162657,
        "parent_id": "a0317283-20e1-446c-b263-525979c97205",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Character is an overloaded term than can mean many things."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Character is an overloaded term than can mean many things."
          }
        ]
      },
      {
        "id": "eda55d55-96ed-4254-93dd-4e95e84a7ec2",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526162657,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526162657,
        "parent_id": "a0317283-20e1-446c-b263-525979c97205",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A code point is the atomic unit of information. Text is a sequence of \u003e code points. Each code point is a number which is given meaning by the \u003e Unicode standard."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A code point is the atomic unit of information. Text is a sequence of \u003e code points. Each code point is a number which is given meaning by the \u003e Unicode standard."
          }
        ]
      },
      {
        "id": "77cc7e6a-9a77-49c8-8b83-3d547b16a98a",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526162657,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526162657,
        "parent_id": "a0317283-20e1-446c-b263-525979c97205",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A grapheme is a sequence of one or more code points that are displayed \u003e as a single, graphical unit that a reader recognizes as a single \u003e element of the writing system. For example, both a and ä are \u003e graphemes, but they may consist of multiple code points (e.g. ä may be \u003e two code points, one for the base character a followed by one for the \u003e diaresis; but there’s also an alternative, legacy, single code point \u003e representing this grapheme). Some code points are never part of any \u003e grapheme (e.g. the zero-width non-joiner, or directional overrides)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A grapheme is a sequence of one or more code points that are displayed \u003e as a single, graphical unit that a reader recognizes as a single \u003e element of the writing system. For example, both a and ä are \u003e graphemes, but they may consist of multiple code points (e.g. ä may be \u003e two code points, one for the base character a followed by one for the \u003e diaresis; but there’s also an alternative, legacy, single code point \u003e representing this grapheme). Some code points are never part of any \u003e grapheme (e.g. the zero-width non-joiner, or directional overrides)."
          }
        ]
      },
      {
        "id": "f2881c07-2781-4e34-97ba-6409d79267f7",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526162657,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526162657,
        "parent_id": "a0317283-20e1-446c-b263-525979c97205",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A glyph is an image, usually stored in a font (which is a collection \u003e of glyphs), used to represent graphemes or parts thereof. Fonts may \u003e compose multiple glyphs into a single representation, for example, if \u003e the above ä is a single code point, a font may chose to render that as \u003e two separate, spatially overlaid glyphs. For OTF, the font’s GSUB and \u003e GPOS tables contain substitution and positioning information to make \u003e this work. A font may contain multiple alternative glyphs for the same \u003e grapheme, too."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A glyph is an image, usually stored in a font (which is a collection \u003e of glyphs), used to represent graphemes or parts thereof. Fonts may \u003e compose multiple glyphs into a single representation, for example, if \u003e the above ä is a single code point, a font may chose to render that as \u003e two separate, spatially overlaid glyphs. For OTF, the font’s GSUB and \u003e GPOS tables contain substitution and positioning information to make \u003e this work. A font may contain multiple alternative glyphs for the same \u003e grapheme, too."
          }
        ]
      },
      {
        "id": "5cf2eb17-6a7b-4c78-b1a6-be694e40893e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526162658,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526162658,
        "parent_id": "a0317283-20e1-446c-b263-525979c97205",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So in C#, a character is actually a CodePoint."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So in C#, a character is actually a CodePoint."
          }
        ]
      },
      {
        "id": "4d50b923-9556-4751-8198-31dacb5a91a9",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526162658,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526162658,
        "parent_id": "a0317283-20e1-446c-b263-525979c97205",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Which means, if you just reverse a valid string like "
            ],
            [
              "Les Misérables",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which can look like this"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Which means, if you just reverse a valid string like "
          },
          {
            "Text": "Les Misérables",
            "AttrFlags": 2
          },
          {
            "Text": ", which can look like this"
          }
        ]
      },
      {
        "id": "faee6e1a-0e9c-4a85-ad8f-b0f7371ae0a9",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526162658,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550127780000,
        "parent_id": "a0317283-20e1-446c-b263-525979c97205",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "string s = \"Les Mise\\u0301rables\";"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "string s = \"Les Mise\\u0301rables\";",
        "code_language": "C#"
      },
      {
        "id": "f4648dfd-369b-4cee-ab1e-ce7503c4e66b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526162658,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526162658,
        "parent_id": "a0317283-20e1-446c-b263-525979c97205",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "as a sequence of characters, you will get:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "as a sequence of characters, you will get:"
          }
        ]
      },
      {
        "id": "4ffc40d6-4c9f-4eda-a8b9-cc1d9512b67f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526162658,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526162658,
        "parent_id": "a0317283-20e1-446c-b263-525979c97205",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "selbaŕesiM seL"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "selbaŕesiM seL"
          }
        ]
      },
      {
        "id": "3abc6f48-9b6d-46df-b873-4e25faf48131",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526162658,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526162658,
        "parent_id": "a0317283-20e1-446c-b263-525979c97205",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As you can see, the accent is on the R character, instead of the e character. Although string.reverse.reverse will yield the original string if you both times reverse the char array, this kind of reversal is definitely NOT the reverse of the original string."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As you can see, the accent is on the R character, instead of the e character. Although string.reverse.reverse will yield the original string if you both times reverse the char array, this kind of reversal is definitely NOT the reverse of the original string."
          }
        ]
      },
      {
        "id": "94e237cc-f70e-4c6e-a398-4eb419d11869",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526162658,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526162658,
        "parent_id": "a0317283-20e1-446c-b263-525979c97205",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You’ll need to reverse each GraphemeCluster only. So, if done correctly, you reverse a string like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You’ll need to reverse each GraphemeCluster only. So, if done correctly, you reverse a string like this:"
          }
        ]
      },
      {
        "id": "9da54820-442c-479b-a704-0c8eb9a0474f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526162658,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550127780000,
        "parent_id": "a0317283-20e1-446c-b263-525979c97205",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "private static System.Collections.Generic.List\u003cstring\u003e GraphemeClusters(string s)\n    {\n        System.Collections.Generic.List\u003cstring\u003e ls = new System.Collections.Generic.List\u003cstring\u003e();\n\n        System.Globalization.TextElementEnumerator enumerator = System.Globalization.StringInfo.GetTextElementEnumerator(s);\n        while (enumerator.MoveNext())\n        {\n            ls.Add((string)enumerator.Current);\n        }\n\n        return ls;\n    }\n\n\n    // this \n    private static string ReverseGraphemeClusters(string s)\n    {\n        if(string.IsNullOrEmpty(s) || s.Length == 1)\n             return s;\n        \n        System.Collections.Generic.List\u003cstring\u003e ls = GraphemeClusters(s);\n        ls.Reverse();\n\n        return string.Join(\"\", ls.ToArray());\n    }\n\n    public static void TestMe()\n    {\n        string s = \"Les Mise\\u0301rables\";\n        // s = \"noël\";\n        string r = ReverseGraphemeClusters(s);\n\n        // This would be wrong:\n        // char[] a = s.ToCharArray();\n        // System.Array.Reverse(a);\n        // string r = new string(a);\n\n        System.Console.WriteLine(r);\n    }"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "private static System.Collections.Generic.List\u003cstring\u003e GraphemeClusters(string s)\n    {\n        System.Collections.Generic.List\u003cstring\u003e ls = new System.Collections.Generic.List\u003cstring\u003e();\n\n        System.Globalization.TextElementEnumerator enumerator = System.Globalization.StringInfo.GetTextElementEnumerator(s);\n        while (enumerator.MoveNext())\n        {\n            ls.Add((string)enumerator.Current);\n        }\n\n        return ls;\n    }\n\n\n    // this \n    private static string ReverseGraphemeClusters(string s)\n    {\n        if(string.IsNullOrEmpty(s) || s.Length == 1)\n             return s;\n        \n        System.Collections.Generic.List\u003cstring\u003e ls = GraphemeClusters(s);\n        ls.Reverse();\n\n        return string.Join(\"\", ls.ToArray());\n    }\n\n    public static void TestMe()\n    {\n        string s = \"Les Mise\\u0301rables\";\n        // s = \"noël\";\n        string r = ReverseGraphemeClusters(s);\n\n        // This would be wrong:\n        // char[] a = s.ToCharArray();\n        // System.Array.Reverse(a);\n        // string r = new string(a);\n\n        System.Console.WriteLine(r);\n    }",
        "code_language": "C#"
      },
      {
        "id": "a9a69380-97e6-496e-a11b-d08a734533c0",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526162658,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526162658,
        "parent_id": "a0317283-20e1-446c-b263-525979c97205",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And - oh joy - you’ll realize if you do it correctly like this, it will also work for Asian/South-Asian/East-Asian languages (and French/Swedish/Norwegian, etc.)…"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And - oh joy - you’ll realize if you do it correctly like this, it will also work for Asian/South-Asian/East-Asian languages (and French/Swedish/Norwegian, etc.)…"
          }
        ]
      }
    ],
    "title": "Correctly reversing a string",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}