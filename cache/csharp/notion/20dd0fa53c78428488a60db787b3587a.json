{
  "ID": "20dd0fa5-3c78-4284-88a6-0db787b3587a",
  "Root": {
    "alive": true,
    "content": [
      "a9497f9d-3aa9-4f52-bf7e-7555bb429bc5",
      "7229a2e3-dbed-4572-ae25-0ed974819292",
      "3483d26a-d384-4092-b363-0b01b32e2a0e",
      "9ca841dc-0a61-4ddc-9e3d-b467cb4f02c3",
      "07a1c8ce-f9f2-4b4e-a81b-6fc58fd29513",
      "fc2312e0-321b-4ec9-8fda-df2d242ab5e5",
      "620e2e4a-70dc-459e-b946-2344e13cd56e",
      "d0347325-b474-4ce7-ad45-b537d02a0878",
      "f0980c61-e676-4c02-a9a9-2cc582b493b9",
      "4b98d1fc-4bec-4faa-ac92-93080e90f9c9",
      "41c9c44e-e6e2-4a48-a310-b2ede296995f",
      "f07c37b8-a5a2-4f00-bbe3-029c0bc55c41",
      "54f41e33-38d6-4b54-8ea0-9da81a02929d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525528385,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "20dd0fa5-3c78-4284-88a6-0db787b3587a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549611420000,
    "parent_id": "9186cecd-4940-4c8f-9e57-5c38acacd478",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Null-Conditional Operator"
        ]
      ]
    },
    "type": "page",
    "version": 13,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525528382,
        "id": "a9497f9d-3aa9-4f52-bf7e-7555bb429bc5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525528382,
        "parent_id": "20dd0fa5-3c78-4284-88a6-0db787b3587a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "?.",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator is syntactic sugar to avoid verbose null checks. It’s also known as the "
            ],
            [
              "Safe navigation operator",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Safe_navigation_operator"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "?.",
            "AttrFlags": 2
          },
          {
            "Text": " operator is syntactic sugar to avoid verbose null checks. It’s also known as the "
          },
          {
            "Text": "Safe navigation operator",
            "Link": "https://en.wikipedia.org/wiki/Safe_navigation_operator"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525528383,
        "id": "7229a2e3-dbed-4572-ae25-0ed974819292",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525528383,
        "parent_id": "20dd0fa5-3c78-4284-88a6-0db787b3587a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Class used in the following example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Class used in the following example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525528383,
        "id": "3483d26a-d384-4092-b363-0b01b32e2a0e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611420000,
        "parent_id": "20dd0fa5-3c78-4284-88a6-0db787b3587a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class Person\n{\n    public int Age { get; set; }\n    public string Name { get; set; }\n    public Person Spouse { get; set; }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public class Person\n{\n    public int Age { get; set; }\n    public string Name { get; set; }\n    public Person Spouse { get; set; }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525528383,
        "id": "9ca841dc-0a61-4ddc-9e3d-b467cb4f02c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525528383,
        "parent_id": "20dd0fa5-3c78-4284-88a6-0db787b3587a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If an object is potentially null (such as a function that returns a reference type) the object must first be checked for null to prevent a possible "
            ],
            [
              "NullReferenceException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Without the null-conditional operator, this would look like:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If an object is potentially null (such as a function that returns a reference type) the object must first be checked for null to prevent a possible "
          },
          {
            "Text": "NullReferenceException",
            "AttrFlags": 2
          },
          {
            "Text": ". Without the null-conditional operator, this would look like:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525528384,
        "id": "07a1c8ce-f9f2-4b4e-a81b-6fc58fd29513",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611420000,
        "parent_id": "20dd0fa5-3c78-4284-88a6-0db787b3587a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "Person person = GetPerson();\n\nint? age = null;\nif (person != null)\n    age = person.Age;"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "Person person = GetPerson();\n\nint? age = null;\nif (person != null)\n    age = person.Age;",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525528384,
        "id": "fc2312e0-321b-4ec9-8fda-df2d242ab5e5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525528384,
        "parent_id": "20dd0fa5-3c78-4284-88a6-0db787b3587a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The same example using the null-conditional operator:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The same example using the null-conditional operator:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525528384,
        "id": "620e2e4a-70dc-459e-b946-2344e13cd56e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611420000,
        "parent_id": "20dd0fa5-3c78-4284-88a6-0db787b3587a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "Person person = GetPerson();\n\nvar age = person?.Age;    // 'age' will be of type 'int?', even if 'person' is not null"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "Person person = GetPerson();\n\nvar age = person?.Age;    // 'age' will be of type 'int?', even if 'person' is not null",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525528384,
        "id": "d0347325-b474-4ce7-ad45-b537d02a0878",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525528384,
        "parent_id": "20dd0fa5-3c78-4284-88a6-0db787b3587a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Chaining the Operator"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Chaining the Operator"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525528384,
        "id": "f0980c61-e676-4c02-a9a9-2cc582b493b9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525528384,
        "parent_id": "20dd0fa5-3c78-4284-88a6-0db787b3587a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The null-conditional operator can be combined on the members and sub-members of an object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The null-conditional operator can be combined on the members and sub-members of an object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525528384,
        "id": "4b98d1fc-4bec-4faa-ac92-93080e90f9c9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611420000,
        "parent_id": "20dd0fa5-3c78-4284-88a6-0db787b3587a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "// Will be null if either `person` or `person.Spouse` are null\nint? spouseAge = person?.Spouse?.Age;"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// Will be null if either `person` or `person.Spouse` are null\nint? spouseAge = person?.Spouse?.Age;",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525528384,
        "id": "41c9c44e-e6e2-4a48-a310-b2ede296995f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525528384,
        "parent_id": "20dd0fa5-3c78-4284-88a6-0db787b3587a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Combining with the Null-Coalescing Operator"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Combining with the Null-Coalescing Operator"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525528385,
        "id": "f07c37b8-a5a2-4f00-bbe3-029c0bc55c41",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525528385,
        "parent_id": "20dd0fa5-3c78-4284-88a6-0db787b3587a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The null-conditional operator can be combined with the "
            ],
            [
              "null-coalescing operator",
              [
                [
                  "a",
                  "https://stackoverflow.com/documentation/c%23/37/null-coalescing-operator#t=201610192135170167414"
                ]
              ]
            ],
            [
              " to provide a default value:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The null-conditional operator can be combined with the "
          },
          {
            "Text": "null-coalescing operator",
            "Link": "https://stackoverflow.com/documentation/c%23/37/null-coalescing-operator#t=201610192135170167414"
          },
          {
            "Text": " to provide a default value:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525528385,
        "id": "54f41e33-38d6-4b54-8ea0-9da81a02929d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611420000,
        "parent_id": "20dd0fa5-3c78-4284-88a6-0db787b3587a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "// spouseDisplayName will be \"N/A\" if person, Spouse, or Name is null\nvar spouseDisplayName = person?.Spouse?.Name ?? \"N/A\";"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// spouseDisplayName will be \"N/A\" if person, Spouse, or Name is null\nvar spouseDisplayName = person?.Spouse?.Name ?? \"N/A\";",
        "code_language": "C#"
      }
    ],
    "title": "Null-Conditional Operator",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}