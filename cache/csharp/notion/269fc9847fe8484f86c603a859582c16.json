{
  "ID": "269fc984-7fe8-484f-86c6-03a859582c16",
  "Root": {
    "alive": true,
    "content": [
      "eba166c9-c8a5-4c64-a3b7-52e4e1df0111",
      "56f8c1bf-7f8e-42ca-b0b3-c3c8ace9ad34",
      "a0b245c7-9054-4cdb-8a71-e8f2a5379875",
      "4a6e8def-d129-4635-8dab-9300891de30d",
      "3d8495c1-8511-4aba-b85b-1a29def2a1ff",
      "a607566d-513c-4cc6-a390-facd38639643",
      "0d91ddb5-fdf1-4189-b5cc-fa8713c7b205",
      "f05755e2-2915-472c-b715-d37aee2ef69e",
      "e4222f26-00d6-4d4d-bfd8-cfa48c438df9",
      "b9b30944-006c-4b36-b175-28483e4e8cee",
      "091720ce-0da1-4753-a9f2-6da4a26b7e6c",
      "9d36906d-7a96-4441-8f45-162d4c92d1a3",
      "32ee8885-4fa0-4d7c-9f5f-706468364a36",
      "5f9d3e7b-729e-4049-b06e-7f8bae2403a0",
      "f97bc75d-9835-4800-b749-3bc98fd43a8c",
      "df66fcf4-28d6-4373-a053-993b1dd62ec1",
      "8025f93c-4d8f-495c-9ab0-203f87b47c8c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549526215668,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "269fc984-7fe8-484f-86c6-03a859582c16",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549785180000,
    "parent_id": "fa946197-d3a2-4cf6-8c65-bc2d23788972",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Expression Tree Basic"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526215663,
        "id": "eba166c9-c8a5-4c64-a3b7-52e4e1df0111",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526215663,
        "parent_id": "269fc984-7fe8-484f-86c6-03a859582c16",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Expression trees represent code in a tree-like data structure, where each node is an expression"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Expression trees represent code in a tree-like data structure, where each node is an expression"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526215665,
        "id": "56f8c1bf-7f8e-42ca-b0b3-c3c8ace9ad34",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526215665,
        "parent_id": "269fc984-7fe8-484f-86c6-03a859582c16",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Expression Trees enables dynamic modification of executable code, the execution of LINQ queries in various databases, and the creation of dynamic queries. You can compile and run code represented by expression trees."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Expression Trees enables dynamic modification of executable code, the execution of LINQ queries in various databases, and the creation of dynamic queries. You can compile and run code represented by expression trees."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526215666,
        "id": "a0b245c7-9054-4cdb-8a71-e8f2a5379875",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526215666,
        "parent_id": "269fc984-7fe8-484f-86c6-03a859582c16",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These are also used in the dynamic language run-time (DLR) to provide interoperability between dynamic languages and the .NET Framework and to enable compiler writers to emit expression trees instead of Microsoft intermediate language (MSIL)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These are also used in the dynamic language run-time (DLR) to provide interoperability between dynamic languages and the .NET Framework and to enable compiler writers to emit expression trees instead of Microsoft intermediate language (MSIL)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526215666,
        "id": "4a6e8def-d129-4635-8dab-9300891de30d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526215666,
        "parent_id": "269fc984-7fe8-484f-86c6-03a859582c16",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Expression Trees can be created Via"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Expression Trees can be created Via"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526215666,
        "id": "3d8495c1-8511-4aba-b85b-1a29def2a1ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526215666,
        "parent_id": "269fc984-7fe8-484f-86c6-03a859582c16",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Anonymous lambda expression,"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Anonymous lambda expression,"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526215666,
        "id": "a607566d-513c-4cc6-a390-facd38639643",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526215666,
        "parent_id": "269fc984-7fe8-484f-86c6-03a859582c16",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Manually by using the System.Linq.Expressions namespace."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Manually by using the System.Linq.Expressions namespace."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526215667,
        "id": "0d91ddb5-fdf1-4189-b5cc-fa8713c7b205",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526215667,
        "parent_id": "269fc984-7fe8-484f-86c6-03a859582c16",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Expression Trees from Lambda Expressions",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Expression Trees from Lambda Expressions",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526215667,
        "id": "f05755e2-2915-472c-b715-d37aee2ef69e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526215667,
        "parent_id": "269fc984-7fe8-484f-86c6-03a859582c16",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When a lambda expression is assigned to Expression type variable , the compiler emits code to build an expression tree that represents the lambda expression."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When a lambda expression is assigned to Expression type variable , the compiler emits code to build an expression tree that represents the lambda expression."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526215667,
        "id": "e4222f26-00d6-4d4d-bfd8-cfa48c438df9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526215667,
        "parent_id": "269fc984-7fe8-484f-86c6-03a859582c16",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following code examples shows how to have the C# compiler create an expression tree that represents the lambda expression num =\u003e num \u003c 5."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following code examples shows how to have the C# compiler create an expression tree that represents the lambda expression num =\u003e num \u003c 5."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526215667,
        "id": "b9b30944-006c-4b36-b175-28483e4e8cee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526215667,
        "parent_id": "269fc984-7fe8-484f-86c6-03a859582c16",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Expression\u003cFunc\u003cint, bool\u003e\u003e lambda = num =\u003e num \u003c 5;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Expression\u003cFunc\u003cint, bool\u003e\u003e lambda = num =\u003e num \u003c 5;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526215667,
        "id": "091720ce-0da1-4753-a9f2-6da4a26b7e6c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526215667,
        "parent_id": "269fc984-7fe8-484f-86c6-03a859582c16",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Expression Trees by Using the API",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Expression Trees by Using the API",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526215667,
        "id": "9d36906d-7a96-4441-8f45-162d4c92d1a3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526215667,
        "parent_id": "269fc984-7fe8-484f-86c6-03a859582c16",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Expression Trees also created using the "
            ],
            [
              "Expression",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Class. This class contains static factory methods that create expression tree nodes of specific types."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Expression Trees also created using the "
          },
          {
            "Text": "Expression",
            "AttrFlags": 1
          },
          {
            "Text": " Class. This class contains static factory methods that create expression tree nodes of specific types."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526215667,
        "id": "32ee8885-4fa0-4d7c-9f5f-706468364a36",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526215667,
        "parent_id": "269fc984-7fe8-484f-86c6-03a859582c16",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Below are few type of Tree nodes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Below are few type of Tree nodes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526215668,
        "id": "5f9d3e7b-729e-4049-b06e-7f8bae2403a0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526215668,
        "parent_id": "269fc984-7fe8-484f-86c6-03a859582c16",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "ParameterExpression"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "ParameterExpression"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526215668,
        "id": "f97bc75d-9835-4800-b749-3bc98fd43a8c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526215668,
        "parent_id": "269fc984-7fe8-484f-86c6-03a859582c16",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "MethodCallExpression"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "MethodCallExpression"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526215668,
        "id": "df66fcf4-28d6-4373-a053-993b1dd62ec1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526215668,
        "parent_id": "269fc984-7fe8-484f-86c6-03a859582c16",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following code example shows how to create an expression tree that represents the lambda expression num =\u003e num \u003c 5 by using the API."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following code example shows how to create an expression tree that represents the lambda expression num =\u003e num \u003c 5 by using the API."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526215668,
        "id": "8025f93c-4d8f-495c-9ab0-203f87b47c8c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526215668,
        "parent_id": "269fc984-7fe8-484f-86c6-03a859582c16",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "ParameterExpression numParam = Expression.Parameter(typeof(int), \"num\");\nConstantExpression five = Expression.Constant(5, typeof(int));\nBinaryExpression numLessThanFive = Expression.LessThan(numParam, five);\nExpression\u003cFunc\u003cint, bool\u003e\u003e lambda1 = Expression.Lambda\u003cFunc\u003cint, bool\u003e\u003e(numLessThanFive,new ParameterExpression[] { numParam });"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "ParameterExpression numParam = Expression.Parameter(typeof(int), \"num\");\nConstantExpression five = Expression.Constant(5, typeof(int));\nBinaryExpression numLessThanFive = Expression.LessThan(numParam, five);\nExpression\u003cFunc\u003cint, bool\u003e\u003e lambda1 = Expression.Lambda\u003cFunc\u003cint, bool\u003e\u003e(numLessThanFive,new ParameterExpression[] { numParam });",
        "code_language": "Plain Text"
      }
    ],
    "title": "Expression Tree Basic",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}