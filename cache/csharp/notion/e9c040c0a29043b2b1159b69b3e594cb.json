{
  "ID": "e9c040c0-a290-43b2-b115-9b69b3e594cb",
  "Root": {
    "id": "e9c040c0-a290-43b2-b115-9b69b3e594cb",
    "alive": true,
    "content": [
      "0bb2b30b-9a64-43fe-8b8e-691cb09640d6",
      "69de33da-1358-41bc-b07c-9d6e4e45ceaf",
      "b46ab332-d9e3-4ec9-9fff-b7f99bf44e80",
      "c02554bd-e7f3-4a62-aa3f-cc67d0fc2a9b",
      "a9a483b2-2800-4ed3-9b05-7c7569b91eb7",
      "84ce2f2a-8a1a-48fc-b591-4b50e7a733c3",
      "9b6335b9-df77-490d-bc6f-ce8dacb79a9a",
      "7184a14f-8244-4358-9def-68d81cfc2370",
      "66c22639-b2c0-4b9a-8518-6fc4f58cda01",
      "c66cc875-9bd7-45ad-a8a3-964443b7ea3c",
      "1e04f074-05f8-46de-b9be-d941bccb4d07",
      "f15f8a7c-6ebe-4fc4-8de2-ba1ec2eca61b",
      "888a5270-fe78-4da4-bc38-eb4e20b02abd"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525484249,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549611840000,
    "parent_id": "9ff3cc78-9f6a-4238-a0a8-e9d9c0209cf7",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using the exception object"
        ]
      ]
    },
    "type": "page",
    "version": 11,
    "content_resolved": [
      {
        "id": "0bb2b30b-9a64-43fe-8b8e-691cb09640d6",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525484242,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525484242,
        "parent_id": "e9c040c0-a290-43b2-b115-9b69b3e594cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You are allowed to create and throw exceptions in your own code. Instantiating an exception is done the same way that any other C# object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You are allowed to create and throw exceptions in your own code. Instantiating an exception is done the same way that any other C# object."
          }
        ]
      },
      {
        "id": "69de33da-1358-41bc-b07c-9d6e4e45ceaf",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525484245,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611840000,
        "parent_id": "e9c040c0-a290-43b2-b115-9b69b3e594cb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "Exception ex = new Exception();\n\n// constructor with an overload that takes a message string\nException ex = new Exception(\"Error message\");"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "Exception ex = new Exception();\n\n// constructor with an overload that takes a message string\nException ex = new Exception(\"Error message\");",
        "code_language": "C#"
      },
      {
        "id": "b46ab332-d9e3-4ec9-9fff-b7f99bf44e80",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525484246,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525484246,
        "parent_id": "e9c040c0-a290-43b2-b115-9b69b3e594cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can then use the "
            ],
            [
              "throw",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword to raise the exception:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can then use the "
          },
          {
            "Text": "throw",
            "AttrFlags": 2
          },
          {
            "Text": " keyword to raise the exception:"
          }
        ]
      },
      {
        "id": "c02554bd-e7f3-4a62-aa3f-cc67d0fc2a9b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525484246,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611840000,
        "parent_id": "e9c040c0-a290-43b2-b115-9b69b3e594cb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "try\n{\n    throw new Exception(\"Error\");\n}\ncatch (Exception ex)\n{\n    Console.Write(ex.Message); // Logs 'Error' to the output window\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "try\n{\n    throw new Exception(\"Error\");\n}\ncatch (Exception ex)\n{\n    Console.Write(ex.Message); // Logs 'Error' to the output window\n}",
        "code_language": "C#"
      },
      {
        "id": "a9a483b2-2800-4ed3-9b05-7c7569b91eb7",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525484246,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525484246,
        "parent_id": "e9c040c0-a290-43b2-b115-9b69b3e594cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " If you’re throwing a new exception inside a catch block, ensure that the original exception is passed as “inner exception”, e.g."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note:",
            "AttrFlags": 1
          },
          {
            "Text": " If you’re throwing a new exception inside a catch block, ensure that the original exception is passed as “inner exception”, e.g."
          }
        ]
      },
      {
        "id": "84ce2f2a-8a1a-48fc-b591-4b50e7a733c3",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525484246,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611840000,
        "parent_id": "e9c040c0-a290-43b2-b115-9b69b3e594cb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "void DoSomething() \n{\n    int b=1; int c=5;\n    try\n    {\n        var a = 1; \n        b = a - 1;\n        c = a / b;\n        a = a / c;\n    }        \n    catch (DivideByZeroException dEx) when (b==0)\n    {\n        // we're throwing the same kind of exception\n        throw new DivideByZeroException(\"Cannot divide by b because it is zero\", dEx);\n    }\n    catch (DivideByZeroException dEx) when (c==0)\n    {\n        // we're throwing the same kind of exception\n        throw new DivideByZeroException(\"Cannot divide by c because it is zero\", dEx);\n    }\n}\n\nvoid Main()\n{    \n    try\n    {\n        DoSomething();\n    }\n    catch (Exception ex)\n    {\n        // Logs full error information (incl. inner exception)\n        Console.Write(ex.ToString()); \n    }    \n}"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "void DoSomething() \n{\n    int b=1; int c=5;\n    try\n    {\n        var a = 1; \n        b = a - 1;\n        c = a / b;\n        a = a / c;\n    }        \n    catch (DivideByZeroException dEx) when (b==0)\n    {\n        // we're throwing the same kind of exception\n        throw new DivideByZeroException(\"Cannot divide by b because it is zero\", dEx);\n    }\n    catch (DivideByZeroException dEx) when (c==0)\n    {\n        // we're throwing the same kind of exception\n        throw new DivideByZeroException(\"Cannot divide by c because it is zero\", dEx);\n    }\n}\n\nvoid Main()\n{    \n    try\n    {\n        DoSomething();\n    }\n    catch (Exception ex)\n    {\n        // Logs full error information (incl. inner exception)\n        Console.Write(ex.ToString()); \n    }    \n}",
        "code_language": "C#"
      },
      {
        "id": "9b6335b9-df77-490d-bc6f-ce8dacb79a9a",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525484246,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525484246,
        "parent_id": "e9c040c0-a290-43b2-b115-9b69b3e594cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this case it is assumed that the exception cannot be handled but some useful information is added to the message (and the original exception can still be accessed via "
            ],
            [
              "ex.InnerException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " by an outer exception block)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this case it is assumed that the exception cannot be handled but some useful information is added to the message (and the original exception can still be accessed via "
          },
          {
            "Text": "ex.InnerException",
            "AttrFlags": 2
          },
          {
            "Text": " by an outer exception block)."
          }
        ]
      },
      {
        "id": "7184a14f-8244-4358-9def-68d81cfc2370",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525484247,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525484247,
        "parent_id": "e9c040c0-a290-43b2-b115-9b69b3e594cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It will show something like:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It will show something like:"
          }
        ]
      },
      {
        "id": "66c22639-b2c0-4b9a-8518-6fc4f58cda01",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525484247,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525484247,
        "parent_id": "e9c040c0-a290-43b2-b115-9b69b3e594cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "System.DivideByZeroException: Cannot divide by b because it is zero —\u003e System.DivideByZeroException: Attempted to divide by zero. at UserQuery.g__DoSomething0_0() in C:[…]\\LINQPadQuery.cs:line 36 — End of inner exception stack trace — at UserQuery.g__DoSomething0_0() in C:[…]\\LINQPadQuery.cs:line 42 at UserQuery.Main() in C:[…]\\LINQPadQuery.cs:line 55"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "System.DivideByZeroException: Cannot divide by b because it is zero —\u003e System.DivideByZeroException: Attempted to divide by zero. at UserQuery.g__DoSomething0_0() in C:[…]\\LINQPadQuery.cs:line 36 — End of inner exception stack trace — at UserQuery.g__DoSomething0_0() in C:[…]\\LINQPadQuery.cs:line 42 at UserQuery.Main() in C:[…]\\LINQPadQuery.cs:line 55"
          }
        ]
      },
      {
        "id": "c66cc875-9bd7-45ad-a8a3-964443b7ea3c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525484247,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525484247,
        "parent_id": "e9c040c0-a290-43b2-b115-9b69b3e594cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you’re trying this example in LinqPad, you’ll notice that the line numbers aren’t very meaningful (they don’t always help you). But passing a helpful error text as suggested above oftentimes significantly reduces the time to track down the location of the error, which is in this example clearly the line"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you’re trying this example in LinqPad, you’ll notice that the line numbers aren’t very meaningful (they don’t always help you). But passing a helpful error text as suggested above oftentimes significantly reduces the time to track down the location of the error, which is in this example clearly the line"
          }
        ]
      },
      {
        "id": "1e04f074-05f8-46de-b9be-d941bccb4d07",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525484247,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525484247,
        "parent_id": "e9c040c0-a290-43b2-b115-9b69b3e594cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "c = a / b;"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "c = a / b;"
          }
        ]
      },
      {
        "id": "f15f8a7c-6ebe-4fc4-8de2-ba1ec2eca61b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525484247,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525484247,
        "parent_id": "e9c040c0-a290-43b2-b115-9b69b3e594cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "in function "
            ],
            [
              "DoSomething()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "in function "
          },
          {
            "Text": "DoSomething()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "888a5270-fe78-4da4-bc38-eb4e20b02abd",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525484249,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525484249,
        "parent_id": "e9c040c0-a290-43b2-b115-9b69b3e594cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Try it in .NET Fiddle",
              [
                [
                  "b"
                ],
                [
                  "a",
                  "https://dotnetfiddle.net/Widget/JLUXXY"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Try it in .NET Fiddle",
            "AttrFlags": 1,
            "Link": "https://dotnetfiddle.net/Widget/JLUXXY"
          }
        ]
      }
    ],
    "title": "Using the exception object",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}