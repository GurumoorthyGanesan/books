{
  "ID": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
  "Root": {
    "alive": true,
    "content": [
      "5f8daf42-6391-434f-9b06-7cc6d517dccc",
      "03be667e-f70f-49fb-bb07-b13258a4d8cf",
      "d2f33808-279e-447b-8190-83cdf0772d42",
      "0cb0ac32-8319-48db-a642-a07959eec66d",
      "670b50d7-5f57-4ff1-aa1a-bfca10966212",
      "e49d0d90-f843-4c81-a24a-ed5a88b1a8af",
      "096b0e2b-a1a7-45d1-b559-790948504d95",
      "e8195546-5674-4b2b-b907-1b5876514114",
      "870fafcf-903d-4f26-8630-fb71cd479f50",
      "b3e2b726-b0e8-44d7-b492-9fa4435d7eec",
      "723e953d-e583-4259-90c9-7618e931c545",
      "a7275e35-e73c-4e4e-a7a6-72b3f3d46b48",
      "94109c08-3df5-484d-aa9a-bdc91c2c313d",
      "f204832f-5b54-4c2e-97f0-0ef5f9806317",
      "18c4735c-2f85-437d-bc49-f916a55711da",
      "8b1d8be2-a4dc-4820-a783-646075c85729",
      "5914848a-95c5-4135-a32b-a7d8b228efbb",
      "71cc9fc7-78a8-4c40-969b-b1c7bade1c9f",
      "36682d01-81e8-4d8e-a90f-51ac1d4d92ba",
      "6ed183ff-364b-4b0c-95fa-ee1564ee41e8",
      "6967ebbf-96f3-4ee8-b273-56198c306e5f",
      "aa39b9a9-f0ff-4f14-88b5-988c00ccc768",
      "0b2b1fb8-59ce-4d31-a623-94cfae5681c3",
      "421a83ba-b05c-43c6-a66b-e64e4bc2d9dd",
      "451d304c-e0b2-45c8-be81-81f6e0acb7b2",
      "9c6def2d-a129-4b27-ad5c-e6a6a0dc18c5",
      "accd426a-0883-4ac7-a9bc-2d441d76a187",
      "a42a0ef8-d791-4665-8c50-4db1d337b06a",
      "846550ea-beb1-4cf8-8353-a4530ae42a62",
      "a69ef7e9-8362-4968-9267-cabf92e464eb",
      "32c24fca-6470-4dfb-ac9b-592d354e59b2",
      "ea1046d9-765d-4365-8245-e485d1599ca1",
      "a65d66ca-080f-4235-bca7-29f1207b577b",
      "d6b3b711-8ca1-48b8-a73f-9acca2563ff3",
      "e38d4aad-bab4-4e44-b181-12b18965907b",
      "9456de57-69c7-46be-b16d-3a1bbe3090ec",
      "27fa3aa4-01ef-4adb-b132-83ab8f4f7cb7",
      "f8d0abfb-1146-4161-a132-47eddeb7bd4d",
      "411ddd19-62a8-40d0-b67b-22cd6862b113",
      "972f05c3-1f89-46d5-ad75-0b2fe8e0fc4d",
      "deeea45e-8568-41f8-872a-6e12d57c4d90",
      "04f00acd-e7aa-4814-8438-2ca18633ee6e",
      "5ec05f4a-b543-4a56-a592-d7daefb343e1",
      "89f33975-dca2-4b8c-9041-4f511e3e1062",
      "3af6c1b3-07f2-441d-9916-bd8218e5da25",
      "c6006321-4d5b-4d7e-b76f-7ad79136d0bb",
      "075cd151-9757-425b-9ff2-ddf71576ef39",
      "d4295193-d097-4f1f-8749-7615db1c8f73",
      "08c4a592-8685-4fbd-b09d-4ab27e5fc3fd",
      "5f251c3d-5ee3-4016-8b9e-55c6e643dbd3",
      "ba81dc21-592d-412e-ae8b-37cde681f326",
      "7465d9f4-2fdd-49b1-b55a-60a136432321"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549524852409,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549614540000,
    "parent_id": "307cbc92-1d45-43c5-9927-7963d630a818",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Exception filters"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852397,
        "id": "5f8daf42-6391-434f-9b06-7cc6d517dccc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852397,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Exception filters",
              [
                [
                  "a",
                  "https://github.com/dotnet/roslyn/wiki/New-Language-Features-in-C%23-6#exception-filters"
                ]
              ]
            ],
            [
              " give developers the ability to add a condition (in the form of a "
            ],
            [
              "boolean",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " expression) to a "
            ],
            [
              "catch",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%23/26/keywords/148/try-catch-finally-throw"
                ]
              ]
            ],
            [
              " block, allowing the "
            ],
            [
              "catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to execute only if the condition evaluates to "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Exception filters",
            "Link": "https://github.com/dotnet/roslyn/wiki/New-Language-Features-in-C%23-6#exception-filters"
          },
          {
            "Text": " give developers the ability to add a condition (in the form of a "
          },
          {
            "Text": "boolean",
            "AttrFlags": 2
          },
          {
            "Text": " expression) to a "
          },
          {
            "Text": "catch",
            "Link": "http://stackoverflow.com/documentation/c%23/26/keywords/148/try-catch-finally-throw"
          },
          {
            "Text": " block, allowing the "
          },
          {
            "Text": "catch",
            "AttrFlags": 2
          },
          {
            "Text": " to execute only if the condition evaluates to "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852399,
        "id": "03be667e-f70f-49fb-bb07-b13258a4d8cf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852399,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Exception filters allow the propagation of debug information in the original exception, where as using an "
            ],
            [
              "if",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement inside a "
            ],
            [
              "catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block and re-throwing the exception stops the propagation of debug information in the original exception. With exception filters, the exception continues to propagate upwards in the call stack "
            ],
            [
              "unless",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " the condition is met. As a result, exception filters make the debugging experience much easier. Instead of stopping on the "
            ],
            [
              "throw",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement, the debugger will stop on the statement throwing the exception, with the current state and all local variables preserved. Crash dumps are affected in a similar way."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Exception filters allow the propagation of debug information in the original exception, where as using an "
          },
          {
            "Text": "if",
            "AttrFlags": 2
          },
          {
            "Text": " statement inside a "
          },
          {
            "Text": "catch",
            "AttrFlags": 2
          },
          {
            "Text": " block and re-throwing the exception stops the propagation of debug information in the original exception. With exception filters, the exception continues to propagate upwards in the call stack "
          },
          {
            "Text": "unless",
            "AttrFlags": 4
          },
          {
            "Text": " the condition is met. As a result, exception filters make the debugging experience much easier. Instead of stopping on the "
          },
          {
            "Text": "throw",
            "AttrFlags": 2
          },
          {
            "Text": " statement, the debugger will stop on the statement throwing the exception, with the current state and all local variables preserved. Crash dumps are affected in a similar way."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852399,
        "id": "d2f33808-279e-447b-8190-83cdf0772d42",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852399,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Exception filters have been supported by the CLR since the beginning and they’ve been accessible from VB.NET and F# for over a decade by exposing a part of the CLR’s exception handling model. Only after the release of C# 6.0 has the functionality also been available for C# developers."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Exception filters have been supported by the CLR since the beginning and they’ve been accessible from VB.NET and F# for over a decade by exposing a part of the CLR’s exception handling model. Only after the release of C# 6.0 has the functionality also been available for C# developers."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852399,
        "id": "0cb0ac32-8319-48db-a642-a07959eec66d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852399,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852399,
        "id": "670b50d7-5f57-4ff1-aa1a-bfca10966212",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852399,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using exception filters"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using exception filters"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852400,
        "id": "e49d0d90-f843-4c81-a24a-ed5a88b1a8af",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852400,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Exception filters are utilized by appending a "
            ],
            [
              "when",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " clause to the "
            ],
            [
              "catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " expression. It is possible to use any expression returning a "
            ],
            [
              "bool",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in a "
            ],
            [
              "when",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " clause (except "
            ],
            [
              "await",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%23/26/keywords/5993/async-await"
                ]
              ]
            ],
            [
              "). The declared Exception variable "
            ],
            [
              "ex",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is accessible from within the "
            ],
            [
              "when",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " clause:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Exception filters are utilized by appending a "
          },
          {
            "Text": "when",
            "AttrFlags": 2
          },
          {
            "Text": " clause to the "
          },
          {
            "Text": "catch",
            "AttrFlags": 2
          },
          {
            "Text": " expression. It is possible to use any expression returning a "
          },
          {
            "Text": "bool",
            "AttrFlags": 2
          },
          {
            "Text": " in a "
          },
          {
            "Text": "when",
            "AttrFlags": 2
          },
          {
            "Text": " clause (except "
          },
          {
            "Text": "await",
            "Link": "http://stackoverflow.com/documentation/c%23/26/keywords/5993/async-await"
          },
          {
            "Text": "). The declared Exception variable "
          },
          {
            "Text": "ex",
            "AttrFlags": 2
          },
          {
            "Text": " is accessible from within the "
          },
          {
            "Text": "when",
            "AttrFlags": 2
          },
          {
            "Text": " clause:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852400,
        "id": "096b0e2b-a1a7-45d1-b559-790948504d95",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852400,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var SqlErrorToIgnore = 123;\ntry\n{\n    DoSQLOperations();\n}\ncatch (SqlException ex) when (ex.Number != SqlErrorToIgnore)\n{\n    throw new Exception(\"An error occurred accessing the database\", ex);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var SqlErrorToIgnore = 123;\ntry\n{\n    DoSQLOperations();\n}\ncatch (SqlException ex) when (ex.Number != SqlErrorToIgnore)\n{\n    throw new Exception(\"An error occurred accessing the database\", ex);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852401,
        "id": "e8195546-5674-4b2b-b907-1b5876514114",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852401,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Multiple "
            ],
            [
              "catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " blocks with "
            ],
            [
              "when",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " clauses may be combined. The first "
            ],
            [
              "when",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " clause returning "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will cause the exception to be caught. Its "
            ],
            [
              "catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block will be entered, while the other "
            ],
            [
              "catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " clauses will be ignored (their "
            ],
            [
              "when",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " clauses won’t be evaluated). For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Multiple "
          },
          {
            "Text": "catch",
            "AttrFlags": 2
          },
          {
            "Text": " blocks with "
          },
          {
            "Text": "when",
            "AttrFlags": 2
          },
          {
            "Text": " clauses may be combined. The first "
          },
          {
            "Text": "when",
            "AttrFlags": 2
          },
          {
            "Text": " clause returning "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": " will cause the exception to be caught. Its "
          },
          {
            "Text": "catch",
            "AttrFlags": 2
          },
          {
            "Text": " block will be entered, while the other "
          },
          {
            "Text": "catch",
            "AttrFlags": 2
          },
          {
            "Text": " clauses will be ignored (their "
          },
          {
            "Text": "when",
            "AttrFlags": 2
          },
          {
            "Text": " clauses won’t be evaluated). For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852401,
        "id": "870fafcf-903d-4f26-8630-fb71cd479f50",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852401,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "try\n{ ... }\ncatch (Exception ex) when (someCondition) //If someCondition evaluates to true,\n                                          //the rest of the catches are ignored.\n{ ... }\ncatch (NotImplementedException ex) when (someMethod()) //someMethod() will only run if\n                                                       //someCondition evaluates to false\n{ ... }\ncatch(Exception ex) // If both when clauses evaluate to false\n{ ... }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "try\n{ ... }\ncatch (Exception ex) when (someCondition) //If someCondition evaluates to true,\n                                          //the rest of the catches are ignored.\n{ ... }\ncatch (NotImplementedException ex) when (someMethod()) //someMethod() will only run if\n                                                       //someCondition evaluates to false\n{ ... }\ncatch(Exception ex) // If both when clauses evaluate to false\n{ ... }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852401,
        "id": "b3e2b726-b0e8-44d7-b492-9fa4435d7eec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852401,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852401,
        "id": "723e953d-e583-4259-90c9-7618e931c545",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852401,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Risky when clause"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Risky when clause"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852401,
        "id": "a7275e35-e73c-4e4e-a7a6-72b3f3d46b48",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852401,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Caution"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Caution"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852401,
        "id": "94109c08-3df5-484d-aa9a-bdc91c2c313d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852401,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It can be risky to use exception filters: when an "
            ],
            [
              "Exception",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is thrown from within the "
            ],
            [
              "when",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " clause, the "
            ],
            [
              "Exception",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " from the "
            ],
            [
              "when",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " clause is ignored and is treated as "
            ],
            [
              "false",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This approach allows developers to write "
            ],
            [
              "when",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " clause without taking care of invalid cases."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It can be risky to use exception filters: when an "
          },
          {
            "Text": "Exception",
            "AttrFlags": 2
          },
          {
            "Text": " is thrown from within the "
          },
          {
            "Text": "when",
            "AttrFlags": 2
          },
          {
            "Text": " clause, the "
          },
          {
            "Text": "Exception",
            "AttrFlags": 2
          },
          {
            "Text": " from the "
          },
          {
            "Text": "when",
            "AttrFlags": 2
          },
          {
            "Text": " clause is ignored and is treated as "
          },
          {
            "Text": "false",
            "AttrFlags": 2
          },
          {
            "Text": ". This approach allows developers to write "
          },
          {
            "Text": "when",
            "AttrFlags": 2
          },
          {
            "Text": " clause without taking care of invalid cases."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852402,
        "id": "f204832f-5b54-4c2e-97f0-0ef5f9806317",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852402,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following example illustrates such a scenario:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following example illustrates such a scenario:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852402,
        "id": "18c4735c-2f85-437d-bc49-f916a55711da",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852402,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public static void Main()\n{\n    int a = 7;\n    int b = 0;\n    try\n    {\n        DoSomethingThatMightFail();\n    }\n    catch (Exception ex) when (a / b == 0)\n    {\n        // This block is never reached because a / b throws an ignored\n        // DivideByZeroException which is treated as false.\n    }\n    catch (Exception ex)\n    {\n        // This block is reached since the DivideByZeroException in the \n        // previous when clause is ignored.\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public static void Main()\n{\n    int a = 7;\n    int b = 0;\n    try\n    {\n        DoSomethingThatMightFail();\n    }\n    catch (Exception ex) when (a / b == 0)\n    {\n        // This block is never reached because a / b throws an ignored\n        // DivideByZeroException which is treated as false.\n    }\n    catch (Exception ex)\n    {\n        // This block is reached since the DivideByZeroException in the \n        // previous when clause is ignored.\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852402,
        "id": "8b1d8be2-a4dc-4820-a783-646075c85729",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852402,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public static void DoSomethingThatMightFail()\n{\n    // This will always throw an ArgumentNullException.\n    Type.GetType(null);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public static void DoSomethingThatMightFail()\n{\n    // This will always throw an ArgumentNullException.\n    Type.GetType(null);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852402,
        "id": "5914848a-95c5-4135-a32b-a7d8b228efbb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852402,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "View Demo",
              [
                [
                  "a",
                  "https://dotnetfiddle.net/Iex6DP"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "View Demo",
            "Link": "https://dotnetfiddle.net/Iex6DP"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852402,
        "id": "71cc9fc7-78a8-4c40-969b-b1c7bade1c9f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852402,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that exception filters avoid the confusing line number problems associated with using "
            ],
            [
              "throw",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when failing code is within the same function. For example in this case the line number is reported as 6 instead of 3:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that exception filters avoid the confusing line number problems associated with using "
          },
          {
            "Text": "throw",
            "AttrFlags": 2
          },
          {
            "Text": " when failing code is within the same function. For example in this case the line number is reported as 6 instead of 3:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852402,
        "id": "36682d01-81e8-4d8e-a90f-51ac1d4d92ba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852402,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "1. int a = 0, b = 0;\n2. try {\n3.     int c = a / b;\n4. }\n5. catch (DivideByZeroException) {\n6.     throw;\n7. }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "1. int a = 0, b = 0;\n2. try {\n3.     int c = a / b;\n4. }\n5. catch (DivideByZeroException) {\n6.     throw;\n7. }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852403,
        "id": "6ed183ff-364b-4b0c-95fa-ee1564ee41e8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852403,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The exception line number is reported as 6 because the error was caught and re-thrown with the "
            ],
            [
              "throw",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement on line 6."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The exception line number is reported as 6 because the error was caught and re-thrown with the "
          },
          {
            "Text": "throw",
            "AttrFlags": 2
          },
          {
            "Text": " statement on line 6."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852403,
        "id": "6967ebbf-96f3-4ee8-b273-56198c306e5f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852403,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The same does not happen with exception filters:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The same does not happen with exception filters:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852403,
        "id": "aa39b9a9-f0ff-4f14-88b5-988c00ccc768",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852403,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "1. int a = 0, b = 0;\n2. try {\n3.     int c = a / b;\n4. }\n5. catch (DivideByZeroException) when (a != 0) {\n6.     throw;\n7. }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "1. int a = 0, b = 0;\n2. try {\n3.     int c = a / b;\n4. }\n5. catch (DivideByZeroException) when (a != 0) {\n6.     throw;\n7. }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852403,
        "id": "0b2b1fb8-59ce-4d31-a623-94cfae5681c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852403,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is 0 then "
            ],
            [
              "catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " clause is ignored but 3 is reported as line number. This is because they "
            ],
            [
              "do not unwind the stack",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". More specifically, the exception "
            ],
            [
              "is not caught",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " on line 5 because "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in fact does equal "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and thus there is no opportunity for the exception to be re-thrown on line 6 because line 6 does not execute."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " is 0 then "
          },
          {
            "Text": "catch",
            "AttrFlags": 2
          },
          {
            "Text": " clause is ignored but 3 is reported as line number. This is because they "
          },
          {
            "Text": "do not unwind the stack",
            "AttrFlags": 1
          },
          {
            "Text": ". More specifically, the exception "
          },
          {
            "Text": "is not caught",
            "AttrFlags": 4
          },
          {
            "Text": " on line 5 because "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " in fact does equal "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": " and thus there is no opportunity for the exception to be re-thrown on line 6 because line 6 does not execute."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852404,
        "id": "421a83ba-b05c-43c6-a66b-e64e4bc2d9dd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852404,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852404,
        "id": "451d304c-e0b2-45c8-be81-81f6e0acb7b2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852404,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Logging as a side effect"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Logging as a side effect"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852404,
        "id": "9c6def2d-a129-4b27-ad5c-e6a6a0dc18c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852404,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Method calls in the condition can cause side effects, so exception filters can be used to run code on exceptions without catching them. A common example that takes advantage of this is a "
            ],
            [
              "Log",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method that always returns "
            ],
            [
              "false",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This allows tracing log information while debugging without the need to re-throw the exception."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Method calls in the condition can cause side effects, so exception filters can be used to run code on exceptions without catching them. A common example that takes advantage of this is a "
          },
          {
            "Text": "Log",
            "AttrFlags": 2
          },
          {
            "Text": " method that always returns "
          },
          {
            "Text": "false",
            "AttrFlags": 2
          },
          {
            "Text": ". This allows tracing log information while debugging without the need to re-throw the exception."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852404,
        "id": "accd426a-0883-4ac7-a9bc-2d441d76a187",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852404,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Be aware that while this seems to be a comfortable way of logging, it can be risky, especially if 3rd party logging assemblies are used. These might throw exceptions while logging in non-obvious situations that may not be detected easily (see Risky when(...) clause above)."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Be aware that while this seems to be a comfortable way of logging, it can be risky, especially if 3rd party logging assemblies are used. These might throw exceptions while logging in non-obvious situations that may not be detected easily (see Risky when(...) clause above)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852404,
        "id": "a42a0ef8-d791-4665-8c50-4db1d337b06a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852404,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "try\n{\n    DoSomethingThatMightFail(s);\n}\ncatch (Exception ex) when (Log(ex, \"An error occurred\"))\n{\n    // This catch block will never be reached\n}\n\n// ...\n\nstatic bool Log(Exception ex, string message, params object[] args)\n{\n```\nDebug.Print(message, args);\nreturn false;\n```\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "try\n{\n    DoSomethingThatMightFail(s);\n}\ncatch (Exception ex) when (Log(ex, \"An error occurred\"))\n{\n    // This catch block will never be reached\n}\n\n// ...\n\nstatic bool Log(Exception ex, string message, params object[] args)\n{\n```\nDebug.Print(message, args);\nreturn false;\n```\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852404,
        "id": "846550ea-beb1-4cf8-8353-a4530ae42a62",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852404,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "View Demo",
              [
                [
                  "a",
                  "https://dotnetfiddle.net/pqPc7B"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "View Demo",
            "Link": "https://dotnetfiddle.net/pqPc7B"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852405,
        "id": "a69ef7e9-8362-4968-9267-cabf92e464eb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852405,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The common approach in previous versions of C# was to log and re-throw the exception."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The common approach in previous versions of C# was to log and re-throw the exception."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852405,
        "id": "32c24fca-6470-4dfb-ac9b-592d354e59b2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852405,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "try\n{\n    DoSomethingThatMightFail(s);\n}\ncatch (Exception ex)\n{\n     Log(ex, \"An error occurred\");\n     throw;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "try\n{\n    DoSomethingThatMightFail(s);\n}\ncatch (Exception ex)\n{\n     Log(ex, \"An error occurred\");\n     throw;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852405,
        "id": "ea1046d9-765d-4365-8245-e485d1599ca1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852405,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// ..."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// ...",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852405,
        "id": "a65d66ca-080f-4235-bca7-29f1207b577b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852405,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "static void Log(Exception ex, string message, params object[] args)\n{\n    Debug.Print(message, args);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "static void Log(Exception ex, string message, params object[] args)\n{\n    Debug.Print(message, args);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852405,
        "id": "d6b3b711-8ca1-48b8-a73f-9acca2563ff3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852405,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "View Demo",
              [
                [
                  "a",
                  "https://dotnetfiddle.net/kEWLue"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "View Demo",
            "Link": "https://dotnetfiddle.net/kEWLue"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852405,
        "id": "e38d4aad-bab4-4e44-b181-12b18965907b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852405,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "type": "sub_header",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852405,
        "id": "9456de57-69c7-46be-b16d-3a1bbe3090ec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852405,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "finally",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "finally",
            "AttrFlags": 2
          },
          {
            "Text": " block"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852406,
        "id": "27fa3aa4-01ef-4adb-b132-83ab8f4f7cb7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852406,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "finally",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://stackoverflow.com/documentation/c%23/40/exception-handling/172/finally-block"
                ]
              ]
            ],
            [
              " block executes every time whether the exception is thrown or not. One subtlety with expressions in "
            ],
            [
              "when",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is exception filters are executed further up the stack "
            ],
            [
              "before",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " entering the inner "
            ],
            [
              "finally",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " blocks. This can cause unexpected results and behaviors when code attempts to modify global state (like the current thread’s user or culture) and set it back in a "
            ],
            [
              "finally",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "finally",
            "AttrFlags": 2,
            "Link": "https://stackoverflow.com/documentation/c%23/40/exception-handling/172/finally-block"
          },
          {
            "Text": " block executes every time whether the exception is thrown or not. One subtlety with expressions in "
          },
          {
            "Text": "when",
            "AttrFlags": 2
          },
          {
            "Text": " is exception filters are executed further up the stack "
          },
          {
            "Text": "before",
            "AttrFlags": 4
          },
          {
            "Text": " entering the inner "
          },
          {
            "Text": "finally",
            "AttrFlags": 2
          },
          {
            "Text": " blocks. This can cause unexpected results and behaviors when code attempts to modify global state (like the current thread’s user or culture) and set it back in a "
          },
          {
            "Text": "finally",
            "AttrFlags": 2
          },
          {
            "Text": " block."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852406,
        "id": "f8d0abfb-1146-4161-a132-47eddeb7bd4d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852406,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example: "
            ],
            [
              "finally",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example: "
          },
          {
            "Text": "finally",
            "AttrFlags": 2
          },
          {
            "Text": " block"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852406,
        "id": "411ddd19-62a8-40d0-b67b-22cd6862b113",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852406,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "private static bool Flag = false;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "private static bool Flag = false;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852407,
        "id": "972f05c3-1f89-46d5-ad75-0b2fe8e0fc4d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852407,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "static void Main(string[] args)\n{\n    Console.WriteLine(\"Start\");\n    try\n    {\n        SomeOperation();\n    }\n    catch (Exception) when (EvaluatesTo())\n    {\n        Console.WriteLine(\"Catch\");\n    }\n    finally\n    {\n        Console.WriteLine(\"Outer Finally\");\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "static void Main(string[] args)\n{\n    Console.WriteLine(\"Start\");\n    try\n    {\n        SomeOperation();\n    }\n    catch (Exception) when (EvaluatesTo())\n    {\n        Console.WriteLine(\"Catch\");\n    }\n    finally\n    {\n        Console.WriteLine(\"Outer Finally\");\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852407,
        "id": "deeea45e-8568-41f8-872a-6e12d57c4d90",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852407,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "private static bool EvaluatesTo()\n{\n    Console.WriteLine($\"EvaluatesTo: {Flag}\");\n    return true;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "private static bool EvaluatesTo()\n{\n    Console.WriteLine($\"EvaluatesTo: {Flag}\");\n    return true;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852407,
        "id": "04f00acd-e7aa-4814-8438-2ca18633ee6e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852407,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "private static void SomeOperation()\n{\n    try\n    {\n        Flag = true;\n        throw new Exception(\"Boom\");\n    }\n    finally\n    {\n        Flag = false;\n        Console.WriteLine(\"Inner Finally\");\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "private static void SomeOperation()\n{\n    try\n    {\n        Flag = true;\n        throw new Exception(\"Boom\");\n    }\n    finally\n    {\n        Flag = false;\n        Console.WriteLine(\"Inner Finally\");\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852407,
        "id": "5ec05f4a-b543-4a56-a592-d7daefb343e1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852407,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Produced Output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Produced Output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852407,
        "id": "89f33975-dca2-4b8c-9041-4f511e3e1062",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852407,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Start"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Start"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852407,
        "id": "3af6c1b3-07f2-441d-9916-bd8218e5da25",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852407,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "EvaluatesTo: True"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "EvaluatesTo: True"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852407,
        "id": "c6006321-4d5b-4d7e-b76f-7ad79136d0bb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852407,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Inner Finally"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Inner Finally"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852407,
        "id": "075cd151-9757-425b-9ff2-ddf71576ef39",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852407,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Catch"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Catch"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852407,
        "id": "d4295193-d097-4f1f-8749-7615db1c8f73",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852407,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Outer Finally"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Outer Finally"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852408,
        "id": "08c4a592-8685-4fbd-b09d-4ab27e5fc3fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852408,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "View Demo",
              [
                [
                  "a",
                  "https://ideone.com/gxfBA8"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "View Demo",
            "Link": "https://ideone.com/gxfBA8"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852408,
        "id": "5f251c3d-5ee3-4016-8b9e-55c6e643dbd3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852408,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the example above, if the method "
            ],
            [
              "SomeOperation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " does not wish to “leak” the global state changes to caller’s "
            ],
            [
              "when",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " clauses, it should also contain a "
            ],
            [
              "catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block to modify the state. For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the example above, if the method "
          },
          {
            "Text": "SomeOperation",
            "AttrFlags": 2
          },
          {
            "Text": " does not wish to “leak” the global state changes to caller’s "
          },
          {
            "Text": "when",
            "AttrFlags": 2
          },
          {
            "Text": " clauses, it should also contain a "
          },
          {
            "Text": "catch",
            "AttrFlags": 2
          },
          {
            "Text": " block to modify the state. For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852408,
        "id": "ba81dc21-592d-412e-ae8b-37cde681f326",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852408,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "private static void SomeOperation()\n{\n    try\n    {\n        Flag = true;\n        throw new Exception(\"Boom\");\n    }\n    catch\n    {\n       Flag = false;\n       throw;\n    }\n    finally\n    {\n        Flag = false;\n        Console.WriteLine(\"Inner Finally\");\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "private static void SomeOperation()\n{\n    try\n    {\n        Flag = true;\n        throw new Exception(\"Boom\");\n    }\n    catch\n    {\n       Flag = false;\n       throw;\n    }\n    finally\n    {\n        Flag = false;\n        Console.WriteLine(\"Inner Finally\");\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524852409,
        "id": "7465d9f4-2fdd-49b1-b55a-60a136432321",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524852409,
        "parent_id": "7408ca12-4b0d-4c46-ad2a-f3ad0a7a123a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is also common to see "
            ],
            [
              "IDisposable",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://stackoverflow.com/documentation/c%23/1795/idisposable-interface"
                ]
              ]
            ],
            [
              " helper classes leveraging the semantics of "
            ],
            [
              "using",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%23/26/keywords/5062/using"
                ]
              ]
            ],
            [
              " blocks to achieve the same goal, as "
            ],
            [
              "IDisposable.Dispose",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will always be called before an exception called within a "
            ],
            [
              "using",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block starts bubbling up the stack."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is also common to see "
          },
          {
            "Text": "IDisposable",
            "AttrFlags": 2,
            "Link": "https://stackoverflow.com/documentation/c%23/1795/idisposable-interface"
          },
          {
            "Text": " helper classes leveraging the semantics of "
          },
          {
            "Text": "using",
            "Link": "http://stackoverflow.com/documentation/c%23/26/keywords/5062/using"
          },
          {
            "Text": " blocks to achieve the same goal, as "
          },
          {
            "Text": "IDisposable.Dispose",
            "AttrFlags": 2
          },
          {
            "Text": " will always be called before an exception called within a "
          },
          {
            "Text": "using",
            "AttrFlags": 2
          },
          {
            "Text": " block starts bubbling up the stack."
          }
        ]
      }
    ],
    "title": "Exception filters",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}