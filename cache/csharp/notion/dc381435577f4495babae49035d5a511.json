{
  "ID": "dc381435-577f-4495-baba-e49035d5a511",
  "Root": {
    "alive": true,
    "content": [
      "f102f8e3-3154-4af5-b302-094c5862277d",
      "3f688ea3-13d0-4a1a-913e-f5c73dd47c2f",
      "a8498691-546c-4539-957c-0bb0edf7be34"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549530208451,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "dc381435-577f-4495-baba-e49035d5a511",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550223660000,
    "parent_id": "657b0c9d-9132-4296-a3f3-f027f19fcd31",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Writing Zip Files in-memory"
        ]
      ]
    },
    "type": "page",
    "version": 13,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530208448,
        "id": "f102f8e3-3154-4af5-b302-094c5862277d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530208448,
        "parent_id": "dc381435-577f-4495-baba-e49035d5a511",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following example will return the "
            ],
            [
              "byte[]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " data of a zipped file containing the files provided to it, without needing access to the file system."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following example will return the "
          },
          {
            "Text": "byte[]",
            "AttrFlags": 2
          },
          {
            "Text": " data of a zipped file containing the files provided to it, without needing access to the file system."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550223673348,
        "id": "3f688ea3-13d0-4a1a-913e-f5c73dd47c2f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550223660000,
        "parent_id": "dc381435-577f-4495-baba-e49035d5a511",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public static byte[] ZipFiles(Dictionary\u003cstring, byte[]\u003e files)\n{\n    using (MemoryStream ms = new MemoryStream())\n    {\n        using (ZipArchive archive = new ZipArchive(ms, ZipArchiveMode.Update))\n        {\n            foreach (var file in files)\n            {\n                ZipArchiveEntry orderEntry = archive.CreateEntry(file.Key); //create a file with this name\n                using (BinaryWriter writer = new BinaryWriter(orderEntry.Open()))\n                {\n                    writer.Write(file.Value); //write the binary data\n                }\n            }\n        }\n        //ZipArchive must be disposed before the MemoryStream has data\n        return ms.ToArray();\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "public static byte[] ZipFiles(Dictionary\u003cstring, byte[]\u003e files)\n{\n    using (MemoryStream ms = new MemoryStream())\n    {\n        using (ZipArchive archive = new ZipArchive(ms, ZipArchiveMode.Update))\n        {\n            foreach (var file in files)\n            {\n                ZipArchiveEntry orderEntry = archive.CreateEntry(file.Key); //create a file with this name\n                using (BinaryWriter writer = new BinaryWriter(orderEntry.Open()))\n                {\n                    writer.Write(file.Value); //write the binary data\n                }\n            }\n        }\n        //ZipArchive must be disposed before the MemoryStream has data\n        return ms.ToArray();\n    }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550223660000,
        "id": "a8498691-546c-4539-957c-0bb0edf7be34",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550223660000,
        "parent_id": "dc381435-577f-4495-baba-e49035d5a511",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "Writing Zip Files in-memory",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}