{
  "ID": "58df685b-5f3f-4077-8550-2bb44b3e4671",
  "Root": {
    "id": "58df685b-5f3f-4077-8550-2bb44b3e4671",
    "alive": true,
    "content": [
      "b8712638-a2d6-4ad9-8208-c7272da522c1",
      "662e7dfc-ae56-450f-90b7-c3a72b767151",
      "09f674e5-8822-44d7-9a73-bd438c6ff814",
      "7848c8dc-26a0-4d7b-8948-477aa46e8062",
      "e0cc0852-d699-48a0-ab42-36ace19c0c7b",
      "0ed02f2f-b9ad-452a-b538-879d6c881656",
      "cc82df92-9df6-4951-8378-e9fdb5d041ec",
      "58c03af0-4b29-4824-a406-bf197684f9fa",
      "6b1eb2a0-6724-4075-8ef4-1ecf2c403850",
      "9f2d9329-cf41-43a4-b73b-38503e3bc6f7",
      "46bc678d-1857-48ce-9bcf-a968901def4a",
      "a73ffe7a-3a93-46bc-9cfa-93357c222534"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549526095294,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550126580000,
    "parent_id": "a34c1078-f01c-44b1-b468-522f804fbc2d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Contains"
        ]
      ]
    },
    "type": "page",
    "version": 18,
    "content_resolved": [
      {
        "id": "b8712638-a2d6-4ad9-8208-c7272da522c1",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526095290,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526095290,
        "parent_id": "58df685b-5f3f-4077-8550-2bb44b3e4671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "MSDN:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "MSDN:"
          }
        ]
      },
      {
        "id": "662e7dfc-ae56-450f-90b7-c3a72b767151",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526095292,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526095292,
        "parent_id": "58df685b-5f3f-4077-8550-2bb44b3e4671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Determines whether a sequence contains a specified element by using a specified IEqualityComparer\u003cT\u003e"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Determines whether a sequence contains a specified element by using a specified IEqualityComparer\u003cT\u003e"
          }
        ]
      },
      {
        "id": "09f674e5-8822-44d7-9a73-bd438c6ff814",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526095293,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550126460000,
        "parent_id": "58df685b-5f3f-4077-8550-2bb44b3e4671",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "List\u003cint\u003e numbers = new List\u003cint\u003e { 1, 2, 3, 4, 5 };\nvar result1 = numbers.Contains(4); // true\nvar result2 = numbers.Contains(8); // false\n\nList\u003cint\u003e secondNumberCollection = new List\u003cint\u003e { 4, 5, 6, 7 };\n// Note that can use the Intersect method in this case\nvar result3 = secondNumberCollection.Where(item =\u003e numbers.Contains(item)); // will be true only for 4,5"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "List\u003cint\u003e numbers = new List\u003cint\u003e { 1, 2, 3, 4, 5 };\nvar result1 = numbers.Contains(4); // true\nvar result2 = numbers.Contains(8); // false\n\nList\u003cint\u003e secondNumberCollection = new List\u003cint\u003e { 4, 5, 6, 7 };\n// Note that can use the Intersect method in this case\nvar result3 = secondNumberCollection.Where(item =\u003e numbers.Contains(item)); // will be true only for 4,5",
        "code_language": "C#"
      },
      {
        "id": "7848c8dc-26a0-4d7b-8948-477aa46e8062",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526095293,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526095293,
        "parent_id": "58df685b-5f3f-4077-8550-2bb44b3e4671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using a user defined object:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using a user defined object:"
          }
        ]
      },
      {
        "id": "e0cc0852-d699-48a0-ab42-36ace19c0c7b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526095293,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550126520000,
        "parent_id": "58df685b-5f3f-4077-8550-2bb44b3e4671",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class Person\n{\n   public string Name { get; set; }\n}\n\nList\u003cPerson\u003e objects = new List\u003cPerson\u003e\n{\n    new Person { Name = \"Nikki\"},\n    new Person { Name = \"Gilad\"},\n    new Person { Name = \"Phil\"},\n    new Person { Name = \"John\"}\n};\n\n// Using the Person's Equals method - override Equals() and GetHashCode() - otherwise it\n// will compare by reference and result will be false\nvar result4 = objects.Contains(new Person { Name = \"Phil\" }); // true"
            ]
          ]
        },
        "type": "code",
        "version": 16,
        "code": "public class Person\n{\n   public string Name { get; set; }\n}\n\nList\u003cPerson\u003e objects = new List\u003cPerson\u003e\n{\n    new Person { Name = \"Nikki\"},\n    new Person { Name = \"Gilad\"},\n    new Person { Name = \"Phil\"},\n    new Person { Name = \"John\"}\n};\n\n// Using the Person's Equals method - override Equals() and GetHashCode() - otherwise it\n// will compare by reference and result will be false\nvar result4 = objects.Contains(new Person { Name = \"Phil\" }); // true",
        "code_language": "C#"
      },
      {
        "id": "0ed02f2f-b9ad-452a-b538-879d6c881656",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526095293,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526095293,
        "parent_id": "58df685b-5f3f-4077-8550-2bb44b3e4671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using the "
            ],
            [
              "Enumerable.Contains(value, comparer)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " overload:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using the "
          },
          {
            "Text": "Enumerable.Contains(value, comparer)",
            "AttrFlags": 2
          },
          {
            "Text": " overload:"
          }
        ]
      },
      {
        "id": "cc82df92-9df6-4951-8378-e9fdb5d041ec",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526095293,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550126520000,
        "parent_id": "58df685b-5f3f-4077-8550-2bb44b3e4671",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class Compare : IEqualityComparer\u003cPerson\u003e\n{\n    public bool Equals(Person x, Person y)\n    {\n        return x.Name == y.Name;\n    }\n    public int GetHashCode(Person codeh)\n    {\n        return codeh.Name.GetHashCode();\n    }\n}\n\nvar result5 = objects.Contains(new Person { Name = \"Phil\" }, new Compare()); // true"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "public class Compare : IEqualityComparer\u003cPerson\u003e\n{\n    public bool Equals(Person x, Person y)\n    {\n        return x.Name == y.Name;\n    }\n    public int GetHashCode(Person codeh)\n    {\n        return codeh.Name.GetHashCode();\n    }\n}\n\nvar result5 = objects.Contains(new Person { Name = \"Phil\" }, new Compare()); // true",
        "code_language": "C#"
      },
      {
        "id": "58c03af0-4b29-4824-a406-bf197684f9fa",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526095294,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526095294,
        "parent_id": "58df685b-5f3f-4077-8550-2bb44b3e4671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A smart usage of ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "Contains",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " would be to replace multiple ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "if",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " clauses to a ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "Contains",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " call.",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A smart usage of ",
            "AttrFlags": 1
          },
          {
            "Text": "Contains",
            "AttrFlags": 3
          },
          {
            "Text": " would be to replace multiple ",
            "AttrFlags": 1
          },
          {
            "Text": "if",
            "AttrFlags": 3
          },
          {
            "Text": " clauses to a ",
            "AttrFlags": 1
          },
          {
            "Text": "Contains",
            "AttrFlags": 3
          },
          {
            "Text": " call.",
            "AttrFlags": 1
          }
        ]
      },
      {
        "id": "6b1eb2a0-6724-4075-8ef4-1ecf2c403850",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526095294,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526095294,
        "parent_id": "58df685b-5f3f-4077-8550-2bb44b3e4671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So instead of doing this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So instead of doing this:"
          }
        ]
      },
      {
        "id": "9f2d9329-cf41-43a4-b73b-38503e3bc6f7",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526095294,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550126520000,
        "parent_id": "58df685b-5f3f-4077-8550-2bb44b3e4671",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "if(status == 1 || status == 3 || status == 4)\n{\n    //Do some business operation\n}\nelse\n{\n    //Do something else\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "if(status == 1 || status == 3 || status == 4)\n{\n    //Do some business operation\n}\nelse\n{\n    //Do something else\n}",
        "code_language": "C#"
      },
      {
        "id": "46bc678d-1857-48ce-9bcf-a968901def4a",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526095294,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526095294,
        "parent_id": "58df685b-5f3f-4077-8550-2bb44b3e4671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Do this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Do this:"
          }
        ]
      },
      {
        "id": "a73ffe7a-3a93-46bc-9cfa-93357c222534",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550126581364,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550126580000,
        "parent_id": "58df685b-5f3f-4077-8550-2bb44b3e4671",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "if (new int[] {1, 3, 4 }.Contains(status)\n{\n    //Do some business operaion\n}\nelse \n{\n    //Do something else\n}"
            ]
          ]
        },
        "type": "code",
        "version": 11,
        "code": "if (new int[] {1, 3, 4 }.Contains(status)\n{\n    //Do some business operaion\n}\nelse \n{\n    //Do something else\n}",
        "code_language": "C#"
      }
    ],
    "title": "Contains",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}