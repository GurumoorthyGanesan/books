{
  "ID": "343eaae8-426a-473b-9536-bde22485649a",
  "Root": {
    "alive": true,
    "content": [
      "81bb92b3-9d06-424c-b527-7a54e816d48d",
      "28404f6e-0b6b-4fe6-bd30-ec8a32ba0285",
      "240bbbe2-e5f2-4faf-9853-9ab7ebbd5f59",
      "a48b185f-3b23-4630-84aa-49d1756b57be",
      "b475cbca-15c6-4365-8ce4-5277959947fd"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549526089284,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "343eaae8-426a-473b-9536-bde22485649a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550126280000,
    "parent_id": "a34c1078-f01c-44b1-b468-522f804fbc2d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Distinct"
        ]
      ]
    },
    "type": "page",
    "version": 13,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526089282,
        "id": "81bb92b3-9d06-424c-b527-7a54e816d48d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526089282,
        "parent_id": "343eaae8-426a-473b-9536-bde22485649a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Returns unique values from an "
            ],
            [
              "IEnumerable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Uniqueness is determined using the default equality comparer."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Returns unique values from an "
          },
          {
            "Text": "IEnumerable",
            "AttrFlags": 2
          },
          {
            "Text": ". Uniqueness is determined using the default equality comparer."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526089283,
        "id": "28404f6e-0b6b-4fe6-bd30-ec8a32ba0285",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550126220000,
        "parent_id": "343eaae8-426a-473b-9536-bde22485649a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "int[] array = { 1, 2, 3, 4, 2, 5, 3, 1, 2 };\n\nvar distinct = array.Distinct();\n// distinct = { 1, 2, 3, 4, 5 }"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "int[] array = { 1, 2, 3, 4, 2, 5, 3, 1, 2 };\n\nvar distinct = array.Distinct();\n// distinct = { 1, 2, 3, 4, 5 }",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526089283,
        "id": "240bbbe2-e5f2-4faf-9853-9ab7ebbd5f59",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526089283,
        "parent_id": "343eaae8-426a-473b-9536-bde22485649a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To compare a custom data type, we need to implement the "
            ],
            [
              "IEquatable\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface and provide "
            ],
            [
              "GetHashCode",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Equals",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " methods for the type. Or the equality comparer may be overridden:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To compare a custom data type, we need to implement the "
          },
          {
            "Text": "IEquatable\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " interface and provide "
          },
          {
            "Text": "GetHashCode",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Equals",
            "AttrFlags": 2
          },
          {
            "Text": " methods for the type. Or the equality comparer may be overridden:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526089283,
        "id": "a48b185f-3b23-4630-84aa-49d1756b57be",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550126280000,
        "parent_id": "343eaae8-426a-473b-9536-bde22485649a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "class SSNEqualityComparer : IEqualityComparer\u003cPerson\u003e {\n    public bool Equals(Person a, Person b) =\u003e return a.SSN == b.SSN;\n    public int GetHashCode(Person p) =\u003e p.SSN;\n}\n\nList\u003cPerson\u003e people;\n\ndistinct = people.Distinct(SSNEqualityComparer);"
            ]
          ]
        },
        "type": "code",
        "version": 10,
        "code": "class SSNEqualityComparer : IEqualityComparer\u003cPerson\u003e {\n    public bool Equals(Person a, Person b) =\u003e return a.SSN == b.SSN;\n    public int GetHashCode(Person p) =\u003e p.SSN;\n}\n\nList\u003cPerson\u003e people;\n\ndistinct = people.Distinct(SSNEqualityComparer);",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550126280000,
        "id": "b475cbca-15c6-4365-8ce4-5277959947fd",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550126280000,
        "parent_id": "343eaae8-426a-473b-9536-bde22485649a",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "Distinct",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}