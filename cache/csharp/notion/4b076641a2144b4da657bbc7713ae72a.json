{
  "ID": "4b076641-a214-4b4d-a657-bbc7713ae72a",
  "Root": {
    "id": "4b076641-a214-4b4d-a657-bbc7713ae72a",
    "alive": true,
    "content": [
      "f80da058-f9dd-4056-9cfe-fe3d613945b8",
      "f1d64af1-b966-46a1-b863-eadc71ce7a4b",
      "4405e579-56b9-45ba-8c20-3ad40bb15024",
      "7ce40372-841c-4c0c-81ee-9a4e4869f405",
      "631ed0c6-a75e-42b9-8491-bafbe69fa68f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549526080582,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550125740000,
    "parent_id": "a34c1078-f01c-44b1-b468-522f804fbc2d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "09Defining a variable inside a Linq query let keyword"
        ]
      ]
    },
    "type": "page",
    "version": 20,
    "content_resolved": [
      {
        "id": "f80da058-f9dd-4056-9cfe-fe3d613945b8",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526080580,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526080580,
        "parent_id": "4b076641-a214-4b4d-a657-bbc7713ae72a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In order to define a variable inside a linq expression, you can use the "
            ],
            [
              "let",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " keyword. This is usually done in order to store the results of intermediate sub-queries, for example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In order to define a variable inside a linq expression, you can use the "
          },
          {
            "Text": "let",
            "AttrFlags": 1
          },
          {
            "Text": " keyword. This is usually done in order to store the results of intermediate sub-queries, for example:"
          }
        ]
      },
      {
        "id": "f1d64af1-b966-46a1-b863-eadc71ce7a4b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526080581,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550125680000,
        "parent_id": "4b076641-a214-4b4d-a657-bbc7713ae72a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "int[] numbers = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };\n\nvar aboveAverages = from number in numbers\n                   let average = numbers.Average()\n                   let nSquared = Math.Pow(number,2)\n                   where nSquared \u003e average\n                   select number;\n\nConsole.WriteLine(\"The average of the numbers is {0}.\", numbers.Average());\n\nforeach (int n in aboveAverages)\n{\n\tConsole.WriteLine(\"Query result includes number {0} with square of {1}.\", n, Math.Pow(n,2));\n}"
            ]
          ]
        },
        "type": "code",
        "version": 12,
        "code": "int[] numbers = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };\n\nvar aboveAverages = from number in numbers\n                   let average = numbers.Average()\n                   let nSquared = Math.Pow(number,2)\n                   where nSquared \u003e average\n                   select number;\n\nConsole.WriteLine(\"The average of the numbers is {0}.\", numbers.Average());\n\nforeach (int n in aboveAverages)\n{\n\tConsole.WriteLine(\"Query result includes number {0} with square of {1}.\", n, Math.Pow(n,2));\n}",
        "code_language": "C#"
      },
      {
        "id": "4405e579-56b9-45ba-8c20-3ad40bb15024",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526080581,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526080581,
        "parent_id": "4b076641-a214-4b4d-a657-bbc7713ae72a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "id": "7ce40372-841c-4c0c-81ee-9a4e4869f405",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526080581,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550125740000,
        "parent_id": "4b076641-a214-4b4d-a657-bbc7713ae72a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The average of the numbers is 4.5.\nQuery result includes number 3 with square of 9.\nQuery result includes number 4 with square of 16.\nQuery result includes number 5 with square of 25.\nQuery result includes number 6 with square of 36.\nQuery result includes number 7 with square of 49.\nQuery result includes number 8 with square of 64.\nQuery result includes number 9 with square of 81."
            ]
          ]
        },
        "type": "quote",
        "version": 16,
        "inline_content": [
          {
            "Text": "The average of the numbers is 4.5.\nQuery result includes number 3 with square of 9.\nQuery result includes number 4 with square of 16.\nQuery result includes number 5 with square of 25.\nQuery result includes number 6 with square of 36.\nQuery result includes number 7 with square of 49.\nQuery result includes number 8 with square of 64.\nQuery result includes number 9 with square of 81."
          }
        ]
      },
      {
        "id": "631ed0c6-a75e-42b9-8491-bafbe69fa68f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526080582,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526080582,
        "parent_id": "4b076641-a214-4b4d-a657-bbc7713ae72a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "View Demo",
              [
                [
                  "a",
                  "https://dotnetfiddle.net/zbjrHZ"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "View Demo",
            "Link": "https://dotnetfiddle.net/zbjrHZ"
          }
        ]
      }
    ],
    "title": "09Defining a variable inside a Linq query let keyword",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}