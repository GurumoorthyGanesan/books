{
  "ID": "207e3bb6-a2fe-4f5b-919e-617019228691",
  "Root": {
    "id": "207e3bb6-a2fe-4f5b-919e-617019228691",
    "alive": true,
    "content": [
      "f637d02e-1d76-4a26-9943-e14857740322",
      "c0bb7cde-3281-427b-a108-3098731df390",
      "5987a77e-347f-41ee-8309-642f3cc9f663",
      "25640ad0-8848-4211-a848-68189aea955b",
      "262fa12f-b5ce-4e19-a0eb-685ff683ff3e",
      "73623da3-e5a0-45ae-a161-38bbd08d78b9",
      "e5a186a2-7ac0-4e09-9b61-5496337b4340",
      "a413f23e-0667-4edf-89c5-e47d260d4ba1",
      "f26df650-d5bd-4d1f-9974-911329af5e43",
      "d05f772d-f443-42e7-8c17-babc2e0765d4",
      "c795bef9-65b0-4c60-9a7c-f22c7dde50fa",
      "2f13a27a-d5b0-4e28-a2f0-04d1f13bbd43",
      "3441b301-dd4c-4429-a122-0e53f9c1c833",
      "ebf4e927-fa38-4c5c-8146-361dbce4f069",
      "9821e483-accb-4915-bb7a-7146eea538db",
      "e563d5e8-6382-40b1-beec-062add6775f5",
      "951e2d4b-bae1-47c9-bbce-03dffc2da74f",
      "5d498042-8422-4afa-8cbe-c5bfa5d9eecf",
      "174c8ef3-2230-43e8-b1e2-7d86b1e68dd3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549528047588,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550206860000,
    "parent_id": "6edb5732-40b8-4df6-b8a8-809fb1164d58",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "out var declaration"
        ]
      ]
    },
    "type": "page",
    "version": 11,
    "content_resolved": [
      {
        "id": "f637d02e-1d76-4a26-9943-e14857740322",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528047579,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528047579,
        "parent_id": "207e3bb6-a2fe-4f5b-919e-617019228691",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A common pattern in C# is using "
            ],
            [
              "bool TryParse(object input, out object value)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to safely parse objects."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A common pattern in C# is using "
          },
          {
            "Text": "bool TryParse(object input, out object value)",
            "AttrFlags": 2
          },
          {
            "Text": " to safely parse objects."
          }
        ]
      },
      {
        "id": "c0bb7cde-3281-427b-a108-3098731df390",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528047581,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528047581,
        "parent_id": "207e3bb6-a2fe-4f5b-919e-617019228691",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "out var",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " declaration is a simple feature to improve readability. It allows a variable to be declared at the same time that is it passed as an out parameter."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "out var",
            "AttrFlags": 2
          },
          {
            "Text": " declaration is a simple feature to improve readability. It allows a variable to be declared at the same time that is it passed as an out parameter."
          }
        ]
      },
      {
        "id": "5987a77e-347f-41ee-8309-642f3cc9f663",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528047582,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528047582,
        "parent_id": "207e3bb6-a2fe-4f5b-919e-617019228691",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A variable declared this way is scoped to the remainder of the body at the point in which it is declared."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A variable declared this way is scoped to the remainder of the body at the point in which it is declared."
          }
        ]
      },
      {
        "id": "25640ad0-8848-4211-a848-68189aea955b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528047582,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528047582,
        "parent_id": "207e3bb6-a2fe-4f5b-919e-617019228691",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example"
          }
        ]
      },
      {
        "id": "262fa12f-b5ce-4e19-a0eb-685ff683ff3e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528047582,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528047582,
        "parent_id": "207e3bb6-a2fe-4f5b-919e-617019228691",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using "
            ],
            [
              "TryParse",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " prior to C# 7.0, you must declare a variable to receive the value before calling the function:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using "
          },
          {
            "Text": "TryParse",
            "AttrFlags": 2
          },
          {
            "Text": " prior to C# 7.0, you must declare a variable to receive the value before calling the function:"
          }
        ]
      },
      {
        "id": "73623da3-e5a0-45ae-a161-38bbd08d78b9",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528047582,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550206860000,
        "parent_id": "207e3bb6-a2fe-4f5b-919e-617019228691",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "int value;\nif (int.TryParse(input, out value)) \n{\n    Foo(value); // ok\n}\nelse\n{\n    Foo(value); // value is zero\n}\n\nFoo(value); // ok"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "int value;\nif (int.TryParse(input, out value)) \n{\n    Foo(value); // ok\n}\nelse\n{\n    Foo(value); // value is zero\n}\n\nFoo(value); // ok",
        "code_language": "C#"
      },
      {
        "id": "e5a186a2-7ac0-4e09-9b61-5496337b4340",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528047584,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528047584,
        "parent_id": "207e3bb6-a2fe-4f5b-919e-617019228691",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In C# 7.0, you can inline the declaration of the variable passed to the "
            ],
            [
              "out",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " parameter, eliminating the need for a separate variable declaration:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In C# 7.0, you can inline the declaration of the variable passed to the "
          },
          {
            "Text": "out",
            "AttrFlags": 2
          },
          {
            "Text": " parameter, eliminating the need for a separate variable declaration:"
          }
        ]
      },
      {
        "id": "a413f23e-0667-4edf-89c5-e47d260d4ba1",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528047584,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550206860000,
        "parent_id": "207e3bb6-a2fe-4f5b-919e-617019228691",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "if (int.TryParse(input, out var value)) \n{\n    Foo(value); // ok\n}\nelse\n{\n    Foo(value); // value is zero\n}\n\nFoo(value); // still ok, the value in scope within the remainder of the body"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "if (int.TryParse(input, out var value)) \n{\n    Foo(value); // ok\n}\nelse\n{\n    Foo(value); // value is zero\n}\n\nFoo(value); // still ok, the value in scope within the remainder of the body",
        "code_language": "C#"
      },
      {
        "id": "f26df650-d5bd-4d1f-9974-911329af5e43",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528047585,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528047585,
        "parent_id": "207e3bb6-a2fe-4f5b-919e-617019228691",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If some of the parameters that a function returns in "
            ],
            [
              "out",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not needed you can use the "
            ],
            [
              "discard",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " operator "
            ],
            [
              "\\_",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If some of the parameters that a function returns in "
          },
          {
            "Text": "out",
            "AttrFlags": 2
          },
          {
            "Text": " is not needed you can use the "
          },
          {
            "Text": "discard",
            "AttrFlags": 4
          },
          {
            "Text": " operator "
          },
          {
            "Text": "\\_",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "d05f772d-f443-42e7-8c17-babc2e0765d4",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528047585,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550206860000,
        "parent_id": "207e3bb6-a2fe-4f5b-919e-617019228691",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "p.GetCoordinates(out var x, out _); // I only care about x"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "p.GetCoordinates(out var x, out _); // I only care about x",
        "code_language": "C#"
      },
      {
        "id": "c795bef9-65b0-4c60-9a7c-f22c7dde50fa",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528047585,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528047585,
        "parent_id": "207e3bb6-a2fe-4f5b-919e-617019228691",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An "
            ],
            [
              "out var",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " declaration can be used with any existing function which already has "
            ],
            [
              "out",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " parameters. The function declaration syntax remains the same, and no additional requirements are needed to make the function compatible with an "
            ],
            [
              "out var",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " declaration. This feature is simply syntactic sugar."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An "
          },
          {
            "Text": "out var",
            "AttrFlags": 2
          },
          {
            "Text": " declaration can be used with any existing function which already has "
          },
          {
            "Text": "out",
            "AttrFlags": 2
          },
          {
            "Text": " parameters. The function declaration syntax remains the same, and no additional requirements are needed to make the function compatible with an "
          },
          {
            "Text": "out var",
            "AttrFlags": 2
          },
          {
            "Text": " declaration. This feature is simply syntactic sugar."
          }
        ]
      },
      {
        "id": "2f13a27a-d5b0-4e28-a2f0-04d1f13bbd43",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528047585,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528047585,
        "parent_id": "207e3bb6-a2fe-4f5b-919e-617019228691",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another feature of "
            ],
            [
              "out var",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " declaration is that it can be used with anonymous types."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another feature of "
          },
          {
            "Text": "out var",
            "AttrFlags": 2
          },
          {
            "Text": " declaration is that it can be used with anonymous types."
          }
        ]
      },
      {
        "id": "3441b301-dd4c-4429-a122-0e53f9c1c833",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528047585,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550206860000,
        "parent_id": "207e3bb6-a2fe-4f5b-919e-617019228691",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "var a = new[] { 1, 2, 3, 4, 5, 6, 7, 8, 9 };\nvar groupedByMod2 = a.Select(x =\u003e new\n                                  {\n                                      Source = x,\n                                      Mod2 = x % 2\n                                  })\n                     .GroupBy(x =\u003e x.Mod2)\n                     .ToDictionary(g =\u003e g.Key, g =\u003e g.ToArray());\nif (groupedByMod2.TryGetValue(1, out var oddElements))\n{\n    Console.WriteLine(oddElements.Length);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var a = new[] { 1, 2, 3, 4, 5, 6, 7, 8, 9 };\nvar groupedByMod2 = a.Select(x =\u003e new\n                                  {\n                                      Source = x,\n                                      Mod2 = x % 2\n                                  })\n                     .GroupBy(x =\u003e x.Mod2)\n                     .ToDictionary(g =\u003e g.Key, g =\u003e g.ToArray());\nif (groupedByMod2.TryGetValue(1, out var oddElements))\n{\n    Console.WriteLine(oddElements.Length);\n}",
        "code_language": "C#"
      },
      {
        "id": "ebf4e927-fa38-4c5c-8146-361dbce4f069",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528047586,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528047586,
        "parent_id": "207e3bb6-a2fe-4f5b-919e-617019228691",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this code we create a "
            ],
            [
              "Dictionary",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " key and array of anonymous type value. In the previous version of C# it was impossible to use "
            ],
            [
              "TryGetValue",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method here since it required you to declare the "
            ],
            [
              "out",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variable (which is of anonymous type!). However, with "
            ],
            [
              "out var",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " we do not need to explicitly specify the type of the "
            ],
            [
              "out",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this code we create a "
          },
          {
            "Text": "Dictionary",
            "AttrFlags": 2
          },
          {
            "Text": " with "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " key and array of anonymous type value. In the previous version of C# it was impossible to use "
          },
          {
            "Text": "TryGetValue",
            "AttrFlags": 2
          },
          {
            "Text": " method here since it required you to declare the "
          },
          {
            "Text": "out",
            "AttrFlags": 2
          },
          {
            "Text": " variable (which is of anonymous type!). However, with "
          },
          {
            "Text": "out var",
            "AttrFlags": 2
          },
          {
            "Text": " we do not need to explicitly specify the type of the "
          },
          {
            "Text": "out",
            "AttrFlags": 2
          },
          {
            "Text": " variable."
          }
        ]
      },
      {
        "id": "9821e483-accb-4915-bb7a-7146eea538db",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528047586,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528047586,
        "parent_id": "207e3bb6-a2fe-4f5b-919e-617019228691",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Limitations"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Limitations"
          }
        ]
      },
      {
        "id": "e563d5e8-6382-40b1-beec-062add6775f5",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528047586,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528047586,
        "parent_id": "207e3bb6-a2fe-4f5b-919e-617019228691",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that out var declarations are of limited use in LINQ queries as expressions are interpreted as expression lambda bodies, so the scope of the introduced variables is limited to these lambdas. For example, the following code will not work:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that out var declarations are of limited use in LINQ queries as expressions are interpreted as expression lambda bodies, so the scope of the introduced variables is limited to these lambdas. For example, the following code will not work:"
          }
        ]
      },
      {
        "id": "951e2d4b-bae1-47c9-bbce-03dffc2da74f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528047586,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550206860000,
        "parent_id": "207e3bb6-a2fe-4f5b-919e-617019228691",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "var nums = \n    from item in seq\n    let success = int.TryParse(item, out var tmp)\n    select success ? tmp : 0; // Error: The name 'tmp' does not exist in the current context"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var nums = \n    from item in seq\n    let success = int.TryParse(item, out var tmp)\n    select success ? tmp : 0; // Error: The name 'tmp' does not exist in the current context",
        "code_language": "C#"
      },
      {
        "id": "5d498042-8422-4afa-8cbe-c5bfa5d9eecf",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528047586,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528047586,
        "parent_id": "207e3bb6-a2fe-4f5b-919e-617019228691",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "References"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "References"
          }
        ]
      },
      {
        "id": "174c8ef3-2230-43e8-b1e2-7d86b1e68dd3",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528047588,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528047588,
        "parent_id": "207e3bb6-a2fe-4f5b-919e-617019228691",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Original out var declaration proposal on GitHub",
              [
                [
                  "a",
                  "https://github.com/dotnet/roslyn/issues/6183"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Original out var declaration proposal on GitHub",
            "Link": "https://github.com/dotnet/roslyn/issues/6183"
          }
        ]
      }
    ],
    "title": "out var declaration",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}