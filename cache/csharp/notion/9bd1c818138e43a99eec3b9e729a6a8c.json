{
  "ID": "9bd1c818-138e-43a9-9eec-3b9e729a6a8c",
  "Root": {
    "alive": true,
    "content": [
      "53c6ed52-d93b-447c-8daf-317268028595",
      "4c23aa46-dcfa-4ed7-b0ca-48ff0c5a0715",
      "814d23ac-09d8-4ca9-afcf-30172e9efbcf",
      "fe667206-69d7-4ce9-a609-de56d2fbf0bf"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525485605,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "9bd1c818-138e-43a9-9eec-3b9e729a6a8c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550046840000,
    "parent_id": "9ff3cc78-9f6a-4238-a0a8-e9d9c0209cf7",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Nesting of Exceptions try catch blocks."
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525485601,
        "id": "53c6ed52-d93b-447c-8daf-317268028595",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525485601,
        "parent_id": "9bd1c818-138e-43a9-9eec-3b9e729a6a8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One is able to nest one exception / "
            ],
            [
              "try",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block inside the other."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One is able to nest one exception / "
          },
          {
            "Text": "try",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "catch",
            "AttrFlags": 2
          },
          {
            "Text": " block inside the other."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525485603,
        "id": "4c23aa46-dcfa-4ed7-b0ca-48ff0c5a0715",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525485603,
        "parent_id": "9bd1c818-138e-43a9-9eec-3b9e729a6a8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This way one can manage small blocks of code which are capable of working without disrupting your whole mechanism."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This way one can manage small blocks of code which are capable of working without disrupting your whole mechanism."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525485604,
        "id": "814d23ac-09d8-4ca9-afcf-30172e9efbcf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550046840000,
        "parent_id": "9bd1c818-138e-43a9-9eec-3b9e729a6a8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "try \n{\n\t\t// some code here\n    try \n    {\n        // some thing which throws an exception. For Eg : divide by 0\n    }\n    catch (DivideByZeroException dzEx)\n    {\n        // handle here only this exception\n        // throw from here will be passed on to the parent catch block\n    }\n    finally\n    {\n        //any thing to do after it is done.\n    }\n\t  // resume from here \u0026 proceed as normal; \n}\ncatch (Exception e)\n{\n    // handle here\n}"
            ]
          ]
        },
        "type": "code",
        "version": 16,
        "code": "try \n{\n\t\t// some code here\n    try \n    {\n        // some thing which throws an exception. For Eg : divide by 0\n    }\n    catch (DivideByZeroException dzEx)\n    {\n        // handle here only this exception\n        // throw from here will be passed on to the parent catch block\n    }\n    finally\n    {\n        //any thing to do after it is done.\n    }\n\t  // resume from here \u0026 proceed as normal; \n}\ncatch (Exception e)\n{\n    // handle here\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525485605,
        "id": "fe667206-69d7-4ce9-a609-de56d2fbf0bf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525485605,
        "parent_id": "9bd1c818-138e-43a9-9eec-3b9e729a6a8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Avoid "
            ],
            [
              "Swallowing Exceptions",
              [
                [
                  "a",
                  "https://stackoverflow.com/documentation/c%23/40/exception-handling/6940/exception-anti-patterns#t=201707281310293021372"
                ]
              ]
            ],
            [
              " when throwing to the parent catch block"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note:",
            "AttrFlags": 1
          },
          {
            "Text": " Avoid "
          },
          {
            "Text": "Swallowing Exceptions",
            "Link": "https://stackoverflow.com/documentation/c%23/40/exception-handling/6940/exception-anti-patterns#t=201707281310293021372"
          },
          {
            "Text": " when throwing to the parent catch block"
          }
        ]
      }
    ],
    "title": "Nesting of Exceptions try catch blocks.",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}