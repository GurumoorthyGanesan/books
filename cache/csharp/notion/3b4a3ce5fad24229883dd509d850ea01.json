{
  "ID": "3b4a3ce5-fad2-4229-883d-d509d850ea01",
  "Root": {
    "id": "3b4a3ce5-fad2-4229-883d-d509d850ea01",
    "alive": true,
    "content": [
      "c0202597-cf39-468b-b128-d36650f6a1b4",
      "63a48c9a-1015-495c-8642-1e1f72c99b2e",
      "ec00326d-4557-436f-8466-b16044ebf827",
      "073230c5-f4f6-4e89-8e1d-3d049ed0bb7e",
      "0cbf0b2f-da16-48d7-b740-9cae3db7f4c3",
      "bf8f3000-5f93-4bc3-a884-d09b0e0d30cb",
      "e9b24124-5f3a-4315-beea-581095c1b0a7",
      "122e1ec5-f023-4070-ad8e-8f4592813567",
      "76be7be0-2d88-4a05-be1d-7ebf50775b96",
      "ca6cb2fd-446b-4140-af39-2560f5a57267"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549528046311,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550206800000,
    "parent_id": "6edb5732-40b8-4df6-b8a8-809fb1164d58",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Local functions"
        ]
      ]
    },
    "type": "page",
    "version": 16,
    "content_resolved": [
      {
        "id": "c0202597-cf39-468b-b128-d36650f6a1b4",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528046306,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528046306,
        "parent_id": "3b4a3ce5-fad2-4229-883d-d509d850ea01",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Local functions are defined within a method and aren’t available outside of it. They have access to all local variables and support iterators, "
            ],
            [
              "async",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "/"
            ],
            [
              "await",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and lambda syntax. This way, repetitions specific to a function can be functionalized without crowding the class. As a side effect, this improves intellisense suggestion performance."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Local functions are defined within a method and aren’t available outside of it. They have access to all local variables and support iterators, "
          },
          {
            "Text": "async",
            "AttrFlags": 2
          },
          {
            "Text": "/"
          },
          {
            "Text": "await",
            "AttrFlags": 2
          },
          {
            "Text": " and lambda syntax. This way, repetitions specific to a function can be functionalized without crowding the class. As a side effect, this improves intellisense suggestion performance."
          }
        ]
      },
      {
        "id": "63a48c9a-1015-495c-8642-1e1f72c99b2e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528046308,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528046308,
        "parent_id": "3b4a3ce5-fad2-4229-883d-d509d850ea01",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example"
          }
        ]
      },
      {
        "id": "ec00326d-4557-436f-8466-b16044ebf827",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528046309,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550206800000,
        "parent_id": "3b4a3ce5-fad2-4229-883d-d509d850ea01",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "double GetCylinderVolume(double radius, double height)\n{\n    return getVolume();\n\n    double getVolume()\n    {\n        // You can declare inner-local functions in a local function \n        double GetCircleArea(double r) =\u003e Math.PI * r * r;\n\n        // ALL parents' variables are accessible even though parent doesn't have any input. \n        return GetCircleArea(radius) * height;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "double GetCylinderVolume(double radius, double height)\n{\n    return getVolume();\n\n    double getVolume()\n    {\n        // You can declare inner-local functions in a local function \n        double GetCircleArea(double r) =\u003e Math.PI * r * r;\n\n        // ALL parents' variables are accessible even though parent doesn't have any input. \n        return GetCircleArea(radius) * height;\n    }\n}",
        "code_language": "C#"
      },
      {
        "id": "073230c5-f4f6-4e89-8e1d-3d049ed0bb7e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528046309,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528046309,
        "parent_id": "3b4a3ce5-fad2-4229-883d-d509d850ea01",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Local functions considerably simplify code for LINQ operators, where you usually have to separate argument checks from actual logic to make argument checks instant, not delayed until after iteration started."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Local functions considerably simplify code for LINQ operators, where you usually have to separate argument checks from actual logic to make argument checks instant, not delayed until after iteration started."
          }
        ]
      },
      {
        "id": "0cbf0b2f-da16-48d7-b740-9cae3db7f4c3",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528046309,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528046309,
        "parent_id": "3b4a3ce5-fad2-4229-883d-d509d850ea01",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example"
          }
        ]
      },
      {
        "id": "bf8f3000-5f93-4bc3-a884-d09b0e0d30cb",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528046309,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550206800000,
        "parent_id": "3b4a3ce5-fad2-4229-883d-d509d850ea01",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public static IEnumerable\u003cTSource\u003e Where\u003cTSource\u003e(\n    this IEnumerable\u003cTSource\u003e source, \n    Func\u003cTSource, bool\u003e predicate)\n{\n    if (source == null) throw new ArgumentNullException(nameof(source));\n    if (predicate == null) throw new ArgumentNullException(nameof(predicate));\n\n    return iterator();\n\n    IEnumerable\u003cTSource\u003e iterator()\n    {\n        foreach (TSource element in source)\n            if (predicate(element))\n                yield return element;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "public static IEnumerable\u003cTSource\u003e Where\u003cTSource\u003e(\n    this IEnumerable\u003cTSource\u003e source, \n    Func\u003cTSource, bool\u003e predicate)\n{\n    if (source == null) throw new ArgumentNullException(nameof(source));\n    if (predicate == null) throw new ArgumentNullException(nameof(predicate));\n\n    return iterator();\n\n    IEnumerable\u003cTSource\u003e iterator()\n    {\n        foreach (TSource element in source)\n            if (predicate(element))\n                yield return element;\n    }\n}",
        "code_language": "C#"
      },
      {
        "id": "e9b24124-5f3a-4315-beea-581095c1b0a7",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528046310,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528046310,
        "parent_id": "3b4a3ce5-fad2-4229-883d-d509d850ea01",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Local functions also support the "
            ],
            [
              "async",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "await",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keywords."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Local functions also support the "
          },
          {
            "Text": "async",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "await",
            "AttrFlags": 2
          },
          {
            "Text": " keywords."
          }
        ]
      },
      {
        "id": "122e1ec5-f023-4070-ad8e-8f4592813567",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528046310,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528046310,
        "parent_id": "3b4a3ce5-fad2-4229-883d-d509d850ea01",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example"
          }
        ]
      },
      {
        "id": "76be7be0-2d88-4a05-be1d-7ebf50775b96",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528046310,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550206800000,
        "parent_id": "3b4a3ce5-fad2-4229-883d-d509d850ea01",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "async Task WriteEmailsAsync()\n{\n    var emailRegex = new Regex(@\"(?i)[a-z0-9_.+-]+@[a-z0-9-]+\\.[a-z0-9-.]+\");\n    IEnumerable\u003cstring\u003e emails1 = await getEmailsFromFileAsync(\"input1.txt\");\n    IEnumerable\u003cstring\u003e emails2 = await getEmailsFromFileAsync(\"input2.txt\");\n    await writeLinesToFileAsync(emails1.Concat(emails2), \"output.txt\");\n\n    async Task\u003cIEnumerable\u003cstring\u003e\u003e getEmailsFromFileAsync(string fileName)\n    {\n        string text;\n\n        using (StreamReader reader = File.OpenText(fileName))\n        {\n            text = await reader.ReadToEndAsync();\n        }\n\n        return from Match emailMatch in emailRegex.Matches(text) select emailMatch.Value;\n    }\n\n    async Task writeLinesToFileAsync(IEnumerable\u003cstring\u003e lines, string fileName)\n    {\n        using (StreamWriter writer = File.CreateText(fileName))\n        {\n            foreach (string line in lines)\n            {\n                await writer.WriteLineAsync(line);\n            }\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "async Task WriteEmailsAsync()\n{\n    var emailRegex = new Regex(@\"(?i)[a-z0-9_.+-]+@[a-z0-9-]+\\.[a-z0-9-.]+\");\n    IEnumerable\u003cstring\u003e emails1 = await getEmailsFromFileAsync(\"input1.txt\");\n    IEnumerable\u003cstring\u003e emails2 = await getEmailsFromFileAsync(\"input2.txt\");\n    await writeLinesToFileAsync(emails1.Concat(emails2), \"output.txt\");\n\n    async Task\u003cIEnumerable\u003cstring\u003e\u003e getEmailsFromFileAsync(string fileName)\n    {\n        string text;\n\n        using (StreamReader reader = File.OpenText(fileName))\n        {\n            text = await reader.ReadToEndAsync();\n        }\n\n        return from Match emailMatch in emailRegex.Matches(text) select emailMatch.Value;\n    }\n\n    async Task writeLinesToFileAsync(IEnumerable\u003cstring\u003e lines, string fileName)\n    {\n        using (StreamWriter writer = File.CreateText(fileName))\n        {\n            foreach (string line in lines)\n            {\n                await writer.WriteLineAsync(line);\n            }\n        }\n    }\n}",
        "code_language": "C#"
      },
      {
        "id": "ca6cb2fd-446b-4140-af39-2560f5a57267",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528046311,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528046311,
        "parent_id": "3b4a3ce5-fad2-4229-883d-d509d850ea01",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One important thing that you may have noticed is that local functions can be defined under the "
            ],
            [
              "return",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement, they do "
            ],
            [
              "not",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " need to be defined above it. Additionally, local functions typically follow the “lowerCamelCase” naming convention as to more easily differentiate themselves from class scope functions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One important thing that you may have noticed is that local functions can be defined under the "
          },
          {
            "Text": "return",
            "AttrFlags": 2
          },
          {
            "Text": " statement, they do "
          },
          {
            "Text": "not",
            "AttrFlags": 1
          },
          {
            "Text": " need to be defined above it. Additionally, local functions typically follow the “lowerCamelCase” naming convention as to more easily differentiate themselves from class scope functions."
          }
        ]
      }
    ],
    "title": "Local functions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}