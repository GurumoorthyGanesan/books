{
  "ID": "66472ed3-85a6-446b-8d3d-624c69c534fa",
  "Root": {
    "id": "66472ed3-85a6-446b-8d3d-624c69c534fa",
    "alive": true,
    "content": [
      "ff778602-3e4b-4dde-a6cc-d6feca8c436f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549528079224,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550207400000,
    "parent_id": "06d591be-a80e-4cc5-8a23-88654f365aa8",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Error handling of specific HTTP response codes such as 404 Not Found"
        ]
      ]
    },
    "type": "page",
    "version": 13,
    "content_resolved": [
      {
        "id": "ff778602-3e4b-4dde-a6cc-d6feca8c436f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550207425738,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550207400000,
        "parent_id": "66472ed3-85a6-446b-8d3d-624c69c534fa",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "using System.Net;\n\n...\n\nstring serverResponse;\ntry \n{\n    // Call a method that performs an HTTP request (per the above examples).\n    serverResponse = PerformHttpRequest();\n}\ncatch (WebException ex)\n{\n    if (ex.Status == WebExceptionStatus.ProtocolError)\n    {\n        HttpWebResponse response = ex.Response as HttpWebResponse;\n        if (response != null)\n        {\n            if ((int)response.StatusCode == 404) // Not Found\n            {\n                // Handle the 404 Not Found error \n                // ...\n            }\n            else\n            { \n                // Could handle other response.StatusCode values here.\n                // ...\n            }\n        }\n    }\n    else\n    {\n        // Could handle other error conditions here, such as WebExceptionStatus.ConnectFailure.\n        // ...\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "using System.Net;\n\n...\n\nstring serverResponse;\ntry \n{\n    // Call a method that performs an HTTP request (per the above examples).\n    serverResponse = PerformHttpRequest();\n}\ncatch (WebException ex)\n{\n    if (ex.Status == WebExceptionStatus.ProtocolError)\n    {\n        HttpWebResponse response = ex.Response as HttpWebResponse;\n        if (response != null)\n        {\n            if ((int)response.StatusCode == 404) // Not Found\n            {\n                // Handle the 404 Not Found error \n                // ...\n            }\n            else\n            { \n                // Could handle other response.StatusCode values here.\n                // ...\n            }\n        }\n    }\n    else\n    {\n        // Could handle other error conditions here, such as WebExceptionStatus.ConnectFailure.\n        // ...\n    }\n}",
        "code_language": "C#"
      }
    ],
    "title": "Error handling of specific HTTP response codes such as 404 Not Found",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}