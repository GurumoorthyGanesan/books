{
  "ID": "b585e218-bd63-4bc3-af2e-439abef2a71f",
  "Root": {
    "id": "b585e218-bd63-4bc3-af2e-439abef2a71f",
    "alive": true,
    "content": [
      "a1f4ff18-c759-4393-976b-e05be4502d4f",
      "15e07694-96d6-47f9-a18f-a4a504c3bb27",
      "af193174-90c8-43b7-b969-cc8b7d54fc8a",
      "13c63329-f87e-486d-b5d2-89a68f5d0a10",
      "7d336480-8922-4634-a4e8-04c80dff2520",
      "ce8b516a-9f4a-4f0d-a6b4-aeb2534a100c",
      "e6b498f6-0936-4e31-977d-a4de2de8a371",
      "9f6c5d0c-cf35-4715-8aad-ea09d1c9dc25",
      "453d3cae-6a97-48ff-b081-913158407526",
      "3a6856d2-004e-4c9f-b242-244769f7c930",
      "5b6e3099-2610-4f6e-b5c1-af5e6be39431",
      "24b3fcf0-96e0-4867-b2dc-e34bce8b1b37",
      "5d21fb26-4457-4522-940f-9a9964b94cf4",
      "1bd86b64-51ef-4993-bb16-292af5385836"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549524488252,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549535820000,
    "parent_id": "f185d627-93ed-4197-8bae-c35411c58fa9",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Short-circuiting Operators"
        ]
      ]
    },
    "type": "page",
    "version": 14,
    "content_resolved": [
      {
        "id": "a1f4ff18-c759-4393-976b-e05be4502d4f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524488247,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524488247,
        "parent_id": "b585e218-bd63-4bc3-af2e-439abef2a71f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By definition, the short-circuiting boolean operators will only evaluate the second operand if the first operand can not determine the overall result of the expression.",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By definition, the short-circuiting boolean operators will only evaluate the second operand if the first operand can not determine the overall result of the expression.",
            "AttrFlags": 4
          }
        ]
      },
      {
        "id": "15e07694-96d6-47f9-a18f-a4a504c3bb27",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524488250,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524488250,
        "parent_id": "b585e218-bd63-4bc3-af2e-439abef2a71f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It means that, if you are using \u0026\u0026 operator as "
            ],
            [
              "firstCondition \u0026\u0026 secondCondition",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " it will evaluate "
            ],
            [
              "secondCondition",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " only when "
            ],
            [
              "firstCondition",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " is true and ofcource the overall result will be true only if both of "
            ],
            [
              "firstOperand",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "secondOperand",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " are evaluated to true. This is useful in many scenarios, for example imagine that you want to check whereas your list has more than three elements but you also have to check if list has been initialized to not run into "
            ],
            [
              "NullReferenceException",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". You can achieve this as below:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It means that, if you are using \u0026\u0026 operator as "
          },
          {
            "Text": "firstCondition \u0026\u0026 secondCondition",
            "AttrFlags": 4
          },
          {
            "Text": " it will evaluate "
          },
          {
            "Text": "secondCondition",
            "AttrFlags": 4
          },
          {
            "Text": " only when "
          },
          {
            "Text": "firstCondition",
            "AttrFlags": 4
          },
          {
            "Text": " is true and ofcource the overall result will be true only if both of "
          },
          {
            "Text": "firstOperand",
            "AttrFlags": 4
          },
          {
            "Text": " and "
          },
          {
            "Text": "secondOperand",
            "AttrFlags": 4
          },
          {
            "Text": " are evaluated to true. This is useful in many scenarios, for example imagine that you want to check whereas your list has more than three elements but you also have to check if list has been initialized to not run into "
          },
          {
            "Text": "NullReferenceException",
            "AttrFlags": 4
          },
          {
            "Text": ". You can achieve this as below:"
          }
        ]
      },
      {
        "id": "af193174-90c8-43b7-b969-cc8b7d54fc8a",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524488250,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549535460000,
        "parent_id": "b585e218-bd63-4bc3-af2e-439abef2a71f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "bool hasMoreThanThreeElements = myList != null \u0026\u0026 mList.Count \u003e 3;"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "bool hasMoreThanThreeElements = myList != null \u0026\u0026 mList.Count \u003e 3;",
        "code_language": "C#"
      },
      {
        "id": "13c63329-f87e-486d-b5d2-89a68f5d0a10",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524488251,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549535460000,
        "parent_id": "b585e218-bd63-4bc3-af2e-439abef2a71f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "mList.Count \u003e 3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will not be checked until "
            ],
            [
              "myList != null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is met."
            ]
          ]
        },
        "type": "text",
        "version": 6,
        "inline_content": [
          {
            "Text": "mList.Count \u003e 3",
            "AttrFlags": 2
          },
          {
            "Text": " will not be checked until "
          },
          {
            "Text": "myList != null",
            "AttrFlags": 2
          },
          {
            "Text": " is met."
          }
        ]
      },
      {
        "id": "7d336480-8922-4634-a4e8-04c80dff2520",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524488251,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524488251,
        "parent_id": "b585e218-bd63-4bc3-af2e-439abef2a71f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Logical AND",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Logical AND",
            "AttrFlags": 1
          }
        ]
      },
      {
        "id": "ce8b516a-9f4a-4f0d-a6b4-aeb2534a100c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524488251,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524488251,
        "parent_id": "b585e218-bd63-4bc3-af2e-439abef2a71f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "\u0026\u0026",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the short-circuiting counterpart of the standard boolean AND ("
            ],
            [
              "\u0026",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") operator."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "\u0026\u0026",
            "AttrFlags": 2
          },
          {
            "Text": " is the short-circuiting counterpart of the standard boolean AND ("
          },
          {
            "Text": "\u0026",
            "AttrFlags": 2
          },
          {
            "Text": ") operator."
          }
        ]
      },
      {
        "id": "e6b498f6-0936-4e31-977d-a4de2de8a371",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524488251,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549535460000,
        "parent_id": "b585e218-bd63-4bc3-af2e-439abef2a71f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "var x = true;\nvar y = false;"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var x = true;\nvar y = false;",
        "code_language": "C#"
      },
      {
        "id": "9f6c5d0c-cf35-4715-8aad-ea09d1c9dc25",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524488251,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549535460000,
        "parent_id": "b585e218-bd63-4bc3-af2e-439abef2a71f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "x \u0026\u0026 x // Returns true.\nx \u0026\u0026 y // Returns false (y is evaluated).\ny \u0026\u0026 x // Returns false (x is not evaluated).\ny \u0026\u0026 y // Returns false (right y is not evaluated)."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "x \u0026\u0026 x // Returns true.\nx \u0026\u0026 y // Returns false (y is evaluated).\ny \u0026\u0026 x // Returns false (x is not evaluated).\ny \u0026\u0026 y // Returns false (right y is not evaluated).",
        "code_language": "C#"
      },
      {
        "id": "453d3cae-6a97-48ff-b081-913158407526",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524488251,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524488251,
        "parent_id": "b585e218-bd63-4bc3-af2e-439abef2a71f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Logical OR",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Logical OR",
            "AttrFlags": 1
          }
        ]
      },
      {
        "id": "3a6856d2-004e-4c9f-b242-244769f7c930",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524488251,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524488251,
        "parent_id": "b585e218-bd63-4bc3-af2e-439abef2a71f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "||",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the short-circuiting counterpart of the standard boolean OR ("
            ],
            [
              "|",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") operator."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "||",
            "AttrFlags": 2
          },
          {
            "Text": " is the short-circuiting counterpart of the standard boolean OR ("
          },
          {
            "Text": "|",
            "AttrFlags": 2
          },
          {
            "Text": ") operator."
          }
        ]
      },
      {
        "id": "5b6e3099-2610-4f6e-b5c1-af5e6be39431",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524488251,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549535460000,
        "parent_id": "b585e218-bd63-4bc3-af2e-439abef2a71f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "var x = true;\nvar y = false;"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var x = true;\nvar y = false;",
        "code_language": "C#"
      },
      {
        "id": "24b3fcf0-96e0-4867-b2dc-e34bce8b1b37",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524488252,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549535460000,
        "parent_id": "b585e218-bd63-4bc3-af2e-439abef2a71f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "x || x // Returns true (right x is not evaluated).\nx || y // Returns true (y is not evaluated).\ny || x // Returns true (x and y are evaluated).\ny || y // Returns false (y and y are evaluated)."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "x || x // Returns true (right x is not evaluated).\nx || y // Returns true (y is not evaluated).\ny || x // Returns true (x and y are evaluated).\ny || y // Returns false (y and y are evaluated).",
        "code_language": "C#"
      },
      {
        "id": "5d21fb26-4457-4522-940f-9a9964b94cf4",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524488252,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524488252,
        "parent_id": "b585e218-bd63-4bc3-af2e-439abef2a71f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example usage",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example usage",
            "AttrFlags": 1
          }
        ]
      },
      {
        "id": "1bd86b64-51ef-4993-bb16-292af5385836",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549535525448,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549535520000,
        "parent_id": "b585e218-bd63-4bc3-af2e-439abef2a71f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "if (object != null \u0026\u0026 object.Property) {\n    // object.Property is never accessed if object is null, because of the short circuit.\n    Action1();\n} else {\n    Action2();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 29,
        "code": "if (object != null \u0026\u0026 object.Property) {\n    // object.Property is never accessed if object is null, because of the short circuit.\n    Action1();\n} else {\n    Action2();\n}",
        "code_language": "C#"
      }
    ],
    "title": "Short-circuiting Operators",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}