{
  "ID": "0739b2eb-5882-4fd8-9cac-422fa5910306",
  "Root": {
    "alive": true,
    "content": [
      "3003464d-02df-4787-b503-4cb645cf82a3",
      "7fc2745d-11d6-4769-9d7c-5e8ffcccc383",
      "b0e314b7-e419-430b-ab93-52880e5326a3",
      "e7432332-d226-4f89-a3ec-c41fa4a90d16",
      "45844ef4-0565-4efe-ab29-a432c4fdfa45",
      "54bba42a-a595-43d6-83b3-3b373d51e867",
      "4a56ee87-41c7-42da-a0fb-d13d2b8e3438",
      "e1461e8d-e15e-4272-b861-f832cf6f3e97",
      "4d1d3c68-9beb-4210-a88f-75110e98dd97",
      "6cfcedfe-657b-4326-911e-0479367ab6d3",
      "0316668b-273e-47d2-9f37-1b583f089097",
      "abd7e1c1-beff-4ccf-843b-7b0313bfcde4",
      "dcedf44a-dffd-4487-9058-def49b2ea085",
      "37667a50-619c-4554-ad66-763dbb820e30",
      "507e5a68-f3c5-4de8-9626-732feecb8aa3",
      "3f3396fe-ae47-4b10-8965-b6484dba3bca",
      "5ea84e4e-ce3d-4d11-aba6-27328315dd81",
      "d5a79873-081c-4af5-9b76-4261c863c57f",
      "e493d664-d0b9-4dfd-80a0-b102d573535d",
      "d836995a-761f-4c6f-aeaa-2b70491c8acb",
      "49c62958-3abc-44e1-bf65-7b10a900b3aa",
      "a84e81f6-766e-4b4d-9867-5072519960e1",
      "2b257a22-c35d-4dd3-97f4-dd7c5899e817",
      "03424129-9320-44c7-a40e-08da7f97dc44",
      "63eb8716-d6ed-4689-b642-89d9bcdd23b3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549526959376,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549616340000,
    "parent_id": "852bbb3c-ca26-4ee2-ae32-0e5376b5a38e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Enum as flags"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959368,
        "id": "3003464d-02df-4787-b503-4cb645cf82a3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959368,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "FlagsAttribute",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be applied to an enum changing the behaviour of the "
            ],
            [
              "ToString()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to match the nature of the enum:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "FlagsAttribute",
            "AttrFlags": 2
          },
          {
            "Text": " can be applied to an enum changing the behaviour of the "
          },
          {
            "Text": "ToString()",
            "AttrFlags": 2
          },
          {
            "Text": " to match the nature of the enum:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959371,
        "id": "7fc2745d-11d6-4769-9d7c-5e8ffcccc383",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959371,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "[Flags]\nenum MyEnum\n{\n    //None = 0, can be used but not combined in bitwise operations\n    FlagA = 1,\n    FlagB = 2,\n    FlagC = 4,\n    FlagD = 8  \n    //you must use powers of two or combinations of powers of two \n    //for bitwise operations to work\n}\n\nvar twoFlags = MyEnum.FlagA | MyEnum.FlagB;\n\n// This will enumerate all the flags in the variable: \"FlagA, FlagB\".\nConsole.WriteLine(twoFlags);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "[Flags]\nenum MyEnum\n{\n    //None = 0, can be used but not combined in bitwise operations\n    FlagA = 1,\n    FlagB = 2,\n    FlagC = 4,\n    FlagD = 8  \n    //you must use powers of two or combinations of powers of two \n    //for bitwise operations to work\n}\n\nvar twoFlags = MyEnum.FlagA | MyEnum.FlagB;\n\n// This will enumerate all the flags in the variable: \"FlagA, FlagB\".\nConsole.WriteLine(twoFlags);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959371,
        "id": "b0e314b7-e419-430b-ab93-52880e5326a3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959371,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Because "
            ],
            [
              "FlagsAttribute",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " relies on the enumeration constants to be powers of two (or their combinations) and enum values are ultimately numeric values, you are limited by the size of the underlying numeric type. The largest available numeric type that you can use is "
            ],
            [
              "UInt64",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which allows you to specify 64 distinct (non-combined) flag enum constants. The "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword defaults to the underlying type "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is "
            ],
            [
              "Int32",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The compiler will allow the declaration of values wider than 32 bit. Those will wrap around without a warning and result in two or more enum members of the same value. Therefore, if an enum is meant to accomodate a bitset of more than 32 flags, you need to specify a bigger type explicitely:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Because "
          },
          {
            "Text": "FlagsAttribute",
            "AttrFlags": 2
          },
          {
            "Text": " relies on the enumeration constants to be powers of two (or their combinations) and enum values are ultimately numeric values, you are limited by the size of the underlying numeric type. The largest available numeric type that you can use is "
          },
          {
            "Text": "UInt64",
            "AttrFlags": 2
          },
          {
            "Text": ", which allows you to specify 64 distinct (non-combined) flag enum constants. The "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " keyword defaults to the underlying type "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ", which is "
          },
          {
            "Text": "Int32",
            "AttrFlags": 2
          },
          {
            "Text": ". The compiler will allow the declaration of values wider than 32 bit. Those will wrap around without a warning and result in two or more enum members of the same value. Therefore, if an enum is meant to accomodate a bitset of more than 32 flags, you need to specify a bigger type explicitely:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959372,
        "id": "e7432332-d226-4f89-a3ec-c41fa4a90d16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959372,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public enum BigEnum : ulong\n{\n    BigValue = 1 \u003c\u003c 63\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public enum BigEnum : ulong\n{\n    BigValue = 1 \u003c\u003c 63\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959372,
        "id": "45844ef4-0565-4efe-ab29-a432c4fdfa45",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959372,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Although flags are often only a single bit, they can be combined into named “sets” for easier use."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Although flags are often only a single bit, they can be combined into named “sets” for easier use."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959372,
        "id": "54bba42a-a595-43d6-83b3-3b373d51e867",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959372,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "[Flags]\nenum FlagsEnum\n{\n    None = 0,\n    Option1 = 1,\n    Option2 = 2,\n    Option3 = 4,\n       \n    Default = Option1 | Option3,\n    All = Option1 | Option2 | Option3,\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "[Flags]\nenum FlagsEnum\n{\n    None = 0,\n    Option1 = 1,\n    Option2 = 2,\n    Option3 = 4,\n       \n    Default = Option1 | Option3,\n    All = Option1 | Option2 | Option3,\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959373,
        "id": "4a56ee87-41c7-42da-a0fb-d13d2b8e3438",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959373,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To avoid spelling out the decimal values of powers of two, the "
            ],
            [
              "left-shift operator (\u003c\u003c)",
              [
                [
                  "a",
                  "https://msdn.microsoft.com/en-gb/library/a1sway8w.aspx"
                ]
              ]
            ],
            [
              " can also be used to declare the same enum"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To avoid spelling out the decimal values of powers of two, the "
          },
          {
            "Text": "left-shift operator (\u003c\u003c)",
            "Link": "https://msdn.microsoft.com/en-gb/library/a1sway8w.aspx"
          },
          {
            "Text": " can also be used to declare the same enum"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959373,
        "id": "e1461e8d-e15e-4272-b861-f832cf6f3e97",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959373,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "[Flags]\nenum FlagsEnum\n{\n    None = 0,\n    Option1 = 1 \u003c\u003c 0,\n    Option2 = 1 \u003c\u003c 1,\n    Option3 = 1 \u003c\u003c 2,\n       \n    Default = Option1 | Option3,\n    All = Option1 | Option2 | Option3,\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "[Flags]\nenum FlagsEnum\n{\n    None = 0,\n    Option1 = 1 \u003c\u003c 0,\n    Option2 = 1 \u003c\u003c 1,\n    Option3 = 1 \u003c\u003c 2,\n       \n    Default = Option1 | Option3,\n    All = Option1 | Option2 | Option3,\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959374,
        "id": "4d1d3c68-9beb-4210-a88f-75110e98dd97",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959374,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Starting with C# 7.0, "
            ],
            [
              "binary literals",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%23/1936/c-sharp-7-0-features/6327/binary-literals#t=201705181538117083427"
                ]
              ]
            ],
            [
              " can be used too."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Starting with C# 7.0, "
          },
          {
            "Text": "binary literals",
            "Link": "http://stackoverflow.com/documentation/c%23/1936/c-sharp-7-0-features/6327/binary-literals#t=201705181538117083427"
          },
          {
            "Text": " can be used too."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959374,
        "id": "6cfcedfe-657b-4326-911e-0479367ab6d3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959374,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To check if the value of enum variable has a certain flag set, the "
            ],
            [
              "HasFlag",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://msdn.microsoft.com/en-us/library/system.enum.hasflag(v=vs.110).aspx"
                ]
              ]
            ],
            [
              " method can be used. Let’s say we have"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To check if the value of enum variable has a certain flag set, the "
          },
          {
            "Text": "HasFlag",
            "AttrFlags": 2,
            "Link": "https://msdn.microsoft.com/en-us/library/system.enum.hasflag(v=vs.110).aspx"
          },
          {
            "Text": " method can be used. Let’s say we have"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959375,
        "id": "0316668b-273e-47d2-9f37-1b583f089097",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959375,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "[Flags]\nenum MyEnum\n{\n    One = 1,\n    Two = 2,\n    Three = 4\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "[Flags]\nenum MyEnum\n{\n    One = 1,\n    Two = 2,\n    Three = 4\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959375,
        "id": "abd7e1c1-beff-4ccf-843b-7b0313bfcde4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959375,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And a "
            ],
            [
              "value",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And a "
          },
          {
            "Text": "value",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959375,
        "id": "dcedf44a-dffd-4487-9058-def49b2ea085",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959375,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var value = MyEnum.One | MyEnum.Two;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var value = MyEnum.One | MyEnum.Two;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959375,
        "id": "37667a50-619c-4554-ad66-763dbb820e30",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959375,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With "
            ],
            [
              "HasFlag",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " we can check if any of the flags is set"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With "
          },
          {
            "Text": "HasFlag",
            "AttrFlags": 2
          },
          {
            "Text": " we can check if any of the flags is set"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959375,
        "id": "507e5a68-f3c5-4de8-9626-732feecb8aa3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959375,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if(value.HasFlag(MyEnum.One))\n    Console.WriteLine(\"Enum has One\");"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if(value.HasFlag(MyEnum.One))\n    Console.WriteLine(\"Enum has One\");",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959375,
        "id": "3f3396fe-ae47-4b10-8965-b6484dba3bca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959375,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if(value.HasFlag(MyEnum.Two))\n    Console.WriteLine(\"Enum has Two\");"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if(value.HasFlag(MyEnum.Two))\n    Console.WriteLine(\"Enum has Two\");",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959375,
        "id": "5ea84e4e-ce3d-4d11-aba6-27328315dd81",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959375,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if(value.HasFlag(MyEnum.Three))\n    Console.WriteLine(\"Enum has Three\");"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if(value.HasFlag(MyEnum.Three))\n    Console.WriteLine(\"Enum has Three\");",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959375,
        "id": "d5a79873-081c-4af5-9b76-4261c863c57f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959375,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Also we can iterate through all values of enum to get all flags that are set"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Also we can iterate through all values of enum to get all flags that are set"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959375,
        "id": "e493d664-d0b9-4dfd-80a0-b102d573535d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959375,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var type = typeof(MyEnum);\nvar names = Enum.GetNames(type);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var type = typeof(MyEnum);\nvar names = Enum.GetNames(type);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959376,
        "id": "d836995a-761f-4c6f-aeaa-2b70491c8acb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959376,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "foreach (var name in names)\n{\n    var item = (MyEnum)Enum.Parse(type, name);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "foreach (var name in names)\n{\n    var item = (MyEnum)Enum.Parse(type, name);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959376,
        "id": "49c62958-3abc-44e1-bf65-7b10a900b3aa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959376,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if (value.HasFlag(item))\n        Console.WriteLine(\"Enum has \" + name);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if (value.HasFlag(item))\n        Console.WriteLine(\"Enum has \" + name);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959376,
        "id": "a84e81f6-766e-4b4d-9867-5072519960e1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959376,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Or"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Or"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959376,
        "id": "2b257a22-c35d-4dd3-97f4-dd7c5899e817",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959376,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "foreach(MyEnum flagToCheck in Enum.GetValues(typeof(MyEnum)))\n{\n    if(value.HasFlag(flagToCheck))\n    {\n         Console.WriteLine(\"Enum has \" + flagToCheck);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "foreach(MyEnum flagToCheck in Enum.GetValues(typeof(MyEnum)))\n{\n    if(value.HasFlag(flagToCheck))\n    {\n         Console.WriteLine(\"Enum has \" + flagToCheck);\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959376,
        "id": "03424129-9320-44c7-a40e-08da7f97dc44",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959376,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All three examples will print:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All three examples will print:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526959376,
        "id": "63eb8716-d6ed-4689-b642-89d9bcdd23b3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526959376,
        "parent_id": "0739b2eb-5882-4fd8-9cac-422fa5910306",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Enum has One\nEnum has Two"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Enum has One\nEnum has Two",
        "code_language": "Plain Text"
      }
    ],
    "title": "Enum as flags",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}