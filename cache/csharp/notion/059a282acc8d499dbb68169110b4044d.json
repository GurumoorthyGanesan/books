{
  "ID": "059a282a-cc8d-499d-bb68-169110b4044d",
  "Root": {
    "alive": true,
    "content": [
      "ed39cb24-7d85-4537-859a-7a29f9b078d7",
      "e26c375e-e239-42c4-81b7-9bacafa7d07f",
      "65e868ce-57b2-40ab-8a90-df5e2354ecbb",
      "f75794bc-11c9-45a3-820b-12b8e45d384f",
      "adf6db21-1421-4f90-b974-16450ca7b36c",
      "b7373754-53f2-4f05-8602-56e80efbb4d2"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525021362,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "059a282a-cc8d-499d-bb68-169110b4044d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549613940000,
    "parent_id": "1cef0e56-e2c1-46b9-9c66-002b53d2c779",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "try catch finally throw"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525021358,
        "id": "ed39cb24-7d85-4537-859a-7a29f9b078d7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525021358,
        "parent_id": "059a282a-cc8d-499d-bb68-169110b4044d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "try",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "finally",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and "
            ],
            [
              "throw",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " allow you to handle exceptions in your code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "try",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "catch",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "finally",
            "AttrFlags": 2
          },
          {
            "Text": ", and "
          },
          {
            "Text": "throw",
            "AttrFlags": 2
          },
          {
            "Text": " allow you to handle exceptions in your code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525021361,
        "id": "e26c375e-e239-42c4-81b7-9bacafa7d07f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525021361,
        "parent_id": "059a282a-cc8d-499d-bb68-169110b4044d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var processor = new InputProcessor();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var processor = new InputProcessor();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525021361,
        "id": "65e868ce-57b2-40ab-8a90-df5e2354ecbb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525021361,
        "parent_id": "059a282a-cc8d-499d-bb68-169110b4044d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// The code within the try block will be executed. If an exception occurs during execution of\n// this code, execution will pass to the catch block corresponding to the exception type.\ntry \n{\n    processor.Process(input);\n}\n// If a FormatException is thrown during the try block, then this catch block\n// will be executed.\ncatch (FormatException ex)\n{\n    // Throw is a keyword that will manually throw an exception, triggering any catch block that is\n    // waiting for that exception type. \n    throw new InvalidOperationException(\"Invalid input\", ex);\n}\n// catch can be used to catch all or any specific exceptions. This catch block,\n// with no type specified, catches any exception that hasn't already been caught\n// in a prior catch block.\ncatch\n{\n    LogUnexpectedException(); \n    throw; // Re-throws the original exception.\n}\n// The finally block is executed after all try-catch blocks have been; either after the try has\n// succeeded in running all commands or after all exceptions have been caught. \nfinally\n{\n    processor.Dispose();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// The code within the try block will be executed. If an exception occurs during execution of\n// this code, execution will pass to the catch block corresponding to the exception type.\ntry \n{\n    processor.Process(input);\n}\n// If a FormatException is thrown during the try block, then this catch block\n// will be executed.\ncatch (FormatException ex)\n{\n    // Throw is a keyword that will manually throw an exception, triggering any catch block that is\n    // waiting for that exception type. \n    throw new InvalidOperationException(\"Invalid input\", ex);\n}\n// catch can be used to catch all or any specific exceptions. This catch block,\n// with no type specified, catches any exception that hasn't already been caught\n// in a prior catch block.\ncatch\n{\n    LogUnexpectedException(); \n    throw; // Re-throws the original exception.\n}\n// The finally block is executed after all try-catch blocks have been; either after the try has\n// succeeded in running all commands or after all exceptions have been caught. \nfinally\n{\n    processor.Dispose();\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525021361,
        "id": "f75794bc-11c9-45a3-820b-12b8e45d384f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525021361,
        "parent_id": "059a282a-cc8d-499d-bb68-169110b4044d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " The "
            ],
            [
              "return",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword can be used in "
            ],
            [
              "try",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block, and the "
            ],
            [
              "finally",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block will still be executed (just before returning). For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note:",
            "AttrFlags": 1
          },
          {
            "Text": " The "
          },
          {
            "Text": "return",
            "AttrFlags": 2
          },
          {
            "Text": " keyword can be used in "
          },
          {
            "Text": "try",
            "AttrFlags": 2
          },
          {
            "Text": " block, and the "
          },
          {
            "Text": "finally",
            "AttrFlags": 2
          },
          {
            "Text": " block will still be executed (just before returning). For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525021361,
        "id": "adf6db21-1421-4f90-b974-16450ca7b36c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525021361,
        "parent_id": "059a282a-cc8d-499d-bb68-169110b4044d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "try \n{\n    connection.Open();\n    return connection.Get(query);\n} \nfinally \n{\n    connection.Close();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "try \n{\n    connection.Open();\n    return connection.Get(query);\n} \nfinally \n{\n    connection.Close();\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525021362,
        "id": "b7373754-53f2-4f05-8602-56e80efbb4d2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525021362,
        "parent_id": "059a282a-cc8d-499d-bb68-169110b4044d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The statement "
            ],
            [
              "connection.Close()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will execute before the result of "
            ],
            [
              "connection.Get(query)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is returned."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The statement "
          },
          {
            "Text": "connection.Close()",
            "AttrFlags": 2
          },
          {
            "Text": " will execute before the result of "
          },
          {
            "Text": "connection.Get(query)",
            "AttrFlags": 2
          },
          {
            "Text": " is returned."
          }
        ]
      }
    ],
    "title": "try catch finally throw",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}