{
  "ID": "2e0a9519-9023-4f23-a322-9693261a9cdd",
  "Root": {
    "id": "2e0a9519-9023-4f23-a322-9693261a9cdd",
    "alive": true,
    "content": [
      "35d3d2a9-e5af-4513-ad18-d4a17de8e379",
      "542d9b4c-c4fd-4410-b6bf-7e4766f94c32",
      "51b5dbdd-5979-4b78-ab77-eed6e11f6de5"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549527194231,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549785780000,
    "parent_id": "815daf49-ac2a-4123-8b19-67aa9afb3da8",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Encapsulating transformations in functions"
        ]
      ]
    },
    "type": "page",
    "version": 14,
    "content_resolved": [
      {
        "id": "35d3d2a9-e5af-4513-ad18-d4a17de8e379",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527194230,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549785780000,
        "parent_id": "2e0a9519-9023-4f23-a322-9693261a9cdd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class MyObject{\n    public DateTime? TestDate { get; set; }\n\n    public Func\u003cMyObject, bool\u003e DateIsValid = myObject =\u003e myObject.TestDate.HasValue \u0026\u0026 myObject.TestDate \u003e DateTime.Now;\n\n    public void DoSomething(){\n        //We can do this:\n        if(this.TestDate.HasValue \u0026\u0026 this.TestDate \u003e DateTime.Now){\n            CallAnotherMethod();\n        }\n\n        //or this:\n        if(DateIsValid(this)){\n            CallAnotherMethod();\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public class MyObject{\n    public DateTime? TestDate { get; set; }\n\n    public Func\u003cMyObject, bool\u003e DateIsValid = myObject =\u003e myObject.TestDate.HasValue \u0026\u0026 myObject.TestDate \u003e DateTime.Now;\n\n    public void DoSomething(){\n        //We can do this:\n        if(this.TestDate.HasValue \u0026\u0026 this.TestDate \u003e DateTime.Now){\n            CallAnotherMethod();\n        }\n\n        //or this:\n        if(DateIsValid(this)){\n            CallAnotherMethod();\n        }\n    }\n}",
        "code_language": "C#"
      },
      {
        "id": "542d9b4c-c4fd-4410-b6bf-7e4766f94c32",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527194230,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527194230,
        "parent_id": "2e0a9519-9023-4f23-a322-9693261a9cdd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the spirit of clean coding, encapsulating checks and transformations like the one above as a Func can make your code easier to read and understand. While the above example is very simple, what if there were multiple DateTime properties each with their own differing validation rules and we wanted to check different combinations? Simple, one-line Funcs that each have established return logic can be both readable and reduce the apparent complexity of your code. Consider the below Func calls and imagine how much more code would be cluttering up the method:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the spirit of clean coding, encapsulating checks and transformations like the one above as a Func can make your code easier to read and understand. While the above example is very simple, what if there were multiple DateTime properties each with their own differing validation rules and we wanted to check different combinations? Simple, one-line Funcs that each have established return logic can be both readable and reduce the apparent complexity of your code. Consider the below Func calls and imagine how much more code would be cluttering up the method:"
          }
        ]
      },
      {
        "id": "51b5dbdd-5979-4b78-ab77-eed6e11f6de5",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527194231,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549785780000,
        "parent_id": "2e0a9519-9023-4f23-a322-9693261a9cdd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public void CheckForIntegrity(){\n    if(ShipDateIsValid(this) \u0026\u0026 TestResultsHaveBeenIssued(this) \u0026\u0026 !TestResultsFail(this)){\n        SendPassingTestNotification();\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public void CheckForIntegrity(){\n    if(ShipDateIsValid(this) \u0026\u0026 TestResultsHaveBeenIssued(this) \u0026\u0026 !TestResultsFail(this)){\n        SendPassingTestNotification();\n    }\n}",
        "code_language": "C#"
      }
    ],
    "title": "Encapsulating transformations in functions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}