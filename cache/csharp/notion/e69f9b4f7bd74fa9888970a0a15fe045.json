{
  "ID": "e69f9b4f-7bd7-4fa9-8889-70a0a15fe045",
  "Root": {
    "alive": true,
    "content": [
      "f36722a8-faf3-4059-b739-f936f8ffec06",
      "6d43c628-a8fa-4d1c-b2e6-9cf10b2a07da",
      "f0e08248-56d7-4ddd-a11a-6f4a992ad7c4",
      "19f4c532-4860-46ef-ab10-50a7251ddfcd",
      "26775502-603e-40e8-ad9c-ce4dcc88ee87"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549530388485,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e69f9b4f-7bd7-4fa9-8889-70a0a15fe045",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550224440000,
    "parent_id": "ca82249a-e8bd-4017-a1a3-da741fa4b29b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Implementing ICloneable in a class"
        ]
      ]
    },
    "type": "page",
    "version": 11,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530388482,
        "id": "f36722a8-faf3-4059-b739-f936f8ffec06",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530388482,
        "parent_id": "e69f9b4f-7bd7-4fa9-8889-70a0a15fe045",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Implement "
            ],
            [
              "ICloneable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in a class with a twist. Expose a public type safe "
            ],
            [
              "Clone()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and implement "
            ],
            [
              "object Clone()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " privately."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Implement "
          },
          {
            "Text": "ICloneable",
            "AttrFlags": 2
          },
          {
            "Text": " in a class with a twist. Expose a public type safe "
          },
          {
            "Text": "Clone()",
            "AttrFlags": 2
          },
          {
            "Text": " and implement "
          },
          {
            "Text": "object Clone()",
            "AttrFlags": 2
          },
          {
            "Text": " privately."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530388485,
        "id": "6d43c628-a8fa-4d1c-b2e6-9cf10b2a07da",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550224440000,
        "parent_id": "e69f9b4f-7bd7-4fa9-8889-70a0a15fe045",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class Person : ICloneable\n{\n    // Contents of class\n    public string Name { get; set; }\n    public int Age { get; set; }\n    // Constructor\n    public Person(string name, int age)\n    {\n        this.Name=name;\n        this.Age=age;\n    }\n    // Copy Constructor\n    public Person(Person other)\n    {\n        this.Name=other.Name;\n        this.Age=other.Age;\n    }\n\n    #region ICloneable Members\n    // Type safe Clone\n    public Person Clone() { return new Person(this); }\n    // ICloneable implementation\n    object ICloneable.Clone()\n    {\n        return Clone();\n    }\n    #endregion\n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "public class Person : ICloneable\n{\n    // Contents of class\n    public string Name { get; set; }\n    public int Age { get; set; }\n    // Constructor\n    public Person(string name, int age)\n    {\n        this.Name=name;\n        this.Age=age;\n    }\n    // Copy Constructor\n    public Person(Person other)\n    {\n        this.Name=other.Name;\n        this.Age=other.Age;\n    }\n\n    #region ICloneable Members\n    // Type safe Clone\n    public Person Clone() { return new Person(this); }\n    // ICloneable implementation\n    object ICloneable.Clone()\n    {\n        return Clone();\n    }\n    #endregion\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530388485,
        "id": "f0e08248-56d7-4ddd-a11a-6f4a992ad7c4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530388485,
        "parent_id": "e69f9b4f-7bd7-4fa9-8889-70a0a15fe045",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Later to be used as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Later to be used as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530388485,
        "id": "19f4c532-4860-46ef-ab10-50a7251ddfcd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550224440000,
        "parent_id": "e69f9b4f-7bd7-4fa9-8889-70a0a15fe045",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "{\n    Person bob=new Person(\"Bob\", 25);\n    Person bob_clone=bob.Clone();\n    Debug.Assert(bob_clone.Name==bob.Name);\n\n    bob.Age=56;\n    Debug.Assert(bob.Age!=bob.Age);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "{\n    Person bob=new Person(\"Bob\", 25);\n    Person bob_clone=bob.Clone();\n    Debug.Assert(bob_clone.Name==bob.Name);\n\n    bob.Age=56;\n    Debug.Assert(bob.Age!=bob.Age);\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530388485,
        "id": "26775502-603e-40e8-ad9c-ce4dcc88ee87",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530388485,
        "parent_id": "e69f9b4f-7bd7-4fa9-8889-70a0a15fe045",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Notice that changing the age of "
            ],
            [
              "bob",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " does not change the age of "
            ],
            [
              "bob_clone",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This is because the design uses cloning instead of assigning of (reference) variables."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Notice that changing the age of "
          },
          {
            "Text": "bob",
            "AttrFlags": 2
          },
          {
            "Text": " does not change the age of "
          },
          {
            "Text": "bob_clone",
            "AttrFlags": 2
          },
          {
            "Text": ". This is because the design uses cloning instead of assigning of (reference) variables."
          }
        ]
      }
    ],
    "title": "Implementing ICloneable in a class",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}