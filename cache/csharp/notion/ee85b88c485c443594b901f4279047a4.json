{
  "ID": "ee85b88c-485c-4435-94b9-01f4279047a4",
  "Root": {
    "alive": true,
    "content": [
      "d43a4613-d4fe-470f-9406-775504108b8b",
      "b9043313-d01d-40dc-89bf-34068467668e",
      "5026af4a-f139-4796-8b19-1a67be02a348",
      "69356165-17fa-4d27-93b3-7e5d084256bb",
      "cbb8d672-7a66-42d1-9658-16e354d7e587",
      "c4a74558-8eae-4439-84eb-a0151508580b",
      "9496438a-4ea0-4dfa-8d26-6fd526bd1f47",
      "86bd9244-d68e-4ae8-b43f-cedeef4533c5",
      "17b498e0-39f1-45e5-95bf-6c0e9a356e46",
      "19cb659e-0e38-4bbe-ab53-375a8414a25b",
      "028352ba-7f25-40a8-8c74-909dd6ab0c82",
      "48e779eb-476e-46c0-8491-705dda7fb74b",
      "b7d24ec8-1921-40ff-8359-b1ff4f2aa332",
      "a1a641dc-ae1b-4ea7-bc89-22e158a47c7b",
      "d915f0d4-daa5-4b3f-a8c4-d5c8f801ebed"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549526084253,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ee85b88c-485c-4435-94b9-01f4279047a4",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550126220000,
    "parent_id": "a34c1078-f01c-44b1-b468-522f804fbc2d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Aggregate"
        ]
      ]
    },
    "type": "page",
    "version": 13,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526084247,
        "id": "d43a4613-d4fe-470f-9406-775504108b8b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526084247,
        "parent_id": "ee85b88c-485c-4435-94b9-01f4279047a4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Aggregate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " Applies an accumulator function over a sequence."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Aggregate",
            "AttrFlags": 2
          },
          {
            "Text": " Applies an accumulator function over a sequence."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526084250,
        "id": "b9043313-d01d-40dc-89bf-34068467668e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550126160000,
        "parent_id": "ee85b88c-485c-4435-94b9-01f4279047a4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "int[] intList = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };\nint sum = intList.Aggregate((prevSum, current) =\u003e prevSum + current);\n// sum = 55"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "int[] intList = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };\nint sum = intList.Aggregate((prevSum, current) =\u003e prevSum + current);\n// sum = 55",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526084251,
        "id": "5026af4a-f139-4796-8b19-1a67be02a348",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526084251,
        "parent_id": "ee85b88c-485c-4435-94b9-01f4279047a4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "At the first step "
            ],
            [
              "prevSum = 1",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "At the first step "
          },
          {
            "Text": "prevSum = 1",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526084251,
        "id": "69356165-17fa-4d27-93b3-7e5d084256bb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526084251,
        "parent_id": "ee85b88c-485c-4435-94b9-01f4279047a4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "At the second "
            ],
            [
              "prevSum = prevSum(at the first step) + 2",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "At the second "
          },
          {
            "Text": "prevSum = prevSum(at the first step) + 2",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526084251,
        "id": "cbb8d672-7a66-42d1-9658-16e354d7e587",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526084251,
        "parent_id": "ee85b88c-485c-4435-94b9-01f4279047a4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "At the i-th step "
            ],
            [
              "prevSum = prevSum(at the (i-1) step) + i-th element of the array",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "At the i-th step "
          },
          {
            "Text": "prevSum = prevSum(at the (i-1) step) + i-th element of the array",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526084251,
        "id": "c4a74558-8eae-4439-84eb-a0151508580b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550126220000,
        "parent_id": "ee85b88c-485c-4435-94b9-01f4279047a4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "string[] stringList = { \"Hello\", \"World\", \"!\" };\nstring joinedString = stringList.Aggregate((prev, current) =\u003e prev + \" \" + current);\n// joinedString = \"Hello World !\""
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "string[] stringList = { \"Hello\", \"World\", \"!\" };\nstring joinedString = stringList.Aggregate((prev, current) =\u003e prev + \" \" + current);\n// joinedString = \"Hello World !\"",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526084252,
        "id": "9496438a-4ea0-4dfa-8d26-6fd526bd1f47",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526084252,
        "parent_id": "ee85b88c-485c-4435-94b9-01f4279047a4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A second overload of "
            ],
            [
              "Aggregate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " also receives an "
            ],
            [
              "seed",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " parameter which is the initial accumulator value. This can be used to calculate multiple conditions on a collection without iterating it more than once."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A second overload of "
          },
          {
            "Text": "Aggregate",
            "AttrFlags": 2
          },
          {
            "Text": " also receives an "
          },
          {
            "Text": "seed",
            "AttrFlags": 2
          },
          {
            "Text": " parameter which is the initial accumulator value. This can be used to calculate multiple conditions on a collection without iterating it more than once."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526084252,
        "id": "86bd9244-d68e-4ae8-b43f-cedeef4533c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550126160000,
        "parent_id": "ee85b88c-485c-4435-94b9-01f4279047a4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "List\u003cint\u003e items = new List\u003cint\u003e { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "List\u003cint\u003e items = new List\u003cint\u003e { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526084252,
        "id": "17b498e0-39f1-45e5-95bf-6c0e9a356e46",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526084252,
        "parent_id": "ee85b88c-485c-4435-94b9-01f4279047a4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For the collection of "
            ],
            [
              "items",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " we want to calculate"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For the collection of "
          },
          {
            "Text": "items",
            "AttrFlags": 2
          },
          {
            "Text": " we want to calculate"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526084252,
        "id": "19cb659e-0e38-4bbe-ab53-375a8414a25b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526084252,
        "parent_id": "ee85b88c-485c-4435-94b9-01f4279047a4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The total "
            ],
            [
              ".Count",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The total "
          },
          {
            "Text": ".Count",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526084253,
        "id": "028352ba-7f25-40a8-8c74-909dd6ab0c82",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526084253,
        "parent_id": "ee85b88c-485c-4435-94b9-01f4279047a4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The amount of even numbers"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The amount of even numbers"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526084253,
        "id": "48e779eb-476e-46c0-8491-705dda7fb74b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526084253,
        "parent_id": "ee85b88c-485c-4435-94b9-01f4279047a4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Collect each forth item"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Collect each forth item"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526084253,
        "id": "b7d24ec8-1921-40ff-8359-b1ff4f2aa332",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526084253,
        "parent_id": "ee85b88c-485c-4435-94b9-01f4279047a4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using "
            ],
            [
              "Aggregate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " it can be done like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using "
          },
          {
            "Text": "Aggregate",
            "AttrFlags": 2
          },
          {
            "Text": " it can be done like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526084253,
        "id": "a1a641dc-ae1b-4ea7-bc89-22e158a47c7b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550126220000,
        "parent_id": "ee85b88c-485c-4435-94b9-01f4279047a4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "var result = items.Aggregate(new { Total = 0, Even = 0, FourthItems = new List\u003cint\u003e() },\n                (accumelative,item) =\u003e\n                new {\n                    Total = accumelative.Total + 1,\n                    Even = accumelative.Even + (item % 2 == 0 ? 1 : 0),\n                    FourthItems = (accumelative.Total + 1)%4 == 0 ? \n                        new List\u003cint\u003e(accumelative.FourthItems) { item } : \n                        accumelative.FourthItems \n                });\n// Result:\n// Total = 12\n// Even = 6\n// FourthItems = [4, 8, 12]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var result = items.Aggregate(new { Total = 0, Even = 0, FourthItems = new List\u003cint\u003e() },\n                (accumelative,item) =\u003e\n                new {\n                    Total = accumelative.Total + 1,\n                    Even = accumelative.Even + (item % 2 == 0 ? 1 : 0),\n                    FourthItems = (accumelative.Total + 1)%4 == 0 ? \n                        new List\u003cint\u003e(accumelative.FourthItems) { item } : \n                        accumelative.FourthItems \n                });\n// Result:\n// Total = 12\n// Even = 6\n// FourthItems = [4, 8, 12]",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526084253,
        "id": "d915f0d4-daa5-4b3f-a8c4-d5c8f801ebed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526084253,
        "parent_id": "ee85b88c-485c-4435-94b9-01f4279047a4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that using an anonymous type as the seed one has to instantiate a new object each item because the properties are read only. Using a custom class one can simply assign the information and no ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "new",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " is needed (only when giving the initial ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "seed",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " parameter",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that using an anonymous type as the seed one has to instantiate a new object each item because the properties are read only. Using a custom class one can simply assign the information and no ",
            "AttrFlags": 4
          },
          {
            "Text": "new",
            "AttrFlags": 6
          },
          {
            "Text": " is needed (only when giving the initial ",
            "AttrFlags": 4
          },
          {
            "Text": "seed",
            "AttrFlags": 6
          },
          {
            "Text": " parameter",
            "AttrFlags": 4
          }
        ]
      }
    ],
    "title": "Aggregate",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}