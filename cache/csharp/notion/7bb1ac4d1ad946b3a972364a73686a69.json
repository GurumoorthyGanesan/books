{
  "ID": "7bb1ac4d-1ad9-46b3-a972-364a73686a69",
  "Root": {
    "alive": true,
    "content": [
      "709e3f56-0cd5-468d-9b05-151673bebfa6",
      "db4384b1-87f5-4909-81b8-76133754e3e7"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549526962255,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "7bb1ac4d-1ad9-46b3-a972-364a73686a69",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550135520000,
    "parent_id": "852bbb3c-ca26-4ee2-ae32-0e5376b5a38e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Enum to string and back"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526962255,
        "id": "709e3f56-0cd5-468d-9b05-151673bebfa6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550135520000,
        "parent_id": "7bb1ac4d-1ad9-46b3-a972-364a73686a69",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public enum DayOfWeek\n{\n    Sunday,\n    Monday,\n    Tuesday,\n    Wednesday,\n    Thursday,\n    Friday,\n    Saturday\n}\n\n    \n// Enum to string\nstring thursday = DayOfWeek.Thursday.ToString(); // \"Thursday\"\n\nstring seventhDay = Enum.GetName(typeof(DayOfWeek), 6); // \"Saturday\"\n\nstring monday = Enum.GetName(typeof(DayOfWeek), DayOfWeek.Monday); // \"Monday\"\n\n\n// String to enum (.NET 4.0+ only - see below for alternative syntax for earlier .NET versions)\nDayOfWeek tuesday;\nEnum.TryParse(\"Tuesday\", out tuesday); // DayOfWeek.Tuesday\n\nDayOfWeek sunday;\nbool matchFound1 = Enum.TryParse(\"SUNDAY\", out sunday); // Returns false (case-sensitive match)\n\nDayOfWeek wednesday;\nbool matchFound2 = Enum.TryParse(\"WEDNESDAY\", true, out wednesday); // Returns true; DayOfWeek.Wednesday (case-insensitive match)\n\n\n// String to enum (all .NET versions)\nDayOfWeek friday = (DayOfWeek)Enum.Parse(typeof(DayOfWeek), \"Friday\"); // DayOfWeek.Friday\n\nDayOfWeek caturday = (DayOfWeek)Enum.Parse(typeof(DayOfWeek), \"Caturady\"); // Thows ArgumentException\n\n// All names of an enum type as strings\nstring[] weekdays = Enum.GetNames(typeof(DayOfWeek));"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "public enum DayOfWeek\n{\n    Sunday,\n    Monday,\n    Tuesday,\n    Wednesday,\n    Thursday,\n    Friday,\n    Saturday\n}\n\n    \n// Enum to string\nstring thursday = DayOfWeek.Thursday.ToString(); // \"Thursday\"\n\nstring seventhDay = Enum.GetName(typeof(DayOfWeek), 6); // \"Saturday\"\n\nstring monday = Enum.GetName(typeof(DayOfWeek), DayOfWeek.Monday); // \"Monday\"\n\n\n// String to enum (.NET 4.0+ only - see below for alternative syntax for earlier .NET versions)\nDayOfWeek tuesday;\nEnum.TryParse(\"Tuesday\", out tuesday); // DayOfWeek.Tuesday\n\nDayOfWeek sunday;\nbool matchFound1 = Enum.TryParse(\"SUNDAY\", out sunday); // Returns false (case-sensitive match)\n\nDayOfWeek wednesday;\nbool matchFound2 = Enum.TryParse(\"WEDNESDAY\", true, out wednesday); // Returns true; DayOfWeek.Wednesday (case-insensitive match)\n\n\n// String to enum (all .NET versions)\nDayOfWeek friday = (DayOfWeek)Enum.Parse(typeof(DayOfWeek), \"Friday\"); // DayOfWeek.Friday\n\nDayOfWeek caturday = (DayOfWeek)Enum.Parse(typeof(DayOfWeek), \"Caturady\"); // Thows ArgumentException\n\n// All names of an enum type as strings\nstring[] weekdays = Enum.GetNames(typeof(DayOfWeek));",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550135520000,
        "id": "db4384b1-87f5-4909-81b8-76133754e3e7",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550135520000,
        "parent_id": "7bb1ac4d-1ad9-46b3-a972-364a73686a69",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "Enum to string and back",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}