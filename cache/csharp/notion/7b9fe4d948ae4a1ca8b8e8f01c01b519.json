{
  "ID": "7b9fe4d9-48ae-4a1c-a8b8-e8f01c01b519",
  "Root": {
    "alive": true,
    "content": [
      "1d2f288f-f1ba-478e-81d0-343d3a049a6b",
      "55563e16-4a32-4560-aa62-2251d232bf4c",
      "598d2883-eb6e-4a1a-a08a-9357532731ad"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525133502,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "7b9fe4d9-48ae-4a1c-a8b8-e8f01c01b519",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549613460000,
    "parent_id": "6bc8984c-0999-42e1-a500-ace83190c171",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Checking equality of generic values."
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525133500,
        "id": "1d2f288f-f1ba-478e-81d0-343d3a049a6b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525133500,
        "parent_id": "7b9fe4d9-48ae-4a1c-a8b8-e8f01c01b519",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If logic of generic class or method requires checking equality of values having generic type, use "
            ],
            [
              "EqualityComparer\u003cTType\u003e.Default",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "property",
              [
                [
                  "a",
                  "https://msdn.microsoft.com/en-us/library/ms224763(v=vs.110).aspx"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If logic of generic class or method requires checking equality of values having generic type, use "
          },
          {
            "Text": "EqualityComparer\u003cTType\u003e.Default",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "property",
            "Link": "https://msdn.microsoft.com/en-us/library/ms224763(v=vs.110).aspx"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525133501,
        "id": "55563e16-4a32-4560-aa62-2251d232bf4c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549613460000,
        "parent_id": "7b9fe4d9-48ae-4a1c-a8b8-e8f01c01b519",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public void Foo\u003cTBar\u003e(TBar arg1, TBar arg2)\n{\n    var comparer = EqualityComparer\u003cTBar\u003e.Default;\n    if (comparer.Equals(arg1,arg2)\n    {\n        ...\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public void Foo\u003cTBar\u003e(TBar arg1, TBar arg2)\n{\n    var comparer = EqualityComparer\u003cTBar\u003e.Default;\n    if (comparer.Equals(arg1,arg2)\n    {\n        ...\n    }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525133501,
        "id": "598d2883-eb6e-4a1a-a08a-9357532731ad",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525133501,
        "parent_id": "7b9fe4d9-48ae-4a1c-a8b8-e8f01c01b519",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This approach is better than simply calling "
            ],
            [
              "Object.Equals()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method, because default comparer implementation checks, whether "
            ],
            [
              "TBar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " type implements "
            ],
            [
              "IEquatale\u003cTBar\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "interface",
              [
                [
                  "a",
                  "https://msdn.microsoft.com/en-us/library/ms131187(v=vs.110).aspx"
                ]
              ]
            ],
            [
              " and if yes, calls "
            ],
            [
              "IEquatable\u003cTBar\u003e.Equals(TBar other)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method. This allows to avoid boxing/unboxing of value types."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This approach is better than simply calling "
          },
          {
            "Text": "Object.Equals()",
            "AttrFlags": 2
          },
          {
            "Text": " method, because default comparer implementation checks, whether "
          },
          {
            "Text": "TBar",
            "AttrFlags": 2
          },
          {
            "Text": " type implements "
          },
          {
            "Text": "IEquatale\u003cTBar\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "interface",
            "Link": "https://msdn.microsoft.com/en-us/library/ms131187(v=vs.110).aspx"
          },
          {
            "Text": " and if yes, calls "
          },
          {
            "Text": "IEquatable\u003cTBar\u003e.Equals(TBar other)",
            "AttrFlags": 2
          },
          {
            "Text": " method. This allows to avoid boxing/unboxing of value types."
          }
        ]
      }
    ],
    "title": "Checking equality of generic values.",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}