{
  "ID": "6e694662-866d-464a-880c-a5d384da96d9",
  "Root": {
    "id": "6e694662-866d-464a-880c-a5d384da96d9",
    "alive": true,
    "content": [
      "9296c47e-9409-4a21-8965-35cb2e1d026c",
      "2f69a69b-ceea-41a5-9a2e-919f050d493a",
      "df05cba7-4eba-4b70-817d-717de6537397",
      "eb50b322-bd7f-4034-bd73-7b20c313c92c",
      "175a7fcc-c215-454f-829f-4df3bec66529",
      "3e65e853-3cca-46b4-acf6-a753add36f96"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525012512,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549940760000,
    "parent_id": "1cef0e56-e2c1-46b9-9c66-002b53d2c779",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "default"
        ]
      ]
    },
    "type": "page",
    "version": 14,
    "content_resolved": [
      {
        "id": "9296c47e-9409-4a21-8965-35cb2e1d026c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525012510,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525012510,
        "parent_id": "6e694662-866d-464a-880c-a5d384da96d9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For classes, interfaces, delegate, array, nullable (such as int?) and pointer types, "
            ],
            [
              "default(TheType)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For classes, interfaces, delegate, array, nullable (such as int?) and pointer types, "
          },
          {
            "Text": "default(TheType)",
            "AttrFlags": 2
          },
          {
            "Text": " returns "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "id": "2f69a69b-ceea-41a5-9a2e-919f050d493a",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525012511,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940760000,
        "parent_id": "6e694662-866d-464a-880c-a5d384da96d9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "class MyClass {}\nDebug.Assert(default(MyClass) == null);\nDebug.Assert(default(string) == null);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "class MyClass {}\nDebug.Assert(default(MyClass) == null);\nDebug.Assert(default(string) == null);",
        "code_language": "C#"
      },
      {
        "id": "df05cba7-4eba-4b70-817d-717de6537397",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525012511,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525012511,
        "parent_id": "6e694662-866d-464a-880c-a5d384da96d9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For structs and enums, "
            ],
            [
              "default(TheType)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns the same as "
            ],
            [
              "new TheType()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For structs and enums, "
          },
          {
            "Text": "default(TheType)",
            "AttrFlags": 2
          },
          {
            "Text": " returns the same as "
          },
          {
            "Text": "new TheType()",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "id": "eb50b322-bd7f-4034-bd73-7b20c313c92c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525012511,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940760000,
        "parent_id": "6e694662-866d-464a-880c-a5d384da96d9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "struct Coordinates\n{\n    public int X { get; set; }\n    public int Y { get; set; }\n}\n\nstruct MyStruct\n{\n    public string Name { get; set; }\n    public Coordinates Location { get; set; }\n    public Coordinates? SecondLocation { get; set; }\n    public TimeSpan Duration { get; set; }\n}\n\nvar defaultStruct = default(MyStruct);\nDebug.Assert(defaultStruct.Equals(new MyStruct()));\nDebug.Assert(defaultStruct.Location.Equals(new Coordinates()));\nDebug.Assert(defaultStruct.Location.X == 0);\nDebug.Assert(defaultStruct.Location.Y == 0);\nDebug.Assert(defaultStruct.SecondLocation == null);\nDebug.Assert(defaultStruct.Name == null);\nDebug.Assert(defaultStruct.Duration == TimeSpan.Zero);"
            ]
          ]
        },
        "type": "code",
        "version": 9,
        "code": "struct Coordinates\n{\n    public int X { get; set; }\n    public int Y { get; set; }\n}\n\nstruct MyStruct\n{\n    public string Name { get; set; }\n    public Coordinates Location { get; set; }\n    public Coordinates? SecondLocation { get; set; }\n    public TimeSpan Duration { get; set; }\n}\n\nvar defaultStruct = default(MyStruct);\nDebug.Assert(defaultStruct.Equals(new MyStruct()));\nDebug.Assert(defaultStruct.Location.Equals(new Coordinates()));\nDebug.Assert(defaultStruct.Location.X == 0);\nDebug.Assert(defaultStruct.Location.Y == 0);\nDebug.Assert(defaultStruct.SecondLocation == null);\nDebug.Assert(defaultStruct.Name == null);\nDebug.Assert(defaultStruct.Duration == TimeSpan.Zero);",
        "code_language": "C#"
      },
      {
        "id": "175a7fcc-c215-454f-829f-4df3bec66529",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525012512,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525012512,
        "parent_id": "6e694662-866d-464a-880c-a5d384da96d9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "default(T)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be particularly useful when "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a generic parameter for which no constraint is present to decide whether "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a reference type or a value type, for example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "default(T)",
            "AttrFlags": 2
          },
          {
            "Text": " can be particularly useful when "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": " is a generic parameter for which no constraint is present to decide whether "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": " is a reference type or a value type, for example:"
          }
        ]
      },
      {
        "id": "3e65e853-3cca-46b4-acf6-a753add36f96",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549940791870,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940760000,
        "parent_id": "6e694662-866d-464a-880c-a5d384da96d9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public T GetResourceOrDefault\u003cT\u003e(string resourceName)\n{\n   if (ResourceExists(resourceName))\n   {\n      return (T)GetResource(resourceName);\n   }\n   else\n   {\n      return default(T);\n   }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 10,
        "code": "public T GetResourceOrDefault\u003cT\u003e(string resourceName)\n{\n   if (ResourceExists(resourceName))\n   {\n      return (T)GetResource(resourceName);\n   }\n   else\n   {\n      return default(T);\n   }\n}",
        "code_language": "C#"
      }
    ],
    "title": "default",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}