{
  "ID": "f041cff6-6dcf-4609-a33c-618ff4e114bb",
  "Root": {
    "alive": true,
    "content": [
      "e43fffed-3007-48aa-9990-a10c474ad428",
      "b2751d0e-a821-44db-ac75-7067837c0d91",
      "c1f029e3-8142-4156-8cc8-3ba85b88868e",
      "c0a81b9c-5e25-4d2e-9e5b-470f53c12276",
      "d9e13952-4321-4d7a-9a53-505c1155281f",
      "2da7e57f-a51b-4bd9-92f9-8d051ab2ac6d",
      "80362023-6aec-474f-adba-43cfb396bb4e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525925737,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "f041cff6-6dcf-4609-a33c-618ff4e114bb",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550113860000,
    "parent_id": "867a03bf-215a-491d-9311-455a673a589d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Early Termination"
        ]
      ]
    },
    "type": "page",
    "version": 19,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525925730,
        "id": "e43fffed-3007-48aa-9990-a10c474ad428",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525925730,
        "parent_id": "f041cff6-6dcf-4609-a33c-618ff4e114bb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can extend the functionality of existing "
            ],
            [
              "yield",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " methods by passing in one or more values or elements that could define a terminating condition within the function by calling a "
            ],
            [
              "yield break",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to stop the inner loop from executing."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can extend the functionality of existing "
          },
          {
            "Text": "yield",
            "AttrFlags": 2
          },
          {
            "Text": " methods by passing in one or more values or elements that could define a terminating condition within the function by calling a "
          },
          {
            "Text": "yield break",
            "AttrFlags": 2
          },
          {
            "Text": " to stop the inner loop from executing."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525925734,
        "id": "b2751d0e-a821-44db-ac75-7067837c0d91",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550113800000,
        "parent_id": "f041cff6-6dcf-4609-a33c-618ff4e114bb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public static IEnumerable\u003cint\u003e CountUntilAny(int start, HashSet\u003cint\u003e earlyTerminationSet)\n{\n    int curr = start;\n\n    while (true)\n    {\n        if (earlyTerminationSet.Contains(curr))\n        {\n            // we've hit one of the ending values\n            yield break;\n        }\n\n        yield return curr;\n\n        if (curr == Int32.MaxValue)\n        {\n            // don't overflow if we get all the way to the end; just stop\n            yield break;\n        }\n\n        curr++;\n    }\n}\n"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "public static IEnumerable\u003cint\u003e CountUntilAny(int start, HashSet\u003cint\u003e earlyTerminationSet)\n{\n    int curr = start;\n\n    while (true)\n    {\n        if (earlyTerminationSet.Contains(curr))\n        {\n            // we've hit one of the ending values\n            yield break;\n        }\n\n        yield return curr;\n\n        if (curr == Int32.MaxValue)\n        {\n            // don't overflow if we get all the way to the end; just stop\n            yield break;\n        }\n\n        curr++;\n    }\n}\n",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525925735,
        "id": "c1f029e3-8142-4156-8cc8-3ba85b88868e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525925735,
        "parent_id": "f041cff6-6dcf-4609-a33c-618ff4e114bb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The above method would iterate from a given "
            ],
            [
              "start",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " position until one of the values within the "
            ],
            [
              "earlyTerminationSet",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " was encountered."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The above method would iterate from a given "
          },
          {
            "Text": "start",
            "AttrFlags": 2
          },
          {
            "Text": " position until one of the values within the "
          },
          {
            "Text": "earlyTerminationSet",
            "AttrFlags": 2
          },
          {
            "Text": " was encountered."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525925735,
        "id": "c0a81b9c-5e25-4d2e-9e5b-470f53c12276",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550113860000,
        "parent_id": "f041cff6-6dcf-4609-a33c-618ff4e114bb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "// Iterate from a starting point until you encounter any elements defined as \n// terminating elements\nvar terminatingElements = new HashSet\u003cint\u003e{ 7, 9, 11 };\n// This will iterate from 1 until one of the terminating elements is encountered (7)\nforeach(var x in CountUntilAny(1,terminatingElements))\n{\n    // This will write out the results from 1 until 7 (which will trigger terminating)\n    Console.WriteLine(x);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// Iterate from a starting point until you encounter any elements defined as \n// terminating elements\nvar terminatingElements = new HashSet\u003cint\u003e{ 7, 9, 11 };\n// This will iterate from 1 until one of the terminating elements is encountered (7)\nforeach(var x in CountUntilAny(1,terminatingElements))\n{\n    // This will write out the results from 1 until 7 (which will trigger terminating)\n    Console.WriteLine(x);\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525925735,
        "id": "d9e13952-4321-4d7a-9a53-505c1155281f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525925735,
        "parent_id": "f041cff6-6dcf-4609-a33c-618ff4e114bb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525925735,
        "id": "2da7e57f-a51b-4bd9-92f9-8d051ab2ac6d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550113860000,
        "parent_id": "f041cff6-6dcf-4609-a33c-618ff4e114bb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "1\n2\n3\n4\n5\n6"
            ]
          ]
        },
        "type": "quote",
        "version": 12,
        "inline_content": [
          {
            "Text": "1\n2\n3\n4\n5\n6"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525925737,
        "id": "80362023-6aec-474f-adba-43cfb396bb4e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525925737,
        "parent_id": "f041cff6-6dcf-4609-a33c-618ff4e114bb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Live Demo on .NET Fiddle",
              [
                [
                  "a",
                  "https://dotnetfiddle.net/pctiOz"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Live Demo on .NET Fiddle",
            "Link": "https://dotnetfiddle.net/pctiOz"
          }
        ]
      }
    ],
    "title": "Early Termination",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}