{
  "ID": "80cce699-3a00-4c52-b6b1-fac0dae02496",
  "Root": {
    "id": "80cce699-3a00-4c52-b6b1-fac0dae02496",
    "alive": true,
    "content": [
      "b8bf09b6-fa14-452a-8bee-1d71ea80dbf0",
      "6810d682-c300-4993-b951-e444d322672b",
      "71ea50be-d94e-4711-a052-d198d19c3f0d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549527763263,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550204760000,
    "parent_id": "15c7c6c1-34d3-4692-bbfc-311e63288f8d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "DateTime as initializer in for-loop"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "id": "b8bf09b6-fa14-452a-8bee-1d71ea80dbf0",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527763259,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550204760000,
        "parent_id": "80cce699-3a00-4c52-b6b1-fac0dae02496",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "// This iterates through a range between two DateTimes \n// with the given iterator (any of the Add methods) \n\nDateTime start = new DateTime(2016, 01, 01);\nDateTime until = new DateTime(2016, 02, 01);\n\n// NOTICE: As the add methods return a new DateTime you have\n// to overwrite dt in the iterator like dt = dt.Add()\nfor (DateTime dt = start; dt \u003c until; dt = dt.AddDays(1))\n{\n    Console.WriteLine(\"Added {0} days. Resulting DateTime: {1}\", \n                      (dt - start).Days, dt.ToString());\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// This iterates through a range between two DateTimes \n// with the given iterator (any of the Add methods) \n\nDateTime start = new DateTime(2016, 01, 01);\nDateTime until = new DateTime(2016, 02, 01);\n\n// NOTICE: As the add methods return a new DateTime you have\n// to overwrite dt in the iterator like dt = dt.Add()\nfor (DateTime dt = start; dt \u003c until; dt = dt.AddDays(1))\n{\n    Console.WriteLine(\"Added {0} days. Resulting DateTime: {1}\", \n                      (dt - start).Days, dt.ToString());\n}",
        "code_language": "C#"
      },
      {
        "id": "6810d682-c300-4993-b951-e444d322672b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549527763262,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549527763262,
        "parent_id": "80cce699-3a00-4c52-b6b1-fac0dae02496",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Iterating on a ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "TimeSpan",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " works the same way.",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Iterating on a ",
            "AttrFlags": 4
          },
          {
            "Text": "TimeSpan",
            "AttrFlags": 6
          },
          {
            "Text": " works the same way.",
            "AttrFlags": 4
          }
        ]
      },
      {
        "id": "71ea50be-d94e-4711-a052-d198d19c3f0d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550204760000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550204760000,
        "parent_id": "80cce699-3a00-4c52-b6b1-fac0dae02496",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "DateTime as initializer in for-loop",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}