{
  "ID": "5e2ce511-0660-47b2-9731-99b40cde144b",
  "Root": {
    "id": "5e2ce511-0660-47b2-9731-99b40cde144b",
    "alive": true,
    "content": [
      "001013be-efcf-4bb0-9dc6-404728dfc6a0",
      "e446b18e-9125-44ef-9b5c-6b632ccd3c5c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549526212790,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550128320000,
    "parent_id": "fa946197-d3a2-4cf6-8c65-bc2d23788972",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Creating Expression Trees by Using the API"
        ]
      ]
    },
    "type": "page",
    "version": 13,
    "content_resolved": [
      {
        "id": "001013be-efcf-4bb0-9dc6-404728dfc6a0",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550128340862,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550128320000,
        "parent_id": "5e2ce511-0660-47b2-9731-99b40cde144b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "using System.Linq.Expressions;\n\n// Manually build the expression tree for \n// the lambda expression num =\u003e num \u003c 5.\nParameterExpression numParam = Expression.Parameter(typeof(int), \"num\");\nConstantExpression five = Expression.Constant(5, typeof(int));\nBinaryExpression numLessThanFive = Expression.LessThan(numParam, five);\nExpression\u003cFunc\u003cint, bool\u003e\u003e lambda1 =\n    Expression.Lambda\u003cFunc\u003cint, bool\u003e\u003e(\n        numLessThanFive,\n        new ParameterExpression[] { numParam });"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "using System.Linq.Expressions;\n\n// Manually build the expression tree for \n// the lambda expression num =\u003e num \u003c 5.\nParameterExpression numParam = Expression.Parameter(typeof(int), \"num\");\nConstantExpression five = Expression.Constant(5, typeof(int));\nBinaryExpression numLessThanFive = Expression.LessThan(numParam, five);\nExpression\u003cFunc\u003cint, bool\u003e\u003e lambda1 =\n    Expression.Lambda\u003cFunc\u003cint, bool\u003e\u003e(\n        numLessThanFive,\n        new ParameterExpression[] { numParam });",
        "code_language": "C#"
      },
      {
        "id": "e446b18e-9125-44ef-9b5c-6b632ccd3c5c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550128320000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550128320000,
        "parent_id": "5e2ce511-0660-47b2-9731-99b40cde144b",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "Creating Expression Trees by Using the API",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}