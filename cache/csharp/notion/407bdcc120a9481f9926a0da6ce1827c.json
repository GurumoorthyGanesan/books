{
  "ID": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
  "Root": {
    "alive": true,
    "content": [
      "eae8706c-89b0-4242-8025-7e808c6dec5e",
      "1e271783-1f6d-46fc-96c0-5bcf00e25d2d",
      "83953197-c269-477c-be7a-d90390f2d793",
      "545d9c3c-6d14-4e6a-857b-23b8871b1af0",
      "e389ce78-8a5b-4eaf-86f0-2c032458e18a",
      "17c81206-236d-45f8-a759-0d0c17682a16",
      "961f0e3b-17d0-452d-aacb-513229d59dd7",
      "961cc3f8-7e6e-4f1b-864e-ed3fa942bdd0",
      "26fae87f-31b7-432d-aab9-8f4be4679e8a",
      "0ba7439f-b3b4-4d16-9b9e-afac8d3e24d2",
      "41db093e-c2b0-4319-b1f0-d9a1128fe12a",
      "d3fc385f-b6b6-4c95-8131-ba6c3f2c3e0a",
      "e5f8ec61-39e9-4dc5-8df2-751fd2c07783",
      "3ed7d865-e0aa-475a-813e-d07c05061af2",
      "5cd15331-232c-4a32-b472-bfc3884817ed",
      "4cd67903-bd40-4af1-a5dc-ec3cd007ae51",
      "503a2713-b885-4edd-b29f-8feb84009c92",
      "d6c264c5-6d56-43b3-b57a-769be38ada98",
      "0f339194-2b38-4df3-b3d0-ed98de2dfbc1",
      "9b3d618b-937a-4d09-955a-53e79390754e",
      "7e081440-a30f-4e10-b367-1ddb88b43fcd",
      "1b70b0ad-a9bb-42d9-81be-621468187710",
      "ea466b82-c6e7-4470-a00a-a9d6440e2fa0",
      "cb6d01c3-2ba0-4074-a00f-6028248160f5",
      "cee91ae2-efc0-42e2-ba3b-e04efe2aa1e0",
      "7f8b9df3-f92e-4ca1-a1ad-1130d42f8fdc"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525475643,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549611600000,
    "parent_id": "9ff3cc78-9f6a-4238-a0a8-e9d9c0209cf7",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Creating Custom Exceptions"
        ]
      ]
    },
    "type": "page",
    "version": 11,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475637,
        "id": "eae8706c-89b0-4242-8025-7e808c6dec5e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525475637,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You are allowed to implement custom exceptions that can be thrown just like any other exception. This makes sense when you want to make your exceptions distinguishable from other errors during runtime."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You are allowed to implement custom exceptions that can be thrown just like any other exception. This makes sense when you want to make your exceptions distinguishable from other errors during runtime."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475639,
        "id": "1e271783-1f6d-46fc-96c0-5bcf00e25d2d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525475639,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example we will create a custom exception for clear handling of problems the application may have while parsing a complex input."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example we will create a custom exception for clear handling of problems the application may have while parsing a complex input."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475640,
        "id": "83953197-c269-477c-be7a-d90390f2d793",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525475640,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Creating Custom Exception Class"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Creating Custom Exception Class"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475640,
        "id": "545d9c3c-6d14-4e6a-857b-23b8871b1af0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525475640,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To create a custom exception create a sub-class of "
            ],
            [
              "Exception",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To create a custom exception create a sub-class of "
          },
          {
            "Text": "Exception",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475640,
        "id": "e389ce78-8a5b-4eaf-86f0-2c032458e18a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611540000,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class ParserException : Exception\n{\n    public ParserException() : \n      base(\"The parsing went wrong and we have no additional information.\") { }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public class ParserException : Exception\n{\n    public ParserException() : \n      base(\"The parsing went wrong and we have no additional information.\") { }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475640,
        "id": "17c81206-236d-45f8-a759-0d0c17682a16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525475640,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Custom exception become very useful when you want to provide additional information to the catcher:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Custom exception become very useful when you want to provide additional information to the catcher:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475640,
        "id": "961f0e3b-17d0-452d-aacb-513229d59dd7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611540000,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class ParserException : Exception\n{\n    public ParserException(string fileName, int lineNumber) : \n      base($\"Parser error in {fileName}:{lineNumber}\") \n    {\n      FileName = fileName;\n      LineNumber = lineNumber;\n    }\n    public string FileName {get; private set;}\n    public int LineNumber {get; private set;}    \n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public class ParserException : Exception\n{\n    public ParserException(string fileName, int lineNumber) : \n      base($\"Parser error in {fileName}:{lineNumber}\") \n    {\n      FileName = fileName;\n      LineNumber = lineNumber;\n    }\n    public string FileName {get; private set;}\n    public int LineNumber {get; private set;}    \n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475640,
        "id": "961cc3f8-7e6e-4f1b-864e-ed3fa942bdd0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525475640,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now, when you "
            ],
            [
              "catch(ParserException x)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " you will have additional semantics to fine-tune exception handling."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now, when you "
          },
          {
            "Text": "catch(ParserException x)",
            "AttrFlags": 2
          },
          {
            "Text": " you will have additional semantics to fine-tune exception handling."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475640,
        "id": "26fae87f-31b7-432d-aab9-8f4be4679e8a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525475640,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Custom classes can implement the following features to support additional scenarios."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Custom classes can implement the following features to support additional scenarios."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475641,
        "id": "0ba7439f-b3b4-4d16-9b9e-afac8d3e24d2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525475641,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "re-throwing"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "re-throwing"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475641,
        "id": "41db093e-c2b0-4319-b1f0-d9a1128fe12a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525475641,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "During the parsing process, the original exception is still of interest. In this example it is a "
            ],
            [
              "FormatException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " because the code attempts to parse a piece of string, which is expected to be a number. In this case the custom exception should support the inclusion of the ‘"
            ],
            [
              "InnerException",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "’:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "During the parsing process, the original exception is still of interest. In this example it is a "
          },
          {
            "Text": "FormatException",
            "AttrFlags": 2
          },
          {
            "Text": " because the code attempts to parse a piece of string, which is expected to be a number. In this case the custom exception should support the inclusion of the ‘"
          },
          {
            "Text": "InnerException",
            "AttrFlags": 1
          },
          {
            "Text": "’:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475641,
        "id": "d3fc385f-b6b6-4c95-8131-ba6c3f2c3e0a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611540000,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "//new constructor:\nParserException(string msg, Exception inner) : base(msg, inner) {\n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "//new constructor:\nParserException(string msg, Exception inner) : base(msg, inner) {\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475641,
        "id": "e5f8ec61-39e9-4dc5-8df2-751fd2c07783",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525475641,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "serialization"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "serialization"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475641,
        "id": "3ed7d865-e0aa-475a-813e-d07c05061af2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525475641,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In some cases your exceptions may have to cross AppDomain boundaries. This is the case if your parser is running in its own AppDomain to support hot reloading of new parser configurations. In Visual Studio, you can use "
            ],
            [
              "Exception",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " template to generate code like this."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In some cases your exceptions may have to cross AppDomain boundaries. This is the case if your parser is running in its own AppDomain to support hot reloading of new parser configurations. In Visual Studio, you can use "
          },
          {
            "Text": "Exception",
            "AttrFlags": 2
          },
          {
            "Text": " template to generate code like this."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475641,
        "id": "5cd15331-232c-4a32-b472-bfc3884817ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611600000,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "[Serializable]\npublic class ParserException : Exception\n{\n    // Constructor without arguments allows throwing your exception without\n    // providing any information, including error message. Should be included\n    // if your exception is meaningful without any additional details. Should\n    // set message by calling base constructor (default message is not helpful).\n    public ParserException()\n        : base(\"Parser failure.\")\n    {}\n\n\t\t// Constructor with message argument allows overriding default error message.\n    // Should be included if users can provide more helpful messages than\n    // generic automatically generated messages.\n    public ParserException(string message) \n        : base(message)\n    {}\n\n\t\t// Constructor for serialization support. If your exception contains custom\n    // properties, read their values here.\n    protected ParserException(SerializationInfo info, StreamingContext context) \n        : base(info, context)\n    {}\n}"
            ]
          ]
        },
        "type": "code",
        "version": 18,
        "code": "[Serializable]\npublic class ParserException : Exception\n{\n    // Constructor without arguments allows throwing your exception without\n    // providing any information, including error message. Should be included\n    // if your exception is meaningful without any additional details. Should\n    // set message by calling base constructor (default message is not helpful).\n    public ParserException()\n        : base(\"Parser failure.\")\n    {}\n\n\t\t// Constructor with message argument allows overriding default error message.\n    // Should be included if users can provide more helpful messages than\n    // generic automatically generated messages.\n    public ParserException(string message) \n        : base(message)\n    {}\n\n\t\t// Constructor for serialization support. If your exception contains custom\n    // properties, read their values here.\n    protected ParserException(SerializationInfo info, StreamingContext context) \n        : base(info, context)\n    {}\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475642,
        "id": "4cd67903-bd40-4af1-a5dc-ec3cd007ae51",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525475642,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using the ParserException"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using the ParserException"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475642,
        "id": "503a2713-b885-4edd-b29f-8feb84009c92",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611600000,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "try\n{\n    Process.StartRun(fileName)\n}\ncatch (ParserException ex)\n{\n    Console.WriteLine($\"{ex.Message} in ${ex.FileName}:${ex.LineNumber}\");\n}\ncatch (PostProcessException x) \n{\n    ...\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "try\n{\n    Process.StartRun(fileName)\n}\ncatch (ParserException ex)\n{\n    Console.WriteLine($\"{ex.Message} in ${ex.FileName}:${ex.LineNumber}\");\n}\ncatch (PostProcessException x) \n{\n    ...\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475642,
        "id": "d6c264c5-6d56-43b3-b57a-769be38ada98",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525475642,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You may also use custom exceptions for catching and wrapping exceptions. This way many different errors can be converted into a single error type that is more useful to the application:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You may also use custom exceptions for catching and wrapping exceptions. This way many different errors can be converted into a single error type that is more useful to the application:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475642,
        "id": "0f339194-2b38-4df3-b3d0-ed98de2dfbc1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611600000,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "try\n{\n    int foo = int.Parse(token);\n}\ncatch (FormatException ex)\n{\n    //Assuming you added this constructor\n    throw new ParserException(\n      $\"Failed to read {token} as number.\", \n      FileName, \n      LineNumber, \n      ex);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "try\n{\n    int foo = int.Parse(token);\n}\ncatch (FormatException ex)\n{\n    //Assuming you added this constructor\n    throw new ParserException(\n      $\"Failed to read {token} as number.\", \n      FileName, \n      LineNumber, \n      ex);\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475642,
        "id": "9b3d618b-937a-4d09-955a-53e79390754e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525475642,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When handling exceptions by raising your own custom exceptions, you should generally include a reference the original exception in the "
            ],
            [
              "InnerException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " property, as shown above."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When handling exceptions by raising your own custom exceptions, you should generally include a reference the original exception in the "
          },
          {
            "Text": "InnerException",
            "AttrFlags": 2
          },
          {
            "Text": " property, as shown above."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475642,
        "id": "7e081440-a30f-4e10-b367-1ddb88b43fcd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525475642,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Security Concerns"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Security Concerns"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475642,
        "id": "1b70b0ad-a9bb-42d9-81be-621468187710",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525475642,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If exposing the reason for the exception might compromise security by allowing users to see the inner workings of your application it can be a bad idea to wrap the inner exception. This might apply if you are creating a class library that will be used by others."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If exposing the reason for the exception might compromise security by allowing users to see the inner workings of your application it can be a bad idea to wrap the inner exception. This might apply if you are creating a class library that will be used by others."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475642,
        "id": "ea466b82-c6e7-4470-a00a-a9d6440e2fa0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525475642,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here is how you could raise a custom exception without wrapping the inner exception:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here is how you could raise a custom exception without wrapping the inner exception:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475642,
        "id": "cb6d01c3-2ba0-4074-a00f-6028248160f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549611600000,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "try\n{\n  // ...\n}\ncatch (SomeStandardException ex)\n{\n  // ...\n  throw new MyCustomException(someMessage);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "try\n{\n  // ...\n}\ncatch (SomeStandardException ex)\n{\n  // ...\n  throw new MyCustomException(someMessage);\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475643,
        "id": "cee91ae2-efc0-42e2-ba3b-e04efe2aa1e0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525475643,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Conclusion"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Conclusion"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525475643,
        "id": "7f8b9df3-f92e-4ca1-a1ad-1130d42f8fdc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525475643,
        "parent_id": "407bdcc1-20a9-481f-9926-a0da6ce1827c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When raising a custom exception (either with wrapping or with an unwrapped new exception), you should raise an exception that is meaningful to the caller. For instance, a user of a class library may not know much about how that library does its internal work. The exceptions that are thrown by the dependencies of the class library are not meaningful. Rather, the user wants an exception that is relevant to how the class library is using those dependencies in an erroneous way."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When raising a custom exception (either with wrapping or with an unwrapped new exception), you should raise an exception that is meaningful to the caller. For instance, a user of a class library may not know much about how that library does its internal work. The exceptions that are thrown by the dependencies of the class library are not meaningful. Rather, the user wants an exception that is relevant to how the class library is using those dependencies in an erroneous way."
          }
        ]
      }
    ],
    "title": "Creating Custom Exceptions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}