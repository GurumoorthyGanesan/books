{
  "ID": "932eff5d-79b7-477b-9acd-e840ac75520c",
  "Root": {
    "alive": true,
    "content": [
      "65ebb87c-a7ad-45a3-9469-ea8ef322dbeb",
      "1b8d6ccc-2da1-425b-b6e1-22d9908a2d7a",
      "6d04878f-b82f-48b6-a31f-35764b8cdba4",
      "48a507ba-7a49-45ce-952d-a3992ad31e9b",
      "214bdcd4-d9c6-47e6-8278-b925c1a840dc",
      "60bc3dfd-dc0b-4682-8af1-63be5746701b",
      "1a1b1ff3-6c3a-4464-8915-81ec4204311e",
      "8f96cb4a-abb2-468d-8b7a-a30351c0da5a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549524906401,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "932eff5d-79b7-477b-9acd-e840ac75520c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549614360000,
    "parent_id": "28ea2117-40fd-45d0-994d-634e6ddcd552",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Constructors and Finalizers"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524906395,
        "id": "65ebb87c-a7ad-45a3-9469-ea8ef322dbeb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524906395,
        "parent_id": "932eff5d-79b7-477b-9acd-e840ac75520c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524906397,
        "id": "1b8d6ccc-2da1-425b-b6e1-22d9908a2d7a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524906397,
        "parent_id": "932eff5d-79b7-477b-9acd-e840ac75520c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Constructors are methods in a class that are invoked when an instance of that class is created. Their main responsibility is to leave the new object in a useful and consistent state."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Constructors are methods in a class that are invoked when an instance of that class is created. Their main responsibility is to leave the new object in a useful and consistent state."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524906397,
        "id": "6d04878f-b82f-48b6-a31f-35764b8cdba4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524906397,
        "parent_id": "932eff5d-79b7-477b-9acd-e840ac75520c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Destructors/Finalizers are methods in a class that are invoked when an instance of that is destroyed. In C# they are rarely explicitely written/used."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Destructors/Finalizers are methods in a class that are invoked when an instance of that is destroyed. In C# they are rarely explicitely written/used."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524906398,
        "id": "48a507ba-7a49-45ce-952d-a3992ad31e9b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524906398,
        "parent_id": "932eff5d-79b7-477b-9acd-e840ac75520c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524906398,
        "id": "214bdcd4-d9c6-47e6-8278-b925c1a840dc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524906398,
        "parent_id": "932eff5d-79b7-477b-9acd-e840ac75520c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C# does not actually have destructors, but rather Finalizers which use C++ style destructor syntax. Specifying a destructor overrides the "
            ],
            [
              "Object.Finalize()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method which cannot be called directly."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "C# does not actually have destructors, but rather Finalizers which use C++ style destructor syntax. Specifying a destructor overrides the "
          },
          {
            "Text": "Object.Finalize()",
            "AttrFlags": 2
          },
          {
            "Text": " method which cannot be called directly."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524906399,
        "id": "60bc3dfd-dc0b-4682-8af1-63be5746701b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524906399,
        "parent_id": "932eff5d-79b7-477b-9acd-e840ac75520c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Unlike other languages with similar syntax, these methods are "
            ],
            [
              "not",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " called when objects go out of scope, but are called when the Garbage Collector runs, which occurs "
            ],
            [
              "under certain conditions",
              [
                [
                  "a",
                  "https://msdn.microsoft.com/en-us/library/ee787088(v=vs.110).aspx#conditions_for_a_garbage_collection"
                ]
              ]
            ],
            [
              ". As such, they are "
            ],
            [
              "not",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " guaranteed to run in any particular order."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Unlike other languages with similar syntax, these methods are "
          },
          {
            "Text": "not",
            "AttrFlags": 4
          },
          {
            "Text": " called when objects go out of scope, but are called when the Garbage Collector runs, which occurs "
          },
          {
            "Text": "under certain conditions",
            "Link": "https://msdn.microsoft.com/en-us/library/ee787088(v=vs.110).aspx#conditions_for_a_garbage_collection"
          },
          {
            "Text": ". As such, they are "
          },
          {
            "Text": "not",
            "AttrFlags": 4
          },
          {
            "Text": " guaranteed to run in any particular order."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524906400,
        "id": "1a1b1ff3-6c3a-4464-8915-81ec4204311e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524906400,
        "parent_id": "932eff5d-79b7-477b-9acd-e840ac75520c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finalizers should be responsible for cleaning up unmanaged resources "
            ],
            [
              "only",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " (pointers acquired via the Marshal class, received through p/Invoke (system calls) or raw pointers used within unsafe blocks). To clean up managed resources, please review IDisposable, the Dispose pattern and the "
            ],
            [
              "using",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%23/38/using-statement"
                ]
              ]
            ],
            [
              " statement."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finalizers should be responsible for cleaning up unmanaged resources "
          },
          {
            "Text": "only",
            "AttrFlags": 1
          },
          {
            "Text": " (pointers acquired via the Marshal class, received through p/Invoke (system calls) or raw pointers used within unsafe blocks). To clean up managed resources, please review IDisposable, the Dispose pattern and the "
          },
          {
            "Text": "using",
            "AttrFlags": 2,
            "Link": "http://stackoverflow.com/documentation/c%23/38/using-statement"
          },
          {
            "Text": " statement."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524906400,
        "id": "8f96cb4a-abb2-468d-8b7a-a30351c0da5a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524906400,
        "parent_id": "932eff5d-79b7-477b-9acd-e840ac75520c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "(Further reading: "
            ],
            [
              "When should I create a destructor?",
              [
                [
                  "a",
                  "http://stackoverflow.com/a/4899622"
                ]
              ]
            ],
            [
              ")"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "(Further reading: "
          },
          {
            "Text": "When should I create a destructor?",
            "Link": "http://stackoverflow.com/a/4899622"
          },
          {
            "Text": ")"
          }
        ]
      }
    ],
    "title": "Constructors and Finalizers",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}