{
  "ID": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
  "Root": {
    "id": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
    "alive": true,
    "content": [
      "eaac1f9c-dcfa-44a7-ab93-eeafa0edb6ee",
      "007dd21e-0631-4aad-a1f4-d13bc7835a6c",
      "751637c4-9ce6-41a7-8a2b-8b7006a07d6d",
      "aaaee8e5-e4c2-47f3-a7eb-fa22d440ddf2",
      "c6f337d8-a9de-4a84-bcce-e1bd2eb0d553",
      "b44db745-8487-48a8-afb0-df722680696d",
      "ab87b748-017c-4327-b615-8d7e443db5ff",
      "e8d68636-abb3-4201-a14d-88746bbcfda6",
      "5afb1e32-684f-4cb5-9d99-8a2ab1a54363",
      "8b7f14c5-9ed4-4134-b4fe-271858f915e2",
      "b472eade-0a78-4ece-b0fb-e8ac93f2ceda",
      "c5fc597a-793f-4b7a-a460-61d1896cc286",
      "876904c9-1719-426f-a743-6d975fc92cc3",
      "e5169cea-458b-47ac-82bc-b00f5a5bf667",
      "a76f9b51-145b-42b4-bd5d-74ec1bfc2101",
      "7ed1bf15-c741-4a92-b1ce-f2b731fb4ac6",
      "76483f8b-1b0a-4825-a5ec-c01746aef92d",
      "eddcca80-426a-4c0e-abda-359582953b24"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525005458,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549940460000,
    "parent_id": "1cef0e56-e2c1-46b9-9c66-002b53d2c779",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "break"
        ]
      ]
    },
    "type": "page",
    "version": 14,
    "content_resolved": [
      {
        "id": "eaac1f9c-dcfa-44a7-ab93-eeafa0edb6ee",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525005454,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525005454,
        "parent_id": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In a loop (for, foreach, do, while) the "
            ],
            [
              "break",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement aborts the execution of the innermost loop and returns to the code after it. Also it can be used with "
            ],
            [
              "yield",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in which it specifies that an iterator has come to an end."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In a loop (for, foreach, do, while) the "
          },
          {
            "Text": "break",
            "AttrFlags": 2
          },
          {
            "Text": " statement aborts the execution of the innermost loop and returns to the code after it. Also it can be used with "
          },
          {
            "Text": "yield",
            "AttrFlags": 2
          },
          {
            "Text": " in which it specifies that an iterator has come to an end."
          }
        ]
      },
      {
        "id": "007dd21e-0631-4aad-a1f4-d13bc7835a6c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525005454,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940460000,
        "parent_id": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "for (var i = 0; i \u003c 10; i++)\n{\n    if (i == 5)\n    {\n        break;\n    }\n    Console.WriteLine(\"This will appear only 5 times, as the break will stop the loop.\");\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "for (var i = 0; i \u003c 10; i++)\n{\n    if (i == 5)\n    {\n        break;\n    }\n    Console.WriteLine(\"This will appear only 5 times, as the break will stop the loop.\");\n}",
        "code_language": "C#"
      },
      {
        "id": "751637c4-9ce6-41a7-8a2b-8b7006a07d6d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525005455,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525005455,
        "parent_id": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Live Demo on .NET Fiddle",
              [
                [
                  "a",
                  "https://dotnetfiddle.net/QtpNyk"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Live Demo on .NET Fiddle",
            "Link": "https://dotnetfiddle.net/QtpNyk"
          }
        ]
      },
      {
        "id": "aaaee8e5-e4c2-47f3-a7eb-fa22d440ddf2",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525005455,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940460000,
        "parent_id": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "foreach (var stuff in stuffCollection)\n{\n    if (stuff.SomeStringProp == null)\n        break;\n    // If stuff.SomeStringProp for any \"stuff\" is null, the loop is aborted.\n    Console.WriteLine(stuff.SomeStringProp);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "foreach (var stuff in stuffCollection)\n{\n    if (stuff.SomeStringProp == null)\n        break;\n    // If stuff.SomeStringProp for any \"stuff\" is null, the loop is aborted.\n    Console.WriteLine(stuff.SomeStringProp);\n}",
        "code_language": "C#"
      },
      {
        "id": "c6f337d8-a9de-4a84-bcce-e1bd2eb0d553",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525005455,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525005455,
        "parent_id": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The break-statement is also used in switch-case constructs to break out of a case or default segment."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The break-statement is also used in switch-case constructs to break out of a case or default segment."
          }
        ]
      },
      {
        "id": "b44db745-8487-48a8-afb0-df722680696d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525005455,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940460000,
        "parent_id": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "switch(a)\n{\n    case 5:\n        Console.WriteLine(\"a was 5!\");\n        break;\n\n    default:\n        Console.WriteLine(\"a was something else!\");\n        break;\n}\n"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "switch(a)\n{\n    case 5:\n        Console.WriteLine(\"a was 5!\");\n        break;\n\n    default:\n        Console.WriteLine(\"a was something else!\");\n        break;\n}\n",
        "code_language": "C#"
      },
      {
        "id": "ab87b748-017c-4327-b615-8d7e443db5ff",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525005456,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525005456,
        "parent_id": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In switch statements, the ‘break’ keyword is required at the end of each case statement. This is contrary to some languages that allow for ‘falling through’ to the next case statement in the series. Workarounds for this would include ‘goto’ statements or stacking the ‘case’ statements sequentially."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In switch statements, the ‘break’ keyword is required at the end of each case statement. This is contrary to some languages that allow for ‘falling through’ to the next case statement in the series. Workarounds for this would include ‘goto’ statements or stacking the ‘case’ statements sequentially."
          }
        ]
      },
      {
        "id": "e8d68636-abb3-4201-a14d-88746bbcfda6",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525005456,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525005456,
        "parent_id": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Following code will give numbers "
            ],
            [
              "0, 1, 2, ..., 9",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and the last line will not be executed. "
            ],
            [
              "yield break",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " signifies the end of the function (not just a loop)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Following code will give numbers "
          },
          {
            "Text": "0, 1, 2, ..., 9",
            "AttrFlags": 2
          },
          {
            "Text": " and the last line will not be executed. "
          },
          {
            "Text": "yield break",
            "AttrFlags": 2
          },
          {
            "Text": " signifies the end of the function (not just a loop)."
          }
        ]
      },
      {
        "id": "5afb1e32-684f-4cb5-9d99-8a2ab1a54363",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525005456,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940460000,
        "parent_id": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public static IEnumerable\u003cint\u003e GetNumbers()\n{\n    int i = 0;\n    while (true) {\n        if (i \u003c 10) {\n            yield return i++;\n        } else {\n            yield break;\n        }\n    }\n    Console.WriteLine(\"This line will not be executed\");\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public static IEnumerable\u003cint\u003e GetNumbers()\n{\n    int i = 0;\n    while (true) {\n        if (i \u003c 10) {\n            yield return i++;\n        } else {\n            yield break;\n        }\n    }\n    Console.WriteLine(\"This line will not be executed\");\n}",
        "code_language": "C#"
      },
      {
        "id": "8b7f14c5-9ed4-4134-b4fe-271858f915e2",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525005456,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525005456,
        "parent_id": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Live Demo on .NET Fiddle",
              [
                [
                  "a",
                  "https://dotnetfiddle.net/IjSyVJ"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Live Demo on .NET Fiddle",
            "Link": "https://dotnetfiddle.net/IjSyVJ"
          }
        ]
      },
      {
        "id": "b472eade-0a78-4ece-b0fb-e8ac93f2ceda",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525005457,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525005457,
        "parent_id": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that unlike some other languages, there is no way to label a particular break in C#. This means that in the case of nested loops, only the innermost loop will be stopped:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that unlike some other languages, there is no way to label a particular break in C#. This means that in the case of nested loops, only the innermost loop will be stopped:"
          }
        ]
      },
      {
        "id": "c5fc597a-793f-4b7a-a460-61d1896cc286",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525005457,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940460000,
        "parent_id": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "foreach (var outerItem in outerList)\n{\n    foreach (var innerItem in innerList)\n    {\n        if (innerItem.ShoudBreakForWhateverReason)\n            // This will only break out of the inner loop, the outer will continue:\n            break; \n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "foreach (var outerItem in outerList)\n{\n    foreach (var innerItem in innerList)\n    {\n        if (innerItem.ShoudBreakForWhateverReason)\n            // This will only break out of the inner loop, the outer will continue:\n            break; \n    }\n}",
        "code_language": "C#"
      },
      {
        "id": "876904c9-1719-426f-a743-6d975fc92cc3",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525005457,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525005457,
        "parent_id": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you want to break out of the "
            ],
            [
              "outer",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " loop here, you can use one of several different strategies, such as:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you want to break out of the "
          },
          {
            "Text": "outer",
            "AttrFlags": 4
          },
          {
            "Text": " loop here, you can use one of several different strategies, such as:"
          }
        ]
      },
      {
        "id": "e5169cea-458b-47ac-82bc-b00f5a5bf667",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525005457,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525005457,
        "parent_id": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A "
            ],
            [
              "goto",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " statement to jump out of the whole looping structure."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "A "
          },
          {
            "Text": "goto",
            "AttrFlags": 1
          },
          {
            "Text": " statement to jump out of the whole looping structure."
          }
        ]
      },
      {
        "id": "a76f9b51-145b-42b4-bd5d-74ec1bfc2101",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525005458,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525005458,
        "parent_id": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A specific flag variable ("
            ],
            [
              "shouldBreak",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the following example) that can be checked at the end of each iteration of the outer loop."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "A specific flag variable ("
          },
          {
            "Text": "shouldBreak",
            "AttrFlags": 2
          },
          {
            "Text": " in the following example) that can be checked at the end of each iteration of the outer loop."
          }
        ]
      },
      {
        "id": "7ed1bf15-c741-4a92-b1ce-f2b731fb4ac6",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525005458,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525005458,
        "parent_id": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Refactoring the code to use a "
            ],
            [
              "return",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement in the innermost loop body, or avoid the whole nested loop structure altogether."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Refactoring the code to use a "
          },
          {
            "Text": "return",
            "AttrFlags": 2
          },
          {
            "Text": " statement in the innermost loop body, or avoid the whole nested loop structure altogether."
          }
        ]
      },
      {
        "id": "76483f8b-1b0a-4825-a5ec-c01746aef92d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525005458,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940460000,
        "parent_id": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "bool shouldBreak = false;\nwhile(comeCondition)\n{\n    while(otherCondition)\n    {\n        if (conditionToBreak)\n        {\n            // Either tranfer control flow to the label below...\n            goto endAllLooping;\n\n            // OR use a flag, which can be checked in the outer loop:\n            shouldBreak = true;\n        }\n    }\n\n    if(shouldBreakNow)\n    {\n        break; // Break out of outer loop if flag was set to true\n    }\n}\n\nendAllLooping: // label from where control flow will continue"
            ]
          ]
        },
        "type": "code",
        "version": 9,
        "code": "bool shouldBreak = false;\nwhile(comeCondition)\n{\n    while(otherCondition)\n    {\n        if (conditionToBreak)\n        {\n            // Either tranfer control flow to the label below...\n            goto endAllLooping;\n\n            // OR use a flag, which can be checked in the outer loop:\n            shouldBreak = true;\n        }\n    }\n\n    if(shouldBreakNow)\n    {\n        break; // Break out of outer loop if flag was set to true\n    }\n}\n\nendAllLooping: // label from where control flow will continue",
        "code_language": "C#"
      },
      {
        "id": "eddcca80-426a-4c0e-abda-359582953b24",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549940460000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940460000,
        "parent_id": "e18b454d-486b-41c2-ad00-66da2c4bf8f6",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "break",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}