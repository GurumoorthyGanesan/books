{
  "ID": "feac9321-63f4-4679-afd5-420447e3e2c0",
  "Root": {
    "alive": true,
    "content": [
      "b54f10da-eed2-465c-b9d3-52706147a142",
      "3f860ede-b07f-4e79-bd58-2d1388dd87e7",
      "8738f879-2892-4829-9900-b70975a27de2",
      "803b9c24-36cb-4aae-a310-5389217196ba",
      "752f3f68-d26c-4952-954d-83e77cadd77d",
      "9b3506f4-f99e-41fc-8c4b-871cb8550603",
      "11e63b63-439c-491c-9aeb-ed0926012c98",
      "ec472105-3f09-42d0-9c1c-57c385cb7244",
      "dfdd08e4-0bcb-4d31-bc50-a4f151112c20",
      "f00aca78-86a0-4b1e-9ce5-6e96a28f7d47",
      "6507f288-95d1-4953-8685-ee0ae7722652"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549526100299,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "feac9321-63f4-4679-afd5-420447e3e2c0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549626780000,
    "parent_id": "a34c1078-f01c-44b1-b468-522f804fbc2d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "ToDictionary"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526100293,
        "id": "b54f10da-eed2-465c-b9d3-52706147a142",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526100293,
        "parent_id": "feac9321-63f4-4679-afd5-420447e3e2c0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "ToDictionary()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " LINQ method can be used to generate a "
            ],
            [
              "Dictionary\u003cTKey, TElement\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " collection based on a given "
            ],
            [
              "IEnumerable\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " source."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "ToDictionary()",
            "AttrFlags": 2
          },
          {
            "Text": " LINQ method can be used to generate a "
          },
          {
            "Text": "Dictionary\u003cTKey, TElement\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " collection based on a given "
          },
          {
            "Text": "IEnumerable\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " source."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526100296,
        "id": "3f860ede-b07f-4e79-bd58-2d1388dd87e7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526100296,
        "parent_id": "feac9321-63f4-4679-afd5-420447e3e2c0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "IEnumerable\u003cUser\u003e users = GetUsers();\nDictionary\u003cint, User\u003e usersById = users.ToDictionary(x =\u003e x.Id);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "IEnumerable\u003cUser\u003e users = GetUsers();\nDictionary\u003cint, User\u003e usersById = users.ToDictionary(x =\u003e x.Id);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526100296,
        "id": "8738f879-2892-4829-9900-b70975a27de2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526100296,
        "parent_id": "feac9321-63f4-4679-afd5-420447e3e2c0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example, the single argument passed to "
            ],
            [
              "ToDictionary",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is of type "
            ],
            [
              "Func\u003cTSource, TKey\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which returns the key for each element."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example, the single argument passed to "
          },
          {
            "Text": "ToDictionary",
            "AttrFlags": 2
          },
          {
            "Text": " is of type "
          },
          {
            "Text": "Func\u003cTSource, TKey\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ", which returns the key for each element."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526100296,
        "id": "803b9c24-36cb-4aae-a310-5389217196ba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526100296,
        "parent_id": "feac9321-63f4-4679-afd5-420447e3e2c0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is a concise way to perform the following operation:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is a concise way to perform the following operation:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526100296,
        "id": "752f3f68-d26c-4952-954d-83e77cadd77d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526100296,
        "parent_id": "feac9321-63f4-4679-afd5-420447e3e2c0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Dictionary\u003cint, User\u003e usersById = new Dictionary\u003cint User\u003e();\nforeach (User u in users) \n{\n  usersById.Add(u.Id, u);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Dictionary\u003cint, User\u003e usersById = new Dictionary\u003cint User\u003e();\nforeach (User u in users) \n{\n  usersById.Add(u.Id, u);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526100297,
        "id": "9b3506f4-f99e-41fc-8c4b-871cb8550603",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526100297,
        "parent_id": "feac9321-63f4-4679-afd5-420447e3e2c0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can also pass a second parameter to the "
            ],
            [
              "ToDictionary",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method, which is of type "
            ],
            [
              "Func\u003cTSource, TElement\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and returns the "
            ],
            [
              "Value",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to be added for each entry."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can also pass a second parameter to the "
          },
          {
            "Text": "ToDictionary",
            "AttrFlags": 2
          },
          {
            "Text": " method, which is of type "
          },
          {
            "Text": "Func\u003cTSource, TElement\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " and returns the "
          },
          {
            "Text": "Value",
            "AttrFlags": 2
          },
          {
            "Text": " to be added for each entry."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526100297,
        "id": "11e63b63-439c-491c-9aeb-ed0926012c98",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526100297,
        "parent_id": "feac9321-63f4-4679-afd5-420447e3e2c0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "IEnumerable\u003cUser\u003e users = GetUsers();\nDictionary\u003cint, string\u003e userNamesById = users.ToDictionary(x =\u003e x.Id, x =\u003e x.Name);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "IEnumerable\u003cUser\u003e users = GetUsers();\nDictionary\u003cint, string\u003e userNamesById = users.ToDictionary(x =\u003e x.Id, x =\u003e x.Name);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526100297,
        "id": "ec472105-3f09-42d0-9c1c-57c385cb7244",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526100297,
        "parent_id": "feac9321-63f4-4679-afd5-420447e3e2c0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is also possible to specify the "
            ],
            [
              "IComparer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that is used to compare key values. This can be useful when the key is a string and you want it to match case-insensitive."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is also possible to specify the "
          },
          {
            "Text": "IComparer",
            "AttrFlags": 2
          },
          {
            "Text": " that is used to compare key values. This can be useful when the key is a string and you want it to match case-insensitive."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526100297,
        "id": "dfdd08e4-0bcb-4d31-bc50-a4f151112c20",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526100297,
        "parent_id": "feac9321-63f4-4679-afd5-420447e3e2c0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "IEnumerable\u003cUser\u003e users = GetUsers();\nDictionary\u003cstring, User\u003e usersByCaseInsenstiveName = users.ToDictionary(x =\u003e x.Name, StringComparer.InvariantCultureIgnoreCase);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "IEnumerable\u003cUser\u003e users = GetUsers();\nDictionary\u003cstring, User\u003e usersByCaseInsenstiveName = users.ToDictionary(x =\u003e x.Name, StringComparer.InvariantCultureIgnoreCase);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526100297,
        "id": "f00aca78-86a0-4b1e-9ce5-6e96a28f7d47",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526100297,
        "parent_id": "feac9321-63f4-4679-afd5-420447e3e2c0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var user1 = usersByCaseInsenstiveName[\"john\"];\nvar user2 = usersByCaseInsenstiveName[\"JOHN\"];\nuser1 == user2; // Returns true"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var user1 = usersByCaseInsenstiveName[\"john\"];\nvar user2 = usersByCaseInsenstiveName[\"JOHN\"];\nuser1 == user2; // Returns true",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526100299,
        "id": "6507f288-95d1-4953-8685-ee0ae7722652",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526100299,
        "parent_id": "feac9321-63f4-4679-afd5-420447e3e2c0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: the "
            ],
            [
              "ToDictionary",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method requires all keys to be unique, there must be no duplicate keys. If there are, then an exception is thrown: "
            ],
            [
              "ArgumentException: An item with the same key has already been added.",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " If you have a scenario where you know that you will have multiple elements with the same key, then you are better off using "
            ],
            [
              "ToLookup",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%23/68/linq-queries/14871/tolookup"
                ]
              ]
            ],
            [
              " instead."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: the "
          },
          {
            "Text": "ToDictionary",
            "AttrFlags": 2
          },
          {
            "Text": " method requires all keys to be unique, there must be no duplicate keys. If there are, then an exception is thrown: "
          },
          {
            "Text": "ArgumentException: An item with the same key has already been added.",
            "AttrFlags": 2
          },
          {
            "Text": " If you have a scenario where you know that you will have multiple elements with the same key, then you are better off using "
          },
          {
            "Text": "ToLookup",
            "AttrFlags": 2,
            "Link": "http://stackoverflow.com/documentation/c%23/68/linq-queries/14871/tolookup"
          },
          {
            "Text": " instead."
          }
        ]
      }
    ],
    "title": "ToDictionary",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}