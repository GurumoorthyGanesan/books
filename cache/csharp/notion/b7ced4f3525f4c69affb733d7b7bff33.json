{
  "ID": "b7ced4f3-525f-4c69-affb-733d7b7bff33",
  "Root": {
    "id": "b7ced4f3-525f-4c69-affb-733d7b7bff33",
    "alive": true,
    "content": [
      "ee6be763-ad3b-4b40-825b-dbc7cfabb065",
      "bec37e25-cb3c-4a37-9467-2878d4c28e93",
      "6bdcdf28-2af0-4a6e-8108-862ba2960f43",
      "66f4115b-8f08-4a12-8f9d-befb7cff6742",
      "b88234e2-f355-47ba-b8ce-a492c9cbecc5",
      "2aebe043-a019-437e-8b05-944cfaba51fb",
      "6cb448aa-708b-431b-8fba-0db294b96924",
      "4796be61-5987-44e7-a806-c7ca5e1e269f",
      "0bcbad36-d286-4ca8-b8ec-7d524ead4e87",
      "8874d9fd-a3ac-4feb-89e7-3eec67abc768",
      "d2a8860b-c892-4e43-9b23-336b6de5577f",
      "bb238a90-a346-4f2b-a572-8e381f1785f1",
      "61ff98c9-3905-47f6-8431-ada4eafa6ee1"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549528137332,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550209080000,
    "parent_id": "ee6d0f15-065b-41fb-9f15-80d572e16745",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Foreach Loop"
        ]
      ]
    },
    "type": "page",
    "version": 12,
    "content_resolved": [
      {
        "id": "ee6be763-ad3b-4b40-825b-dbc7cfabb065",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528137328,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528137328,
        "parent_id": "b7ced4f3-525f-4c69-affb-733d7b7bff33",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "foreach will iterate over any object of a class that implements "
            ],
            [
              "IEnumerable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (take note that "
            ],
            [
              "IEnumerable\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " inherits from it). Such objects include some built-in ones, but not limit to: "
            ],
            [
              "List\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "T[]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (arrays of any type), "
            ],
            [
              "Dictionary\u003cTKey, TSource\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", as well as interfaces like "
            ],
            [
              "IQueryable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "ICollection",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", etc."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "foreach will iterate over any object of a class that implements "
          },
          {
            "Text": "IEnumerable",
            "AttrFlags": 2
          },
          {
            "Text": " (take note that "
          },
          {
            "Text": "IEnumerable\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " inherits from it). Such objects include some built-in ones, but not limit to: "
          },
          {
            "Text": "List\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "T[]",
            "AttrFlags": 2
          },
          {
            "Text": " (arrays of any type), "
          },
          {
            "Text": "Dictionary\u003cTKey, TSource\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ", as well as interfaces like "
          },
          {
            "Text": "IQueryable",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "ICollection",
            "AttrFlags": 2
          },
          {
            "Text": ", etc."
          }
        ]
      },
      {
        "id": "bec37e25-cb3c-4a37-9467-2878d4c28e93",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528137330,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528137330,
        "parent_id": "b7ced4f3-525f-4c69-affb-733d7b7bff33",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "syntax",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "syntax",
            "AttrFlags": 1
          }
        ]
      },
      {
        "id": "6bdcdf28-2af0-4a6e-8108-862ba2960f43",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528137330,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550209080000,
        "parent_id": "b7ced4f3-525f-4c69-affb-733d7b7bff33",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "foreach(ItemType itemVariable in enumerableObject)\n    statement;"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "foreach(ItemType itemVariable in enumerableObject)\n    statement;",
        "code_language": "C#"
      },
      {
        "id": "66f4115b-8f08-4a12-8f9d-befb7cff6742",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528137330,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528137330,
        "parent_id": "b7ced4f3-525f-4c69-affb-733d7b7bff33",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "remarks",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "remarks",
            "AttrFlags": 1
          }
        ]
      },
      {
        "id": "b88234e2-f355-47ba-b8ce-a492c9cbecc5",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528137331,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528137331,
        "parent_id": "b7ced4f3-525f-4c69-affb-733d7b7bff33",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The type "
            ],
            [
              "ItemType",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " does not need to match the precise type of the items, it just needs to be assignable from the type of the items"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The type "
          },
          {
            "Text": "ItemType",
            "AttrFlags": 2
          },
          {
            "Text": " does not need to match the precise type of the items, it just needs to be assignable from the type of the items"
          }
        ]
      },
      {
        "id": "2aebe043-a019-437e-8b05-944cfaba51fb",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528137331,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528137331,
        "parent_id": "b7ced4f3-525f-4c69-affb-733d7b7bff33",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Instead of "
            ],
            [
              "ItemType",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", alternatively "
            ],
            [
              "var",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be used which will infer the items type from the enumerableObject by inspecting the generic argument of the "
            ],
            [
              "IEnumerable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " implementation"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Instead of "
          },
          {
            "Text": "ItemType",
            "AttrFlags": 2
          },
          {
            "Text": ", alternatively "
          },
          {
            "Text": "var",
            "AttrFlags": 2
          },
          {
            "Text": " can be used which will infer the items type from the enumerableObject by inspecting the generic argument of the "
          },
          {
            "Text": "IEnumerable",
            "AttrFlags": 2
          },
          {
            "Text": " implementation"
          }
        ]
      },
      {
        "id": "6cb448aa-708b-431b-8fba-0db294b96924",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528137331,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528137331,
        "parent_id": "b7ced4f3-525f-4c69-affb-733d7b7bff33",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The statement can be a block, a single statement or even an empty statement ("
            ],
            [
              ";",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The statement can be a block, a single statement or even an empty statement ("
          },
          {
            "Text": ";",
            "AttrFlags": 2
          },
          {
            "Text": ")"
          }
        ]
      },
      {
        "id": "4796be61-5987-44e7-a806-c7ca5e1e269f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528137332,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528137332,
        "parent_id": "b7ced4f3-525f-4c69-affb-733d7b7bff33",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If "
            ],
            [
              "enumerableObject",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not implementing "
            ],
            [
              "IEnumerable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the code will not compile"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If "
          },
          {
            "Text": "enumerableObject",
            "AttrFlags": 2
          },
          {
            "Text": " is not implementing "
          },
          {
            "Text": "IEnumerable",
            "AttrFlags": 2
          },
          {
            "Text": ", the code will not compile"
          }
        ]
      },
      {
        "id": "0bcbad36-d286-4ca8-b8ec-7d524ead4e87",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528137332,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528137332,
        "parent_id": "b7ced4f3-525f-4c69-affb-733d7b7bff33",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "During each iteration the current item is cast to "
            ],
            [
              "ItemType",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (even if this is not specified but compiler-inferred via "
            ],
            [
              "var",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") and if the item cannot be cast an "
            ],
            [
              "InvalidCastException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be thrown."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "During each iteration the current item is cast to "
          },
          {
            "Text": "ItemType",
            "AttrFlags": 2
          },
          {
            "Text": " (even if this is not specified but compiler-inferred via "
          },
          {
            "Text": "var",
            "AttrFlags": 2
          },
          {
            "Text": ") and if the item cannot be cast an "
          },
          {
            "Text": "InvalidCastException",
            "AttrFlags": 2
          },
          {
            "Text": " will be thrown."
          }
        ]
      },
      {
        "id": "8874d9fd-a3ac-4feb-89e7-3eec67abc768",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528137332,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528137332,
        "parent_id": "b7ced4f3-525f-4c69-affb-733d7b7bff33",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consider this example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consider this example:"
          }
        ]
      },
      {
        "id": "d2a8860b-c892-4e43-9b23-336b6de5577f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528137332,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550209080000,
        "parent_id": "b7ced4f3-525f-4c69-affb-733d7b7bff33",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "var list = new List\u003cstring\u003e();\nlist.Add(\"Ion\");\nlist.Add(\"Andrei\");\nforeach(var name in list)\n{\n    Console.WriteLine(\"Hello \" + name);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var list = new List\u003cstring\u003e();\nlist.Add(\"Ion\");\nlist.Add(\"Andrei\");\nforeach(var name in list)\n{\n    Console.WriteLine(\"Hello \" + name);\n}",
        "code_language": "C#"
      },
      {
        "id": "bb238a90-a346-4f2b-a572-8e381f1785f1",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528137332,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528137332,
        "parent_id": "b7ced4f3-525f-4c69-affb-733d7b7bff33",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "is equivalent to:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "is equivalent to:"
          }
        ]
      },
      {
        "id": "61ff98c9-3905-47f6-8431-ada4eafa6ee1",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550209108212,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550209080000,
        "parent_id": "b7ced4f3-525f-4c69-affb-733d7b7bff33",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "var list = new List\u003cstring\u003e();\nlist.Add(\"Ion\");\nlist.Add(\"Andrei\");\nIEnumerator enumerator;\ntry\n{\n    enumerator = list.GetEnumerator();\n    while(enumerator.MoveNext())\n    {\n        string name = (string)enumerator.Current;\n        Console.WriteLine(\"Hello \" + name);\n    }\n}\nfinally\n{\n    if (enumerator != null)\n        enumerator.Dispose();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "var list = new List\u003cstring\u003e();\nlist.Add(\"Ion\");\nlist.Add(\"Andrei\");\nIEnumerator enumerator;\ntry\n{\n    enumerator = list.GetEnumerator();\n    while(enumerator.MoveNext())\n    {\n        string name = (string)enumerator.Current;\n        Console.WriteLine(\"Hello \" + name);\n    }\n}\nfinally\n{\n    if (enumerator != null)\n        enumerator.Dispose();\n}",
        "code_language": "C#"
      }
    ],
    "title": "Foreach Loop",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}