{
  "ID": "91a2c32f-6994-4b47-b588-4eca560ad112",
  "Root": {
    "alive": true,
    "content": [
      "ab283376-c660-47f3-a7ea-6e3e0a073183",
      "ef6118bf-a3af-4f09-bad9-01ef2ecee0b8",
      "bad8dae4-3720-4428-be9c-6a271cc93b45"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549529427283,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "91a2c32f-6994-4b47-b588-4eca560ad112",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550219220000,
    "parent_id": "9f28c871-5dbb-48d6-9c77-95dcaa586a2c",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Defining Contracts on Interface"
        ]
      ]
    },
    "type": "page",
    "version": 11,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529427279,
        "id": "ab283376-c660-47f3-a7ea-6e3e0a073183",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550219220000,
        "parent_id": "91a2c32f-6994-4b47-b588-4eca560ad112",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "[ContractClass(typeof(ValidationContract))]\ninterface IValidation\n{\n    string CustomerID{get;set;}\n    string Password{get;set;}\n}\n \n[ContractClassFor(typeof(IValidation))]\nsealed class ValidationContract:IValidation\n{\n    string IValidation.CustomerID\n    {\n        [Pure]\n        get\n        {\n            return Contract.Result\u003cstring\u003e();\n        }\n        set\n        {\n            Contract.Requires\u003cArgumentNullException\u003e(!string.IsNullOrEmpty(value), \"Customer ID cannot be null!!\");\n        }\n    }\n \n    string IValidation.Password\n    {\n        [Pure]\n        get\n        {\n            return Contract.Result\u003cstring\u003e();\n        }\n        set\n        {\n            Contract.Requires\u003cArgumentNullException\u003e(!string.IsNullOrEmpty(value), \"Password cannot be null!!\");\n        }\n    }\n}\n \nclass Validation:IValidation\n{\n    public string GetCustomerPassword(string customerID)\n    {\n        Contract.Requires(!string.IsNullOrEmpty(customerID),\"Customer ID cannot be Null\");\n        Contract.Requires\u003cArgumentNullException\u003e(!string.IsNullOrEmpty(customerID), \"Exception!!\");\n        Contract.Ensures(Contract.Result\u003cstring\u003e() != null);\n        string password=\"AAA@1234\";\n        if (customerID!=null)\n        {\n            return password;    \n        }\n        else\n        {\n            return null;\n        }\n         \n    }\n \n    private string m_custID, m_PWD;\n \n    public string CustomerID\n    {\n        get\n        {\n            return m_custID;\n        }\n        set\n        {\n            m_custID = value;\n        }\n    }\n \n    public string Password\n    {\n        get\n        {\n            return m_PWD;\n        }\n        set\n        {\n            m_PWD = value;\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "[ContractClass(typeof(ValidationContract))]\ninterface IValidation\n{\n    string CustomerID{get;set;}\n    string Password{get;set;}\n}\n \n[ContractClassFor(typeof(IValidation))]\nsealed class ValidationContract:IValidation\n{\n    string IValidation.CustomerID\n    {\n        [Pure]\n        get\n        {\n            return Contract.Result\u003cstring\u003e();\n        }\n        set\n        {\n            Contract.Requires\u003cArgumentNullException\u003e(!string.IsNullOrEmpty(value), \"Customer ID cannot be null!!\");\n        }\n    }\n \n    string IValidation.Password\n    {\n        [Pure]\n        get\n        {\n            return Contract.Result\u003cstring\u003e();\n        }\n        set\n        {\n            Contract.Requires\u003cArgumentNullException\u003e(!string.IsNullOrEmpty(value), \"Password cannot be null!!\");\n        }\n    }\n}\n \nclass Validation:IValidation\n{\n    public string GetCustomerPassword(string customerID)\n    {\n        Contract.Requires(!string.IsNullOrEmpty(customerID),\"Customer ID cannot be Null\");\n        Contract.Requires\u003cArgumentNullException\u003e(!string.IsNullOrEmpty(customerID), \"Exception!!\");\n        Contract.Ensures(Contract.Result\u003cstring\u003e() != null);\n        string password=\"AAA@1234\";\n        if (customerID!=null)\n        {\n            return password;    \n        }\n        else\n        {\n            return null;\n        }\n         \n    }\n \n    private string m_custID, m_PWD;\n \n    public string CustomerID\n    {\n        get\n        {\n            return m_custID;\n        }\n        set\n        {\n            m_custID = value;\n        }\n    }\n \n    public string Password\n    {\n        get\n        {\n            return m_PWD;\n        }\n        set\n        {\n            m_PWD = value;\n        }\n    }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529427282,
        "id": "ef6118bf-a3af-4f09-bad9-01ef2ecee0b8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529427282,
        "parent_id": "91a2c32f-6994-4b47-b588-4eca560ad112",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the above code, we have defined an interface called "
            ],
            [
              "IValidation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with an attribute "
            ],
            [
              "[ContractClass]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This attribute takes an address of a class where we have implemented a contract for an Interface. The class "
            ],
            [
              "ValidationContract",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " makes use of properties defined in the interface and checks for the null values using "
            ],
            [
              "Contract.Requires\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is an exception class."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the above code, we have defined an interface called "
          },
          {
            "Text": "IValidation",
            "AttrFlags": 2
          },
          {
            "Text": " with an attribute "
          },
          {
            "Text": "[ContractClass]",
            "AttrFlags": 2
          },
          {
            "Text": ". This attribute takes an address of a class where we have implemented a contract for an Interface. The class "
          },
          {
            "Text": "ValidationContract",
            "AttrFlags": 2
          },
          {
            "Text": " makes use of properties defined in the interface and checks for the null values using "
          },
          {
            "Text": "Contract.Requires\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ". "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": " is an exception class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529427282,
        "id": "bad8dae4-3720-4428-be9c-6a271cc93b45",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529427282,
        "parent_id": "91a2c32f-6994-4b47-b588-4eca560ad112",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We have also marked the get accessor with an attribute "
            ],
            [
              "[Pure]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The pure attribute ensures that the method or a property does not change the instance state of a class in which "
            ],
            [
              "IValidation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface is implemented."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We have also marked the get accessor with an attribute "
          },
          {
            "Text": "[Pure]",
            "AttrFlags": 2
          },
          {
            "Text": ". The pure attribute ensures that the method or a property does not change the instance state of a class in which "
          },
          {
            "Text": "IValidation",
            "AttrFlags": 2
          },
          {
            "Text": " interface is implemented."
          }
        ]
      }
    ],
    "title": "Defining Contracts on Interface",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}