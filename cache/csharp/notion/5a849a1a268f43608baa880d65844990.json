{
  "ID": "5a849a1a-268f-4360-8baa-880d65844990",
  "Root": {
    "id": "5a849a1a-268f-4360-8baa-880d65844990",
    "alive": true,
    "content": [
      "61651f21-337b-4dba-8896-10707d9b94f3",
      "25ebae64-1fe8-4c35-b68f-a6a99d680f5c",
      "ef0a8b27-e04f-4ac4-98a2-48c47322a469",
      "d970bb7c-c0bd-4b54-b897-85752c67704b",
      "8e2fd8c4-9319-4371-967e-1f82fe2449b3",
      "11557f9a-a524-42c1-b289-acc27e88d355",
      "f57a6855-55d2-4bc5-8c3a-9e7cd40fe47b",
      "ee203376-1410-4b67-89c9-84f32c50eda5",
      "0f82b568-5d23-4c63-b74e-f6e068ab3045",
      "75ef150e-70ba-4a89-8a4f-703d094c91d3",
      "657d9a60-0e66-4841-84c0-cf7eca32181c",
      "918a80b5-5194-420e-a985-3c0cc376c472",
      "3cbf9134-bf7d-431b-935e-d184e3dac9e6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549524491370,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549536300000,
    "parent_id": "f185d627-93ed-4197-8bae-c35411c58fa9",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "â‡’  Lambda operator"
        ]
      ]
    },
    "type": "page",
    "version": 20,
    "content_resolved": [
      {
        "id": "61651f21-337b-4dba-8896-10707d9b94f3",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524491363,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524491363,
        "parent_id": "5a849a1a-268f-4360-8baa-880d65844990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "=\u003e",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " operator has the same precedence as the assignment operator ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "=",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " and is right-associative.",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The ",
            "AttrFlags": 4
          },
          {
            "Text": "=\u003e",
            "AttrFlags": 6
          },
          {
            "Text": " operator has the same precedence as the assignment operator ",
            "AttrFlags": 4
          },
          {
            "Text": "=",
            "AttrFlags": 6
          },
          {
            "Text": " and is right-associative.",
            "AttrFlags": 4
          }
        ]
      },
      {
        "id": "25ebae64-1fe8-4c35-b68f-a6a99d680f5c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524491367,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524491367,
        "parent_id": "5a849a1a-268f-4360-8baa-880d65844990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is used to declare lambda expressions and also it is widely used with "
            ],
            [
              "LINQ Queries",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%23/68/linq-queries/4735/basics#t=201607251514251028068"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is used to declare lambda expressions and also it is widely used with "
          },
          {
            "Text": "LINQ Queries",
            "Link": "http://stackoverflow.com/documentation/c%23/68/linq-queries/4735/basics#t=201607251514251028068"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "id": "ef0a8b27-e04f-4ac4-98a2-48c47322a469",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524491367,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549536240000,
        "parent_id": "5a849a1a-268f-4360-8baa-880d65844990",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "string[] words = { \"cherry\", \"apple\", \"blueberry\" };\n\nint shortestWordLength = words.Min((string w) =\u003e w.Length); //5"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "string[] words = { \"cherry\", \"apple\", \"blueberry\" };\n\nint shortestWordLength = words.Min((string w) =\u003e w.Length); //5",
        "code_language": "C#"
      },
      {
        "id": "d970bb7c-c0bd-4b54-b897-85752c67704b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524491368,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524491368,
        "parent_id": "5a849a1a-268f-4360-8baa-880d65844990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When used in LINQ extensions or queries the type of the objects can usually be skipped as it is inferred by the compiler:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When used in LINQ extensions or queries the type of the objects can usually be skipped as it is inferred by the compiler:"
          }
        ]
      },
      {
        "id": "8e2fd8c4-9319-4371-967e-1f82fe2449b3",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524491368,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549536240000,
        "parent_id": "5a849a1a-268f-4360-8baa-880d65844990",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "int shortestWordLength = words.Min(w =\u003e w.Length); //also compiles with the same result"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "int shortestWordLength = words.Min(w =\u003e w.Length); //also compiles with the same result",
        "code_language": "C#"
      },
      {
        "id": "11557f9a-a524-42c1-b289-acc27e88d355",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524491368,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524491368,
        "parent_id": "5a849a1a-268f-4360-8baa-880d65844990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The general form of lambda operator is the following:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The general form of lambda operator is the following:"
          }
        ]
      },
      {
        "id": "f57a6855-55d2-4bc5-8c3a-9e7cd40fe47b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524491368,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549536240000,
        "parent_id": "5a849a1a-268f-4360-8baa-880d65844990",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "(input parameters) =\u003e expression"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "(input parameters) =\u003e expression",
        "code_language": "C#"
      },
      {
        "id": "ee203376-1410-4b67-89c9-84f32c50eda5",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524491368,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524491368,
        "parent_id": "5a849a1a-268f-4360-8baa-880d65844990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The parameters of the lambda expression are specified before "
            ],
            [
              "=\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator, and the actual expression/statement/block to be executed is to the right of the operator:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The parameters of the lambda expression are specified before "
          },
          {
            "Text": "=\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " operator, and the actual expression/statement/block to be executed is to the right of the operator:"
          }
        ]
      },
      {
        "id": "0f82b568-5d23-4c63-b74e-f6e068ab3045",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524491368,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549536240000,
        "parent_id": "5a849a1a-268f-4360-8baa-880d65844990",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "// expression\n(int x, string s) =\u003e s.Length \u003e x // expression\n(int x, int y) =\u003e x + y // statement\n(string x) =\u003e Console.WriteLine(x)\n// block\n(string x) =\u003e {\n        x += \" says Hello!\";\n        Console.WriteLine(x);\n    }"
            ]
          ]
        },
        "type": "code",
        "version": 5,
        "code": "// expression\n(int x, string s) =\u003e s.Length \u003e x // expression\n(int x, int y) =\u003e x + y // statement\n(string x) =\u003e Console.WriteLine(x)\n// block\n(string x) =\u003e {\n        x += \" says Hello!\";\n        Console.WriteLine(x);\n    }",
        "code_language": "C#"
      },
      {
        "id": "75ef150e-70ba-4a89-8a4f-703d094c91d3",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524491369,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524491369,
        "parent_id": "5a849a1a-268f-4360-8baa-880d65844990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This operator can be used to easily define delegates, without writing an explicit method:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This operator can be used to easily define delegates, without writing an explicit method:"
          }
        ]
      },
      {
        "id": "657d9a60-0e66-4841-84c0-cf7eca32181c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524491369,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549536240000,
        "parent_id": "5a849a1a-268f-4360-8baa-880d65844990",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "delegate void TestDelegate(string s);\n\nTestDelegate myDelegate = s =\u003e Console.WriteLine(s + \" World\");\n\nmyDelegate(\"Hello\");"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "delegate void TestDelegate(string s);\n\nTestDelegate myDelegate = s =\u003e Console.WriteLine(s + \" World\");\n\nmyDelegate(\"Hello\");",
        "code_language": "C#"
      },
      {
        "id": "918a80b5-5194-420e-a985-3c0cc376c472",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524491369,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524491369,
        "parent_id": "5a849a1a-268f-4360-8baa-880d65844990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "instead of"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "instead of"
          }
        ]
      },
      {
        "id": "3cbf9134-bf7d-431b-935e-d184e3dac9e6",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524491369,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549536300000,
        "parent_id": "5a849a1a-268f-4360-8baa-880d65844990",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "void MyMethod(string s)\n{\n    Console.WriteLine(s + \" World\");\n}\n\ndelegate void TestDelegate(string s);\n\nTestDelegate myDelegate = MyMethod;\n\nmyDelegate(\"Hello\");"
            ]
          ]
        },
        "type": "code",
        "version": 9,
        "code": "void MyMethod(string s)\n{\n    Console.WriteLine(s + \" World\");\n}\n\ndelegate void TestDelegate(string s);\n\nTestDelegate myDelegate = MyMethod;\n\nmyDelegate(\"Hello\");",
        "code_language": "C#"
      }
    ],
    "title": "â‡’  Lambda operator",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}