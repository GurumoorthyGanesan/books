{
  "ID": "fc10ffe1-c3af-4ad7-b926-7ba19387acce",
  "Root": {
    "id": "fc10ffe1-c3af-4ad7-b926-7ba19387acce",
    "alive": true,
    "content": [
      "55c13207-6040-4799-be47-b0fd47e193f7",
      "238174b6-4ce9-47ce-86b9-c84ac74f6efb",
      "9e57f087-8b9b-4402-83ef-87220c92168e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549524689271,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549876380000,
    "parent_id": "190506d8-ff9f-4443-bbce-bdb69e483555",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Extension methods for handling special cases"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "id": "55c13207-6040-4799-be47-b0fd47e193f7",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524689269,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549524689269,
        "parent_id": "fc10ffe1-c3af-4ad7-b926-7ba19387acce",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Extension methods can be used to “hide” processing of inelegant business rules that would otherwise require cluttering up a calling function with if/then statements. This is similar to and analogous to handling nulls with extension methods. For example,"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Extension methods can be used to “hide” processing of inelegant business rules that would otherwise require cluttering up a calling function with if/then statements. This is similar to and analogous to handling nulls with extension methods. For example,"
          }
        ]
      },
      {
        "id": "238174b6-4ce9-47ce-86b9-c84ac74f6efb",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524689271,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549876380000,
        "parent_id": "fc10ffe1-c3af-4ad7-b926-7ba19387acce",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public static class CakeExtensions\n{\n    public static Cake EnsureTrueCake(this Cake cake)\n    {\n        // If the cake is a lie, substitute a cake from grandma, whose cakes aren't as tasty but are known never to be lies. If the cake isn't a lie, don't do anything and return it.\n        return CakeVerificationService.IsCakeLie(cake) ? GrandmasKitchen.Get1950sCake() : cake;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "public static class CakeExtensions\n{\n    public static Cake EnsureTrueCake(this Cake cake)\n    {\n        // If the cake is a lie, substitute a cake from grandma, whose cakes aren't as tasty but are known never to be lies. If the cake isn't a lie, don't do anything and return it.\n        return CakeVerificationService.IsCakeLie(cake) ? GrandmasKitchen.Get1950sCake() : cake;\n    }\n}",
        "code_language": "C#"
      },
      {
        "id": "9e57f087-8b9b-4402-83ef-87220c92168e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549524689271,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549876380000,
        "parent_id": "fc10ffe1-c3af-4ad7-b926-7ba19387acce",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "Cake myCake = Bakery.GetNextCake().EnsureTrueCake();\nmyMouth.Eat(myCake);//Eat the cake, confident that it is not a lie."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "Cake myCake = Bakery.GetNextCake().EnsureTrueCake();\nmyMouth.Eat(myCake);//Eat the cake, confident that it is not a lie.",
        "code_language": "C#"
      }
    ],
    "title": "Extension methods for handling special cases",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}