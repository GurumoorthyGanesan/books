{
  "ID": "d11dd344-98ac-4402-b599-33d485bf2286",
  "Root": {
    "id": "d11dd344-98ac-4402-b599-33d485bf2286",
    "alive": true,
    "content": [
      "0367da69-fcc4-45f0-96ea-1e32e1b59a6d",
      "7915ba55-edb3-4031-9381-c4d4495f2baa",
      "2c40e8bb-e575-4e5e-97c1-ac58f4b309ff",
      "9014d6da-f58e-49c2-af8f-834e94f1868b",
      "6bbeb393-55f2-4e83-b5a8-bf056f441fdc",
      "4f85fce2-84f1-4a02-88d2-feac6e1df212",
      "27fbdb94-8af1-426b-be1f-a14bff7171b5",
      "6d534985-b8c8-47c7-9877-503bfe43c0df",
      "aaad4b77-6833-4111-8cf9-3ef76a7c0e53",
      "7fd20530-4b96-45ad-925d-f9862bc3bd29",
      "f3323dcd-d56d-4710-a05d-2595a608c948",
      "3b7cd5cd-5774-491e-aafe-dbf31f90e428",
      "503b6383-2c86-4879-8a97-271e979a748a",
      "8a2442ab-8950-4a55-8c08-43ae6a025e35",
      "fc828115-e102-46d9-a422-4e558220a535",
      "428264a2-1a50-4f85-a902-1ab3366576e2"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549526092267,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550126400000,
    "parent_id": "a34c1078-f01c-44b1-b468-522f804fbc2d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "GroupBy"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "id": "0367da69-fcc4-45f0-96ea-1e32e1b59a6d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526092262,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526092262,
        "parent_id": "d11dd344-98ac-4402-b599-33d485bf2286",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "GroupBy is an easy way to sort a "
            ],
            [
              "IEnumerable\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " collection of items into distinct groups."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "GroupBy is an easy way to sort a "
          },
          {
            "Text": "IEnumerable\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " collection of items into distinct groups."
          }
        ]
      },
      {
        "id": "7915ba55-edb3-4031-9381-c4d4495f2baa",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526092264,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526092264,
        "parent_id": "d11dd344-98ac-4402-b599-33d485bf2286",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Simple Example"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Simple Example"
          }
        ]
      },
      {
        "id": "2c40e8bb-e575-4e5e-97c1-ac58f4b309ff",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526092264,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526092264,
        "parent_id": "d11dd344-98ac-4402-b599-33d485bf2286",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this first example, we end up with two groups, odd and even items."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this first example, we end up with two groups, odd and even items."
          }
        ]
      },
      {
        "id": "9014d6da-f58e-49c2-af8f-834e94f1868b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526092265,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550126400000,
        "parent_id": "d11dd344-98ac-4402-b599-33d485bf2286",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "List\u003cint\u003e iList = new List\u003cint\u003e() { 1, 2, 3, 4, 5, 6, 7, 8, 9 };\nvar grouped = iList.GroupBy(x =\u003e x % 2 == 0);\n\n//Groups iList into odd [13579] and even[2468] items \n       \nforeach(var group in grouped)\n{\n    foreach (int item in group)\n    {\n        Console.Write(item); // 135792468  (first odd then even)\n    }\n}\n"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "List\u003cint\u003e iList = new List\u003cint\u003e() { 1, 2, 3, 4, 5, 6, 7, 8, 9 };\nvar grouped = iList.GroupBy(x =\u003e x % 2 == 0);\n\n//Groups iList into odd [13579] and even[2468] items \n       \nforeach(var group in grouped)\n{\n    foreach (int item in group)\n    {\n        Console.Write(item); // 135792468  (first odd then even)\n    }\n}\n",
        "code_language": "C#"
      },
      {
        "id": "6bbeb393-55f2-4e83-b5a8-bf056f441fdc",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526092265,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526092265,
        "parent_id": "d11dd344-98ac-4402-b599-33d485bf2286",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "More Complex Example"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "More Complex Example"
          }
        ]
      },
      {
        "id": "4f85fce2-84f1-4a02-88d2-feac6e1df212",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526092265,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526092265,
        "parent_id": "d11dd344-98ac-4402-b599-33d485bf2286",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s take grouping a list of people by age as an example. First, we’ll create a Person object which has two properties, Name and Age."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s take grouping a list of people by age as an example. First, we’ll create a Person object which has two properties, Name and Age."
          }
        ]
      },
      {
        "id": "27fbdb94-8af1-426b-be1f-a14bff7171b5",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526092265,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550126400000,
        "parent_id": "d11dd344-98ac-4402-b599-33d485bf2286",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class Person\n{\n    public int Age {get; set;}\n    public string Name {get; set;}\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "public class Person\n{\n    public int Age {get; set;}\n    public string Name {get; set;}\n}",
        "code_language": "C#"
      },
      {
        "id": "6d534985-b8c8-47c7-9877-503bfe43c0df",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526092265,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526092265,
        "parent_id": "d11dd344-98ac-4402-b599-33d485bf2286",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Then we create our sample list of people with various names and ages."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Then we create our sample list of people with various names and ages."
          }
        ]
      },
      {
        "id": "aaad4b77-6833-4111-8cf9-3ef76a7c0e53",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526092265,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550126400000,
        "parent_id": "d11dd344-98ac-4402-b599-33d485bf2286",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "List\u003cPerson\u003e people = new List\u003cPerson\u003e();\npeople.Add(new Person{Age = 20, Name = \"Mouse\"});\npeople.Add(new Person{Age = 30, Name = \"Neo\"});\npeople.Add(new Person{Age = 40, Name = \"Morpheus\"});\npeople.Add(new Person{Age = 30, Name = \"Trinity\"});\npeople.Add(new Person{Age = 40, Name = \"Dozer\"});\npeople.Add(new Person{Age = 40, Name = \"Smith\"});"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "List\u003cPerson\u003e people = new List\u003cPerson\u003e();\npeople.Add(new Person{Age = 20, Name = \"Mouse\"});\npeople.Add(new Person{Age = 30, Name = \"Neo\"});\npeople.Add(new Person{Age = 40, Name = \"Morpheus\"});\npeople.Add(new Person{Age = 30, Name = \"Trinity\"});\npeople.Add(new Person{Age = 40, Name = \"Dozer\"});\npeople.Add(new Person{Age = 40, Name = \"Smith\"});",
        "code_language": "C#"
      },
      {
        "id": "7fd20530-4b96-45ad-925d-f9862bc3bd29",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526092265,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526092265,
        "parent_id": "d11dd344-98ac-4402-b599-33d485bf2286",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Then we create a LINQ query to group our list of people by age."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Then we create a LINQ query to group our list of people by age."
          }
        ]
      },
      {
        "id": "f3323dcd-d56d-4710-a05d-2595a608c948",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526092265,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550126400000,
        "parent_id": "d11dd344-98ac-4402-b599-33d485bf2286",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "var query = people.GroupBy(x =\u003e x.Age);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var query = people.GroupBy(x =\u003e x.Age);",
        "code_language": "C#"
      },
      {
        "id": "3b7cd5cd-5774-491e-aafe-dbf31f90e428",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526092265,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526092265,
        "parent_id": "d11dd344-98ac-4402-b599-33d485bf2286",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Doing so, we can see the Age for each group, and have a list of each person in the group."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Doing so, we can see the Age for each group, and have a list of each person in the group."
          }
        ]
      },
      {
        "id": "503b6383-2c86-4879-8a97-271e979a748a",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526092265,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550126400000,
        "parent_id": "d11dd344-98ac-4402-b599-33d485bf2286",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "foreach(var result in query)\n{\n    Console.WriteLine(result.Key);\n                \n    foreach(var person in result)\n        Console.WriteLine(person.Name);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "foreach(var result in query)\n{\n    Console.WriteLine(result.Key);\n                \n    foreach(var person in result)\n        Console.WriteLine(person.Name);\n}",
        "code_language": "C#"
      },
      {
        "id": "8a2442ab-8950-4a55-8c08-43ae6a025e35",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526092265,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526092265,
        "parent_id": "d11dd344-98ac-4402-b599-33d485bf2286",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This results in the following output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This results in the following output:"
          }
        ]
      },
      {
        "id": "fc828115-e102-46d9-a422-4e558220a535",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526092266,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526092266,
        "parent_id": "d11dd344-98ac-4402-b599-33d485bf2286",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "20\nMouse\n30\nNeo\nTrinity\n40\nMorpheus\nDozer\nSmith"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "20\nMouse\n30\nNeo\nTrinity\n40\nMorpheus\nDozer\nSmith",
        "code_language": "Plain Text"
      },
      {
        "id": "428264a2-1a50-4f85-a902-1ab3366576e2",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549526092267,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549526092267,
        "parent_id": "d11dd344-98ac-4402-b599-33d485bf2286",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can play with the "
            ],
            [
              "live demo on .NET Fiddle",
              [
                [
                  "a",
                  "https://dotnetfiddle.net/VFOZ1x"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can play with the "
          },
          {
            "Text": "live demo on .NET Fiddle",
            "Link": "https://dotnetfiddle.net/VFOZ1x"
          }
        ]
      }
    ],
    "title": "GroupBy",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}