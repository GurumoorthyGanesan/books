{
  "ID": "9171d142-e86a-4844-bf30-110d28104c28",
  "Root": {
    "id": "9171d142-e86a-4844-bf30-110d28104c28",
    "alive": true,
    "content": [
      "bff2a4ba-b346-4e9b-a84f-8449cad25c8a",
      "beca78cf-04aa-47f9-8b84-6c051fe0b46d",
      "658d5e6d-89a8-48db-be82-5b80da532941"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549530045921,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550222880000,
    "parent_id": "7ab4d6e5-5a1c-4950-82d0-073379ffb854",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "How to use C# Structs to create a Union type Similar to C Unions"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "id": "bff2a4ba-b346-4e9b-a84f-8449cad25c8a",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530045918,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530045918,
        "parent_id": "9171d142-e86a-4844-bf30-110d28104c28",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "id": "beca78cf-04aa-47f9-8b84-6c051fe0b46d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530045920,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530045920,
        "parent_id": "9171d142-e86a-4844-bf30-110d28104c28",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Union types are used in several languages, notably C-language, to contain several different types which can “overlap” in the same memory space. In other words, they might contain different fields all of which start at the same memory offset, even when they might have different lengths and types. This has the benefit of both saving memory, and doing automatic conversion."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Union types are used in several languages, notably C-language, to contain several different types which can “overlap” in the same memory space. In other words, they might contain different fields all of which start at the same memory offset, even when they might have different lengths and types. This has the benefit of both saving memory, and doing automatic conversion."
          }
        ]
      },
      {
        "id": "658d5e6d-89a8-48db-be82-5b80da532941",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530045920,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530045920,
        "parent_id": "9171d142-e86a-4844-bf30-110d28104c28",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Please, note the comments in the constructor of the Struct. The order in which the fields are initialized is extremely important. You want to first initialize all of the other fields and then set the value that you intend to change as the last statement. Because the fields overlap, the last value setup is the one that counts."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Please, note the comments in the constructor of the Struct. The order in which the fields are initialized is extremely important. You want to first initialize all of the other fields and then set the value that you intend to change as the last statement. Because the fields overlap, the last value setup is the one that counts."
          }
        ]
      }
    ],
    "title": "How to use C# Structs to create a Union type Similar to C Unions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}