{
  "ID": "a306dd67-9821-47e3-b615-f378c4a4a46d",
  "Root": {
    "alive": true,
    "content": [
      "0676348e-7d5a-4eb0-a34b-b49e4b0673d9",
      "728301ae-1388-40a6-9fda-94303636fc5d",
      "920e5db0-7c78-456f-88b3-7549b63e8a1e",
      "4f87d4a5-bfc4-49f6-811e-4937e79ef959",
      "1fb273a4-a196-4683-9fdb-fc3371b17a24",
      "51f527c0-896b-47bb-a454-7f149bb2e7d3",
      "a0b073b9-1aae-4aa8-b030-17e6251097a5",
      "cac3bea9-2655-4577-8e58-f9091f3c44fd",
      "6b27235e-26d5-4297-a3b9-1a25259b4247",
      "2e1a323f-de93-4283-af8c-a951fcef06e3",
      "2ae8dd7b-5f60-4e1d-9005-a7662880fdbd",
      "e9581f42-8173-418f-80d4-970725af5fa7"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549525002291,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "a306dd67-9821-47e3-b615-f378c4a4a46d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549940160000,
    "parent_id": "1cef0e56-e2c1-46b9-9c66-002b53d2c779",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "checked unchecked"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525002285,
        "id": "0676348e-7d5a-4eb0-a34b-b49e4b0673d9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525002285,
        "parent_id": "a306dd67-9821-47e3-b615-f378c4a4a46d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "checked",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "unchecked",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keywords define how operations handle mathematical overflow. “Overflow” in the context of the "
            ],
            [
              "checked",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "unchecked",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keywords is when an integer arithmetic operation results in a value which is greater in magnitude than the target data type can represent."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "checked",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "unchecked",
            "AttrFlags": 2
          },
          {
            "Text": " keywords define how operations handle mathematical overflow. “Overflow” in the context of the "
          },
          {
            "Text": "checked",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "unchecked",
            "AttrFlags": 2
          },
          {
            "Text": " keywords is when an integer arithmetic operation results in a value which is greater in magnitude than the target data type can represent."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525002287,
        "id": "728301ae-1388-40a6-9fda-94303636fc5d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525002287,
        "parent_id": "a306dd67-9821-47e3-b615-f378c4a4a46d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When overflow occurs within a "
            ],
            [
              "checked",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block (or when the compiler is set to globally use checked arithmetic), an exception is thrown to warn of undesired behavior. Meanwhile, in an "
            ],
            [
              "unchecked",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block, overflow is silent: no exceptions are thrown, and the value will simply wrap around to the opposite boundary. This can lead to subtle, hard to find bugs."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When overflow occurs within a "
          },
          {
            "Text": "checked",
            "AttrFlags": 2
          },
          {
            "Text": " block (or when the compiler is set to globally use checked arithmetic), an exception is thrown to warn of undesired behavior. Meanwhile, in an "
          },
          {
            "Text": "unchecked",
            "AttrFlags": 2
          },
          {
            "Text": " block, overflow is silent: no exceptions are thrown, and the value will simply wrap around to the opposite boundary. This can lead to subtle, hard to find bugs."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525002288,
        "id": "920e5db0-7c78-456f-88b3-7549b63e8a1e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525002288,
        "parent_id": "a306dd67-9821-47e3-b615-f378c4a4a46d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Since most arithmetic operations are done on values that are not large or small enough to overflow, most of the time, there is no need to explicitly define a block as "
            ],
            [
              "checked",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Care needs to be taken when doing arithmetic on unbounded input that may cause overflow, for example when doing arithmetic in recursive functions or while taking user input."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Since most arithmetic operations are done on values that are not large or small enough to overflow, most of the time, there is no need to explicitly define a block as "
          },
          {
            "Text": "checked",
            "AttrFlags": 2
          },
          {
            "Text": ". Care needs to be taken when doing arithmetic on unbounded input that may cause overflow, for example when doing arithmetic in recursive functions or while taking user input."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525002288,
        "id": "4f87d4a5-bfc4-49f6-811e-4937e79ef959",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525002288,
        "parent_id": "a306dd67-9821-47e3-b615-f378c4a4a46d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Neither ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "checked",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " nor ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "unchecked",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " affect floating point arithmetic operations.",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Neither ",
            "AttrFlags": 4
          },
          {
            "Text": "checked",
            "AttrFlags": 6
          },
          {
            "Text": " nor ",
            "AttrFlags": 4
          },
          {
            "Text": "unchecked",
            "AttrFlags": 6
          },
          {
            "Text": " affect floating point arithmetic operations.",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525002288,
        "id": "1fb273a4-a196-4683-9fdb-fc3371b17a24",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525002288,
        "parent_id": "a306dd67-9821-47e3-b615-f378c4a4a46d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When a block or expression is declared as "
            ],
            [
              "unchecked",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", any arithmetic operations inside it are allowed to overflow without causing an error. An example where this behavior is "
            ],
            [
              "desired",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " would be the calculation of a checksum, where the value is allowed to “wrap around” during calculation:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When a block or expression is declared as "
          },
          {
            "Text": "unchecked",
            "AttrFlags": 2
          },
          {
            "Text": ", any arithmetic operations inside it are allowed to overflow without causing an error. An example where this behavior is "
          },
          {
            "Text": "desired",
            "AttrFlags": 4
          },
          {
            "Text": " would be the calculation of a checksum, where the value is allowed to “wrap around” during calculation:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525002288,
        "id": "51f527c0-896b-47bb-a454-7f149bb2e7d3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940160000,
        "parent_id": "a306dd67-9821-47e3-b615-f378c4a4a46d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "byte Checksum(byte[] data) {\n    byte result = 0;\n    for (int i = 0; i \u003c data.Length; i++) {\n        result = unchecked(result + data[i]); // unchecked expression\n    }\n    return result;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "byte Checksum(byte[] data) {\n    byte result = 0;\n    for (int i = 0; i \u003c data.Length; i++) {\n        result = unchecked(result + data[i]); // unchecked expression\n    }\n    return result;\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525002289,
        "id": "a0b073b9-1aae-4aa8-b030-17e6251097a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525002289,
        "parent_id": "a306dd67-9821-47e3-b615-f378c4a4a46d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One of the most common uses for "
            ],
            [
              "unchecked",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is implementing a custom override for "
            ],
            [
              "object.GetHashCode()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", a type of checksum. You can see the keyword’s use in the answers to this question: http://stackoverflow.com/questions/263400/what-is-the-best-algorithm-for-an-overridden-system-object-gethashcode."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One of the most common uses for "
          },
          {
            "Text": "unchecked",
            "AttrFlags": 2
          },
          {
            "Text": " is implementing a custom override for "
          },
          {
            "Text": "object.GetHashCode()",
            "AttrFlags": 2
          },
          {
            "Text": ", a type of checksum. You can see the keyword’s use in the answers to this question: http://stackoverflow.com/questions/263400/what-is-the-best-algorithm-for-an-overridden-system-object-gethashcode."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525002290,
        "id": "cac3bea9-2655-4577-8e58-f9091f3c44fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525002290,
        "parent_id": "a306dd67-9821-47e3-b615-f378c4a4a46d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When a block or expression is declared as "
            ],
            [
              "checked",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", any arithmetic operation that causes an overflow results in an "
            ],
            [
              "OverflowException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " being thrown."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When a block or expression is declared as "
          },
          {
            "Text": "checked",
            "AttrFlags": 2
          },
          {
            "Text": ", any arithmetic operation that causes an overflow results in an "
          },
          {
            "Text": "OverflowException",
            "AttrFlags": 2
          },
          {
            "Text": " being thrown."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525002290,
        "id": "6b27235e-26d5-4297-a3b9-1a25259b4247",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549940160000,
        "parent_id": "a306dd67-9821-47e3-b615-f378c4a4a46d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "int SafeSum(int x, int y) {\n    checked { // checked block\n        return x + y; \n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "int SafeSum(int x, int y) {\n    checked { // checked block\n        return x + y; \n    }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525002290,
        "id": "2e1a323f-de93-4283-af8c-a951fcef06e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525002290,
        "parent_id": "a306dd67-9821-47e3-b615-f378c4a4a46d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Both checked and unchecked may be in block and expression form."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Both checked and unchecked may be in block and expression form."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525002291,
        "id": "2ae8dd7b-5f60-4e1d-9005-a7662880fdbd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525002291,
        "parent_id": "a306dd67-9821-47e3-b615-f378c4a4a46d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Checked and unchecked blocks do not affect called methods, only operators called directly in the current method. For example, "
            ],
            [
              "Enum.ToObject()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Convert.ToInt32()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and user-defined operators are not affected by custom checked/unchecked contexts."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Checked and unchecked blocks do not affect called methods, only operators called directly in the current method. For example, "
          },
          {
            "Text": "Enum.ToObject()",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Convert.ToInt32()",
            "AttrFlags": 2
          },
          {
            "Text": ", and user-defined operators are not affected by custom checked/unchecked contexts."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549525002291,
        "id": "e9581f42-8173-418f-80d4-970725af5fa7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549525002291,
        "parent_id": "a306dd67-9821-47e3-b615-f378c4a4a46d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              ": The default overflow default behavior (checked vs. unchecked) may be changed in the ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "Project Properties",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " or through the ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "/checked[+|-]",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " command line switch. It is common to default to checked operations for debug builds and unchecked for release builds. The ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "checked",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " and ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "unchecked",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " keywords would then be used only where a ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "default* approach does not apply and you need an explicit behavior to ensure correctness.*"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note",
            "AttrFlags": 5
          },
          {
            "Text": ": The default overflow default behavior (checked vs. unchecked) may be changed in the ",
            "AttrFlags": 4
          },
          {
            "Text": "Project Properties",
            "AttrFlags": 5
          },
          {
            "Text": " or through the ",
            "AttrFlags": 4
          },
          {
            "Text": "/checked[+|-]",
            "AttrFlags": 5
          },
          {
            "Text": " command line switch. It is common to default to checked operations for debug builds and unchecked for release builds. The ",
            "AttrFlags": 4
          },
          {
            "Text": "checked",
            "AttrFlags": 6
          },
          {
            "Text": " and ",
            "AttrFlags": 4
          },
          {
            "Text": "unchecked",
            "AttrFlags": 6
          },
          {
            "Text": " keywords would then be used only where a ",
            "AttrFlags": 4
          },
          {
            "Text": "default* approach does not apply and you need an explicit behavior to ensure correctness.*"
          }
        ]
      }
    ],
    "title": "checked unchecked",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}