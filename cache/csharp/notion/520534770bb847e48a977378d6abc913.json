{
  "ID": "52053477-0bb8-47e4-8a97-7378d6abc913",
  "Root": {
    "alive": true,
    "content": [
      "16af733f-688d-4fd9-a1b3-1cc227319973",
      "a52858b9-29f3-415d-8513-b73c013569ef",
      "2534b8ba-1def-4e93-943e-24e3d483d2fc",
      "4e3164f2-4d9a-4f8f-9eec-f93ed4885738",
      "8fd9d953-d33c-4df0-80ba-990e014837c9",
      "9f501dd8-078a-4f16-b865-f26347818747",
      "e9fbbac9-1ca9-4850-921a-dce695afd704",
      "73519905-ac94-4fa4-8911-b66abda23334",
      "8ee080d1-3cba-414d-86dc-1acdb930151d",
      "50c75bfd-95aa-431d-ad12-c3b84b6b5789",
      "26d74a76-34fe-4946-87a4-5c8edef719b0",
      "f82c6c2f-281c-4787-8344-44b6c6ee7e34",
      "fad4b2e9-09d4-4a74-9b0d-d92b67aa4914",
      "168db061-8c73-44c3-8bf8-14926595fd7b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549529242769,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "52053477-0bb8-47e4-8a97-7378d6abc913",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550217300000,
    "parent_id": "109d67d8-65d2-4d87-87a6-f98363fd7e63",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Lambda expresions"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529242767,
        "id": "16af733f-688d-4fd9-a1b3-1cc227319973",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529242767,
        "parent_id": "52053477-0bb8-47e4-8a97-7378d6abc913",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Lambda Expresions are an extension of "
            ],
            [
              "anonymous methods",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%23/60/methods/9338/anonymous-method#t=201608051345408629175"
                ]
              ]
            ],
            [
              " that allow for implicitly typed parameters and return values. Their syntax is less verbose than anonymous methods and follows a functional programming style."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Lambda Expresions are an extension of "
          },
          {
            "Text": "anonymous methods",
            "Link": "http://stackoverflow.com/documentation/c%23/60/methods/9338/anonymous-method#t=201608051345408629175"
          },
          {
            "Text": " that allow for implicitly typed parameters and return values. Their syntax is less verbose than anonymous methods and follows a functional programming style."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529242768,
        "id": "a52858b9-29f3-415d-8513-b73c013569ef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549627560000,
        "parent_id": "52053477-0bb8-47e4-8a97-7378d6abc913",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "using System;\nusing System.Collections.Generic;\nusing System.Linq;\n                    \npublic class Program\n{\n    public static void Main()\n    {\n        var numberList = new List\u003cint\u003e {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n        var sumOfSquares = numberList.Select( number =\u003e number * number )\n            .Aggregate( (int first, int second) =\u003e { return first + second; } );\n        Console.WriteLine( sumOfSquares );\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\n                    \npublic class Program\n{\n    public static void Main()\n    {\n        var numberList = new List\u003cint\u003e {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n        var sumOfSquares = numberList.Select( number =\u003e number * number )\n            .Aggregate( (int first, int second) =\u003e { return first + second; } );\n        Console.WriteLine( sumOfSquares );\n    }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529242768,
        "id": "2534b8ba-1def-4e93-943e-24e3d483d2fc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529242768,
        "parent_id": "52053477-0bb8-47e4-8a97-7378d6abc913",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The above code will output the sum of the squares of the numbers 1 through 10 to the console."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The above code will output the sum of the squares of the numbers 1 through 10 to the console."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529242768,
        "id": "4e3164f2-4d9a-4f8f-9eec-f93ed4885738",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529242768,
        "parent_id": "52053477-0bb8-47e4-8a97-7378d6abc913",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The first lambda expression squares the numbers in the list. Since there is only 1 parameter parenthesis may be omitted. You can include parenthesis if you wish:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The first lambda expression squares the numbers in the list. Since there is only 1 parameter parenthesis may be omitted. You can include parenthesis if you wish:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529242768,
        "id": "8fd9d953-d33c-4df0-80ba-990e014837c9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550217300000,
        "parent_id": "52053477-0bb8-47e4-8a97-7378d6abc913",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              ".Select( (number) =\u003e number * number);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": ".Select( (number) =\u003e number * number);",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529242769,
        "id": "9f501dd8-078a-4f16-b865-f26347818747",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529242769,
        "parent_id": "52053477-0bb8-47e4-8a97-7378d6abc913",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "or explicitly type the parameter but then parenthesis are required:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "or explicitly type the parameter but then parenthesis are required:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529242769,
        "id": "e9fbbac9-1ca9-4850-921a-dce695afd704",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550217300000,
        "parent_id": "52053477-0bb8-47e4-8a97-7378d6abc913",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              ".Select( (int number) =\u003e number * number);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": ".Select( (int number) =\u003e number * number);",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529242769,
        "id": "73519905-ac94-4fa4-8911-b66abda23334",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529242769,
        "parent_id": "52053477-0bb8-47e4-8a97-7378d6abc913",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The lambda body is an expression and has an implicit return. You can use a statement body if you want as well. This is useful for more complex lambdas."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The lambda body is an expression and has an implicit return. You can use a statement body if you want as well. This is useful for more complex lambdas."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529242769,
        "id": "8ee080d1-3cba-414d-86dc-1acdb930151d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550217300000,
        "parent_id": "52053477-0bb8-47e4-8a97-7378d6abc913",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              ".Select( number =\u003e { return number * number; } );"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": ".Select( number =\u003e { return number * number; } );",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529242769,
        "id": "50c75bfd-95aa-431d-ad12-c3b84b6b5789",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529242769,
        "parent_id": "52053477-0bb8-47e4-8a97-7378d6abc913",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The select method returns a new IEnumerable with the computed values."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The select method returns a new IEnumerable with the computed values."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529242769,
        "id": "26d74a76-34fe-4946-87a4-5c8edef719b0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529242769,
        "parent_id": "52053477-0bb8-47e4-8a97-7378d6abc913",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The second lambda expression sums the numbers in list returned from the select method. Parentheses are required as there are multiple parameters. The types of the parameters are explicitly typed but this is not necessary. The below method is equivalent."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The second lambda expression sums the numbers in list returned from the select method. Parentheses are required as there are multiple parameters. The types of the parameters are explicitly typed but this is not necessary. The below method is equivalent."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529242769,
        "id": "f82c6c2f-281c-4787-8344-44b6c6ee7e34",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550217300000,
        "parent_id": "52053477-0bb8-47e4-8a97-7378d6abc913",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              ".Aggregate( (first, second) =\u003e { return first + second; } );"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": ".Aggregate( (first, second) =\u003e { return first + second; } );",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529242769,
        "id": "fad4b2e9-09d4-4a74-9b0d-d92b67aa4914",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549529242769,
        "parent_id": "52053477-0bb8-47e4-8a97-7378d6abc913",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As is this one:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As is this one:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549529242769,
        "id": "168db061-8c73-44c3-8bf8-14926595fd7b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550217300000,
        "parent_id": "52053477-0bb8-47e4-8a97-7378d6abc913",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              ".Aggregate( (int first, int second) =\u003e first + second );"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": ".Aggregate( (int first, int second) =\u003e first + second );",
        "code_language": "C#"
      }
    ],
    "title": "Lambda expresions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}