{
  "ID": "8735657c-328e-4d0f-b617-f60f491e00bb",
  "Root": {
    "alive": true,
    "content": [
      "6dca5380-093a-4ca0-90ae-3ada1dbbbf26",
      "207df1b3-87e8-4c9f-bf69-51c6a6459f7c",
      "ef2fa8fc-9298-4dbe-8bb0-a62f35893706",
      "582970dd-dc89-4f8b-8f1c-135cd67084c9",
      "e9634484-e02e-4416-9d56-02eb0db9f701",
      "5653ccaa-fcfa-4c53-9762-9670f005c852"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549528715255,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "8735657c-328e-4d0f-b617-f60f491e00bb",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550214060000,
    "parent_id": "b11e628d-9a49-4dab-ba8d-ad0de127ca4a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Changing values elsewhere"
        ]
      ]
    },
    "type": "page",
    "version": 32,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550214028059,
        "id": "6dca5380-093a-4ca0-90ae-3ada1dbbbf26",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550214000000,
        "parent_id": "8735657c-328e-4d0f-b617-f60f491e00bb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public static void Main(string[] args)\n{\n  var studentList = new List\u003cStudent\u003e();\n  studentList.Add(new Student(\"Scott\", \"Nuke\"));\n  studentList.Add(new Student(\"Vincent\", \"King\"));\n  studentList.Add(new Student(\"Craig\", \"Bertt\"));\n\n  // make a separate list to print out later\n  var printingList = studentList; // this is a new list object, but holding the same student objects inside it\n\n  // oops, we've noticed typos in the names, so we fix those\n  studentList[0].LastName = \"Duke\";\n  studentList[1].LastName = \"Kong\";\n  studentList[2].LastName = \"Brett\";\n\n  // okay, we now print the list\n  PrintPrintingList(printingList);\n}\n\nprivate static void PrintPrintingList(List\u003cStudent\u003e students)\n{\n  foreach (Student student in students)\n  {\n      Console.WriteLine(string.Format(\"{0} {1}\", student.FirstName, student.LastName));\n  }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "public static void Main(string[] args)\n{\n  var studentList = new List\u003cStudent\u003e();\n  studentList.Add(new Student(\"Scott\", \"Nuke\"));\n  studentList.Add(new Student(\"Vincent\", \"King\"));\n  studentList.Add(new Student(\"Craig\", \"Bertt\"));\n\n  // make a separate list to print out later\n  var printingList = studentList; // this is a new list object, but holding the same student objects inside it\n\n  // oops, we've noticed typos in the names, so we fix those\n  studentList[0].LastName = \"Duke\";\n  studentList[1].LastName = \"Kong\";\n  studentList[2].LastName = \"Brett\";\n\n  // okay, we now print the list\n  PrintPrintingList(printingList);\n}\n\nprivate static void PrintPrintingList(List\u003cStudent\u003e students)\n{\n  foreach (Student student in students)\n  {\n      Console.WriteLine(string.Format(\"{0} {1}\", student.FirstName, student.LastName));\n  }\n}",
        "code_language": "C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528715254,
        "id": "207df1b3-87e8-4c9f-bf69-51c6a6459f7c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528715254,
        "parent_id": "8735657c-328e-4d0f-b617-f60f491e00bb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You’ll notice that even though the printingList list was made before the corrections to student names after the typos, the PrintPrintingList method still prints out the corrected names:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You’ll notice that even though the printingList list was made before the corrections to student names after the typos, the PrintPrintingList method still prints out the corrected names:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528715254,
        "id": "ef2fa8fc-9298-4dbe-8bb0-a62f35893706",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528715254,
        "parent_id": "8735657c-328e-4d0f-b617-f60f491e00bb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Scott Duke\nVincent Kong\nCraig Brett"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Scott Duke\nVincent Kong\nCraig Brett",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528715254,
        "id": "582970dd-dc89-4f8b-8f1c-135cd67084c9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528715254,
        "parent_id": "8735657c-328e-4d0f-b617-f60f491e00bb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is because both lists hold a list of references to the same students. SO changing the underlying student object propogates to usages by either list."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is because both lists hold a list of references to the same students. SO changing the underlying student object propogates to usages by either list."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528715255,
        "id": "e9634484-e02e-4416-9d56-02eb0db9f701",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549528715255,
        "parent_id": "8735657c-328e-4d0f-b617-f60f491e00bb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here’s what the student class would look like."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here’s what the student class would look like."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550214073887,
        "id": "5653ccaa-fcfa-4c53-9762-9670f005c852",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550214060000,
        "parent_id": "8735657c-328e-4d0f-b617-f60f491e00bb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C#"
            ]
          ],
          "title": [
            [
              "public class Student\n{\n    public string FirstName { get; set; }\n    public string LastName { get; set; }\n\n    public Student(string firstName, string lastName)\n    {\n        this.FirstName = firstName;\n        this.LastName = lastName;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "public class Student\n{\n    public string FirstName { get; set; }\n    public string LastName { get; set; }\n\n    public Student(string firstName, string lastName)\n    {\n        this.FirstName = firstName;\n        this.LastName = lastName;\n    }\n}",
        "code_language": "C#"
      }
    ],
    "title": "Changing values elsewhere",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}