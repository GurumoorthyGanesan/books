{
  "ID": "9ee9c11e-5462-4849-a9c0-10708376a32e",
  "Root": {
    "alive": true,
    "content": [
      "5a13c827-9f85-494f-b1de-63c3d3ab08ba",
      "53b1b368-6539-45da-9ba2-91a60498588e",
      "b249742c-13be-4301-8c3e-e0021c145dd9",
      "ecad98cd-ecc8-4b67-b733-e10282e69210",
      "b1fcf56f-3ff3-4ffa-99e6-d079021170ec",
      "3cf2806f-b282-49f9-a108-69559a9e365e",
      "a60a61f3-7380-422b-a178-a67e1d09bd6d",
      "6a5bfb01-1c47-421c-9755-c8c400c6a576",
      "5373b411-742e-4475-87b6-945c929ae924",
      "d330d4c6-2f82-403f-9077-943e82dcdb40",
      "37325026-555b-45f9-98a5-7aec98fa37cf",
      "4be43b63-f25f-453b-85f8-b4aa73aae1f3",
      "c897df8f-3e12-4930-ad25-b8d522dba1a4",
      "eab61eee-3c1b-4cd1-a039-1af28d6c6eae",
      "199735f0-439c-47fe-9608-61b02fd3e4ed"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549530047270,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "9ee9c11e-5462-4849-a9c0-10708376a32e",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549791660000,
    "parent_id": "7ab4d6e5-5a1c-4950-82d0-073379ffb854",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Union Types in C can also contain Struct fields"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530047265,
        "id": "5a13c827-9f85-494f-b1de-63c3d3ab08ba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530047265,
        "parent_id": "9ee9c11e-5462-4849-a9c0-10708376a32e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Apart from primitives, the Explicit Layout structs (Unions) in C#, can also contain other Structs. As long as a field is a Value type and not a Reference, it can be contained in a Union:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Apart from primitives, the Explicit Layout structs (Unions) in C#, can also contain other Structs. As long as a field is a Value type and not a Reference, it can be contained in a Union:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530047267,
        "id": "53b1b368-6539-45da-9ba2-91a60498588e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530047267,
        "parent_id": "9ee9c11e-5462-4849-a9c0-10708376a32e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "using System;\nusing System.Runtime.InteropServices;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "using System;\nusing System.Runtime.InteropServices;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530047268,
        "id": "b249742c-13be-4301-8c3e-e0021c145dd9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530047268,
        "parent_id": "9ee9c11e-5462-4849-a9c0-10708376a32e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// The struct needs to be annotated as \"Explicit Layout\"\n[StructLayout(LayoutKind.Explicit)]\nstruct IpAddress\n{\n    // Same definition of IpAddress, from the example above\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// The struct needs to be annotated as \"Explicit Layout\"\n[StructLayout(LayoutKind.Explicit)]\nstruct IpAddress\n{\n    // Same definition of IpAddress, from the example above\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530047268,
        "id": "ecad98cd-ecc8-4b67-b733-e10282e69210",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530047268,
        "parent_id": "9ee9c11e-5462-4849-a9c0-10708376a32e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Now let's see if we can fit a whole URL into a long"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Now let's see if we can fit a whole URL into a long",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530047268,
        "id": "b1fcf56f-3ff3-4ffa-99e6-d079021170ec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530047268,
        "parent_id": "9ee9c11e-5462-4849-a9c0-10708376a32e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Let's define a short enum to hold protocols\nenum Protocol : short { Http, Https, Ftp, Sftp, Tcp }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Let's define a short enum to hold protocols\nenum Protocol : short { Http, Https, Ftp, Sftp, Tcp }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530047268,
        "id": "3cf2806f-b282-49f9-a108-69559a9e365e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530047268,
        "parent_id": "9ee9c11e-5462-4849-a9c0-10708376a32e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// The Service struct will hold the Address, the Port and the Protocol\n[StructLayout(LayoutKind.Explicit)]\nstruct Service\n{\n    [FieldOffset(0)] public IpAddress Address;\n    [FieldOffset(4)] public ushort Port;\n    [FieldOffset(6)] public Protocol AppProtocol;\n    [FieldOffset(0)] public long Payload;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// The Service struct will hold the Address, the Port and the Protocol\n[StructLayout(LayoutKind.Explicit)]\nstruct Service\n{\n    [FieldOffset(0)] public IpAddress Address;\n    [FieldOffset(4)] public ushort Port;\n    [FieldOffset(6)] public Protocol AppProtocol;\n    [FieldOffset(0)] public long Payload;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530047268,
        "id": "a60a61f3-7380-422b-a178-a67e1d09bd6d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530047268,
        "parent_id": "9ee9c11e-5462-4849-a9c0-10708376a32e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public Service(IpAddress address, ushort port, Protocol protocol)\n    {\n        Payload = 0;\n        Address = address;\n        Port  = port;\n        AppProtocol = protocol;\n    }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public Service(IpAddress address, ushort port, Protocol protocol)\n    {\n        Payload = 0;\n        Address = address;\n        Port  = port;\n        AppProtocol = protocol;\n    }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530047268,
        "id": "6a5bfb01-1c47-421c-9755-c8c400c6a576",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530047268,
        "parent_id": "9ee9c11e-5462-4849-a9c0-10708376a32e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public Service(long payload)\n    {\n        Address = new IpAddress(0);\n        Port = 80;\n        AppProtocol = Protocol.Http;\n        Payload = payload;\n    }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public Service(long payload)\n    {\n        Address = new IpAddress(0);\n        Port = 80;\n        AppProtocol = Protocol.Http;\n        Payload = payload;\n    }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530047268,
        "id": "5373b411-742e-4475-87b6-945c929ae924",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530047268,
        "parent_id": "9ee9c11e-5462-4849-a9c0-10708376a32e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public Service Copy() =\u003e new Service(Payload);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public Service Copy() =\u003e new Service(Payload);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530047268,
        "id": "d330d4c6-2f82-403f-9077-943e82dcdb40",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530047268,
        "parent_id": "9ee9c11e-5462-4849-a9c0-10708376a32e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public override string ToString() =\u003e $\"{AppProtocol}//{Address}:{Port}/\";\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public override string ToString() =\u003e $\"{AppProtocol}//{Address}:{Port}/\";\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530047268,
        "id": "37325026-555b-45f9-98a5-7aec98fa37cf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530047268,
        "parent_id": "9ee9c11e-5462-4849-a9c0-10708376a32e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can now verify that the whole Service Union fits into the size of a long (8 bytes)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can now verify that the whole Service Union fits into the size of a long (8 bytes)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530047269,
        "id": "4be43b63-f25f-453b-85f8-b4aa73aae1f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530047269,
        "parent_id": "9ee9c11e-5462-4849-a9c0-10708376a32e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var ip = new IpAddress(new Random().Next());\nConsole.WriteLine($\"Size: {Marshal.SizeOf(ip)} bytes. Value: {ip.Address} = {ip}.\");"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var ip = new IpAddress(new Random().Next());\nConsole.WriteLine($\"Size: {Marshal.SizeOf(ip)} bytes. Value: {ip.Address} = {ip}.\");",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530047269,
        "id": "c897df8f-3e12-4930-ad25-b8d522dba1a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530047269,
        "parent_id": "9ee9c11e-5462-4849-a9c0-10708376a32e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var s1 = new Service(ip, 8080, Protocol.Https);\nvar s2 = new Service(s1.Payload);\ns2.Address.Byte1 = 100;\ns2.AppProtocol = Protocol.Ftp;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var s1 = new Service(ip, 8080, Protocol.Https);\nvar s2 = new Service(s1.Payload);\ns2.Address.Byte1 = 100;\ns2.AppProtocol = Protocol.Ftp;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530047269,
        "id": "eab61eee-3c1b-4cd1-a039-1af28d6c6eae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530047269,
        "parent_id": "9ee9c11e-5462-4849-a9c0-10708376a32e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Console.WriteLine($\"Size: {Marshal.SizeOf(s1)} bytes. Value: {s1.Address} = {s1}.\");\nConsole.WriteLine($\"Size: {Marshal.SizeOf(s2)} bytes. Value: {s2.Address} = {s2}.\");"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Console.WriteLine($\"Size: {Marshal.SizeOf(s1)} bytes. Value: {s1.Address} = {s1}.\");\nConsole.WriteLine($\"Size: {Marshal.SizeOf(s2)} bytes. Value: {s2.Address} = {s2}.\");",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549530047270,
        "id": "199735f0-439c-47fe-9608-61b02fd3e4ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549530047270,
        "parent_id": "9ee9c11e-5462-4849-a9c0-10708376a32e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "View Demo",
              [
                [
                  "a",
                  "https://dotnetfiddle.net/cROlki"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "View Demo",
            "Link": "https://dotnetfiddle.net/cROlki"
          }
        ]
      }
    ],
    "title": "Union Types in C can also contain Struct fields",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}