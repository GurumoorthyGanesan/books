{
  "ID": "9340bd1d-9542-456c-9914-451d6bc67b1d",
  "Root": {
    "id": "9340bd1d-9542-456c-9914-451d6bc67b1d",
    "alive": true,
    "content": [
      "b6a52348-a491-4d6b-b852-f917d619dd5e",
      "70bb5583-58c0-442d-a88b-34ca81d5df98",
      "c4424117-adc4-4f51-8a5a-d438bc70e886",
      "a89d4993-2dad-44b2-839f-798d08215b72",
      "154ad1cf-ab23-47da-88fc-918d3336ae55",
      "b52cfc61-0e48-46ae-b388-4181c7623cbc",
      "ef1a2b48-db87-471c-8115-c5cf23585b1d",
      "4fc12e24-8cd9-4dd3-8e1e-f70de40fdefb",
      "5dd15d52-ab5a-4abb-98cb-c699d16f9446",
      "55a6b594-044f-4929-a1c8-54a47fdbc2c6",
      "e137a1a1-bdce-4338-a16d-8c002e89f410",
      "6d8e25d7-303d-49c5-b779-7f7f708380e5",
      "07c6e11d-d524-40e3-a2f6-6f73f1b1e00a",
      "b42fca4c-ed67-4773-9cef-7bfbe0c79d26",
      "b0b1e0a9-9c43-4c24-8dff-c8e3526bd575",
      "188cabaf-5935-4727-939b-378ffa0238af"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1549528920000,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549610580000,
    "parent_id": "896da524-8e65-414a-b645-dd45985879a1",
    "parent_table": "block",
    "permissions": [
      {
        "role": "editor",
        "type": "user_permission",
        "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
      }
    ],
    "properties": {
      "title": [
        [
          "Equals and GetHashCode"
        ]
      ]
    },
    "type": "page",
    "version": 70,
    "content_resolved": [
      {
        "id": "b6a52348-a491-4d6b-b852-f917d619dd5e",
        "alive": true,
        "copied_from": "93dfddb7-3666-4531-9f20-89ecc3cae4b6",
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549609838483,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549609800000,
        "parent_id": "9340bd1d-9542-456c-9914-451d6bc67b1d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Each implementation of "
            ],
            [
              "Equals",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " must fulfil the following requirements:"
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "Each implementation of "
          },
          {
            "Text": "Equals",
            "AttrFlags": 2
          },
          {
            "Text": " must fulfil the following requirements:"
          }
        ]
      },
      {
        "id": "70bb5583-58c0-442d-a88b-34ca81d5df98",
        "alive": true,
        "copied_from": "49c45867-7349-411a-9c6e-fb0e64f01663",
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549609838483,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549609800000,
        "parent_id": "9340bd1d-9542-456c-9914-451d6bc67b1d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Reflexive",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": An object must equal itself."
            ],
            [
              "x.Equals(x)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 3,
        "inline_content": [
          {
            "Text": "Reflexive",
            "AttrFlags": 1
          },
          {
            "Text": ": An object must equal itself."
          },
          {
            "Text": "x.Equals(x)",
            "AttrFlags": 2
          },
          {
            "Text": " returns "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "c4424117-adc4-4f51-8a5a-d438bc70e886",
        "alive": true,
        "copied_from": "38abd4b3-50e0-464b-833d-ba419eca05ee",
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549609838483,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549609800000,
        "parent_id": "9340bd1d-9542-456c-9914-451d6bc67b1d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Symmetric",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": There is no difference if I compare x to y or y to x - the result is the same. "
            ],
            [
              "x.Equals(y)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns the same value as "
            ],
            [
              "y.Equals(x)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 3,
        "inline_content": [
          {
            "Text": "Symmetric",
            "AttrFlags": 1
          },
          {
            "Text": ": There is no difference if I compare x to y or y to x - the result is the same. "
          },
          {
            "Text": "x.Equals(y)",
            "AttrFlags": 2
          },
          {
            "Text": " returns the same value as "
          },
          {
            "Text": "y.Equals(x)",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "a89d4993-2dad-44b2-839f-798d08215b72",
        "alive": true,
        "copied_from": "5ecd4be8-f104-4472-9252-4524c42a694d",
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549609838483,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549609800000,
        "parent_id": "9340bd1d-9542-456c-9914-451d6bc67b1d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Transitive",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": If one object is equal to another object and this one is equal to a third one, the first has to be equal to the third.if "
            ],
            [
              "(x.Equals(y) \u0026\u0026 y.Equals(z))",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", then "
            ],
            [
              "x.Equals(z)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 3,
        "inline_content": [
          {
            "Text": "Transitive",
            "AttrFlags": 1
          },
          {
            "Text": ": If one object is equal to another object and this one is equal to a third one, the first has to be equal to the third.if "
          },
          {
            "Text": "(x.Equals(y) \u0026\u0026 y.Equals(z))",
            "AttrFlags": 2
          },
          {
            "Text": " returns "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": ", then "
          },
          {
            "Text": "x.Equals(z)",
            "AttrFlags": 2
          },
          {
            "Text": " returns "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "154ad1cf-ab23-47da-88fc-918d3336ae55",
        "alive": true,
        "copied_from": "bbfad838-fa88-4541-bd81-bb58dfbfc61d",
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549609838484,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549609800000,
        "parent_id": "9340bd1d-9542-456c-9914-451d6bc67b1d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consistent",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": If you compare an object to another multiple times, the result is always the same.Successive invocations of "
            ],
            [
              "x.Equals(y)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " return the same value as long as the objects referenced by x and y are not modified."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 3,
        "inline_content": [
          {
            "Text": "Consistent",
            "AttrFlags": 1
          },
          {
            "Text": ": If you compare an object to another multiple times, the result is always the same.Successive invocations of "
          },
          {
            "Text": "x.Equals(y)",
            "AttrFlags": 2
          },
          {
            "Text": " return the same value as long as the objects referenced by x and y are not modified."
          }
        ]
      },
      {
        "id": "b52cfc61-0e48-46ae-b388-4181c7623cbc",
        "alive": true,
        "copied_from": "f808b72e-c936-41b9-9a07-88404715e35f",
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549609838484,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549609800000,
        "parent_id": "9340bd1d-9542-456c-9914-451d6bc67b1d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Comparison to null",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": No object is equal to "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ],
            [
              "x.Equals(null)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns "
            ],
            [
              "false",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 3,
        "inline_content": [
          {
            "Text": "Comparison to null",
            "AttrFlags": 1
          },
          {
            "Text": ": No object is equal to "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": "."
          },
          {
            "Text": "x.Equals(null)",
            "AttrFlags": 2
          },
          {
            "Text": " returns "
          },
          {
            "Text": "false",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "ef1a2b48-db87-471c-8115-c5cf23585b1d",
        "alive": true,
        "copied_from": "49dc822a-3148-4191-b82b-4a6a7df8fc9e",
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549609838485,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549609800000,
        "parent_id": "9340bd1d-9542-456c-9914-451d6bc67b1d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Implementations of "
            ],
            [
              "GetHashCode",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "Implementations of "
          },
          {
            "Text": "GetHashCode",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "id": "4fc12e24-8cd9-4dd3-8e1e-f70de40fdefb",
        "alive": true,
        "copied_from": "42fae8ab-ea17-4c54-93dc-76f73584f30e",
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549609838486,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549609800000,
        "parent_id": "9340bd1d-9542-456c-9914-451d6bc67b1d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Compatible with ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "Equals",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              ": If two objects are equal (meaning that "
            ],
            [
              "Equals",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns true), then "
            ],
            [
              "GetHashCode",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "must",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " return the same value for each of them."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 3,
        "inline_content": [
          {
            "Text": "Compatible with ",
            "AttrFlags": 1
          },
          {
            "Text": "Equals",
            "AttrFlags": 3
          },
          {
            "Text": ": If two objects are equal (meaning that "
          },
          {
            "Text": "Equals",
            "AttrFlags": 2
          },
          {
            "Text": " returns true), then "
          },
          {
            "Text": "GetHashCode",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "must",
            "AttrFlags": 1
          },
          {
            "Text": " return the same value for each of them."
          }
        ]
      },
      {
        "id": "5dd15d52-ab5a-4abb-98cb-c699d16f9446",
        "alive": true,
        "copied_from": "1e55cea0-6054-41a1-a88b-648842580ecc",
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549609838486,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549609800000,
        "parent_id": "9340bd1d-9542-456c-9914-451d6bc67b1d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Large range",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": If two objects are not equal ("
            ],
            [
              "Equals",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " says false), there should be a "
            ],
            [
              "high probability",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " their hash codes are distinct. "
            ],
            [
              "Perfect",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " hashing is often not possible as there is a limited number of values to choose from."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 3,
        "inline_content": [
          {
            "Text": "Large range",
            "AttrFlags": 1
          },
          {
            "Text": ": If two objects are not equal ("
          },
          {
            "Text": "Equals",
            "AttrFlags": 2
          },
          {
            "Text": " says false), there should be a "
          },
          {
            "Text": "high probability",
            "AttrFlags": 1
          },
          {
            "Text": " their hash codes are distinct. "
          },
          {
            "Text": "Perfect",
            "AttrFlags": 4
          },
          {
            "Text": " hashing is often not possible as there is a limited number of values to choose from."
          }
        ]
      },
      {
        "id": "55a6b594-044f-4929-a1c8-54a47fdbc2c6",
        "alive": true,
        "copied_from": "68f49b30-ff3a-4bb1-8ebc-6a98034ddf11",
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549609838486,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549609800000,
        "parent_id": "9340bd1d-9542-456c-9914-451d6bc67b1d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Cheap",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": It should be inexpensive to calculate the hash code in all cases."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 3,
        "inline_content": [
          {
            "Text": "Cheap",
            "AttrFlags": 1
          },
          {
            "Text": ": It should be inexpensive to calculate the hash code in all cases."
          }
        ]
      },
      {
        "id": "e137a1a1-bdce-4338-a16d-8c002e89f410",
        "alive": true,
        "copied_from": "ba1b000b-98dd-4679-90f8-d01e5ba7de85",
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549609838486,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549609800000,
        "parent_id": "9340bd1d-9542-456c-9914-451d6bc67b1d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "See: "
            ],
            [
              "Guidelines for Overloading Equals() and Operator ==",
              [
                [
                  "a",
                  "https://msdn.microsoft.com/en-us/library/ms173147.aspx"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "See: "
          },
          {
            "Text": "Guidelines for Overloading Equals() and Operator ==",
            "Link": "https://msdn.microsoft.com/en-us/library/ms173147.aspx"
          }
        ]
      },
      {
        "id": "6d8e25d7-303d-49c5-b779-7f7f708380e5",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549609800000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549609800000,
        "parent_id": "9340bd1d-9542-456c-9914-451d6bc67b1d",
        "parent_table": "block",
        "type": "text",
        "version": 4
      },
      {
        "id": "07c6e11d-d524-40e3-a2f6-6f73f1b1e00a",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528960337,
        "format": {
          "page_full_width": true,
          "page_small_text": true
        },
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549609860000,
        "parent_id": "9340bd1d-9542-456c-9914-451d6bc67b1d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Writing a good GetHashCode override"
            ]
          ]
        },
        "type": "page",
        "version": 14,
        "title": "Writing a good GetHashCode override",
        "format_page": {
          "page_cover": "",
          "page_cover_position": 0,
          "page_font": "",
          "page_full_width": true,
          "page_icon": "",
          "page_small_text": true
        }
      },
      {
        "id": "b42fca4c-ed67-4773-9cef-7bfbe0c79d26",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528961769,
        "format": {
          "page_full_width": true,
          "page_small_text": true
        },
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549609980000,
        "parent_id": "9340bd1d-9542-456c-9914-451d6bc67b1d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Default Equals behavior."
            ]
          ]
        },
        "type": "page",
        "version": 12,
        "title": "Default Equals behavior.",
        "format_page": {
          "page_cover": "",
          "page_cover_position": 0,
          "page_font": "",
          "page_full_width": true,
          "page_icon": "",
          "page_small_text": true
        }
      },
      {
        "id": "b0b1e0a9-9c43-4c24-8dff-c8e3526bd575",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528962281,
        "format": {
          "page_full_width": true,
          "page_small_text": true
        },
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549610100000,
        "parent_id": "9340bd1d-9542-456c-9914-451d6bc67b1d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Override Equals and GetHashCode on custom types"
            ]
          ]
        },
        "type": "page",
        "version": 14,
        "title": "Override Equals and GetHashCode on custom types",
        "format_page": {
          "page_cover": "",
          "page_cover_position": 0,
          "page_font": "",
          "page_full_width": true,
          "page_icon": "",
          "page_small_text": true
        }
      },
      {
        "id": "188cabaf-5935-4727-939b-378ffa0238af",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549528963378,
        "format": {
          "page_full_width": true,
          "page_small_text": true
        },
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549610220000,
        "parent_id": "9340bd1d-9542-456c-9914-451d6bc67b1d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Equals and GetHashCode in IEqualityComparator"
            ]
          ]
        },
        "type": "page",
        "version": 14,
        "title": "Equals and GetHashCode in IEqualityComparator",
        "format_page": {
          "page_cover": "",
          "page_cover_position": 0,
          "page_font": "",
          "page_full_width": true,
          "page_icon": "",
          "page_small_text": true
        }
      }
    ],
    "title": "Equals and GetHashCode",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}