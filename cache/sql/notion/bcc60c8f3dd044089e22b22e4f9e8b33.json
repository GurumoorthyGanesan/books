{
  "ID": "bcc60c8f-3dd0-4408-9e22-b22e4f9e8b33",
  "Root": {
    "alive": true,
    "content": [
      "c0214897-58dd-4f59-9af1-134e1aba131d",
      "1f2d5a10-6976-402d-94b6-534dd4f9f47b",
      "ac776ca7-9224-4098-b1ce-9fd2535c3aa1",
      "52e87129-405f-49ee-b60c-bc96962b99ba",
      "eebb4d75-6e14-41c4-b08a-d1a3cb76cf8e",
      "42bf18f0-feb0-4cf3-89fb-c2a52b9188fa",
      "5189eb81-c018-4a48-a410-c74806a9e4a1"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550457857425,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "bcc60c8f-3dd0-4408-9e22-b22e4f9e8b33",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551692231299,
    "parent_id": "111e9c71-85a7-4cb1-92e6-81b82c8dad2c",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Finding out-of-sequence records using the LAG function"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457857421,
        "id": "c0214897-58dd-4f59-9af1-134e1aba131d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457857421,
        "parent_id": "bcc60c8f-3dd0-4408-9e22-b22e4f9e8b33",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Given these sample data:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Given these sample data:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457857424,
        "id": "1f2d5a10-6976-402d-94b6-534dd4f9f47b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457857424,
        "parent_id": "bcc60c8f-3dd0-4408-9e22-b22e4f9e8b33",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "|ID |STATUS |STATUS_TIME |STATUS_BY | |———–|–––––|–––––––––––––|–––––| | 1|ONE |2016-09-28-19.47.52.501398|USER_1 | | 3|ONE |2016-09-28-19.47.52.501511|USER_2 | | 1|THREE |2016-09-28-19.47.52.501517|USER_3 | | 3|TWO |2016-09-28-19.47.52.501521|USER_2 | | 3|THREE |2016-09-28-19.47.52.501524|USER_4 |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "|ID |STATUS |STATUS_TIME |STATUS_BY | |———–|–––––|–––––––––––––|–––––| | 1|ONE |2016-09-28-19.47.52.501398|USER_1 | | 3|ONE |2016-09-28-19.47.52.501511|USER_2 | | 1|THREE |2016-09-28-19.47.52.501517|USER_3 | | 3|TWO |2016-09-28-19.47.52.501521|USER_2 | | 3|THREE |2016-09-28-19.47.52.501524|USER_4 |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457857424,
        "id": "ac776ca7-9224-4098-b1ce-9fd2535c3aa1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457857424,
        "parent_id": "bcc60c8f-3dd0-4408-9e22-b22e4f9e8b33",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Items identified by "
            ],
            [
              "ID",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " values must move from "
            ],
            [
              "STATUS",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " ‘ONE’ to ‘TWO’ to ‘THREE’ in sequence, without skipping statuses. The problem is to find users ("
            ],
            [
              "STATUS_BY",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") values who violate the rule and move from ‘ONE’ immediately to ‘THREE’."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Items identified by "
          },
          {
            "Text": "ID",
            "AttrFlags": 2
          },
          {
            "Text": " values must move from "
          },
          {
            "Text": "STATUS",
            "AttrFlags": 2
          },
          {
            "Text": " ‘ONE’ to ‘TWO’ to ‘THREE’ in sequence, without skipping statuses. The problem is to find users ("
          },
          {
            "Text": "STATUS_BY",
            "AttrFlags": 2
          },
          {
            "Text": ") values who violate the rule and move from ‘ONE’ immediately to ‘THREE’."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457857425,
        "id": "52e87129-405f-49ee-b60c-bc96962b99ba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457857425,
        "parent_id": "bcc60c8f-3dd0-4408-9e22-b22e4f9e8b33",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "LAG()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " analytical function helps to solve the problem by returning for each row the value in the preceding row:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "LAG()",
            "AttrFlags": 2
          },
          {
            "Text": " analytical function helps to solve the problem by returning for each row the value in the preceding row:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457857425,
        "id": "eebb4d75-6e14-41c4-b08a-d1a3cb76cf8e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457857425,
        "parent_id": "bcc60c8f-3dd0-4408-9e22-b22e4f9e8b33",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "SELECT * FROM (\n SELECT \n  t.*, \n  LAG(status) OVER (PARTITION BY id ORDER BY status_time) AS prev_status \n  FROM test t\n) t1 WHERE status = 'THREE' AND prev_status != 'TWO'"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "SELECT * FROM (\n SELECT \n  t.*, \n  LAG(status) OVER (PARTITION BY id ORDER BY status_time) AS prev_status \n  FROM test t\n) t1 WHERE status = 'THREE' AND prev_status != 'TWO'",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457857425,
        "id": "42bf18f0-feb0-4cf3-89fb-c2a52b9188fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457857425,
        "parent_id": "bcc60c8f-3dd0-4408-9e22-b22e4f9e8b33",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In case your database doesn’t have LAG() you can use this to produce the same result:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In case your database doesn’t have LAG() you can use this to produce the same result:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457857425,
        "id": "5189eb81-c018-4a48-a410-c74806a9e4a1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457857425,
        "parent_id": "bcc60c8f-3dd0-4408-9e22-b22e4f9e8b33",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "SELECT A.id, A.status, B.status as prev_status, A.status_time, B.status_time as prev_status_time\nFROM Data A, Data B\nWHERE A.id = B.id\nAND   B.status_time = (SELECT MAX(status_time) FROM Data where status_time \u003c A.status_time and id = A.id)\nAND   A.status = 'THREE' AND NOT B.status = 'TWO'"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "SELECT A.id, A.status, B.status as prev_status, A.status_time, B.status_time as prev_status_time\nFROM Data A, Data B\nWHERE A.id = B.id\nAND   B.status_time = (SELECT MAX(status_time) FROM Data where status_time \u003c A.status_time and id = A.id)\nAND   A.status = 'THREE' AND NOT B.status = 'TWO'",
        "code_language": "Plain Text"
      }
    ],
    "title": "Finding out-of-sequence records using the LAG function",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}