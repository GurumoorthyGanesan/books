{
  "ID": "75927219-8da6-4702-8c4b-3d70205cd81f",
  "Root": {
    "alive": true,
    "content": [
      "159829e6-6399-418e-87ec-feac1d8b1b11",
      "39d4122e-61f1-4a20-ad2f-d921f034d0f3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550459048458,
    "id": "75927219-8da6-4702-8c4b-3d70205cd81f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550459048458,
    "parent_id": "2974479c-567b-478d-a2d6-dc55734bd3a2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 Example of a cursor that queries all rows by index for each database"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459048455,
        "id": "159829e6-6399-418e-87ec-feac1d8b1b11",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459048455,
        "parent_id": "75927219-8da6-4702-8c4b-3d70205cd81f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here, a cursor is used to loop through all databases. Futhermore, a cursor from dynamic sql is used to query each database returned by the first cursor. This is to demonstrate the connection-scope of a cursor."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here, a cursor is used to loop through all databases. Futhermore, a cursor from dynamic sql is used to query each database returned by the first cursor. This is to demonstrate the connection-scope of a cursor."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459048458,
        "id": "39d4122e-61f1-4a20-ad2f-d921f034d0f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459048458,
        "parent_id": "75927219-8da6-4702-8c4b-3d70205cd81f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "DECLARE @db_name nvarchar(255)\nDECLARE @sql nvarchar(MAX)\n\nDECLARE @schema nvarchar(255) \nDECLARE @table nvarchar(255)\nDECLARE @column nvarchar(255)\n\n\n\n\nDECLARE db_cursor CURSOR FOR  \nSELECT name FROM sys.databases \n\n\nOPEN db_cursor   \nFETCH NEXT FROM db_cursor INTO @db_name    \n\nWHILE @@FETCH_STATUS = 0   \nBEGIN   \n    SET @sql = 'SELECT * FROM ' + QUOTENAME(@db_name) + '.information_schema.columns' \n    PRINT ''\n    PRINT ''\n    PRINT ''\n    PRINT @sql \n    -- EXECUTE(@sql) \n    \n    \n    \n    -- For each database \n\n    DECLARE @sqlstatement nvarchar(4000)\n    --move declare cursor into sql to be executed\n    SET @sqlstatement = 'DECLARE  columns_cursor CURSOR FOR SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME FROM ' + QUOTENAME(@db_name) + '.information_schema.columns ORDER BY TABLE_SCHEMA, TABLE_NAME, ORDINAL_POSITION'\n\n\n\n    EXEC sp_executesql @sqlstatement\n\n\n    OPEN columns_cursor\n    FETCH NEXT FROM columns_cursor\n    INTO @schema, @table, @column \n\n    WHILE @@FETCH_STATUS = 0\n    BEGIN\n        PRINT @schema + '.' + @table + '.' + @column \n        --EXEC asp_DoSomethingStoredProc @UserId\n\n    FETCH NEXT FROM columns_cursor --have to fetch again within loop\n    INTO @schema, @table, @column \n\n    END\n    CLOSE columns_cursor\n    DEALLOCATE columns_cursor\n\n    -- End for each database \n    \n    \n    \n    \n    \n    FETCH NEXT FROM db_cursor INTO @db_name   \nEND   \n\nCLOSE db_cursor   \nDEALLOCATE db_cursor"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "DECLARE @db_name nvarchar(255)\nDECLARE @sql nvarchar(MAX)\n\nDECLARE @schema nvarchar(255) \nDECLARE @table nvarchar(255)\nDECLARE @column nvarchar(255)\n\n\n\n\nDECLARE db_cursor CURSOR FOR  \nSELECT name FROM sys.databases \n\n\nOPEN db_cursor   \nFETCH NEXT FROM db_cursor INTO @db_name    \n\nWHILE @@FETCH_STATUS = 0   \nBEGIN   \n    SET @sql = 'SELECT * FROM ' + QUOTENAME(@db_name) + '.information_schema.columns' \n    PRINT ''\n    PRINT ''\n    PRINT ''\n    PRINT @sql \n    -- EXECUTE(@sql) \n    \n    \n    \n    -- For each database \n\n    DECLARE @sqlstatement nvarchar(4000)\n    --move declare cursor into sql to be executed\n    SET @sqlstatement = 'DECLARE  columns_cursor CURSOR FOR SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME FROM ' + QUOTENAME(@db_name) + '.information_schema.columns ORDER BY TABLE_SCHEMA, TABLE_NAME, ORDINAL_POSITION'\n\n\n\n    EXEC sp_executesql @sqlstatement\n\n\n    OPEN columns_cursor\n    FETCH NEXT FROM columns_cursor\n    INTO @schema, @table, @column \n\n    WHILE @@FETCH_STATUS = 0\n    BEGIN\n        PRINT @schema + '.' + @table + '.' + @column \n        --EXEC asp_DoSomethingStoredProc @UserId\n\n    FETCH NEXT FROM columns_cursor --have to fetch again within loop\n    INTO @schema, @table, @column \n\n    END\n    CLOSE columns_cursor\n    DEALLOCATE columns_cursor\n\n    -- End for each database \n    \n    \n    \n    \n    \n    FETCH NEXT FROM db_cursor INTO @db_name   \nEND   \n\nCLOSE db_cursor   \nDEALLOCATE db_cursor",
        "code_language": "Plain Text"
      }
    ],
    "title": "010 Example of a cursor that queries all rows by index for each database"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}