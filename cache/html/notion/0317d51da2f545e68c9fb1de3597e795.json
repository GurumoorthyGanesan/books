{
  "ID": "0317d51d-a2f5-45e6-8c9f-b1de3597e795",
  "Root": {
    "alive": true,
    "content": [
      "28260b3b-2373-4fac-a44b-25bce78ac21d",
      "a67afbe1-2b46-4489-bbba-1b9f8eef7192",
      "037b17d2-9b4f-44ee-bfa0-65390611b770"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551948526457,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "0317d51d-a2f5-45e6-8c9f-b1de3597e795",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551948526457,
    "parent_id": "1493e62f-db5f-450b-afb0-25d7ac2cf444",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Output Element Using For and Form Attributes"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551948526453,
        "id": "28260b3b-2373-4fac-a44b-25bce78ac21d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551948526453,
        "parent_id": "0317d51d-a2f5-45e6-8c9f-b1de3597e795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following demo features an "
            ],
            [
              "\u003coutput\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " element’s use of the "
            ],
            [
              "[for]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "[form]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " attributes. Keep in mind, "
            ],
            [
              "\u003coutput\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "needs JavaScript",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " in order to function. Inline JavaScript is commonly used in forms as this example demonstrates. Although the "
            ],
            [
              "\u003cinput\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " elements are "
            ],
            [
              "type=\"number\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", their "
            ],
            [
              "value",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s are not numbers, they are text. So if you require the "
            ],
            [
              "value",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s to be calculated, you must convert each "
            ],
            [
              "value",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " into a number using methods such as: "
            ],
            [
              "parseInt()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "parseFloat()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Number()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", etc."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following demo features an "
          },
          {
            "Text": "\u003coutput\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " element’s use of the "
          },
          {
            "Text": "[for]",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "[form]",
            "AttrFlags": 2
          },
          {
            "Text": " attributes. Keep in mind, "
          },
          {
            "Text": "\u003coutput\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "needs JavaScript",
            "AttrFlags": 1
          },
          {
            "Text": " in order to function. Inline JavaScript is commonly used in forms as this example demonstrates. Although the "
          },
          {
            "Text": "\u003cinput\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " elements are "
          },
          {
            "Text": "type=\"number\"",
            "AttrFlags": 2
          },
          {
            "Text": ", their "
          },
          {
            "Text": "value",
            "AttrFlags": 2
          },
          {
            "Text": "s are not numbers, they are text. So if you require the "
          },
          {
            "Text": "value",
            "AttrFlags": 2
          },
          {
            "Text": "s to be calculated, you must convert each "
          },
          {
            "Text": "value",
            "AttrFlags": 2
          },
          {
            "Text": " into a number using methods such as: "
          },
          {
            "Text": "parseInt()",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "parseFloat()",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Number()",
            "AttrFlags": 2
          },
          {
            "Text": ", etc."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551948526457,
        "id": "a67afbe1-2b46-4489-bbba-1b9f8eef7192",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551948526457,
        "parent_id": "0317d51d-a2f5-45e6-8c9f-b1de3597e795",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Live Demo",
              [
                [
                  "b"
                ],
                [
                  "a",
                  "http://pagedemos.com/jhvyqchzm29u/2"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Live Demo",
            "AttrFlags": 1,
            "Link": "http://pagedemos.com/jhvyqchzm29u/2"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551948526457,
        "id": "037b17d2-9b4f-44ee-bfa0-65390611b770",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551948526457,
        "parent_id": "0317d51d-a2f5-45e6-8c9f-b1de3597e795",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003c!--form1 will collect the values of in1 and in2 on 'input' event.--\u003e\n\u003c!--out1 value will be the sum of in1 and in2 values.--\u003e    \n\n\u003cform id=\"form1\" name=\"form1\" oninput=\"out1.value = parseInt(in1.value, 10) + parseInt(in2.value, 10)\"\u003e\n\n\u003cfieldset\u003e\n\n\u003clegend\u003eOutput Example\u003c/legend\u003e\n\n  \u003cinput type=\"number\" id=\"in1\" name=\"in1\" value=\"0\"\u003e\n\u003cbr/\u003e\n+\n\u003cinput type=\"number\" id=\"in2\" name=\"in2\" value=\"0\"\u003e\n\n\u003c/fieldset\u003e\n\n\u003c/form\u003e\n\n\u003c!--[for] attribute enables out1 to display calculations for in1 and in2.--\u003e\n\u003c!--[form] attribute designates form1 as the form owner of out1 even if it isn't a descendant.--\u003e\n\n\u003coutput name=\"out1\" for=\"in1 in2\" form=\"form1\"\u003e0\u003c/output\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003c!--form1 will collect the values of in1 and in2 on 'input' event.--\u003e\n\u003c!--out1 value will be the sum of in1 and in2 values.--\u003e    \n\n\u003cform id=\"form1\" name=\"form1\" oninput=\"out1.value = parseInt(in1.value, 10) + parseInt(in2.value, 10)\"\u003e\n\n\u003cfieldset\u003e\n\n\u003clegend\u003eOutput Example\u003c/legend\u003e\n\n  \u003cinput type=\"number\" id=\"in1\" name=\"in1\" value=\"0\"\u003e\n\u003cbr/\u003e\n+\n\u003cinput type=\"number\" id=\"in2\" name=\"in2\" value=\"0\"\u003e\n\n\u003c/fieldset\u003e\n\n\u003c/form\u003e\n\n\u003c!--[for] attribute enables out1 to display calculations for in1 and in2.--\u003e\n\u003c!--[form] attribute designates form1 as the form owner of out1 even if it isn't a descendant.--\u003e\n\n\u003coutput name=\"out1\" for=\"in1 in2\" form=\"form1\"\u003e0\u003c/output\u003e",
        "code_language": "Plain Text"
      }
    ],
    "title": "Output Element Using For and Form Attributes",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}