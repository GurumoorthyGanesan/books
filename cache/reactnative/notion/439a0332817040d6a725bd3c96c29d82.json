{
  "ID": "439a0332-8170-40d6-a725-bd3c96c29d82",
  "Root": {
    "alive": true,
    "content": [
      "143ef35e-30aa-43e6-8409-7f05da0bfbcc",
      "860a373f-2dfd-4539-a68d-cd8d5d31438a",
      "6f6dd62e-fd5c-4ed4-b741-7bca07263b9a",
      "3bef6d99-1a3c-4d6d-a7fd-68713120c1a4"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552100953446,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "439a0332-8170-40d6-a725-bd3c96c29d82",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552100953446,
    "parent_id": "b4f344f2-336e-4f43-8154-9f142b70d653",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Push Notification Simple Setup"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552100953443,
        "id": "143ef35e-30aa-43e6-8409-7f05da0bfbcc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552100953443,
        "parent_id": "439a0332-8170-40d6-a725-bd3c96c29d82",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Create new project PushNotification"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Create new project PushNotification"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552100953446,
        "id": "860a373f-2dfd-4539-a68d-cd8d5d31438a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552100953446,
        "parent_id": "439a0332-8170-40d6-a725-bd3c96c29d82",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "react-native init PushNotification"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "react-native init PushNotification",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552100953446,
        "id": "6f6dd62e-fd5c-4ed4-b741-7bca07263b9a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552100953446,
        "parent_id": "439a0332-8170-40d6-a725-bd3c96c29d82",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Put following in index.android.js"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Put following in index.android.js"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552100953446,
        "id": "3bef6d99-1a3c-4d6d-a7fd-68713120c1a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552100953446,
        "parent_id": "439a0332-8170-40d6-a725-bd3c96c29d82",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import React, { Component } from 'react';\n\nimport {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n  Button\n} from 'react-native';\n\nimport PushNotification from 'react-native-push-notification';\n\nexport default class App extends Component {\n\n    constructor(props){\n        super(props);\n        \n        this.NewNotification = this.NewNotification.bind(this);\n      }\n\n    componentDidMount(){\n\n        PushNotification.configure({\n\n            // (required) Called when a remote or local notification is opened or received\n            onNotification: function(notification) {\n                console.log( 'NOTIFICATION:', notification );\n            },\n\n            // Should the initial notification be popped automatically\n            // default: true\n            popInitialNotification: true,\n\n            /**\n              * (optional) default: true\n              * - Specified if permissions (ios) and token (android and ios) will requested or not,\n              * - if not, you must call PushNotificationsHandler.requestPermissions() later\n              */\n            requestPermissions: true,\n        });\n\n    }\n\n      NewNotification(){\n\n          let date = new Date(Date.now() + (this.state.seconds * 1000));\n\n          //Fix for IOS\n        if(Platform.OS == \"ios\"){\n            date = date.toISOString();\n        }\n\n        PushNotification.localNotificationSchedule({\n            message: \"My Notification Message\", // (required)\n            date: date,// (optional) for setting delay\n            largeIcon:\"\"// set this blank for removing large icon\n            //smallIcon: \"ic_notification\", // (optional) default: \"ic_notification\" with fallback for \"ic_launcher\" \n        });\n    }\n\n      render() {\n    \n        return (\n            \u003cView style={styles.container}\u003e\n                \u003cText style={styles.welcome}\u003e\n                  Push Notification\n                \u003c/Text\u003e\n                \u003cView style={styles.Button} \u003e\n                \u003cButton\n                  onPress={()=\u003e{this.NewNotification()}}\n                  title=\"Show Notification\"\n                  style={styles.Button}\n                  color=\"#841584\"\n                  accessibilityLabel=\"Show Notification\"\n                /\u003e\n                \u003c/View\u003e\n            \u003c/View\u003e\n        );\n      }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n  Button:{\n    margin: 10,\n  }\n});\n\nAppRegistry.registerComponent('PushNotification', () =\u003e App);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import React, { Component } from 'react';\n\nimport {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n  Button\n} from 'react-native';\n\nimport PushNotification from 'react-native-push-notification';\n\nexport default class App extends Component {\n\n    constructor(props){\n        super(props);\n        \n        this.NewNotification = this.NewNotification.bind(this);\n      }\n\n    componentDidMount(){\n\n        PushNotification.configure({\n\n            // (required) Called when a remote or local notification is opened or received\n            onNotification: function(notification) {\n                console.log( 'NOTIFICATION:', notification );\n            },\n\n            // Should the initial notification be popped automatically\n            // default: true\n            popInitialNotification: true,\n\n            /**\n              * (optional) default: true\n              * - Specified if permissions (ios) and token (android and ios) will requested or not,\n              * - if not, you must call PushNotificationsHandler.requestPermissions() later\n              */\n            requestPermissions: true,\n        });\n\n    }\n\n      NewNotification(){\n\n          let date = new Date(Date.now() + (this.state.seconds * 1000));\n\n          //Fix for IOS\n        if(Platform.OS == \"ios\"){\n            date = date.toISOString();\n        }\n\n        PushNotification.localNotificationSchedule({\n            message: \"My Notification Message\", // (required)\n            date: date,// (optional) for setting delay\n            largeIcon:\"\"// set this blank for removing large icon\n            //smallIcon: \"ic_notification\", // (optional) default: \"ic_notification\" with fallback for \"ic_launcher\" \n        });\n    }\n\n      render() {\n    \n        return (\n            \u003cView style={styles.container}\u003e\n                \u003cText style={styles.welcome}\u003e\n                  Push Notification\n                \u003c/Text\u003e\n                \u003cView style={styles.Button} \u003e\n                \u003cButton\n                  onPress={()=\u003e{this.NewNotification()}}\n                  title=\"Show Notification\"\n                  style={styles.Button}\n                  color=\"#841584\"\n                  accessibilityLabel=\"Show Notification\"\n                /\u003e\n                \u003c/View\u003e\n            \u003c/View\u003e\n        );\n      }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n  Button:{\n    margin: 10,\n  }\n});\n\nAppRegistry.registerComponent('PushNotification', () =\u003e App);",
        "code_language": "Plain Text"
      }
    ],
    "title": "Push Notification Simple Setup",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}