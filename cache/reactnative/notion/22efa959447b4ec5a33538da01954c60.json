{
  "ID": "22efa959-447b-4ec5-a335-38da01954c60",
  "Root": {
    "alive": true,
    "content": [
      "b0d16d50-ccd2-4b17-9ba9-107e4136bc4a",
      "58259322-4d6b-4193-89df-24db5f3ac0ea",
      "11644aed-4136-41d1-960a-f55e9392e25e",
      "51deaa09-9b48-4ee1-9124-5fecd1b97a86",
      "8a8d911a-3c50-46c9-a828-0d19c0f596bf",
      "6f55a4b0-348d-4771-b6c5-e63979eb2ce1",
      "e7600db5-d2d3-4f40-b128-f38a592c0d27"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552100590480,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "22efa959-447b-4ec5-a335-38da01954c60",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552100590480,
    "parent_id": "24cd6cac-49de-4e12-b7b0-01ceb0164fde",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Simple Example"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552100590476,
        "id": "b0d16d50-ccd2-4b17-9ba9-107e4136bc4a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552100590476,
        "parent_id": "22efa959-447b-4ec5-a335-38da01954c60",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "ListView - A core component designed for efficient display of vertically scrolling lists of changing data. The minimal API is to create a ListView.DataSource, populate it with a simple array of data blobs, and instantiate a ListView component with that data source and a renderRow callback which takes a blob from the data array and returns a renderable component."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "ListView - A core component designed for efficient display of vertically scrolling lists of changing data. The minimal API is to create a ListView.DataSource, populate it with a simple array of data blobs, and instantiate a ListView component with that data source and a renderRow callback which takes a blob from the data array and returns a renderable component."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552100590478,
        "id": "58259322-4d6b-4193-89df-24db5f3ac0ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552100590478,
        "parent_id": "22efa959-447b-4ec5-a335-38da01954c60",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Minimal example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Minimal example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552100590479,
        "id": "11644aed-4136-41d1-960a-f55e9392e25e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552100590479,
        "parent_id": "22efa959-447b-4ec5-a335-38da01954c60",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "getInitialState: function() {\n  var ds = new ListView.DataSource({rowHasChanged: (r1, r2) =\u003e r1 !== r2});\n  return {\n    dataSource: ds.cloneWithRows(['row 1', 'row 2']),\n  };\n},\n\nrender: function() {\n  return (\n    \u003cListView\n      dataSource={this.state.dataSource}\n      renderRow={(rowData) =\u003e \u003cText\u003e{rowData}\u003c/Text\u003e}\n    /\u003e\n  );\n},"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "getInitialState: function() {\n  var ds = new ListView.DataSource({rowHasChanged: (r1, r2) =\u003e r1 !== r2});\n  return {\n    dataSource: ds.cloneWithRows(['row 1', 'row 2']),\n  };\n},\n\nrender: function() {\n  return (\n    \u003cListView\n      dataSource={this.state.dataSource}\n      renderRow={(rowData) =\u003e \u003cText\u003e{rowData}\u003c/Text\u003e}\n    /\u003e\n  );\n},",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552100590479,
        "id": "51deaa09-9b48-4ee1-9124-5fecd1b97a86",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552100590479,
        "parent_id": "22efa959-447b-4ec5-a335-38da01954c60",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "ListView also supports more advanced features, including sections with sticky section headers, header and footer support, callbacks on reaching the end of the available data (onEndReached) and on the set of rows that are visible in the device viewport change (onChangeVisibleRows), and several performance optimizations."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "ListView also supports more advanced features, including sections with sticky section headers, header and footer support, callbacks on reaching the end of the available data (onEndReached) and on the set of rows that are visible in the device viewport change (onChangeVisibleRows), and several performance optimizations."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552100590479,
        "id": "8a8d911a-3c50-46c9-a828-0d19c0f596bf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552100590479,
        "parent_id": "22efa959-447b-4ec5-a335-38da01954c60",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are a few performance operations designed to make ListView scroll smoothly while dynamically loading potentially very large (or conceptually infinite) data sets:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are a few performance operations designed to make ListView scroll smoothly while dynamically loading potentially very large (or conceptually infinite) data sets:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552100590479,
        "id": "6f55a4b0-348d-4771-b6c5-e63979eb2ce1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552100590479,
        "parent_id": "22efa959-447b-4ec5-a335-38da01954c60",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Only re-render changed rows - the rowHasChanged function provided to the data source tells the ListView if it needs to re-render a row because the source data has changed - see ListViewDataSource for more details."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Only re-render changed rows - the rowHasChanged function provided to the data source tells the ListView if it needs to re-render a row because the source data has changed - see ListViewDataSource for more details."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552100590480,
        "id": "e7600db5-d2d3-4f40-b128-f38a592c0d27",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552100590480,
        "parent_id": "22efa959-447b-4ec5-a335-38da01954c60",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Rate-limited row rendering - By default, only one row is rendered per event-loop (customizable with the pageSize prop). This breaks up the work into smaller chunks to reduce the chance of dropping frames while rendering rows."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Rate-limited row rendering - By default, only one row is rendered per event-loop (customizable with the pageSize prop). This breaks up the work into smaller chunks to reduce the chance of dropping frames while rendering rows."
          }
        ]
      }
    ],
    "title": "Simple Example",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}