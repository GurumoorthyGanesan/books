{
  "ID": "f46a72d7-58ab-4eaf-880a-46c8a445363c",
  "Root": {
    "alive": true,
    "content": [
      "3220f6b0-35ff-414e-a181-1488e9d55f4f",
      "3cff8361-a1be-445d-bf48-2c3fd7d5bccd"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552100573896,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "f46a72d7-58ab-4eaf-880a-46c8a445363c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552100573896,
    "parent_id": "4f2bb161-bec2-4886-abdb-82a0b43e6562",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using Promises with the fetch API and Redux"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552100573893,
        "id": "3220f6b0-35ff-414e-a181-1488e9d55f4f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552100573893,
        "parent_id": "f46a72d7-58ab-4eaf-880a-46c8a445363c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Redux is the most common state management library used with React-Native. The following example demonstrates how to use the fetch API and dispatch changes to your applications state reducer using redux-thunk."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Redux is the most common state management library used with React-Native. The following example demonstrates how to use the fetch API and dispatch changes to your applications state reducer using redux-thunk."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552100573896,
        "id": "3cff8361-a1be-445d-bf48-2c3fd7d5bccd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552100573896,
        "parent_id": "f46a72d7-58ab-4eaf-880a-46c8a445363c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "export const fetchRecipes = (action) =\u003e {\n  return (dispatch, getState) =\u003e {\n    fetch('/recipes', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          recipeName,\n          instructions,\n          ingredients\n        })\n    })\n    .then((res) =\u003e {\n      // If response was successful parse the json and dispatch an update\n      if (res.ok) {\n        res.json().then((recipe) =\u003e {\n          dispatch({\n            type: 'UPDATE_RECIPE',\n            recipe\n          });\n        });\n      } else {\n        // response wasn't successful so dispatch an error\n        res.json().then((err) =\u003e {\n          dispatch({\n            type: 'ERROR_RECIPE',\n            message: err.reason,\n            status: err.status\n          });\n        });\n      }\n    })\n    .catch((err) =\u003e {\n      // Runs if there is a general JavaScript error.\n      dispatch(error('There was a problem with the request.'));\n    });\n  };\n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "export const fetchRecipes = (action) =\u003e {\n  return (dispatch, getState) =\u003e {\n    fetch('/recipes', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          recipeName,\n          instructions,\n          ingredients\n        })\n    })\n    .then((res) =\u003e {\n      // If response was successful parse the json and dispatch an update\n      if (res.ok) {\n        res.json().then((recipe) =\u003e {\n          dispatch({\n            type: 'UPDATE_RECIPE',\n            recipe\n          });\n        });\n      } else {\n        // response wasn't successful so dispatch an error\n        res.json().then((err) =\u003e {\n          dispatch({\n            type: 'ERROR_RECIPE',\n            message: err.reason,\n            status: err.status\n          });\n        });\n      }\n    })\n    .catch((err) =\u003e {\n      // Runs if there is a general JavaScript error.\n      dispatch(error('There was a problem with the request.'));\n    });\n  };\n};",
        "code_language": "Plain Text"
      }
    ],
    "title": "Using Promises with the fetch API and Redux",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}