{
  "ID": "93f88960-e754-4f5a-928d-fa37f59f08c6",
  "Root": {
    "alive": true,
    "content": [
      "ceea806a-a3be-4786-a254-ddefa1a6cf53",
      "25f5c3fb-bcdb-4321-84e0-74a2e11a97fa",
      "d4787bdf-2369-4df6-a4de-8b74fbfb4dc3",
      "be051521-75a9-4f64-a076-73e9ee381b61",
      "4f3b0136-c820-46ed-b3bb-180358166418",
      "d326d07c-00ab-4f03-b650-76accfdee883",
      "2eb8ea31-f2f5-480d-9a62-5e316b87ac9f",
      "4b81d973-9380-485d-a24e-bab5d06b30ba"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552102242247,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "93f88960-e754-4f5a-928d-fa37f59f08c6",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552102242247,
    "parent_id": "3d619f09-c104-4572-a105-9167b3454634",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Dynamic refinements"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102242237,
        "id": "ceea806a-a3be-4786-a254-ddefa1a6cf53",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102242237,
        "parent_id": "93f88960-e754-4f5a-928d-fa37f59f08c6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Refinements have special limitations."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Refinements have special limitations."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102242240,
        "id": "25f5c3fb-bcdb-4321-84e0-74a2e11a97fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102242240,
        "parent_id": "93f88960-e754-4f5a-928d-fa37f59f08c6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "refine",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can only be used in a module scope, but can be programmed using "
            ],
            [
              "send :refine",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "refine",
            "AttrFlags": 2
          },
          {
            "Text": " can only be used in a module scope, but can be programmed using "
          },
          {
            "Text": "send :refine",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102242240,
        "id": "d4787bdf-2369-4df6-a4de-8b74fbfb4dc3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102242240,
        "parent_id": "93f88960-e754-4f5a-928d-fa37f59f08c6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "using",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is more limited. It can only be called in a class/module definition. Still, it can accept a variable pointing to a module, and can be invoked in a loop."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "using",
            "AttrFlags": 2
          },
          {
            "Text": " is more limited. It can only be called in a class/module definition. Still, it can accept a variable pointing to a module, and can be invoked in a loop."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102242241,
        "id": "be051521-75a9-4f64-a076-73e9ee381b61",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102242241,
        "parent_id": "93f88960-e754-4f5a-928d-fa37f59f08c6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An example showing these concepts:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An example showing these concepts:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102242241,
        "id": "4f3b0136-c820-46ed-b3bb-180358166418",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102242241,
        "parent_id": "93f88960-e754-4f5a-928d-fa37f59f08c6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "module Patch\n  def patched?; true; end\nend\n\nPatch.send(:refine, String) { include Patch }\n\npatch_classes = [Patch]\n\nclass Patched\n  patch_classes.each { |klass| using klass }\n  \"\".patched? # =\u003e true\nend"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "module Patch\n  def patched?; true; end\nend\n\nPatch.send(:refine, String) { include Patch }\n\npatch_classes = [Patch]\n\nclass Patched\n  patch_classes.each { |klass| using klass }\n  \"\".patched? # =\u003e true\nend",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102242241,
        "id": "d326d07c-00ab-4f03-b650-76accfdee883",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102242241,
        "parent_id": "93f88960-e754-4f5a-928d-fa37f59f08c6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Since "
            ],
            [
              "using",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is so static, there can be issued with load order if the refinement files are not loaded first. A way to address this is to wrap the patched class/module definition in a proc. For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Since "
          },
          {
            "Text": "using",
            "AttrFlags": 2
          },
          {
            "Text": " is so static, there can be issued with load order if the refinement files are not loaded first. A way to address this is to wrap the patched class/module definition in a proc. For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102242247,
        "id": "2eb8ea31-f2f5-480d-9a62-5e316b87ac9f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102242247,
        "parent_id": "93f88960-e754-4f5a-928d-fa37f59f08c6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "module Patch\n  refine String do\n    def patched; true; end\n  end\nend\n\nclass Foo\nend\n\n# This is a proc since methods can't contain class definitions\ncreate_patched_class = Proc.new do\n  Foo.class_exec do\n    class Bar\n      using Patch\n      def self.patched?; ''.patched == true; end\n    end\n  end\nend\ncreate_patched_class.call\nFoo::Bar.patched? # =\u003e true"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "module Patch\n  refine String do\n    def patched; true; end\n  end\nend\n\nclass Foo\nend\n\n# This is a proc since methods can't contain class definitions\ncreate_patched_class = Proc.new do\n  Foo.class_exec do\n    class Bar\n      using Patch\n      def self.patched?; ''.patched == true; end\n    end\n  end\nend\ncreate_patched_class.call\nFoo::Bar.patched? # =\u003e true",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102242247,
        "id": "4b81d973-9380-485d-a24e-bab5d06b30ba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102242247,
        "parent_id": "93f88960-e754-4f5a-928d-fa37f59f08c6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Calling the proc creates the patched class "
            ],
            [
              "Foo::Bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This can be delayed until after all the code has loaded."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Calling the proc creates the patched class "
          },
          {
            "Text": "Foo::Bar",
            "AttrFlags": 2
          },
          {
            "Text": ". This can be delayed until after all the code has loaded."
          }
        ]
      }
    ],
    "title": "Dynamic refinements",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}