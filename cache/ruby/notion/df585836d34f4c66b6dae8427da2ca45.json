{
  "ID": "df585836-d34f-4c66-b6da-e8427da2ca45",
  "Root": {
    "alive": true,
    "content": [
      "58851029-71ea-4996-afe9-84dfe34be948",
      "77df587a-6bce-4243-82ec-280e63645e6d",
      "ffaa59a0-2cc1-47d9-939a-35cdd1741d10",
      "6d9236d9-a419-41c7-b2d0-719a0ae92f04",
      "a85a394c-c39a-4407-906b-1b2ea486b618",
      "c3604a75-0aa4-49cf-b806-73debfa8f022",
      "c7cb8b04-5b7d-4592-b206-196bc57eac04",
      "5f584d49-83dc-4eff-98f9-013ccff3f0c4",
      "d4bd9979-c6c7-4314-af8a-27eba1cdc9cd",
      "bb40a323-a80a-4b1a-b90d-edff55be3dc6",
      "378be6a8-3863-43b7-8384-8c892aa3d827",
      "23eb3dcd-0b95-4cd8-bbfa-4c5b278649dc",
      "b2f2c656-bb7e-4384-9120-bd2e298e2061",
      "7dcabe3e-4d16-4ff7-8e30-ee51d78b3ec5"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552101293268,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "df585836-d34f-4c66-b6da-e8427da2ca45",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552101293268,
    "parent_id": "dad9079e-f86e-45ca-a86d-64c83fac38ae",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Methods"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101293262,
        "id": "58851029-71ea-4996-afe9-84dfe34be948",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101293262,
        "parent_id": "df585836-d34f-4c66-b6da-e8427da2ca45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101293263,
        "id": "77df587a-6bce-4243-82ec-280e63645e6d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101293263,
        "parent_id": "df585836-d34f-4c66-b6da-e8427da2ca45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Functions in Ruby provide organized, reusable code to preform a set of actions. Functions simplify the coding process, prevent redundant logic, and make code easier to follow. This topic describes the declaration and utilization of functions, arguments, parameters, yield statements and scope in Ruby."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Functions in Ruby provide organized, reusable code to preform a set of actions. Functions simplify the coding process, prevent redundant logic, and make code easier to follow. This topic describes the declaration and utilization of functions, arguments, parameters, yield statements and scope in Ruby."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101293263,
        "id": "ffaa59a0-2cc1-47d9-939a-35cdd1741d10",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101293263,
        "parent_id": "df585836-d34f-4c66-b6da-e8427da2ca45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101293263,
        "id": "6d9236d9-a419-41c7-b2d0-719a0ae92f04",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101293263,
        "parent_id": "df585836-d34f-4c66-b6da-e8427da2ca45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A "
            ],
            [
              "method",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " is a named block of code, associated with one or more objects and generally identified by a list of parameters in addition to the name."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A "
          },
          {
            "Text": "method",
            "AttrFlags": 1
          },
          {
            "Text": " is a named block of code, associated with one or more objects and generally identified by a list of parameters in addition to the name."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101293263,
        "id": "a85a394c-c39a-4407-906b-1b2ea486b618",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101293263,
        "parent_id": "df585836-d34f-4c66-b6da-e8427da2ca45",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def hello(name)\n  \"Hello, #{name}\"\nend"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def hello(name)\n  \"Hello, #{name}\"\nend",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101293263,
        "id": "c3604a75-0aa4-49cf-b806-73debfa8f022",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101293263,
        "parent_id": "df585836-d34f-4c66-b6da-e8427da2ca45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A method invocation specifies the method name, the object on which it is to be invoked (sometimes called the receiver), and zero or more argument values that are assigned to the named method parameters. The value of the last expression evaluated in the method becomes the value of the method invocation expression."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A method invocation specifies the method name, the object on which it is to be invoked (sometimes called the receiver), and zero or more argument values that are assigned to the named method parameters. The value of the last expression evaluated in the method becomes the value of the method invocation expression."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101293263,
        "id": "c7cb8b04-5b7d-4592-b206-196bc57eac04",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101293263,
        "parent_id": "df585836-d34f-4c66-b6da-e8427da2ca45",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "hello(\"World\")\n# =\u003e \"Hello, World\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "hello(\"World\")\n# =\u003e \"Hello, World\"",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101293264,
        "id": "5f584d49-83dc-4eff-98f9-013ccff3f0c4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101293264,
        "parent_id": "df585836-d34f-4c66-b6da-e8427da2ca45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When the receiver is not explicit, it is "
            ],
            [
              "self",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When the receiver is not explicit, it is "
          },
          {
            "Text": "self",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101293264,
        "id": "d4bd9979-c6c7-4314-af8a-27eba1cdc9cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101293264,
        "parent_id": "df585836-d34f-4c66-b6da-e8427da2ca45",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "self\n# =\u003e main\n\nself.hello(\"World\")\n# =\u003e \"Hello, World\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "self\n# =\u003e main\n\nself.hello(\"World\")\n# =\u003e \"Hello, World\"",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101293264,
        "id": "bb40a323-a80a-4b1a-b90d-edff55be3dc6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101293264,
        "parent_id": "df585836-d34f-4c66-b6da-e8427da2ca45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As explained in the "
            ],
            [
              "Ruby Programming Language",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " book, many languages distinguish between functions, which have no associated object, and methods, which are invoked on a receiver object. Because Ruby is a purely object-oriented language, all methods are true methods and are associated with at least one object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As explained in the "
          },
          {
            "Text": "Ruby Programming Language",
            "AttrFlags": 4
          },
          {
            "Text": " book, many languages distinguish between functions, which have no associated object, and methods, which are invoked on a receiver object. Because Ruby is a purely object-oriented language, all methods are true methods and are associated with at least one object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101293264,
        "id": "378be6a8-3863-43b7-8384-8c892aa3d827",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101293264,
        "parent_id": "df585836-d34f-4c66-b6da-e8427da2ca45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Overview of Method Parameters"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Overview of Method Parameters"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101293265,
        "id": "23eb3dcd-0b95-4cd8-bbfa-4c5b278649dc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101293265,
        "parent_id": "df585836-d34f-4c66-b6da-e8427da2ca45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Type | Method Signature | Call Example | Assignments |\n———— | —————– | ———–– | ———– |"
            ],
            [
              "R",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "equired | "
            ],
            [
              "def fn(a,b,c)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "fn(2,3,5)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "a=2, b=3, c=5",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "V",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "ariadic | "
            ],
            [
              "def fn(*rest)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "fn(2,3,5)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "rest=[2, 3, 5]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "D",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "efault | "
            ],
            [
              "def fn(a=0,b=1)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "fn(2,3)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "a=2, b=3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "K",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "eyword | "
            ],
            [
              "def fn(a:0,b:1)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "fn(a:2,b:3)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "a=2, b=3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Type | Method Signature | Call Example | Assignments |\n———— | —————– | ———–– | ———– |"
          },
          {
            "Text": "R",
            "AttrFlags": 1
          },
          {
            "Text": "equired | "
          },
          {
            "Text": "def fn(a,b,c)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "fn(2,3,5)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "a=2, b=3, c=5",
            "AttrFlags": 2
          },
          {
            "Text": " |"
          },
          {
            "Text": "V",
            "AttrFlags": 1
          },
          {
            "Text": "ariadic | "
          },
          {
            "Text": "def fn(*rest)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "fn(2,3,5)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "rest=[2, 3, 5]",
            "AttrFlags": 2
          },
          {
            "Text": " |"
          },
          {
            "Text": "D",
            "AttrFlags": 1
          },
          {
            "Text": "efault | "
          },
          {
            "Text": "def fn(a=0,b=1)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "fn(2,3)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "a=2, b=3",
            "AttrFlags": 2
          },
          {
            "Text": " |"
          },
          {
            "Text": "K",
            "AttrFlags": 1
          },
          {
            "Text": "eyword | "
          },
          {
            "Text": "def fn(a:0,b:1)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "fn(a:2,b:3)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "a=2, b=3",
            "AttrFlags": 2
          },
          {
            "Text": " |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101293265,
        "id": "b2f2c656-bb7e-4384-9120-bd2e298e2061",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101293265,
        "parent_id": "df585836-d34f-4c66-b6da-e8427da2ca45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These argument types can be combined in virtually any way you can imagine to create variadic functions. The minimum number of arguments to the function will equal the amount of required arguments in the signature. Extra arguments will be assigned to default parameters first, then to the "
            ],
            [
              "*rest",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " parameter."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These argument types can be combined in virtually any way you can imagine to create variadic functions. The minimum number of arguments to the function will equal the amount of required arguments in the signature. Extra arguments will be assigned to default parameters first, then to the "
          },
          {
            "Text": "*rest",
            "AttrFlags": 2
          },
          {
            "Text": " parameter."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101293268,
        "id": "7dcabe3e-4d16-4ff7-8e30-ee51d78b3ec5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101293268,
        "parent_id": "df585836-d34f-4c66-b6da-e8427da2ca45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Type | Method Signature | Call Example | Assignments |\n—–– | ––––––––––– | —————– | ———– |\nR,D,V,R | "
            ],
            [
              "def fn(a,b=1,*mid,z)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "fn(2,97)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "a=2, b=1, mid=[], z=97",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | | | "
            ],
            [
              "fn(2,3,97)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "a=2, b=3, mid=[], z=97",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | | | "
            ],
            [
              "fn(2,3,5,97)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "a=2, b=3, mid=[5], z=97",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | | | "
            ],
            [
              "fn(2,3,5,7,97)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "a=2, b=3, mid=[5,7], z=97",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |\nR,K,K | "
            ],
            [
              "def fn(a,g:6,h:7)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "fn(2)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "a=2, g=6, h=7",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | | | "
            ],
            [
              "fn(2,h:19)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "a=2, g=6, h=19",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | | | "
            ],
            [
              "fn(2,g:17,h:19)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "a=2, g=17, h=19",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "VK",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/ruby/997/methods/6790/capturing-undeclared-keyword-arguments-double-splat"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "def fn(**ks)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "fn(a:2,g:17,h:19)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "ks={a:2, g:17, h:19}",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | | | "
            ],
            [
              "fn(four:4,five:5)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "ks={four:4, five:5}",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Type | Method Signature | Call Example | Assignments |\n—–– | ––––––––––– | —————– | ———– |\nR,D,V,R | "
          },
          {
            "Text": "def fn(a,b=1,*mid,z)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "fn(2,97)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "a=2, b=1, mid=[], z=97",
            "AttrFlags": 2
          },
          {
            "Text": " | | | "
          },
          {
            "Text": "fn(2,3,97)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "a=2, b=3, mid=[], z=97",
            "AttrFlags": 2
          },
          {
            "Text": " | | | "
          },
          {
            "Text": "fn(2,3,5,97)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "a=2, b=3, mid=[5], z=97",
            "AttrFlags": 2
          },
          {
            "Text": " | | | "
          },
          {
            "Text": "fn(2,3,5,7,97)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "a=2, b=3, mid=[5,7], z=97",
            "AttrFlags": 2
          },
          {
            "Text": " |\nR,K,K | "
          },
          {
            "Text": "def fn(a,g:6,h:7)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "fn(2)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "a=2, g=6, h=7",
            "AttrFlags": 2
          },
          {
            "Text": " | | | "
          },
          {
            "Text": "fn(2,h:19)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "a=2, g=6, h=19",
            "AttrFlags": 2
          },
          {
            "Text": " | | | "
          },
          {
            "Text": "fn(2,g:17,h:19)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "a=2, g=17, h=19",
            "AttrFlags": 2
          },
          {
            "Text": " |"
          },
          {
            "Text": "VK",
            "Link": "http://stackoverflow.com/documentation/ruby/997/methods/6790/capturing-undeclared-keyword-arguments-double-splat"
          },
          {
            "Text": " | "
          },
          {
            "Text": "def fn(**ks)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "fn(a:2,g:17,h:19)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "ks={a:2, g:17, h:19}",
            "AttrFlags": 2
          },
          {
            "Text": " | | | "
          },
          {
            "Text": "fn(four:4,five:5)",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "ks={four:4, five:5}",
            "AttrFlags": 2
          },
          {
            "Text": " |"
          }
        ]
      }
    ],
    "title": "Methods",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}