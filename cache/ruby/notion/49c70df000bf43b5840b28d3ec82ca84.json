{
  "ID": "49c70df0-00bf-43b5-840b-28d3ec82ca84",
  "Root": {
    "alive": true,
    "content": [
      "8ad16e36-2535-4cca-a3ff-1b9017146ecd",
      "c5655a8e-1b21-41b4-8dbb-ce8899a0b222",
      "9620b9ce-8d96-4a9e-93ce-f9aa30fe3deb",
      "c14373f4-101c-4be0-9470-e04de173f070",
      "9d7b5983-9644-451f-984f-2f516eb07310",
      "41f0ecff-3609-41c4-ae65-976db66762c3",
      "016944fc-0966-4048-8b33-a8223951403e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552102227899,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "49c70df0-00bf-43b5-840b-28d3ec82ca84",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552102227899,
    "parent_id": "36398b40-cb12-4fd8-829a-5dd8aa2617b5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "View Global and Local Variables"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102227896,
        "id": "8ad16e36-2535-4cca-a3ff-1b9017146ecd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102227896,
        "parent_id": "49c70df0-00bf-43b5-840b-28d3ec82ca84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "Kernel",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " exposes methods for getting the list of "
            ],
            [
              "global_variables",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://ruby-doc.org/core-2.3.1/Kernel.html#method-i-global_variables"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "local_variables",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://ruby-doc.org/core-2.3.1/Kernel.html#method-i-local_variables"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "Kernel",
            "AttrFlags": 2
          },
          {
            "Text": " exposes methods for getting the list of "
          },
          {
            "Text": "global_variables",
            "AttrFlags": 2,
            "Link": "http://ruby-doc.org/core-2.3.1/Kernel.html#method-i-global_variables"
          },
          {
            "Text": " and "
          },
          {
            "Text": "local_variables",
            "AttrFlags": 2,
            "Link": "http://ruby-doc.org/core-2.3.1/Kernel.html#method-i-local_variables"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102227897,
        "id": "c5655a8e-1b21-41b4-8dbb-ce8899a0b222",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102227897,
        "parent_id": "49c70df0-00bf-43b5-840b-28d3ec82ca84",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "cats  = 42\n$demo = \"in progress\"\np global_variables.sort\n#=\u003e [:$!, :$\", :$$, :$\u0026, :$', :$*, :$+, :$,, :$-0, :$-F, :$-I, :$-K, :$-W, :$-a,\n#=\u003e  :$-d, :$-i, :$-l, :$-p, :$-v, :$-w, :$., :$/, :$0, :$1, :$2, :$3, :$4, :$5,\n#=\u003e  :$6, :$7, :$8, :$9, :$:, :$;, :$\u003c, :$=, :$\u003e, :$?, :$@, :$DEBUG, :$FILENAME,\n#=\u003e  :$KCODE, :$LOADED_FEATURES, :$LOAD_PATH, :$PROGRAM_NAME, :$SAFE, :$VERBOSE,\n#=\u003e  :$\\, :$_, :$`, :$binding, :$demo, :$stderr, :$stdin, :$stdout, :$~]\n\np local_variables\n#=\u003e [:cats]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "cats  = 42\n$demo = \"in progress\"\np global_variables.sort\n#=\u003e [:$!, :$\", :$$, :$\u0026, :$', :$*, :$+, :$,, :$-0, :$-F, :$-I, :$-K, :$-W, :$-a,\n#=\u003e  :$-d, :$-i, :$-l, :$-p, :$-v, :$-w, :$., :$/, :$0, :$1, :$2, :$3, :$4, :$5,\n#=\u003e  :$6, :$7, :$8, :$9, :$:, :$;, :$\u003c, :$=, :$\u003e, :$?, :$@, :$DEBUG, :$FILENAME,\n#=\u003e  :$KCODE, :$LOADED_FEATURES, :$LOAD_PATH, :$PROGRAM_NAME, :$SAFE, :$VERBOSE,\n#=\u003e  :$\\, :$_, :$`, :$binding, :$demo, :$stderr, :$stdin, :$stdout, :$~]\n\np local_variables\n#=\u003e [:cats]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102227898,
        "id": "9620b9ce-8d96-4a9e-93ce-f9aa30fe3deb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102227898,
        "parent_id": "49c70df0-00bf-43b5-840b-28d3ec82ca84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Unlike instance variables there are no methods specifically for getting, setting, or removing global or local variables. Looking for such functionality is usually a sign that your code should be rewritten to use a Hash to store the values. However, if you must modify global or local variables by name, you can use "
            ],
            [
              "eval",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with a string:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Unlike instance variables there are no methods specifically for getting, setting, or removing global or local variables. Looking for such functionality is usually a sign that your code should be rewritten to use a Hash to store the values. However, if you must modify global or local variables by name, you can use "
          },
          {
            "Text": "eval",
            "AttrFlags": 2
          },
          {
            "Text": " with a string:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102227898,
        "id": "c14373f4-101c-4be0-9470-e04de173f070",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102227898,
        "parent_id": "49c70df0-00bf-43b5-840b-28d3ec82ca84",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var = \"$demo\"\neval(var)           #=\u003e \"in progress\"\neval(\"#{var} = 17\")\np $demo             #=\u003e 17"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var = \"$demo\"\neval(var)           #=\u003e \"in progress\"\neval(\"#{var} = 17\")\np $demo             #=\u003e 17",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102227898,
        "id": "9d7b5983-9644-451f-984f-2f516eb07310",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102227898,
        "parent_id": "49c70df0-00bf-43b5-840b-28d3ec82ca84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By default, "
            ],
            [
              "eval",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will evaluate your variables in the current scope. To evaluate local variables in a different scope, you must capture the "
            ],
            [
              "binding",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " where the local variables exist."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By default, "
          },
          {
            "Text": "eval",
            "AttrFlags": 2
          },
          {
            "Text": " will evaluate your variables in the current scope. To evaluate local variables in a different scope, you must capture the "
          },
          {
            "Text": "binding",
            "AttrFlags": 4
          },
          {
            "Text": " where the local variables exist."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102227898,
        "id": "41f0ecff-3609-41c4-ae65-976db66762c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102227898,
        "parent_id": "49c70df0-00bf-43b5-840b-28d3ec82ca84",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def local_variable_get(name, bound=nil)\n  foo = :inside\n  eval(name,bound)\nend\n\ndef test_1\n  foo = :outside\n  p local_variable_get(\"foo\")\nend\n\ndef test_2\n  foo = :outside\n  p local_variable_get(\"foo\",binding)\nend\n  \ntest_1 #=\u003e :inside\ntest_2 #=\u003e :outside"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def local_variable_get(name, bound=nil)\n  foo = :inside\n  eval(name,bound)\nend\n\ndef test_1\n  foo = :outside\n  p local_variable_get(\"foo\")\nend\n\ndef test_2\n  foo = :outside\n  p local_variable_get(\"foo\",binding)\nend\n  \ntest_1 #=\u003e :inside\ntest_2 #=\u003e :outside",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102227899,
        "id": "016944fc-0966-4048-8b33-a8223951403e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102227899,
        "parent_id": "49c70df0-00bf-43b5-840b-28d3ec82ca84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the above, "
            ],
            [
              "test_1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " did not pass a binding to "
            ],
            [
              "local_variable_get",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and so the "
            ],
            [
              "eval",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " was executed within the context of that method, where a local variable named "
            ],
            [
              "foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " was set to "
            ],
            [
              ":inside",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the above, "
          },
          {
            "Text": "test_1",
            "AttrFlags": 2
          },
          {
            "Text": " did not pass a binding to "
          },
          {
            "Text": "local_variable_get",
            "AttrFlags": 2
          },
          {
            "Text": ", and so the "
          },
          {
            "Text": "eval",
            "AttrFlags": 2
          },
          {
            "Text": " was executed within the context of that method, where a local variable named "
          },
          {
            "Text": "foo",
            "AttrFlags": 2
          },
          {
            "Text": " was set to "
          },
          {
            "Text": ":inside",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "View Global and Local Variables",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}