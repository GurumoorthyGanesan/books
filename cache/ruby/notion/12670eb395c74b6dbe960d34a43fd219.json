{
  "ID": "12670eb3-95c7-4b6d-be96-0d34a43fd219",
  "Root": {
    "alive": true,
    "content": [
      "5d20f754-b7c9-44be-8fb7-2c81bb2977db",
      "ad2abf6e-86fc-4702-97be-30ae52912ea5",
      "84621436-a7d2-447d-a41c-2b30bdc0a62b",
      "06cdac1c-bd26-4b4c-b33f-312510f1944d",
      "7adf5b90-977f-4e16-b360-9329a35c88d0",
      "329da1fe-80aa-40f9-9819-fbe543e1ef36",
      "18b7ee62-8930-4d70-838e-52a2606a5a97",
      "7ce7e94c-4998-4a32-bdad-1f34b28a69a9"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552101302975,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "12670eb3-95c7-4b6d-be96-0d34a43fd219",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552101302975,
    "parent_id": "dad9079e-f86e-45ca-a86d-64c83fac38ae",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Capturing undeclared keyword arguments double splat"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101302973,
        "id": "5d20f754-b7c9-44be-8fb7-2c81bb2977db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101302973,
        "parent_id": "12670eb3-95c7-4b6d-be96-0d34a43fd219",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "**",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator works similarly to the "
            ],
            [
              "\\*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator but it applies to keyword parameters."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "**",
            "AttrFlags": 2
          },
          {
            "Text": " operator works similarly to the "
          },
          {
            "Text": "\\*",
            "AttrFlags": 2
          },
          {
            "Text": " operator but it applies to keyword parameters."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101302974,
        "id": "ad2abf6e-86fc-4702-97be-30ae52912ea5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101302974,
        "parent_id": "12670eb3-95c7-4b6d-be96-0d34a43fd219",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def options(required_key:, optional_key: nil, **other_options)\n  other_options\nend\n\noptions(required_key: 'Done!', foo: 'Foo!', bar: 'Bar!')\n#\u003e { :foo =\u003e \"Foo!\", :bar =\u003e \"Bar!\" }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def options(required_key:, optional_key: nil, **other_options)\n  other_options\nend\n\noptions(required_key: 'Done!', foo: 'Foo!', bar: 'Bar!')\n#\u003e { :foo =\u003e \"Foo!\", :bar =\u003e \"Bar!\" }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101302974,
        "id": "84621436-a7d2-447d-a41c-2b30bdc0a62b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101302974,
        "parent_id": "12670eb3-95c7-4b6d-be96-0d34a43fd219",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the above example, if the "
            ],
            [
              "**other_options",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not used, an "
            ],
            [
              "ArgumentError: unknown keyword: foo, bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " error would be raised."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the above example, if the "
          },
          {
            "Text": "**other_options",
            "AttrFlags": 2
          },
          {
            "Text": " is not used, an "
          },
          {
            "Text": "ArgumentError: unknown keyword: foo, bar",
            "AttrFlags": 2
          },
          {
            "Text": " error would be raised."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101302974,
        "id": "06cdac1c-bd26-4b4c-b33f-312510f1944d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101302974,
        "parent_id": "12670eb3-95c7-4b6d-be96-0d34a43fd219",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def without_double_splat(required_key:, optional_key: nil)\n  # do nothing\nend\n\nwithout_double_splat(required_key: 'Done!', foo: 'Foo!', bar: 'Bar!')\n#\u003e ArgumentError: unknown keywords: foo, bar"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def without_double_splat(required_key:, optional_key: nil)\n  # do nothing\nend\n\nwithout_double_splat(required_key: 'Done!', foo: 'Foo!', bar: 'Bar!')\n#\u003e ArgumentError: unknown keywords: foo, bar",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101302975,
        "id": "7adf5b90-977f-4e16-b360-9329a35c88d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101302975,
        "parent_id": "12670eb3-95c7-4b6d-be96-0d34a43fd219",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is handy when you have a hash of options that you want to pass to a method and you do not want to filter the keys."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is handy when you have a hash of options that you want to pass to a method and you do not want to filter the keys."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101302975,
        "id": "329da1fe-80aa-40f9-9819-fbe543e1ef36",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101302975,
        "parent_id": "12670eb3-95c7-4b6d-be96-0d34a43fd219",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def options(required_key:, optional_key: nil, **other_options)\n  other_options\nend\n\nmy_hash = { required_key: true, foo: 'Foo!', bar: 'Bar!' }\n\noptions(my_hash)\n#\u003e { :foo =\u003e \"Foo!\", :bar =\u003e \"Bar!\" }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def options(required_key:, optional_key: nil, **other_options)\n  other_options\nend\n\nmy_hash = { required_key: true, foo: 'Foo!', bar: 'Bar!' }\n\noptions(my_hash)\n#\u003e { :foo =\u003e \"Foo!\", :bar =\u003e \"Bar!\" }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101302975,
        "id": "18b7ee62-8930-4d70-838e-52a2606a5a97",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101302975,
        "parent_id": "12670eb3-95c7-4b6d-be96-0d34a43fd219",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is also possible to "
            ],
            [
              "unpack",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " a hash using the "
            ],
            [
              "**",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator. This allows you to supply keyword directly to a method in addition to values from other hashes:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is also possible to "
          },
          {
            "Text": "unpack",
            "AttrFlags": 4
          },
          {
            "Text": " a hash using the "
          },
          {
            "Text": "**",
            "AttrFlags": 2
          },
          {
            "Text": " operator. This allows you to supply keyword directly to a method in addition to values from other hashes:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101302975,
        "id": "7ce7e94c-4998-4a32-bdad-1f34b28a69a9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101302975,
        "parent_id": "12670eb3-95c7-4b6d-be96-0d34a43fd219",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "my_hash = { foo: 'Foo!', bar: 'Bar!' }\n\noptions(required_key: true, **my_hash)\n#\u003e { :foo =\u003e \"Foo!\", :bar =\u003e \"Bar!\" }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "my_hash = { foo: 'Foo!', bar: 'Bar!' }\n\noptions(required_key: true, **my_hash)\n#\u003e { :foo =\u003e \"Foo!\", :bar =\u003e \"Bar!\" }",
        "code_language": "Plain Text"
      }
    ],
    "title": "Capturing undeclared keyword arguments double splat",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}