{
  "ID": "71e4b8d8-56f2-4ce8-972a-608a92d85fb3",
  "Root": {
    "alive": true,
    "content": [
      "bb57d4e0-23a9-45b6-96f0-203b31019a3a",
      "fc6fa5a0-f30b-43f5-a661-35f7b7e08918",
      "009799ef-3f8d-4bbb-bbf4-d7300009f889",
      "6ad51ce6-300c-469f-9689-4798161d18ce",
      "0ecf3130-e084-4de2-997f-242bc505bf4c",
      "4e90b5f1-da53-43f0-95cc-7a0b9fe8cab9",
      "23e5cda2-a01e-42ea-aa7f-6e6778787b9d",
      "84dc1121-5ff8-4b1e-b61d-87fdbb701cb7",
      "3ec29e4c-4c4a-401f-a8ea-04c3c27604d1",
      "bd04d4b0-683e-4e1d-9617-41b99a081320"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552102211961,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "71e4b8d8-56f2-4ce8-972a-608a92d85fb3",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552102211961,
    "parent_id": "bd282be1-56e1-4d1d-8027-7d824c9f0418",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "When to use self"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102211957,
        "id": "bb57d4e0-23a9-45b6-96f0-203b31019a3a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102211957,
        "parent_id": "71e4b8d8-56f2-4ce8-972a-608a92d85fb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Most Ruby code utilizes the implicit receiver, so programmers who are new to Ruby are often confused about when to use "
            ],
            [
              "self",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The practical answer is that "
            ],
            [
              "self",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is used in two major ways:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Most Ruby code utilizes the implicit receiver, so programmers who are new to Ruby are often confused about when to use "
          },
          {
            "Text": "self",
            "AttrFlags": 2
          },
          {
            "Text": ". The practical answer is that "
          },
          {
            "Text": "self",
            "AttrFlags": 2
          },
          {
            "Text": " is used in two major ways:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102211960,
        "id": "fc6fa5a0-f30b-43f5-a661-35f7b7e08918",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102211960,
        "parent_id": "71e4b8d8-56f2-4ce8-972a-608a92d85fb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "1. To change the receiver.",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "1. To change the receiver.",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102211960,
        "id": "009799ef-3f8d-4bbb-bbf4-d7300009f889",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102211960,
        "parent_id": "71e4b8d8-56f2-4ce8-972a-608a92d85fb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Ordinarily the behavior of "
            ],
            [
              "def",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " inside a class or module is to create instance methods. Self can be used to define methods on the class instead."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Ordinarily the behavior of "
          },
          {
            "Text": "def",
            "AttrFlags": 2
          },
          {
            "Text": " inside a class or module is to create instance methods. Self can be used to define methods on the class instead."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102211960,
        "id": "6ad51ce6-300c-469f-9689-4798161d18ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102211960,
        "parent_id": "71e4b8d8-56f2-4ce8-972a-608a92d85fb3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Foo\n  def bar\n    1\n  end\n\n  def self.bar\n    2\n  end\nend\n\nFoo.new.bar #=\u003e 1\nFoo.bar #=\u003e 2"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Foo\n  def bar\n    1\n  end\n\n  def self.bar\n    2\n  end\nend\n\nFoo.new.bar #=\u003e 1\nFoo.bar #=\u003e 2",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102211960,
        "id": "0ecf3130-e084-4de2-997f-242bc505bf4c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102211960,
        "parent_id": "71e4b8d8-56f2-4ce8-972a-608a92d85fb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "2. To disambiguate the receiver",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "2. To disambiguate the receiver",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102211960,
        "id": "4e90b5f1-da53-43f0-95cc-7a0b9fe8cab9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102211960,
        "parent_id": "71e4b8d8-56f2-4ce8-972a-608a92d85fb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When local variables may have the same name as a method an explicit receiver may be required to disambiguate."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When local variables may have the same name as a method an explicit receiver may be required to disambiguate."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102211961,
        "id": "23e5cda2-a01e-42ea-aa7f-6e6778787b9d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102211961,
        "parent_id": "71e4b8d8-56f2-4ce8-972a-608a92d85fb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Examples:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Examples:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102211961,
        "id": "84dc1121-5ff8-4b1e-b61d-87fdbb701cb7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102211961,
        "parent_id": "71e4b8d8-56f2-4ce8-972a-608a92d85fb3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Example\n  def foo\n    1\n  end\n\n  def bar\n    foo + 1\n  end\n\n  def baz(foo)\n    self.foo + foo # self.foo is the method, foo is the local variable\n  end\n\n  def qux\n    bar = 2\n    self.bar + bar # self.bar is the method, bar is the local variable\n  end \nend\n\nExample.new.foo    #=\u003e 1\nExample.new.bar    #=\u003e 2\nExample.new.baz(2) #=\u003e 3\nExample.new.qux    #=\u003e 4"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Example\n  def foo\n    1\n  end\n\n  def bar\n    foo + 1\n  end\n\n  def baz(foo)\n    self.foo + foo # self.foo is the method, foo is the local variable\n  end\n\n  def qux\n    bar = 2\n    self.bar + bar # self.bar is the method, bar is the local variable\n  end \nend\n\nExample.new.foo    #=\u003e 1\nExample.new.bar    #=\u003e 2\nExample.new.baz(2) #=\u003e 3\nExample.new.qux    #=\u003e 4",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102211961,
        "id": "3ec29e4c-4c4a-401f-a8ea-04c3c27604d1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102211961,
        "parent_id": "71e4b8d8-56f2-4ce8-972a-608a92d85fb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The other common case requiring disambiguation involves methods that end in the equals sign. For instance:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The other common case requiring disambiguation involves methods that end in the equals sign. For instance:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102211961,
        "id": "bd04d4b0-683e-4e1d-9617-41b99a081320",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102211961,
        "parent_id": "71e4b8d8-56f2-4ce8-972a-608a92d85fb3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Example\n  def foo=(input)\n    @foo = input\n  end\n\n  def get_foo\n    @foo\n  end\n\n  def bar(input)\n    foo = input # will create a local variable\n  end\n\n  def baz(input)\n    self.foo = input # will call the method\n  end\nend\n\ne = Example.new\ne.get_foo #=\u003e nil\ne.foo = 1\ne.get_foo #=\u003e 1\ne.bar(2)\ne.get_foo #=\u003e 1\ne.baz(2)\ne.get_foo #=\u003e 2"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Example\n  def foo=(input)\n    @foo = input\n  end\n\n  def get_foo\n    @foo\n  end\n\n  def bar(input)\n    foo = input # will create a local variable\n  end\n\n  def baz(input)\n    self.foo = input # will call the method\n  end\nend\n\ne = Example.new\ne.get_foo #=\u003e nil\ne.foo = 1\ne.get_foo #=\u003e 1\ne.bar(2)\ne.get_foo #=\u003e 1\ne.baz(2)\ne.get_foo #=\u003e 2",
        "code_language": "Plain Text"
      }
    ],
    "title": "When to use self",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}