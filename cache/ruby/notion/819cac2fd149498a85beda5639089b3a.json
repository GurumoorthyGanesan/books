{
  "ID": "819cac2f-d149-498a-85be-da5639089b3a",
  "Root": {
    "alive": true,
    "content": [
      "ef5de04e-f57d-4a91-8e9c-620404684f72",
      "230a0abf-a04d-4334-ad57-39ea45e8cda1",
      "b952f25a-a37f-42f0-b8a5-328af5890e79",
      "c23a645a-283c-4f41-848c-9ffafce50ef2",
      "3e7b91ef-94a1-4a24-a4f6-21c2ec1253bc",
      "be6fcf5d-ad6f-4b58-8f3b-21d293988785",
      "91f95ca1-b7b9-4756-9708-512339f2dc69",
      "5ab97bf0-19fe-4bbd-9bce-233da8d69f7b",
      "0262d6c7-bd12-4ed3-b0fd-f65b89616567",
      "4a852026-4dc1-42bb-8f10-990ffc3657bd",
      "ee2ee5aa-dcc5-4e8b-95df-09936ec27b92",
      "1c95acb5-a59d-4dcf-8543-40a06a962e73",
      "a28fb5db-3dad-46ce-a68f-70c0a7cdd9eb",
      "162718bd-c5b0-4c76-b087-47b741378aef",
      "831e03c5-a53c-48c9-adea-772218e027dd",
      "f9da6fa5-e6d2-4abf-b4ab-3f108d406e19",
      "14965050-58d0-4525-8da4-fe5220192817",
      "612786db-1dfa-4a2e-b57c-e7c732faf86c",
      "ac09c98a-776d-4f34-8565-5f63c0268c35",
      "fe993edf-5298-44fc-8faf-51e33bc26111",
      "2e215bb5-fb52-4cae-8275-d93be972f25f",
      "b583c9d5-dd4d-48ba-abe9-4e8b7c2f7f32",
      "198debe5-38cc-4152-8418-db830299e7b0",
      "4988bb4b-b148-4732-b846-250ea3faf90b",
      "65e5109b-a88a-44e6-b47d-7e516c351119",
      "85fb623f-e80b-4e3e-857d-0b1e2a93fa82",
      "2e81a36f-1c3d-4947-867d-788c820045e2",
      "4c3d9a4e-19a9-45b5-9681-a79564c3d75f",
      "c25b4f4d-0ac9-4b21-bdd9-9c23ff3e69c0",
      "93bb8547-269b-4be1-8789-2ed0ae87bffc",
      "f828a9fe-4e08-4db1-b943-fd1bf03f8a1e",
      "dd203440-e85f-4125-8521-d401b2d65d0b",
      "7ca90b01-070e-4ccd-8ead-5bf7ced8f6f8",
      "e77864ed-63c5-453c-9918-66ce0de79fdc",
      "2c6228f3-1cee-4aec-92c7-c7f025453cc9"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552101220873,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "819cac2f-d149-498a-85be-da5639089b3a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552101220873,
    "parent_id": "5d7c03e8-234e-44ac-99c0-de7bac145d55",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Partial Application and Currying"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220863,
        "id": "ef5de04e-f57d-4a91-8e9c-620404684f72",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220863,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Technically, Ruby doesn’t have functions, but methods. However, a Ruby method behaves almost identically to functions in other language:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Technically, Ruby doesn’t have functions, but methods. However, a Ruby method behaves almost identically to functions in other language:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220865,
        "id": "230a0abf-a04d-4334-ad57-39ea45e8cda1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220865,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def double(n)\n  n * 2\nend"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def double(n)\n  n * 2\nend",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220866,
        "id": "b952f25a-a37f-42f0-b8a5-328af5890e79",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220866,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This normal method/function takes a parameter "
            ],
            [
              "n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", doubles it and returns the value. Now let’s define a higher order function (or method):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This normal method/function takes a parameter "
          },
          {
            "Text": "n",
            "AttrFlags": 2
          },
          {
            "Text": ", doubles it and returns the value. Now let’s define a higher order function (or method):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220866,
        "id": "c23a645a-283c-4f41-848c-9ffafce50ef2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220866,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def triple(n)\n  lambda {3 * n}\nend"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def triple(n)\n  lambda {3 * n}\nend",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220868,
        "id": "3e7b91ef-94a1-4a24-a4f6-21c2ec1253bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220868,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Instead of returning a number, "
            ],
            [
              "triple",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns a method. You can test it using the "
            ],
            [
              "Interactive Ruby Shell",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Interactive_Ruby_Shell"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Instead of returning a number, "
          },
          {
            "Text": "triple",
            "AttrFlags": 2
          },
          {
            "Text": " returns a method. You can test it using the "
          },
          {
            "Text": "Interactive Ruby Shell",
            "Link": "https://en.wikipedia.org/wiki/Interactive_Ruby_Shell"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220868,
        "id": "be6fcf5d-ad6f-4b58-8f3b-21d293988785",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220868,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$ irb --simple-prompt\n\u003e\u003e def double(n)\n\u003e\u003e   n * 2\n\u003e\u003e end\n=\u003e :double\n\u003e\u003e def triple(n)\n\u003e\u003e   lambda {3 * n}\n\u003e\u003e end\n=\u003e :triple\n\u003e\u003e double(2)\n=\u003e 4\n\u003e\u003e triple(2)\n=\u003e #\u003cProc:0x007fd07f07bdc0@(irb):7 (lambda)\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$ irb --simple-prompt\n\u003e\u003e def double(n)\n\u003e\u003e   n * 2\n\u003e\u003e end\n=\u003e :double\n\u003e\u003e def triple(n)\n\u003e\u003e   lambda {3 * n}\n\u003e\u003e end\n=\u003e :triple\n\u003e\u003e double(2)\n=\u003e 4\n\u003e\u003e triple(2)\n=\u003e #\u003cProc:0x007fd07f07bdc0@(irb):7 (lambda)\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220868,
        "id": "91f95ca1-b7b9-4756-9708-512339f2dc69",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220868,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you want to actually get the tripled number, you need to call (or “reduce”) the lambda:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you want to actually get the tripled number, you need to call (or “reduce”) the lambda:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220868,
        "id": "5ab97bf0-19fe-4bbd-9bce-233da8d69f7b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220868,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "triple_two = triple(2)\ntriple_two.call # =\u003e 6"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "triple_two = triple(2)\ntriple_two.call # =\u003e 6",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220868,
        "id": "0262d6c7-bd12-4ed3-b0fd-f65b89616567",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220868,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Or more concisely:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Or more concisely:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220868,
        "id": "4a852026-4dc1-42bb-8f10-990ffc3657bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220868,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "triple(2).call"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "triple(2).call",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220868,
        "id": "ee2ee5aa-dcc5-4e8b-95df-09936ec27b92",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220868,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Currying and Partial Applications"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Currying and Partial Applications"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220869,
        "id": "1c95acb5-a59d-4dcf-8543-40a06a962e73",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220869,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is not useful in terms of defining very basic functionality, but it is useful if you want to have methods/functions that are not instantly called or reduced. For example, let’s say you want to define methods that add a number by a specific number (for example "
            ],
            [
              "add_one(2) = 3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "). If you had to define a ton of these you could do:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is not useful in terms of defining very basic functionality, but it is useful if you want to have methods/functions that are not instantly called or reduced. For example, let’s say you want to define methods that add a number by a specific number (for example "
          },
          {
            "Text": "add_one(2) = 3",
            "AttrFlags": 2
          },
          {
            "Text": "). If you had to define a ton of these you could do:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220869,
        "id": "a28fb5db-3dad-46ce-a68f-70c0a7cdd9eb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220869,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def add_one(n)\n  n + 1\nend"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def add_one(n)\n  n + 1\nend",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220869,
        "id": "162718bd-c5b0-4c76-b087-47b741378aef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220869,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def add_two(n)\n  n + 2\nend"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def add_two(n)\n  n + 2\nend",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220869,
        "id": "831e03c5-a53c-48c9-adea-772218e027dd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220869,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, you could also do this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, you could also do this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220869,
        "id": "f9da6fa5-e6d2-4abf-b4ab-3f108d406e19",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220869,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "add = -\u003e (a, b) { a + b }\nadd_one = add.curry.(1)\nadd_two = add.curry.(2)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "add = -\u003e (a, b) { a + b }\nadd_one = add.curry.(1)\nadd_two = add.curry.(2)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220869,
        "id": "14965050-58d0-4525-8da4-fe5220192817",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220869,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using lambda calculus we can say that "
            ],
            [
              "add",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is "
            ],
            [
              "(λa.(λb.(a+b)))",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Currying is a way of "
            ],
            [
              "partially applying",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "add",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". So "
            ],
            [
              "add.curry.(1)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", is "
            ],
            [
              "(λa.(λb.(a+b)))(1)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which can be reduced to "
            ],
            [
              "(λb.(1+b))",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Partial application means that we passed one argument to "
            ],
            [
              "add",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " but left the other argument to be supplied later. The output is a specialized method."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using lambda calculus we can say that "
          },
          {
            "Text": "add",
            "AttrFlags": 2
          },
          {
            "Text": " is "
          },
          {
            "Text": "(λa.(λb.(a+b)))",
            "AttrFlags": 2
          },
          {
            "Text": ". Currying is a way of "
          },
          {
            "Text": "partially applying",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "add",
            "AttrFlags": 2
          },
          {
            "Text": ". So "
          },
          {
            "Text": "add.curry.(1)",
            "AttrFlags": 2
          },
          {
            "Text": ", is "
          },
          {
            "Text": "(λa.(λb.(a+b)))(1)",
            "AttrFlags": 2
          },
          {
            "Text": " which can be reduced to "
          },
          {
            "Text": "(λb.(1+b))",
            "AttrFlags": 2
          },
          {
            "Text": ". Partial application means that we passed one argument to "
          },
          {
            "Text": "add",
            "AttrFlags": 2
          },
          {
            "Text": " but left the other argument to be supplied later. The output is a specialized method."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220870,
        "id": "612786db-1dfa-4a2e-b57c-e7c732faf86c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220870,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "More useful examples of currying"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "More useful examples of currying"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220870,
        "id": "ac09c98a-776d-4f34-8565-5f63c0268c35",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220870,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s say we have really big general formula, that if we specify certain arguments to it, we can get specific formulae from it. Consider this formula:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s say we have really big general formula, that if we specify certain arguments to it, we can get specific formulae from it. Consider this formula:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220870,
        "id": "fe993edf-5298-44fc-8faf-51e33bc26111",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220870,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "f(x, y, z) = sin(x\\*y)*sin(y\\*z)*sin(z\\*x)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "f(x, y, z) = sin(x\\*y)*sin(y\\*z)*sin(z\\*x)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220871,
        "id": "2e215bb5-fb52-4cae-8275-d93be972f25f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220871,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This formula is made for working in three dimensions, but let’s say we only want this formula with regards to y and z. Let’s also say that to ignore x, we want to set it’s value to pi/2. Let’s first make the general formula:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This formula is made for working in three dimensions, but let’s say we only want this formula with regards to y and z. Let’s also say that to ignore x, we want to set it’s value to pi/2. Let’s first make the general formula:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220871,
        "id": "b583c9d5-dd4d-48ba-abe9-4e8b7c2f7f32",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220871,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "f = -\u003e(x, y, z) {Math.sin(x*y) * Math.sin(y*z) * Math.sin(z*x)}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "f = -\u003e(x, y, z) {Math.sin(x*y) * Math.sin(y*z) * Math.sin(z*x)}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220871,
        "id": "198debe5-38cc-4152-8418-db830299e7b0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220871,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now, let’s use currying to get our "
            ],
            [
              "yz",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " formula:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now, let’s use currying to get our "
          },
          {
            "Text": "yz",
            "AttrFlags": 2
          },
          {
            "Text": " formula:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220871,
        "id": "4988bb4b-b148-4732-b846-250ea3faf90b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220871,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "f_yz = f.curry.(Math::PI/2)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "f_yz = f.curry.(Math::PI/2)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220872,
        "id": "65e5109b-a88a-44e6-b47d-7e516c351119",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220872,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Then to call the lambda stored in "
            ],
            [
              "f_yz",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Then to call the lambda stored in "
          },
          {
            "Text": "f_yz",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220872,
        "id": "85fb623f-e80b-4e3e-857d-0b1e2a93fa82",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220872,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "f_xy.call(some_value_x, some_value_y)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "f_xy.call(some_value_x, some_value_y)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220872,
        "id": "2e81a36f-1c3d-4947-867d-788c820045e2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220872,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is pretty simple, but let’s say we want to get the formula for "
            ],
            [
              "xz",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". How can we set "
            ],
            [
              "y",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "Math::PI/2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if it’s not the last argument? Well, it’s a bit more complicated:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is pretty simple, but let’s say we want to get the formula for "
          },
          {
            "Text": "xz",
            "AttrFlags": 2
          },
          {
            "Text": ". How can we set "
          },
          {
            "Text": "y",
            "AttrFlags": 2
          },
          {
            "Text": " to "
          },
          {
            "Text": "Math::PI/2",
            "AttrFlags": 2
          },
          {
            "Text": " if it’s not the last argument? Well, it’s a bit more complicated:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220872,
        "id": "4c3d9a4e-19a9-45b5-9681-a79564c3d75f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220872,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "f_xz = -\u003e (x,z) {f.curry.(x, Math::PI/2, z)}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "f_xz = -\u003e (x,z) {f.curry.(x, Math::PI/2, z)}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220872,
        "id": "c25b4f4d-0ac9-4b21-bdd9-9c23ff3e69c0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220872,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this case, we need to provide placeholders for the parameter we aren’t pre-filling. For consistency we could write "
            ],
            [
              "f_xy",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this case, we need to provide placeholders for the parameter we aren’t pre-filling. For consistency we could write "
          },
          {
            "Text": "f_xy",
            "AttrFlags": 2
          },
          {
            "Text": " like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220872,
        "id": "93bb8547-269b-4be1-8789-2ed0ae87bffc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220872,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "f_xy = -\u003e (x,y) {f.curry.(x, y, Math::PI/2)}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "f_xy = -\u003e (x,y) {f.curry.(x, y, Math::PI/2)}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220872,
        "id": "f828a9fe-4e08-4db1-b943-fd1bf03f8a1e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220872,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here’s how the lambda calculus works for "
            ],
            [
              "f_yz",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here’s how the lambda calculus works for "
          },
          {
            "Text": "f_yz",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220873,
        "id": "dd203440-e85f-4125-8521-d401b2d65d0b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220873,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "f = (λx.(λy.(λz.(sin(x*y) * sin(y*z) * sin(z*x))))\nf_yz = (λx.(λy.(λz.(sin(x*y) * sin(y*z) * sin(z*x)))) (π/2) # Reduce =\u003e \nf_yz = (λy.(λz.(sin((π/2)*y) * sin(y*z) * sin(z*(π/2))))"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "f = (λx.(λy.(λz.(sin(x*y) * sin(y*z) * sin(z*x))))\nf_yz = (λx.(λy.(λz.(sin(x*y) * sin(y*z) * sin(z*x)))) (π/2) # Reduce =\u003e \nf_yz = (λy.(λz.(sin((π/2)*y) * sin(y*z) * sin(z*(π/2))))",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220873,
        "id": "7ca90b01-070e-4ccd-8ead-5bf7ced8f6f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220873,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now let’s look at "
            ],
            [
              "f_xz",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now let’s look at "
          },
          {
            "Text": "f_xz",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220873,
        "id": "e77864ed-63c5-453c-9918-66ce0de79fdc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220873,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "f = (λx.(λy.(λz.(sin(x*y) * sin(y*z) * sin(z*x))))\nf_xz = (λx.(λy.(λz.(sin(x*y) * sin(y*z) * sin(z*x)))) (λt.t) (π/2)  # Reduce =\u003e\nf_xz = (λt.(λz.(sin(t*(π/2)) * sin((π/2)*z) * sin(z*t))))"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "f = (λx.(λy.(λz.(sin(x*y) * sin(y*z) * sin(z*x))))\nf_xz = (λx.(λy.(λz.(sin(x*y) * sin(y*z) * sin(z*x)))) (λt.t) (π/2)  # Reduce =\u003e\nf_xz = (λt.(λz.(sin(t*(π/2)) * sin((π/2)*z) * sin(z*t))))",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101220873,
        "id": "2c6228f3-1cee-4aec-92c7-c7f025453cc9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101220873,
        "parent_id": "819cac2f-d149-498a-85be-da5639089b3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For more reading about lambda calculus try "
            ],
            [
              "this",
              [
                [
                  "a",
                  "http://www.inf.fu-berlin.de/lehre/WS03/alpi/lambda.pdf"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For more reading about lambda calculus try "
          },
          {
            "Text": "this",
            "Link": "http://www.inf.fu-berlin.de/lehre/WS03/alpi/lambda.pdf"
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Partial Application and Currying",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}