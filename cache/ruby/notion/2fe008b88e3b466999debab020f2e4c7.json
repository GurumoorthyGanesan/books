{
  "ID": "2fe008b8-8e3b-4669-99de-bab020f2e4c7",
  "Root": {
    "alive": true,
    "content": [
      "91981f0b-05b8-423c-b50c-3050d69507ea",
      "29939d8c-fa5e-4bcd-ada1-dde2f895d0d3",
      "bb48bb80-1342-406f-bc4c-0b0833332cc9",
      "cee625cd-426f-4fa6-b666-839ff0c8d564",
      "d3632aa8-00fc-4c22-8f57-e2dbb79bedb9",
      "d620ed4d-8d31-465f-b076-2303bdc2532b",
      "8c1dd502-0c4d-4454-92bf-bbca5a1e20ba",
      "1de1c675-9022-4505-9fe6-99ce79d4f268",
      "04ba6a7c-25a3-4fd8-91d9-ce76b4523fb6",
      "e09c59e7-a3ef-4423-bcce-7cb8fbf02a4b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552101350532,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "2fe008b8-8e3b-4669-99de-bab020f2e4c7",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552101350532,
    "parent_id": "c5283f07-4be2-4750-9418-3727592670e2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Observer"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101350528,
        "id": "91981f0b-05b8-423c-b50c-3050d69507ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101350528,
        "parent_id": "2fe008b8-8e3b-4669-99de-bab020f2e4c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The observer pattern is a software design pattern in which an object (called "
            ],
            [
              "subject",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") maintains a list of its dependents (called "
            ],
            [
              "observers",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "), and notifies them automatically of any state changes, usually by calling one of their methods."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The observer pattern is a software design pattern in which an object (called "
          },
          {
            "Text": "subject",
            "AttrFlags": 2
          },
          {
            "Text": ") maintains a list of its dependents (called "
          },
          {
            "Text": "observers",
            "AttrFlags": 2
          },
          {
            "Text": "), and notifies them automatically of any state changes, usually by calling one of their methods."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101350531,
        "id": "29939d8c-fa5e-4bcd-ada1-dde2f895d0d3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101350531,
        "parent_id": "2fe008b8-8e3b-4669-99de-bab020f2e4c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Ruby provides a simple mechanism to implement the Observer design pattern. The module "
            ],
            [
              "Observable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " provides the logic to notify the subscriber of any changes in the Observable object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Ruby provides a simple mechanism to implement the Observer design pattern. The module "
          },
          {
            "Text": "Observable",
            "AttrFlags": 2
          },
          {
            "Text": " provides the logic to notify the subscriber of any changes in the Observable object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101350531,
        "id": "bb48bb80-1342-406f-bc4c-0b0833332cc9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101350531,
        "parent_id": "2fe008b8-8e3b-4669-99de-bab020f2e4c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For this to work, the observable has to assert it has changed and notify the observers."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For this to work, the observable has to assert it has changed and notify the observers."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101350531,
        "id": "cee625cd-426f-4fa6-b666-839ff0c8d564",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101350531,
        "parent_id": "2fe008b8-8e3b-4669-99de-bab020f2e4c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Objects observing have to implement an "
            ],
            [
              "update()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method, which will be the callback for the Observer."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Objects observing have to implement an "
          },
          {
            "Text": "update()",
            "AttrFlags": 2
          },
          {
            "Text": " method, which will be the callback for the Observer."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101350531,
        "id": "d3632aa8-00fc-4c22-8f57-e2dbb79bedb9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101350531,
        "parent_id": "2fe008b8-8e3b-4669-99de-bab020f2e4c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s implement a small chat, where users can subscribe to users and when one of them write something, the subscribers get notified."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s implement a small chat, where users can subscribe to users and when one of them write something, the subscribers get notified."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101350532,
        "id": "d620ed4d-8d31-465f-b076-2303bdc2532b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101350532,
        "parent_id": "2fe008b8-8e3b-4669-99de-bab020f2e4c7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "require \"observer\"\n\nclass Moderator\n  include Observable\n\n  def initialize(name)\n    @name = name\n  end\n\n  def write\n    message = \"Computer says: No\"\n    changed\n    notify_observers(message)\n  end\nend\n\nclass Warner\n  def initialize(moderator, limit)\n    @limit = limit\n    moderator.add_observer(self)\n  end\nend\n\nclass Subscriber \u003c Warner\n  def update(message)\n    puts \"#{message}\"\n  end\nend\n\nmoderator = Moderator.new(\"Rupert\")\nSubscriber.new(moderator, 1)\nmoderator.write\nmoderator.write"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "require \"observer\"\n\nclass Moderator\n  include Observable\n\n  def initialize(name)\n    @name = name\n  end\n\n  def write\n    message = \"Computer says: No\"\n    changed\n    notify_observers(message)\n  end\nend\n\nclass Warner\n  def initialize(moderator, limit)\n    @limit = limit\n    moderator.add_observer(self)\n  end\nend\n\nclass Subscriber \u003c Warner\n  def update(message)\n    puts \"#{message}\"\n  end\nend\n\nmoderator = Moderator.new(\"Rupert\")\nSubscriber.new(moderator, 1)\nmoderator.write\nmoderator.write",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101350532,
        "id": "8c1dd502-0c4d-4454-92bf-bbca5a1e20ba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101350532,
        "parent_id": "2fe008b8-8e3b-4669-99de-bab020f2e4c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Producing the following output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Producing the following output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101350532,
        "id": "1de1c675-9022-4505-9fe6-99ce79d4f268",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101350532,
        "parent_id": "2fe008b8-8e3b-4669-99de-bab020f2e4c7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "# Computer says: No\n# Computer says: No"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "# Computer says: No\n# Computer says: No",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101350532,
        "id": "04ba6a7c-25a3-4fd8-91d9-ce76b4523fb6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101350532,
        "parent_id": "2fe008b8-8e3b-4669-99de-bab020f2e4c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We’ve triggered the method "
            ],
            [
              "write",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " at the Moderator class twice, notifying its subscribers, in this case just one."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We’ve triggered the method "
          },
          {
            "Text": "write",
            "AttrFlags": 2
          },
          {
            "Text": " at the Moderator class twice, notifying its subscribers, in this case just one."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101350532,
        "id": "e09c59e7-a3ef-4423-bcce-7cb8fbf02a4b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101350532,
        "parent_id": "2fe008b8-8e3b-4669-99de-bab020f2e4c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The more subscribers we add the more the changes will propagate."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The more subscribers we add the more the changes will propagate."
          }
        ]
      }
    ],
    "title": "Observer",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}