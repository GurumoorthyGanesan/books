{
  "ID": "b39dfde8-a185-4e90-9863-77b92800f7be",
  "Root": {
    "alive": true,
    "content": [
      "b42a6de9-d0e9-491f-a4d6-15091802216b",
      "d7b3f3cf-00ae-4e62-8f8c-e931e8ac5d03"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552101318979,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "b39dfde8-a185-4e90-9863-77b92800f7be",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552101318979,
    "parent_id": "d879941a-3f7c-4970-b09f-cbd77cb932d2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Implementation in a class"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101318976,
        "id": "b42a6de9-d0e9-491f-a4d6-15091802216b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101318976,
        "parent_id": "b39dfde8-a185-4e90-9863-77b92800f7be",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Enumerable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the most popular module in Ruby. Its purpose is to provide you with iterable methods like "
            ],
            [
              "map",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "select",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "reduce",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", etc. Classes that use "
            ],
            [
              "Enumerable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " include "
            ],
            [
              "Array",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Hash",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Range",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". To use it, you have to "
            ],
            [
              "include Enumerable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and implement "
            ],
            [
              "each",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Enumerable",
            "AttrFlags": 2
          },
          {
            "Text": " is the most popular module in Ruby. Its purpose is to provide you with iterable methods like "
          },
          {
            "Text": "map",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "select",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "reduce",
            "AttrFlags": 2
          },
          {
            "Text": ", etc. Classes that use "
          },
          {
            "Text": "Enumerable",
            "AttrFlags": 2
          },
          {
            "Text": " include "
          },
          {
            "Text": "Array",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Hash",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Range",
            "AttrFlags": 2
          },
          {
            "Text": ". To use it, you have to "
          },
          {
            "Text": "include Enumerable",
            "AttrFlags": 2
          },
          {
            "Text": " and implement "
          },
          {
            "Text": "each",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101318979,
        "id": "d7b3f3cf-00ae-4e62-8f8c-e931e8ac5d03",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101318979,
        "parent_id": "b39dfde8-a185-4e90-9863-77b92800f7be",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class NaturalNumbers\n  include Enumerable\n\n  def initialize(upper_limit)\n    @upper_limit = upper_limit\n  end\n\n  def each(\u0026block)\n    0.upto(@upper_limit).each(\u0026block)\n  end\nend\n\nn = NaturalNumbers.new(6)\n\nn.reduce(:+)                   # =\u003e 21\nn.select(\u0026:even?)              # =\u003e [0, 2, 4, 6]\nn.map { |number| number ** 2 } # =\u003e [0, 1, 4, 9, 16, 25, 36]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class NaturalNumbers\n  include Enumerable\n\n  def initialize(upper_limit)\n    @upper_limit = upper_limit\n  end\n\n  def each(\u0026block)\n    0.upto(@upper_limit).each(\u0026block)\n  end\nend\n\nn = NaturalNumbers.new(6)\n\nn.reduce(:+)                   # =\u003e 21\nn.select(\u0026:even?)              # =\u003e [0, 2, 4, 6]\nn.map { |number| number ** 2 } # =\u003e [0, 1, 4, 9, 16, 25, 36]",
        "code_language": "Plain Text"
      }
    ],
    "title": "Implementation in a class",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}