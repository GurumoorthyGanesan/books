{
  "ID": "b35579bd-f577-4439-95e5-e44cdedca440",
  "Root": {
    "alive": true,
    "content": [
      "ac70810f-a732-4044-8e1c-1fa21ab1b1b7",
      "7489a521-b69e-415c-a587-0b59039d700b",
      "3d0f2b62-335a-439c-9d51-800b0ce38f75",
      "f805fe48-9c90-41f0-a006-76eca06517df",
      "1e1a5ca8-9a93-4848-9c75-6660b91f516a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552101237884,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "b35579bd-f577-4439-95e5-e44cdedca440",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552101237884,
    "parent_id": "6d75b2af-48c2-4f57-a52d-16232196c696",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Refactoring existing classes to use Inheritance"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101237883,
        "id": "ac70810f-a732-4044-8e1c-1fa21ab1b1b7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101237883,
        "parent_id": "b35579bd-f577-4439-95e5-e44cdedca440",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s say we have two classes, "
            ],
            [
              "Cat",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Dog",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s say we have two classes, "
          },
          {
            "Text": "Cat",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Dog",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101237883,
        "id": "7489a521-b69e-415c-a587-0b59039d700b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101237883,
        "parent_id": "b35579bd-f577-4439-95e5-e44cdedca440",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Cat\n  def eat\n    die unless has_food?\n    self.food_amount -= 1\n    self.hungry = false\n  end\n  def sound\n    puts \"Meow\"\n  end\nend\n\nclass Dog\n  def eat\n    die unless has_food?\n    self.food_amount -= 1\n    self.hungry = false\n  end\n  def sound\n    puts \"Woof\"\n  end\nend"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Cat\n  def eat\n    die unless has_food?\n    self.food_amount -= 1\n    self.hungry = false\n  end\n  def sound\n    puts \"Meow\"\n  end\nend\n\nclass Dog\n  def eat\n    die unless has_food?\n    self.food_amount -= 1\n    self.hungry = false\n  end\n  def sound\n    puts \"Woof\"\n  end\nend",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101237884,
        "id": "3d0f2b62-335a-439c-9d51-800b0ce38f75",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101237884,
        "parent_id": "b35579bd-f577-4439-95e5-e44cdedca440",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "eat",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method is exactly the same in these two classes. While this works, it is hard to maintain. The problem will get worse if there are more animals with the same "
            ],
            [
              "eat",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method. Inheritance can solve this problem."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "eat",
            "AttrFlags": 2
          },
          {
            "Text": " method is exactly the same in these two classes. While this works, it is hard to maintain. The problem will get worse if there are more animals with the same "
          },
          {
            "Text": "eat",
            "AttrFlags": 2
          },
          {
            "Text": " method. Inheritance can solve this problem."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101237884,
        "id": "f805fe48-9c90-41f0-a006-76eca06517df",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101237884,
        "parent_id": "b35579bd-f577-4439-95e5-e44cdedca440",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Animal\n  def eat\n    die unless has_food?\n    self.food_amount -= 1\n    self.hungry = false\n  end\n  # No sound method\nend\n\nclass Cat \u003c Animal\n  def sound\n    puts \"Meow\"\n  end\nend\n\nclass Dog \u003c Animal\n  def sound\n    puts \"Woof\"\n  end\nend"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Animal\n  def eat\n    die unless has_food?\n    self.food_amount -= 1\n    self.hungry = false\n  end\n  # No sound method\nend\n\nclass Cat \u003c Animal\n  def sound\n    puts \"Meow\"\n  end\nend\n\nclass Dog \u003c Animal\n  def sound\n    puts \"Woof\"\n  end\nend",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101237884,
        "id": "1e1a5ca8-9a93-4848-9c75-6660b91f516a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101237884,
        "parent_id": "b35579bd-f577-4439-95e5-e44cdedca440",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We have created a new class, "
            ],
            [
              "Animal",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and moved our "
            ],
            [
              "eat",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method to that class. Then, we made "
            ],
            [
              "Cat",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Dog",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " inherit from this new common superclass. This removes the need for repeating code"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We have created a new class, "
          },
          {
            "Text": "Animal",
            "AttrFlags": 2
          },
          {
            "Text": ", and moved our "
          },
          {
            "Text": "eat",
            "AttrFlags": 2
          },
          {
            "Text": " method to that class. Then, we made "
          },
          {
            "Text": "Cat",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Dog",
            "AttrFlags": 2
          },
          {
            "Text": " inherit from this new common superclass. This removes the need for repeating code"
          }
        ]
      }
    ],
    "title": "Refactoring existing classes to use Inheritance",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}