{
  "ID": "e7281d3d-d313-487e-a366-38e4c4f03af8",
  "Root": {
    "alive": true,
    "content": [
      "757f88bf-979d-4f09-8802-4434f2ae397d",
      "50d3fa29-2c73-4472-ad41-04b6bf7debb6",
      "15908f3c-736a-4988-9e9f-cb8cf92cffb3",
      "ddf4ca2a-b6b2-491d-aeb8-a5d3304ffa3b",
      "655523f4-ce84-48ee-a551-99b8a2103ec8",
      "0ad9ed7e-5041-42f9-9e83-fa488e12bb3b",
      "6f5232de-08a5-4bf4-9a1a-8285808d123e",
      "70b7e097-f519-4477-aa52-d26527553cb9",
      "2c95ca8e-5595-48d4-b0bc-57efb00a601e",
      "d7443519-8df2-4127-9097-06d4e9487da1",
      "7b78cd1e-5067-4f5d-9f93-e78decf7a576"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552101190985,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e7281d3d-d313-487e-a366-38e4c4f03af8",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552101190985,
    "parent_id": "3efb1b78-3f39-4bb2-9cf8-9795f8fdeacb",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Inject reduce"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101190982,
        "id": "757f88bf-979d-4f09-8802-4434f2ae397d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101190982,
        "parent_id": "e7281d3d-d313-487e-a366-38e4c4f03af8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Inject and reduce are different names for the same thing. In other languages these functions are often called folds (like foldl or foldr). These methods are available on every Enumerable object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Inject and reduce are different names for the same thing. In other languages these functions are often called folds (like foldl or foldr). These methods are available on every Enumerable object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101190983,
        "id": "50d3fa29-2c73-4472-ad41-04b6bf7debb6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101190983,
        "parent_id": "e7281d3d-d313-487e-a366-38e4c4f03af8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Inject takes a two argument function and applies that to all of the pairs of elements in the Array."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Inject takes a two argument function and applies that to all of the pairs of elements in the Array."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101190983,
        "id": "15908f3c-736a-4988-9e9f-cb8cf92cffb3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101190983,
        "parent_id": "e7281d3d-d313-487e-a366-38e4c4f03af8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For the array "
            ],
            [
              "[1, 2, 3]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " we can add all of these together with the starting value of zero by specifying a starting value and block like so:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For the array "
          },
          {
            "Text": "[1, 2, 3]",
            "AttrFlags": 2
          },
          {
            "Text": " we can add all of these together with the starting value of zero by specifying a starting value and block like so:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101190983,
        "id": "ddf4ca2a-b6b2-491d-aeb8-a5d3304ffa3b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101190983,
        "parent_id": "e7281d3d-d313-487e-a366-38e4c4f03af8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "[1,2,3].reduce(0) {|a,b| a + b} # =\u003e 6"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "[1,2,3].reduce(0) {|a,b| a + b} # =\u003e 6",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101190984,
        "id": "655523f4-ce84-48ee-a551-99b8a2103ec8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101190984,
        "parent_id": "e7281d3d-d313-487e-a366-38e4c4f03af8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here we pass the function a starting value and a block that says to add all of the values together. The block is first run with "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " it then takes the result of that as the next "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " so we are then adding "
            ],
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to the second value "
            ],
            [
              "2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Then we take the result of that ("
            ],
            [
              "3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") and add that on to the final element in the list (also "
            ],
            [
              "3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") giving us our result ("
            ],
            [
              "6",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here we pass the function a starting value and a block that says to add all of the values together. The block is first run with "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": " as "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": " as "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": " it then takes the result of that as the next "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " so we are then adding "
          },
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": " to the second value "
          },
          {
            "Text": "2",
            "AttrFlags": 2
          },
          {
            "Text": ". Then we take the result of that ("
          },
          {
            "Text": "3",
            "AttrFlags": 2
          },
          {
            "Text": ") and add that on to the final element in the list (also "
          },
          {
            "Text": "3",
            "AttrFlags": 2
          },
          {
            "Text": ") giving us our result ("
          },
          {
            "Text": "6",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101190984,
        "id": "0ad9ed7e-5041-42f9-9e83-fa488e12bb3b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101190984,
        "parent_id": "e7281d3d-d313-487e-a366-38e4c4f03af8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If we omit the first argument, it will set "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to being the first element in the list, so the example above is the same as:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If we omit the first argument, it will set "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " to being the first element in the list, so the example above is the same as:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101190984,
        "id": "6f5232de-08a5-4bf4-9a1a-8285808d123e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101190984,
        "parent_id": "e7281d3d-d313-487e-a366-38e4c4f03af8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "[1,2,3].reduce {|a,b| a + b} # =\u003e 6"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "[1,2,3].reduce {|a,b| a + b} # =\u003e 6",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101190984,
        "id": "70b7e097-f519-4477-aa52-d26527553cb9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101190984,
        "parent_id": "e7281d3d-d313-487e-a366-38e4c4f03af8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In addition, instead of passing a block with a function, we can pass a named function as a symbol, either with a starting value, or without. With this, the above example could be written as:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In addition, instead of passing a block with a function, we can pass a named function as a symbol, either with a starting value, or without. With this, the above example could be written as:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101190984,
        "id": "2c95ca8e-5595-48d4-b0bc-57efb00a601e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101190984,
        "parent_id": "e7281d3d-d313-487e-a366-38e4c4f03af8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "[1,2,3].reduce(0, :+) # =\u003e 6"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "[1,2,3].reduce(0, :+) # =\u003e 6",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101190984,
        "id": "d7443519-8df2-4127-9097-06d4e9487da1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101190984,
        "parent_id": "e7281d3d-d313-487e-a366-38e4c4f03af8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "or omitting the starting value:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "or omitting the starting value:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101190984,
        "id": "7b78cd1e-5067-4f5d-9f93-e78decf7a576",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101190984,
        "parent_id": "e7281d3d-d313-487e-a366-38e4c4f03af8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "[1,2,3].reduce(:+) # =\u003e 6"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "[1,2,3].reduce(:+) # =\u003e 6",
        "code_language": "Plain Text"
      }
    ],
    "title": "Inject reduce",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}