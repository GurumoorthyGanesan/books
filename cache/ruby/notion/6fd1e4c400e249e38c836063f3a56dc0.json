{
  "ID": "6fd1e4c4-00e2-49e3-8c83-6063f3a56dc0",
  "Root": {
    "alive": true,
    "content": [
      "4308a6b3-6335-4e99-bfa0-15aa6939a584",
      "16117a1b-1320-4995-8d54-63c9687e47e3",
      "ac2b7c59-af1f-441c-85cf-e05406e7d426",
      "409edf80-8a94-4cca-baae-319c2ac60d56",
      "ce092cc0-5809-4b0e-adbe-419dd894f3bd"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552102246430,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "6fd1e4c4-00e2-49e3-8c83-6063f3a56dc0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552102246430,
    "parent_id": "fd9f55c7-eaa9-432f-b822-84aafb3636ed",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Monkey Patching in Ruby"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102246422,
        "id": "4308a6b3-6335-4e99-bfa0-15aa6939a584",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102246422,
        "parent_id": "6fd1e4c4-00e2-49e3-8c83-6063f3a56dc0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102246429,
        "id": "16117a1b-1320-4995-8d54-63c9687e47e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102246429,
        "parent_id": "6fd1e4c4-00e2-49e3-8c83-6063f3a56dc0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Monkey patching, while convenient, has some pitfalls that aren’t immediately obvious. Most notably, a patch like that in the example pollutes the global scope. If two modules both add "
            ],
            [
              "Hash#symbolize",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", only the last module required actually applies its change; the rest are erased."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Monkey patching, while convenient, has some pitfalls that aren’t immediately obvious. Most notably, a patch like that in the example pollutes the global scope. If two modules both add "
          },
          {
            "Text": "Hash#symbolize",
            "AttrFlags": 2
          },
          {
            "Text": ", only the last module required actually applies its change; the rest are erased."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102246430,
        "id": "ac2b7c59-af1f-441c-85cf-e05406e7d426",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102246430,
        "parent_id": "6fd1e4c4-00e2-49e3-8c83-6063f3a56dc0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Furthermore, if there’s an error in a patched method, the stacktrace simply points to the patched class. This implies that there’s a bug in the "
            ],
            [
              "Hash",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class itself (which there is now)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Furthermore, if there’s an error in a patched method, the stacktrace simply points to the patched class. This implies that there’s a bug in the "
          },
          {
            "Text": "Hash",
            "AttrFlags": 2
          },
          {
            "Text": " class itself (which there is now)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102246430,
        "id": "409edf80-8a94-4cca-baae-319c2ac60d56",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102246430,
        "parent_id": "6fd1e4c4-00e2-49e3-8c83-6063f3a56dc0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Lastly, because Ruby is very flexible with what containers to hold, a method that seems very straightforward when you write it has lots of undefined functionality. For instance, creating "
            ],
            [
              "Array#sum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is good for an array of numbers, but breaks when given an array of a custom class."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Lastly, because Ruby is very flexible with what containers to hold, a method that seems very straightforward when you write it has lots of undefined functionality. For instance, creating "
          },
          {
            "Text": "Array#sum",
            "AttrFlags": 2
          },
          {
            "Text": " is good for an array of numbers, but breaks when given an array of a custom class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102246430,
        "id": "ce092cc0-5809-4b0e-adbe-419dd894f3bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102246430,
        "parent_id": "6fd1e4c4-00e2-49e3-8c83-6063f3a56dc0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A safer alternative is refinements, available in Ruby \u003e= 2.0."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A safer alternative is refinements, available in Ruby \u003e= 2.0."
          }
        ]
      }
    ],
    "title": "Monkey Patching in Ruby",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}