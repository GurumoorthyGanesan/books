{
  "ID": "e5bc87f2-b430-4381-9503-980586e05500",
  "Root": {
    "alive": true,
    "content": [
      "51527dd8-dcea-47fb-bb87-fc6386735187",
      "d2f66208-2a6e-440b-9c0f-4d71ee11cbb4",
      "cf15bea9-ab05-4b51-ab9e-b464fa52ce35",
      "f5a4fe0c-e9a1-4908-9c05-c4b4c2d016ef",
      "28c6b264-c7fb-481e-845f-2b7bba8bc3d6",
      "08a1e73a-4c19-4778-b331-def527487310",
      "82fb5576-9257-4207-9be7-b6312f3eb672",
      "f68e7dbe-d9a4-4a16-bc2c-72d9e66112ac",
      "392832ca-8b8d-453c-84d7-e9455e925d6c",
      "063e5b78-ead1-4b40-8bc4-8f853977d250",
      "691a7233-4c7d-4e05-b091-c2faaf52fab2",
      "ffc4215f-5bdf-4c1b-bf05-76be03da92f6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552101349391,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e5bc87f2-b430-4381-9503-980586e05500",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552101349391,
    "parent_id": "c5283f07-4be2-4750-9418-3727592670e2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Decorator Pattern"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101349387,
        "id": "51527dd8-dcea-47fb-bb87-fc6386735187",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101349387,
        "parent_id": "e5bc87f2-b430-4381-9503-980586e05500",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Decorator pattern adds behavior to objects without affecting other objects of the same class. The decorator pattern is a useful alternative to creating sub-classes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Decorator pattern adds behavior to objects without affecting other objects of the same class. The decorator pattern is a useful alternative to creating sub-classes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101349389,
        "id": "d2f66208-2a6e-440b-9c0f-4d71ee11cbb4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101349389,
        "parent_id": "e5bc87f2-b430-4381-9503-980586e05500",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Create a module for each decorator. This approach is more flexible than inheritance because you can mix and match responsibilities in more combinations. Additionally, because the transparency allows decorators to be nested recursively, it allows for an unlimited number of responsibilities."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Create a module for each decorator. This approach is more flexible than inheritance because you can mix and match responsibilities in more combinations. Additionally, because the transparency allows decorators to be nested recursively, it allows for an unlimited number of responsibilities."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101349390,
        "id": "cf15bea9-ab05-4b51-ab9e-b464fa52ce35",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101349390,
        "parent_id": "e5bc87f2-b430-4381-9503-980586e05500",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Assume the Pizza class has a cost method that returns 300:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Assume the Pizza class has a cost method that returns 300:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101349390,
        "id": "f5a4fe0c-e9a1-4908-9c05-c4b4c2d016ef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101349390,
        "parent_id": "e5bc87f2-b430-4381-9503-980586e05500",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Pizza\n  def cost\n    300\n  end\nend"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Pizza\n  def cost\n    300\n  end\nend",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101349390,
        "id": "28c6b264-c7fb-481e-845f-2b7bba8bc3d6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101349390,
        "parent_id": "e5bc87f2-b430-4381-9503-980586e05500",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Represent pizza with an added layer of cheese burst and the cost goes up by 50. The simplest approach is to create a "
            ],
            [
              "PizzaWithCheese",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " subclass that returns 350 in the cost method."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Represent pizza with an added layer of cheese burst and the cost goes up by 50. The simplest approach is to create a "
          },
          {
            "Text": "PizzaWithCheese",
            "AttrFlags": 2
          },
          {
            "Text": " subclass that returns 350 in the cost method."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101349390,
        "id": "08a1e73a-4c19-4778-b331-def527487310",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101349390,
        "parent_id": "e5bc87f2-b430-4381-9503-980586e05500",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class PizzaWithCheese \u003c Pizza\n  def cost\n    350\n  end\nend"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class PizzaWithCheese \u003c Pizza\n  def cost\n    350\n  end\nend",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101349390,
        "id": "82fb5576-9257-4207-9be7-b6312f3eb672",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101349390,
        "parent_id": "e5bc87f2-b430-4381-9503-980586e05500",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Next, we need to represent a large pizza that adds 100 to the cost of a normal pizza. We can represent this using a LargePizza subclass of Pizza."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Next, we need to represent a large pizza that adds 100 to the cost of a normal pizza. We can represent this using a LargePizza subclass of Pizza."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101349390,
        "id": "f68e7dbe-d9a4-4a16-bc2c-72d9e66112ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101349390,
        "parent_id": "e5bc87f2-b430-4381-9503-980586e05500",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class LargePizza \u003c Pizza\n  def cost\n    400\n  end\nend"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class LargePizza \u003c Pizza\n  def cost\n    400\n  end\nend",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101349390,
        "id": "392832ca-8b8d-453c-84d7-e9455e925d6c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101349390,
        "parent_id": "e5bc87f2-b430-4381-9503-980586e05500",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We could also have an ExtraLargePizza which adds a further cost of 15 to our LargePizza. If we were to consider that these pizza types could be served with cheese, we would need to add LargePizzaWithChese and ExtraLargePizzaWithCheese subclasses.we end up with a total of 6 classes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We could also have an ExtraLargePizza which adds a further cost of 15 to our LargePizza. If we were to consider that these pizza types could be served with cheese, we would need to add LargePizzaWithChese and ExtraLargePizzaWithCheese subclasses.we end up with a total of 6 classes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101349391,
        "id": "063e5b78-ead1-4b40-8bc4-8f853977d250",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101349391,
        "parent_id": "e5bc87f2-b430-4381-9503-980586e05500",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To simplify the approach, use modules to dynamically add behavior to Pizza class:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To simplify the approach, use modules to dynamically add behavior to Pizza class:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101349391,
        "id": "691a7233-4c7d-4e05-b091-c2faaf52fab2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101349391,
        "parent_id": "e5bc87f2-b430-4381-9503-980586e05500",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Module + extend + super decorator:-\u003e"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Module + extend + super decorator:-\u003e"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101349391,
        "id": "ffc4215f-5bdf-4c1b-bf05-76be03da92f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101349391,
        "parent_id": "e5bc87f2-b430-4381-9503-980586e05500",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Pizza\n  def cost\n    300\n  end\nend\n\nmodule CheesePizza\n  def cost\n    super + 50\n  end\nend\n\nmodule LargePizza\n  def cost\n    super + 100\n  end\nend\n\npizza = Pizza.new         #=\u003e cost = 300\npizza.extend(CheesePizza) #=\u003e cost = 350\npizza.extend(LargePizza)  #=\u003e cost = 450\npizza.cost                #=\u003e cost = 450"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Pizza\n  def cost\n    300\n  end\nend\n\nmodule CheesePizza\n  def cost\n    super + 50\n  end\nend\n\nmodule LargePizza\n  def cost\n    super + 100\n  end\nend\n\npizza = Pizza.new         #=\u003e cost = 300\npizza.extend(CheesePizza) #=\u003e cost = 350\npizza.extend(LargePizza)  #=\u003e cost = 450\npizza.cost                #=\u003e cost = 450",
        "code_language": "Plain Text"
      }
    ],
    "title": "Decorator Pattern",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}