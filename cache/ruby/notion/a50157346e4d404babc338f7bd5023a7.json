{
  "ID": "a5015734-6e4d-404b-abc3-38f7bd5023a7",
  "Root": {
    "alive": true,
    "content": [
      "ad1695dd-2062-4ccf-86a4-b043c0f8b4a9",
      "e65a90a4-cd10-4f8a-92e5-971a7bf57701",
      "5458edea-17d5-4152-a766-e465ed3e3362",
      "d2dc9698-7c5a-4b86-990c-70ea093efd93",
      "55e954d7-3c94-4edc-bf4d-76aa563ae350",
      "f67c5fa4-7caa-4f84-9c6d-3ff66286e527",
      "dca156f2-9bdc-43ea-8c38-42006f30fc22",
      "51275370-f003-4ed2-a88e-66a3c8204fa1"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552102765750,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "a5015734-6e4d-404b-abc3-38f7bd5023a7",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552102765750,
    "parent_id": "af1e59e1-5fbe-4c1a-a9bc-d8692da82213",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Instance Variables and Class Variables"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102765746,
        "id": "ad1695dd-2062-4ccf-86a4-b043c0f8b4a9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102765746,
        "parent_id": "a5015734-6e4d-404b-abc3-38f7bd5023a7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s first brush up with what are the "
            ],
            [
              "Instance Variables:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " They behave more like properties for an object. They are initialized on an object creation. Instance variables are accessible through instance methods. Per Object has per instance variables. Instance Variables are not shared between objects."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s first brush up with what are the "
          },
          {
            "Text": "Instance Variables:",
            "AttrFlags": 1
          },
          {
            "Text": " They behave more like properties for an object. They are initialized on an object creation. Instance variables are accessible through instance methods. Per Object has per instance variables. Instance Variables are not shared between objects."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102765749,
        "id": "e65a90a4-cd10-4f8a-92e5-971a7bf57701",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102765749,
        "parent_id": "a5015734-6e4d-404b-abc3-38f7bd5023a7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sequence class has @from, @to and @by as the instance variables."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sequence class has @from, @to and @by as the instance variables."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102765749,
        "id": "5458edea-17d5-4152-a766-e465ed3e3362",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102765749,
        "parent_id": "a5015734-6e4d-404b-abc3-38f7bd5023a7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Sequence\n    include Enumerable\n\n    def initialize(from, to, by)\n        @from = from\n        @to = to\n        @by = by\n    end\n\n    def each\n        x = @from\n        while x \u003c @to\n            yield x\n            x = x + @by\n        end\n    end\n\n    def *(factor)\n        Sequence.new(@from*factor, @to*factor, @by*factor)\n    end\n\n    def +(offset)\n        Sequence.new(@from+offset, @to+offset, @by+offset)\n    end\nend\n\nobject = Sequence.new(1,10,2)\nobject.each do |x|\n    puts x\nend\n\nOutput:\n1\n3\n5\n7\n9\n\nobject1 = Sequence.new(1,10,3)\nobject1.each do |x|\n    puts x\nend\n\nOutput:\n1\n4\n7"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Sequence\n    include Enumerable\n\n    def initialize(from, to, by)\n        @from = from\n        @to = to\n        @by = by\n    end\n\n    def each\n        x = @from\n        while x \u003c @to\n            yield x\n            x = x + @by\n        end\n    end\n\n    def *(factor)\n        Sequence.new(@from*factor, @to*factor, @by*factor)\n    end\n\n    def +(offset)\n        Sequence.new(@from+offset, @to+offset, @by+offset)\n    end\nend\n\nobject = Sequence.new(1,10,2)\nobject.each do |x|\n    puts x\nend\n\nOutput:\n1\n3\n5\n7\n9\n\nobject1 = Sequence.new(1,10,3)\nobject1.each do |x|\n    puts x\nend\n\nOutput:\n1\n4\n7",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102765749,
        "id": "d2dc9698-7c5a-4b86-990c-70ea093efd93",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102765749,
        "parent_id": "a5015734-6e4d-404b-abc3-38f7bd5023a7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Class Variables",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Treat class variable same as static variables of java, which are shared among the various objects of that class. Class Variables are stored in heap memory."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Class Variables",
            "AttrFlags": 1
          },
          {
            "Text": " Treat class variable same as static variables of java, which are shared among the various objects of that class. Class Variables are stored in heap memory."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102765749,
        "id": "55e954d7-3c94-4edc-bf4d-76aa563ae350",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102765749,
        "parent_id": "a5015734-6e4d-404b-abc3-38f7bd5023a7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Sequence\n    include Enumerable\n    @@count = 0\n    def initialize(from, to, by)\n        @from = from\n        @to = to\n        @by = by\n        @@count = @@count + 1\n    end\n\n    def each\n        x = @from\n        while x \u003c @to\n            yield x\n            x = x + @by\n        end\n    end\n\n    def *(factor)\n        Sequence.new(@from*factor, @to*factor, @by*factor)\n    end\n\n    def +(offset)\n        Sequence.new(@from+offset, @to+offset, @by+offset)\n    end\n\n    def getCount\n        @@count\n    end\nend\n\nobject = Sequence.new(1,10,2)\nobject.each do |x|\n    puts x\nend\n\nOutput:\n1\n3\n5\n7\n9\n\nobject1 = Sequence.new(1,10,3)\nobject1.each do |x|\n    puts x\nend\n\nOutput:\n1\n4\n7\n\nputs object1.getCount\nOutput: 2"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Sequence\n    include Enumerable\n    @@count = 0\n    def initialize(from, to, by)\n        @from = from\n        @to = to\n        @by = by\n        @@count = @@count + 1\n    end\n\n    def each\n        x = @from\n        while x \u003c @to\n            yield x\n            x = x + @by\n        end\n    end\n\n    def *(factor)\n        Sequence.new(@from*factor, @to*factor, @by*factor)\n    end\n\n    def +(offset)\n        Sequence.new(@from+offset, @to+offset, @by+offset)\n    end\n\n    def getCount\n        @@count\n    end\nend\n\nobject = Sequence.new(1,10,2)\nobject.each do |x|\n    puts x\nend\n\nOutput:\n1\n3\n5\n7\n9\n\nobject1 = Sequence.new(1,10,3)\nobject1.each do |x|\n    puts x\nend\n\nOutput:\n1\n4\n7\n\nputs object1.getCount\nOutput: 2",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102765749,
        "id": "f67c5fa4-7caa-4f84-9c6d-3ff66286e527",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102765749,
        "parent_id": "a5015734-6e4d-404b-abc3-38f7bd5023a7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Shared among object and object1."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Shared among object and object1."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102765750,
        "id": "dca156f2-9bdc-43ea-8c38-42006f30fc22",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102765750,
        "parent_id": "a5015734-6e4d-404b-abc3-38f7bd5023a7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Comparing the instance and class variables of Ruby against Java:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Comparing the instance and class variables of Ruby against Java:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102765750,
        "id": "51275370-f003-4ed2-a88e-66a3c8204fa1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102765750,
        "parent_id": "a5015734-6e4d-404b-abc3-38f7bd5023a7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Class Sequence{\n    int from, to, by;\n    Sequence(from, to, by){// constructor method of Java is equivalent to initialize method of ruby\n        this.from = from;// this.from of java is equivalent to @from indicating currentObject.from\n        this.to = to;\n        this.by = by;\n    }\n    public void each(){\n        int x = this.from;//objects attributes are accessible in the context of the object.\n        while x \u003e this.to\n            x = x + this.by\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Class Sequence{\n    int from, to, by;\n    Sequence(from, to, by){// constructor method of Java is equivalent to initialize method of ruby\n        this.from = from;// this.from of java is equivalent to @from indicating currentObject.from\n        this.to = to;\n        this.by = by;\n    }\n    public void each(){\n        int x = this.from;//objects attributes are accessible in the context of the object.\n        while x \u003e this.to\n            x = x + this.by\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Instance Variables and Class Variables",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}