{
  "ID": "79118b73-abad-44fe-a724-6ea1c03cbc3c",
  "Root": {
    "alive": true,
    "content": [
      "d264d8a4-079f-4fd8-a157-29ff4585d5fa",
      "73e3c9a5-411a-4740-8c0d-3bef9c8e0abe",
      "6cb38803-7615-46fd-9be6-c6b01e538062",
      "038ba025-d324-4f96-8baf-8220611b9057",
      "d83fbfbe-bc2f-4f60-bf3c-daeacb44c76a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552102148864,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "79118b73-abad-44fe-a724-6ea1c03cbc3c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552102148864,
    "parent_id": "cb0e2d47-43c5-4809-b173-e764dfc894dc",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "send method"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102148861,
        "id": "d264d8a4-079f-4fd8-a157-29ff4585d5fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102148861,
        "parent_id": "79118b73-abad-44fe-a724-6ea1c03cbc3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "send()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is used to pass message to "
            ],
            [
              "object",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "send()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is an instance method of the "
            ],
            [
              "Object",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class. The first argument in "
            ],
            [
              "send()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the message that you’re sending to the object - that is, the name of a method. It could be "
            ],
            [
              "string",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "symbol",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " but "
            ],
            [
              "symbols",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " are preferred. Then arguments those need to pass in method, those will be the remaining arguments in "
            ],
            [
              "send()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "send()",
            "AttrFlags": 2
          },
          {
            "Text": " is used to pass message to "
          },
          {
            "Text": "object",
            "AttrFlags": 2
          },
          {
            "Text": ". "
          },
          {
            "Text": "send()",
            "AttrFlags": 2
          },
          {
            "Text": " is an instance method of the "
          },
          {
            "Text": "Object",
            "AttrFlags": 2
          },
          {
            "Text": " class. The first argument in "
          },
          {
            "Text": "send()",
            "AttrFlags": 2
          },
          {
            "Text": " is the message that you’re sending to the object - that is, the name of a method. It could be "
          },
          {
            "Text": "string",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "symbol",
            "AttrFlags": 2
          },
          {
            "Text": " but "
          },
          {
            "Text": "symbols",
            "AttrFlags": 1
          },
          {
            "Text": " are preferred. Then arguments those need to pass in method, those will be the remaining arguments in "
          },
          {
            "Text": "send()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102148863,
        "id": "73e3c9a5-411a-4740-8c0d-3bef9c8e0abe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102148863,
        "parent_id": "79118b73-abad-44fe-a724-6ea1c03cbc3c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Hello\n  def hello(*args)\n    puts 'Hello ' + args.join(' ')\n  end\nend\nh = Hello.new\nh.send :hello, 'gentle', 'readers'   #=\u003e \"Hello gentle readers\"\n# h.send(:hello, 'gentle', 'readers') #=\u003e Here :hello is method and rest are the arguments to method."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Hello\n  def hello(*args)\n    puts 'Hello ' + args.join(' ')\n  end\nend\nh = Hello.new\nh.send :hello, 'gentle', 'readers'   #=\u003e \"Hello gentle readers\"\n# h.send(:hello, 'gentle', 'readers') #=\u003e Here :hello is method and rest are the arguments to method.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102148864,
        "id": "6cb38803-7615-46fd-9be6-c6b01e538062",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102148864,
        "parent_id": "79118b73-abad-44fe-a724-6ea1c03cbc3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here is the more descriptive example"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here is the more descriptive example"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102148864,
        "id": "038ba025-d324-4f96-8baf-8220611b9057",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102148864,
        "parent_id": "79118b73-abad-44fe-a724-6ea1c03cbc3c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Account\n  attr_accessor :name, :email, :notes, :address\n\n  def assign_values(values)\n    values.each_key do |k, v|\n      # How send method would look a like\n      # self.name = value[k]\n      self.send(\"#{k}=\", values[k])\n    end\n  end\nend\n\nuser_info = {\n  name: 'Matt',\n  email: 'test@gms.com',\n  address: '132 random st.',\n  notes: \"annoying customer\"\n}\n\naccount = Account.new\nIf attributes gets increase then we would messup the code\n#--------- Bad way --------------\naccount.name = user_info[:name]\naccount.address = user_info[:address]\naccount.email = user_info[:email]\naccount.notes = user_info[:notes]\n\n# --------- Meta Programing way --------------\naccount.assign_values(user_info) # With single line we can assign n number of attributes\n\nputs account.inspect"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Account\n  attr_accessor :name, :email, :notes, :address\n\n  def assign_values(values)\n    values.each_key do |k, v|\n      # How send method would look a like\n      # self.name = value[k]\n      self.send(\"#{k}=\", values[k])\n    end\n  end\nend\n\nuser_info = {\n  name: 'Matt',\n  email: 'test@gms.com',\n  address: '132 random st.',\n  notes: \"annoying customer\"\n}\n\naccount = Account.new\nIf attributes gets increase then we would messup the code\n#--------- Bad way --------------\naccount.name = user_info[:name]\naccount.address = user_info[:address]\naccount.email = user_info[:email]\naccount.notes = user_info[:notes]\n\n# --------- Meta Programing way --------------\naccount.assign_values(user_info) # With single line we can assign n number of attributes\n\nputs account.inspect",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102148864,
        "id": "d83fbfbe-bc2f-4f60-bf3c-daeacb44c76a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102148864,
        "parent_id": "79118b73-abad-44fe-a724-6ea1c03cbc3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: "
            ],
            [
              "send()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " itself is not recommended anymore. Use "
            ],
            [
              "__send__()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which has the power to call private methods, or (recommended) "
            ],
            [
              "public_send()",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: "
          },
          {
            "Text": "send()",
            "AttrFlags": 2
          },
          {
            "Text": " itself is not recommended anymore. Use "
          },
          {
            "Text": "__send__()",
            "AttrFlags": 2
          },
          {
            "Text": " which has the power to call private methods, or (recommended) "
          },
          {
            "Text": "public_send()",
            "AttrFlags": 2
          }
        ]
      }
    ],
    "title": "send method",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}