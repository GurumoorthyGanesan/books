{
  "ID": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
  "Root": {
    "alive": true,
    "content": [
      "65853694-6e61-41f4-a665-e88e1dcb4549",
      "a0af5e85-bb14-495c-88d3-ea8a1afccb9f",
      "925b5ac9-be2f-4606-9812-75be99f87b53",
      "7c513a08-2f3f-4539-ab51-477de83a1342",
      "78afc069-90b6-47b7-b871-68792f470d5a",
      "1403769f-b571-43da-968a-a618d7db4b17",
      "21c707eb-dd09-4a65-8a3c-54c25cbf4525",
      "262fb56a-7d39-49fd-afb0-277e30b879d0",
      "bbeb9a13-3bef-4ef3-9aa7-9a74f8db582b",
      "a0a39362-0c63-4044-ae1f-fb39fade3152",
      "5e560b6e-c899-4a5d-b92a-e82e5ce3d74d",
      "58977322-d58b-4241-afc5-0561e45f1e94",
      "abdf6677-6648-436b-aa7a-fd39f1060e8a",
      "bf4e70ec-494c-418a-8703-cc36622f7152",
      "a33f24fa-241e-46ef-9f54-68e6d25f80f9",
      "b6a79d07-cccc-4bd9-a9fd-bbcb807fb136",
      "21407b47-41c7-4bad-8343-1623fc4c2b82",
      "a7cf32d2-9317-40df-8990-a58b15023cab",
      "7d63ff85-41e2-4e98-8b84-eeb60ec84a00",
      "ddb8ab23-41a4-4393-8f82-0a334fbe7aae",
      "295d24de-49e0-40ee-8643-381aa774f9bc",
      "2b5d9780-cf18-4ff3-befd-eaeed30d9e2f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552101188017,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552101188017,
    "parent_id": "3efb1b78-3f39-4bb2-9cf8-9795f8fdeacb",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Decomposition"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188011,
        "id": "65853694-6e61-41f4-a665-e88e1dcb4549",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188011,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Any array can be quickly "
            ],
            [
              "decomposed",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " by assigning its elements into multiple variables. A simple example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Any array can be quickly "
          },
          {
            "Text": "decomposed",
            "AttrFlags": 1
          },
          {
            "Text": " by assigning its elements into multiple variables. A simple example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188013,
        "id": "a0af5e85-bb14-495c-88d3-ea8a1afccb9f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188013,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "arr = [1, 2, 3]\n# ---\na = arr[0]\nb = arr[1]\nc = arr[2]\n# --- or, the same\na, b, c = arr"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "arr = [1, 2, 3]\n# ---\na = arr[0]\nb = arr[1]\nc = arr[2]\n# --- or, the same\na, b, c = arr",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188014,
        "id": "925b5ac9-be2f-4606-9812-75be99f87b53",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188014,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Preceding a variable with the "
            ],
            [
              "splat",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " operator ("
            ],
            [
              "\\*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") puts into it an array of all the elements that haven’t been captured by other variables. If none are left, empty array is assigned. Only one splat can be used in a single assignment:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Preceding a variable with the "
          },
          {
            "Text": "splat",
            "AttrFlags": 4
          },
          {
            "Text": " operator ("
          },
          {
            "Text": "\\*",
            "AttrFlags": 2
          },
          {
            "Text": ") puts into it an array of all the elements that haven’t been captured by other variables. If none are left, empty array is assigned. Only one splat can be used in a single assignment:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188014,
        "id": "7c513a08-2f3f-4539-ab51-477de83a1342",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188014,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "a, *b = arr       # a = 1; b = [2, 3]\na, *b, c = arr    # a = 1; b = [2]; c = 3\na, b, c, *d = arr # a = 1; b = 2; c = 3; d = []\na, *b, *c = arr   # SyntaxError: unexpected *"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "a, *b = arr       # a = 1; b = [2, 3]\na, *b, c = arr    # a = 1; b = [2]; c = 3\na, b, c, *d = arr # a = 1; b = 2; c = 3; d = []\na, *b, *c = arr   # SyntaxError: unexpected *",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188014,
        "id": "78afc069-90b6-47b7-b871-68792f470d5a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188014,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Decomposition is "
            ],
            [
              "safe",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " and never raises errors. "
            ],
            [
              "nil",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s are assigned where there’s not enough elements, matching the behavior of "
            ],
            [
              "[]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator when accessing an index out of bounds:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Decomposition is "
          },
          {
            "Text": "safe",
            "AttrFlags": 4
          },
          {
            "Text": " and never raises errors. "
          },
          {
            "Text": "nil",
            "AttrFlags": 2
          },
          {
            "Text": "s are assigned where there’s not enough elements, matching the behavior of "
          },
          {
            "Text": "[]",
            "AttrFlags": 2
          },
          {
            "Text": " operator when accessing an index out of bounds:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188014,
        "id": "1403769f-b571-43da-968a-a618d7db4b17",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188014,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "arr[9000] # =\u003e nil\na, b, c, d = arr # a = 1; b = 2; c = 3; d = nil"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "arr[9000] # =\u003e nil\na, b, c, d = arr # a = 1; b = 2; c = 3; d = nil",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188014,
        "id": "21c707eb-dd09-4a65-8a3c-54c25cbf4525",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188014,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Decomposition tries to call "
            ],
            [
              "to_ary",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " implicitly on the object being assigned. By implementing this method in your type you get the ability to decompose it:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Decomposition tries to call "
          },
          {
            "Text": "to_ary",
            "AttrFlags": 2
          },
          {
            "Text": " implicitly on the object being assigned. By implementing this method in your type you get the ability to decompose it:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188015,
        "id": "262fb56a-7d39-49fd-afb0-277e30b879d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188015,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Foo\n  def to_ary\n    [1, 2]\n  end\nend\na, b = Foo.new # a = 1; b = 2"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Foo\n  def to_ary\n    [1, 2]\n  end\nend\na, b = Foo.new # a = 1; b = 2",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188015,
        "id": "bbeb9a13-3bef-4ef3-9aa7-9a74f8db582b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188015,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the object being decomposed doesn’t "
            ],
            [
              "respond_to?",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "to_ary",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", it’s treated as a single-element array:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the object being decomposed doesn’t "
          },
          {
            "Text": "respond_to?",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "to_ary",
            "AttrFlags": 2
          },
          {
            "Text": ", it’s treated as a single-element array:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188015,
        "id": "a0a39362-0c63-4044-ae1f-fb39fade3152",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188015,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "1.respond_to?(:to_ary) # =\u003e false\na, b = 1 # a = 1; b = nil"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "1.respond_to?(:to_ary) # =\u003e false\na, b = 1 # a = 1; b = nil",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188015,
        "id": "5e560b6e-c899-4a5d-b92a-e82e5ce3d74d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188015,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Decomposition can also be "
            ],
            [
              "nested",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " by using a "
            ],
            [
              "()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "-delimited decomposition expression in place of what otherwise would be a single element:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Decomposition can also be "
          },
          {
            "Text": "nested",
            "AttrFlags": 1
          },
          {
            "Text": " by using a "
          },
          {
            "Text": "()",
            "AttrFlags": 2
          },
          {
            "Text": "-delimited decomposition expression in place of what otherwise would be a single element:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188015,
        "id": "58977322-d58b-4241-afc5-0561e45f1e94",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188015,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "arr = [1, [2, 3, 4], 5, 6]\na, (b, *c), *d = arr # a = 1; b = 2; c = [3, 4]; d = [5, 6]\n#   ^^^^^"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "arr = [1, [2, 3, 4], 5, 6]\na, (b, *c), *d = arr # a = 1; b = 2; c = [3, 4]; d = [5, 6]\n#   ^^^^^",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188015,
        "id": "abdf6677-6648-436b-aa7a-fd39f1060e8a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188015,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is effectively the opposite of "
            ],
            [
              "splat",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is effectively the opposite of "
          },
          {
            "Text": "splat",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188016,
        "id": "bf4e70ec-494c-418a-8703-cc36622f7152",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188016,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Actually, any decomposition expression can be delimited by "
            ],
            [
              "()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". But for the first level decomposition is optional."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Actually, any decomposition expression can be delimited by "
          },
          {
            "Text": "()",
            "AttrFlags": 2
          },
          {
            "Text": ". But for the first level decomposition is optional."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188016,
        "id": "a33f24fa-241e-46ef-9f54-68e6d25f80f9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188016,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "a, b = [1, 2]\n(a, b) = [1, 2] # the same thing"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "a, b = [1, 2]\n(a, b) = [1, 2] # the same thing",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188016,
        "id": "b6a79d07-cccc-4bd9-a9fd-bbcb807fb136",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188016,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Edge case:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "a single identifier",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " cannot be used as a destructuring pattern, be it outer or a nested one:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Edge case:",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "a single identifier",
            "AttrFlags": 4
          },
          {
            "Text": " cannot be used as a destructuring pattern, be it outer or a nested one:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188016,
        "id": "21407b47-41c7-4bad-8343-1623fc4c2b82",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188016,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "(a) = [1] # SyntaxError\na, (b) = [1, [2]] # SyntaxError"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "(a) = [1] # SyntaxError\na, (b) = [1, [2]] # SyntaxError",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188016,
        "id": "a7cf32d2-9317-40df-8990-a58b15023cab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188016,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When assigning "
            ],
            [
              "an array literal",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " to a destructuring expression, outer "
            ],
            [
              "[]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be omitted:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When assigning "
          },
          {
            "Text": "an array literal",
            "AttrFlags": 1
          },
          {
            "Text": " to a destructuring expression, outer "
          },
          {
            "Text": "[]",
            "AttrFlags": 2
          },
          {
            "Text": " can be omitted:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188016,
        "id": "7d63ff85-41e2-4e98-8b84-eeb60ec84a00",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188016,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "a, b = [1, 2]\na, b =  1, 2  # exactly the same"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "a, b = [1, 2]\na, b =  1, 2  # exactly the same",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188017,
        "id": "ddb8ab23-41a4-4393-8f82-0a334fbe7aae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188017,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is known as "
            ],
            [
              "parallel assignment",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", but it uses the same decomposition under the hood. This is particularly handy for exchanging variables’ values without employing additional temporary variables:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is known as "
          },
          {
            "Text": "parallel assignment",
            "AttrFlags": 1
          },
          {
            "Text": ", but it uses the same decomposition under the hood. This is particularly handy for exchanging variables’ values without employing additional temporary variables:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188017,
        "id": "295d24de-49e0-40ee-8643-381aa774f9bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188017,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "t = a; a = b; b = t # an obvious way\na, b = b, a         # an idiomatic way\n(a, b) = [b, a]     # ...and how it works"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "t = a; a = b; b = t # an obvious way\na, b = b, a         # an idiomatic way\n(a, b) = [b, a]     # ...and how it works",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552101188017,
        "id": "2b5d9780-cf18-4ff3-befd-eaeed30d9e2f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552101188017,
        "parent_id": "0cbd1a14-f31a-4051-a64b-3b50f9394d0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Values are captured when building the right-hand side of the assignment, so using the same variables as source and destination is relatively safe."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Values are captured when building the right-hand side of the assignment, so using the same variables as source and destination is relatively safe."
          }
        ]
      }
    ],
    "title": "Decomposition",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}