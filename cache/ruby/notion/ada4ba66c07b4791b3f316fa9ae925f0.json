{
  "ID": "ada4ba66-c07b-4791-b3f3-16fa9ae925f0",
  "Root": {
    "alive": true,
    "content": [
      "0d769750-dd1e-4d5f-9601-cd42480d0e74",
      "b53d4708-d301-4107-bb42-a4d8edf53b7f",
      "ffffd662-0262-4739-a215-5e1da962229e",
      "df9d773f-4da3-485a-88cd-de39e0f3c9e0",
      "82aafd96-4992-4fdb-bae0-9c3d808ec894",
      "54bccab5-255f-4122-9cec-d30ed4f4085f",
      "e2dc1ff8-d6e7-427f-9ab4-49c5feae99a5",
      "a0c5a73c-fc1e-4fbe-af26-b2a77ff0b3e9",
      "6e62a2f0-8583-48b8-807b-ad588a24e7d8",
      "ff787fd2-c4bb-472b-bda8-47acb811a70c",
      "e39304b5-6501-42dd-b293-b557d54b7269",
      "d41979b4-99ea-4c43-adab-09fb89450a12",
      "db3074e7-cb8b-4fca-9003-bffd7baeff8d",
      "4237a14c-c3d2-4c15-80b8-7827e955a7a9"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552102695024,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ada4ba66-c07b-4791-b3f3-16fa9ae925f0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552102695024,
    "parent_id": "ff17ee6e-cf45-4e7e-9f1f-2d198c0da86f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Tail recursion"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102695019,
        "id": "0d769750-dd1e-4d5f-9601-cd42480d0e74",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102695019,
        "parent_id": "ada4ba66-c07b-4791-b3f3-16fa9ae925f0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Many recursive algorithms can be expressed using iteration. For instance, the greatest common denominator function can be "
            ],
            [
              "written recursively",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Recursion_(computer_science)#Recursive_procedures"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Many recursive algorithms can be expressed using iteration. For instance, the greatest common denominator function can be "
          },
          {
            "Text": "written recursively",
            "Link": "https://en.wikipedia.org/wiki/Recursion_(computer_science)#Recursive_procedures"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102695020,
        "id": "b53d4708-d301-4107-bb42-a4d8edf53b7f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102695020,
        "parent_id": "ada4ba66-c07b-4791-b3f3-16fa9ae925f0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def gdc (x, y)\n  return x if y == 0\n  return gdc(y, x%y)\nend"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def gdc (x, y)\n  return x if y == 0\n  return gdc(y, x%y)\nend",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102695020,
        "id": "ffffd662-0262-4739-a215-5e1da962229e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102695020,
        "parent_id": "ada4ba66-c07b-4791-b3f3-16fa9ae925f0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "or iteratively:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "or iteratively:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102695020,
        "id": "df9d773f-4da3-485a-88cd-de39e0f3c9e0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102695020,
        "parent_id": "ada4ba66-c07b-4791-b3f3-16fa9ae925f0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def gdc_iter (x, y)\n  while y != 0 do\n    x, y = y, x%y\n  end\n\n  return x\nend"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def gdc_iter (x, y)\n  while y != 0 do\n    x, y = y, x%y\n  end\n\n  return x\nend",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102695021,
        "id": "82aafd96-4992-4fdb-bae0-9c3d808ec894",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102695021,
        "parent_id": "ada4ba66-c07b-4791-b3f3-16fa9ae925f0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The two algorithms are equivalent in theory, but the recursive version risks a "
            ],
            [
              "SystemStackError",
              [
                [
                  "a",
                  "https://ruby-doc.org/core/SystemStackError.html"
                ]
              ]
            ],
            [
              ". However, since the recursive method ends with a call to itself, it could be optimized to avoid a stack overflow. Another way to put it: the recursive algorithm can result in the same machine code as the iterative "
            ],
            [
              "if",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " the compiler knows to look for the recursive method call at the end of the method. Ruby doesn’t do tail call optimization by default, but you can "
            ],
            [
              "turn it on with",
              [
                [
                  "a",
                  "https://ruby-doc.org/core/RubyVM/InstructionSequence.html#method-c-compile_option"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The two algorithms are equivalent in theory, but the recursive version risks a "
          },
          {
            "Text": "SystemStackError",
            "Link": "https://ruby-doc.org/core/SystemStackError.html"
          },
          {
            "Text": ". However, since the recursive method ends with a call to itself, it could be optimized to avoid a stack overflow. Another way to put it: the recursive algorithm can result in the same machine code as the iterative "
          },
          {
            "Text": "if",
            "AttrFlags": 4
          },
          {
            "Text": " the compiler knows to look for the recursive method call at the end of the method. Ruby doesn’t do tail call optimization by default, but you can "
          },
          {
            "Text": "turn it on with",
            "Link": "https://ruby-doc.org/core/RubyVM/InstructionSequence.html#method-c-compile_option"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102695021,
        "id": "54bccab5-255f-4122-9cec-d30ed4f4085f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102695021,
        "parent_id": "ada4ba66-c07b-4791-b3f3-16fa9ae925f0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "RubyVM::InstructionSequence.compile_option = {\n  tailcall_optimization: true,\n  trace_instruction: false\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "RubyVM::InstructionSequence.compile_option = {\n  tailcall_optimization: true,\n  trace_instruction: false\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102695021,
        "id": "e2dc1ff8-d6e7-427f-9ab4-49c5feae99a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102695021,
        "parent_id": "ada4ba66-c07b-4791-b3f3-16fa9ae925f0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In addition to turning on tail-call optimization, you also need to turn off instruction tracing. Unfortunately, these options only apply at compile time, so you either need to "
            ],
            [
              "require",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " the recursive method from another file or "
            ],
            [
              "eval",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " the method definition:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In addition to turning on tail-call optimization, you also need to turn off instruction tracing. Unfortunately, these options only apply at compile time, so you either need to "
          },
          {
            "Text": "require",
            "AttrFlags": 2
          },
          {
            "Text": " the recursive method from another file or "
          },
          {
            "Text": "eval",
            "AttrFlags": 2
          },
          {
            "Text": " the method definition:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102695022,
        "id": "a0c5a73c-fc1e-4fbe-af26-b2a77ff0b3e9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102695022,
        "parent_id": "ada4ba66-c07b-4791-b3f3-16fa9ae925f0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "RubyVM::InstructionSequence.new(\u003c\u003c-EOF).eval\n  def me_myself_and_i\n    me_myself_and_i\n  end\nEOF\nme_myself_and_i # Infinite loop, not stack overflow"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "RubyVM::InstructionSequence.new(\u003c\u003c-EOF).eval\n  def me_myself_and_i\n    me_myself_and_i\n  end\nEOF\nme_myself_and_i # Infinite loop, not stack overflow",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102695022,
        "id": "6e62a2f0-8583-48b8-807b-ad588a24e7d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102695022,
        "parent_id": "ada4ba66-c07b-4791-b3f3-16fa9ae925f0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finally, the final return call must return the method and "
            ],
            [
              "only the method",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". That means you’ll need to re-write the standard factorial function:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finally, the final return call must return the method and "
          },
          {
            "Text": "only the method",
            "AttrFlags": 4
          },
          {
            "Text": ". That means you’ll need to re-write the standard factorial function:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102695022,
        "id": "ff787fd2-c4bb-472b-bda8-47acb811a70c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102695022,
        "parent_id": "ada4ba66-c07b-4791-b3f3-16fa9ae925f0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def fact(x)\n  return 1 if x \u003c= 1\n  return x*fact(x-1)\nend"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def fact(x)\n  return 1 if x \u003c= 1\n  return x*fact(x-1)\nend",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102695022,
        "id": "e39304b5-6501-42dd-b293-b557d54b7269",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102695022,
        "parent_id": "ada4ba66-c07b-4791-b3f3-16fa9ae925f0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To something like:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To something like:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102695022,
        "id": "d41979b4-99ea-4c43-adab-09fb89450a12",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102695022,
        "parent_id": "ada4ba66-c07b-4791-b3f3-16fa9ae925f0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def fact(x, acc=1)\n  return acc if x \u003c= 1\n  return fact(x-1, x*acc)\nend"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def fact(x, acc=1)\n  return acc if x \u003c= 1\n  return fact(x-1, x*acc)\nend",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102695023,
        "id": "db3074e7-cb8b-4fca-9003-bffd7baeff8d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102695023,
        "parent_id": "ada4ba66-c07b-4791-b3f3-16fa9ae925f0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This version passes the accumulated sum via a second (optional) argument that "
            ],
            [
              "defaults",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/ruby/997/methods/3243/default-parameters#t=201705072356272378973"
                ]
              ]
            ],
            [
              " to 1."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This version passes the accumulated sum via a second (optional) argument that "
          },
          {
            "Text": "defaults",
            "Link": "http://stackoverflow.com/documentation/ruby/997/methods/3243/default-parameters#t=201705072356272378973"
          },
          {
            "Text": " to 1."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552102695023,
        "id": "4237a14c-c3d2-4c15-80b8-7827e955a7a9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552102695023,
        "parent_id": "ada4ba66-c07b-4791-b3f3-16fa9ae925f0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Further reading: "
            ],
            [
              "Tail Call Optimization in Ruby",
              [
                [
                  "a",
                  "http://nithinbekal.com/posts/ruby-tco/"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Tailin’ Ruby",
              [
                [
                  "a",
                  "http://timelessrepo.com/tailin-ruby"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Further reading: "
          },
          {
            "Text": "Tail Call Optimization in Ruby",
            "Link": "http://nithinbekal.com/posts/ruby-tco/"
          },
          {
            "Text": " and "
          },
          {
            "Text": "Tailin’ Ruby",
            "Link": "http://timelessrepo.com/tailin-ruby"
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Tail recursion",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}