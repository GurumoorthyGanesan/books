{
  "ID": "6fe5aac2-58e4-4b40-98d6-d3ace51e0130",
  "Root": {
    "alive": true,
    "content": [
      "4e773deb-d123-4827-90cb-3ebbd9ed6ed7",
      "c39034f5-e803-4a77-a662-19abb5290efe",
      "15aa87c2-9059-4918-b997-aebb7f8168c1",
      "a4e8ea1d-82fd-4c75-91a4-5857bab0a227",
      "fb67a82b-ca1e-4222-a08a-796b05c0b7a9",
      "c43de860-a93b-42c9-b34c-bb0afe899bcd",
      "558c51f9-5b42-4df6-ae3d-a6919e02405e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550459297006,
    "id": "6fe5aac2-58e4-4b40-98d6-d3ace51e0130",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550479500000,
    "parent_id": "82527ce9-51fc-40d4-a471-3651f67a34fc",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "When-statement with enums"
        ]
      ]
    },
    "type": "page",
    "version": 6,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459297002,
        "id": "4e773deb-d123-4827-90cb-3ebbd9ed6ed7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459297002,
        "parent_id": "6fe5aac2-58e4-4b40-98d6-d3ace51e0130",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "when",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be used to match "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " values:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "when",
            "AttrFlags": 2
          },
          {
            "Text": " can be used to match "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " values:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459297003,
        "id": "c39034f5-e803-4a77-a662-19abb5290efe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550479500000,
        "parent_id": "6fe5aac2-58e4-4b40-98d6-d3ace51e0130",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Kotlin"
            ]
          ],
          "title": [
            [
              "enum class Day {\n    Sunday,\n    Monday,\n    Tuesday,\n    Wednesday,\n    Thursday,\n    Friday,\n    Saturday\n}\n\nfun doOnDay(day: Day) {\n    when(day) {\n        Day.Sunday -\u003e     // Do something\n        Day.Monday, Day.Tuesday -\u003e     // Do other thing\n        Day.Wednesday -\u003e  // ...\n        Day.Thursday -\u003e   // ...\n        Day.Friday -\u003e     // ...\n        Day.Saturday -\u003e   // ...\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "enum class Day {\n    Sunday,\n    Monday,\n    Tuesday,\n    Wednesday,\n    Thursday,\n    Friday,\n    Saturday\n}\n\nfun doOnDay(day: Day) {\n    when(day) {\n        Day.Sunday -\u003e     // Do something\n        Day.Monday, Day.Tuesday -\u003e     // Do other thing\n        Day.Wednesday -\u003e  // ...\n        Day.Thursday -\u003e   // ...\n        Day.Friday -\u003e     // ...\n        Day.Saturday -\u003e   // ...\n    }\n}",
        "code_language": "Kotlin"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459297003,
        "id": "15aa87c2-9059-4918-b997-aebb7f8168c1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459297003,
        "parent_id": "6fe5aac2-58e4-4b40-98d6-d3ace51e0130",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As you can see in second case line ("
            ],
            [
              "Monday",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Tuedsay",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") it is also possible to combine two or more "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " values."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As you can see in second case line ("
          },
          {
            "Text": "Monday",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Tuedsay",
            "AttrFlags": 2
          },
          {
            "Text": ") it is also possible to combine two or more "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " values."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459297003,
        "id": "a4e8ea1d-82fd-4c75-91a4-5857bab0a227",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459297003,
        "parent_id": "6fe5aac2-58e4-4b40-98d6-d3ace51e0130",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If your cases are not exhaustive the compile will show an error. You can use "
            ],
            [
              "else",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to handle default cases:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If your cases are not exhaustive the compile will show an error. You can use "
          },
          {
            "Text": "else",
            "AttrFlags": 2
          },
          {
            "Text": " to handle default cases:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459297003,
        "id": "fb67a82b-ca1e-4222-a08a-796b05c0b7a9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550479500000,
        "parent_id": "6fe5aac2-58e4-4b40-98d6-d3ace51e0130",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Kotlin"
            ]
          ],
          "title": [
            [
              "fun doOnDay(day: Day) {\n    when(day) {\n        Day.Monday -\u003e     // Work\n        Day.Tuesday -\u003e    // Work hard\n        Day.Wednesday -\u003e  // ...\n        Day.Thursday -\u003e   //\n        Day.Friday -\u003e     //\n        else -\u003e           // Party on weekend\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "fun doOnDay(day: Day) {\n    when(day) {\n        Day.Monday -\u003e     // Work\n        Day.Tuesday -\u003e    // Work hard\n        Day.Wednesday -\u003e  // ...\n        Day.Thursday -\u003e   //\n        Day.Friday -\u003e     //\n        else -\u003e           // Party on weekend\n    }\n}",
        "code_language": "Kotlin"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459297004,
        "id": "c43de860-a93b-42c9-b34c-bb0afe899bcd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459297004,
        "parent_id": "6fe5aac2-58e4-4b40-98d6-d3ace51e0130",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Though the same can be done using "
            ],
            [
              "if-then-else",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " construct, "
            ],
            [
              "when",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " takes care of missing "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " values and makes it more natural."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Though the same can be done using "
          },
          {
            "Text": "if-then-else",
            "AttrFlags": 2
          },
          {
            "Text": " construct, "
          },
          {
            "Text": "when",
            "AttrFlags": 2
          },
          {
            "Text": " takes care of missing "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " values and makes it more natural."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459297006,
        "id": "558c51f9-5b42-4df6-ae3d-a6919e02405e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459297006,
        "parent_id": "6fe5aac2-58e4-4b40-98d6-d3ace51e0130",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Check "
            ],
            [
              "here",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/kotlin/2286/enum"
                ]
              ]
            ],
            [
              " for more information about kotlin "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Check "
          },
          {
            "Text": "here",
            "Link": "http://stackoverflow.com/documentation/kotlin/2286/enum"
          },
          {
            "Text": " for more information about kotlin "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          }
        ]
      }
    ],
    "title": "When-statement with enums"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}