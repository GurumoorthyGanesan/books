{
  "ID": "e479ecae-3f65-4bf4-a0a8-9f7a46d42e08",
  "Root": {
    "alive": true,
    "content": [
      "6ce15446-c763-4f39-8109-9c30d59525cf",
      "14760818-4f61-45d7-a949-52afbf67784a",
      "f743c96f-09ed-4be9-9357-877144db8f29",
      "af70fd8d-342e-472c-9a2b-8bd249ecfba1",
      "7310d52a-c4e6-4d9c-bba6-c0414e61ff1d",
      "d4b954c2-62d0-4e7b-a273-3a001bc8092e",
      "06b08db0-1a93-4d9e-a455-384b0b2e1d13",
      "cd5fae6f-2c5f-44b5-ae4f-374d4dabe28b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550459198049,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e479ecae-3f65-4bf4-a0a8-9f7a46d42e08",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550480040000,
    "parent_id": "ee8e0a58-ce4d-49f2-95cf-589d789b64da",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "07Using extension functions to improve readability"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459198035,
        "id": "6ce15446-c763-4f39-8109-9c30d59525cf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459198035,
        "parent_id": "e479ecae-3f65-4bf4-a0a8-9f7a46d42e08",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Kotlin you could write code like:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Kotlin you could write code like:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459198037,
        "id": "14760818-4f61-45d7-a949-52afbf67784a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459198037,
        "parent_id": "e479ecae-3f65-4bf4-a0a8-9f7a46d42e08",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "val x: Path = Paths.get(\"dirName\").apply { \n    if (Files.notExists(this)) throw IllegalStateException(\"The important file does not exist\")\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "val x: Path = Paths.get(\"dirName\").apply { \n    if (Files.notExists(this)) throw IllegalStateException(\"The important file does not exist\")\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459198037,
        "id": "f743c96f-09ed-4be9-9357-877144db8f29",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459198037,
        "parent_id": "e479ecae-3f65-4bf4-a0a8-9f7a46d42e08",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But the use of "
            ],
            [
              "apply",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not that clear as to your intent. Sometimes it is clearer to create a similar extension function to in effect rename the action and make it more self-evident. This should not be allowed to get out of hand, but for very common actions such as verification:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But the use of "
          },
          {
            "Text": "apply",
            "AttrFlags": 2
          },
          {
            "Text": " is not that clear as to your intent. Sometimes it is clearer to create a similar extension function to in effect rename the action and make it more self-evident. This should not be allowed to get out of hand, but for very common actions such as verification:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459198038,
        "id": "af70fd8d-342e-472c-9a2b-8bd249ecfba1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459198038,
        "parent_id": "e479ecae-3f65-4bf4-a0a8-9f7a46d42e08",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "infix inline fun \u003cT\u003e T.verifiedBy(verifyWith: (T) -\u003e Unit): T {\n    verifyWith(this)\n    return this\n}\n\ninfix inline fun \u003cT: Any\u003e T.verifiedWith(verifyWith: T.() -\u003e Unit): T {\n    this.verifyWith()\n    return this\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "infix inline fun \u003cT\u003e T.verifiedBy(verifyWith: (T) -\u003e Unit): T {\n    verifyWith(this)\n    return this\n}\n\ninfix inline fun \u003cT: Any\u003e T.verifiedWith(verifyWith: T.() -\u003e Unit): T {\n    this.verifyWith()\n    return this\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459198038,
        "id": "7310d52a-c4e6-4d9c-bba6-c0414e61ff1d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459198038,
        "parent_id": "e479ecae-3f65-4bf4-a0a8-9f7a46d42e08",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You could now write the code as:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You could now write the code as:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459198038,
        "id": "d4b954c2-62d0-4e7b-a273-3a001bc8092e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459198038,
        "parent_id": "e479ecae-3f65-4bf4-a0a8-9f7a46d42e08",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "val x: Path = Paths.get(\"dirName\") verifiedWith {\n    if (Files.notExists(this)) throw IllegalStateException(\"The important file does not exist\")\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "val x: Path = Paths.get(\"dirName\") verifiedWith {\n    if (Files.notExists(this)) throw IllegalStateException(\"The important file does not exist\")\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459198038,
        "id": "06b08db0-1a93-4d9e-a455-384b0b2e1d13",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459198038,
        "parent_id": "e479ecae-3f65-4bf4-a0a8-9f7a46d42e08",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Which now let’s people know what to expect within the lambda parameter."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Which now let’s people know what to expect within the lambda parameter."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459198049,
        "id": "cd5fae6f-2c5f-44b5-ae4f-374d4dabe28b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459198049,
        "parent_id": "e479ecae-3f65-4bf4-a0a8-9f7a46d42e08",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that the type parameter "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for "
            ],
            [
              "verifiedBy",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is same as "
            ],
            [
              "T: Any?",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " meaning that even nullable types will be able to use that version of the extension. Although "
            ],
            [
              "verifiedWith",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " requires non-nullable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that the type parameter "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": " for "
          },
          {
            "Text": "verifiedBy",
            "AttrFlags": 2
          },
          {
            "Text": " is same as "
          },
          {
            "Text": "T: Any?",
            "AttrFlags": 2
          },
          {
            "Text": " meaning that even nullable types will be able to use that version of the extension. Although "
          },
          {
            "Text": "verifiedWith",
            "AttrFlags": 2
          },
          {
            "Text": " requires non-nullable."
          }
        ]
      }
    ],
    "title": "07Using extension functions to improve readability",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}