{
  "ID": "d3955cb5-ba43-4647-b53f-da467b0005d4",
  "Root": {
    "alive": true,
    "content": [
      "7800887d-30d7-4bc9-aa0e-5adf1b14994d",
      "3017d233-aacb-4bf3-87c6-70f8d3617d2c",
      "6d56a585-f6d1-4d5b-9f64-84212cfdb5bb",
      "8eb4046f-aa59-420c-9acc-71a866bcb20e",
      "b17651a2-6f50-4328-b25b-f6af79011518",
      "7f3335d6-371f-4c94-9e78-f19419c2652e",
      "3a3e8665-a634-4ef8-b180-88dd722caf5d",
      "36070568-d532-4150-bece-7a2eeb11a8e8",
      "87bc896e-1357-4051-8ba2-a9d8ab54d11f",
      "6cbf451f-7aac-48a8-95f8-4baec7b89496"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550459245296,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d3955cb5-ba43-4647-b53f-da467b0005d4",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550479740000,
    "parent_id": "80bde4e7-5e0e-4d44-9888-69827930ae4c",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Safe call operator"
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459245290,
        "id": "7800887d-30d7-4bc9-aa0e-5adf1b14994d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459245290,
        "parent_id": "d3955cb5-ba43-4647-b53f-da467b0005d4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To access functions and properties of nullable types, you have to use special operators."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To access functions and properties of nullable types, you have to use special operators."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459245292,
        "id": "3017d233-aacb-4bf3-87c6-70f8d3617d2c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459245292,
        "parent_id": "d3955cb5-ba43-4647-b53f-da467b0005d4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The first one, "
            ],
            [
              "?.",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", gives you the property or function you’re trying to access, or it gives you null if the object is null:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The first one, "
          },
          {
            "Text": "?.",
            "AttrFlags": 2
          },
          {
            "Text": ", gives you the property or function you’re trying to access, or it gives you null if the object is null:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459245292,
        "id": "6d56a585-f6d1-4d5b-9f64-84212cfdb5bb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459245292,
        "parent_id": "d3955cb5-ba43-4647-b53f-da467b0005d4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "val string: String? = \"Hello World!\"\nprint(string.length)   // Compile error: Can't directly access property of nullable type.\nprint(string?.length)  // Will print the string's length, or \"null\" if the string is null."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "val string: String? = \"Hello World!\"\nprint(string.length)   // Compile error: Can't directly access property of nullable type.\nprint(string?.length)  // Will print the string's length, or \"null\" if the string is null.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459245292,
        "id": "8eb4046f-aa59-420c-9acc-71a866bcb20e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459245292,
        "parent_id": "d3955cb5-ba43-4647-b53f-da467b0005d4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Idiom: calling multiple methods on the same, null-checked object"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Idiom: calling multiple methods on the same, null-checked object"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459245294,
        "id": "b17651a2-6f50-4328-b25b-f6af79011518",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459245294,
        "parent_id": "d3955cb5-ba43-4647-b53f-da467b0005d4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An elegant way to call multiple methods of a null-checked object is using Kotlin’s "
            ],
            [
              "apply",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/apply.html"
                ]
              ]
            ],
            [
              " like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An elegant way to call multiple methods of a null-checked object is using Kotlin’s "
          },
          {
            "Text": "apply",
            "AttrFlags": 2,
            "Link": "https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/apply.html"
          },
          {
            "Text": " like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459245294,
        "id": "7f3335d6-371f-4c94-9e78-f19419c2652e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459245294,
        "parent_id": "d3955cb5-ba43-4647-b53f-da467b0005d4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "obj?.apply { \n    foo()\n    bar()\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "obj?.apply { \n    foo()\n    bar()\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459245294,
        "id": "3a3e8665-a634-4ef8-b180-88dd722caf5d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459245294,
        "parent_id": "d3955cb5-ba43-4647-b53f-da467b0005d4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This will call "
            ],
            [
              "foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " on "
            ],
            [
              "obj",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (which is "
            ],
            [
              "this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the "
            ],
            [
              "apply",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block) only if "
            ],
            [
              "obj",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is non-null, skipping the entire block otherwise."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This will call "
          },
          {
            "Text": "foo",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "bar",
            "AttrFlags": 2
          },
          {
            "Text": " on "
          },
          {
            "Text": "obj",
            "AttrFlags": 2
          },
          {
            "Text": " (which is "
          },
          {
            "Text": "this",
            "AttrFlags": 2
          },
          {
            "Text": " in the "
          },
          {
            "Text": "apply",
            "AttrFlags": 2
          },
          {
            "Text": " block) only if "
          },
          {
            "Text": "obj",
            "AttrFlags": 2
          },
          {
            "Text": " is non-null, skipping the entire block otherwise."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459245295,
        "id": "36070568-d532-4150-bece-7a2eeb11a8e8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459245295,
        "parent_id": "d3955cb5-ba43-4647-b53f-da467b0005d4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To bring a nullable variable into scope as a non-nullable reference without making it the implicit receiver of function and property calls, you can use "
            ],
            [
              "let",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/let.html"
                ]
              ]
            ],
            [
              " instead of "
            ],
            [
              "apply",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To bring a nullable variable into scope as a non-nullable reference without making it the implicit receiver of function and property calls, you can use "
          },
          {
            "Text": "let",
            "AttrFlags": 2,
            "Link": "https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/let.html"
          },
          {
            "Text": " instead of "
          },
          {
            "Text": "apply",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459245295,
        "id": "87bc896e-1357-4051-8ba2-a9d8ab54d11f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459245295,
        "parent_id": "d3955cb5-ba43-4647-b53f-da467b0005d4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "nullable?.let { notnull -\u003e\n    notnull.foo()\n    notnull.bar()\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "nullable?.let { notnull -\u003e\n    notnull.foo()\n    notnull.bar()\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459245296,
        "id": "6cbf451f-7aac-48a8-95f8-4baec7b89496",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459245296,
        "parent_id": "d3955cb5-ba43-4647-b53f-da467b0005d4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "notnull",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " could be named anything, or even left out and used through "
            ],
            [
              "the implicit lambda parameter ",
              [
                [
                  "a",
                  "https://stackoverflow.com/documentation/kotlin/1280/functions/4199/lambda-functions"
                ]
              ]
            ],
            [
              "it",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://stackoverflow.com/documentation/kotlin/1280/functions/4199/lambda-functions"
                ]
              ]
            ],
            [
              ".",
              [
                [
                  "a",
                  "https://stackoverflow.com/documentation/kotlin/1280/functions/4199/lambda-functions"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "notnull",
            "AttrFlags": 2
          },
          {
            "Text": " could be named anything, or even left out and used through "
          },
          {
            "Text": "the implicit lambda parameter ",
            "Link": "https://stackoverflow.com/documentation/kotlin/1280/functions/4199/lambda-functions"
          },
          {
            "Text": "it",
            "AttrFlags": 2,
            "Link": "https://stackoverflow.com/documentation/kotlin/1280/functions/4199/lambda-functions"
          },
          {
            "Text": ".",
            "Link": "https://stackoverflow.com/documentation/kotlin/1280/functions/4199/lambda-functions"
          }
        ]
      }
    ],
    "title": "Safe call operator",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}