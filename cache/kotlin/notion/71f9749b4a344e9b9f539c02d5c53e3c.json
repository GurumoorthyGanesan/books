{
  "ID": "71f9749b-4a34-4e9b-9f53-9c02d5c53e3c",
  "Root": {
    "alive": true,
    "content": [
      "03fb23a3-a6e0-434f-bc54-ad7125a5a2d5",
      "ad1e2425-ef47-41ab-8f80-265db6a03444",
      "5bcf7d0c-6128-4ea1-a38b-90c559cd4215",
      "9beb8bef-7b04-41e4-81e0-23e39790e781",
      "0741c7fd-f8bf-475c-8d36-b0e5ecd0b005",
      "ef72e34c-6bc0-4d3e-8b24-298258726ab7"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550459240010,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "71f9749b-4a34-4e9b-9f53-9c02d5c53e3c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550479740000,
    "parent_id": "80bde4e7-5e0e-4d44-9888-69827930ae4c",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Smart casts"
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459240007,
        "id": "03fb23a3-a6e0-434f-bc54-ad7125a5a2d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459240007,
        "parent_id": "71f9749b-4a34-4e9b-9f53-9c02d5c53e3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the compiler can infer that an object can’t be null at a certain point, you don’t have to use the special operators anymore:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the compiler can infer that an object can’t be null at a certain point, you don’t have to use the special operators anymore:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459240009,
        "id": "ad1e2425-ef47-41ab-8f80-265db6a03444",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459240009,
        "parent_id": "71f9749b-4a34-4e9b-9f53-9c02d5c53e3c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var string: String? = \"Hello!\"\nprint(string.length)  // Compile error\nif(string != null) {"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var string: String? = \"Hello!\"\nprint(string.length)  // Compile error\nif(string != null) {",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459240010,
        "id": "5bcf7d0c-6128-4ea1-a38b-90c559cd4215",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459240010,
        "parent_id": "71f9749b-4a34-4e9b-9f53-9c02d5c53e3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "// The compiler now knows that string can’t be null print(string.length) // It works now!"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "// The compiler now knows that string can’t be null print(string.length) // It works now!"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459240010,
        "id": "9beb8bef-7b04-41e4-81e0-23e39790e781",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459240010,
        "parent_id": "71f9749b-4a34-4e9b-9f53-9c02d5c53e3c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459240010,
        "id": "0741c7fd-f8bf-475c-8d36-b0e5ecd0b005",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459240010,
        "parent_id": "71f9749b-4a34-4e9b-9f53-9c02d5c53e3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: The compiler won’t allow you to smart cast mutable variables that could potentially be modified between the null-check and the intended usage."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: The compiler won’t allow you to smart cast mutable variables that could potentially be modified between the null-check and the intended usage."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459240010,
        "id": "ef72e34c-6bc0-4d3e-8b24-298258726ab7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459240010,
        "parent_id": "71f9749b-4a34-4e9b-9f53-9c02d5c53e3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If a variable is accessible from outside the scope of the current block (because they are members of a non-local object, for example), you need to create a new, local reference which you can then smart cast and use."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If a variable is accessible from outside the scope of the current block (because they are members of a non-local object, for example), you need to create a new, local reference which you can then smart cast and use."
          }
        ]
      }
    ],
    "title": "Smart casts",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}