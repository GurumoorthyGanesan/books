{
  "ID": "f9cfbec8-1f3e-4e5e-8ef8-7ef7bbaa3944",
  "Root": {
    "alive": true,
    "content": [
      "58cd4470-9993-48ad-8d2c-9f93e894fc69",
      "9b742807-33ef-4974-89ee-7dd1549c9828",
      "7e94cbed-3439-4c59-abff-19fe2567a840",
      "15a39204-a130-4e3f-b556-35e039665981",
      "7d5b065e-dfe1-49c5-b365-09e8d5c624e4",
      "2c02a242-fca3-45e9-ae36-edcdce16154a",
      "483cbef4-2244-4f41-8517-c82284f5917e",
      "790945bf-0ff2-40de-a218-ebe36f7523cd",
      "ee209a96-057a-44b7-b610-495e19e88229"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550459271245,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "f9cfbec8-1f3e-4e5e-8ef8-7ef7bbaa3944",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550479560000,
    "parent_id": "7b416f2b-f26d-4f20-87fe-64ec020e1f51",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Getting values of all properties of a class"
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459271241,
        "id": "58cd4470-9993-48ad-8d2c-9f93e894fc69",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459271241,
        "parent_id": "f9cfbec8-1f3e-4e5e-8ef8-7ef7bbaa3944",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Given "
            ],
            [
              "Example",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class extending "
            ],
            [
              "BaseExample",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class with some properties:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Given "
          },
          {
            "Text": "Example",
            "AttrFlags": 2
          },
          {
            "Text": " class extending "
          },
          {
            "Text": "BaseExample",
            "AttrFlags": 2
          },
          {
            "Text": " class with some properties:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459271244,
        "id": "9b742807-33ef-4974-89ee-7dd1549c9828",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550479560000,
        "parent_id": "f9cfbec8-1f3e-4e5e-8ef8-7ef7bbaa3944",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Kotlin"
            ]
          ],
          "title": [
            [
              "open class BaseExample(val baseField: String)\n\nclass Example(val field1: String, val field2: Int, baseField: String): \n    BaseExample(baseField) {\n    \n    val field3: String\n        get() = \"Property without backing field\"\n\n    val field4 by lazy { \"Delegated value\" }\n\n    private val privateField: String = \"Private value\"\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "open class BaseExample(val baseField: String)\n\nclass Example(val field1: String, val field2: Int, baseField: String): \n    BaseExample(baseField) {\n    \n    val field3: String\n        get() = \"Property without backing field\"\n\n    val field4 by lazy { \"Delegated value\" }\n\n    private val privateField: String = \"Private value\"\n}",
        "code_language": "Kotlin"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459271244,
        "id": "7e94cbed-3439-4c59-abff-19fe2567a840",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459271244,
        "parent_id": "f9cfbec8-1f3e-4e5e-8ef8-7ef7bbaa3944",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One can get hold of all properties of a class:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One can get hold of all properties of a class:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459271244,
        "id": "15a39204-a130-4e3f-b556-35e039665981",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550479560000,
        "parent_id": "f9cfbec8-1f3e-4e5e-8ef8-7ef7bbaa3944",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Kotlin"
            ]
          ],
          "title": [
            [
              "val example = Example(field1 = \"abc\", field2 = 1, baseField = \"someText\")\n\nexample::class.memberProperties.forEach { member -\u003e\n    println(\"${member.name} -\u003e ${member.get(example)}\")\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "val example = Example(field1 = \"abc\", field2 = 1, baseField = \"someText\")\n\nexample::class.memberProperties.forEach { member -\u003e\n    println(\"${member.name} -\u003e ${member.get(example)}\")\n}",
        "code_language": "Kotlin"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459271244,
        "id": "7d5b065e-dfe1-49c5-b365-09e8d5c624e4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459271244,
        "parent_id": "f9cfbec8-1f3e-4e5e-8ef8-7ef7bbaa3944",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Running this code will cause an exception to be thrown. Property "
            ],
            [
              "private val privateField",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is declared private and calling "
            ],
            [
              "member.get(example)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " on it will not succeed. One way to handle this it to filter out private properties. To do that we have to check the visibility modifier of a property’s Java getter. In case of "
            ],
            [
              "private val",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " the getter does not exist so we can assume private access."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Running this code will cause an exception to be thrown. Property "
          },
          {
            "Text": "private val privateField",
            "AttrFlags": 2
          },
          {
            "Text": " is declared private and calling "
          },
          {
            "Text": "member.get(example)",
            "AttrFlags": 2
          },
          {
            "Text": " on it will not succeed. One way to handle this it to filter out private properties. To do that we have to check the visibility modifier of a property’s Java getter. In case of "
          },
          {
            "Text": "private val",
            "AttrFlags": 2
          },
          {
            "Text": " the getter does not exist so we can assume private access."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459271245,
        "id": "2c02a242-fca3-45e9-ae36-edcdce16154a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459271245,
        "parent_id": "f9cfbec8-1f3e-4e5e-8ef8-7ef7bbaa3944",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The helper function and it’s usage might look like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The helper function and it’s usage might look like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459271245,
        "id": "483cbef4-2244-4f41-8517-c82284f5917e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550479560000,
        "parent_id": "f9cfbec8-1f3e-4e5e-8ef8-7ef7bbaa3944",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Kotlin"
            ]
          ],
          "title": [
            [
              "fun isFieldAccessible(property: KProperty1\u003c*, *\u003e): Boolean {\n    return property.javaGetter?.modifiers?.let { !Modifier.isPrivate(it) } ?: false\n}\n\nval example = Example(field1 = \"abc\", field2 = 1, baseField = \"someText\")\n\nexample::class.memberProperties.filter { isFieldAccessible(it) }.forEach { member -\u003e\n    println(\"${member.name} -\u003e ${member.get(example)}\")\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "fun isFieldAccessible(property: KProperty1\u003c*, *\u003e): Boolean {\n    return property.javaGetter?.modifiers?.let { !Modifier.isPrivate(it) } ?: false\n}\n\nval example = Example(field1 = \"abc\", field2 = 1, baseField = \"someText\")\n\nexample::class.memberProperties.filter { isFieldAccessible(it) }.forEach { member -\u003e\n    println(\"${member.name} -\u003e ${member.get(example)}\")\n}",
        "code_language": "Kotlin"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459271245,
        "id": "790945bf-0ff2-40de-a218-ebe36f7523cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459271245,
        "parent_id": "f9cfbec8-1f3e-4e5e-8ef8-7ef7bbaa3944",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another approach is to make private properties accessible using reflection:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another approach is to make private properties accessible using reflection:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459271245,
        "id": "ee209a96-057a-44b7-b610-495e19e88229",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550479560000,
        "parent_id": "f9cfbec8-1f3e-4e5e-8ef8-7ef7bbaa3944",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Kotlin"
            ]
          ],
          "title": [
            [
              "example::class.memberProperties.forEach { member -\u003e\n    member.isAccessible = true\n    println(\"${member.name} -\u003e ${member.get(example)}\")\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "example::class.memberProperties.forEach { member -\u003e\n    member.isAccessible = true\n    println(\"${member.name} -\u003e ${member.get(example)}\")\n}",
        "code_language": "Kotlin"
      }
    ],
    "title": "Getting values of all properties of a class",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}