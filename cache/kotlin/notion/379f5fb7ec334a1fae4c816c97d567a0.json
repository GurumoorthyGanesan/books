{
  "ID": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
  "Root": {
    "alive": true,
    "content": [
      "4b7f98e0-eb5e-4614-8f79-5234681f91ef",
      "1c6cd6e1-812b-4e35-bab7-0bcab619e004",
      "0e23426c-60b7-4016-907b-c3e3ff10c0fd",
      "1451ff17-0593-4b79-89b8-3655aa3f8d27",
      "34c372dd-b5c7-4dc7-9933-e945e2a7ed87",
      "4f26e9b5-3336-4a1a-a042-c97e66220816",
      "de4a62ec-66af-4191-a41f-4aa313bce64a",
      "e5390227-91ce-4aef-845a-fd7542b8d8d0",
      "b5121fe8-0fc4-40d2-ae43-cc1d52db20ac",
      "4cd64f1c-0bca-4e5c-94ae-25ad62ecb0b8",
      "d227a5c6-e634-4a9e-b099-e6c743143def",
      "63db2bd4-7075-416c-b19a-e32c8a214644",
      "0f38d219-c3dd-4a8a-adeb-186c5a366159",
      "0f663be4-425f-4d1f-9a61-ac86e5956571",
      "ab61e257-29ff-4e81-b517-f9998f19cca2",
      "51964d3d-5ee6-4885-ad49-57cdea3ce862",
      "138295d9-6c90-42ca-bc7d-f4b65671aa03",
      "5c8974d4-43ed-4325-a330-5bac384f138a",
      "0299f26f-d099-4e90-93df-30cdca50eb32",
      "2bc3c6b8-262a-4214-9040-413b5364b1a2",
      "1bb43345-50e9-48bc-be0a-ef44ac250723",
      "2197be43-45b6-4a3f-ac66-a14151a16e5f",
      "e51bd249-ebd7-4b9c-bcfa-c369de331bc0",
      "e2ebc97d-dbc7-4277-81ee-84229472c7af",
      "9f43f509-722c-49a9-ac53-b63482bfef38",
      "af15bd5b-b7ea-4966-9d9b-4a60cb6dc198",
      "c092b5de-e5f0-4146-a416-f99e0f0568a5",
      "f16f61e3-d791-4198-8c24-151654bdf2bc",
      "d190b238-f51c-4643-a71c-003704da4204",
      "aafef36c-4588-452e-bd32-9003f9fb703d",
      "7b0508e1-cc50-40de-960b-7f1105be8d9f",
      "36031c50-79a1-4edc-bf0d-7ecf79c10857",
      "caa3fc5e-5848-4138-8605-f81bf17903fa",
      "24eb8581-c1e1-4db4-b961-91bde5788854",
      "992943cc-4dae-49ff-8f75-82a1f9df34be",
      "c99c1160-9edf-4326-ae5c-7f38f7f1e2e2",
      "6ea725fd-e1ca-4a64-b083-4c47f69fbc9a",
      "9ad02fd3-1bc9-4ae7-92ee-b6afe2920c2b",
      "395978a9-2447-4c35-ad35-c3c563ef2c99",
      "5b54d41d-098b-4fed-afe0-20744143bf22",
      "57921791-b754-40a2-9a07-e851416fcda7",
      "25b21b83-d82b-45d9-a280-222264ce886f",
      "b1436a0b-e0cf-4a56-9d68-3ac592656d28",
      "6e92fc6c-c9d9-4506-ba56-eb7f439121d2",
      "0edce58f-0ac2-471f-b7a4-65988f452774",
      "a7e72267-8a12-41e0-ad43-fb600f413c67",
      "9dbaaff7-16b4-4c15-aee1-1d12e1ffd4d5"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550459602311,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550479020000,
    "parent_id": "bcd0d2a7-7420-4503-b628-69e879b06bc1",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Introduction to regular expressions in Kotlin"
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602300,
        "id": "4b7f98e0-eb5e-4614-8f79-5234681f91ef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602300,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This post shows how to use most of the functions in the "
            ],
            [
              "Regex",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class, work with null safely related to the "
            ],
            [
              "Regex",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " functions, and how raw strings makes it easier to write and read regex patterns."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This post shows how to use most of the functions in the "
          },
          {
            "Text": "Regex",
            "AttrFlags": 2
          },
          {
            "Text": " class, work with null safely related to the "
          },
          {
            "Text": "Regex",
            "AttrFlags": 2
          },
          {
            "Text": " functions, and how raw strings makes it easier to write and read regex patterns."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602303,
        "id": "1c6cd6e1-812b-4e35-bab7-0bcab619e004",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602303,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The RegEx class"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "The RegEx class"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602303,
        "id": "0e23426c-60b7-4016-907b-c3e3ff10c0fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602303,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To work with regular expressions in Kotlin, you need to use the "
            ],
            [
              "Regex(pattern: String)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class and invoke functions like "
            ],
            [
              "find(..)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "replace(..)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " on that regex object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To work with regular expressions in Kotlin, you need to use the "
          },
          {
            "Text": "Regex(pattern: String)",
            "AttrFlags": 2
          },
          {
            "Text": " class and invoke functions like "
          },
          {
            "Text": "find(..)",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "replace(..)",
            "AttrFlags": 2
          },
          {
            "Text": " on that regex object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602303,
        "id": "1451ff17-0593-4b79-89b8-3655aa3f8d27",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602303,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An example on how to use the "
            ],
            [
              "Regex",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class that returns true if the "
            ],
            [
              "input",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " string contains c or d:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An example on how to use the "
          },
          {
            "Text": "Regex",
            "AttrFlags": 2
          },
          {
            "Text": " class that returns true if the "
          },
          {
            "Text": "input",
            "AttrFlags": 2
          },
          {
            "Text": " string contains c or d:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602303,
        "id": "34c372dd-b5c7-4dc7-9933-e945e2a7ed87",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602303,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "val regex = Regex(pattern = \"c|d\")\nval matched = regex.containsMatchIn(input = \"abc\")    // matched: true"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "val regex = Regex(pattern = \"c|d\")\nval matched = regex.containsMatchIn(input = \"abc\")    // matched: true",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602304,
        "id": "4f26e9b5-3336-4a1a-a042-c97e66220816",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602304,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The essential thing to understand with all the "
            ],
            [
              "Regex",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " functions is that the result is based on matching the regex "
            ],
            [
              "pattern",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and the "
            ],
            [
              "input",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " string. Some of the functions requires a full match, while the rest requires only a partial match. The "
            ],
            [
              "containsMatchIn(..)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function used in the example requires a partial match and is explained later in this post."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The essential thing to understand with all the "
          },
          {
            "Text": "Regex",
            "AttrFlags": 2
          },
          {
            "Text": " functions is that the result is based on matching the regex "
          },
          {
            "Text": "pattern",
            "AttrFlags": 2
          },
          {
            "Text": " and the "
          },
          {
            "Text": "input",
            "AttrFlags": 2
          },
          {
            "Text": " string. Some of the functions requires a full match, while the rest requires only a partial match. The "
          },
          {
            "Text": "containsMatchIn(..)",
            "AttrFlags": 2
          },
          {
            "Text": " function used in the example requires a partial match and is explained later in this post."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602304,
        "id": "de4a62ec-66af-4191-a41f-4aa313bce64a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602304,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Null safety with regular expressions"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Null safety with regular expressions"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602305,
        "id": "e5390227-91ce-4aef-845a-fd7542b8d8d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602305,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Both "
            ],
            [
              "find(..)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "matchEntire(..)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will return a "
            ],
            [
              "MatchResult?",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object. The "
            ],
            [
              "?",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " character after "
            ],
            [
              "MatchResult",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is necessary for Kotlin to handle "
            ],
            [
              "null safely",
              [
                [
                  "a",
                  "https://kotlinlang.org/docs/reference/null-safety.html"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Both "
          },
          {
            "Text": "find(..)",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "matchEntire(..)",
            "AttrFlags": 2
          },
          {
            "Text": " will return a "
          },
          {
            "Text": "MatchResult?",
            "AttrFlags": 2
          },
          {
            "Text": " object. The "
          },
          {
            "Text": "?",
            "AttrFlags": 2
          },
          {
            "Text": " character after "
          },
          {
            "Text": "MatchResult",
            "AttrFlags": 2
          },
          {
            "Text": " is necessary for Kotlin to handle "
          },
          {
            "Text": "null safely",
            "Link": "https://kotlinlang.org/docs/reference/null-safety.html"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602306,
        "id": "b5121fe8-0fc4-40d2-ae43-cc1d52db20ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602306,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An example that demonstrates how Kotlin handles null safely from a "
            ],
            [
              "Regex",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function, when the "
            ],
            [
              "find(..)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function returns null:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An example that demonstrates how Kotlin handles null safely from a "
          },
          {
            "Text": "Regex",
            "AttrFlags": 2
          },
          {
            "Text": " function, when the "
          },
          {
            "Text": "find(..)",
            "AttrFlags": 2
          },
          {
            "Text": " function returns null:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602306,
        "id": "4cd64f1c-0bca-4e5c-94ae-25ad62ecb0b8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602306,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "val matchResult = \n    Regex(\"c|d\").find(\"efg\")           // matchResult: null\nval a = matchResult?.value             // a: null\nval b = matchResult?.value.orEmpty()   // b: \"\"\na?.toUpperCase()                       // Still needs question mark. =\u003e null    \nb.toUpperCase()                        // Accesses the function directly. =\u003e \"\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "val matchResult = \n    Regex(\"c|d\").find(\"efg\")           // matchResult: null\nval a = matchResult?.value             // a: null\nval b = matchResult?.value.orEmpty()   // b: \"\"\na?.toUpperCase()                       // Still needs question mark. =\u003e null    \nb.toUpperCase()                        // Accesses the function directly. =\u003e \"\"",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602306,
        "id": "d227a5c6-e634-4a9e-b099-e6c743143def",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602306,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With the "
            ],
            [
              "orEmpty()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function, "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can’t be null and the "
            ],
            [
              "?",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " character is unnecessary when you call functions on "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With the "
          },
          {
            "Text": "orEmpty()",
            "AttrFlags": 2
          },
          {
            "Text": " function, "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": " can’t be null and the "
          },
          {
            "Text": "?",
            "AttrFlags": 2
          },
          {
            "Text": " character is unnecessary when you call functions on "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602306,
        "id": "63db2bd4-7075-416c-b19a-e32c8a214644",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602306,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you don’t care about this safe handling of null values, Kotlin allows you to work with null values like in Java with the "
            ],
            [
              "!!",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " characters:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you don’t care about this safe handling of null values, Kotlin allows you to work with null values like in Java with the "
          },
          {
            "Text": "!!",
            "AttrFlags": 2
          },
          {
            "Text": " characters:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602306,
        "id": "0f38d219-c3dd-4a8a-adeb-186c5a366159",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602306,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "a!!.toUpperCase()                      // =\u003e KotlinNullPointerException"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "a!!.toUpperCase()                      // =\u003e KotlinNullPointerException",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602306,
        "id": "0f663be4-425f-4d1f-9a61-ac86e5956571",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602306,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Raw strings in regex patterns"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Raw strings in regex patterns"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602307,
        "id": "ab61e257-29ff-4e81-b517-f9998f19cca2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602307,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Kotlin provides an improvement over Java with a "
            ],
            [
              "raw string",
              [
                [
                  "a",
                  "https://kotlinlang.org/docs/reference/basic-types.html#string-literals"
                ]
              ]
            ],
            [
              " that makes it possible to write pure regex patterns without double backslashes, that are necessary with a Java string. A raw string is represented with a triple quote:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Kotlin provides an improvement over Java with a "
          },
          {
            "Text": "raw string",
            "Link": "https://kotlinlang.org/docs/reference/basic-types.html#string-literals"
          },
          {
            "Text": " that makes it possible to write pure regex patterns without double backslashes, that are necessary with a Java string. A raw string is represented with a triple quote:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602307,
        "id": "51964d3d-5ee6-4885-ad49-57cdea3ce862",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602307,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\"\"\"\\d{3}-\\d{3}-\\d{4}\"\"\" // raw Kotlin string\n\"\\\\d{3}-\\\\d{3}-\\\\d{4}\"  // standard Java string"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\"\"\"\\d{3}-\\d{3}-\\d{4}\"\"\" // raw Kotlin string\n\"\\\\d{3}-\\\\d{3}-\\\\d{4}\"  // standard Java string",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602307,
        "id": "138295d9-6c90-42ca-bc7d-f4b65671aa03",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602307,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "find(input: CharSequence, startIndex: Int): MatchResult?"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "find(input: CharSequence, startIndex: Int): MatchResult?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602307,
        "id": "5c8974d4-43ed-4325-a330-5bac384f138a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602307,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "input",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " string will be matched against the "
            ],
            [
              "pattern",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the "
            ],
            [
              "Regex",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object. It returns a "
            ],
            [
              "Matchresult?",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object with the first matched text after the "
            ],
            [
              "startIndex",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", or "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if the pattern didn’t match the "
            ],
            [
              "input",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " string. The result string is retrieved from the "
            ],
            [
              "MatchResult?",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object’s "
            ],
            [
              "value",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " property. The "
            ],
            [
              "startIndex",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " parameter is optional with the default value 0."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "input",
            "AttrFlags": 2
          },
          {
            "Text": " string will be matched against the "
          },
          {
            "Text": "pattern",
            "AttrFlags": 2
          },
          {
            "Text": " in the "
          },
          {
            "Text": "Regex",
            "AttrFlags": 2
          },
          {
            "Text": " object. It returns a "
          },
          {
            "Text": "Matchresult?",
            "AttrFlags": 2
          },
          {
            "Text": " object with the first matched text after the "
          },
          {
            "Text": "startIndex",
            "AttrFlags": 2
          },
          {
            "Text": ", or "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": " if the pattern didn’t match the "
          },
          {
            "Text": "input",
            "AttrFlags": 2
          },
          {
            "Text": " string. The result string is retrieved from the "
          },
          {
            "Text": "MatchResult?",
            "AttrFlags": 2
          },
          {
            "Text": " object’s "
          },
          {
            "Text": "value",
            "AttrFlags": 2
          },
          {
            "Text": " property. The "
          },
          {
            "Text": "startIndex",
            "AttrFlags": 2
          },
          {
            "Text": " parameter is optional with the default value 0."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602307,
        "id": "0299f26f-d099-4e90-93df-30cdca50eb32",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602307,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To extract the first valid phone number from a string with contact details:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To extract the first valid phone number from a string with contact details:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602308,
        "id": "2bc3c6b8-262a-4214-9040-413b5364b1a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602308,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "val phoneNumber :String? = Regex(pattern = \"\"\"\\d{3}-\\d{3}-\\d{4}\"\"\")\n    .find(input = \"phone: 123-456-7890, e..\")?.value // phoneNumber: 123-456-7890"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "val phoneNumber :String? = Regex(pattern = \"\"\"\\d{3}-\\d{3}-\\d{4}\"\"\")\n    .find(input = \"phone: 123-456-7890, e..\")?.value // phoneNumber: 123-456-7890",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602308,
        "id": "1bb43345-50e9-48bc-be0a-ef44ac250723",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602308,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With no valid phone number in the "
            ],
            [
              "input",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " string, the variable "
            ],
            [
              "phoneNumber",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With no valid phone number in the "
          },
          {
            "Text": "input",
            "AttrFlags": 2
          },
          {
            "Text": " string, the variable "
          },
          {
            "Text": "phoneNumber",
            "AttrFlags": 2
          },
          {
            "Text": " will be "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602308,
        "id": "2197be43-45b6-4a3f-ac66-a14151a16e5f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602308,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "findAll(input: CharSequence, startIndex: Int): Sequence"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "findAll(input: CharSequence, startIndex: Int): Sequence"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602308,
        "id": "e51bd249-ebd7-4b9c-bcfa-c369de331bc0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602308,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Returns all the matches from the "
            ],
            [
              "input",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " string that matches the regex "
            ],
            [
              "pattern",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Returns all the matches from the "
          },
          {
            "Text": "input",
            "AttrFlags": 2
          },
          {
            "Text": " string that matches the regex "
          },
          {
            "Text": "pattern",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602308,
        "id": "e2ebc97d-dbc7-4277-81ee-84229472c7af",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602308,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To print out all numbers separated with space, from a text with letters and digits:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To print out all numbers separated with space, from a text with letters and digits:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602308,
        "id": "9f43f509-722c-49a9-ac53-b63482bfef38",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602308,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "val matchedResults = Regex(pattern = \"\"\"\\d+\"\"\").findAll(input = \"ab12cd34ef\")\nval result = StringBuilder()\nfor (matchedText in matchedResults) {\n    result.append(matchedText.value + \" \")\n}\n\nprintln(result) // =\u003e 12 34"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "val matchedResults = Regex(pattern = \"\"\"\\d+\"\"\").findAll(input = \"ab12cd34ef\")\nval result = StringBuilder()\nfor (matchedText in matchedResults) {\n    result.append(matchedText.value + \" \")\n}\n\nprintln(result) // =\u003e 12 34",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602308,
        "id": "af15bd5b-b7ea-4966-9d9b-4a60cb6dc198",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602308,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "matchedResults",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variable is a sequence with "
            ],
            [
              "MatchResult",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " objects. With an "
            ],
            [
              "input",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " string without digits, the "
            ],
            [
              "findAll(..)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function will return an empty sequence."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "matchedResults",
            "AttrFlags": 2
          },
          {
            "Text": " variable is a sequence with "
          },
          {
            "Text": "MatchResult",
            "AttrFlags": 2
          },
          {
            "Text": " objects. With an "
          },
          {
            "Text": "input",
            "AttrFlags": 2
          },
          {
            "Text": " string without digits, the "
          },
          {
            "Text": "findAll(..)",
            "AttrFlags": 2
          },
          {
            "Text": " function will return an empty sequence."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602309,
        "id": "c092b5de-e5f0-4146-a416-f99e0f0568a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602309,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "matchEntire(input: CharSequence): MatchResult?"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "matchEntire(input: CharSequence): MatchResult?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602309,
        "id": "f16f61e3-d791-4198-8c24-151654bdf2bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602309,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If all the characters in the "
            ],
            [
              "input",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " string matches the regex "
            ],
            [
              "pattern",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", a string equal to the "
            ],
            [
              "input",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be returned. Else, "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be returned."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If all the characters in the "
          },
          {
            "Text": "input",
            "AttrFlags": 2
          },
          {
            "Text": " string matches the regex "
          },
          {
            "Text": "pattern",
            "AttrFlags": 2
          },
          {
            "Text": ", a string equal to the "
          },
          {
            "Text": "input",
            "AttrFlags": 2
          },
          {
            "Text": " will be returned. Else, "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": " will be returned."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602309,
        "id": "d190b238-f51c-4643-a71c-003704da4204",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602309,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Returns the input string if the whole input string is a number:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Returns the input string if the whole input string is a number:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602309,
        "id": "aafef36c-4588-452e-bd32-9003f9fb703d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602309,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "val a = Regex(\"\"\"\\d+\"\"\").matchEntire(\"100\")?.value             // a: 100\nval b = Regex(\"\"\"\\d+\"\"\").matchEntire(\"100 dollars\")?.value     // b: null"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "val a = Regex(\"\"\"\\d+\"\"\").matchEntire(\"100\")?.value             // a: 100\nval b = Regex(\"\"\"\\d+\"\"\").matchEntire(\"100 dollars\")?.value     // b: null",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602309,
        "id": "7b0508e1-cc50-40de-960b-7f1105be8d9f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602309,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "matches(input: CharSequence): Boolean"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "matches(input: CharSequence): Boolean"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602309,
        "id": "36031c50-79a1-4edc-bf0d-7ecf79c10857",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602309,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Returns true if the whole input string matches the regex pattern. False otherwise."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Returns true if the whole input string matches the regex pattern. False otherwise."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602309,
        "id": "caa3fc5e-5848-4138-8605-f81bf17903fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602309,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Tests if two strings contains only digits:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Tests if two strings contains only digits:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602309,
        "id": "24eb8581-c1e1-4db4-b961-91bde5788854",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602309,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "val regex = Regex(pattern = \"\"\"\\d+\"\"\")\nregex.matches(input = \"50\")             // =\u003e true\nregex.matches(input = \"50 dollars\")     // =\u003e false"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "val regex = Regex(pattern = \"\"\"\\d+\"\"\")\nregex.matches(input = \"50\")             // =\u003e true\nregex.matches(input = \"50 dollars\")     // =\u003e false",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602309,
        "id": "992943cc-4dae-49ff-8f75-82a1f9df34be",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602309,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "containsMatchIn(input: CharSequence): Boolean"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "containsMatchIn(input: CharSequence): Boolean"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602310,
        "id": "c99c1160-9edf-4326-ae5c-7f38f7f1e2e2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602310,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Returns true if part of the input string matches the regex pattern. False otherwise."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Returns true if part of the input string matches the regex pattern. False otherwise."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602310,
        "id": "6ea725fd-e1ca-4a64-b083-4c47f69fbc9a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602310,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Test if two strings contains at least one digit:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Test if two strings contains at least one digit:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602310,
        "id": "9ad02fd3-1bc9-4ae7-92ee-b6afe2920c2b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602310,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Regex(\"\"\"\\d+\"\"\").containsMatchIn(\"50 dollars\")       // =\u003e true\nRegex(\"\"\"\\d+\"\"\").containsMatchIn(\"Fifty dollars\")    // =\u003e false"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Regex(\"\"\"\\d+\"\"\").containsMatchIn(\"50 dollars\")       // =\u003e true\nRegex(\"\"\"\\d+\"\"\").containsMatchIn(\"Fifty dollars\")    // =\u003e false",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602310,
        "id": "395978a9-2447-4c35-ad35-c3c563ef2c99",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602310,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "split(input: CharSequence, limit: Int): List"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "split(input: CharSequence, limit: Int): List"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602310,
        "id": "5b54d41d-098b-4fed-afe0-20744143bf22",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602310,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Returns a new list without all the regex matches."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Returns a new list without all the regex matches."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602310,
        "id": "57921791-b754-40a2-9a07-e851416fcda7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602310,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To return lists without digits:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To return lists without digits:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602310,
        "id": "25b21b83-d82b-45d9-a280-222264ce886f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602310,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "val a = Regex(\"\"\"\\d+\"\"\").split(\"ab12cd34ef\")     // a: [ab, cd, ef]\nval b = Regex(\"\"\"\\d+\"\"\").split(\"This is a test\") // b: [This is a test]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "val a = Regex(\"\"\"\\d+\"\"\").split(\"ab12cd34ef\")     // a: [ab, cd, ef]\nval b = Regex(\"\"\"\\d+\"\"\").split(\"This is a test\") // b: [This is a test]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602310,
        "id": "b1436a0b-e0cf-4a56-9d68-3ac592656d28",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602310,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There is one element in the list for each split. The first "
            ],
            [
              "input",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " string has three numbers. That results in a list with three elements."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There is one element in the list for each split. The first "
          },
          {
            "Text": "input",
            "AttrFlags": 2
          },
          {
            "Text": " string has three numbers. That results in a list with three elements."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602310,
        "id": "6e92fc6c-c9d9-4506-ba56-eb7f439121d2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602310,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "replace(input: CharSequence, replacement: String): String"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "replace(input: CharSequence, replacement: String): String"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602310,
        "id": "0edce58f-0ac2-471f-b7a4-65988f452774",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602310,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Replaces all matches of the regex "
            ],
            [
              "pattern",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the "
            ],
            [
              "input",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " string with the replacement string."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Replaces all matches of the regex "
          },
          {
            "Text": "pattern",
            "AttrFlags": 2
          },
          {
            "Text": " in the "
          },
          {
            "Text": "input",
            "AttrFlags": 2
          },
          {
            "Text": " string with the replacement string."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602311,
        "id": "a7e72267-8a12-41e0-ad43-fb600f413c67",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602311,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To replace all digits in a string with an x:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To replace all digits in a string with an x:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459602311,
        "id": "9dbaaff7-16b4-4c15-aee1-1d12e1ffd4d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459602311,
        "parent_id": "379f5fb7-ec33-4a1f-ae4c-816c97d567a0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "val result = Regex(\"\"\"\\d+\"\"\").replace(\"ab12cd34ef\", \"x\") // result: abxcdxef"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "val result = Regex(\"\"\"\\d+\"\"\").replace(\"ab12cd34ef\", \"x\") // result: abxcdxef",
        "code_language": "Plain Text"
      }
    ],
    "title": "Introduction to regular expressions in Kotlin",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}