{
  "ID": "76e3a75f-98a0-4746-a68a-7c24e57b3a1e",
  "Root": {
    "alive": true,
    "content": [
      "50167e68-6552-485f-92ba-9d9b173f94a7",
      "9aa9e141-ce74-4813-98fb-475eeec924a7",
      "2ba1d6d8-7dda-49ab-969c-244f1db8a258",
      "43f3253d-d198-47e7-83d1-bf9bdf79deca",
      "5671cd0b-6a75-43ac-aa2b-9c99312c1a52",
      "14bd4d69-ca08-4db8-a816-404fe11c2075",
      "2a9771e8-23ae-46ad-84b1-1818823e02a1"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550459246422,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "76e3a75f-98a0-4746-a68a-7c24e57b3a1e",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550479740000,
    "parent_id": "80bde4e7-5e0e-4d44-9888-69827930ae4c",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Elvis Operator "
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459246420,
        "id": "50167e68-6552-485f-92ba-9d9b173f94a7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459246420,
        "parent_id": "76e3a75f-98a0-4746-a68a-7c24e57b3a1e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Kotlin, we can declare variable which can hold "
            ],
            [
              "null reference",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Suppose we have a nullable reference "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", we can say “if "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not null, use it, otherwise use some non-null value "
            ],
            [
              "x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "”"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Kotlin, we can declare variable which can hold "
          },
          {
            "Text": "null reference",
            "AttrFlags": 2
          },
          {
            "Text": ". Suppose we have a nullable reference "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": ", we can say “if "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " is not null, use it, otherwise use some non-null value "
          },
          {
            "Text": "x",
            "AttrFlags": 2
          },
          {
            "Text": "”"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459246421,
        "id": "9aa9e141-ce74-4813-98fb-475eeec924a7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459246421,
        "parent_id": "76e3a75f-98a0-4746-a68a-7c24e57b3a1e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var a: String? = \"Nullable String Value\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var a: String? = \"Nullable String Value\"",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459246421,
        "id": "2ba1d6d8-7dda-49ab-969c-244f1db8a258",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459246421,
        "parent_id": "76e3a75f-98a0-4746-a68a-7c24e57b3a1e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now, "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be null. So when we need to access value of "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", then we need to perform safety check, whether it contains value or not. We can perform this safety check by conventional "
            ],
            [
              "if...else",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now, "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " can be null. So when we need to access value of "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": ", then we need to perform safety check, whether it contains value or not. We can perform this safety check by conventional "
          },
          {
            "Text": "if...else",
            "AttrFlags": 2
          },
          {
            "Text": " statement."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459246421,
        "id": "43f3253d-d198-47e7-83d1-bf9bdf79deca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459246421,
        "parent_id": "76e3a75f-98a0-4746-a68a-7c24e57b3a1e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "val b: Int = if (a != null) a.length else -1"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "val b: Int = if (a != null) a.length else -1",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459246421,
        "id": "5671cd0b-6a75-43ac-aa2b-9c99312c1a52",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459246421,
        "parent_id": "76e3a75f-98a0-4746-a68a-7c24e57b3a1e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But here comes advance operator "
            ],
            [
              "Elvis",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "(Operator Elvis : "
            ],
            [
              "?:",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "). Above "
            ],
            [
              "if...else",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be expressed with the Elvis operator as below:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But here comes advance operator "
          },
          {
            "Text": "Elvis",
            "AttrFlags": 2
          },
          {
            "Text": "(Operator Elvis : "
          },
          {
            "Text": "?:",
            "AttrFlags": 2
          },
          {
            "Text": "). Above "
          },
          {
            "Text": "if...else",
            "AttrFlags": 2
          },
          {
            "Text": " can be expressed with the Elvis operator as below:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459246422,
        "id": "14bd4d69-ca08-4db8-a816-404fe11c2075",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459246422,
        "parent_id": "76e3a75f-98a0-4746-a68a-7c24e57b3a1e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "val b = a?.length ?: -1"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "val b = a?.length ?: -1",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459246422,
        "id": "2a9771e8-23ae-46ad-84b1-1818823e02a1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459246422,
        "parent_id": "76e3a75f-98a0-4746-a68a-7c24e57b3a1e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the expression to the left of "
            ],
            [
              "?:",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (here : "
            ],
            [
              "a?.length",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") is not null, the elvis operator returns it, otherwise it returns the expression to the right (here: "
            ],
            [
              "-1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "). Right-hand side expression is evaluated only if the left-hand side is null."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the expression to the left of "
          },
          {
            "Text": "?:",
            "AttrFlags": 2
          },
          {
            "Text": " (here : "
          },
          {
            "Text": "a?.length",
            "AttrFlags": 2
          },
          {
            "Text": ") is not null, the elvis operator returns it, otherwise it returns the expression to the right (here: "
          },
          {
            "Text": "-1",
            "AttrFlags": 2
          },
          {
            "Text": "). Right-hand side expression is evaluated only if the left-hand side is null."
          }
        ]
      }
    ],
    "title": "Elvis Operator ",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}