{
  "ID": "4a783985-429e-41ba-bb5f-97a42862f71f",
  "Root": {
    "alive": true,
    "content": [
      "daa94438-a784-4acf-a186-1bca9d168226",
      "e86c6b49-3305-4606-abf7-7491a141b1cf",
      "963efff3-0d7b-4b5a-be9d-11711cc9fdd4",
      "a7150690-8b05-4185-83de-3c148ab159ca",
      "81aa6fd1-25c3-4e63-bfa1-10d46fcf3987",
      "edfb0687-7ac1-4ea6-827f-d6cb6d100264"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550459191579,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "4a783985-429e-41ba-bb5f-97a42862f71f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550479980000,
    "parent_id": "ee8e0a58-ce4d-49f2-95cf-589d789b64da",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Extension Methods"
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459191576,
        "id": "daa94438-a784-4acf-a186-1bca9d168226",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459191576,
        "parent_id": "4a783985-429e-41ba-bb5f-97a42862f71f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Syntax"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Syntax"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459191578,
        "id": "e86c6b49-3305-4606-abf7-7491a141b1cf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459191578,
        "parent_id": "4a783985-429e-41ba-bb5f-97a42862f71f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "fun TypeName.extensionName(params, …) { /* body */ } // Declaration"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "fun TypeName.extensionName(params, …) { /* body */ } // Declaration"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459191579,
        "id": "963efff3-0d7b-4b5a-be9d-11711cc9fdd4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459191579,
        "parent_id": "4a783985-429e-41ba-bb5f-97a42862f71f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "fun \u003cT: Any\u003e TypeNameWithGenerics\u003cT\u003e.extensionName(params, …) { /* body */ } // Declaration with Generics"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "fun \u003cT: Any\u003e TypeNameWithGenerics\u003cT\u003e.extensionName(params, …) { /* body */ } // Declaration with Generics"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459191579,
        "id": "a7150690-8b05-4185-83de-3c148ab159ca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459191579,
        "parent_id": "4a783985-429e-41ba-bb5f-97a42862f71f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "myObj.extensionName(args, …) // invocation"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "myObj.extensionName(args, …) // invocation"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459191579,
        "id": "81aa6fd1-25c3-4e63-bfa1-10d46fcf3987",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459191579,
        "parent_id": "4a783985-429e-41ba-bb5f-97a42862f71f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459191579,
        "id": "edfb0687-7ac1-4ea6-827f-d6cb6d100264",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459191579,
        "parent_id": "4a783985-429e-41ba-bb5f-97a42862f71f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Extensions are resolved "
            ],
            [
              "statically",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". This means that the extension method to be used is determined by the reference-type of the variable you are accessing; it doesn’t matter what the variable’s type is at runtime, the same extension method will always be called. This is because "
            ],
            [
              "declaring an extension method doesn’t actually add a member to the receiver type",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Extensions are resolved "
          },
          {
            "Text": "statically",
            "AttrFlags": 1
          },
          {
            "Text": ". This means that the extension method to be used is determined by the reference-type of the variable you are accessing; it doesn’t matter what the variable’s type is at runtime, the same extension method will always be called. This is because "
          },
          {
            "Text": "declaring an extension method doesn’t actually add a member to the receiver type",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Extension Methods",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}