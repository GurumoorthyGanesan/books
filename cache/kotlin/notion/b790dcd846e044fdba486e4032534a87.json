{
  "ID": "b790dcd8-46e0-44fd-ba48-6e4032534a87",
  "Root": {
    "alive": true,
    "content": [
      "5425eaf2-a1f2-4419-a714-971a9cbcf10b",
      "2d79b81a-c5be-4494-a80c-1efabdcce7de",
      "11b8a381-8c93-476f-861b-f775159bc8ca",
      "270ce483-e9a1-4a33-bbc1-e85ecd469d63",
      "6475632d-0a2f-4b93-8fbc-6ec84acc3388",
      "b07f012a-1f67-4835-9442-4318733781fa"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550459206169,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "b790dcd8-46e0-44fd-ba48-6e4032534a87",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550479920000,
    "parent_id": "9714a780-3ee8-4e3d-95bb-973e02de4953",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Collect example 6 - group people by age print age and names together"
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459206166,
        "id": "5425eaf2-a1f2-4419-a714-971a9cbcf10b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459206166,
        "parent_id": "b790dcd8-46e0-44fd-ba48-6e4032534a87",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Java:\nMap\u003cInteger, String\u003e map = persons\n        .stream()\n        .collect(Collectors.toMap(\n                p -\u003e p.age,\n                p -\u003e p.name,\n                (name1, name2) -\u003e name1 + \";\" + name2));\n\nSystem.out.println(map);\n// {18=Max, 23=Peter;Pamela, 12=David}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Java:\nMap\u003cInteger, String\u003e map = persons\n        .stream()\n        .collect(Collectors.toMap(\n                p -\u003e p.age,\n                p -\u003e p.name,\n                (name1, name2) -\u003e name1 + \";\" + name2));\n\nSystem.out.println(map);\n// {18=Max, 23=Peter;Pamela, 12=David}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459206168,
        "id": "2d79b81a-c5be-4494-a80c-1efabdcce7de",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459206168,
        "parent_id": "b790dcd8-46e0-44fd-ba48-6e4032534a87",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Ok, a more interest case here for Kotlin. First the wrong answers to explore variations of creating a "
            ],
            [
              "Map",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " from a collection/sequence:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Ok, a more interest case here for Kotlin. First the wrong answers to explore variations of creating a "
          },
          {
            "Text": "Map",
            "AttrFlags": 2
          },
          {
            "Text": " from a collection/sequence:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459206169,
        "id": "11b8a381-8c93-476f-861b-f775159bc8ca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459206169,
        "parent_id": "b790dcd8-46e0-44fd-ba48-6e4032534a87",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Kotlin:\nval map1 = persons.map { it.age to it.name }.toMap()\nprintln(map1)\n// output: {18=Max, 23=Pamela, 12=David} \n// Result: duplicates overridden, no exception similar to Java 8\n\nval map2 = persons.toMap({ it.age }, { it.name })\nprintln(map2)\n// output: {18=Max, 23=Pamela, 12=David} \n// Result: same as above, more verbose, duplicates overridden\n\nval map3 = persons.toMapBy { it.age }\nprintln(map3)\n// output: {18=Person(name=Max, age=18), 23=Person(name=Pamela, age=23), 12=Person(name=David, age=12)}\n// Result: duplicates overridden again\n\nval map4 = persons.groupBy { it.age }\nprintln(map4)\n// output: {18=[Person(name=Max, age=18)], 23=[Person(name=Peter, age=23), Person(name=Pamela, age=23)], 12=[Person(name=David, age=12)]}\n// Result: closer, but now have a Map\u003cInt, List\u003cPerson\u003e\u003e instead of Map\u003cInt, String\u003e\n\nval map5 = persons.groupBy { it.age }.mapValues { it.value.map { it.name } }\nprintln(map5)\n// output: {18=[Max], 23=[Peter, Pamela], 12=[David]}\n// Result: closer, but now have a Map\u003cInt, List\u003cString\u003e\u003e instead of Map\u003cInt, String\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Kotlin:\nval map1 = persons.map { it.age to it.name }.toMap()\nprintln(map1)\n// output: {18=Max, 23=Pamela, 12=David} \n// Result: duplicates overridden, no exception similar to Java 8\n\nval map2 = persons.toMap({ it.age }, { it.name })\nprintln(map2)\n// output: {18=Max, 23=Pamela, 12=David} \n// Result: same as above, more verbose, duplicates overridden\n\nval map3 = persons.toMapBy { it.age }\nprintln(map3)\n// output: {18=Person(name=Max, age=18), 23=Person(name=Pamela, age=23), 12=Person(name=David, age=12)}\n// Result: duplicates overridden again\n\nval map4 = persons.groupBy { it.age }\nprintln(map4)\n// output: {18=[Person(name=Max, age=18)], 23=[Person(name=Peter, age=23), Person(name=Pamela, age=23)], 12=[Person(name=David, age=12)]}\n// Result: closer, but now have a Map\u003cInt, List\u003cPerson\u003e\u003e instead of Map\u003cInt, String\u003e\n\nval map5 = persons.groupBy { it.age }.mapValues { it.value.map { it.name } }\nprintln(map5)\n// output: {18=[Max], 23=[Peter, Pamela], 12=[David]}\n// Result: closer, but now have a Map\u003cInt, List\u003cString\u003e\u003e instead of Map\u003cInt, String\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459206169,
        "id": "270ce483-e9a1-4a33-bbc1-e85ecd469d63",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459206169,
        "parent_id": "b790dcd8-46e0-44fd-ba48-6e4032534a87",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And now for the correct answer:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And now for the correct answer:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459206169,
        "id": "6475632d-0a2f-4b93-8fbc-6ec84acc3388",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459206169,
        "parent_id": "b790dcd8-46e0-44fd-ba48-6e4032534a87",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Kotlin:\nval map6 = persons.groupBy { it.age }.mapValues { it.value.joinToString(\";\") { it.name } }\n\nprintln(map6)\n// output: {18=Max, 23=Peter;Pamela, 12=David}\n// Result: YAY!!"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Kotlin:\nval map6 = persons.groupBy { it.age }.mapValues { it.value.joinToString(\";\") { it.name } }\n\nprintln(map6)\n// output: {18=Max, 23=Peter;Pamela, 12=David}\n// Result: YAY!!",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459206169,
        "id": "b07f012a-1f67-4835-9442-4318733781fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459206169,
        "parent_id": "b790dcd8-46e0-44fd-ba48-6e4032534a87",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We just needed to join the matching values to collapse the lists and provide a transformer to "
            ],
            [
              "joinToString",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to move from "
            ],
            [
              "Person",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instance to the "
            ],
            [
              "Person.name",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We just needed to join the matching values to collapse the lists and provide a transformer to "
          },
          {
            "Text": "joinToString",
            "AttrFlags": 2
          },
          {
            "Text": " to move from "
          },
          {
            "Text": "Person",
            "AttrFlags": 2
          },
          {
            "Text": " instance to the "
          },
          {
            "Text": "Person.name",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Collect example 6 - group people by age print age and names together",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}