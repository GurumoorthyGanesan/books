{
  "ID": "470606f6-b87a-413a-b921-3367e2e964df",
  "Root": {
    "alive": true,
    "content": [
      "8285ddf7-1a54-4778-b5d3-a93061563adf",
      "5b1bb757-6e0e-4e11-bf61-01ed64544dd7",
      "ce555b6b-d577-41e8-90ff-89e82cdb04d3",
      "7239e174-5b36-4790-9b77-d8bc45200ccf"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550459251198,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "470606f6-b87a-413a-b921-3367e2e964df",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550479680000,
    "parent_id": "6b53e974-40cc-4aad-aa35-242fe987be21",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Delegate to a class without providing it in the public constructor"
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459251197,
        "id": "8285ddf7-1a54-4778-b5d3-a93061563adf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459251197,
        "parent_id": "470606f6-b87a-413a-b921-3367e2e964df",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Assume you want to "
            ],
            [
              "delegate to a class",
              [
                [
                  "a",
                  "https://kotlinlang.org/docs/reference/delegation.html#class-delegation"
                ]
              ]
            ],
            [
              " but you do not want to provide the delegated-to class in the constructor parameter. Instead, you want to construct it privately, making the constructor caller unaware of it. At first this might seem impossible because class delegation allows to delegate only to constructor parameters. However, there is a way to do it, as given in "
            ],
            [
              "this answer",
              [
                [
                  "a",
                  "http://stackoverflow.com/a/37598292/986533"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Assume you want to "
          },
          {
            "Text": "delegate to a class",
            "Link": "https://kotlinlang.org/docs/reference/delegation.html#class-delegation"
          },
          {
            "Text": " but you do not want to provide the delegated-to class in the constructor parameter. Instead, you want to construct it privately, making the constructor caller unaware of it. At first this might seem impossible because class delegation allows to delegate only to constructor parameters. However, there is a way to do it, as given in "
          },
          {
            "Text": "this answer",
            "Link": "http://stackoverflow.com/a/37598292/986533"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459251197,
        "id": "5b1bb757-6e0e-4e11-bf61-01ed64544dd7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459251197,
        "parent_id": "470606f6-b87a-413a-b921-3367e2e964df",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class MyTable private constructor(table: Table\u003cInt, Int, Int\u003e) : Table\u003cInt, Int, Int\u003e by table {\n\n    constructor() : this(TreeBasedTable.create()) // or a different type of table if desired\n\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class MyTable private constructor(table: Table\u003cInt, Int, Int\u003e) : Table\u003cInt, Int, Int\u003e by table {\n\n    constructor() : this(TreeBasedTable.create()) // or a different type of table if desired\n\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459251198,
        "id": "ce555b6b-d577-41e8-90ff-89e82cdb04d3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459251198,
        "parent_id": "470606f6-b87a-413a-b921-3367e2e964df",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With this, you can just call the constructor of "
            ],
            [
              "MyTable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " like that: "
            ],
            [
              "MyTable()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The "
            ],
            [
              "Table\u003cInt, Int, Int\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to which "
            ],
            [
              "MyTable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " delegates will be created privately. Constructor caller knows nothing about it."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With this, you can just call the constructor of "
          },
          {
            "Text": "MyTable",
            "AttrFlags": 2
          },
          {
            "Text": " like that: "
          },
          {
            "Text": "MyTable()",
            "AttrFlags": 2
          },
          {
            "Text": ". The "
          },
          {
            "Text": "Table\u003cInt, Int, Int\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " to which "
          },
          {
            "Text": "MyTable",
            "AttrFlags": 2
          },
          {
            "Text": " delegates will be created privately. Constructor caller knows nothing about it."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550459251198,
        "id": "7239e174-5b36-4790-9b77-d8bc45200ccf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550459251198,
        "parent_id": "470606f6-b87a-413a-b921-3367e2e964df",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example is based on "
            ],
            [
              "this SO question",
              [
                [
                  "a",
                  "http://stackoverflow.com/q/37593738/986533"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example is based on "
          },
          {
            "Text": "this SO question",
            "Link": "http://stackoverflow.com/q/37593738/986533"
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Delegate to a class without providing it in the public constructor",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}