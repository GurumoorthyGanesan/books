{
  "ID": "7592147b-dbd7-472c-ae14-184bc44dfbbe",
  "Root": {
    "alive": true,
    "content": [
      "adc295a5-76cb-4920-8afa-2134ad735d7b",
      "78800994-6fc6-4dda-923f-32975d630202",
      "a8ae952d-507f-4d92-9bda-ae6d22299b59",
      "685e038d-68be-45da-8988-fb39eadc9d52",
      "6fc3fc95-faa9-4fe9-b833-1bf708e08974"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550457231121,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "7592147b-dbd7-472c-ae14-184bc44dfbbe",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550481300000,
    "parent_id": "1510aabf-3d91-444b-9b1c-9e2851cc9c49",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Map each element in the collection."
        ]
      ]
    },
    "type": "page",
    "version": 11,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457231118,
        "id": "adc295a5-76cb-4920-8afa-2134ad735d7b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457231118,
        "parent_id": "7592147b-dbd7-472c-ae14-184bc44dfbbe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All collection objects contain a "
            ],
            [
              "map",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method that takes a "
            ],
            [
              "Function",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as an argument, which must take a single argument. This returns an "
            ],
            [
              "Iterable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " backed by the collection. When the "
            ],
            [
              "Iterable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is iterated, each step calls the function with a new element of the collection, and the result of the call becomes the next element of the iteration."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All collection objects contain a "
          },
          {
            "Text": "map",
            "AttrFlags": 2
          },
          {
            "Text": " method that takes a "
          },
          {
            "Text": "Function",
            "AttrFlags": 2
          },
          {
            "Text": " as an argument, which must take a single argument. This returns an "
          },
          {
            "Text": "Iterable",
            "AttrFlags": 2
          },
          {
            "Text": " backed by the collection. When the "
          },
          {
            "Text": "Iterable",
            "AttrFlags": 2
          },
          {
            "Text": " is iterated, each step calls the function with a new element of the collection, and the result of the call becomes the next element of the iteration."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457231121,
        "id": "78800994-6fc6-4dda-923f-32975d630202",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457231121,
        "parent_id": "7592147b-dbd7-472c-ae14-184bc44dfbbe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can turn an "
            ],
            [
              "Iterable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " into a collection again by using the "
            ],
            [
              "Iterable.toSet()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "Iterable.toList()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " methods, or by using a collection constructor which takes an iterable like "
            ],
            [
              "Queue.from",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "List.from",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can turn an "
          },
          {
            "Text": "Iterable",
            "AttrFlags": 2
          },
          {
            "Text": " into a collection again by using the "
          },
          {
            "Text": "Iterable.toSet()",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "Iterable.toList()",
            "AttrFlags": 2
          },
          {
            "Text": " methods, or by using a collection constructor which takes an iterable like "
          },
          {
            "Text": "Queue.from",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "List.from",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457231121,
        "id": "a8ae952d-507f-4d92-9bda-ae6d22299b59",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457231121,
        "parent_id": "7592147b-dbd7-472c-ae14-184bc44dfbbe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457231121,
        "id": "685e038d-68be-45da-8988-fb39eadc9d52",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550481300000,
        "parent_id": "7592147b-dbd7-472c-ae14-184bc44dfbbe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Dart"
            ]
          ],
          "title": [
            [
              "main() {\n  var cats = [\n    'Abyssinian',\n    'Scottish Fold',\n    'Domestic Shorthair'\n  ];\n\n  print(cats); // [Abyssinian, Scottish Fold, Domestic Shorthair]\n\n  var catsInReverse =\n  cats.map((String cat) {\n    return new String.fromCharCodes(cat.codeUnits.reversed);\n  })\n  .toList(); // [nainissybA, dloF hsittocS, riahtrohS citsemoD]\n\n  print(catsInReverse);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "main() {\n  var cats = [\n    'Abyssinian',\n    'Scottish Fold',\n    'Domestic Shorthair'\n  ];\n\n  print(cats); // [Abyssinian, Scottish Fold, Domestic Shorthair]\n\n  var catsInReverse =\n  cats.map((String cat) {\n    return new String.fromCharCodes(cat.codeUnits.reversed);\n  })\n  .toList(); // [nainissybA, dloF hsittocS, riahtrohS citsemoD]\n\n  print(catsInReverse);\n}",
        "code_language": "Dart"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457231121,
        "id": "6fc3fc95-faa9-4fe9-b833-1bf708e08974",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457231121,
        "parent_id": "7592147b-dbd7-472c-ae14-184bc44dfbbe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "See dartpad example here: https://dartpad.dartlang.org/a18367ff767f172b34ff03c7008a6fa1"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "See dartpad example here: https://dartpad.dartlang.org/a18367ff767f172b34ff03c7008a6fa1"
          }
        ]
      }
    ],
    "title": "Map each element in the collection.",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}