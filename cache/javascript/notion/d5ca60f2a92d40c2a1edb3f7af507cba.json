{
  "ID": "d5ca60f2-a92d-40c2-a1ed-b3f7af507cba",
  "Root": {
    "alive": true,
    "content": [
      "61960027-1629-4362-ab78-5e07f3af1d42",
      "aa90c05a-a55e-4a73-9128-d5642f04d1ea",
      "34fbdd8e-644b-435e-b2ca-c0f7b2b0315e",
      "74a78cc7-d8c0-4de4-878f-e08bae3e56dc",
      "6942b44a-13a2-4f86-b1aa-12defc5fab63",
      "fe7fa90a-f644-4f8c-bcad-3a132c89d87c",
      "6fa38f72-26b5-4311-9c82-337e9c9eac39",
      "d258a2d7-0dd9-4ef1-8d45-36c4f1c445c7",
      "0e3eb43b-e1f0-4023-8775-8feda178fbbc",
      "314ab54c-63e7-4629-a6c9-be45aaad628f",
      "fa0c2a42-61b8-4886-a9e3-854d274f3991",
      "9f38caee-6406-4d59-9604-a9fc57e54fff"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550714965131,
    "id": "d5ca60f2-a92d-40c2-a1ed-b3f7af507cba",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550714965131,
    "parent_id": "258d5f6e-0cc0-4d61-b286-ea3a708b3390",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Function Scoping"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714965114,
        "id": "61960027-1629-4362-ab78-5e07f3af1d42",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714965114,
        "parent_id": "d5ca60f2-a92d-40c2-a1ed-b3f7af507cba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When you define a function, it creates a "
            ],
            [
              "scope",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When you define a function, it creates a "
          },
          {
            "Text": "scope",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714965116,
        "id": "aa90c05a-a55e-4a73-9128-d5642f04d1ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714965116,
        "parent_id": "d5ca60f2-a92d-40c2-a1ed-b3f7af507cba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Everything defined within the function is not accessible by code outside the function. Only code within this scope can see the entities defined inside the scope."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Everything defined within the function is not accessible by code outside the function. Only code within this scope can see the entities defined inside the scope."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714965117,
        "id": "34fbdd8e-644b-435e-b2ca-c0f7b2b0315e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714965117,
        "parent_id": "d5ca60f2-a92d-40c2-a1ed-b3f7af507cba",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function foo() {\n  var a = 'hello';\n  console.log(a);  // =\u003e 'hello'\n}\n\nconsole.log(a);  // reference error"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function foo() {\n  var a = 'hello';\n  console.log(a);  // =\u003e 'hello'\n}\n\nconsole.log(a);  // reference error",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714965117,
        "id": "74a78cc7-d8c0-4de4-878f-e08bae3e56dc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714965117,
        "parent_id": "d5ca60f2-a92d-40c2-a1ed-b3f7af507cba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Nested functions are possible in JavaScript and the same rules apply."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Nested functions are possible in JavaScript and the same rules apply."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714965117,
        "id": "6942b44a-13a2-4f86-b1aa-12defc5fab63",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714965117,
        "parent_id": "d5ca60f2-a92d-40c2-a1ed-b3f7af507cba",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function foo() {\n  var a = 'hello';\n  \n  function bar() {\n    var b = 'world';\n    console.log(a);  // =\u003e 'hello'\n    console.log(b);  // =\u003e 'world'\n  }\n\n  console.log(a);  // =\u003e 'hello'\n  console.log(b);  // reference error\n}\n\nconsole.log(a);  // reference error\nconsole.log(b);  // reference error"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function foo() {\n  var a = 'hello';\n  \n  function bar() {\n    var b = 'world';\n    console.log(a);  // =\u003e 'hello'\n    console.log(b);  // =\u003e 'world'\n  }\n\n  console.log(a);  // =\u003e 'hello'\n  console.log(b);  // reference error\n}\n\nconsole.log(a);  // reference error\nconsole.log(b);  // reference error",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714965117,
        "id": "fe7fa90a-f644-4f8c-bcad-3a132c89d87c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714965117,
        "parent_id": "d5ca60f2-a92d-40c2-a1ed-b3f7af507cba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When JavaScript tries to resolve a reference or variable, it starts looking for it in the current scope. If it cannot find that declaration in the current scope, it climbs up one scope to look for it. This process repeats until the declaration has been found. If the JavaScript parser reaches the global scope and still cannot find the reference, a reference error will be thrown."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When JavaScript tries to resolve a reference or variable, it starts looking for it in the current scope. If it cannot find that declaration in the current scope, it climbs up one scope to look for it. This process repeats until the declaration has been found. If the JavaScript parser reaches the global scope and still cannot find the reference, a reference error will be thrown."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714965117,
        "id": "6fa38f72-26b5-4311-9c82-337e9c9eac39",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714965117,
        "parent_id": "d5ca60f2-a92d-40c2-a1ed-b3f7af507cba",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var a = 'hello';\n\nfunction foo() {\n  var b = 'world';\n\n  function bar() {\n    var c = '!!';\n\n    console.log(a);  // =\u003e 'hello'\n    console.log(b);  // =\u003e 'world'\n    console.log(c);  // =\u003e '!!'\n    console.log(d);  // reference error\n  }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var a = 'hello';\n\nfunction foo() {\n  var b = 'world';\n\n  function bar() {\n    var c = '!!';\n\n    console.log(a);  // =\u003e 'hello'\n    console.log(b);  // =\u003e 'world'\n    console.log(c);  // =\u003e '!!'\n    console.log(d);  // reference error\n  }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714965117,
        "id": "d258a2d7-0dd9-4ef1-8d45-36c4f1c445c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714965117,
        "parent_id": "d5ca60f2-a92d-40c2-a1ed-b3f7af507cba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This climbing behavior can also mean that one reference may “shadow” over a similarly named reference in the outer scope since it gets seen first."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This climbing behavior can also mean that one reference may “shadow” over a similarly named reference in the outer scope since it gets seen first."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714965117,
        "id": "0e3eb43b-e1f0-4023-8775-8feda178fbbc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714965117,
        "parent_id": "d5ca60f2-a92d-40c2-a1ed-b3f7af507cba",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var a = 'hello';\n\nfunction foo() {\n  var a = 'world';\n\n  function bar() {\n    console.log(a);  // =\u003e 'world'\n  }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var a = 'hello';\n\nfunction foo() {\n  var a = 'world';\n\n  function bar() {\n    console.log(a);  // =\u003e 'world'\n  }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714965117,
        "id": "314ab54c-63e7-4629-a6c9-be45aaad628f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714965117,
        "parent_id": "d5ca60f2-a92d-40c2-a1ed-b3f7af507cba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The way JavaScript resolves scoping also applies to the "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword. Declaring a variable with the "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword implies that you are not allowed to reassign the value, but declaring it in a function will create a new scope and with that a new variable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The way JavaScript resolves scoping also applies to the "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " keyword. Declaring a variable with the "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " keyword implies that you are not allowed to reassign the value, but declaring it in a function will create a new scope and with that a new variable."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714965118,
        "id": "fa0c2a42-61b8-4886-a9e3-854d274f3991",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714965118,
        "parent_id": "d5ca60f2-a92d-40c2-a1ed-b3f7af507cba",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function foo() {\n  const a = true;\n\n  function bar() {\n    const a = false;  // different variable\n    console.log(a);   // false\n  }\n\n  const a = false;    // SyntaxError\n  a = false;          // TypeError\n  console.log(a);     // true\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function foo() {\n  const a = true;\n\n  function bar() {\n    const a = false;  // different variable\n    console.log(a);   // false\n  }\n\n  const a = false;    // SyntaxError\n  a = false;          // TypeError\n  console.log(a);     // true\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714965131,
        "id": "9f38caee-6406-4d59-9604-a9fc57e54fff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714965131,
        "parent_id": "d5ca60f2-a92d-40c2-a1ed-b3f7af507cba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, functions are not the only blocks that create a scope (if you are using "
            ],
            [
              "let",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "). "
            ],
            [
              "let",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " declarations have a scope of the nearest block statement. See "
            ],
            [
              "here",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/javascript/480/scope/1574/difference-between-var-and-let#t=201612210455387857533"
                ]
              ]
            ],
            [
              " for a more detailed description."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, functions are not the only blocks that create a scope (if you are using "
          },
          {
            "Text": "let",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": "). "
          },
          {
            "Text": "let",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " declarations have a scope of the nearest block statement. See "
          },
          {
            "Text": "here",
            "Link": "http://stackoverflow.com/documentation/javascript/480/scope/1574/difference-between-var-and-let#t=201612210455387857533"
          },
          {
            "Text": " for a more detailed description."
          }
        ]
      }
    ],
    "title": "020 Function Scoping"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}