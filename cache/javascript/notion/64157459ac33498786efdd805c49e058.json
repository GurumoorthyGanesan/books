{
  "ID": "64157459-ac33-4987-86ef-dd805c49e058",
  "Root": {
    "alive": true,
    "content": [
      "01926e43-e232-4c7e-a109-a9b3ebe0fb7d",
      "b6f68cb0-6afb-45f1-ab96-51ad718e2723",
      "881779d6-9cec-49c7-b9fa-fa538ae35845",
      "9ec4a1df-b515-43d4-b22a-6a5fc91b5723",
      "21d81804-c4a3-4b9a-85da-6f31a5d9409a",
      "7d99f1ff-7eb8-427e-b838-7d674f55bf24",
      "2f03f70b-b8fd-4df7-b4b0-916ce8dead97",
      "fdffe5dd-844d-4380-8540-f628d4357296",
      "7a816a3e-7a22-48f2-b12f-5147875aa795",
      "af1098b2-ce7d-4302-843a-6c1e15180287",
      "3c7e8173-daa9-41e4-8cb7-feba1662e663",
      "73105245-c986-4046-a3b9-7678e8e0125f",
      "965d5681-040b-4b7b-ad67-5423958c7f6c",
      "b5d0df43-8225-4a49-a714-56c07541f4ee",
      "e0c04df6-1602-4d1a-9000-6df714967277",
      "a48c94c3-89b5-4965-a323-6e467a0daf6a",
      "b4c786a9-e0ba-4fb5-887b-00a1a9600525",
      "41d9d888-1b48-4b30-87d5-1b5f8ddead76",
      "e7595fdf-2428-4607-9ed7-350da0f2db14",
      "77b7c969-4cd7-4b5e-8768-7b96f4cd4f94"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550714981319,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "64157459-ac33-4987-86ef-dd805c49e058",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550817180000,
    "parent_id": "258d5f6e-0cc0-4d61-b286-ea3a708b3390",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Functions as a variable"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981316,
        "id": "01926e43-e232-4c7e-a109-a9b3ebe0fb7d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714981316,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A normal function declaration looks like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A normal function declaration looks like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981317,
        "id": "b6f68cb0-6afb-45f1-ab96-51ad718e2723",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550817120000,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "function foo(){\n}"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "function foo(){\n}",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981317,
        "id": "881779d6-9cec-49c7-b9fa-fa538ae35845",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714981317,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A function defined like this is accessible from anywhere within its context by its name. But sometimes it can be useful to treat function references like object references. For example, you can assign an object to a variable based on some set of conditions and then later retrieve a property from one or the other object:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A function defined like this is accessible from anywhere within its context by its name. But sometimes it can be useful to treat function references like object references. For example, you can assign an object to a variable based on some set of conditions and then later retrieve a property from one or the other object:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981317,
        "id": "9ec4a1df-b515-43d4-b22a-6a5fc91b5723",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550817120000,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "var name = 'Cameron';\nvar spouse;\n\nif (name === 'Taylor') spouse = { name: 'Jordan' };\nelse if (name === 'Cameron') spouse = { name: 'Casey' };\n\nvar spouseName = spouse.name;"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "var name = 'Cameron';\nvar spouse;\n\nif (name === 'Taylor') spouse = { name: 'Jordan' };\nelse if (name === 'Cameron') spouse = { name: 'Casey' };\n\nvar spouseName = spouse.name;",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981317,
        "id": "21d81804-c4a3-4b9a-85da-6f31a5d9409a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714981317,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In JavaScript, you can do the same thing with functions:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In JavaScript, you can do the same thing with functions:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981317,
        "id": "7d99f1ff-7eb8-427e-b838-7d674f55bf24",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550817180000,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "// Example 1\nvar hashAlgorithm = 'sha1';\nvar hash;\n\nif ( hashAlgorithm === 'sha1' ) hash = function(value){ /*...*/ };\nelse if ( hashAlgorithm === 'md5' ) hash = function(value){ /*...*/ };\n\nhash('Fred');"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// Example 1\nvar hashAlgorithm = 'sha1';\nvar hash;\n\nif ( hashAlgorithm === 'sha1' ) hash = function(value){ /*...*/ };\nelse if ( hashAlgorithm === 'md5' ) hash = function(value){ /*...*/ };\n\nhash('Fred');",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981317,
        "id": "2f03f70b-b8fd-4df7-b4b0-916ce8dead97",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714981317,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the example above, "
            ],
            [
              "hash",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a normal variable. It is assigned a reference to a function, after which the function it references can be invoked using parentheses, just like a normal function declaration."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the example above, "
          },
          {
            "Text": "hash",
            "AttrFlags": 2
          },
          {
            "Text": " is a normal variable. It is assigned a reference to a function, after which the function it references can be invoked using parentheses, just like a normal function declaration."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981317,
        "id": "fdffe5dd-844d-4380-8540-f628d4357296",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714981317,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The example above references anonymous functions… functions that do not have their own name. You can also use variables to refer to named functions. The example above could be rewritten like so:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The example above references anonymous functions… functions that do not have their own name. You can also use variables to refer to named functions. The example above could be rewritten like so:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981318,
        "id": "7a816a3e-7a22-48f2-b12f-5147875aa795",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550817180000,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "// Example 2\nvar hashAlgorithm = 'sha1';\nvar hash;\n\nif ( hashAlgorithm === 'sha1' ) hash = sha1Hash;\nelse if ( hashAlgorithm === 'md5' ) hash = md5Hash;\n\nhash('Fred');\n\nfunction md5Hash(value){\n    // ...\n}\n\nfunction sha1Hash(value){\n    // ...\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// Example 2\nvar hashAlgorithm = 'sha1';\nvar hash;\n\nif ( hashAlgorithm === 'sha1' ) hash = sha1Hash;\nelse if ( hashAlgorithm === 'md5' ) hash = md5Hash;\n\nhash('Fred');\n\nfunction md5Hash(value){\n    // ...\n}\n\nfunction sha1Hash(value){\n    // ...\n}",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981318,
        "id": "af1098b2-ce7d-4302-843a-6c1e15180287",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714981318,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Or, you can assign function references from object properties:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Or, you can assign function references from object properties:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981318,
        "id": "3c7e8173-daa9-41e4-8cb7-feba1662e663",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550817180000,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "// Example 3\nvar hashAlgorithms = {\n    sha1: function(value) { /**/ },\n    md5: function(value) { /**/ }\n};\n\nvar hashAlgorithm = 'sha1';\nvar hash;\n\nif ( hashAlgorithm === 'sha1' ) hash = hashAlgorithms.sha1;\nelse if ( hashAlgorithm === 'md5' ) hash = hashAlgorithms.md5;\n\nhash('Fred');"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// Example 3\nvar hashAlgorithms = {\n    sha1: function(value) { /**/ },\n    md5: function(value) { /**/ }\n};\n\nvar hashAlgorithm = 'sha1';\nvar hash;\n\nif ( hashAlgorithm === 'sha1' ) hash = hashAlgorithms.sha1;\nelse if ( hashAlgorithm === 'md5' ) hash = hashAlgorithms.md5;\n\nhash('Fred');",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981318,
        "id": "73105245-c986-4046-a3b9-7678e8e0125f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714981318,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can assign the reference to a function held by one variable to another by omitting the parentheses. This can result in an easy-to-make mistake: attempting to assign the return value of a function to another variable, but accidentally assigning the reference to the function."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can assign the reference to a function held by one variable to another by omitting the parentheses. This can result in an easy-to-make mistake: attempting to assign the return value of a function to another variable, but accidentally assigning the reference to the function."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981318,
        "id": "965d5681-040b-4b7b-ad67-5423958c7f6c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550817180000,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "// Example 4\nvar a = getValue;\nvar b = a; // b is now a reference to getValue.\nvar c = b(); // b is invoked, so c now holds the value returned by getValue (41)\n\nfunction getValue(){\n    return 41;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// Example 4\nvar a = getValue;\nvar b = a; // b is now a reference to getValue.\nvar c = b(); // b is invoked, so c now holds the value returned by getValue (41)\n\nfunction getValue(){\n    return 41;\n}",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981318,
        "id": "b5d0df43-8225-4a49-a714-56c07541f4ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714981318,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A reference to a function is like any other value. As you’ve seen, a reference can be assigned to a variable, and that variable’s reference value can be subsequently assigned to other variables. You can pass around references to functions like any other value, including passing a reference to a function as the return value of another function. For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A reference to a function is like any other value. As you’ve seen, a reference can be assigned to a variable, and that variable’s reference value can be subsequently assigned to other variables. You can pass around references to functions like any other value, including passing a reference to a function as the return value of another function. For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981318,
        "id": "e0c04df6-1602-4d1a-9000-6df714967277",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550817180000,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "// Example 5\n// getHashingFunction returns a function, which is assigned\n// to hash for later use:\nvar hash = getHashingFunction( 'sha1' );\n// ...\nhash('Fred');\n\n// return the function corresponding to the given algorithmName\nfunction getHashingFunction( algorithmName ){\n    // return a reference to an anonymous function\n    if (algorithmName === 'sha1') return function(value){ /**/ };\n    // return a reference to a declared function\n    else if (algorithmName === 'md5') return md5;\n}\n\nfunction md5Hash(value){\n    // ...\n}"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "// Example 5\n// getHashingFunction returns a function, which is assigned\n// to hash for later use:\nvar hash = getHashingFunction( 'sha1' );\n// ...\nhash('Fred');\n\n// return the function corresponding to the given algorithmName\nfunction getHashingFunction( algorithmName ){\n    // return a reference to an anonymous function\n    if (algorithmName === 'sha1') return function(value){ /**/ };\n    // return a reference to a declared function\n    else if (algorithmName === 'md5') return md5;\n}\n\nfunction md5Hash(value){\n    // ...\n}",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981318,
        "id": "a48c94c3-89b5-4965-a323-6e467a0daf6a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714981318,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You don’t need to assign a function reference to a variable in order to invoke it. This example, building off example 5, will call getHashingFunction and then immediately invoke the returned function and pass its return value to hashedValue."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You don’t need to assign a function reference to a variable in order to invoke it. This example, building off example 5, will call getHashingFunction and then immediately invoke the returned function and pass its return value to hashedValue."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981318,
        "id": "b4c786a9-e0ba-4fb5-887b-00a1a9600525",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550817180000,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "// Example 6\nvar hashedValue = getHashingFunction( 'sha1' )( 'Fred' );"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// Example 6\nvar hashedValue = getHashingFunction( 'sha1' )( 'Fred' );",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981319,
        "id": "41d9d888-1b48-4b30-87d5-1b5f8ddead76",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714981319,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A Note on Hoisting"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "A Note on Hoisting"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981319,
        "id": "e7595fdf-2428-4607-9ed7-350da0f2db14",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714981319,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Keep in mind that, unlike normal function declarations, variables that reference functions are not “hoisted”. In example 2, the "
            ],
            [
              "md5Hash",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "sha1Hash",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " functions are defined at the bottom of the script, but are available everywhere immediately. No matter where you define a function, the interpreter “hoists” it to the top of its scope, making it immediately available. This is "
            ],
            [
              "not",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " the case for variable definitions, so code like the following will break:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Keep in mind that, unlike normal function declarations, variables that reference functions are not “hoisted”. In example 2, the "
          },
          {
            "Text": "md5Hash",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "sha1Hash",
            "AttrFlags": 2
          },
          {
            "Text": " functions are defined at the bottom of the script, but are available everywhere immediately. No matter where you define a function, the interpreter “hoists” it to the top of its scope, making it immediately available. This is "
          },
          {
            "Text": "not",
            "AttrFlags": 1
          },
          {
            "Text": " the case for variable definitions, so code like the following will break:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550714981319,
        "id": "77b7c969-4cd7-4b5e-8768-7b96f4cd4f94",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550817180000,
        "parent_id": "64157459-ac33-4987-86ef-dd805c49e058",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "var functionVariable;\n\nhoistedFunction(); // works, because the function is \"hoisted\" to the top of its scope\nfunctionVariable(); // error: undefined is not a function.\n\nfunction hoistedFunction(){}\nfunctionVariable = function(){};"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var functionVariable;\n\nhoistedFunction(); // works, because the function is \"hoisted\" to the top of its scope\nfunctionVariable(); // error: undefined is not a function.\n\nfunction hoistedFunction(){}\nfunctionVariable = function(){};",
        "code_language": "JavaScript"
      }
    ],
    "title": "Functions as a variable",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}