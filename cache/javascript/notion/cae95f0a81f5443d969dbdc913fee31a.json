{
  "ID": "cae95f0a-81f5-443d-969d-bdc913fee31a",
  "Root": {
    "alive": true,
    "content": [
      "f3602a98-b37e-4d52-8361-c39b6c50e697",
      "b775e325-9c60-4131-9c20-412585bd1259",
      "f6a1ac1c-0597-423e-af8a-07d1918698c4",
      "42d4658a-42bc-4a6f-926f-1e49e96192e5",
      "aaeac114-d21a-46db-91d5-3afafeb1440d",
      "358de12a-fede-4d6e-8794-52b93b4c85ee",
      "f55dd515-d65a-487b-a888-f345f844b2d6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550716338516,
    "id": "cae95f0a-81f5-443d-969d-bdc913fee31a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550716338516,
    "parent_id": "79d9634b-b1f6-4d9f-bb9a-9cd24a6ad6f6",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "090 Iterating Sets"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716338514,
        "id": "f3602a98-b37e-4d52-8361-c39b6c50e697",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716338514,
        "parent_id": "cae95f0a-81f5-443d-969d-bdc913fee31a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can use a simple for-of loop to iterate a Set:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can use a simple for-of loop to iterate a Set:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716338515,
        "id": "b775e325-9c60-4131-9c20-412585bd1259",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716338515,
        "parent_id": "cae95f0a-81f5-443d-969d-bdc913fee31a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const mySet = new Set([1, 2, 3]);\n\nfor (const value of mySet) {\n  console.log(value); // logs 1, 2 and 3\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const mySet = new Set([1, 2, 3]);\n\nfor (const value of mySet) {\n  console.log(value); // logs 1, 2 and 3\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716338515,
        "id": "f6a1ac1c-0597-423e-af8a-07d1918698c4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716338515,
        "parent_id": "cae95f0a-81f5-443d-969d-bdc913fee31a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When iterating over a set, it will always return values in the order they were first added to the set. For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When iterating over a set, it will always return values in the order they were first added to the set. For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716338515,
        "id": "42d4658a-42bc-4a6f-926f-1e49e96192e5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716338515,
        "parent_id": "cae95f0a-81f5-443d-969d-bdc913fee31a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const set = new Set([4, 5, 6])\nset.add(10)\nset.add(5) //5 already exists in the set\nArray.from(set) //[4, 5, 6, 10]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const set = new Set([4, 5, 6])\nset.add(10)\nset.add(5) //5 already exists in the set\nArray.from(set) //[4, 5, 6, 10]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716338516,
        "id": "aaeac114-d21a-46db-91d5-3afafeb1440d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716338516,
        "parent_id": "cae95f0a-81f5-443d-969d-bdc913fee31a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There’s also a "
            ],
            [
              ".forEach()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method, similar to "
            ],
            [
              "Array.prototype.forEach()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". It has two parameters, "
            ],
            [
              "callback",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which will be executed for each element, and optional "
            ],
            [
              "thisArg",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which will be used as "
            ],
            [
              "this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when executing "
            ],
            [
              "callback",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There’s also a "
          },
          {
            "Text": ".forEach()",
            "AttrFlags": 2
          },
          {
            "Text": " method, similar to "
          },
          {
            "Text": "Array.prototype.forEach()",
            "AttrFlags": 2
          },
          {
            "Text": ". It has two parameters, "
          },
          {
            "Text": "callback",
            "AttrFlags": 2
          },
          {
            "Text": ", which will be executed for each element, and optional "
          },
          {
            "Text": "thisArg",
            "AttrFlags": 2
          },
          {
            "Text": ", which will be used as "
          },
          {
            "Text": "this",
            "AttrFlags": 2
          },
          {
            "Text": " when executing "
          },
          {
            "Text": "callback",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716338516,
        "id": "358de12a-fede-4d6e-8794-52b93b4c85ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716338516,
        "parent_id": "cae95f0a-81f5-443d-969d-bdc913fee31a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "callback",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has three arguments. The first two arguments are both the current element of Set (for consistency with "
            ],
            [
              "Array.prototype.forEach()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Map.prototype.forEach()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") and the third argument is the Set itself."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "callback",
            "AttrFlags": 2
          },
          {
            "Text": " has three arguments. The first two arguments are both the current element of Set (for consistency with "
          },
          {
            "Text": "Array.prototype.forEach()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Map.prototype.forEach()",
            "AttrFlags": 2
          },
          {
            "Text": ") and the third argument is the Set itself."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716338516,
        "id": "f55dd515-d65a-487b-a888-f345f844b2d6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716338516,
        "parent_id": "cae95f0a-81f5-443d-969d-bdc913fee31a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "mySet.forEach((value, value2, set) =\u003e console.log(value)); // logs 1, 2 and 3"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "mySet.forEach((value, value2, set) =\u003e console.log(value)); // logs 1, 2 and 3",
        "code_language": "Plain Text"
      }
    ],
    "title": "090 Iterating Sets"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}