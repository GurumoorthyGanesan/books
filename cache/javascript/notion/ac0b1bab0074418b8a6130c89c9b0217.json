{
  "ID": "ac0b1bab-0074-418b-8a61-30c89c9b0217",
  "Root": {
    "alive": true,
    "content": [
      "b144be00-9070-4130-8444-9875a04e9a84",
      "bb82c2dc-4dd1-4e14-8924-eab8f69cb904",
      "099358c9-ef34-4828-aa0a-23f35ca25485",
      "511115e0-3ce6-4c6e-8032-d0b9c1fbb2c3",
      "0a0a40c4-9c12-4af5-9882-4202a2bcf76a",
      "c3691440-cd64-4988-886e-8515747c5130",
      "765b79c7-6f41-47ca-83fd-bc3325c5a0a6",
      "619738dd-4b30-493b-bfaf-8bd6e1900199",
      "7e54ca7f-cb9f-4808-a461-ecf7083974a6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715083345,
    "id": "ac0b1bab-0074-418b-8a61-30c89c9b0217",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550715083345,
    "parent_id": "8258c948-9475-41eb-8bbe-cdf7703094bf",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "040 Double Negation x"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715083342,
        "id": "b144be00-9070-4130-8444-9875a04e9a84",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715083342,
        "parent_id": "ac0b1bab-0074-418b-8a61-30c89c9b0217",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The double-negation "
            ],
            [
              "!!",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not a distinct JavaScript operator nor a special syntax but rather just a sequence of two negations. It is used to convert the value of any type to its appropriate "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "false",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " Boolean value depending on whether it is "
            ],
            [
              "truthy",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "falsy",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The double-negation "
          },
          {
            "Text": "!!",
            "AttrFlags": 2
          },
          {
            "Text": " is not a distinct JavaScript operator nor a special syntax but rather just a sequence of two negations. It is used to convert the value of any type to its appropriate "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "false",
            "AttrFlags": 2
          },
          {
            "Text": " Boolean value depending on whether it is "
          },
          {
            "Text": "truthy",
            "AttrFlags": 4
          },
          {
            "Text": " or "
          },
          {
            "Text": "falsy",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715083342,
        "id": "bb82c2dc-4dd1-4e14-8924-eab8f69cb904",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715083342,
        "parent_id": "ac0b1bab-0074-418b-8a61-30c89c9b0217",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "!!1            // true\n!!0            // false\n!!undefined    // false\n!!{}           // true\n!![]           // true"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "!!1            // true\n!!0            // false\n!!undefined    // false\n!!{}           // true\n!![]           // true",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715083343,
        "id": "099358c9-ef34-4828-aa0a-23f35ca25485",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715083343,
        "parent_id": "ac0b1bab-0074-418b-8a61-30c89c9b0217",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The first negation converts any value to "
            ],
            [
              "false",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if it is "
            ],
            [
              "truthy",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " and to "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if is "
            ],
            [
              "falsy",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". The second negation then operates on a normal Boolean value. Together they convert any "
            ],
            [
              "truthy",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " value to "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and any "
            ],
            [
              "falsy",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " value to "
            ],
            [
              "false",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The first negation converts any value to "
          },
          {
            "Text": "false",
            "AttrFlags": 2
          },
          {
            "Text": " if it is "
          },
          {
            "Text": "truthy",
            "AttrFlags": 4
          },
          {
            "Text": " and to "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": " if is "
          },
          {
            "Text": "falsy",
            "AttrFlags": 4
          },
          {
            "Text": ". The second negation then operates on a normal Boolean value. Together they convert any "
          },
          {
            "Text": "truthy",
            "AttrFlags": 4
          },
          {
            "Text": " value to "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": " and any "
          },
          {
            "Text": "falsy",
            "AttrFlags": 4
          },
          {
            "Text": " value to "
          },
          {
            "Text": "false",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715083343,
        "id": "511115e0-3ce6-4c6e-8032-d0b9c1fbb2c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715083343,
        "parent_id": "ac0b1bab-0074-418b-8a61-30c89c9b0217",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, many professionals consider the practice of using such syntax unacceptable and recommend simpler to read alternatives, even if they’re longer to write:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, many professionals consider the practice of using such syntax unacceptable and recommend simpler to read alternatives, even if they’re longer to write:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715083343,
        "id": "0a0a40c4-9c12-4af5-9882-4202a2bcf76a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715083343,
        "parent_id": "ac0b1bab-0074-418b-8a61-30c89c9b0217",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "x !== 0        // instead of !!x in case x is a number\nx != null      // instead of !!x in case x is an object, a string, or an undefined"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "x !== 0        // instead of !!x in case x is a number\nx != null      // instead of !!x in case x is an object, a string, or an undefined",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715083343,
        "id": "c3691440-cd64-4988-886e-8515747c5130",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715083343,
        "parent_id": "ac0b1bab-0074-418b-8a61-30c89c9b0217",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Usage of "
            ],
            [
              "!!x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is considered poor practice due to the following reasons:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Usage of "
          },
          {
            "Text": "!!x",
            "AttrFlags": 2
          },
          {
            "Text": " is considered poor practice due to the following reasons:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715083344,
        "id": "765b79c7-6f41-47ca-83fd-bc3325c5a0a6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715083344,
        "parent_id": "ac0b1bab-0074-418b-8a61-30c89c9b0217",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Stylistically it may look like a distinct special syntax whereas in fact it is not doing anything other than two consecutive negations with implicit type conversion."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Stylistically it may look like a distinct special syntax whereas in fact it is not doing anything other than two consecutive negations with implicit type conversion."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715083344,
        "id": "619738dd-4b30-493b-bfaf-8bd6e1900199",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715083344,
        "parent_id": "ac0b1bab-0074-418b-8a61-30c89c9b0217",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is better to provide information about types of values stored in variables and properties through the code. For example, "
            ],
            [
              "x !== 0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " says that "
            ],
            [
              "x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is probably a number, whereas "
            ],
            [
              "!!x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " does not convey any such advantage to readers of the code."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is better to provide information about types of values stored in variables and properties through the code. For example, "
          },
          {
            "Text": "x !== 0",
            "AttrFlags": 2
          },
          {
            "Text": " says that "
          },
          {
            "Text": "x",
            "AttrFlags": 2
          },
          {
            "Text": " is probably a number, whereas "
          },
          {
            "Text": "!!x",
            "AttrFlags": 2
          },
          {
            "Text": " does not convey any such advantage to readers of the code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715083344,
        "id": "7e54ca7f-cb9f-4808-a461-ecf7083974a6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715083344,
        "parent_id": "ac0b1bab-0074-418b-8a61-30c89c9b0217",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Usage of "
            ],
            [
              "Boolean(x)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " allows for similar functionality, and is a more explicit conversion of type."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Usage of "
          },
          {
            "Text": "Boolean(x)",
            "AttrFlags": 2
          },
          {
            "Text": " allows for similar functionality, and is a more explicit conversion of type."
          }
        ]
      }
    ],
    "title": "040 Double Negation x"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}