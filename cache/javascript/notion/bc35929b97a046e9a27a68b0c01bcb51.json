{
  "ID": "bc35929b-97a0-46e9-a27a-68b0c01bcb51",
  "Root": {
    "alive": true,
    "content": [
      "a3995cce-f2f5-4a8f-936c-eddd9b45c403",
      "c1242fe9-94b7-47f2-b979-9d97b4008c30",
      "54047120-386b-4a9a-9af6-12e11f3d28df",
      "4e8bcc4d-f24d-4164-981a-2e1215cf63d3",
      "87f421b9-0c06-42dd-a895-177f2f4412aa",
      "bf9fa9f9-d083-442b-a914-f879d47a6939",
      "00e35088-6ead-47ba-88a6-9ee385160b28",
      "7104ccfa-55bd-447e-bdac-8af3d94df8fc",
      "1da12a91-52e0-4d75-bce4-60c6c895cdb7",
      "830be48f-935a-4709-8bbd-3ea797871b8d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715876214,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "bc35929b-97a0-46e9-a27a-68b0c01bcb51",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551593040000,
    "parent_id": "7e064e1b-dd35-424e-9952-a63c7355d191",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "String representations of numbers"
        ]
      ]
    },
    "type": "page",
    "version": 13,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715876211,
        "id": "a3995cce-f2f5-4a8f-936c-eddd9b45c403",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715876211,
        "parent_id": "bc35929b-97a0-46e9-a27a-68b0c01bcb51",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "JavaScript has native conversion from "
            ],
            [
              "Number",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " to it’s "
            ],
            [
              "String representation",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " for any base from "
            ],
            [
              "2 to 36",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "JavaScript has native conversion from "
          },
          {
            "Text": "Number",
            "AttrFlags": 4
          },
          {
            "Text": " to it’s "
          },
          {
            "Text": "String representation",
            "AttrFlags": 4
          },
          {
            "Text": " for any base from "
          },
          {
            "Text": "2 to 36",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715876212,
        "id": "c1242fe9-94b7-47f2-b979-9d97b4008c30",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715876212,
        "parent_id": "bc35929b-97a0-46e9-a27a-68b0c01bcb51",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The most common representation after "
            ],
            [
              "decimal (base 10)",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " is "
            ],
            [
              "hexadecimal (base 16)",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", but the contents of this section work for all bases in the range."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The most common representation after "
          },
          {
            "Text": "decimal (base 10)",
            "AttrFlags": 4
          },
          {
            "Text": " is "
          },
          {
            "Text": "hexadecimal (base 16)",
            "AttrFlags": 4
          },
          {
            "Text": ", but the contents of this section work for all bases in the range."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715876213,
        "id": "54047120-386b-4a9a-9af6-12e11f3d28df",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715876213,
        "parent_id": "bc35929b-97a0-46e9-a27a-68b0c01bcb51",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In order to convert a "
            ],
            [
              "Number",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " from decimal (base 10) to it’s hexadecimal (base 16) "
            ],
            [
              "String representation",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " the "
            ],
            [
              "toString",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " method can be used with "
            ],
            [
              "radix ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "16",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In order to convert a "
          },
          {
            "Text": "Number",
            "AttrFlags": 4
          },
          {
            "Text": " from decimal (base 10) to it’s hexadecimal (base 16) "
          },
          {
            "Text": "String representation",
            "AttrFlags": 4
          },
          {
            "Text": " the "
          },
          {
            "Text": "toString",
            "AttrFlags": 4
          },
          {
            "Text": " method can be used with "
          },
          {
            "Text": "radix ",
            "AttrFlags": 4
          },
          {
            "Text": "16",
            "AttrFlags": 6
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715876213,
        "id": "4e8bcc4d-f24d-4164-981a-2e1215cf63d3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551593040000,
        "parent_id": "bc35929b-97a0-46e9-a27a-68b0c01bcb51",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "// base 10 Number\nvar b10 = 12;\n\n// base 16 String representation\nvar b16 = b10.toString(16); // \"c\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// base 10 Number\nvar b10 = 12;\n\n// base 16 String representation\nvar b16 = b10.toString(16); // \"c\"",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715876213,
        "id": "87f421b9-0c06-42dd-a895-177f2f4412aa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715876213,
        "parent_id": "bc35929b-97a0-46e9-a27a-68b0c01bcb51",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the number represented is an integer, the inverse operation for this can be done with "
            ],
            [
              "parseInt",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and the "
            ],
            [
              "radix ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "16",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " again"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the number represented is an integer, the inverse operation for this can be done with "
          },
          {
            "Text": "parseInt",
            "AttrFlags": 2
          },
          {
            "Text": " and the "
          },
          {
            "Text": "radix ",
            "AttrFlags": 4
          },
          {
            "Text": "16",
            "AttrFlags": 6
          },
          {
            "Text": " again"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715876213,
        "id": "bf9fa9f9-d083-442b-a914-f879d47a6939",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551593040000,
        "parent_id": "bc35929b-97a0-46e9-a27a-68b0c01bcb51",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "// base 16 String representation\nvar b16 = 'c';\n\n// base 10 Number\nvar b10 = parseInt(b16, 16); // 12"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// base 16 String representation\nvar b16 = 'c';\n\n// base 10 Number\nvar b10 = parseInt(b16, 16); // 12",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715876214,
        "id": "00e35088-6ead-47ba-88a6-9ee385160b28",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715876214,
        "parent_id": "bc35929b-97a0-46e9-a27a-68b0c01bcb51",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To convert an arbitrary number (i.e. non-integer) from it’s "
            ],
            [
              "String representation",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " into a "
            ],
            [
              "Number",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", the operation must be split into two parts; the integer part and the fraction part."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To convert an arbitrary number (i.e. non-integer) from it’s "
          },
          {
            "Text": "String representation",
            "AttrFlags": 4
          },
          {
            "Text": " into a "
          },
          {
            "Text": "Number",
            "AttrFlags": 4
          },
          {
            "Text": ", the operation must be split into two parts; the integer part and the fraction part."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715876214,
        "id": "7104ccfa-55bd-447e-bdac-8af3d94df8fc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551593040000,
        "parent_id": "bc35929b-97a0-46e9-a27a-68b0c01bcb51",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "let b16 = '3.243f3e0370cdc';\n// Split into integer and fraction parts\nlet [i16, f16] = b16.split('.');\n\n// Calculate base 10 integer part\nlet i10 = parseInt(i16, 16); // 3\n\n// Calculate the base 10 fraction part\nlet f10 = parseInt(f16, 16) / Math.pow(16, f16.length); // 0.14158999999999988\n\n// Put the base 10 parts together to find the Number\nlet b10 = i10 + f10; // 3.14159"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "let b16 = '3.243f3e0370cdc';\n// Split into integer and fraction parts\nlet [i16, f16] = b16.split('.');\n\n// Calculate base 10 integer part\nlet i10 = parseInt(i16, 16); // 3\n\n// Calculate the base 10 fraction part\nlet f10 = parseInt(f16, 16) / Math.pow(16, f16.length); // 0.14158999999999988\n\n// Put the base 10 parts together to find the Number\nlet b10 = i10 + f10; // 3.14159",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715876214,
        "id": "1da12a91-52e0-4d75-bce4-60c6c895cdb7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715876214,
        "parent_id": "bc35929b-97a0-46e9-a27a-68b0c01bcb51",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note 1:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Be careful as small errors may be in the result due to differences in what is possible to be represented in different bases. It may be desirable to perform some kind of rounding afterwards."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note 1:",
            "AttrFlags": 1
          },
          {
            "Text": " Be careful as small errors may be in the result due to differences in what is possible to be represented in different bases. It may be desirable to perform some kind of rounding afterwards."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715876214,
        "id": "830be48f-935a-4709-8bbd-3ea797871b8d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715876214,
        "parent_id": "bc35929b-97a0-46e9-a27a-68b0c01bcb51",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note 2:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Very long representations of numbers may also result in errors due to the accuracy and maximum values of "
            ],
            [
              "Numbers",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " of the environment the conversions are happening in."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note 2:",
            "AttrFlags": 1
          },
          {
            "Text": " Very long representations of numbers may also result in errors due to the accuracy and maximum values of "
          },
          {
            "Text": "Numbers",
            "AttrFlags": 4
          },
          {
            "Text": " of the environment the conversions are happening in."
          }
        ]
      }
    ],
    "title": "String representations of numbers",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}