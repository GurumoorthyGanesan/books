{
  "ID": "e396d338-0a63-4e3f-9fe8-46ba234f9d89",
  "Root": {
    "alive": true,
    "content": [
      "71a2432c-318a-4240-b2d7-474bb05ba6e8",
      "580cd1a2-7ecd-4322-9a93-a80f7bd7bd91",
      "2d583fc1-b975-46f9-80e3-550e6ae99e51",
      "112463df-e7cb-4d14-b7c7-7c3dddecf954",
      "105d0f10-7848-4a86-b3b7-ae837971d278",
      "8996e4e8-4bfe-40bc-beb2-a2f71a9e7454",
      "5980235b-7e6e-4de6-9a5b-1925db04c148",
      "0a5c1c27-25c5-43aa-913d-b5405366ec27",
      "d0a40659-8f59-4883-bc92-212f9d49b003",
      "989f6bd1-5277-42e5-acd9-4a8a4aa52c8a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715612847,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e396d338-0a63-4e3f-9fe8-46ba234f9d89",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551593580000,
    "parent_id": "0a8fef9d-a46b-4135-9e0b-09adc1486be0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Await and operator precedence"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715612843,
        "id": "71a2432c-318a-4240-b2d7-474bb05ba6e8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715612843,
        "parent_id": "e396d338-0a63-4e3f-9fe8-46ba234f9d89",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You have to keep the operator precedence in mind when using "
            ],
            [
              "await",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You have to keep the operator precedence in mind when using "
          },
          {
            "Text": "await",
            "AttrFlags": 2
          },
          {
            "Text": " keyword."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715612846,
        "id": "580cd1a2-7ecd-4322-9a93-a80f7bd7bd91",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715612846,
        "parent_id": "e396d338-0a63-4e3f-9fe8-46ba234f9d89",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Imagine that we have an asynchronous function which calls another asynchronous function, "
            ],
            [
              "getUnicorn()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which returns a Promise that resolves to an instance of class "
            ],
            [
              "Unicorn",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Now we want to get the size of the unicorn using the "
            ],
            [
              "getSize()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method of that class."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Imagine that we have an asynchronous function which calls another asynchronous function, "
          },
          {
            "Text": "getUnicorn()",
            "AttrFlags": 2
          },
          {
            "Text": " which returns a Promise that resolves to an instance of class "
          },
          {
            "Text": "Unicorn",
            "AttrFlags": 2
          },
          {
            "Text": ". Now we want to get the size of the unicorn using the "
          },
          {
            "Text": "getSize()",
            "AttrFlags": 2
          },
          {
            "Text": " method of that class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715612846,
        "id": "2d583fc1-b975-46f9-80e3-550e6ae99e51",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715612846,
        "parent_id": "e396d338-0a63-4e3f-9fe8-46ba234f9d89",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Look at the following code:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Look at the following code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715612846,
        "id": "112463df-e7cb-4d14-b7c7-7c3dddecf954",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551593580000,
        "parent_id": "e396d338-0a63-4e3f-9fe8-46ba234f9d89",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "async function myAsyncFunction() {\n    await getUnicorn().getSize();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "async function myAsyncFunction() {\n    await getUnicorn().getSize();\n}",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715612846,
        "id": "105d0f10-7848-4a86-b3b7-ae837971d278",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715612846,
        "parent_id": "e396d338-0a63-4e3f-9fe8-46ba234f9d89",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "At first sight, it seems valid, but it’s not. Due to operator precedence, it’s equivalent to the following:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "At first sight, it seems valid, but it’s not. Due to operator precedence, it’s equivalent to the following:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715612846,
        "id": "8996e4e8-4bfe-40bc-beb2-a2f71a9e7454",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551593580000,
        "parent_id": "e396d338-0a63-4e3f-9fe8-46ba234f9d89",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "async function myAsyncFunction() {\n    await (getUnicorn().getSize());\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "async function myAsyncFunction() {\n    await (getUnicorn().getSize());\n}",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715612846,
        "id": "5980235b-7e6e-4de6-9a5b-1925db04c148",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715612846,
        "parent_id": "e396d338-0a63-4e3f-9fe8-46ba234f9d89",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here we attempt to call "
            ],
            [
              "getSize()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method of the Promise object, which isn’t what we want."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here we attempt to call "
          },
          {
            "Text": "getSize()",
            "AttrFlags": 2
          },
          {
            "Text": " method of the Promise object, which isn’t what we want."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715612847,
        "id": "0a5c1c27-25c5-43aa-913d-b5405366ec27",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715612847,
        "parent_id": "e396d338-0a63-4e3f-9fe8-46ba234f9d89",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Instead, we should use brackets to denote that we first want to wait for the unicorn, and then call "
            ],
            [
              "getSize()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method of the result:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Instead, we should use brackets to denote that we first want to wait for the unicorn, and then call "
          },
          {
            "Text": "getSize()",
            "AttrFlags": 2
          },
          {
            "Text": " method of the result:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715612847,
        "id": "d0a40659-8f59-4883-bc92-212f9d49b003",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551593580000,
        "parent_id": "e396d338-0a63-4e3f-9fe8-46ba234f9d89",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "async function asyncFunction() {\n    (await getUnicorn()).getSize();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "async function asyncFunction() {\n    (await getUnicorn()).getSize();\n}",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715612847,
        "id": "989f6bd1-5277-42e5-acd9-4a8a4aa52c8a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715612847,
        "parent_id": "e396d338-0a63-4e3f-9fe8-46ba234f9d89",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Of course. the previous version could be valid in some cases, for example, if the "
            ],
            [
              "getUnicorn()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function was synchronous, but the "
            ],
            [
              "getSize()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method was asynchronous."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Of course. the previous version could be valid in some cases, for example, if the "
          },
          {
            "Text": "getUnicorn()",
            "AttrFlags": 2
          },
          {
            "Text": " function was synchronous, but the "
          },
          {
            "Text": "getSize()",
            "AttrFlags": 2
          },
          {
            "Text": " method was asynchronous."
          }
        ]
      }
    ],
    "title": "Await and operator precedence",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}