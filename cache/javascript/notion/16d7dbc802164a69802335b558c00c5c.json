{
  "ID": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
  "Root": {
    "alive": true,
    "content": [
      "b25c85ee-38cd-4f4e-a5e0-69e4870b3419",
      "978bd5dd-9feb-4c99-8482-291d0be41f08",
      "5aaea36a-1315-4a97-847d-9cf25aff1472",
      "1f60f458-2c0b-4749-810b-e591b3658456",
      "2311c8e0-fdee-4385-a294-abac66d8867f",
      "fe358066-fe53-454d-ba59-ddc5e941e719",
      "ed50e14e-566f-4808-a80e-90b235f2e857",
      "c4b978eb-6384-4878-aa4d-82604780a58d",
      "2c1f8a85-5e24-4eea-aa9b-eec11f07d4ee",
      "db85c707-91ca-4d3b-aed0-145d74214b69",
      "fa63a0d0-70f2-4fec-b0d1-f6b0814d7efe",
      "bb9082f5-a5ef-4cc8-84b5-9f7b79c838c1",
      "b5cf8b8e-1b40-45a4-8bd1-72863a5c798e",
      "9a60f6c6-2eee-457d-8b0e-39618cbd67a3",
      "46382c0c-b38b-4c48-9cc7-20d0f59b68ff",
      "9839c3ac-15c6-479c-bb1c-f76d41494d1d",
      "f449026e-e2f1-4057-ae46-985e5677f7fe",
      "9cbd484c-266e-4b1e-ac95-78d65c67ab1c",
      "a9fa8cc1-1db6-417b-821b-8f601c11a013",
      "9d522143-19a1-4074-8455-d44822f61f66",
      "103567dc-e1fe-4d32-9b99-675baa75526b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715081248,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550870040000,
    "parent_id": "8258c948-9475-41eb-8bbe-cdf7703094bf",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "NaN Property of the Global Object"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081244,
        "id": "b25c85ee-38cd-4f4e-a5e0-69e4870b3419",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715081244,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "NaN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (”"
            ],
            [
              "N",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "ot "
            ],
            [
              "a",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "N",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "umber”) is a special value defined by the "
            ],
            [
              "IEEE Standard for Floating-Point Arithmetic",
              [
                [
                  "i"
                ],
                [
                  "a",
                  "https://en.wikipedia.org/wiki/IEEE_floating_point"
                ]
              ]
            ],
            [
              ", which is used when a non-numeric value is provided but a number is expected ("
            ],
            [
              "1 * \"two\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "), or when a calculation doesn’t have a valid "
            ],
            [
              "number",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " result ("
            ],
            [
              "Math.sqrt(-1)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "NaN",
            "AttrFlags": 2
          },
          {
            "Text": " (”"
          },
          {
            "Text": "N",
            "AttrFlags": 1
          },
          {
            "Text": "ot "
          },
          {
            "Text": "a",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "N",
            "AttrFlags": 1
          },
          {
            "Text": "umber”) is a special value defined by the "
          },
          {
            "Text": "IEEE Standard for Floating-Point Arithmetic",
            "AttrFlags": 4,
            "Link": "https://en.wikipedia.org/wiki/IEEE_floating_point"
          },
          {
            "Text": ", which is used when a non-numeric value is provided but a number is expected ("
          },
          {
            "Text": "1 * \"two\"",
            "AttrFlags": 2
          },
          {
            "Text": "), or when a calculation doesn’t have a valid "
          },
          {
            "Text": "number",
            "AttrFlags": 2
          },
          {
            "Text": " result ("
          },
          {
            "Text": "Math.sqrt(-1)",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081245,
        "id": "978bd5dd-9feb-4c99-8482-291d0be41f08",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715081245,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Any equality or relational comparisons with "
            ],
            [
              "NaN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns "
            ],
            [
              "false",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", even comparing it with itself. Because, "
            ],
            [
              "NaN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is supposed to denote the result of a nonsensical computation, and as such, it isn’t equal to the result of any other nonsensical computations."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Any equality or relational comparisons with "
          },
          {
            "Text": "NaN",
            "AttrFlags": 2
          },
          {
            "Text": " returns "
          },
          {
            "Text": "false",
            "AttrFlags": 2
          },
          {
            "Text": ", even comparing it with itself. Because, "
          },
          {
            "Text": "NaN",
            "AttrFlags": 2
          },
          {
            "Text": " is supposed to denote the result of a nonsensical computation, and as such, it isn’t equal to the result of any other nonsensical computations."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081245,
        "id": "5aaea36a-1315-4a97-847d-9cf25aff1472",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550870040000,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "(1 * \"two\") === NaN  //false\n\nNaN === 0;          // false\nNaN === NaN;        // false\nNumber.NaN === NaN; // false\n\nNaN \u003c 0;            // false\nNaN \u003e 0;            // false\nNaN \u003e 0;            // false\nNaN \u003e= NaN;         // false\nNaN \u003e= 'two';       // false"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "(1 * \"two\") === NaN  //false\n\nNaN === 0;          // false\nNaN === NaN;        // false\nNumber.NaN === NaN; // false\n\nNaN \u003c 0;            // false\nNaN \u003e 0;            // false\nNaN \u003e 0;            // false\nNaN \u003e= NaN;         // false\nNaN \u003e= 'two';       // false",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081245,
        "id": "1f60f458-2c0b-4749-810b-e591b3658456",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715081245,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Non-equal comparisons will always return "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Non-equal comparisons will always return "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081245,
        "id": "2311c8e0-fdee-4385-a294-abac66d8867f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550870040000,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "NaN !== 0;          // true\nNaN !== NaN;        // true"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "NaN !== 0;          // true\nNaN !== NaN;        // true",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081245,
        "id": "fe358066-fe53-454d-ba59-ddc5e941e719",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715081245,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Checking if a value is NaN"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Checking if a value is NaN"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081246,
        "id": "ed50e14e-566f-4808-a80e-90b235f2e857",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715081246,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can test a value or expression for "
            ],
            [
              "NaN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " by using the function "
            ],
            [
              "Number.isNaN()",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/javascript/700/built-in-constants/1760/testing-for-nan-using-isnan#t=201607302335066533303"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can test a value or expression for "
          },
          {
            "Text": "NaN",
            "AttrFlags": 2
          },
          {
            "Text": " by using the function "
          },
          {
            "Text": "Number.isNaN()",
            "Link": "http://stackoverflow.com/documentation/javascript/700/built-in-constants/1760/testing-for-nan-using-isnan#t=201607302335066533303"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081246,
        "id": "c4b978eb-6384-4878-aa4d-82604780a58d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550870040000,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "Number.isNaN(NaN);         // true\nNumber.isNaN(0 / 0);       // true\nNumber.isNaN('str' - 12);  // true\n\nNumber.isNaN(24);          // false\nNumber.isNaN('24');        // false\nNumber.isNaN(1 / 0);       // false\nNumber.isNaN(Infinity);    // false\n\nNumber.isNaN('str');       // false\nNumber.isNaN(undefined);   // false\nNumber.isNaN({});          // false"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "Number.isNaN(NaN);         // true\nNumber.isNaN(0 / 0);       // true\nNumber.isNaN('str' - 12);  // true\n\nNumber.isNaN(24);          // false\nNumber.isNaN('24');        // false\nNumber.isNaN(1 / 0);       // false\nNumber.isNaN(Infinity);    // false\n\nNumber.isNaN('str');       // false\nNumber.isNaN(undefined);   // false\nNumber.isNaN({});          // false",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081246,
        "id": "2c1f8a85-5e24-4eea-aa9b-eec11f07d4ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715081246,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can check if a value is "
            ],
            [
              "NaN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " by comparing it with itself:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can check if a value is "
          },
          {
            "Text": "NaN",
            "AttrFlags": 2
          },
          {
            "Text": " by comparing it with itself:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081246,
        "id": "db85c707-91ca-4d3b-aed0-145d74214b69",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550870040000,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "value !== value;    // true for NaN, false for any other value"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "value !== value;    // true for NaN, false for any other value",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081246,
        "id": "fa63a0d0-70f2-4fec-b0d1-f6b0814d7efe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715081246,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can use the following polyfill for "
            ],
            [
              "Number.isNaN()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can use the following polyfill for "
          },
          {
            "Text": "Number.isNaN()",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081246,
        "id": "bb9082f5-a5ef-4cc8-84b5-9f7b79c838c1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550870040000,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "Number.isNaN = Number.isNaN || function(value) {     \n    return value !== value;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "Number.isNaN = Number.isNaN || function(value) {     \n    return value !== value;\n}",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081247,
        "id": "b5cf8b8e-1b40-45a4-8bd1-72863a5c798e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715081247,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By contrast, the global function "
            ],
            [
              "isNaN()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " not only for "
            ],
            [
              "NaN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", but also for any value or expression that cannot be coerced into a number:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By contrast, the global function "
          },
          {
            "Text": "isNaN()",
            "AttrFlags": 2
          },
          {
            "Text": " returns "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": " not only for "
          },
          {
            "Text": "NaN",
            "AttrFlags": 2
          },
          {
            "Text": ", but also for any value or expression that cannot be coerced into a number:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081247,
        "id": "9a60f6c6-2eee-457d-8b0e-39618cbd67a3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550870040000,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "isNaN(NaN);         // true\nisNaN(0 / 0);       // true\nisNaN('str' - 12);  // true\n\nisNaN(24);          // false\nisNaN('24');        // false\nisNaN(Infinity);    // false\n\nisNaN('str');       // true\nisNaN(undefined);   // true\nisNaN({});          // true"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "isNaN(NaN);         // true\nisNaN(0 / 0);       // true\nisNaN('str' - 12);  // true\n\nisNaN(24);          // false\nisNaN('24');        // false\nisNaN(Infinity);    // false\n\nisNaN('str');       // true\nisNaN(undefined);   // true\nisNaN({});          // true",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081247,
        "id": "46382c0c-b38b-4c48-9cc7-20d0f59b68ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715081247,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "ECMAScript defines a “sameness” algorithm called "
            ],
            [
              "SameValue",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which, since ECMAScript 6, can be invoked with "
            ],
            [
              "Object.is",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Unlike the "
            ],
            [
              "==",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "===",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " comparison, using "
            ],
            [
              "Object.is()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will treat "
            ],
            [
              "NaN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as identical with itself (and "
            ],
            [
              "-0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as not identical with "
            ],
            [
              "+0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "ECMAScript defines a “sameness” algorithm called "
          },
          {
            "Text": "SameValue",
            "AttrFlags": 2
          },
          {
            "Text": " which, since ECMAScript 6, can be invoked with "
          },
          {
            "Text": "Object.is",
            "AttrFlags": 2
          },
          {
            "Text": ". Unlike the "
          },
          {
            "Text": "==",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "===",
            "AttrFlags": 2
          },
          {
            "Text": " comparison, using "
          },
          {
            "Text": "Object.is()",
            "AttrFlags": 2
          },
          {
            "Text": " will treat "
          },
          {
            "Text": "NaN",
            "AttrFlags": 2
          },
          {
            "Text": " as identical with itself (and "
          },
          {
            "Text": "-0",
            "AttrFlags": 2
          },
          {
            "Text": " as not identical with "
          },
          {
            "Text": "+0",
            "AttrFlags": 2
          },
          {
            "Text": "):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081247,
        "id": "9839c3ac-15c6-479c-bb1c-f76d41494d1d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550870040000,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "Object.is(NaN, NaN)      // true\nObject.is(+0, 0)         // false\n\nNaN === NaN              // false\n+0 === 0                 // true"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "Object.is(NaN, NaN)      // true\nObject.is(+0, 0)         // false\n\nNaN === NaN              // false\n+0 === 0                 // true",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081248,
        "id": "f449026e-e2f1-4057-ae46-985e5677f7fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715081248,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can use the following polyfill for "
            ],
            [
              "Object.is()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (from "
            ],
            [
              "MDN",
              [
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is#Polyfill_for_non-ES6_browsers"
                ]
              ]
            ],
            [
              "):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can use the following polyfill for "
          },
          {
            "Text": "Object.is()",
            "AttrFlags": 2
          },
          {
            "Text": " (from "
          },
          {
            "Text": "MDN",
            "Link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is#Polyfill_for_non-ES6_browsers"
          },
          {
            "Text": "):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081248,
        "id": "9cbd484c-266e-4b1e-ac95-78d65c67ab1c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550870040000,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "if (!Object.is) {\n  Object.is = function(x, y) {\n    // SameValue algorithm\n    if (x === y) { // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x \u0026\u0026 y !== y;\n    }\n  };\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "if (!Object.is) {\n  Object.is = function(x, y) {\n    // SameValue algorithm\n    if (x === y) { // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x \u0026\u0026 y !== y;\n    }\n  };\n}",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081248,
        "id": "a9fa8cc1-1db6-417b-821b-8f601c11a013",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715081248,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Points to note"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Points to note"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081248,
        "id": "9d522143-19a1-4074-8455-d44822f61f66",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715081248,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "NaN itself is a number, meaning that it does not equal to the string “NaN”, and most importantly (though perhaps unintuitively):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "NaN itself is a number, meaning that it does not equal to the string “NaN”, and most importantly (though perhaps unintuitively):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715081248,
        "id": "103567dc-e1fe-4d32-9b99-675baa75526b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550870040000,
        "parent_id": "16d7dbc8-0216-4a69-8023-35b558c00c5c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "typeof(NaN) === \"number\"; //true"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "typeof(NaN) === \"number\"; //true",
        "code_language": "JavaScript"
      }
    ],
    "title": "NaN Property of the Global Object",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}