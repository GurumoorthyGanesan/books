{
  "ID": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
  "Root": {
    "alive": true,
    "content": [
      "01b3534f-eb3e-4c18-841f-b63cb2d5933c",
      "435e1f22-9385-473a-b88b-932427d6a025",
      "1c8c0ca4-1c97-47cf-8228-fa06273dcb30",
      "2c7faf79-ac39-4863-a2ce-7087b2a3f0ef",
      "6b82fd44-2c1d-4454-ac87-83a982709052",
      "38892e68-7170-4d11-9c13-23c7e81127f8",
      "77228a91-0840-424a-a363-bb5eb9902e7f",
      "b46c2082-8799-45c3-9bb6-c15dbb116516",
      "19bf29f7-1330-4a28-9db8-d93d6cf272b7",
      "2349a23f-3600-4918-a048-70a81a5e5bca",
      "30980c38-a4b2-47be-b74c-d619a79180af",
      "e194f671-d36f-4340-b4c1-428e154bc022",
      "a0489a02-eb77-4e87-b545-2dac3673bc34",
      "2ee9f4c7-42d8-459b-bd40-fabb79009543",
      "05c6882e-9664-4916-8180-789ab9750dca",
      "611a0204-abaf-47e0-841f-072b0cc531d1",
      "6bc540af-2e62-409f-a709-72ca40e40454",
      "d24cebb7-a6c2-421d-911a-23eb5fb2d406",
      "c04b5867-659a-4e4f-a55b-73ab3cd4d2f3",
      "8e1550a4-7c41-42a0-8151-ea69f0066f73",
      "0fb61f92-c660-4976-b134-550b591bdafc",
      "2312302c-9246-4622-93a0-18acd9c27cbf",
      "807559aa-de53-4db7-937f-a3722d3d2eb8",
      "f1c370ee-4553-49d2-aedb-0480cbfb81f5"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715089311,
    "id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550715089311,
    "parent_id": "6f8457e8-22bd-4430-878a-05b299e31aea",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 Ternary operators"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089304,
        "id": "01b3534f-eb3e-4c18-841f-b63cb2d5933c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089304,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Can be used to shorten if/else operations. This comes in handy for returning a value quickly (i.e. in order to assign it to another variable)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Can be used to shorten if/else operations. This comes in handy for returning a value quickly (i.e. in order to assign it to another variable)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089306,
        "id": "435e1f22-9385-473a-b88b-932427d6a025",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089306,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089307,
        "id": "1c8c0ca4-1c97-47cf-8228-fa06273dcb30",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089307,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var animal = 'kitty';\nvar result = (animal === 'kitty') ? 'cute' : 'still nice';"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var animal = 'kitty';\nvar result = (animal === 'kitty') ? 'cute' : 'still nice';",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089307,
        "id": "2c7faf79-ac39-4863-a2ce-7087b2a3f0ef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089307,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this case, "
            ],
            [
              "result",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " gets the ‘cute’ value, because the value of animal is ‘kitty’. If animal had another value, result would get the ‘still nice’ value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this case, "
          },
          {
            "Text": "result",
            "AttrFlags": 2
          },
          {
            "Text": " gets the ‘cute’ value, because the value of animal is ‘kitty’. If animal had another value, result would get the ‘still nice’ value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089307,
        "id": "6b82fd44-2c1d-4454-ac87-83a982709052",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089307,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Compare this to what the code would like with "
            ],
            [
              "if/else",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " conditions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Compare this to what the code would like with "
          },
          {
            "Text": "if/else",
            "AttrFlags": 2
          },
          {
            "Text": " conditions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089307,
        "id": "38892e68-7170-4d11-9c13-23c7e81127f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089307,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var animal = 'kitty';\nvar result = '';\nif (animal === 'kitty') {\n    result = 'cute';\n} else {\n    result = 'still nice';\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var animal = 'kitty';\nvar result = '';\nif (animal === 'kitty') {\n    result = 'cute';\n} else {\n    result = 'still nice';\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089307,
        "id": "77228a91-0840-424a-a363-bb5eb9902e7f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089307,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "if",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "else",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " conditions may have several operations. In this case the operator returns the result of the last expression."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "if",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "else",
            "AttrFlags": 2
          },
          {
            "Text": " conditions may have several operations. In this case the operator returns the result of the last expression."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089307,
        "id": "b46c2082-8799-45c3-9bb6-c15dbb116516",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089307,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var a = 0;\nvar str = 'not a';\nvar b = '';\nb = a === 0 ? (a = 1, str += ' test') : (a = 2);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var a = 0;\nvar str = 'not a';\nvar b = '';\nb = a === 0 ? (a = 1, str += ' test') : (a = 2);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089308,
        "id": "19bf29f7-1330-4a28-9db8-d93d6cf272b7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089308,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Because "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " was equal to 0, it becomes "
            ],
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and "
            ],
            [
              "str",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " becomes ‘not a test’. The operation which involved "
            ],
            [
              "str",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " was the last, so "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " receives the result of the operation, which is the value contained in "
            ],
            [
              "str",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", i.e. ‘not a test’."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Because "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " was equal to 0, it becomes "
          },
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": ", and "
          },
          {
            "Text": "str",
            "AttrFlags": 2
          },
          {
            "Text": " becomes ‘not a test’. The operation which involved "
          },
          {
            "Text": "str",
            "AttrFlags": 2
          },
          {
            "Text": " was the last, so "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": " receives the result of the operation, which is the value contained in "
          },
          {
            "Text": "str",
            "AttrFlags": 2
          },
          {
            "Text": ", i.e. ‘not a test’."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089308,
        "id": "2349a23f-3600-4918-a048-70a81a5e5bca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089308,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Ternary operators "
            ],
            [
              "always",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " expect else conditions, otherwise you’ll get a syntax error. As a workaround you could return a zero something similar in the else branch - this doesn’t matter if you aren’t using the return value but just shortening (or attempting to shorten) the operation."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Ternary operators "
          },
          {
            "Text": "always",
            "AttrFlags": 4
          },
          {
            "Text": " expect else conditions, otherwise you’ll get a syntax error. As a workaround you could return a zero something similar in the else branch - this doesn’t matter if you aren’t using the return value but just shortening (or attempting to shorten) the operation."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089308,
        "id": "30980c38-a4b2-47be-b74c-d619a79180af",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089308,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var a = 1;\na === 1 ? alert('Hey, it is 1!') : 0;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var a = 1;\na === 1 ? alert('Hey, it is 1!') : 0;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089308,
        "id": "e194f671-d36f-4340-b4c1-428e154bc022",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089308,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As you see, "
            ],
            [
              "if (a === 1) alert('Hey, it is 1!');",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " would do the same thing. It would be just a char longer, since it doesn’t need an obligatory "
            ],
            [
              "else",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " condition. If an "
            ],
            [
              "else",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " condition was involved, the ternary method would be much cleaner."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As you see, "
          },
          {
            "Text": "if (a === 1) alert('Hey, it is 1!');",
            "AttrFlags": 2
          },
          {
            "Text": " would do the same thing. It would be just a char longer, since it doesn’t need an obligatory "
          },
          {
            "Text": "else",
            "AttrFlags": 2
          },
          {
            "Text": " condition. If an "
          },
          {
            "Text": "else",
            "AttrFlags": 2
          },
          {
            "Text": " condition was involved, the ternary method would be much cleaner."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089308,
        "id": "a0489a02-eb77-4e87-b545-2dac3673bc34",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089308,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "a === 1 ? alert('Hey, it is 1!') : alert('Weird, what could it be?');\nif (a === 1) alert('Hey, it is 1!') else alert('Weird, what could it be?');"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "a === 1 ? alert('Hey, it is 1!') : alert('Weird, what could it be?');\nif (a === 1) alert('Hey, it is 1!') else alert('Weird, what could it be?');",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089309,
        "id": "2ee9f4c7-42d8-459b-bd40-fabb79009543",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089309,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Ternaries can be nested to encapsulate additional logic. For example"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Ternaries can be nested to encapsulate additional logic. For example"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089309,
        "id": "05c6882e-9664-4916-8180-789ab9750dca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089309,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "foo ? bar ? 1 : 2 : 3\n\n// To be clear, this is evaluated left to right \n// and can be more explicitly expressed as:\n\nfoo ? (bar ? 1 : 2) : 3"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "foo ? bar ? 1 : 2 : 3\n\n// To be clear, this is evaluated left to right \n// and can be more explicitly expressed as:\n\nfoo ? (bar ? 1 : 2) : 3",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089309,
        "id": "611a0204-abaf-47e0-841f-072b0cc531d1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089309,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is the same as the following "
            ],
            [
              "if/else",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is the same as the following "
          },
          {
            "Text": "if/else",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089309,
        "id": "6bc540af-2e62-409f-a709-72ca40e40454",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089309,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if (foo) {\n  if (bar) {\n    1\n  } else {\n    2\n  }\n} else {\n  3\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if (foo) {\n  if (bar) {\n    1\n  } else {\n    2\n  }\n} else {\n  3\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089309,
        "id": "d24cebb7-a6c2-421d-911a-23eb5fb2d406",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089309,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Stylistically this should only be used with short variable names, as multi-line ternaries can drastically decrease readability."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Stylistically this should only be used with short variable names, as multi-line ternaries can drastically decrease readability."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089309,
        "id": "c04b5867-659a-4e4f-a55b-73ab3cd4d2f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089309,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The only statements which cannot be used in ternaries are control statements. For example, you cannot use return or break with ternaries. The following expression will be invalid."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The only statements which cannot be used in ternaries are control statements. For example, you cannot use return or break with ternaries. The following expression will be invalid."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089309,
        "id": "8e1550a4-7c41-42a0-8151-ea69f0066f73",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089309,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var animal = 'kitty';\nfor (var i = 0; i \u003c 5; ++i) {\n    (animal === 'kitty') ? break:console.log(i);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var animal = 'kitty';\nfor (var i = 0; i \u003c 5; ++i) {\n    (animal === 'kitty') ? break:console.log(i);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089310,
        "id": "0fb61f92-c660-4976-b134-550b591bdafc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089310,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For return statements, the following would also be invalid:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For return statements, the following would also be invalid:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089310,
        "id": "2312302c-9246-4622-93a0-18acd9c27cbf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089310,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var animal = 'kitty';\n(animal === 'kitty') ? return 'meow' : return 'woof';"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var animal = 'kitty';\n(animal === 'kitty') ? return 'meow' : return 'woof';",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089310,
        "id": "807559aa-de53-4db7-937f-a3722d3d2eb8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089310,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To do the above properly, you would return the ternary as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To do the above properly, you would return the ternary as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715089310,
        "id": "f1c370ee-4553-49d2-aedb-0480cbfb81f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715089310,
        "parent_id": "b9d354cc-8bd6-4cb2-aa32-1535b0397802",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var animal = 'kitty';\nreturn (animal === 'kitty') ? 'meow' : 'woof';"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var animal = 'kitty';\nreturn (animal === 'kitty') ? 'meow' : 'woof';",
        "code_language": "Plain Text"
      }
    ],
    "title": "010 Ternary operators"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}