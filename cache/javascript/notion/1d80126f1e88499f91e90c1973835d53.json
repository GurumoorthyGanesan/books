{
  "ID": "1d80126f-1e88-499f-91e9-0c1973835d53",
  "Root": {
    "alive": true,
    "content": [
      "851b486d-c34f-4023-9923-5c2f3edb5670",
      "7b88b068-ac36-4978-977c-dc137e7b61f1",
      "fecf92e6-4cf2-4b6d-a13e-a2d2575a59bd",
      "a7f206e3-ba3f-42f4-a738-dc0bf88fb261",
      "75612e70-5833-4ef8-9d4f-b2cd9b710142",
      "390265b1-23db-4348-b42d-1de937044930",
      "053d0407-b40c-4788-a6af-5d7f1ef76350",
      "0ed1a766-7693-41ad-a389-fafca11ba465",
      "11a43ab6-5702-45f5-96ff-c472e23563e5"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715071226,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1d80126f-1e88-499f-91e9-0c1973835d53",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550869200000,
    "parent_id": "521bee64-2ddd-4a12-939f-508459526ff2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Remainder Modulus "
        ]
      ]
    },
    "type": "page",
    "version": 20,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715071221,
        "id": "851b486d-c34f-4023-9923-5c2f3edb5670",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715071221,
        "parent_id": "1d80126f-1e88-499f-91e9-0c1973835d53",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The remainder / modulus operator ("
            ],
            [
              "%",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") returns the remainder after (integer) division."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The remainder / modulus operator ("
          },
          {
            "Text": "%",
            "AttrFlags": 2
          },
          {
            "Text": ") returns the remainder after (integer) division."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715071223,
        "id": "7b88b068-ac36-4978-977c-dc137e7b61f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550869140000,
        "parent_id": "1d80126f-1e88-499f-91e9-0c1973835d53",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "console.log( 42 %  10); //  2\nconsole.log( 42 % -10); //  2\nconsole.log(-42 %  10); // -2\nconsole.log(-42 % -10); // -2\nconsole.log(-40 %  10); // -0\nconsole.log( 40 %  10); //  0"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "console.log( 42 %  10); //  2\nconsole.log( 42 % -10); //  2\nconsole.log(-42 %  10); // -2\nconsole.log(-42 % -10); // -2\nconsole.log(-40 %  10); // -0\nconsole.log( 40 %  10); //  0",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715071223,
        "id": "fecf92e6-4cf2-4b6d-a13e-a2d2575a59bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715071223,
        "parent_id": "1d80126f-1e88-499f-91e9-0c1973835d53",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This operator returns the remainder left over when one operand is divided by a second operand. When the first operand is a negative value, the return value will always be negative, and vice versa for positive values."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This operator returns the remainder left over when one operand is divided by a second operand. When the first operand is a negative value, the return value will always be negative, and vice versa for positive values."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715071224,
        "id": "a7f206e3-ba3f-42f4-a738-dc0bf88fb261",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715071224,
        "parent_id": "1d80126f-1e88-499f-91e9-0c1973835d53",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the example above, "
            ],
            [
              "10",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be subtracted four times from "
            ],
            [
              "42",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " before there is not enough left to subtract again without it changing sign. The remainder is thus: "
            ],
            [
              "42 - 4 * 10 = 2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the example above, "
          },
          {
            "Text": "10",
            "AttrFlags": 2
          },
          {
            "Text": " can be subtracted four times from "
          },
          {
            "Text": "42",
            "AttrFlags": 2
          },
          {
            "Text": " before there is not enough left to subtract again without it changing sign. The remainder is thus: "
          },
          {
            "Text": "42 - 4 * 10 = 2",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715071224,
        "id": "75612e70-5833-4ef8-9d4f-b2cd9b710142",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715071224,
        "parent_id": "1d80126f-1e88-499f-91e9-0c1973835d53",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The remainder operator may be useful for the following problems:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The remainder operator may be useful for the following problems:"
          }
        ]
      },
      {
        "alive": true,
        "content": [
          "c78c2a44-dc32-49a0-b397-5786b9262a8e",
          "1eceb350-31f2-477d-ad87-6dd5d406f8ed"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715071224,
        "id": "390265b1-23db-4348-b42d-1de937044930",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550869140000,
        "parent_id": "1d80126f-1e88-499f-91e9-0c1973835d53",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Test if an integer is (not) divisible by another number:"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 4,
        "content_resolved": [
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550715071224,
            "id": "c78c2a44-dc32-49a0-b397-5786b9262a8e",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550869140000,
            "parent_id": "390265b1-23db-4348-b42d-1de937044930",
            "parent_table": "block",
            "properties": {
              "language": [
                [
                  "JavaScript"
                ]
              ],
              "title": [
                [
                  "x % 4 == 0 // true if x is divisible by 4\nx % 2 == 0 // true if x is even number\nx % 2 != 0 // true if x is odd number"
                ]
              ]
            },
            "type": "code",
            "version": 5,
            "code": "x % 4 == 0 // true if x is divisible by 4\nx % 2 == 0 // true if x is even number\nx % 2 != 0 // true if x is odd number",
            "code_language": "JavaScript"
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550715071224,
            "id": "1eceb350-31f2-477d-ad87-6dd5d406f8ed",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550869140000,
            "parent_id": "390265b1-23db-4348-b42d-1de937044930",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "Since "
                ],
                [
                  "0 === -0",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  ", this also works for "
                ],
                [
                  "x \u003c= -0",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  "."
                ]
              ]
            },
            "type": "text",
            "version": 4,
            "inline_content": [
              {
                "Text": "Since "
              },
              {
                "Text": "0 === -0",
                "AttrFlags": 2
              },
              {
                "Text": ", this also works for "
              },
              {
                "Text": "x \u003c= -0",
                "AttrFlags": 2
              },
              {
                "Text": "."
              }
            ]
          }
        ],
        "inline_content": [
          {
            "Text": "Test if an integer is (not) divisible by another number:"
          }
        ]
      },
      {
        "alive": true,
        "content": [
          "6445ff31-c6bc-42d4-b4ab-161810569bdc",
          "e9127ff6-1a3c-4e80-907a-c7b183eff919",
          "113365d9-49dd-4314-98d4-ca96865746d5",
          "f61dde26-51c4-41d5-bd63-41cb19cdabac",
          "2d5fd670-ee62-466c-894e-cb70e31a859f"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715071225,
        "id": "053d0407-b40c-4788-a6af-5d7f1ef76350",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550869140000,
        "parent_id": "1d80126f-1e88-499f-91e9-0c1973835d53",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Implement cyclic increment/decrement of value within "
            ],
            [
              "[0, n)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interval."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 9,
        "content_resolved": [
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550715071225,
            "id": "6445ff31-c6bc-42d4-b4ab-161810569bdc",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550869140000,
            "parent_id": "053d0407-b40c-4788-a6af-5d7f1ef76350",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "Suppose that we need to increment integer value from "
                ],
                [
                  "0",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  " to (but not including) "
                ],
                [
                  "n",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  ", so the next value after "
                ],
                [
                  "n-1",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  " become "
                ],
                [
                  "0",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  ". This can be done by such pseudocode:"
                ]
              ]
            },
            "type": "text",
            "version": 4,
            "inline_content": [
              {
                "Text": "Suppose that we need to increment integer value from "
              },
              {
                "Text": "0",
                "AttrFlags": 2
              },
              {
                "Text": " to (but not including) "
              },
              {
                "Text": "n",
                "AttrFlags": 2
              },
              {
                "Text": ", so the next value after "
              },
              {
                "Text": "n-1",
                "AttrFlags": 2
              },
              {
                "Text": " become "
              },
              {
                "Text": "0",
                "AttrFlags": 2
              },
              {
                "Text": ". This can be done by such pseudocode:"
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550715071225,
            "id": "e9127ff6-1a3c-4e80-907a-c7b183eff919",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550869140000,
            "parent_id": "053d0407-b40c-4788-a6af-5d7f1ef76350",
            "parent_table": "block",
            "properties": {
              "language": [
                [
                  "JavaScript"
                ]
              ],
              "title": [
                [
                  "var n = ...; // given n\nvar i = 0;\nfunction inc() {\n    i = (i + 1) % n;\n}\nwhile (true) {\n    inc();\n    // update something with i\n}"
                ]
              ]
            },
            "type": "code",
            "version": 5,
            "code": "var n = ...; // given n\nvar i = 0;\nfunction inc() {\n    i = (i + 1) % n;\n}\nwhile (true) {\n    inc();\n    // update something with i\n}",
            "code_language": "JavaScript"
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550715071226,
            "id": "113365d9-49dd-4314-98d4-ca96865746d5",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550869140000,
            "parent_id": "053d0407-b40c-4788-a6af-5d7f1ef76350",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "Now generalize the above problem and suppose that we need to allow to both increment and decrement that value from "
                ],
                [
                  "0",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  " to (not including) "
                ],
                [
                  "n",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  ", so the next value after "
                ],
                [
                  "n-1",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  " become "
                ],
                [
                  "0",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  " and the previous value before "
                ],
                [
                  "0",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  " become "
                ],
                [
                  "n-1",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  "."
                ]
              ]
            },
            "type": "text",
            "version": 4,
            "inline_content": [
              {
                "Text": "Now generalize the above problem and suppose that we need to allow to both increment and decrement that value from "
              },
              {
                "Text": "0",
                "AttrFlags": 2
              },
              {
                "Text": " to (not including) "
              },
              {
                "Text": "n",
                "AttrFlags": 2
              },
              {
                "Text": ", so the next value after "
              },
              {
                "Text": "n-1",
                "AttrFlags": 2
              },
              {
                "Text": " become "
              },
              {
                "Text": "0",
                "AttrFlags": 2
              },
              {
                "Text": " and the previous value before "
              },
              {
                "Text": "0",
                "AttrFlags": 2
              },
              {
                "Text": " become "
              },
              {
                "Text": "n-1",
                "AttrFlags": 2
              },
              {
                "Text": "."
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550715071226,
            "id": "f61dde26-51c4-41d5-bd63-41cb19cdabac",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550869140000,
            "parent_id": "053d0407-b40c-4788-a6af-5d7f1ef76350",
            "parent_table": "block",
            "properties": {
              "language": [
                [
                  "JavaScript"
                ]
              ],
              "title": [
                [
                  "var n = ...; // given n\nvar i = 0;\nfunction delta(d) { // d - any signed integer\n    i = (i + d + n) % n; // we add n to (i+d) to ensure the sum is positive\n}"
                ]
              ]
            },
            "type": "code",
            "version": 5,
            "code": "var n = ...; // given n\nvar i = 0;\nfunction delta(d) { // d - any signed integer\n    i = (i + d + n) % n; // we add n to (i+d) to ensure the sum is positive\n}",
            "code_language": "JavaScript"
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550715071226,
            "id": "2d5fd670-ee62-466c-894e-cb70e31a859f",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550869140000,
            "parent_id": "053d0407-b40c-4788-a6af-5d7f1ef76350",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "Now we can call "
                ],
                [
                  "delta()",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  " function passing any integer, both positive and negative, as delta parameter."
                ]
              ]
            },
            "type": "text",
            "version": 5,
            "inline_content": [
              {
                "Text": "Now we can call "
              },
              {
                "Text": "delta()",
                "AttrFlags": 2
              },
              {
                "Text": " function passing any integer, both positive and negative, as delta parameter."
              }
            ]
          }
        ],
        "inline_content": [
          {
            "Text": "Implement cyclic increment/decrement of value within "
          },
          {
            "Text": "[0, n)",
            "AttrFlags": 2
          },
          {
            "Text": " interval."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715071226,
        "id": "0ed1a766-7693-41ad-a389-fafca11ba465",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715071226,
        "parent_id": "1d80126f-1e88-499f-91e9-0c1973835d53",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using modulus to obtain the fractional part of a number"
            ]
          ]
        },
        "type": "sub_sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using modulus to obtain the fractional part of a number"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715071226,
        "id": "11a43ab6-5702-45f5-96ff-c472e23563e5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550869200000,
        "parent_id": "1d80126f-1e88-499f-91e9-0c1973835d53",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "var myNum = 10 / 4;       // 2.5\nvar fraction = myNum % 1; // 0.5\nmyNum = -20 / 7;          // -2.857142857142857\nfraction = myNum % 1;     // -0.857142857142857"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var myNum = 10 / 4;       // 2.5\nvar fraction = myNum % 1; // 0.5\nmyNum = -20 / 7;          // -2.857142857142857\nfraction = myNum % 1;     // -0.857142857142857",
        "code_language": "JavaScript"
      }
    ],
    "title": "Remainder Modulus ",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}