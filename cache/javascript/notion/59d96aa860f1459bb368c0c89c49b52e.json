{
  "ID": "59d96aa8-60f1-459b-b368-c0c89c49b52e",
  "Root": {
    "alive": true,
    "content": [
      "e89bffe2-f0dc-42f5-b863-692f286cdc1e",
      "639cba62-83d6-48a2-9f19-7d8895862393",
      "65292e58-98f1-4715-a401-d52363315645",
      "32b7ee55-c820-4d07-b609-e3df4d22f53a",
      "2303dcfe-cf3b-494f-a0aa-a4e7ae04bc8a",
      "2bd7de28-a79d-49fc-a64b-c7aa329942ce",
      "a70e7af8-17ae-4a98-954e-15e4c902749a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550716039094,
    "id": "59d96aa8-60f1-459b-b368-c0c89c49b52e",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550716039094,
    "parent_id": "bf556b76-165e-46a0-82b3-d273d6f00f00",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 Basics of symbol primitive type"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716039077,
        "id": "e89bffe2-f0dc-42f5-b863-692f286cdc1e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716039077,
        "parent_id": "59d96aa8-60f1-459b-b368-c0c89c49b52e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Symbol",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a new primitive type in ES6. Symbols are used mainly as "
            ],
            [
              "property keys",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", and one of its main characteristics is that they are "
            ],
            [
              "unique",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", even if they have the same description. This means they will never have a name clash with any other property key that is a "
            ],
            [
              "symbol",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "string",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Symbol",
            "AttrFlags": 2
          },
          {
            "Text": " is a new primitive type in ES6. Symbols are used mainly as "
          },
          {
            "Text": "property keys",
            "AttrFlags": 1
          },
          {
            "Text": ", and one of its main characteristics is that they are "
          },
          {
            "Text": "unique",
            "AttrFlags": 4
          },
          {
            "Text": ", even if they have the same description. This means they will never have a name clash with any other property key that is a "
          },
          {
            "Text": "symbol",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "string",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716039079,
        "id": "639cba62-83d6-48a2-9f19-7d8895862393",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716039079,
        "parent_id": "59d96aa8-60f1-459b-b368-c0c89c49b52e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const MY_PROP_KEY = Symbol();\nconst obj = {};\n\nobj[MY_PROP_KEY] = \"ABC\";\nconsole.log(obj[MY_PROP_KEY]);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const MY_PROP_KEY = Symbol();\nconst obj = {};\n\nobj[MY_PROP_KEY] = \"ABC\";\nconsole.log(obj[MY_PROP_KEY]);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716039080,
        "id": "65292e58-98f1-4715-a401-d52363315645",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716039080,
        "parent_id": "59d96aa8-60f1-459b-b368-c0c89c49b52e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example, the result of "
            ],
            [
              "console.log",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " would be "
            ],
            [
              "ABC",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example, the result of "
          },
          {
            "Text": "console.log",
            "AttrFlags": 2
          },
          {
            "Text": " would be "
          },
          {
            "Text": "ABC",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716039080,
        "id": "32b7ee55-c820-4d07-b609-e3df4d22f53a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716039080,
        "parent_id": "59d96aa8-60f1-459b-b368-c0c89c49b52e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can also have named Symbols like:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can also have named Symbols like:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716039080,
        "id": "2303dcfe-cf3b-494f-a0aa-a4e7ae04bc8a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716039080,
        "parent_id": "59d96aa8-60f1-459b-b368-c0c89c49b52e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const APPLE    = Symbol('Apple');\nconst BANANA   = Symbol('Banana');\nconst GRAPE    = Symbol('Grape');"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const APPLE    = Symbol('Apple');\nconst BANANA   = Symbol('Banana');\nconst GRAPE    = Symbol('Grape');",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716039092,
        "id": "2bd7de28-a79d-49fc-a64b-c7aa329942ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716039092,
        "parent_id": "59d96aa8-60f1-459b-b368-c0c89c49b52e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Each of these values are unique and cannot be overridden."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Each of these values are unique and cannot be overridden."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716039094,
        "id": "a70e7af8-17ae-4a98-954e-15e4c902749a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716039094,
        "parent_id": "59d96aa8-60f1-459b-b368-c0c89c49b52e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Providing an optional parameter "
            ],
            [
              "(description)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when creating primitive symbols can be used for debugging but not to access the symbol itself (but see the "
            ],
            [
              "Symbol.for()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/javascript/2764/symbols/19176/using-symbol-for-to-create-global-shared-symbols"
                ]
              ]
            ],
            [
              " example for a way to register/lookup global shared symbols)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Providing an optional parameter "
          },
          {
            "Text": "(description)",
            "AttrFlags": 2
          },
          {
            "Text": " when creating primitive symbols can be used for debugging but not to access the symbol itself (but see the "
          },
          {
            "Text": "Symbol.for()",
            "AttrFlags": 2,
            "Link": "http://stackoverflow.com/documentation/javascript/2764/symbols/19176/using-symbol-for-to-create-global-shared-symbols"
          },
          {
            "Text": " example for a way to register/lookup global shared symbols)."
          }
        ]
      }
    ],
    "title": "010 Basics of symbol primitive type"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}