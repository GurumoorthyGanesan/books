{
  "ID": "863faacb-b23f-45c9-bc29-b71b88a89660",
  "Root": {
    "alive": true,
    "content": [
      "41d76d71-8acb-4ca4-8239-1ca6d272171a",
      "9fcae71c-242e-4447-81d9-909051d6cd74",
      "eea48036-1295-479b-925a-76299eefbc9a",
      "b03ab9a6-393b-4fe7-aae0-2fb7e5716a65",
      "4012cbbf-e260-4d12-80ae-1a4ec21a8d01",
      "4c14c42d-3611-43ed-8b23-91471d3ea779",
      "2edbe323-f36a-49f7-b5b6-5a3c486c225a",
      "1859d661-223c-4c92-b221-d9c259a38b7c",
      "149622f8-e792-4b06-8aa8-4eee24458a19",
      "20162728-496a-40bc-b581-281863dfc374",
      "6a797bd1-4ba1-46c5-88dd-866992ce7c87",
      "6e7f7235-0995-4d46-ba18-8a28ef0a6f6b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715091519,
    "id": "863faacb-b23f-45c9-bc29-b71b88a89660",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550715091519,
    "parent_id": "6f8457e8-22bd-4430-878a-05b299e31aea",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Switch statement"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715091517,
        "id": "41d76d71-8acb-4ca4-8239-1ca6d272171a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715091517,
        "parent_id": "863faacb-b23f-45c9-bc29-b71b88a89660",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Switch statements compare the value of an expression against 1 or more values and executes different sections of code based on that comparison."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Switch statements compare the value of an expression against 1 or more values and executes different sections of code based on that comparison."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715091518,
        "id": "9fcae71c-242e-4447-81d9-909051d6cd74",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715091518,
        "parent_id": "863faacb-b23f-45c9-bc29-b71b88a89660",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var value = 1;\nswitch (value) {\n  case 1:\n    console.log('I will always run');\n    break;\n  case 2:\n    console.log('I will never run');\n    break;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var value = 1;\nswitch (value) {\n  case 1:\n    console.log('I will always run');\n    break;\n  case 2:\n    console.log('I will never run');\n    break;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715091518,
        "id": "eea48036-1295-479b-925a-76299eefbc9a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715091518,
        "parent_id": "863faacb-b23f-45c9-bc29-b71b88a89660",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "break",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement “breaks” out of the switch statement and ensures no more code within the switch statement is executed. This is how sections are defined and allows the user to make “fall through” cases."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "break",
            "AttrFlags": 2
          },
          {
            "Text": " statement “breaks” out of the switch statement and ensures no more code within the switch statement is executed. This is how sections are defined and allows the user to make “fall through” cases."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715091518,
        "id": "b03ab9a6-393b-4fe7-aae0-2fb7e5716a65",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715091518,
        "parent_id": "863faacb-b23f-45c9-bc29-b71b88a89660",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Warning: lack of a break or return statement for each case means the program will continue to evaluate the next case, even if the case criteria is unmet!"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Warning: lack of a break or return statement for each case means the program will continue to evaluate the next case, even if the case criteria is unmet!"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715091518,
        "id": "4012cbbf-e260-4d12-80ae-1a4ec21a8d01",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715091518,
        "parent_id": "863faacb-b23f-45c9-bc29-b71b88a89660",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "switch (value) {\n  case 1:\n    console.log('I will only run if value === 1');\n    // Here, the code \"falls through\" and will run the code under case 2\n  case 2:\n    console.log('I will run if value === 1 or value === 2');\n    break;\n  case 3:\n    console.log('I will only run if value === 3');\n    break;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "switch (value) {\n  case 1:\n    console.log('I will only run if value === 1');\n    // Here, the code \"falls through\" and will run the code under case 2\n  case 2:\n    console.log('I will run if value === 1 or value === 2');\n    break;\n  case 3:\n    console.log('I will only run if value === 3');\n    break;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715091518,
        "id": "4c14c42d-3611-43ed-8b23-91471d3ea779",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715091518,
        "parent_id": "863faacb-b23f-45c9-bc29-b71b88a89660",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The last case is the "
            ],
            [
              "default",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " case. This one will run if no other matches were made."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The last case is the "
          },
          {
            "Text": "default",
            "AttrFlags": 2
          },
          {
            "Text": " case. This one will run if no other matches were made."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715091518,
        "id": "2edbe323-f36a-49f7-b5b6-5a3c486c225a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715091518,
        "parent_id": "863faacb-b23f-45c9-bc29-b71b88a89660",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var animal = 'Lion';\nswitch (animal) {\n  case 'Dog':\n    console.log('I will not run since animal !== \"Dog\"');\n    break;\n  case 'Cat':\n    console.log('I will not run since animal !== \"Cat\"');\n    break;\n  default:\n    console.log('I will run since animal does not match any other case');\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var animal = 'Lion';\nswitch (animal) {\n  case 'Dog':\n    console.log('I will not run since animal !== \"Dog\"');\n    break;\n  case 'Cat':\n    console.log('I will not run since animal !== \"Cat\"');\n    break;\n  default:\n    console.log('I will run since animal does not match any other case');\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715091519,
        "id": "1859d661-223c-4c92-b221-d9c259a38b7c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715091519,
        "parent_id": "863faacb-b23f-45c9-bc29-b71b88a89660",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It should be noted that a case expression can be any kind of expression. This means you can use comparisons, function calls, etc. as case values."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It should be noted that a case expression can be any kind of expression. This means you can use comparisons, function calls, etc. as case values."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715091519,
        "id": "149622f8-e792-4b06-8aa8-4eee24458a19",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715091519,
        "parent_id": "863faacb-b23f-45c9-bc29-b71b88a89660",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function john() {\n  return 'John';\n}\n\nfunction jacob() {\n  return 'Jacob';\n}\n\nswitch (name) {\n  case john(): // Compare name with the return value of john() (name == \"John\")\n    console.log('I will run if name === \"John\"');\n    break;\n  case 'Ja' + 'ne': // Concatenate the strings together then compare (name == \"Jane\")\n    console.log('I will run if name === \"Jane\"');\n    break;\n  case john() + ' ' + jacob() + ' Jingleheimer Schmidt':\n    console.log('His name is equal to name too!');\n    break;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function john() {\n  return 'John';\n}\n\nfunction jacob() {\n  return 'Jacob';\n}\n\nswitch (name) {\n  case john(): // Compare name with the return value of john() (name == \"John\")\n    console.log('I will run if name === \"John\"');\n    break;\n  case 'Ja' + 'ne': // Concatenate the strings together then compare (name == \"Jane\")\n    console.log('I will run if name === \"Jane\"');\n    break;\n  case john() + ' ' + jacob() + ' Jingleheimer Schmidt':\n    console.log('His name is equal to name too!');\n    break;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715091519,
        "id": "20162728-496a-40bc-b581-281863dfc374",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715091519,
        "parent_id": "863faacb-b23f-45c9-bc29-b71b88a89660",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Multiple Inclusive Criteria for Cases",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Multiple Inclusive Criteria for Cases",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715091519,
        "id": "6a797bd1-4ba1-46c5-88dd-866992ce7c87",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715091519,
        "parent_id": "863faacb-b23f-45c9-bc29-b71b88a89660",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Since cases “fall through” without a "
            ],
            [
              "break",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "return",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement, you can use this to create multiple inclusive criteria:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Since cases “fall through” without a "
          },
          {
            "Text": "break",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "return",
            "AttrFlags": 2
          },
          {
            "Text": " statement, you can use this to create multiple inclusive criteria:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715091519,
        "id": "6e7f7235-0995-4d46-ba18-8a28ef0a6f6b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715091519,
        "parent_id": "863faacb-b23f-45c9-bc29-b71b88a89660",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var x = \"c\"\nswitch (x) {\n   case \"a\":\n   case \"b\":\n   case \"c\":\n      console.log(\"Either a, b, or c was selected.\");\n      break;\n   case \"d\":\n      console.log(\"Only d was selected.\");\n      break;\n   default:\n      console.log(\"No case was matched.\");\n      break;  // precautionary break if case order changes\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var x = \"c\"\nswitch (x) {\n   case \"a\":\n   case \"b\":\n   case \"c\":\n      console.log(\"Either a, b, or c was selected.\");\n      break;\n   case \"d\":\n      console.log(\"Only d was selected.\");\n      break;\n   default:\n      console.log(\"No case was matched.\");\n      break;  // precautionary break if case order changes\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "020 Switch statement"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}