{
  "ID": "f09a5b32-a7b2-4190-a445-cf806d4fe575",
  "Root": {
    "alive": true,
    "content": [
      "2da96ee2-9af0-46c7-a447-7ef24a0944f4",
      "7eb73e2c-04b5-403f-bf85-c0f9c21c69cc",
      "46a2d6e6-53f7-4288-8bae-e91dc1014113",
      "ffbb95d5-84c3-449c-add1-0d94f79870ed",
      "10aeab26-8cff-4220-a765-54f2f1e28171",
      "1c93c2ea-4798-4c92-8049-4053bb84a430"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715611867,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "f09a5b32-a7b2-4190-a445-cf806d4fe575",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551593580000,
    "parent_id": "0a8fef9d-a46b-4135-9e0b-09adc1486be0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Introduction"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715611864,
        "id": "2da96ee2-9af0-46c7-a447-7ef24a0944f4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551593580000,
        "parent_id": "f09a5b32-a7b2-4190-a445-cf806d4fe575",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A function defined as "
            ],
            [
              "async",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a function that can perform asynchronous actions but still look synchronous. The way it’s done is using the "
            ],
            [
              "await",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword to defer the function while it waits for a "
            ],
            [
              "Promise",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/javascript/231/promises"
                ]
              ]
            ],
            [
              " to resolve or reject."
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "A function defined as "
          },
          {
            "Text": "async",
            "AttrFlags": 2
          },
          {
            "Text": " is a function that can perform asynchronous actions but still look synchronous. The way it’s done is using the "
          },
          {
            "Text": "await",
            "AttrFlags": 2
          },
          {
            "Text": " keyword to defer the function while it waits for a "
          },
          {
            "Text": "Promise",
            "Link": "http://stackoverflow.com/documentation/javascript/231/promises"
          },
          {
            "Text": " to resolve or reject."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715611866,
        "id": "7eb73e2c-04b5-403f-bf85-c0f9c21c69cc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715611866,
        "parent_id": "f09a5b32-a7b2-4190-a445-cf806d4fe575",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For instance, using the promise-based "
            ],
            [
              "Fetch API",
              [
                [
                  "a",
                  "https://developer.mozilla.org/en/docs/Web/API/Fetch_API"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For instance, using the promise-based "
          },
          {
            "Text": "Fetch API",
            "Link": "https://developer.mozilla.org/en/docs/Web/API/Fetch_API"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715611866,
        "id": "46a2d6e6-53f7-4288-8bae-e91dc1014113",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551593580000,
        "parent_id": "f09a5b32-a7b2-4190-a445-cf806d4fe575",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "async function getJSON(url) {\n    try {\n        const response = await fetch(url);\n        return await response.json();\n    }\n    catch (err) {\n        // Rejections in the promise will get thrown here\n        console.error(err.message);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "async function getJSON(url) {\n    try {\n        const response = await fetch(url);\n        return await response.json();\n    }\n    catch (err) {\n        // Rejections in the promise will get thrown here\n        console.error(err.message);\n    }\n}",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715611867,
        "id": "ffbb95d5-84c3-449c-add1-0d94f79870ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715611867,
        "parent_id": "f09a5b32-a7b2-4190-a445-cf806d4fe575",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An async function always returns a Promise itself, so you can use it in other asynchronous functions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An async function always returns a Promise itself, so you can use it in other asynchronous functions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715611867,
        "id": "10aeab26-8cff-4220-a765-54f2f1e28171",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715611867,
        "parent_id": "f09a5b32-a7b2-4190-a445-cf806d4fe575",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Arrow function style"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Arrow function style"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715611867,
        "id": "1c93c2ea-4798-4c92-8049-4053bb84a430",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551593580000,
        "parent_id": "f09a5b32-a7b2-4190-a445-cf806d4fe575",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "const getJSON = async url =\u003e {\n    const response = await fetch(url);\n    return await response.json();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "const getJSON = async url =\u003e {\n    const response = await fetch(url);\n    return await response.json();\n}",
        "code_language": "JavaScript"
      }
    ],
    "title": "Introduction",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}