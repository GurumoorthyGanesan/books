{
  "ID": "4ec7e854-48b9-4034-b91c-568ae9cbc726",
  "Root": {
    "alive": true,
    "content": [
      "882ab40c-eb1f-4518-b7df-60269ce299e7",
      "659a260c-3a23-48e3-9dca-d0d0029f9cbb",
      "775d408e-de3a-442c-a16c-a609af147698",
      "cc14c426-e367-4b97-9759-9c5841697bd6",
      "5ba4a592-d0c4-45ff-b8c6-616f5ed5212b",
      "c8efabcb-439c-416d-ba06-784eb9056e92",
      "d60a1731-bc77-4789-8715-203dfddebe46",
      "197ba5b4-df4a-4b59-a76a-440904b2af6d",
      "aa825ea0-2bb8-4b73-91ac-ad403004d702",
      "8fdd230e-3046-4363-aaac-9e63295be03c",
      "b1a3042e-74ab-48bc-8384-b19257232f13"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715866404,
    "id": "4ec7e854-48b9-4034-b91c-568ae9cbc726",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550715866404,
    "parent_id": "7e064e1b-dd35-424e-9952-a63c7355d191",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Reverse String"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715866396,
        "id": "882ab40c-eb1f-4518-b7df-60269ce299e7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715866396,
        "parent_id": "4ec7e854-48b9-4034-b91c-568ae9cbc726",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The most ‚Äúpopular‚Äù way of reversing a string in JavaScript is the following code fragment, which is quite common:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The most ‚Äúpopular‚Äù way of reversing a string in JavaScript is the following code fragment, which is quite common:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715866399,
        "id": "659a260c-3a23-48e3-9dca-d0d0029f9cbb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715866399,
        "parent_id": "4ec7e854-48b9-4034-b91c-568ae9cbc726",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function reverseString(str) {\n    return str.split('').reverse().join('');\n}\n\nreverseString('string');    // \"gnirts\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function reverseString(str) {\n    return str.split('').reverse().join('');\n}\n\nreverseString('string');    // \"gnirts\"",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715866400,
        "id": "775d408e-de3a-442c-a16c-a609af147698",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715866400,
        "parent_id": "4ec7e854-48b9-4034-b91c-568ae9cbc726",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, this will work only so long as the string being reversed does not contain surrogate pairs. Astral symbols, i.e.¬†characters outside of the basic multilingual plane, may be represented by two code units, and will lead this naive technique to produce wrong results. Moreover, characters with combining marks (e.g.¬†diaeresis) will appear on the logical ‚Äúnext‚Äù character instead of the original one it was combined with."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, this will work only so long as the string being reversed does not contain surrogate pairs. Astral symbols, i.e.¬†characters outside of the basic multilingual plane, may be represented by two code units, and will lead this naive technique to produce wrong results. Moreover, characters with combining marks (e.g.¬†diaeresis) will appear on the logical ‚Äúnext‚Äù character instead of the original one it was combined with."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715866400,
        "id": "cc14c426-e367-4b97-9759-9c5841697bd6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715866400,
        "parent_id": "4ec7e854-48b9-4034-b91c-568ae9cbc726",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "'ùåÜ‚ñ†.'.split('').reverse().join(''); //fails"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "'ùåÜ‚ñ†.'.split('').reverse().join(''); //fails",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715866401,
        "id": "5ba4a592-d0c4-45ff-b8c6-616f5ed5212b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715866401,
        "parent_id": "4ec7e854-48b9-4034-b91c-568ae9cbc726",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "While the method will work fine for most languages, a truly accurate, encoding respecting algorithm for string reversal is slightly more involved. One such implementation is a tiny library called "
            ],
            [
              "Esrever",
              [
                [
                  "a",
                  "https://github.com/mathiasbynens/esrever"
                ]
              ]
            ],
            [
              ", which uses regular expressions for matching combining marks and surrogate pairs in order to perform the reversing perfectly."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "While the method will work fine for most languages, a truly accurate, encoding respecting algorithm for string reversal is slightly more involved. One such implementation is a tiny library called "
          },
          {
            "Text": "Esrever",
            "Link": "https://github.com/mathiasbynens/esrever"
          },
          {
            "Text": ", which uses regular expressions for matching combining marks and surrogate pairs in order to perform the reversing perfectly."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715866402,
        "id": "c8efabcb-439c-416d-ba06-784eb9056e92",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715866402,
        "parent_id": "4ec7e854-48b9-4034-b91c-568ae9cbc726",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Explanation"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Explanation"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715866403,
        "id": "d60a1731-bc77-4789-8715-203dfddebe46",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715866403,
        "parent_id": "4ec7e854-48b9-4034-b91c-568ae9cbc726",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Section | Explanation | Result |\n‚Äî | ‚Äî | ‚Äî |"
            ],
            [
              "str",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | The input string | "
            ],
            [
              "\"string\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "String.prototype.split( deliminator )",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split"
                ]
              ]
            ],
            [
              " | Splits string "
            ],
            [
              "str",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " into an array. The parameter "
            ],
            [
              "\"\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " means to split between each character. | "
            ],
            [
              "[\"s\",\"t\",\"r\",\"i\",\"n\",\"g\"]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "Array.prototype.reverse()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse"
                ]
              ]
            ],
            [
              " | Returns the array from the split string with its elements in reverse order. | "
            ],
            [
              "[\"g\",\"n\",\"i\",\"r\",\"t\",\"s\"]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "Array.prototype.join( deliminator )",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join"
                ]
              ]
            ],
            [
              " | Joins the elements in the array together into a string. The "
            ],
            [
              "\"\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " parameter means an empty deliminator (i.e., the elements of the array are put right next to each other). | "
            ],
            [
              "\"gnirts\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Section | Explanation | Result |\n‚Äî | ‚Äî | ‚Äî |"
          },
          {
            "Text": "str",
            "AttrFlags": 2
          },
          {
            "Text": " | The input string | "
          },
          {
            "Text": "\"string\"",
            "AttrFlags": 2
          },
          {
            "Text": " |"
          },
          {
            "Text": "String.prototype.split( deliminator )",
            "AttrFlags": 2,
            "Link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split"
          },
          {
            "Text": " | Splits string "
          },
          {
            "Text": "str",
            "AttrFlags": 2
          },
          {
            "Text": " into an array. The parameter "
          },
          {
            "Text": "\"\"",
            "AttrFlags": 2
          },
          {
            "Text": " means to split between each character. | "
          },
          {
            "Text": "[\"s\",\"t\",\"r\",\"i\",\"n\",\"g\"]",
            "AttrFlags": 2
          },
          {
            "Text": "Array.prototype.reverse()",
            "AttrFlags": 2,
            "Link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse"
          },
          {
            "Text": " | Returns the array from the split string with its elements in reverse order. | "
          },
          {
            "Text": "[\"g\",\"n\",\"i\",\"r\",\"t\",\"s\"]",
            "AttrFlags": 2
          },
          {
            "Text": " |"
          },
          {
            "Text": "Array.prototype.join( deliminator )",
            "AttrFlags": 2,
            "Link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join"
          },
          {
            "Text": " | Joins the elements in the array together into a string. The "
          },
          {
            "Text": "\"\"",
            "AttrFlags": 2
          },
          {
            "Text": " parameter means an empty deliminator (i.e., the elements of the array are put right next to each other). | "
          },
          {
            "Text": "\"gnirts\"",
            "AttrFlags": 2
          },
          {
            "Text": " |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715866404,
        "id": "197ba5b4-df4a-4b59-a76a-440904b2af6d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715866404,
        "parent_id": "4ec7e854-48b9-4034-b91c-568ae9cbc726",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using spread operator",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using spread operator",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715866404,
        "id": "aa825ea0-2bb8-4b73-91ac-ad403004d702",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715866404,
        "parent_id": "4ec7e854-48b9-4034-b91c-568ae9cbc726",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function reverseString(str) {\n    return [...String(str)].reverse().join('');    \n}\n\nconsole.log(reverseString('stackoverflow'));  // \"wolfrevokcats\"\nconsole.log(reverseString(1337));             // \"7331\"\nconsole.log(reverseString([1, 2, 3]));        // \"3,2,1\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function reverseString(str) {\n    return [...String(str)].reverse().join('');    \n}\n\nconsole.log(reverseString('stackoverflow'));  // \"wolfrevokcats\"\nconsole.log(reverseString(1337));             // \"7331\"\nconsole.log(reverseString([1, 2, 3]));        // \"3,2,1\"",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715866404,
        "id": "8fdd230e-3046-4363-aaac-9e63295be03c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715866404,
        "parent_id": "4ec7e854-48b9-4034-b91c-568ae9cbc726",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Custom ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "reverse()",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " function",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Custom ",
            "AttrFlags": 1
          },
          {
            "Text": "reverse()",
            "AttrFlags": 3
          },
          {
            "Text": " function",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715866404,
        "id": "b1a3042e-74ab-48bc-8384-b19257232f13",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715866404,
        "parent_id": "4ec7e854-48b9-4034-b91c-568ae9cbc726",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function reverse(string) {\n    var strRev = \"\";\n    for (var i = string.length - 1; i \u003e= 0; i--) {\n        strRev += string[i];\n    }\n    return strRev; \n}\n\nreverse(\"zebra\");  // \"arbez\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function reverse(string) {\n    var strRev = \"\";\n    for (var i = string.length - 1; i \u003e= 0; i--) {\n        strRev += string[i];\n    }\n    return strRev; \n}\n\nreverse(\"zebra\");  // \"arbez\"",
        "code_language": "Plain Text"
      }
    ],
    "title": "020 Reverse String"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}