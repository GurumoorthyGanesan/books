{
  "ID": "35bc12aa-63ff-4099-9b70-86a7747654c6",
  "Root": {
    "alive": true,
    "content": [
      "de0debca-81ac-4d48-82c9-71375fde71c6",
      "1c6d4adf-26e5-4e2b-85fb-7fe99e18e318",
      "6c1bdb91-359f-411e-bda0-744652bf5c5d",
      "515a7c10-34d5-4d9d-92aa-64a86928a12a",
      "266a3e23-1cbb-4e9f-a445-065f1ed7c6c3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715908279,
    "id": "35bc12aa-63ff-4099-9b70-86a7747654c6",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550715908279,
    "parent_id": "6dc84db0-d17b-491a-ac4c-e4ef44dfa83e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "050 Iterating Maps"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715908278,
        "id": "de0debca-81ac-4d48-82c9-71375fde71c6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715908278,
        "parent_id": "35bc12aa-63ff-4099-9b70-86a7747654c6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Map has three methods which returns iterators: "
            ],
            [
              ".keys()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              ".values()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              ".entries()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              ".entries()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the default Map iterator, and contains "
            ],
            [
              "[key, value]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " pairs."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Map has three methods which returns iterators: "
          },
          {
            "Text": ".keys()",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": ".values()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": ".entries()",
            "AttrFlags": 2
          },
          {
            "Text": ". "
          },
          {
            "Text": ".entries()",
            "AttrFlags": 2
          },
          {
            "Text": " is the default Map iterator, and contains "
          },
          {
            "Text": "[key, value]",
            "AttrFlags": 2
          },
          {
            "Text": " pairs."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715908279,
        "id": "1c6d4adf-26e5-4e2b-85fb-7fe99e18e318",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715908279,
        "parent_id": "35bc12aa-63ff-4099-9b70-86a7747654c6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const map = new Map([[1, 2], [3, 4]]);\n\nfor (const [key, value] of map) {\n  console.log(`key: ${key}, value: ${value}`);\n  // logs:\n  // key: 1, value: 2\n  // key: 3, value: 4\n}\n\nfor (const key of map.keys()) {\n  console.log(key); // logs 1 and 3\n}\n\nfor (const value of map.values()) {\n  console.log(value); // logs 2 and 4\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const map = new Map([[1, 2], [3, 4]]);\n\nfor (const [key, value] of map) {\n  console.log(`key: ${key}, value: ${value}`);\n  // logs:\n  // key: 1, value: 2\n  // key: 3, value: 4\n}\n\nfor (const key of map.keys()) {\n  console.log(key); // logs 1 and 3\n}\n\nfor (const value of map.values()) {\n  console.log(value); // logs 2 and 4\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715908279,
        "id": "6c1bdb91-359f-411e-bda0-744652bf5c5d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715908279,
        "parent_id": "35bc12aa-63ff-4099-9b70-86a7747654c6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Map also has "
            ],
            [
              ".forEach()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method. The first parameter is a callback function, which will be called for each element in the map, and the second parameter is the value which will be used as "
            ],
            [
              "this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when executing the callback function."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Map also has "
          },
          {
            "Text": ".forEach()",
            "AttrFlags": 2
          },
          {
            "Text": " method. The first parameter is a callback function, which will be called for each element in the map, and the second parameter is the value which will be used as "
          },
          {
            "Text": "this",
            "AttrFlags": 2
          },
          {
            "Text": " when executing the callback function."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715908279,
        "id": "515a7c10-34d5-4d9d-92aa-64a86928a12a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715908279,
        "parent_id": "35bc12aa-63ff-4099-9b70-86a7747654c6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The callback function has three arguments: value, key, and the map object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The callback function has three arguments: value, key, and the map object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715908279,
        "id": "266a3e23-1cbb-4e9f-a445-065f1ed7c6c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715908279,
        "parent_id": "35bc12aa-63ff-4099-9b70-86a7747654c6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const map = new Map([[1, 2], [3, 4]]);\nmap.forEach((value, key, theMap) =\u003e console.log(`key: ${key}, value: ${value}`));\n// logs:\n// key: 1, value: 2\n// key: 3, value: 4"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const map = new Map([[1, 2], [3, 4]]);\nmap.forEach((value, key, theMap) =\u003e console.log(`key: ${key}, value: ${value}`));\n// logs:\n// key: 1, value: 2\n// key: 3, value: 4",
        "code_language": "Plain Text"
      }
    ],
    "title": "050 Iterating Maps"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}