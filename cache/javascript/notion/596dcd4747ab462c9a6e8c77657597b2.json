{
  "ID": "596dcd47-47ab-462c-9a6e-8c77657597b2",
  "Root": {
    "alive": true,
    "content": [
      "81cccb45-c56c-44dc-b936-da29f2b66d0f",
      "ebc49d06-e0b5-4a5c-b44f-976d1b6c7a79",
      "00df82f5-d1a6-44eb-b0dc-fe72c10761ae",
      "5a02de76-e547-4533-90d4-b7c65a6c2e12",
      "861ea877-259d-4a96-bb44-df35db79d72b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550716477132,
    "id": "596dcd47-47ab-462c-9a6e-8c77657597b2",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550716477132,
    "parent_id": "b361aa68-6764-41b9-96fd-b8cfd83c4c4d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "040 Retrieving data"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716477129,
        "id": "81cccb45-c56c-44dc-b936-da29f2b66d0f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716477129,
        "parent_id": "596dcd47-47ab-462c-9a6e-8c77657597b2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Anything that needs to happen with data in an IndexedDB database happens in a transaction. There are a few things to note about transactions that are mentioned in the Remarks section at the bottom of this page."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Anything that needs to happen with data in an IndexedDB database happens in a transaction. There are a few things to note about transactions that are mentioned in the Remarks section at the bottom of this page."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716477131,
        "id": "ebc49d06-e0b5-4a5c-b44f-976d1b6c7a79",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716477131,
        "parent_id": "596dcd47-47ab-462c-9a6e-8c77657597b2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We’ll use the database we set up in Opening a database."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We’ll use the database we set up in Opening a database."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716477132,
        "id": "00df82f5-d1a6-44eb-b0dc-fe72c10761ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716477132,
        "parent_id": "596dcd47-47ab-462c-9a6e-8c77657597b2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Create a new transaction, we'll use the default \"readonly\" mode and the things store\nvar transaction = db.transaction([\"things\"]);\n\n// Transactions use events, just like database open requests. Let's listen for success\ntransaction.oncomplete = function() {\n    console.log(\"All done!\");\n};\n\n// And make sure we handle errors\ntransaction.onerror = function() {\n    console.log(\"Something went wrong with our transaction: \", transaction.error);\n};\n\n// Now that everything is set up, let's get our things store and load some objects!\nvar store = transaction.objectStore(\"things\");"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Create a new transaction, we'll use the default \"readonly\" mode and the things store\nvar transaction = db.transaction([\"things\"]);\n\n// Transactions use events, just like database open requests. Let's listen for success\ntransaction.oncomplete = function() {\n    console.log(\"All done!\");\n};\n\n// And make sure we handle errors\ntransaction.onerror = function() {\n    console.log(\"Something went wrong with our transaction: \", transaction.error);\n};\n\n// Now that everything is set up, let's get our things store and load some objects!\nvar store = transaction.objectStore(\"things\");",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716477132,
        "id": "5a02de76-e547-4533-90d4-b7c65a6c2e12",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716477132,
        "parent_id": "596dcd47-47ab-462c-9a6e-8c77657597b2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// We'll load the coffee_cup object we added in Adding objects\nvar request = store.get(\"coffee_cup\");\n\n// Let's listen so we can see if everything went well\nrequest.onsuccess = function(event) {\n    // All done, let's log our object to the console\n    console.log(request.result);\n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// We'll load the coffee_cup object we added in Adding objects\nvar request = store.get(\"coffee_cup\");\n\n// Let's listen so we can see if everything went well\nrequest.onsuccess = function(event) {\n    // All done, let's log our object to the console\n    console.log(request.result);\n};",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716477132,
        "id": "861ea877-259d-4a96-bb44-df35db79d72b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716477132,
        "parent_id": "596dcd47-47ab-462c-9a6e-8c77657597b2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// That was pretty long for a basic retrieval. If we just want to get just\n// the one object and don't care about errors, we can shorten things a lot\ndb.transaction(\"things\").objectStore(\"things\")\n    .get(\"coffee_cup\").onsuccess = e =\u003e console.log(e.target.result);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// That was pretty long for a basic retrieval. If we just want to get just\n// the one object and don't care about errors, we can shorten things a lot\ndb.transaction(\"things\").objectStore(\"things\")\n    .get(\"coffee_cup\").onsuccess = e =\u003e console.log(e.target.result);",
        "code_language": "Plain Text"
      }
    ],
    "title": "040 Retrieving data"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}