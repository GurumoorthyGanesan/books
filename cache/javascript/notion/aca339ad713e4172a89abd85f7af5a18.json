{
  "ID": "aca339ad-713e-4172-a89a-bd85f7af5a18",
  "Root": {
    "alive": true,
    "content": [
      "f7387371-c8b0-44e2-8451-444daaa5895c",
      "1defcba4-5624-481c-910f-a0c76e3512bd",
      "4181bc3b-ca82-428e-acd0-af6ed2438c20",
      "630fce04-cb13-441b-9529-dc87165e85c3",
      "4b26a48d-b662-4356-9709-268121cf9c23",
      "10181e48-bc40-4979-883c-a678cb7f85bf",
      "6de970e4-3c0e-41d6-b2a9-5fbaccde4314",
      "aee7747a-5d7a-44a7-9185-3d3993fc28db",
      "de9dc365-b9ac-470d-8163-916742914050"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550716859137,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "aca339ad-713e-4172-a89a-bd85f7af5a18",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551664440000,
    "parent_id": "a7315c25-0505-403f-b5f0-32a1109b8f7b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Basics"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716859135,
        "id": "f7387371-c8b0-44e2-8451-444daaa5895c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716859135,
        "parent_id": "aca339ad-713e-4172-a89a-bd85f7af5a18",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A JavaScript "
            ],
            [
              "Iterator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is an object with a "
            ],
            [
              ".next()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method, which returns an "
            ],
            [
              "IteratorItem",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is an object with "
            ],
            [
              "value : \u003cany\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "done : \u003cboolean\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A JavaScript "
          },
          {
            "Text": "Iterator",
            "AttrFlags": 2
          },
          {
            "Text": " is an object with a "
          },
          {
            "Text": ".next()",
            "AttrFlags": 2
          },
          {
            "Text": " method, which returns an "
          },
          {
            "Text": "IteratorItem",
            "AttrFlags": 2
          },
          {
            "Text": ", which is an object with "
          },
          {
            "Text": "value : \u003cany\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "done : \u003cboolean\u003e",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716859136,
        "id": "1defcba4-5624-481c-910f-a0c76e3512bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716859136,
        "parent_id": "aca339ad-713e-4172-a89a-bd85f7af5a18",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A JavaScript "
            ],
            [
              "AsyncIterator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is an object with a "
            ],
            [
              ".next()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method, which returns a "
            ],
            [
              "Promise\u003cIteratorItem\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", a "
            ],
            [
              "promise",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " for the next value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A JavaScript "
          },
          {
            "Text": "AsyncIterator",
            "AttrFlags": 2
          },
          {
            "Text": " is an object with a "
          },
          {
            "Text": ".next()",
            "AttrFlags": 2
          },
          {
            "Text": " method, which returns a "
          },
          {
            "Text": "Promise\u003cIteratorItem\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ", a "
          },
          {
            "Text": "promise",
            "AttrFlags": 4
          },
          {
            "Text": " for the next value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716859136,
        "id": "4181bc3b-ca82-428e-acd0-af6ed2438c20",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716859136,
        "parent_id": "aca339ad-713e-4172-a89a-bd85f7af5a18",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To create an AsyncIterator, we can use the "
            ],
            [
              "async generator",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " syntax:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To create an AsyncIterator, we can use the "
          },
          {
            "Text": "async generator",
            "AttrFlags": 4
          },
          {
            "Text": " syntax:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716859136,
        "id": "630fce04-cb13-441b-9529-dc87165e85c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716859136,
        "parent_id": "aca339ad-713e-4172-a89a-bd85f7af5a18",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "/**\n * Returns a promise which resolves after time had passed.\n */\nconst delay = time =\u003e new Promise(resolve =\u003e setTimeout(resolve, time));\n\nasync function* delayedRange(max) {\n  for (let i = 0; i \u003c max; i++) {\n    await delay(1000);\n    yield i;\n  }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "/**\n * Returns a promise which resolves after time had passed.\n */\nconst delay = time =\u003e new Promise(resolve =\u003e setTimeout(resolve, time));\n\nasync function* delayedRange(max) {\n  for (let i = 0; i \u003c max; i++) {\n    await delay(1000);\n    yield i;\n  }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716859136,
        "id": "4b26a48d-b662-4356-9709-268121cf9c23",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716859136,
        "parent_id": "aca339ad-713e-4172-a89a-bd85f7af5a18",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "delayedRange",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function will take a maximum number, and returns an "
            ],
            [
              "AsyncIterator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which yields numbers from 0 to that number, in 1 second intervals."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "delayedRange",
            "AttrFlags": 2
          },
          {
            "Text": " function will take a maximum number, and returns an "
          },
          {
            "Text": "AsyncIterator",
            "AttrFlags": 2
          },
          {
            "Text": ", which yields numbers from 0 to that number, in 1 second intervals."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716859137,
        "id": "10181e48-bc40-4979-883c-a678cb7f85bf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716859137,
        "parent_id": "aca339ad-713e-4172-a89a-bd85f7af5a18",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Usage:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Usage:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716859137,
        "id": "6de970e4-3c0e-41d6-b2a9-5fbaccde4314",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716859137,
        "parent_id": "aca339ad-713e-4172-a89a-bd85f7af5a18",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "for await (let number of delayedRange(10)) {\n  console.log(number);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "for await (let number of delayedRange(10)) {\n  console.log(number);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716859137,
        "id": "aee7747a-5d7a-44a7-9185-3d3993fc28db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716859137,
        "parent_id": "aca339ad-713e-4172-a89a-bd85f7af5a18",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "for await of",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " loop is another piece of new syntax, available only inside of async functions, as well as async generators. Inside the loop, the values yielded (which, remember, are Promises) are unwrapped, so the Promise is hidden away. Within the loop, you can deal with the direct values (the yielded numbers), the "
            ],
            [
              "for await of",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " loop will wait for the Promises on your behalf."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "for await of",
            "AttrFlags": 2
          },
          {
            "Text": " loop is another piece of new syntax, available only inside of async functions, as well as async generators. Inside the loop, the values yielded (which, remember, are Promises) are unwrapped, so the Promise is hidden away. Within the loop, you can deal with the direct values (the yielded numbers), the "
          },
          {
            "Text": "for await of",
            "AttrFlags": 2
          },
          {
            "Text": " loop will wait for the Promises on your behalf."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716859137,
        "id": "de9dc365-b9ac-470d-8163-916742914050",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716859137,
        "parent_id": "aca339ad-713e-4172-a89a-bd85f7af5a18",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The above example will wait 1 second, log 0, wait another second, log 1, and so on, until it logs 9. At which point the "
            ],
            [
              "AsyncIterator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be "
            ],
            [
              "done",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and the "
            ],
            [
              "for await of",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " loop will exit."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The above example will wait 1 second, log 0, wait another second, log 1, and so on, until it logs 9. At which point the "
          },
          {
            "Text": "AsyncIterator",
            "AttrFlags": 2
          },
          {
            "Text": " will be "
          },
          {
            "Text": "done",
            "AttrFlags": 2
          },
          {
            "Text": ", and the "
          },
          {
            "Text": "for await of",
            "AttrFlags": 2
          },
          {
            "Text": " loop will exit."
          }
        ]
      }
    ],
    "title": "Basics",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}