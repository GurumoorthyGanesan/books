{
  "ID": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
  "Root": {
    "alive": true,
    "content": [
      "041c1b98-9a12-43af-8882-409540539ce5",
      "134b6cce-273d-45e1-bf97-3c48e99a52ef",
      "b157de00-56b2-4205-a9f0-2b7d14ab82cb",
      "1b1e93f2-d0d7-47fa-a51d-0481cd1683ab",
      "898d08a3-f9e4-4127-85ad-166b82d9f140",
      "fff40e12-16d6-4568-a60b-d54c61e13c80",
      "d1245821-3564-4205-a5bc-9c22697a80b0",
      "dbd760c1-e819-42b0-a620-632ccf3d87f3",
      "a42894c8-7fa0-440b-8e3d-2b8885f2fd71",
      "7d32e055-1084-401a-9dce-dd361f0d2c6b",
      "711c81a3-5a06-4792-916e-cfb018ef4716",
      "3750943b-a7d4-46c9-ab29-7b5c4cb7194f",
      "a67d2320-5094-470e-a884-1d56cebaedb0",
      "f2631781-98d3-4f30-8b31-f618e2bace4e",
      "db9bd85b-5724-4c80-a88f-b8b69a600ad6",
      "3773d3ff-875a-4089-bedf-5c7e4db346ee",
      "d1978f53-9b8e-4a3b-b5a6-9893065dbb9b",
      "5f21734d-d24d-457c-aa1b-5db3936f086d",
      "e05491c8-814c-43f7-b567-b1ad1dbfbed1",
      "8cbd4feb-a302-4ee5-aa59-7e1736cef0c5"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550716351202,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551605760000,
    "parent_id": "1adc95eb-ee7c-4f85-b617-83245474b49a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Pure functions"
        ]
      ]
    },
    "type": "page",
    "version": 13,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351198,
        "id": "041c1b98-9a12-43af-8882-409540539ce5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716351198,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A basic principle of functional programming is that it "
            ],
            [
              "avoids changing",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " the application state (statelessness) and variables outside it’s scope (immutability)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A basic principle of functional programming is that it "
          },
          {
            "Text": "avoids changing",
            "AttrFlags": 1
          },
          {
            "Text": " the application state (statelessness) and variables outside it’s scope (immutability)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351199,
        "id": "134b6cce-273d-45e1-bf97-3c48e99a52ef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716351199,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Pure functions are functions that:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Pure functions are functions that:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351199,
        "id": "b157de00-56b2-4205-a9f0-2b7d14ab82cb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716351199,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "with a given input, always return the same output"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "with a given input, always return the same output"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351199,
        "id": "1b1e93f2-d0d7-47fa-a51d-0481cd1683ab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716351199,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "they do not rely on any variable outside their scope"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "they do not rely on any variable outside their scope"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351200,
        "id": "898d08a3-f9e4-4127-85ad-166b82d9f140",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716351200,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "they do not modify the state of the application ("
            ],
            [
              "no side effects",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ")"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "they do not modify the state of the application ("
          },
          {
            "Text": "no side effects",
            "AttrFlags": 1
          },
          {
            "Text": ")"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351200,
        "id": "fff40e12-16d6-4568-a60b-d54c61e13c80",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716351200,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s take a look at some examples:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s take a look at some examples:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351200,
        "id": "d1245821-3564-4205-a5bc-9c22697a80b0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716351200,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Pure functions must not change any variable outside their scope"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Pure functions must not change any variable outside their scope"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351200,
        "id": "dbd760c1-e819-42b0-a620-632ccf3d87f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716351200,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Impure function",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Impure function",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351200,
        "id": "a42894c8-7fa0-440b-8e3d-2b8885f2fd71",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551605700000,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "let obj = { a: 0 }\n\nconst impure = (input) =\u003e {\n  // Modifies input.a\n  input.a = input.a + 1;\n  return input.a;\n}\n\nlet b = impure(obj)\nconsole.log(obj) // Logs { \"a\": 1 }\nconsole.log(b) // Logs 1"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "let obj = { a: 0 }\n\nconst impure = (input) =\u003e {\n  // Modifies input.a\n  input.a = input.a + 1;\n  return input.a;\n}\n\nlet b = impure(obj)\nconsole.log(obj) // Logs { \"a\": 1 }\nconsole.log(b) // Logs 1",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351200,
        "id": "7d32e055-1084-401a-9dce-dd361f0d2c6b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716351200,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The function changed the "
            ],
            [
              "obj.a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " value that is outside it’s scope."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The function changed the "
          },
          {
            "Text": "obj.a",
            "AttrFlags": 2
          },
          {
            "Text": " value that is outside it’s scope."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351200,
        "id": "711c81a3-5a06-4792-916e-cfb018ef4716",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716351200,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Pure function",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Pure function",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351200,
        "id": "3750943b-a7d4-46c9-ab29-7b5c4cb7194f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551605700000,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "let obj = { a: 0 }\n\nconst pure = (input) =\u003e {\n  // Does not modify obj\n  let output = input.a + 1;\n  return output;\n}\n\nlet b = pure(obj)\nconsole.log(obj) // Logs { \"a\": 0 }\nconsole.log(b) // Logs 1"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "let obj = { a: 0 }\n\nconst pure = (input) =\u003e {\n  // Does not modify obj\n  let output = input.a + 1;\n  return output;\n}\n\nlet b = pure(obj)\nconsole.log(obj) // Logs { \"a\": 0 }\nconsole.log(b) // Logs 1",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351201,
        "id": "a67d2320-5094-470e-a884-1d56cebaedb0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716351201,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The function did not change the object "
            ],
            [
              "obj",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " values"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The function did not change the object "
          },
          {
            "Text": "obj",
            "AttrFlags": 2
          },
          {
            "Text": " values"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351201,
        "id": "f2631781-98d3-4f30-8b31-f618e2bace4e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716351201,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Pure functions must not rely on variables outside their scope"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Pure functions must not rely on variables outside their scope"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351201,
        "id": "db9bd85b-5724-4c80-a88f-b8b69a600ad6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716351201,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Impure function",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Impure function",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351201,
        "id": "3773d3ff-875a-4089-bedf-5c7e4db346ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551605700000,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "let a = 1;\n\nlet impure = (input) =\u003e {\n  // Multiply with variable outside function scope\n  let output = input * a;\n  return output;\n}\n\nconsole.log(impure(2)) // Logs 2\na++; // a becomes equal to 2\nconsole.log(impure(2)) // Logs 4"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "let a = 1;\n\nlet impure = (input) =\u003e {\n  // Multiply with variable outside function scope\n  let output = input * a;\n  return output;\n}\n\nconsole.log(impure(2)) // Logs 2\na++; // a becomes equal to 2\nconsole.log(impure(2)) // Logs 4",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351201,
        "id": "d1978f53-9b8e-4a3b-b5a6-9893065dbb9b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716351201,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This "
            ],
            [
              "impure",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " function rely on variable "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that is defined outside it’s scope. So, if a is modified, "
            ],
            [
              "impure",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "’s function result will be different."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This "
          },
          {
            "Text": "impure",
            "AttrFlags": 1
          },
          {
            "Text": " function rely on variable "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " that is defined outside it’s scope. So, if a is modified, "
          },
          {
            "Text": "impure",
            "AttrFlags": 2
          },
          {
            "Text": "’s function result will be different."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351201,
        "id": "5f21734d-d24d-457c-aa1b-5db3936f086d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716351201,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Pure function",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Pure function",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351201,
        "id": "e05491c8-814c-43f7-b567-b1ad1dbfbed1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551605760000,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "let pure = (input) =\u003e {\n  let a = 1;\n  // Multiply with variable inside function scope\n  let output = input * a;\n  return output;\n}\n\nconsole.log(pure(2)) // Logs 2"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "let pure = (input) =\u003e {\n  let a = 1;\n  // Multiply with variable inside function scope\n  let output = input * a;\n  return output;\n}\n\nconsole.log(pure(2)) // Logs 2",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716351202,
        "id": "8cbd4feb-a302-4ee5-aa59-7e1736cef0c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716351202,
        "parent_id": "3012f5f5-53bc-4696-9d6c-a6cc98ed2e77",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "pure",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "‘s function result "
            ],
            [
              "does not rely",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " on any variable outside it’s scope."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "pure",
            "AttrFlags": 2
          },
          {
            "Text": "‘s function result "
          },
          {
            "Text": "does not rely",
            "AttrFlags": 1
          },
          {
            "Text": " on any variable outside it’s scope."
          }
        ]
      }
    ],
    "title": "Pure functions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}