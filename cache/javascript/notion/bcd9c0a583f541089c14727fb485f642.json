{
  "ID": "bcd9c0a5-83f5-4108-9c14-727fb485f642",
  "Root": {
    "alive": true,
    "content": [
      "34f51367-9928-4c84-ac3a-96d424aff7df",
      "45026a57-c587-488d-9d59-3c03b01de2ec",
      "f578a7a9-e321-49c2-8cff-8a9cc59149a6",
      "fcfa6466-bd2a-4076-9ed3-072845374c5d",
      "a810185e-d4ba-4b20-9685-d315520e1d57",
      "1951d56a-eccb-488a-94a4-1828618478c1",
      "365a19c2-daa4-4235-b6c5-09e6927d7fe7",
      "33d8af8e-0b65-4b20-931d-490922a7d7a7",
      "241500d7-f76b-43c0-9142-99c7fe3ae6f0",
      "3275a041-bece-490f-9e7a-fb58c1e5b136",
      "619807aa-ce09-403c-82d9-31f883c2ead6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715870457,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "bcd9c0a5-83f5-4108-9c14-727fb485f642",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551593220000,
    "parent_id": "7e064e1b-dd35-424e-9952-a63c7355d191",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Escaping quotes"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715870453,
        "id": "34f51367-9928-4c84-ac3a-96d424aff7df",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551593220000,
        "parent_id": "bcd9c0a5-83f5-4108-9c14-727fb485f642",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If your string is enclosed (i.e.) in single quotes you need to escape the inner literal quote with "
            ],
            [
              "backslash",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "If your string is enclosed (i.e.) in single quotes you need to escape the inner literal quote with "
          },
          {
            "Text": "backslash",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "\\",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715870455,
        "id": "45026a57-c587-488d-9d59-3c03b01de2ec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551593220000,
        "parent_id": "bcd9c0a5-83f5-4108-9c14-727fb485f642",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "var text = 'L\\'albero means tree in Italian';\nconsole.log( text ); \\\\ \"L'albero means tree in Italian\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var text = 'L\\'albero means tree in Italian';\nconsole.log( text ); \\\\ \"L'albero means tree in Italian\"",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715870455,
        "id": "f578a7a9-e321-49c2-8cff-8a9cc59149a6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715870455,
        "parent_id": "bcd9c0a5-83f5-4108-9c14-727fb485f642",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Same goes for double quotes:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Same goes for double quotes:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715870456,
        "id": "fcfa6466-bd2a-4076-9ed3-072845374c5d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551593220000,
        "parent_id": "bcd9c0a5-83f5-4108-9c14-727fb485f642",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "var text = \"I feel \\\"high\\\"\";"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var text = \"I feel \\\"high\\\"\";",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715870456,
        "id": "a810185e-d4ba-4b20-9685-d315520e1d57",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715870456,
        "parent_id": "bcd9c0a5-83f5-4108-9c14-727fb485f642",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Special attention must be given to escaping quotes if you’re storing HTML representations within a String, since HTML strings make large use of quotations i.e. in attributes:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Special attention must be given to escaping quotes if you’re storing HTML representations within a String, since HTML strings make large use of quotations i.e. in attributes:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715870456,
        "id": "1951d56a-eccb-488a-94a4-1828618478c1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551593220000,
        "parent_id": "bcd9c0a5-83f5-4108-9c14-727fb485f642",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "var content = \"\u003cp class=\\\"special\\\"\u003eHello World!\u003c/p\u003e\";        // valid String\nvar hello   = '\u003cp class=\"special\"\u003eI\\'d like to say \"Hi\"\u003c/p\u003e'; // valid String"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var content = \"\u003cp class=\\\"special\\\"\u003eHello World!\u003c/p\u003e\";        // valid String\nvar hello   = '\u003cp class=\"special\"\u003eI\\'d like to say \"Hi\"\u003c/p\u003e'; // valid String",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715870456,
        "id": "365a19c2-daa4-4235-b6c5-09e6927d7fe7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715870456,
        "parent_id": "bcd9c0a5-83f5-4108-9c14-727fb485f642",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Quotes in HTML strings can also be represented using "
            ],
            [
              "\u0026apos;",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (or "
            ],
            [
              "\u0026#39;",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") as a single quote and "
            ],
            [
              "\u0026quot;",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " ( or "
            ],
            [
              "\u0026#34;",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") as double quotes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Quotes in HTML strings can also be represented using "
          },
          {
            "Text": "\u0026apos;",
            "AttrFlags": 2
          },
          {
            "Text": " (or "
          },
          {
            "Text": "\u0026#39;",
            "AttrFlags": 2
          },
          {
            "Text": ") as a single quote and "
          },
          {
            "Text": "\u0026quot;",
            "AttrFlags": 2
          },
          {
            "Text": " ( or "
          },
          {
            "Text": "\u0026#34;",
            "AttrFlags": 2
          },
          {
            "Text": ") as double quotes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715870456,
        "id": "33d8af8e-0b65-4b20-931d-490922a7d7a7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551593220000,
        "parent_id": "bcd9c0a5-83f5-4108-9c14-727fb485f642",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "var hi    = \"\u003cp class='special'\u003eI'd like to say \u0026quot;Hi\u0026quot;\u003c/p\u003e\"; // valid String\nvar hello = '\u003cp class=\"special\"\u003eI\u0026apos;d like to say \"Hi\"\u003c/p\u003e';      // valid String"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var hi    = \"\u003cp class='special'\u003eI'd like to say \u0026quot;Hi\u0026quot;\u003c/p\u003e\"; // valid String\nvar hello = '\u003cp class=\"special\"\u003eI\u0026apos;d like to say \"Hi\"\u003c/p\u003e';      // valid String",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715870457,
        "id": "241500d7-f76b-43c0-9142-99c7fe3ae6f0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715870457,
        "parent_id": "bcd9c0a5-83f5-4108-9c14-727fb485f642",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note:",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " The use of "
            ],
            [
              "\u0026apos;",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "\u0026quot;",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will not overwrite double quotes that browsers can automatically place on attribute quotes. For example "
            ],
            [
              "\u003cp class=special\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " being made to "
            ],
            [
              "\u003cp class=\"special\"\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", using "
            ],
            [
              "\u0026quot;",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can lead to "
            ],
            [
              "\u003cp class=\"\"special\"\"\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " where "
            ],
            [
              "\\\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be "
            ],
            [
              "\u003cp class=\"special\"\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note:",
            "AttrFlags": 4
          },
          {
            "Text": " The use of "
          },
          {
            "Text": "\u0026apos;",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "\u0026quot;",
            "AttrFlags": 2
          },
          {
            "Text": " will not overwrite double quotes that browsers can automatically place on attribute quotes. For example "
          },
          {
            "Text": "\u003cp class=special\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " being made to "
          },
          {
            "Text": "\u003cp class=\"special\"\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ", using "
          },
          {
            "Text": "\u0026quot;",
            "AttrFlags": 2
          },
          {
            "Text": " can lead to "
          },
          {
            "Text": "\u003cp class=\"\"special\"\"\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " where "
          },
          {
            "Text": "\\\"",
            "AttrFlags": 2
          },
          {
            "Text": " will be "
          },
          {
            "Text": "\u003cp class=\"special\"\u003e",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715870457,
        "id": "3275a041-bece-490f-9e7a-fb58c1e5b136",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715870457,
        "parent_id": "bcd9c0a5-83f5-4108-9c14-727fb485f642",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If a string has "
            ],
            [
              "\\'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " you may want to consider using template literals ("
            ],
            [
              "also known as template strings in previous ES6 editions",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "), which do not require you to escape "
            ],
            [
              "\\'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". These use backticks (`) instead of single or double quotes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If a string has "
          },
          {
            "Text": "\\'",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "\"",
            "AttrFlags": 2
          },
          {
            "Text": " you may want to consider using template literals ("
          },
          {
            "Text": "also known as template strings in previous ES6 editions",
            "AttrFlags": 4
          },
          {
            "Text": "), which do not require you to escape "
          },
          {
            "Text": "\\'",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "\"",
            "AttrFlags": 2
          },
          {
            "Text": ". These use backticks (`) instead of single or double quotes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715870457,
        "id": "619807aa-ce09-403c-82d9-31f883c2ead6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551593220000,
        "parent_id": "bcd9c0a5-83f5-4108-9c14-727fb485f642",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "var x = `\"Escaping \" and ' can become very annoying`;"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var x = `\"Escaping \" and ' can become very annoying`;",
        "code_language": "JavaScript"
      }
    ],
    "title": "Escaping quotes",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}