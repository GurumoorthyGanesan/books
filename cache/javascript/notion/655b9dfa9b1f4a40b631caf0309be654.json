{
  "ID": "655b9dfa-9b1f-4a40-b631-caf0309be654",
  "Root": {
    "alive": true,
    "content": [
      "aff3ad17-e24c-4442-aadf-5b3c51624c0f",
      "e80dc355-2158-473f-a71e-a059bdd72ca1",
      "e515d212-c925-4a44-b5d6-f15054ce8655",
      "a5619e1c-0509-4894-82c7-d830a6010ebd",
      "c0052f2a-f090-4e5e-b586-d0cccd2f58f6",
      "8bd4ae6a-ef5c-48d0-8d8f-7e7479635fd0",
      "2b5b8900-1374-4ef6-b3b2-3da9c40bfefb"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715124388,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "655b9dfa-9b1f-4a40-b631-caf0309be654",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551338580000,
    "parent_id": "499ecbda-9a83-4992-8013-1e2d2247246e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Reconciling synchronous and asynchronous operations"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715124387,
        "id": "aff3ad17-e24c-4442-aadf-5b3c51624c0f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715124387,
        "parent_id": "655b9dfa-9b1f-4a40-b631-caf0309be654",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In some cases you may want to wrap a synchronous operation inside a promise to prevent repetition in code branches. Take this example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In some cases you may want to wrap a synchronous operation inside a promise to prevent repetition in code branches. Take this example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715124387,
        "id": "e80dc355-2158-473f-a71e-a059bdd72ca1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551338580000,
        "parent_id": "655b9dfa-9b1f-4a40-b631-caf0309be654",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "if (result) { // if we already have a result\n  processResult(result); // process it\n} else {\n  fetchResult().then(processResult);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "if (result) { // if we already have a result\n  processResult(result); // process it\n} else {\n  fetchResult().then(processResult);\n}",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715124388,
        "id": "e515d212-c925-4a44-b5d6-f15054ce8655",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715124388,
        "parent_id": "655b9dfa-9b1f-4a40-b631-caf0309be654",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The synchronous and asynchronous branches of the above code can be reconciled by redundantly wrapping the synchronous operation inside a promise:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The synchronous and asynchronous branches of the above code can be reconciled by redundantly wrapping the synchronous operation inside a promise:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715124388,
        "id": "a5619e1c-0509-4894-82c7-d830a6010ebd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551338580000,
        "parent_id": "655b9dfa-9b1f-4a40-b631-caf0309be654",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "var fetch = result\n  ? Promise.resolve(result)\n  : fetchResult();\n\nfetch.then(processResult);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var fetch = result\n  ? Promise.resolve(result)\n  : fetchResult();\n\nfetch.then(processResult);",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715124388,
        "id": "c0052f2a-f090-4e5e-b586-d0cccd2f58f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715124388,
        "parent_id": "655b9dfa-9b1f-4a40-b631-caf0309be654",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When caching the result of an asynchronous call, it is preferable to cache the promise rather than the result itself. This ensures that only one asynchronous operation is required to resolve multiple parallel requests."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When caching the result of an asynchronous call, it is preferable to cache the promise rather than the result itself. This ensures that only one asynchronous operation is required to resolve multiple parallel requests."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715124388,
        "id": "8bd4ae6a-ef5c-48d0-8d8f-7e7479635fd0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715124388,
        "parent_id": "655b9dfa-9b1f-4a40-b631-caf0309be654",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Care should be taken to invalidate cached values when error conditions are encountered."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Care should be taken to invalidate cached values when error conditions are encountered."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715124388,
        "id": "2b5b8900-1374-4ef6-b3b2-3da9c40bfefb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551338580000,
        "parent_id": "655b9dfa-9b1f-4a40-b631-caf0309be654",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "// A resource that is not expected to change frequently\nvar planets = 'http://swapi.co/api/planets/';\n// The cached promise, or null\nvar cachedPromise;\n\nfunction fetchResult() {\n    if (!cachedPromise) {\n        cachedPromise = fetch(planets)\n            .catch(function (e) {\n                // Invalidate the current result to retry on the next fetch\n                cachedPromise = null;\n                // re-raise the error to propagate it to callers\n                throw e;\n            });\n    }\n    return cachedPromise;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// A resource that is not expected to change frequently\nvar planets = 'http://swapi.co/api/planets/';\n// The cached promise, or null\nvar cachedPromise;\n\nfunction fetchResult() {\n    if (!cachedPromise) {\n        cachedPromise = fetch(planets)\n            .catch(function (e) {\n                // Invalidate the current result to retry on the next fetch\n                cachedPromise = null;\n                // re-raise the error to propagate it to callers\n                throw e;\n            });\n    }\n    return cachedPromise;\n}",
        "code_language": "JavaScript"
      }
    ],
    "title": "Reconciling synchronous and asynchronous operations",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}