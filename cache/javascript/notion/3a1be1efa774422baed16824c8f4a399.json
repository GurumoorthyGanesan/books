{
  "ID": "3a1be1ef-a774-422b-aed1-6824c8f4a399",
  "Root": {
    "alive": true,
    "content": [
      "d847a471-089f-495e-9b62-2b17f0b6ef6a",
      "8407d7c4-b478-4dd5-b317-deeb933d49fe",
      "d206fe33-34dd-4b30-a680-0c86d65e7b74",
      "54323285-b9f1-4852-876c-874806ca9b70",
      "9c9d2c0a-a5a1-4c1c-9647-9df0ee2c10d2",
      "f98d13fb-bcbe-4055-bac9-78019f02db77",
      "113cbdcc-805d-41cb-a18a-c891abf3104c",
      "035b04c1-755d-4bf5-8a80-769e639e6c89",
      "d4f917a4-1457-4f55-a611-2bd8b3205602"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715092535,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "3a1be1ef-a774-422b-aed1-6824c8f4a399",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550870400000,
    "parent_id": "8258c948-9475-41eb-8bbe-cdf7703094bf",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Inequality"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715092533,
        "id": "d847a471-089f-495e-9b62-2b17f0b6ef6a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715092533,
        "parent_id": "3a1be1ef-a774-422b-aed1-6824c8f4a399",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Operator "
            ],
            [
              "!=",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the inverse of the "
            ],
            [
              "==",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Operator "
          },
          {
            "Text": "!=",
            "AttrFlags": 2
          },
          {
            "Text": " is the inverse of the "
          },
          {
            "Text": "==",
            "AttrFlags": 2
          },
          {
            "Text": " operator."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715092533,
        "id": "8407d7c4-b478-4dd5-b317-deeb933d49fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715092533,
        "parent_id": "3a1be1ef-a774-422b-aed1-6824c8f4a399",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Will return "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if the operands aren’t equal."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Will return "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": " if the operands aren’t equal."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715092534,
        "id": "d206fe33-34dd-4b30-a680-0c86d65e7b74",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715092534,
        "parent_id": "3a1be1ef-a774-422b-aed1-6824c8f4a399",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The javascript engine will try and convert both operands to matching types if they aren’t of the same type. "
            ],
            [
              "Note:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " if the two operands have different internal references in memory, then "
            ],
            [
              "false",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be returned."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The javascript engine will try and convert both operands to matching types if they aren’t of the same type. "
          },
          {
            "Text": "Note:",
            "AttrFlags": 1
          },
          {
            "Text": " if the two operands have different internal references in memory, then "
          },
          {
            "Text": "false",
            "AttrFlags": 2
          },
          {
            "Text": " will be returned."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715092534,
        "id": "54323285-b9f1-4852-876c-874806ca9b70",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715092534,
        "parent_id": "3a1be1ef-a774-422b-aed1-6824c8f4a399",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sample:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sample:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715092534,
        "id": "9c9d2c0a-a5a1-4c1c-9647-9df0ee2c10d2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550870400000,
        "parent_id": "3a1be1ef-a774-422b-aed1-6824c8f4a399",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "1 != '1'     // false\n1 != 2       // true"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "1 != '1'     // false\n1 != 2       // true",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715092534,
        "id": "f98d13fb-bcbe-4055-bac9-78019f02db77",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715092534,
        "parent_id": "3a1be1ef-a774-422b-aed1-6824c8f4a399",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the sample above, "
            ],
            [
              "1 != '1'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is "
            ],
            [
              "false",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " because, a primitive number type is being compared to a "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " value. Therefore, the Javascript engine doesn’t care about the datatype of the R.H.S value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the sample above, "
          },
          {
            "Text": "1 != '1'",
            "AttrFlags": 2
          },
          {
            "Text": " is "
          },
          {
            "Text": "false",
            "AttrFlags": 2
          },
          {
            "Text": " because, a primitive number type is being compared to a "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": " value. Therefore, the Javascript engine doesn’t care about the datatype of the R.H.S value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715092534,
        "id": "113cbdcc-805d-41cb-a18a-c891abf3104c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715092534,
        "parent_id": "3a1be1ef-a774-422b-aed1-6824c8f4a399",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Operator: "
            ],
            [
              "!==",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the inverse of the "
            ],
            [
              "===",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator. Will return true if the operands are not equal or if their types do not match."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Operator: "
          },
          {
            "Text": "!==",
            "AttrFlags": 2
          },
          {
            "Text": " is the inverse of the "
          },
          {
            "Text": "===",
            "AttrFlags": 2
          },
          {
            "Text": " operator. Will return true if the operands are not equal or if their types do not match."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715092534,
        "id": "035b04c1-755d-4bf5-8a80-769e639e6c89",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715092534,
        "parent_id": "3a1be1ef-a774-422b-aed1-6824c8f4a399",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715092535,
        "id": "d4f917a4-1457-4f55-a611-2bd8b3205602",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550870400000,
        "parent_id": "3a1be1ef-a774-422b-aed1-6824c8f4a399",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "1 !== '1'    // true\n1 !== 2      // true\n1 !== 1      // false"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "1 !== '1'    // true\n1 !== 2      // true\n1 !== 1      // false",
        "code_language": "JavaScript"
      }
    ],
    "title": "Inequality",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}