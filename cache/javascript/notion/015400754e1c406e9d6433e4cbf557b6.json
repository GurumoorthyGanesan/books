{
  "ID": "01540075-4e1c-406e-9d64-33e4cbf557b6",
  "Root": {
    "alive": true,
    "content": [
      "30055b0c-6fe2-4cce-a1c7-77d060950943",
      "39946b32-3f49-49c6-bdda-a59d073e7cbd",
      "92a94bb3-a9d3-4a45-969e-150a8a11e74e",
      "27ce75b8-d71c-4d9a-99d0-ac7243102203"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715979759,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "01540075-4e1c-406e-9d64-33e4cbf557b6",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551603960000,
    "parent_id": "44c4027e-fc58-4232-9b09-f831f617aad4",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Read file as dataURL"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715979759,
        "id": "30055b0c-6fe2-4cce-a1c7-77d060950943",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715979759,
        "parent_id": "01540075-4e1c-406e-9d64-33e4cbf557b6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Reading the contents of a file within a web application can be accomplished by utilizing the HTML5 File API. First, add an input with "
            ],
            [
              "type=\"file\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in your HTML:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Reading the contents of a file within a web application can be accomplished by utilizing the HTML5 File API. First, add an input with "
          },
          {
            "Text": "type=\"file\"",
            "AttrFlags": 2
          },
          {
            "Text": " in your HTML:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715979759,
        "id": "39946b32-3f49-49c6-bdda-a59d073e7cbd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551603960000,
        "parent_id": "01540075-4e1c-406e-9d64-33e4cbf557b6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "HTML"
            ]
          ],
          "title": [
            [
              "\u003cinput type=\"file\" id=\"upload\"\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003cinput type=\"file\" id=\"upload\"\u003e",
        "code_language": "HTML"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715979759,
        "id": "92a94bb3-a9d3-4a45-969e-150a8a11e74e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715979759,
        "parent_id": "01540075-4e1c-406e-9d64-33e4cbf557b6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Next, we’re going to add a change listener on the file-input. This examples defines the listener via JavaScript, but it could also be added as attribute on the input element. This listener gets triggered every time a new file has been selected. Within this callback, we can read the file that was selected and perform further actions (like creating an image with the contents of the selected file):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Next, we’re going to add a change listener on the file-input. This examples defines the listener via JavaScript, but it could also be added as attribute on the input element. This listener gets triggered every time a new file has been selected. Within this callback, we can read the file that was selected and perform further actions (like creating an image with the contents of the selected file):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715979759,
        "id": "27ce75b8-d71c-4d9a-99d0-ac7243102203",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551603960000,
        "parent_id": "01540075-4e1c-406e-9d64-33e4cbf557b6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "document.getElementById('upload').addEventListener('change', showImage);\n\nfunction showImage(evt) {\n    var files = evt.target.files;\n\n    if (files.length === 0) {\n        console.log('No files selected');\n        return;\n    }\n\n    var reader = new FileReader();\n    reader.onload = function(event) {\n        var img = new Image();\n        img.onload = function() {\n            document.body.appendChild(img);\n        };\n        img.src = event.target.result;\n    };\n    reader.readAsDataURL(files[0]);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "document.getElementById('upload').addEventListener('change', showImage);\n\nfunction showImage(evt) {\n    var files = evt.target.files;\n\n    if (files.length === 0) {\n        console.log('No files selected');\n        return;\n    }\n\n    var reader = new FileReader();\n    reader.onload = function(event) {\n        var img = new Image();\n        img.onload = function() {\n            document.body.appendChild(img);\n        };\n        img.src = event.target.result;\n    };\n    reader.readAsDataURL(files[0]);\n}",
        "code_language": "JavaScript"
      }
    ],
    "title": "Read file as dataURL",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}