{
  "ID": "986104b2-6d11-4483-b976-4c7b111a22c4",
  "Root": {
    "alive": true,
    "content": [
      "0d414998-7f85-4e35-b5dd-a1f407a8ac3f",
      "b9248446-435c-4ff4-bfcb-826bf53196f0",
      "3eff8b94-6c1d-4b31-bff8-cfa240ccaf53",
      "6f2e4894-025f-485b-9726-496a0d386202",
      "121f6075-5f55-410b-b8e9-687c525c058c",
      "217385e0-96d4-4aa3-8a6f-d479755bb7ca",
      "2b1b93d3-dc96-4449-bfcd-58dc45b82bf4"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715895197,
    "id": "986104b2-6d11-4483-b976-4c7b111a22c4",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550715895197,
    "parent_id": "337f40a2-6b9b-4941-a028-cebbb21ea965",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 Avoid trycatch in performance-critical functions"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715895193,
        "id": "0d414998-7f85-4e35-b5dd-a1f407a8ac3f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715895193,
        "parent_id": "986104b2-6d11-4483-b976-4c7b111a22c4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Some JavaScript engines (for example, the current version of Node.js and older versions of Chrome before Ignition+turbofan) don’t run the optimizer on functions that contain a try/catch block."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Some JavaScript engines (for example, the current version of Node.js and older versions of Chrome before Ignition+turbofan) don’t run the optimizer on functions that contain a try/catch block."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715895196,
        "id": "b9248446-435c-4ff4-bfcb-826bf53196f0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715895196,
        "parent_id": "986104b2-6d11-4483-b976-4c7b111a22c4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you need to handle exceptions in performance-critical code, it can be faster in some cases to keep the try/catch in a separate function. For example, this function will not be optimized by some implementations:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you need to handle exceptions in performance-critical code, it can be faster in some cases to keep the try/catch in a separate function. For example, this function will not be optimized by some implementations:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715895196,
        "id": "3eff8b94-6c1d-4b31-bff8-cfa240ccaf53",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715895196,
        "parent_id": "986104b2-6d11-4483-b976-4c7b111a22c4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function myPerformanceCriticalFunction() {\n    try {\n        // do complex calculations here\n    } catch (e) {\n        console.log(e);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function myPerformanceCriticalFunction() {\n    try {\n        // do complex calculations here\n    } catch (e) {\n        console.log(e);\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715895196,
        "id": "6f2e4894-025f-485b-9726-496a0d386202",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715895196,
        "parent_id": "986104b2-6d11-4483-b976-4c7b111a22c4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, you can refactor to move the slow code into a separate function (that "
            ],
            [
              "can",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " be optimized) and call it from inside the "
            ],
            [
              "try",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, you can refactor to move the slow code into a separate function (that "
          },
          {
            "Text": "can",
            "AttrFlags": 4
          },
          {
            "Text": " be optimized) and call it from inside the "
          },
          {
            "Text": "try",
            "AttrFlags": 2
          },
          {
            "Text": " block."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715895196,
        "id": "121f6075-5f55-410b-b8e9-687c525c058c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715895196,
        "parent_id": "986104b2-6d11-4483-b976-4c7b111a22c4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// This function can be optimized\nfunction doCalculations() {\n    // do complex calculations here\n}\n\n// Still not always optimized, but it's not doing much so the performance doesn't matter\nfunction myPerformanceCriticalFunction() {\n    try {\n        doCalculations();\n    } catch (e) {\n        console.log(e);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// This function can be optimized\nfunction doCalculations() {\n    // do complex calculations here\n}\n\n// Still not always optimized, but it's not doing much so the performance doesn't matter\nfunction myPerformanceCriticalFunction() {\n    try {\n        doCalculations();\n    } catch (e) {\n        console.log(e);\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715895196,
        "id": "217385e0-96d4-4aa3-8a6f-d479755bb7ca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715895196,
        "parent_id": "986104b2-6d11-4483-b976-4c7b111a22c4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here’s a jsPerf benchmark showing the difference: https://jsperf.com/try-catch-deoptimization. In the current version of most browsers, there shouldn’t be much difference if any, but in less recent versions of Chrome and Firefox, or IE, the version that calls a helper function inside the try/catch is likely to be faster."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here’s a jsPerf benchmark showing the difference: https://jsperf.com/try-catch-deoptimization. In the current version of most browsers, there shouldn’t be much difference if any, but in less recent versions of Chrome and Firefox, or IE, the version that calls a helper function inside the try/catch is likely to be faster."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715895197,
        "id": "2b1b93d3-dc96-4449-bfcd-58dc45b82bf4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715895197,
        "parent_id": "986104b2-6d11-4483-b976-4c7b111a22c4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that optimizations like this should be made carefully and with actual evidence based on profiling your code. As JavaScript engines get better, it could end up hurting performance instead of helping, or making no difference at all (but complicating the code for no reason). Whether it helps, hurts, or makes no difference can depend on a lot of factors, so always measure the effects on your code. That’s true of all optimizations, but especially micro-optimizations like this that depend on low-level details of the compiler/runtime."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that optimizations like this should be made carefully and with actual evidence based on profiling your code. As JavaScript engines get better, it could end up hurting performance instead of helping, or making no difference at all (but complicating the code for no reason). Whether it helps, hurts, or makes no difference can depend on a lot of factors, so always measure the effects on your code. That’s true of all optimizations, but especially micro-optimizations like this that depend on low-level details of the compiler/runtime."
          }
        ]
      }
    ],
    "title": "010 Avoid trycatch in performance-critical functions"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}