{
  "ID": "2a99c934-89b9-4f49-82d5-4790e7f37ea9",
  "Root": {
    "alive": true,
    "content": [
      "c48c64ef-f19b-4aa5-b96d-c7174847ee60",
      "84135ce6-234b-4084-9743-1b0e3e8eb05a",
      "0a0561b9-1d91-422d-a533-188f6e748716",
      "e2b350e0-72fd-46fa-84d8-3265c03bd1bd",
      "97f0cbcb-8feb-45b1-8e3f-232274e512da",
      "a129f36d-2b7c-4274-b413-beb63bbb76c3",
      "254c3f5e-013b-4ac4-880f-b0496ad2a340",
      "dc41d98a-42b9-4099-9f4d-02a71deb3838",
      "5a7cd77c-7bbe-420d-80fa-385385084061",
      "68e57efd-3a55-4678-be56-a39f03562c92",
      "5fc9a8af-604d-4eb1-928c-78b2c9bc6c09",
      "59725bbd-e20c-484a-9247-cb0e81267caa",
      "182b3195-6c3b-4675-bb84-238f5fe2d76e",
      "a6b44a99-5bbb-4645-82f3-7c9c28ee9c0f",
      "11f0b976-c743-4140-a9ff-428c8e9cff02",
      "8a91eadb-2317-4899-94c9-c04c6f92f6c4"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550716350616,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "2a99c934-89b9-4f49-82d5-4790e7f37ea9",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551605700000,
    "parent_id": "1adc95eb-ee7c-4f85-b617-83245474b49a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Identity monad"
        ]
      ]
    },
    "type": "page",
    "version": 33,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716350610,
        "id": "c48c64ef-f19b-4aa5-b96d-c7174847ee60",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716350610,
        "parent_id": "2a99c934-89b9-4f49-82d5-4790e7f37ea9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is an example of an implementation of the identity monad in JavaScript, and could serve as a starting point to create other monads."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is an example of an implementation of the identity monad in JavaScript, and could serve as a starting point to create other monads."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716350614,
        "id": "84135ce6-234b-4084-9743-1b0e3e8eb05a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716350614,
        "parent_id": "2a99c934-89b9-4f49-82d5-4790e7f37ea9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Based on the "
            ],
            [
              "conference by Douglas Crockford on monads and gonads",
              [
                [
                  "a",
                  "https://www.youtube.com/watch?v=b0EF0VTs9Dc"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Based on the "
          },
          {
            "Text": "conference by Douglas Crockford on monads and gonads",
            "Link": "https://www.youtube.com/watch?v=b0EF0VTs9Dc"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716350614,
        "id": "0a0561b9-1d91-422d-a533-188f6e748716",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716350614,
        "parent_id": "2a99c934-89b9-4f49-82d5-4790e7f37ea9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using this approach reusing your functions will be easier because of the flexibility this monad provides, and composition nightmares:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using this approach reusing your functions will be easier because of the flexibility this monad provides, and composition nightmares:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716350614,
        "id": "e2b350e0-72fd-46fa-84d8-3265c03bd1bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551605520000,
        "parent_id": "2a99c934-89b9-4f49-82d5-4790e7f37ea9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "f(g(h(i(j(k(value), j1), i2), h1, h2), g1, g2), f1, f2)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "f(g(h(i(j(k(value), j1), i2), h1, h2), g1, g2), f1, f2)",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716350615,
        "id": "97f0cbcb-8feb-45b1-8e3f-232274e512da",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716350615,
        "parent_id": "2a99c934-89b9-4f49-82d5-4790e7f37ea9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "readable, nice and clean:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "readable, nice and clean:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716350615,
        "id": "a129f36d-2b7c-4274-b413-beb63bbb76c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551605520000,
        "parent_id": "2a99c934-89b9-4f49-82d5-4790e7f37ea9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "identityMonad(value)\n    .bind(k)\n    .bind(j, j1, j2)\n    .bind(i, i2)\n    .bind(h, h1, h2)\n    .bind(g, g1, g2)\n    .bind(f, f1, f2);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "identityMonad(value)\n    .bind(k)\n    .bind(j, j1, j2)\n    .bind(i, i2)\n    .bind(h, h1, h2)\n    .bind(g, g1, g2)\n    .bind(f, f1, f2);",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716350615,
        "id": "254c3f5e-013b-4ac4-880f-b0496ad2a340",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551605520000,
        "parent_id": "2a99c934-89b9-4f49-82d5-4790e7f37ea9",
        "parent_table": "block",
        "type": "text",
        "version": 3
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716350615,
        "id": "dc41d98a-42b9-4099-9f4d-02a71deb3838",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551605520000,
        "parent_id": "2a99c934-89b9-4f49-82d5-4790e7f37ea9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "function identityMonad(value) {\n  var monad = Object.create(null);\n  \n  // func should return a monad\n  monad.bind = function (func, ...args) {\n      return func(value, ...args);\n  };\n\n  // whatever func does, we get our monad back\n  monad.call = function (func, ...args) {\n      func(value, ...args);\n\n      return identityMonad(value);\n  };\n  \n  // func doesn't have to know anything about monads\n  monad.apply = function (func, ...args) {\n      return identityMonad(func(value, ...args));\n  };\n\n  // Get the value wrapped in this monad\n  monad.value = function () {\n      return value;\n  };\n  \n  return monad;\n};"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "function identityMonad(value) {\n  var monad = Object.create(null);\n  \n  // func should return a monad\n  monad.bind = function (func, ...args) {\n      return func(value, ...args);\n  };\n\n  // whatever func does, we get our monad back\n  monad.call = function (func, ...args) {\n      func(value, ...args);\n\n      return identityMonad(value);\n  };\n  \n  // func doesn't have to know anything about monads\n  monad.apply = function (func, ...args) {\n      return identityMonad(func(value, ...args));\n  };\n\n  // Get the value wrapped in this monad\n  monad.value = function () {\n      return value;\n  };\n  \n  return monad;\n};",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716350615,
        "id": "5a7cd77c-7bbe-420d-80fa-385385084061",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551605640000,
        "parent_id": "2a99c934-89b9-4f49-82d5-4790e7f37ea9",
        "parent_table": "block",
        "type": "text",
        "version": 4
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716350615,
        "id": "68e57efd-3a55-4678-be56-a39f03562c92",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551605640000,
        "parent_id": "2a99c934-89b9-4f49-82d5-4790e7f37ea9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "It works with primitive values"
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "It works with primitive values"
          }
        ],
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551605663999,
        "id": "5fc9a8af-604d-4eb1-928c-78b2c9bc6c09",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551605640000,
        "parent_id": "2a99c934-89b9-4f49-82d5-4790e7f37ea9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "var value = 'foo',\n    f = x =\u003e x + ' changed',\n    g = x =\u003e x + ' again';\n\nidentityMonad(value)\n    .apply(f)\n    .apply(g)\n    .bind(alert); // Alerts 'foo changed again'"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "var value = 'foo',\n    f = x =\u003e x + ' changed',\n    g = x =\u003e x + ' again';\n\nidentityMonad(value)\n    .apply(f)\n    .apply(g)\n    .bind(alert); // Alerts 'foo changed again'",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551605640000,
        "id": "59725bbd-e20c-484a-9247-cb0e81267caa",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551605640000,
        "parent_id": "2a99c934-89b9-4f49-82d5-4790e7f37ea9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And also with objects"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "And also with objects"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551605674808,
        "id": "182b3195-6c3b-4675-bb84-238f5fe2d76e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551605640000,
        "parent_id": "2a99c934-89b9-4f49-82d5-4790e7f37ea9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "var value = { foo: 'foo' },\n    f = x =\u003e identityMonad(Object.assign(x, { foo: 'bar' })),\n    g = x =\u003e Object.assign(x, { bar: 'foo' }),\n    h = x =\u003e console.log('foo: ' + x.foo + ', bar: ' + x.bar);\n\nidentityMonad(value)\n    .bind(f)\n    .apply(g)\n    .bind(h); // Logs 'foo: bar, bar: foo'"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "var value = { foo: 'foo' },\n    f = x =\u003e identityMonad(Object.assign(x, { foo: 'bar' })),\n    g = x =\u003e Object.assign(x, { bar: 'foo' }),\n    h = x =\u003e console.log('foo: ' + x.foo + ', bar: ' + x.bar);\n\nidentityMonad(value)\n    .bind(f)\n    .apply(g)\n    .bind(h); // Logs 'foo: bar, bar: foo'",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551605700000,
        "id": "a6b44a99-5bbb-4645-82f3-7c9c28ee9c0f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551605700000,
        "parent_id": "2a99c934-89b9-4f49-82d5-4790e7f37ea9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let's try everything:"
            ]
          ]
        },
        "type": "text",
        "version": 6,
        "inline_content": [
          {
            "Text": "Let's try everything:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551605704552,
        "id": "11f0b976-c743-4140-a9ff-428c8e9cff02",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551605700000,
        "parent_id": "2a99c934-89b9-4f49-82d5-4790e7f37ea9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "var add = (x, ...args) =\u003e x + args.reduce((r, n) =\u003e r + n, 0),\n    multiply = (x, ...args) =\u003e x * args.reduce((r, n) =\u003e r * n, 1),\n    divideMonad = (x, ...args) =\u003e identityMonad(x / multiply(...args)),\n    log = x =\u003e console.log(x),\n    substract = (x, ...args) =\u003e x - add(...args);\n\nidentityMonad(100)\n    .apply(add, 10, 29, 13)\n    .apply(multiply, 2)\n    .bind(divideMonad, 2)\n    .apply(substract, 67, 34)\n    .apply(multiply, 1239)\n    .bind(divideMonad, 20, 54, 2)\n    .apply(Math.round)\n    .call(log); // Logs 29"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "var add = (x, ...args) =\u003e x + args.reduce((r, n) =\u003e r + n, 0),\n    multiply = (x, ...args) =\u003e x * args.reduce((r, n) =\u003e r * n, 1),\n    divideMonad = (x, ...args) =\u003e identityMonad(x / multiply(...args)),\n    log = x =\u003e console.log(x),\n    substract = (x, ...args) =\u003e x - add(...args);\n\nidentityMonad(100)\n    .apply(add, 10, 29, 13)\n    .apply(multiply, 2)\n    .bind(divideMonad, 2)\n    .apply(substract, 67, 34)\n    .apply(multiply, 1239)\n    .bind(divideMonad, 20, 54, 2)\n    .apply(Math.round)\n    .call(log); // Logs 29",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551605700000,
        "id": "8a91eadb-2317-4899-94c9-c04c6f92f6c4",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551605700000,
        "parent_id": "2a99c934-89b9-4f49-82d5-4790e7f37ea9",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "Identity monad",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}