{
  "ID": "b8c08113-ee3c-4822-a734-af8eb162a48e",
  "Root": {
    "alive": true,
    "content": [
      "e06ba0a4-abc4-4e64-a8d6-ce36f141d780",
      "a3b54458-258e-47ca-9679-ae75c0d4c767"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715463950,
    "id": "b8c08113-ee3c-4822-a734-af8eb162a48e",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550715463950,
    "parent_id": "cc7ee5f2-a202-48b4-855b-4a6af1659629",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "000 Scope"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715463948,
        "id": "e06ba0a4-abc4-4e64-a8d6-ce36f141d780",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715463948,
        "parent_id": "b8c08113-ee3c-4822-a734-af8eb162a48e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715463950,
        "id": "a3b54458-258e-47ca-9679-ae75c0d4c767",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715463950,
        "parent_id": "b8c08113-ee3c-4822-a734-af8eb162a48e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Scope is the context in which variables live and can be accessed by other code in the same scope. Because JavaScript can largely be used as a functional programming language, knowing the scope of variables and functions is important as it helps to prevent bugs and unexpected behavior at runtime."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Scope is the context in which variables live and can be accessed by other code in the same scope. Because JavaScript can largely be used as a functional programming language, knowing the scope of variables and functions is important as it helps to prevent bugs and unexpected behavior at runtime."
          }
        ]
      }
    ],
    "title": "000 Scope"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}