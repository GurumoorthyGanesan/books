{
  "ID": "662e416d-2bb9-4dc5-a0a0-03dfe410d7f9",
  "Root": {
    "alive": true,
    "content": [
      "1a61e3e2-378e-4bb5-8198-abeb69ec44c3",
      "d8ded658-7232-4c59-9b2a-1d5dc93c645e",
      "3329953e-cb83-4caf-9a09-b3174539caf1",
      "a280b9c9-68ee-4c95-9205-1fdc24b31031",
      "1f15da75-0ad0-4994-afce-c83927dee138",
      "adfefc51-bfa1-4907-bd1e-5048387ac91b",
      "0fff971a-3c91-4893-b376-b00a25273992",
      "e554c680-de94-4fa1-9c73-6d5acd9dfbb1",
      "457e1fa3-318b-442a-b7e5-9e758bae147d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715916179,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "662e416d-2bb9-4dc5-a0a0-03dfe410d7f9",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551595800000,
    "parent_id": "2023fa0a-be42-4a7c-84ca-22f2a013d046",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Factory functions"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715916173,
        "id": "1a61e3e2-378e-4bb5-8198-abeb69ec44c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715916173,
        "parent_id": "662e416d-2bb9-4dc5-a0a0-03dfe410d7f9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A factory function is simply a function that returns an object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A factory function is simply a function that returns an object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715916176,
        "id": "d8ded658-7232-4c59-9b2a-1d5dc93c645e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715916176,
        "parent_id": "662e416d-2bb9-4dc5-a0a0-03dfe410d7f9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Factory functions do not require the use of the "
            ],
            [
              "new",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword, but can still be used to initialize an object, like a constructor."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Factory functions do not require the use of the "
          },
          {
            "Text": "new",
            "AttrFlags": 2
          },
          {
            "Text": " keyword, but can still be used to initialize an object, like a constructor."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715916177,
        "id": "3329953e-cb83-4caf-9a09-b3174539caf1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715916177,
        "parent_id": "662e416d-2bb9-4dc5-a0a0-03dfe410d7f9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Often, factory functions are used as API wrappers, like in the cases of "
            ],
            [
              "jQuery",
              [
                [
                  "a",
                  "https://jquery.com/"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "moment.js",
              [
                [
                  "a",
                  "http://momentjs.com/"
                ]
              ]
            ],
            [
              ", so users do not need to use "
            ],
            [
              "new",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Often, factory functions are used as API wrappers, like in the cases of "
          },
          {
            "Text": "jQuery",
            "Link": "https://jquery.com/"
          },
          {
            "Text": " and "
          },
          {
            "Text": "moment.js",
            "Link": "http://momentjs.com/"
          },
          {
            "Text": ", so users do not need to use "
          },
          {
            "Text": "new",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715916178,
        "id": "a280b9c9-68ee-4c95-9205-1fdc24b31031",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715916178,
        "parent_id": "662e416d-2bb9-4dc5-a0a0-03dfe410d7f9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following is the simplest form of factory function; taking arguments and using them to craft a new object with the object literal:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following is the simplest form of factory function; taking arguments and using them to craft a new object with the object literal:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715916178,
        "id": "1f15da75-0ad0-4994-afce-c83927dee138",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551595800000,
        "parent_id": "662e416d-2bb9-4dc5-a0a0-03dfe410d7f9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "function cowFactory(name) {\n    return {\n        name: name,\n        talk: function () {\n            console.log('Moo, my name is ' + this.name);\n        },\n    };\n}\n\nvar daisy = cowFactory('Daisy');  // create a cow named Daisy\ndaisy.talk();  // \"Moo, my name is Daisy\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "function cowFactory(name) {\n    return {\n        name: name,\n        talk: function () {\n            console.log('Moo, my name is ' + this.name);\n        },\n    };\n}\n\nvar daisy = cowFactory('Daisy');  // create a cow named Daisy\ndaisy.talk();  // \"Moo, my name is Daisy\"",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715916178,
        "id": "adfefc51-bfa1-4907-bd1e-5048387ac91b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715916178,
        "parent_id": "662e416d-2bb9-4dc5-a0a0-03dfe410d7f9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is easy to define private properties and methods in a factory, by including them outside of the returned object. This keeps your implementation details encapsulated, so you can only expose the public interface to your object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is easy to define private properties and methods in a factory, by including them outside of the returned object. This keeps your implementation details encapsulated, so you can only expose the public interface to your object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715916178,
        "id": "0fff971a-3c91-4893-b376-b00a25273992",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551595800000,
        "parent_id": "662e416d-2bb9-4dc5-a0a0-03dfe410d7f9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "function cowFactory(name) {\n    function formalName() {\n        return name + ' the cow';\n    }\n\n    return {\n        talk: function () {\n            console.log('Moo, my name is ' + formalName());\n        },\n    };\n}\n\nvar daisy = cowFactory('Daisy');\ndaisy.talk();  // \"Moo, my name is Daisy the cow\"\ndaisy.formalName();  // ERROR: daisy.formalName is not a function"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "function cowFactory(name) {\n    function formalName() {\n        return name + ' the cow';\n    }\n\n    return {\n        talk: function () {\n            console.log('Moo, my name is ' + formalName());\n        },\n    };\n}\n\nvar daisy = cowFactory('Daisy');\ndaisy.talk();  // \"Moo, my name is Daisy the cow\"\ndaisy.formalName();  // ERROR: daisy.formalName is not a function",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715916179,
        "id": "e554c680-de94-4fa1-9c73-6d5acd9dfbb1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715916179,
        "parent_id": "662e416d-2bb9-4dc5-a0a0-03dfe410d7f9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The last line will give an error because the function "
            ],
            [
              "formalName",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is closed inside the "
            ],
            [
              "cowFactory",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function. This is a "
            ],
            [
              "closure",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/javascript/480/scope/1575/closures#t=20170117072939024722"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The last line will give an error because the function "
          },
          {
            "Text": "formalName",
            "AttrFlags": 2
          },
          {
            "Text": " is closed inside the "
          },
          {
            "Text": "cowFactory",
            "AttrFlags": 2
          },
          {
            "Text": " function. This is a "
          },
          {
            "Text": "closure",
            "Link": "http://stackoverflow.com/documentation/javascript/480/scope/1575/closures#t=20170117072939024722"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715916179,
        "id": "457e1fa3-318b-442a-b7e5-9e758bae147d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715916179,
        "parent_id": "662e416d-2bb9-4dc5-a0a0-03dfe410d7f9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Factories are also a great way of applying functional programming practices in JavaScript, because they are functions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Factories are also a great way of applying functional programming practices in JavaScript, because they are functions."
          }
        ]
      }
    ],
    "title": "Factory functions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}