{
  "ID": "b14b2069-cc95-4672-955e-d985f3f15bcc",
  "Root": {
    "alive": true,
    "content": [
      "71f2a781-3a52-4658-b409-5cc518fc4446",
      "3070003f-782f-4c09-9f78-c367ad77b8dd",
      "4b238698-5b11-4bb1-a254-03b5533ab859",
      "299f8378-fad7-4030-a820-732c936339c5",
      "80050161-a5d7-4c25-8bae-f30b7720942d",
      "1eb23e57-6a5d-4301-8a9c-8c3bc6a4e204",
      "1f331f85-77f3-4f8f-9015-5da480c05071",
      "c1606e55-3224-419b-b44c-64602ef1aa60"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715093455,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "b14b2069-cc95-4672-955e-d985f3f15bcc",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551337740000,
    "parent_id": "6f8457e8-22bd-4430-878a-05b299e31aea",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Strategy pattern"
        ]
      ]
    },
    "type": "page",
    "version": 17,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715093454,
        "id": "71f2a781-3a52-4658-b409-5cc518fc4446",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715093454,
        "parent_id": "b14b2069-cc95-4672-955e-d985f3f15bcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A strategy pattern can be used in Javascript in many cases to replace a switch statement. It is especially helpful when the number of conditions is dynamic or very large. It allows the code for each condition to be independent and separately testable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A strategy pattern can be used in Javascript in many cases to replace a switch statement. It is especially helpful when the number of conditions is dynamic or very large. It allows the code for each condition to be independent and separately testable."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715093454,
        "id": "3070003f-782f-4c09-9f78-c367ad77b8dd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715093454,
        "parent_id": "b14b2069-cc95-4672-955e-d985f3f15bcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Strategy object is simple an object with multiple functions, representing each separate condition. Example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Strategy object is simple an object with multiple functions, representing each separate condition. Example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715093454,
        "id": "4b238698-5b11-4bb1-a254-03b5533ab859",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551337740000,
        "parent_id": "b14b2069-cc95-4672-955e-d985f3f15bcc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "const AnimalSays = {\n    dog () {\n        return 'woof';\n    },\n\n    cat () {\n        return 'meow';\n    },\n\n    lion () {\n        return 'roar';\n    },\n\n    // ... other animals\n\n    default () {\n        return 'moo';\n    }\n};"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "const AnimalSays = {\n    dog () {\n        return 'woof';\n    },\n\n    cat () {\n        return 'meow';\n    },\n\n    lion () {\n        return 'roar';\n    },\n\n    // ... other animals\n\n    default () {\n        return 'moo';\n    }\n};",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715093454,
        "id": "299f8378-fad7-4030-a820-732c936339c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715093454,
        "parent_id": "b14b2069-cc95-4672-955e-d985f3f15bcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The above object can be used as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The above object can be used as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715093454,
        "id": "80050161-a5d7-4c25-8bae-f30b7720942d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551337740000,
        "parent_id": "b14b2069-cc95-4672-955e-d985f3f15bcc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "function makeAnimalSpeak (animal) {\n    // Match the animal by type\n    const speak = AnimalSays[animal] || AnimalSays.default;\n    console.log(animal + ' says ' + speak());\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "function makeAnimalSpeak (animal) {\n    // Match the animal by type\n    const speak = AnimalSays[animal] || AnimalSays.default;\n    console.log(animal + ' says ' + speak());\n}",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715093454,
        "id": "1eb23e57-6a5d-4301-8a9c-8c3bc6a4e204",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715093454,
        "parent_id": "b14b2069-cc95-4672-955e-d985f3f15bcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Results:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Results:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715093455,
        "id": "1f331f85-77f3-4f8f-9015-5da480c05071",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551337740000,
        "parent_id": "b14b2069-cc95-4672-955e-d985f3f15bcc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "makeAnimalSpeak('dog') // =\u003e 'dog says woof'\nmakeAnimalSpeak('cat') // =\u003e 'cat says meow'\nmakeAnimalSpeak('lion') // =\u003e 'lion says roar'\nmakeAnimalSpeak('snake') // =\u003e 'snake says moo'"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "makeAnimalSpeak('dog') // =\u003e 'dog says woof'\nmakeAnimalSpeak('cat') // =\u003e 'cat says meow'\nmakeAnimalSpeak('lion') // =\u003e 'lion says roar'\nmakeAnimalSpeak('snake') // =\u003e 'snake says moo'",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715093455,
        "id": "c1606e55-3224-419b-b44c-64602ef1aa60",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715093455,
        "parent_id": "b14b2069-cc95-4672-955e-d985f3f15bcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the last case, our default function handles any missing animals."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the last case, our default function handles any missing animals."
          }
        ]
      }
    ],
    "title": "Strategy pattern",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}