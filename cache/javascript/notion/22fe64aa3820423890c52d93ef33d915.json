{
  "ID": "22fe64aa-3820-4238-90c5-2d93ef33d915",
  "Root": {
    "alive": true,
    "content": [
      "62e73288-d480-40fd-84e8-7c72a256f401",
      "99589749-484b-4db0-ac31-037600a8ba11",
      "9898ab4d-4928-4d49-a87d-4dbf4c4b9732",
      "dc3e52ae-c3ec-43cb-b55d-1630b46829b2",
      "d61ec192-ca3e-4db0-ae82-19e1ac41f055"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550716322359,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "22fe64aa-3820-4238-90c5-2d93ef33d915",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551605040000,
    "parent_id": "f1316bc0-3015-4b78-abc1-99cb599f71bc",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Error handling and control-flow branching"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716322353,
        "id": "62e73288-d480-40fd-84e8-7c72a256f401",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716322353,
        "parent_id": "22fe64aa-3820-4238-90c5-2d93ef33d915",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Callbacks are often used to provide error handling. This is a form of control flow branching, where some instructions are executed only when an error occurs:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Callbacks are often used to provide error handling. This is a form of control flow branching, where some instructions are executed only when an error occurs:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716322356,
        "id": "99589749-484b-4db0-ac31-037600a8ba11",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551605040000,
        "parent_id": "22fe64aa-3820-4238-90c5-2d93ef33d915",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "const expected = true;\n\nfunction compare(actual, success, failure) {\n  if (actual === expected) {\n    success();\n  } else {\n    failure();\n  }\n}\n\nfunction onSuccess() {\n  console.log('Value was expected');\n}\n\nfunction onFailure() {\n  console.log('Value was unexpected/exceptional');\n}\n\ncompare(true, onSuccess, onFailure);\ncompare(false, onSuccess, onFailure);\n\n// Outputs:\n//   \"Value was expected\"\n//   \"Value was unexpected/exceptional\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "const expected = true;\n\nfunction compare(actual, success, failure) {\n  if (actual === expected) {\n    success();\n  } else {\n    failure();\n  }\n}\n\nfunction onSuccess() {\n  console.log('Value was expected');\n}\n\nfunction onFailure() {\n  console.log('Value was unexpected/exceptional');\n}\n\ncompare(true, onSuccess, onFailure);\ncompare(false, onSuccess, onFailure);\n\n// Outputs:\n//   \"Value was expected\"\n//   \"Value was unexpected/exceptional\"",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716322356,
        "id": "9898ab4d-4928-4d49-a87d-4dbf4c4b9732",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716322356,
        "parent_id": "22fe64aa-3820-4238-90c5-2d93ef33d915",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Code execution in "
            ],
            [
              "compare()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " above has two possible branches: "
            ],
            [
              "success",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when the expected and actual values are the same, and "
            ],
            [
              "error",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when they are different. This is especially useful when control flow should branch after some asynchronous instruction:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Code execution in "
          },
          {
            "Text": "compare()",
            "AttrFlags": 2
          },
          {
            "Text": " above has two possible branches: "
          },
          {
            "Text": "success",
            "AttrFlags": 2
          },
          {
            "Text": " when the expected and actual values are the same, and "
          },
          {
            "Text": "error",
            "AttrFlags": 2
          },
          {
            "Text": " when they are different. This is especially useful when control flow should branch after some asynchronous instruction:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716322357,
        "id": "dc3e52ae-c3ec-43cb-b55d-1630b46829b2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551605040000,
        "parent_id": "22fe64aa-3820-4238-90c5-2d93ef33d915",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "function compareAsync(actual, success, failure) {\n  setTimeout(function () {\n    compare(actual, success, failure)\n  }, 1000);\n}\n\ncompareAsync(true, onSuccess, onFailure);\ncompareAsync(false, onSuccess, onFailure);\nconsole.log('Doing something else');\n\n// Outputs:\n//   \"Doing something else\"\n//   \"Value was expected\"\n//   \"Value was unexpected/exceptional\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "function compareAsync(actual, success, failure) {\n  setTimeout(function () {\n    compare(actual, success, failure)\n  }, 1000);\n}\n\ncompareAsync(true, onSuccess, onFailure);\ncompareAsync(false, onSuccess, onFailure);\nconsole.log('Doing something else');\n\n// Outputs:\n//   \"Doing something else\"\n//   \"Value was expected\"\n//   \"Value was unexpected/exceptional\"",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550716322359,
        "id": "d61ec192-ca3e-4db0-ae82-19e1ac41f055",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550716322359,
        "parent_id": "22fe64aa-3820-4238-90c5-2d93ef33d915",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It should be noted, multiple callbacks do not have to be mutually exclusive – both methods could be called. Similarly, the "
            ],
            [
              "compare()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " could be written with callbacks that are optional (by using a "
            ],
            [
              "noop",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/NOP"
                ]
              ]
            ],
            [
              " as the default value - see "
            ],
            [
              "Null Object pattern",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Null_Object_pattern"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It should be noted, multiple callbacks do not have to be mutually exclusive – both methods could be called. Similarly, the "
          },
          {
            "Text": "compare()",
            "AttrFlags": 2
          },
          {
            "Text": " could be written with callbacks that are optional (by using a "
          },
          {
            "Text": "noop",
            "Link": "https://en.wikipedia.org/wiki/NOP"
          },
          {
            "Text": " as the default value - see "
          },
          {
            "Text": "Null Object pattern",
            "Link": "https://en.wikipedia.org/wiki/Null_Object_pattern"
          },
          {
            "Text": ")."
          }
        ]
      }
    ],
    "title": "Error handling and control-flow branching",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}