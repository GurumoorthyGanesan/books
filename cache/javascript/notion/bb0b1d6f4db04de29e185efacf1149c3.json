{
  "ID": "bb0b1d6f-4db0-4de2-9e18-5efacf1149c3",
  "Root": {
    "alive": true,
    "content": [
      "41a65668-0031-4828-943f-8f4c5701468d",
      "f946560c-0875-4a82-a1b1-e7cc279431a1",
      "f906f3e1-1eb4-44ac-83cc-d32f1ab1cf6d",
      "69390e14-8b04-407d-93f1-eb40c577dee3",
      "cd51f6d4-d0ae-45b8-8d73-bad6d09d1e4e",
      "113f28f6-133a-4049-a63f-24af4a3b49c9",
      "4733d583-193a-426f-916d-300f05fc7a8e",
      "66b8b9cb-c648-4b39-9f51-6ea06df30379",
      "6a8f96fe-80f8-4227-bf70-0180059ed52a",
      "8415f353-fb24-4522-8b1e-da4ec8e97ab8",
      "3aeaa607-70c1-4038-9d73-e0b8c2b02a0d",
      "8dce7689-e4ab-4844-9bfd-774740f00199",
      "52571b80-a7d6-4497-80a0-2eefc55d67d3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715118358,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "bb0b1d6f-4db0-4de2-9e18-5efacf1149c3",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551338400000,
    "parent_id": "499ecbda-9a83-4992-8013-1e2d2247246e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Promise chaining"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715118353,
        "id": "41a65668-0031-4828-943f-8f4c5701468d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715118353,
        "parent_id": "bb0b1d6f-4db0-4de2-9e18-5efacf1149c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "then",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then"
                ]
              ]
            ],
            [
              " method of a promise returns a new promise."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "then",
            "AttrFlags": 2,
            "Link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then"
          },
          {
            "Text": " method of a promise returns a new promise."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715118354,
        "id": "f946560c-0875-4a82-a1b1-e7cc279431a1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551338400000,
        "parent_id": "bb0b1d6f-4db0-4de2-9e18-5efacf1149c3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "const promise = new Promise(resolve =\u003e setTimeout(resolve, 5000));\n\npromise\n    // 5 seconds later\n    .then(() =\u003e 2)\n    // returning a value from a then callback will cause\n    // the new promise to resolve with this value\n    .then(value =\u003e { /* value === 2 */ });"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "const promise = new Promise(resolve =\u003e setTimeout(resolve, 5000));\n\npromise\n    // 5 seconds later\n    .then(() =\u003e 2)\n    // returning a value from a then callback will cause\n    // the new promise to resolve with this value\n    .then(value =\u003e { /* value === 2 */ });",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715118355,
        "id": "f906f3e1-1eb4-44ac-83cc-d32f1ab1cf6d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715118355,
        "parent_id": "bb0b1d6f-4db0-4de2-9e18-5efacf1149c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Returning a "
            ],
            [
              "Promise",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"
                ]
              ]
            ],
            [
              " from a "
            ],
            [
              "then",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then"
                ]
              ]
            ],
            [
              " callback will append it to the promise chain."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Returning a "
          },
          {
            "Text": "Promise",
            "AttrFlags": 2,
            "Link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"
          },
          {
            "Text": " from a "
          },
          {
            "Text": "then",
            "AttrFlags": 2,
            "Link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then"
          },
          {
            "Text": " callback will append it to the promise chain."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715118355,
        "id": "69390e14-8b04-407d-93f1-eb40c577dee3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551338400000,
        "parent_id": "bb0b1d6f-4db0-4de2-9e18-5efacf1149c3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "function wait(millis) {\n    return new Promise(resolve =\u003e setTimeout(resolve, millis));\n}\n\nconst p = wait(5000).then(() =\u003e wait(4000)).then(() =\u003e wait(1000));\np.then(() =\u003e { /* 10 seconds have passed */ });"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "function wait(millis) {\n    return new Promise(resolve =\u003e setTimeout(resolve, millis));\n}\n\nconst p = wait(5000).then(() =\u003e wait(4000)).then(() =\u003e wait(1000));\np.then(() =\u003e { /* 10 seconds have passed */ });",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715118356,
        "id": "cd51f6d4-d0ae-45b8-8d73-bad6d09d1e4e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715118356,
        "parent_id": "bb0b1d6f-4db0-4de2-9e18-5efacf1149c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A "
            ],
            [
              "catch",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch"
                ]
              ]
            ],
            [
              " allows a rejected promise to recover, similar to how "
            ],
            [
              "catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in a "
            ],
            [
              "try",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "/"
            ],
            [
              "catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement works. Any chained "
            ],
            [
              "then",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then"
                ]
              ]
            ],
            [
              " after a "
            ],
            [
              "catch",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch"
                ]
              ]
            ],
            [
              " will execute its resolve handler using the value resolved from the "
            ],
            [
              "catch",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A "
          },
          {
            "Text": "catch",
            "AttrFlags": 2,
            "Link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch"
          },
          {
            "Text": " allows a rejected promise to recover, similar to how "
          },
          {
            "Text": "catch",
            "AttrFlags": 2
          },
          {
            "Text": " in a "
          },
          {
            "Text": "try",
            "AttrFlags": 2
          },
          {
            "Text": "/"
          },
          {
            "Text": "catch",
            "AttrFlags": 2
          },
          {
            "Text": " statement works. Any chained "
          },
          {
            "Text": "then",
            "AttrFlags": 2,
            "Link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then"
          },
          {
            "Text": " after a "
          },
          {
            "Text": "catch",
            "AttrFlags": 2,
            "Link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch"
          },
          {
            "Text": " will execute its resolve handler using the value resolved from the "
          },
          {
            "Text": "catch",
            "AttrFlags": 2,
            "Link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715118357,
        "id": "113f28f6-133a-4049-a63f-24af4a3b49c9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551338400000,
        "parent_id": "bb0b1d6f-4db0-4de2-9e18-5efacf1149c3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "const p = new Promise(resolve =\u003e {throw 'oh no'});\np.catch(() =\u003e 'oh yes').then(console.log.bind(console));  // outputs \"oh yes\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "const p = new Promise(resolve =\u003e {throw 'oh no'});\np.catch(() =\u003e 'oh yes').then(console.log.bind(console));  // outputs \"oh yes\"",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715118357,
        "id": "4733d583-193a-426f-916d-300f05fc7a8e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715118357,
        "parent_id": "bb0b1d6f-4db0-4de2-9e18-5efacf1149c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If there are no "
            ],
            [
              "catch",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "reject",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " handlers in the middle of the chain, a "
            ],
            [
              "catch",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch"
                ]
              ]
            ],
            [
              " at the end will capture any rejection in the chain:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If there are no "
          },
          {
            "Text": "catch",
            "AttrFlags": 2,
            "Link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch"
          },
          {
            "Text": " or "
          },
          {
            "Text": "reject",
            "AttrFlags": 2
          },
          {
            "Text": " handlers in the middle of the chain, a "
          },
          {
            "Text": "catch",
            "AttrFlags": 2,
            "Link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch"
          },
          {
            "Text": " at the end will capture any rejection in the chain:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715118358,
        "id": "66b8b9cb-c648-4b39-9f51-6ea06df30379",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551338400000,
        "parent_id": "bb0b1d6f-4db0-4de2-9e18-5efacf1149c3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "p.catch(() =\u003e Promise.reject('oh yes'))\n  .then(console.log.bind(console))      // won't be called\n  .catch(console.error.bind(console));  // outputs \"oh yes\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "p.catch(() =\u003e Promise.reject('oh yes'))\n  .then(console.log.bind(console))      // won't be called\n  .catch(console.error.bind(console));  // outputs \"oh yes\"",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715118358,
        "id": "6a8f96fe-80f8-4227-bf70-0180059ed52a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715118358,
        "parent_id": "bb0b1d6f-4db0-4de2-9e18-5efacf1149c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "On certain occasions, you may want to “branch” the execution of the functions. You can do it by returning different promises from a function depending on the condition. Later in the code, you can merge all of these branches into one to call other functions on them and/or to handle all errors in one place."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "On certain occasions, you may want to “branch” the execution of the functions. You can do it by returning different promises from a function depending on the condition. Later in the code, you can merge all of these branches into one to call other functions on them and/or to handle all errors in one place."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715118358,
        "id": "8415f353-fb24-4522-8b1e-da4ec8e97ab8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551338400000,
        "parent_id": "bb0b1d6f-4db0-4de2-9e18-5efacf1149c3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "promise\n    .then(result =\u003e {          \n        if (result.condition) {\n            return handlerFn1() \n                .then(handlerFn2);\n        } else if (result.condition2) {\n            return handlerFn3()\n                .then(handlerFn4);\n        } else {\n            throw new Error(\"Invalid result\");\n        }\n    })\n    .then(handlerFn5)\n    .catch(err =\u003e {\n        console.error(err);\n    });"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "promise\n    .then(result =\u003e {          \n        if (result.condition) {\n            return handlerFn1() \n                .then(handlerFn2);\n        } else if (result.condition2) {\n            return handlerFn3()\n                .then(handlerFn4);\n        } else {\n            throw new Error(\"Invalid result\");\n        }\n    })\n    .then(handlerFn5)\n    .catch(err =\u003e {\n        console.error(err);\n    });",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715118358,
        "id": "3aeaa607-70c1-4038-9d73-e0b8c2b02a0d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715118358,
        "parent_id": "bb0b1d6f-4db0-4de2-9e18-5efacf1149c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Thus, the execution order of the functions looks like:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Thus, the execution order of the functions looks like:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715118358,
        "id": "8dce7689-e4ab-4844-9bfd-774740f00199",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715118358,
        "parent_id": "bb0b1d6f-4db0-4de2-9e18-5efacf1149c3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "promise --\u003e handlerFn1 -\u003e handlerFn2 --\u003e handlerFn5 ~~\u003e .catch()\n         |                            ^\n         V                            |\n         -\u003e handlerFn3 -\u003e handlerFn4 -^"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "promise --\u003e handlerFn1 -\u003e handlerFn2 --\u003e handlerFn5 ~~\u003e .catch()\n         |                            ^\n         V                            |\n         -\u003e handlerFn3 -\u003e handlerFn4 -^",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715118358,
        "id": "52571b80-a7d6-4497-80a0-2eefc55d67d3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715118358,
        "parent_id": "bb0b1d6f-4db0-4de2-9e18-5efacf1149c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The single "
            ],
            [
              "catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will get the error on whichever branch it may occur."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The single "
          },
          {
            "Text": "catch",
            "AttrFlags": 2
          },
          {
            "Text": " will get the error on whichever branch it may occur."
          }
        ]
      }
    ],
    "title": "Promise chaining",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}