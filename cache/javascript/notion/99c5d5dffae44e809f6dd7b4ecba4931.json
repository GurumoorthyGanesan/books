{
  "ID": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
  "Root": {
    "alive": true,
    "content": [
      "c2e34f11-9c36-47f8-ad2e-1be510374f6e",
      "1376bdea-1422-456e-b540-af2579d0cedc",
      "e133697c-b856-4405-81ba-be6c2750d015",
      "d25fb705-c10a-488f-bce4-9bb9bf0669a3",
      "a5f07e9c-df55-4367-a7fd-351281c50fd0",
      "833a851f-02e5-4c82-af5b-0084dd619e94",
      "c39d4014-d8ac-4e99-8e3c-f18c26e683b7",
      "4c0de9a8-fff8-4fe0-9fc2-65eb7e8b09d0",
      "93bc79b2-eb3f-4966-a6e7-c222745eab6c",
      "c4033e47-4a54-47a7-9fb0-d41001272447",
      "a791a8e8-e4a5-4caf-a1f6-cf2a475eb2a6",
      "4dcbb468-3286-4b02-b116-fc28dd33cc88",
      "c8aabbb6-cedb-4687-a3f1-a1ae1d038f33",
      "b4b47594-9684-4205-9ef0-645269f92959",
      "67b67de1-d332-4571-aa92-c7db6c480322",
      "c7f7ca35-44d3-4464-8387-e7d007237311",
      "b3f7c837-c8dd-4cdd-a70c-6efa73b3e232",
      "a9b44443-f25f-4ba3-a98f-adca581a2660",
      "d66dfe9a-cccd-45e4-8316-536daab8b874",
      "a1c5f41c-50e0-4cde-91cb-3620b0e99e19",
      "52518014-5cb2-488a-95ef-ee7e259c4602",
      "2921923f-ae85-492e-af8f-75f318e45fa2",
      "cc5ca202-39b1-4350-8964-42b13d839a80",
      "76c87873-bb58-4da2-ae6e-e781edf5fff9",
      "12d43613-d209-424b-bd3a-516d1328ad8f",
      "eb2b0a39-1df3-404e-9538-3def3b6de425"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715202248,
    "id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550715202248,
    "parent_id": "1a45a60e-581c-44a4-8504-9468f2150e17",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "060 Iterator-Observer interface"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202242,
        "id": "c2e34f11-9c36-47f8-ad2e-1be510374f6e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202242,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A generator is a combination of two things - an "
            ],
            [
              "Iterator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and an "
            ],
            [
              "Observer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A generator is a combination of two things - an "
          },
          {
            "Text": "Iterator",
            "AttrFlags": 2
          },
          {
            "Text": " and an "
          },
          {
            "Text": "Observer",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202244,
        "id": "1376bdea-1422-456e-b540-af2579d0cedc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202244,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Iterator"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Iterator"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202245,
        "id": "e133697c-b856-4405-81ba-be6c2750d015",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202245,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An iterator is something when invoked returns an "
            ],
            [
              "iterable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". An "
            ],
            [
              "iterable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is something you can iterate upon. From ES6/ES2015 onwards, all collections (Array, Map, Set, WeakMap, WeakSet) conform to the Iterable contract."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An iterator is something when invoked returns an "
          },
          {
            "Text": "iterable",
            "AttrFlags": 2
          },
          {
            "Text": ". An "
          },
          {
            "Text": "iterable",
            "AttrFlags": 2
          },
          {
            "Text": " is something you can iterate upon. From ES6/ES2015 onwards, all collections (Array, Map, Set, WeakMap, WeakSet) conform to the Iterable contract."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202245,
        "id": "d25fb705-c10a-488f-bce4-9bb9bf0669a3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202245,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A generator(iterator) is a producer. In iteration the consumer PULLs the value from the producer."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "A generator(iterator) is a producer. In iteration the consumer PULLs the value from the producer."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202245,
        "id": "a5f07e9c-df55-4367-a7fd-351281c50fd0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202245,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202245,
        "id": "833a851f-02e5-4c82-af5b-0084dd619e94",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202245,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function *gen() { yield 5; yield 6; }\nlet a = gen();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function *gen() { yield 5; yield 6; }\nlet a = gen();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202245,
        "id": "c39d4014-d8ac-4e99-8e3c-f18c26e683b7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202245,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Whenever you call "
            ],
            [
              "a.next()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", youâ€™re essentially "
            ],
            [
              "pull",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "-ing value from the Iterator and "
            ],
            [
              "pause",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " the execution at "
            ],
            [
              "yield",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The next time you call "
            ],
            [
              "a.next()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the execution resumes from the previously paused state."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Whenever you call "
          },
          {
            "Text": "a.next()",
            "AttrFlags": 2
          },
          {
            "Text": ", youâ€™re essentially "
          },
          {
            "Text": "pull",
            "AttrFlags": 2
          },
          {
            "Text": "-ing value from the Iterator and "
          },
          {
            "Text": "pause",
            "AttrFlags": 2
          },
          {
            "Text": " the execution at "
          },
          {
            "Text": "yield",
            "AttrFlags": 2
          },
          {
            "Text": ". The next time you call "
          },
          {
            "Text": "a.next()",
            "AttrFlags": 2
          },
          {
            "Text": ", the execution resumes from the previously paused state."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202245,
        "id": "4c0de9a8-fff8-4fe0-9fc2-65eb7e8b09d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202245,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Observer"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Observer"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202246,
        "id": "93bc79b2-eb3f-4966-a6e7-c222745eab6c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202246,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A generator is also an observer using which you can send some values back into the generator."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A generator is also an observer using which you can send some values back into the generator."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202246,
        "id": "c4033e47-4a54-47a7-9fb0-d41001272447",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202246,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function *gen() {\n  document.write('\u003cbr\u003eobserver:', yield 1);\n}\nvar a = gen();\nvar i = a.next();\nwhile(!i.done) {\n  document.write('\u003cbr\u003eiterator:', i.value);\n  i = a.next(100);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function *gen() {\n  document.write('\u003cbr\u003eobserver:', yield 1);\n}\nvar a = gen();\nvar i = a.next();\nwhile(!i.done) {\n  document.write('\u003cbr\u003eiterator:', i.value);\n  i = a.next(100);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202246,
        "id": "a791a8e8-e4a5-4caf-a1f6-cf2a475eb2a6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202246,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here you can see that "
            ],
            [
              "yield 1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is used like an expression which evaluates to some value. The value it evaluates to is the value sent as an argument to the "
            ],
            [
              "a.next",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function call."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here you can see that "
          },
          {
            "Text": "yield 1",
            "AttrFlags": 2
          },
          {
            "Text": " is used like an expression which evaluates to some value. The value it evaluates to is the value sent as an argument to the "
          },
          {
            "Text": "a.next",
            "AttrFlags": 2
          },
          {
            "Text": " function call."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202246,
        "id": "4dcbb468-3286-4b02-b116-fc28dd33cc88",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202246,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So, for the first time "
            ],
            [
              "i.value",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be the first value yielded ("
            ],
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "), and when continuing the iteration to the next state, we send a value back to the generator using "
            ],
            [
              "a.next(100)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So, for the first time "
          },
          {
            "Text": "i.value",
            "AttrFlags": 2
          },
          {
            "Text": " will be the first value yielded ("
          },
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": "), and when continuing the iteration to the next state, we send a value back to the generator using "
          },
          {
            "Text": "a.next(100)",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202246,
        "id": "c8aabbb6-cedb-4687-a3f1-a1ae1d038f33",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202246,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Doing async with Generators"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Doing async with Generators"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202246,
        "id": "b4b47594-9684-4205-9ef0-645269f92959",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202246,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Generators are widely used with "
            ],
            [
              "spawn",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (from taskJS or co) function, where the function takes in a generator and allows us to write asynchronous code in a synchronous fashion. This does NOT mean that async code is converted to sync code / executed synchronously. It means that we can write code that looks like "
            ],
            [
              "sync",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " but internally it is still "
            ],
            [
              "async",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Generators are widely used with "
          },
          {
            "Text": "spawn",
            "AttrFlags": 2
          },
          {
            "Text": " (from taskJS or co) function, where the function takes in a generator and allows us to write asynchronous code in a synchronous fashion. This does NOT mean that async code is converted to sync code / executed synchronously. It means that we can write code that looks like "
          },
          {
            "Text": "sync",
            "AttrFlags": 2
          },
          {
            "Text": " but internally it is still "
          },
          {
            "Text": "async",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202246,
        "id": "67b67de1-d332-4571-aa92-c7db6c480322",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202246,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sync is BLOCKING; Async is WAITING. Writing code that blocks is easy. When PULLing, value appears in the assignment position. When PUSHing, value appears in the argument position of the callback."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sync is BLOCKING; Async is WAITING. Writing code that blocks is easy. When PULLing, value appears in the assignment position. When PUSHing, value appears in the argument position of the callback."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202247,
        "id": "c7f7ca35-44d3-4464-8387-e7d007237311",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202247,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When you use iterators, you "
            ],
            [
              "PULL",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " the value from the producer. When you use callbacks, the producer "
            ],
            [
              "PUSH",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "es the value to the argument position of the callback."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When you use iterators, you "
          },
          {
            "Text": "PULL",
            "AttrFlags": 2
          },
          {
            "Text": " the value from the producer. When you use callbacks, the producer "
          },
          {
            "Text": "PUSH",
            "AttrFlags": 2
          },
          {
            "Text": "es the value to the argument position of the callback."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202247,
        "id": "b3f7c837-c8dd-4cdd-a70c-6efa73b3e232",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202247,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var i = a.next() // PULL\ndosomething(..., v =\u003e {...}) // PUSH"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var i = a.next() // PULL\ndosomething(..., v =\u003e {...}) // PUSH",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202247,
        "id": "a9b44443-f25f-4ba3-a98f-adca581a2660",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202247,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here, you pull the value from "
            ],
            [
              "a.next()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and in the second, "
            ],
            [
              "v =\u003e {...}",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the callback and a value is "
            ],
            [
              "PUSH",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "ed into the argument position "
            ],
            [
              "v",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " of the callback function."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here, you pull the value from "
          },
          {
            "Text": "a.next()",
            "AttrFlags": 2
          },
          {
            "Text": " and in the second, "
          },
          {
            "Text": "v =\u003e {...}",
            "AttrFlags": 2
          },
          {
            "Text": " is the callback and a value is "
          },
          {
            "Text": "PUSH",
            "AttrFlags": 2
          },
          {
            "Text": "ed into the argument position "
          },
          {
            "Text": "v",
            "AttrFlags": 2
          },
          {
            "Text": " of the callback function."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202247,
        "id": "d66dfe9a-cccd-45e4-8316-536daab8b874",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202247,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using this pull-push mechanism, we can write async programming like this,"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using this pull-push mechanism, we can write async programming like this,"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202247,
        "id": "a1c5f41c-50e0-4cde-91cb-3620b0e99e19",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202247,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let delay = t =\u003e new Promise(r =\u003e setTimeout(r, t));\nspawn(function*() {\n  // wait for 100 ms and send 1\n  let x = yield delay(100).then(() =\u003e 1);\n  console.log(x); // 1\n\n   // wait for 100 ms and send 2\n  let y = yield delay(100).then(() =\u003e 2);\n  console.log(y); // 2\n});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let delay = t =\u003e new Promise(r =\u003e setTimeout(r, t));\nspawn(function*() {\n  // wait for 100 ms and send 1\n  let x = yield delay(100).then(() =\u003e 1);\n  console.log(x); // 1\n\n   // wait for 100 ms and send 2\n  let y = yield delay(100).then(() =\u003e 2);\n  console.log(y); // 2\n});",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202248,
        "id": "52518014-5cb2-488a-95ef-ee7e259c4602",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202248,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So, looking at the above code, we are writing async code that looks like itâ€™s "
            ],
            [
              "blocking",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (the yield statements wait for 100ms and then continue execution), but itâ€™s actually "
            ],
            [
              "waiting",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The "
            ],
            [
              "pause",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "resume",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " property of generator allows us to do this amazing trick."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So, looking at the above code, we are writing async code that looks like itâ€™s "
          },
          {
            "Text": "blocking",
            "AttrFlags": 2
          },
          {
            "Text": " (the yield statements wait for 100ms and then continue execution), but itâ€™s actually "
          },
          {
            "Text": "waiting",
            "AttrFlags": 2
          },
          {
            "Text": ". The "
          },
          {
            "Text": "pause",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "resume",
            "AttrFlags": 2
          },
          {
            "Text": " property of generator allows us to do this amazing trick."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202248,
        "id": "2921923f-ae85-492e-af8f-75f318e45fa2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202248,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "How does it work ?"
            ]
          ]
        },
        "type": "sub_sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "How does it work ?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202248,
        "id": "cc5ca202-39b1-4350-8964-42b13d839a80",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202248,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The spawn function uses "
            ],
            [
              "yield promise",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to PULL the promise state from the generator, waits till the promise is resolved, and PUSHes the resolved value back to the generator so it can consume it."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The spawn function uses "
          },
          {
            "Text": "yield promise",
            "AttrFlags": 2
          },
          {
            "Text": " to PULL the promise state from the generator, waits till the promise is resolved, and PUSHes the resolved value back to the generator so it can consume it."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202248,
        "id": "76c87873-bb58-4da2-ae6e-e781edf5fff9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202248,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Use it now"
            ]
          ]
        },
        "type": "sub_sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Use it now"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202248,
        "id": "12d43613-d209-424b-bd3a-516d1328ad8f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202248,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So, with generators and spawn function, you can clean up all your async code in NodeJS to look and feel like itâ€™s synchronous. This will make debugging easy. Also the code will look neat."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So, with generators and spawn function, you can clean up all your async code in NodeJS to look and feel like itâ€™s synchronous. This will make debugging easy. Also the code will look neat."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715202248,
        "id": "eb2b0a39-1df3-404e-9538-3def3b6de425",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715202248,
        "parent_id": "99c5d5df-fae4-4e80-9f6d-d7b4ecba4931",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This feature is coming to future versions of JavaScript - as "
            ],
            [
              "async...await",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". But you can use them today in ES2015/ES6 using the spawn function defined in the libraries - taskjs, co, or bluebird"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This feature is coming to future versions of JavaScript - as "
          },
          {
            "Text": "async...await",
            "AttrFlags": 2
          },
          {
            "Text": ". But you can use them today in ES2015/ES6 using the spawn function defined in the libraries - taskjs, co, or bluebird"
          }
        ]
      }
    ],
    "title": "060 Iterator-Observer interface"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}