{
  "ID": "347ddad3-9c63-4342-9b92-3643d77970d6",
  "Root": {
    "alive": true,
    "content": [
      "370dfa74-20a9-4f8c-8ef9-97bece86c20e",
      "cb0befae-85e7-4f00-8c67-0bc5a5115f12",
      "f2db9777-20f9-4936-aece-398898426627",
      "6e857480-f9dc-423c-92cf-016069064aa8",
      "6effe04f-2402-45e7-8c23-be4f93f9a5cc",
      "d21d3123-3389-494e-8ab7-8a181ece03c4"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715868275,
    "id": "347ddad3-9c63-4342-9b92-3643d77970d6",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550715868275,
    "parent_id": "7e064e1b-dd35-424e-9952-a63c7355d191",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "040 Comparing Strings Lexicographically"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715868273,
        "id": "370dfa74-20a9-4f8c-8ef9-97bece86c20e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715868273,
        "parent_id": "347ddad3-9c63-4342-9b92-3643d77970d6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To compare strings alphabetically, use "
            ],
            [
              "localeCompare()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare"
                ]
              ]
            ],
            [
              ". This returns a negative value if the reference string is lexicographically (alphabetically) before the compared string (the parameter), a positive value if it comes afterwards, and a value of "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if they are equal."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To compare strings alphabetically, use "
          },
          {
            "Text": "localeCompare()",
            "AttrFlags": 2,
            "Link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare"
          },
          {
            "Text": ". This returns a negative value if the reference string is lexicographically (alphabetically) before the compared string (the parameter), a positive value if it comes afterwards, and a value of "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": " if they are equal."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715868274,
        "id": "cb0befae-85e7-4f00-8c67-0bc5a5115f12",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715868274,
        "parent_id": "347ddad3-9c63-4342-9b92-3643d77970d6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var a = \"hello\";\nvar b = \"world\";\n\nconsole.log(a.localeCompare(b)); // -1"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var a = \"hello\";\nvar b = \"world\";\n\nconsole.log(a.localeCompare(b)); // -1",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715868275,
        "id": "f2db9777-20f9-4936-aece-398898426627",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715868275,
        "parent_id": "347ddad3-9c63-4342-9b92-3643d77970d6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "\\\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "\\\u003c",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operators can also be used to compare strings lexicographically, but they cannot return a value of zero (this can be tested with the "
            ],
            [
              "==",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equality operator). As a result, a form of the "
            ],
            [
              "localeCompare()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function can be written like so:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "\\\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "\\\u003c",
            "AttrFlags": 2
          },
          {
            "Text": " operators can also be used to compare strings lexicographically, but they cannot return a value of zero (this can be tested with the "
          },
          {
            "Text": "==",
            "AttrFlags": 2
          },
          {
            "Text": " equality operator). As a result, a form of the "
          },
          {
            "Text": "localeCompare()",
            "AttrFlags": 2
          },
          {
            "Text": " function can be written like so:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715868275,
        "id": "6e857480-f9dc-423c-92cf-016069064aa8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715868275,
        "parent_id": "347ddad3-9c63-4342-9b92-3643d77970d6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function strcmp(a, b) {\n    if(a === b) {\n        return 0;\n    }\n\n    if (a \u003e b) {\n        return 1;\n    }\n\n    return -1;\n}\n\nconsole.log(strcmp(\"hello\", \"world\")); // -1\nconsole.log(strcmp(\"hello\", \"hello\")); //  0\nconsole.log(strcmp(\"world\", \"hello\")); //  1"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function strcmp(a, b) {\n    if(a === b) {\n        return 0;\n    }\n\n    if (a \u003e b) {\n        return 1;\n    }\n\n    return -1;\n}\n\nconsole.log(strcmp(\"hello\", \"world\")); // -1\nconsole.log(strcmp(\"hello\", \"hello\")); //  0\nconsole.log(strcmp(\"world\", \"hello\")); //  1",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715868275,
        "id": "6effe04f-2402-45e7-8c23-be4f93f9a5cc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715868275,
        "parent_id": "347ddad3-9c63-4342-9b92-3643d77970d6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is especially useful when using a sorting function that compares based on the sign of the return value (such as "
            ],
            [
              "sort",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is especially useful when using a sorting function that compares based on the sign of the return value (such as "
          },
          {
            "Text": "sort",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715868275,
        "id": "d21d3123-3389-494e-8ab7-8a181ece03c4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715868275,
        "parent_id": "347ddad3-9c63-4342-9b92-3643d77970d6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var arr = [\"bananas\", \"cranberries\", \"apples\"];\narr.sort(function(a, b) {\n    return a.localeCompare(b);\n});\nconsole.log(arr); // [ \"apples\", \"bananas\", \"cranberries\" ]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var arr = [\"bananas\", \"cranberries\", \"apples\"];\narr.sort(function(a, b) {\n    return a.localeCompare(b);\n});\nconsole.log(arr); // [ \"apples\", \"bananas\", \"cranberries\" ]",
        "code_language": "Plain Text"
      }
    ],
    "title": "040 Comparing Strings Lexicographically"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}