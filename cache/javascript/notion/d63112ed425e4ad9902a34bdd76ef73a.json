{
  "ID": "d63112ed-425e-4ad9-902a-34bdd76ef73a",
  "Root": {
    "alive": true,
    "content": [
      "13ec77f9-663f-4b08-af9b-378b0b221d65",
      "fe24848f-b860-4aa9-8ee3-718e7de9a462",
      "d6f57e53-34f5-4f09-91d0-7851bc991be7",
      "c21e1626-4cd2-4f27-bcb6-dd6aefbfe9d1"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715199480,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d63112ed-425e-4ad9-902a-34bdd76ef73a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551340620000,
    "parent_id": "1a45a60e-581c-44a4-8504-9468f2150e17",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Iteration"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715199477,
        "id": "13ec77f9-663f-4b08-af9b-378b0b221d65",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715199477,
        "parent_id": "d63112ed-425e-4ad9-902a-34bdd76ef73a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A generator is "
            ],
            [
              "iterable",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". It can be looped over with a "
            ],
            [
              "for...of",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement, and used in other constructs which depend on the iteration protocol."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A generator is "
          },
          {
            "Text": "iterable",
            "AttrFlags": 4
          },
          {
            "Text": ". It can be looped over with a "
          },
          {
            "Text": "for...of",
            "AttrFlags": 2
          },
          {
            "Text": " statement, and used in other constructs which depend on the iteration protocol."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715199479,
        "id": "fe24848f-b860-4aa9-8ee3-718e7de9a462",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551340620000,
        "parent_id": "d63112ed-425e-4ad9-902a-34bdd76ef73a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "function* range(n) {\n    for (let i = 0; i \u003c n; ++i) {\n        yield i;\n    }\n}\n\n// looping\nfor (let n of range(10)) {\n    // n takes on the values 0, 1, ... 9\n}\n\n// spread operator\nlet nums = [...range(3)];  // [0, 1, 2]\nlet max = Math.max(...range(100));  // 99"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "function* range(n) {\n    for (let i = 0; i \u003c n; ++i) {\n        yield i;\n    }\n}\n\n// looping\nfor (let n of range(10)) {\n    // n takes on the values 0, 1, ... 9\n}\n\n// spread operator\nlet nums = [...range(3)];  // [0, 1, 2]\nlet max = Math.max(...range(100));  // 99",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715199479,
        "id": "d6f57e53-34f5-4f09-91d0-7851bc991be7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715199479,
        "parent_id": "d63112ed-425e-4ad9-902a-34bdd76ef73a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here is another example of use generator to custom iterable object in ES6. Here anonymous generator function "
            ],
            [
              "function *",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " used."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here is another example of use generator to custom iterable object in ES6. Here anonymous generator function "
          },
          {
            "Text": "function *",
            "AttrFlags": 2
          },
          {
            "Text": " used."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715199480,
        "id": "c21e1626-4cd2-4f27-bcb6-dd6aefbfe9d1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551340620000,
        "parent_id": "d63112ed-425e-4ad9-902a-34bdd76ef73a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "let user = {\n  name: \"sam\", totalReplies: 17, isBlocked: false\n};\n\nuser[Symbol.iterator] = function *(){\n\n  let properties = Object.keys(this);\n  let count = 0;\n  let isDone = false;\n\n  for(let p of properties){\n    yield this[p];\n  }\n};\n\nfor(let p of user){\n  console.log( p );\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "let user = {\n  name: \"sam\", totalReplies: 17, isBlocked: false\n};\n\nuser[Symbol.iterator] = function *(){\n\n  let properties = Object.keys(this);\n  let count = 0;\n  let isDone = false;\n\n  for(let p of properties){\n    yield this[p];\n  }\n};\n\nfor(let p of user){\n  console.log( p );\n}",
        "code_language": "JavaScript"
      }
    ],
    "title": "Iteration",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}