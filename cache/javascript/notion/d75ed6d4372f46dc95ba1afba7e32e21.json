{
  "ID": "d75ed6d4-372f-46dc-95ba-1afba7e32e21",
  "Root": {
    "alive": true,
    "content": [
      "0e7b189c-4722-4041-8185-a9f7c06bcaf9",
      "ac76e9bd-c402-4010-9347-f48059e91cbc",
      "79f34112-fcd7-4318-af5f-c9bb60010939",
      "7ae411b2-5d6d-44fa-9085-3da0e20e9d71"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715434152,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d75ed6d4-372f-46dc-95ba-1afba7e32e21",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551341820000,
    "parent_id": "de40b1f9-45f7-4e12-9c65-7299a8408890",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Basic interpolation and multiline strings"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715434149,
        "id": "0e7b189c-4722-4041-8185-a9f7c06bcaf9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715434149,
        "parent_id": "d75ed6d4-372f-46dc-95ba-1afba7e32e21",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Template literals are a special type of string literal that can be used instead of the standard "
            ],
            [
              "'...'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "\"...\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". They are declared by quoting the string with backticks instead of the standard single or double quotes: "
            ],
            [
              "...",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Template literals are a special type of string literal that can be used instead of the standard "
          },
          {
            "Text": "'...'",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "\"...\"",
            "AttrFlags": 2
          },
          {
            "Text": ". They are declared by quoting the string with backticks instead of the standard single or double quotes: "
          },
          {
            "Text": "...",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715434152,
        "id": "ac76e9bd-c402-4010-9347-f48059e91cbc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715434152,
        "parent_id": "d75ed6d4-372f-46dc-95ba-1afba7e32e21",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Template literals can contain line breaks and arbitrary expressions can be embedded using the "
            ],
            [
              "${ expression }",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " substitution syntax. By default, the values of these substitution expressions are concatenated directly into the string where they appear."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Template literals can contain line breaks and arbitrary expressions can be embedded using the "
          },
          {
            "Text": "${ expression }",
            "AttrFlags": 2
          },
          {
            "Text": " substitution syntax. By default, the values of these substitution expressions are concatenated directly into the string where they appear."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715434152,
        "id": "79f34112-fcd7-4318-af5f-c9bb60010939",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551341820000,
        "parent_id": "d75ed6d4-372f-46dc-95ba-1afba7e32e21",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "const name = \"John\";\nconst score = 74;\n\nconsole.log(`Game Over!\n\n${name}'s score was ${score * 10}.`);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "const name = \"John\";\nconst score = 74;\n\nconsole.log(`Game Over!\n\n${name}'s score was ${score * 10}.`);",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715434152,
        "id": "7ae411b2-5d6d-44fa-9085-3da0e20e9d71",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715434152,
        "parent_id": "d75ed6d4-372f-46dc-95ba-1afba7e32e21",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Game Over!\n\nJohn's score was 740."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Game Over!\n\nJohn's score was 740.",
        "code_language": "Plain Text"
      }
    ],
    "title": "Basic interpolation and multiline strings",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}