{
  "ID": "bf8a270d-aee1-47bc-a287-ad241775bd4c",
  "Root": {
    "alive": true,
    "content": [
      "f60f7a10-bcc4-4d15-93a2-9f8b365291bb",
      "cc73fb8f-120b-48be-a258-d96c6d097c99",
      "ab5b9060-b91f-4f48-ba00-2f004ba59239",
      "0af63131-bc66-4bad-816c-753e3848588a",
      "253a21a4-9c22-40a8-a335-29e3d18dd1c0",
      "e5af95a1-cd01-4814-9d85-042bf856046b",
      "974c4b50-816c-4f01-bf74-2531630d05ff",
      "6eac1c05-6925-4918-a76c-c514c46685c5",
      "f5171876-3306-44b7-bd97-838e3dca1cf9",
      "65b71432-50d6-4481-bfc3-968cf71df2bc",
      "36ee2c5b-2b84-406e-84a8-51c75a5f1b1f",
      "bef7be96-e00b-4612-b394-a120ebbda637"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715412444,
    "id": "bf8a270d-aee1-47bc-a287-ad241775bd4c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550715412444,
    "parent_id": "e0d3f5dc-ee20-4e4b-b0e0-1084a18748fd",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "000 JSON"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715412436,
        "id": "f60f7a10-bcc4-4d15-93a2-9f8b365291bb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715412436,
        "parent_id": "bf8a270d-aee1-47bc-a287-ad241775bd4c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715412439,
        "id": "cc73fb8f-120b-48be-a258-d96c6d097c99",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715412439,
        "parent_id": "bf8a270d-aee1-47bc-a287-ad241775bd4c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "JSON (JavaScript Object Notation) is a lightweight data-interchange format. It is easy for humans to read and write and easy for machines to parse and generate. It is important to realize that, in JavaScript, JSON is a string and not an object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "JSON (JavaScript Object Notation) is a lightweight data-interchange format. It is easy for humans to read and write and easy for machines to parse and generate. It is important to realize that, in JavaScript, JSON is a string and not an object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715412440,
        "id": "ab5b9060-b91f-4f48-ba00-2f004ba59239",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715412440,
        "parent_id": "bf8a270d-aee1-47bc-a287-ad241775bd4c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A basic overview can be found on the "
            ],
            [
              "json.org",
              [
                [
                  "a",
                  "http://json.org/"
                ]
              ]
            ],
            [
              " website which also contains links to implementations of the standard in many different programming languages."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A basic overview can be found on the "
          },
          {
            "Text": "json.org",
            "Link": "http://json.org/"
          },
          {
            "Text": " website which also contains links to implementations of the standard in many different programming languages."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715412440,
        "id": "0af63131-bc66-4bad-816c-753e3848588a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715412440,
        "parent_id": "bf8a270d-aee1-47bc-a287-ad241775bd4c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Syntax"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Syntax"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715412441,
        "id": "253a21a4-9c22-40a8-a335-29e3d18dd1c0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715412441,
        "parent_id": "bf8a270d-aee1-47bc-a287-ad241775bd4c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "JSON.parse(input[, reviver])"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "JSON.parse(input[, reviver])"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715412441,
        "id": "e5af95a1-cd01-4814-9d85-042bf856046b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715412441,
        "parent_id": "bf8a270d-aee1-47bc-a287-ad241775bd4c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "JSON.stringify(value[, replacer[, space]])"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "JSON.stringify(value[, replacer[, space]])"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715412441,
        "id": "974c4b50-816c-4f01-bf74-2531630d05ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715412441,
        "parent_id": "bf8a270d-aee1-47bc-a287-ad241775bd4c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parameters"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parameters"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715412442,
        "id": "6eac1c05-6925-4918-a76c-c514c46685c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715412442,
        "parent_id": "bf8a270d-aee1-47bc-a287-ad241775bd4c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parameter | Details |\n––––––––––– | ——— |"
            ],
            [
              "JSON.parse",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "Parse a JSON string",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "input(string)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | JSON string to be parsed. |"
            ],
            [
              "reviver(function)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Prescribes a transformation for the input JSON string. |"
            ],
            [
              "JSON.stringify",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "Serialize a serializable value",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "value(string)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Value to be serialized according to the JSON specification. |"
            ],
            [
              "replacer(function",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "String[]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "Number[])",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Selectively includes certain properties of the "
            ],
            [
              "value",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object. |"
            ],
            [
              "space(String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "Number",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") | If a "
            ],
            [
              "number",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is provided, then "
            ],
            [
              "space",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " number of whitespaces will be inserted of readability. If a "
            ],
            [
              "string",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is provided, the string (first 10 characters) will be used as whitespaces. |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parameter | Details |\n––––––––––– | ——— |"
          },
          {
            "Text": "JSON.parse",
            "AttrFlags": 1
          },
          {
            "Text": " | "
          },
          {
            "Text": "Parse a JSON string",
            "AttrFlags": 1
          },
          {
            "Text": " |"
          },
          {
            "Text": "input(string)",
            "AttrFlags": 2
          },
          {
            "Text": " | JSON string to be parsed. |"
          },
          {
            "Text": "reviver(function)",
            "AttrFlags": 2
          },
          {
            "Text": " | Prescribes a transformation for the input JSON string. |"
          },
          {
            "Text": "JSON.stringify",
            "AttrFlags": 1
          },
          {
            "Text": " | "
          },
          {
            "Text": "Serialize a serializable value",
            "AttrFlags": 1
          },
          {
            "Text": " |"
          },
          {
            "Text": "value(string)",
            "AttrFlags": 2
          },
          {
            "Text": " | Value to be serialized according to the JSON specification. |"
          },
          {
            "Text": "replacer(function",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "String[]",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "Number[])",
            "AttrFlags": 2
          },
          {
            "Text": " | Selectively includes certain properties of the "
          },
          {
            "Text": "value",
            "AttrFlags": 2
          },
          {
            "Text": " object. |"
          },
          {
            "Text": "space(String",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "Number",
            "AttrFlags": 2
          },
          {
            "Text": ") | If a "
          },
          {
            "Text": "number",
            "AttrFlags": 2
          },
          {
            "Text": " is provided, then "
          },
          {
            "Text": "space",
            "AttrFlags": 2
          },
          {
            "Text": " number of whitespaces will be inserted of readability. If a "
          },
          {
            "Text": "string",
            "AttrFlags": 2
          },
          {
            "Text": " is provided, the string (first 10 characters) will be used as whitespaces. |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715412442,
        "id": "f5171876-3306-44b7-bd97-838e3dca1cf9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715412442,
        "parent_id": "bf8a270d-aee1-47bc-a287-ad241775bd4c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715412443,
        "id": "65b71432-50d6-4481-bfc3-968cf71df2bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715412443,
        "parent_id": "bf8a270d-aee1-47bc-a287-ad241775bd4c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The JSON utility methods were first standardized in "
            ],
            [
              "ECMAScript 5.1 §15.12",
              [
                [
                  "a",
                  "http://www.ecma-international.org/ecma-262/5.1/#sec-15.12"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The JSON utility methods were first standardized in "
          },
          {
            "Text": "ECMAScript 5.1 §15.12",
            "Link": "http://www.ecma-international.org/ecma-262/5.1/#sec-15.12"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715412444,
        "id": "36ee2c5b-2b84-406e-84a8-51c75a5f1b1f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715412444,
        "parent_id": "bf8a270d-aee1-47bc-a287-ad241775bd4c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The format was formally defined in "
            ],
            [
              "The application/json Media Type for JSON",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " (RFC 4627 July 2006) which was later updated in "
            ],
            [
              "The JSON Data Interchange Format",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " (RFC 7158 March 2013, "
            ],
            [
              "ECMA-404",
              [
                [
                  "a",
                  "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf"
                ]
              ]
            ],
            [
              " October 2013 and RFC 7159 March 2014)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The format was formally defined in "
          },
          {
            "Text": "The application/json Media Type for JSON",
            "AttrFlags": 1
          },
          {
            "Text": " (RFC 4627 July 2006) which was later updated in "
          },
          {
            "Text": "The JSON Data Interchange Format",
            "AttrFlags": 1
          },
          {
            "Text": " (RFC 7158 March 2013, "
          },
          {
            "Text": "ECMA-404",
            "Link": "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf"
          },
          {
            "Text": " October 2013 and RFC 7159 March 2014)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715412444,
        "id": "bef7be96-e00b-4612-b394-a120ebbda637",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715412444,
        "parent_id": "bf8a270d-aee1-47bc-a287-ad241775bd4c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To make these methods available in old browsers such as Internet Explorer 8, use Douglas Crockford’s "
            ],
            [
              "json2.js",
              [
                [
                  "a",
                  "https://github.com/douglascrockford/JSON-js"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To make these methods available in old browsers such as Internet Explorer 8, use Douglas Crockford’s "
          },
          {
            "Text": "json2.js",
            "Link": "https://github.com/douglascrockford/JSON-js"
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "000 JSON"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}