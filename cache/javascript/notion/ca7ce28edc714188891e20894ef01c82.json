{
  "ID": "ca7ce28e-dc71-4188-891e-20894ef01c82",
  "Root": {
    "alive": true,
    "content": [
      "facc2e17-ea01-4276-bf25-e7b7524c9950",
      "da844134-7b16-4a1c-ac91-4ebd3f65752c",
      "6d70a051-6f49-4760-badd-80db24bc0da0",
      "69b39aa0-b5d5-4786-a110-6a2bd4a168fb",
      "163fed58-f153-4135-bf11-ea5d277b4f41",
      "1fb43ad4-9241-4ff2-ba3e-9e1c23bca936"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550715129393,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ca7ce28e-dc71-4188-891e-20894ef01c82",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551338640000,
    "parent_id": "499ecbda-9a83-4992-8013-1e2d2247246e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Performing cleanup with finally"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715129391,
        "id": "facc2e17-ea01-4276-bf25-e7b7524c9950",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715129391,
        "parent_id": "ca7ce28e-dc71-4188-891e-20894ef01c82",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There is currently a "
            ],
            [
              "proposal",
              [
                [
                  "a",
                  "https://github.com/tc39/proposal-promise-finally"
                ]
              ]
            ],
            [
              " (not yet part of the ECMAScript standard) to add a "
            ],
            [
              "finally",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " callback to promises that will be executed regardless of whether the promise is fulfilled or rejected. Semantically, this is similar to the "
            ],
            [
              "finally",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch#The_finally_clause"
                ]
              ]
            ],
            [
              " clause of the ",
              [
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch#The_finally_clause"
                ]
              ]
            ],
            [
              "try",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch#The_finally_clause"
                ]
              ]
            ],
            [
              " block",
              [
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch#The_finally_clause"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There is currently a "
          },
          {
            "Text": "proposal",
            "Link": "https://github.com/tc39/proposal-promise-finally"
          },
          {
            "Text": " (not yet part of the ECMAScript standard) to add a "
          },
          {
            "Text": "finally",
            "AttrFlags": 2
          },
          {
            "Text": " callback to promises that will be executed regardless of whether the promise is fulfilled or rejected. Semantically, this is similar to the "
          },
          {
            "Text": "finally",
            "AttrFlags": 2,
            "Link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch#The_finally_clause"
          },
          {
            "Text": " clause of the ",
            "Link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch#The_finally_clause"
          },
          {
            "Text": "try",
            "AttrFlags": 2,
            "Link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch#The_finally_clause"
          },
          {
            "Text": " block",
            "Link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch#The_finally_clause"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715129392,
        "id": "da844134-7b16-4a1c-ac91-4ebd3f65752c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715129392,
        "parent_id": "ca7ce28e-dc71-4188-891e-20894ef01c82",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You would usually use this functionality for cleanup:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You would usually use this functionality for cleanup:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715129392,
        "id": "6d70a051-6f49-4760-badd-80db24bc0da0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551338640000,
        "parent_id": "ca7ce28e-dc71-4188-891e-20894ef01c82",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "var loadingData = true;\n\nfetch('/data')\n    .then(result =\u003e processData(result.data))\n    .catch(error =\u003e console.error(error))\n    .finally(() =\u003e {\n        loadingData = false;\n    });"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "var loadingData = true;\n\nfetch('/data')\n    .then(result =\u003e processData(result.data))\n    .catch(error =\u003e console.error(error))\n    .finally(() =\u003e {\n        loadingData = false;\n    });",
        "code_language": "JavaScript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715129393,
        "id": "69b39aa0-b5d5-4786-a110-6a2bd4a168fb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715129393,
        "parent_id": "ca7ce28e-dc71-4188-891e-20894ef01c82",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is important to note that the "
            ],
            [
              "finally",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " callback doesn’t affect the state of the promise. It doesn’t matter what value it returns, the promise stays in the fulfilled/rejected state that it had before. So in the example above the promise will be resolved with the return value of "
            ],
            [
              "processData(result.data)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " even though the "
            ],
            [
              "finally",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " callback returned "
            ],
            [
              "undefined",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is important to note that the "
          },
          {
            "Text": "finally",
            "AttrFlags": 2
          },
          {
            "Text": " callback doesn’t affect the state of the promise. It doesn’t matter what value it returns, the promise stays in the fulfilled/rejected state that it had before. So in the example above the promise will be resolved with the return value of "
          },
          {
            "Text": "processData(result.data)",
            "AttrFlags": 2
          },
          {
            "Text": " even though the "
          },
          {
            "Text": "finally",
            "AttrFlags": 2
          },
          {
            "Text": " callback returned "
          },
          {
            "Text": "undefined",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715129393,
        "id": "163fed58-f153-4135-bf11-ea5d277b4f41",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550715129393,
        "parent_id": "ca7ce28e-dc71-4188-891e-20894ef01c82",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With the standardization process still being in progress, your promises implementation most likely won’t support "
            ],
            [
              "finally",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " callbacks out of the box. For synchronous callbacks you can add this functionality with a polyfill however:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With the standardization process still being in progress, your promises implementation most likely won’t support "
          },
          {
            "Text": "finally",
            "AttrFlags": 2
          },
          {
            "Text": " callbacks out of the box. For synchronous callbacks you can add this functionality with a polyfill however:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550715129393,
        "id": "1fb43ad4-9241-4ff2-ba3e-9e1c23bca936",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551338640000,
        "parent_id": "ca7ce28e-dc71-4188-891e-20894ef01c82",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "JavaScript"
            ]
          ],
          "title": [
            [
              "if (!Promise.prototype.finally) {\n    Promise.prototype.finally = function(callback) {\n        return this.then(result =\u003e {\n            callback();\n            return result;\n        }, error =\u003e {\n            callback();\n            throw error;\n        });\n    };\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "if (!Promise.prototype.finally) {\n    Promise.prototype.finally = function(callback) {\n        return this.then(result =\u003e {\n            callback();\n            return result;\n        }, error =\u003e {\n            callback();\n            throw error;\n        });\n    };\n}",
        "code_language": "JavaScript"
      }
    ],
    "title": "Performing cleanup with finally",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}