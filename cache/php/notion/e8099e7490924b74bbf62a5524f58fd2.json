{
  "ID": "e8099e74-9092-4b74-bbf6-2a5524f58fd2",
  "Root": {
    "alive": true,
    "content": [
      "bf4649fe-0a7c-4131-a9f7-b2be718a35f2",
      "8d680737-5495-42a1-9d1d-93136bf5e8c1"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552024395340,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e8099e74-9092-4b74-bbf6-2a5524f58fd2",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552024395340,
    "parent_id": "d5631366-098b-4c90-b10a-4c27cda07738",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using Amp event loop"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024395339,
        "id": "bf4649fe-0a7c-4131-a9f7-b2be718a35f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024395339,
        "parent_id": "e8099e74-9092-4b74-bbf6-2a5524f58fd2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Amp",
              [
                [
                  "a",
                  "https://github.com/amphp/amp/tree/v1.x"
                ]
              ]
            ],
            [
              " harnesses Promises [another name for Awaitables] and Generators for coroutine creation."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Amp",
            "Link": "https://github.com/amphp/amp/tree/v1.x"
          },
          {
            "Text": " harnesses Promises [another name for Awaitables] and Generators for coroutine creation."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024395339,
        "id": "8d680737-5495-42a1-9d1d-93136bf5e8c1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024395339,
        "parent_id": "e8099e74-9092-4b74-bbf6-2a5524f58fd2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "require __DIR__ . '/vendor/autoload.php';\n\nuse Amp\\Dns;\n\n// Try our system defined resolver or googles, whichever is fastest\nfunction queryStackOverflow($recordtype) {\n    $requests = [\n        Dns\\query(\"stackoverflow.com\", $recordtype),\n        Dns\\query(\"stackoverflow.com\", $recordtype, [\"server\" =\u003e \"8.8.8.8\"]),\n    ];\n    // returns a Promise resolving when the first one of the requests resolves\n    return yield Amp\\first($request);\n}\n\n\\Amp\\run(function() { // main loop, implicitly a coroutine\n    try {\n        // convert to coroutine with Amp\\resolve()\n        $promise = Amp\\resolve(queryStackOverflow(Dns\\Record::NS));\n        list($ns, $type, $ttl) = // we need only one NS result, not all\n            current(yield Amp\\timeout($promise, 2000 /* milliseconds */));\n        echo \"The result of the fastest server to reply to our query was $ns\";\n    } catch (Amp\\TimeoutException $e) {\n        echo \"We've heard no answer for 2 seconds! Bye!\";\n    } catch (Dns\\NoRecordException $e) {\n        echo \"No NS records there? Stupid DNS nameserver!\";\n    }\n});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "require __DIR__ . '/vendor/autoload.php';\n\nuse Amp\\Dns;\n\n// Try our system defined resolver or googles, whichever is fastest\nfunction queryStackOverflow($recordtype) {\n    $requests = [\n        Dns\\query(\"stackoverflow.com\", $recordtype),\n        Dns\\query(\"stackoverflow.com\", $recordtype, [\"server\" =\u003e \"8.8.8.8\"]),\n    ];\n    // returns a Promise resolving when the first one of the requests resolves\n    return yield Amp\\first($request);\n}\n\n\\Amp\\run(function() { // main loop, implicitly a coroutine\n    try {\n        // convert to coroutine with Amp\\resolve()\n        $promise = Amp\\resolve(queryStackOverflow(Dns\\Record::NS));\n        list($ns, $type, $ttl) = // we need only one NS result, not all\n            current(yield Amp\\timeout($promise, 2000 /* milliseconds */));\n        echo \"The result of the fastest server to reply to our query was $ns\";\n    } catch (Amp\\TimeoutException $e) {\n        echo \"We've heard no answer for 2 seconds! Bye!\";\n    } catch (Dns\\NoRecordException $e) {\n        echo \"No NS records there? Stupid DNS nameserver!\";\n    }\n});",
        "code_language": "Plain Text"
      }
    ],
    "title": "Using Amp event loop",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}