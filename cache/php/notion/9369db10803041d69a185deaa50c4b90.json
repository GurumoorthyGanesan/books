{
  "ID": "9369db10-8030-41d6-9a18-5deaa50c4b90",
  "Root": {
    "alive": true,
    "content": [
      "dd14d458-7068-4524-ae19-7dd792e6a80a",
      "5f6616f3-aef1-4995-9e81-1b14e84cf8c4",
      "18d77a4d-c50a-491f-b51e-661693f581a1",
      "8cf26ee4-8ac5-4ea3-b5a2-f28ea0fcb3e7",
      "e3dde656-59e9-4d60-bff3-5bf03d1b1ebe",
      "884ef25f-07d0-4f98-acc9-f28dfa568680",
      "4ede8df7-643a-4f07-9de8-160682abad36"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552023019146,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "9369db10-8030-41d6-9a18-5deaa50c4b90",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552023019146,
    "parent_id": "c2cfe994-4a4e-42a5-a1f3-29b806f5c459",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Closure binding and scope"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023019142,
        "id": "dd14d458-7068-4524-ae19-7dd792e6a80a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023019142,
        "parent_id": "9369db10-8030-41d6-9a18-5deaa50c4b90",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s consider this example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s consider this example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023019145,
        "id": "5f6616f3-aef1-4995-9e81-1b14e84cf8c4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023019145,
        "parent_id": "9369db10-8030-41d6-9a18-5deaa50c4b90",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003c?php\n\n$myClosure = function() {\n    echo $this-\u003eproperty;\n};\n\nclass MyClass\n{\n    public $property;\n\n    public function __construct($propertyValue)\n    {\n        $this-\u003eproperty = $propertyValue;\n    }\n}\n\n$myInstance = new MyClass('Hello world!');\n$myBoundClosure = $myClosure-\u003ebindTo($myInstance);\n\n$myBoundClosure(); // Shows \"Hello world!\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003c?php\n\n$myClosure = function() {\n    echo $this-\u003eproperty;\n};\n\nclass MyClass\n{\n    public $property;\n\n    public function __construct($propertyValue)\n    {\n        $this-\u003eproperty = $propertyValue;\n    }\n}\n\n$myInstance = new MyClass('Hello world!');\n$myBoundClosure = $myClosure-\u003ebindTo($myInstance);\n\n$myBoundClosure(); // Shows \"Hello world!\"",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023019145,
        "id": "18d77a4d-c50a-491f-b51e-661693f581a1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023019145,
        "parent_id": "9369db10-8030-41d6-9a18-5deaa50c4b90",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Try to change the "
            ],
            [
              "property",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " visibility to either "
            ],
            [
              "protected",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "private",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". You get a fatal error indicating that you do not have access to this property. Indeed, even if the closure has been bound to the object, the scope in which the closure is invoked is not the one needed to have that access. That is what the second argument of "
            ],
            [
              "bindTo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is for."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Try to change the "
          },
          {
            "Text": "property",
            "AttrFlags": 2
          },
          {
            "Text": " visibility to either "
          },
          {
            "Text": "protected",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "private",
            "AttrFlags": 2
          },
          {
            "Text": ". You get a fatal error indicating that you do not have access to this property. Indeed, even if the closure has been bound to the object, the scope in which the closure is invoked is not the one needed to have that access. That is what the second argument of "
          },
          {
            "Text": "bindTo",
            "AttrFlags": 2
          },
          {
            "Text": " is for."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023019145,
        "id": "8cf26ee4-8ac5-4ea3-b5a2-f28ea0fcb3e7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023019145,
        "parent_id": "9369db10-8030-41d6-9a18-5deaa50c4b90",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The only way for a property to be accessed if it’s "
            ],
            [
              "private",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is that it is accessed from a scope that allows it, ie. the class’s scope. In the just previous code example, the scope has not been specified, which means that the closure has been invoked in the same scope as the one used where the closure has been created. Let’s change that:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The only way for a property to be accessed if it’s "
          },
          {
            "Text": "private",
            "AttrFlags": 2
          },
          {
            "Text": " is that it is accessed from a scope that allows it, ie. the class’s scope. In the just previous code example, the scope has not been specified, which means that the closure has been invoked in the same scope as the one used where the closure has been created. Let’s change that:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023019146,
        "id": "e3dde656-59e9-4d60-bff3-5bf03d1b1ebe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023019146,
        "parent_id": "9369db10-8030-41d6-9a18-5deaa50c4b90",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003c?php\n\n$myClosure = function() {\n    echo $this-\u003eproperty;\n};\n\nclass MyClass\n{\n    private $property; // $property is now private\n\n    public function __construct($propertyValue)\n    {\n        $this-\u003eproperty = $propertyValue;\n    }\n}\n\n$myInstance = new MyClass('Hello world!');\n$myBoundClosure = $myClosure-\u003ebindTo($myInstance, MyClass::class);\n\n$myBoundClosure(); // Shows \"Hello world!\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003c?php\n\n$myClosure = function() {\n    echo $this-\u003eproperty;\n};\n\nclass MyClass\n{\n    private $property; // $property is now private\n\n    public function __construct($propertyValue)\n    {\n        $this-\u003eproperty = $propertyValue;\n    }\n}\n\n$myInstance = new MyClass('Hello world!');\n$myBoundClosure = $myClosure-\u003ebindTo($myInstance, MyClass::class);\n\n$myBoundClosure(); // Shows \"Hello world!\"",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023019146,
        "id": "884ef25f-07d0-4f98-acc9-f28dfa568680",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023019146,
        "parent_id": "9369db10-8030-41d6-9a18-5deaa50c4b90",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As just said, if this second parameter is not used, the closure is invoked in the same context as the one used where the closure has been created. For example, a closure created inside a method’s class which is invoked in an object context will have the same scope as the method’s:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As just said, if this second parameter is not used, the closure is invoked in the same context as the one used where the closure has been created. For example, a closure created inside a method’s class which is invoked in an object context will have the same scope as the method’s:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023019146,
        "id": "4ede8df7-643a-4f07-9de8-160682abad36",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023019146,
        "parent_id": "9369db10-8030-41d6-9a18-5deaa50c4b90",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003c?php\n\nclass MyClass\n{\n    private $property;\n\n    public function __construct($propertyValue)\n    {\n        $this-\u003eproperty = $propertyValue;\n    }\n\n    public function getDisplayer()\n      {\n        return function() {\n              echo $this-\u003eproperty;\n        };\n      }\n}\n\n$myInstance = new MyClass('Hello world!');\n\n$displayer = $myInstance-\u003egetDisplayer();\n$displayer(); // Shows \"Hello world!\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003c?php\n\nclass MyClass\n{\n    private $property;\n\n    public function __construct($propertyValue)\n    {\n        $this-\u003eproperty = $propertyValue;\n    }\n\n    public function getDisplayer()\n      {\n        return function() {\n              echo $this-\u003eproperty;\n        };\n      }\n}\n\n$myInstance = new MyClass('Hello world!');\n\n$displayer = $myInstance-\u003egetDisplayer();\n$displayer(); // Shows \"Hello world!\"",
        "code_language": "Plain Text"
      }
    ],
    "title": "Closure binding and scope",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}