{
  "ID": "bec6f0ee-b4e5-4dd6-8195-355c92164248",
  "Root": {
    "alive": true,
    "content": [
      "4e3d6bac-03b7-4872-8df6-f61d5b767fc1",
      "92dd0f39-e5c7-4da6-a196-b4b7ee6cbb21",
      "7b242c1c-6e24-455e-83b1-22e46db6326f",
      "0126033e-c677-47f7-a169-919fce69a6cc",
      "90f98cc9-f083-44a8-aa2e-c5d748aefe36"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552022296557,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "bec6f0ee-b4e5-4dd6-8195-355c92164248",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552022296557,
    "parent_id": "78acf98d-751b-413c-b0ef-3d520c041518",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Type Comparison"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022296555,
        "id": "4e3d6bac-03b7-4872-8df6-f61d5b767fc1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022296555,
        "parent_id": "bec6f0ee-b4e5-4dd6-8195-355c92164248",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are two types of "
            ],
            [
              "comparison",
              [
                [
                  "a",
                  "http://php.net/manual/en/types.comparisons.php"
                ]
              ]
            ],
            [
              ": "
            ],
            [
              "loose comparison",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " with "
            ],
            [
              "==",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "strict comparison",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " with "
            ],
            [
              "===",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Strict comparison ensures both the type and value of both sides of the operator are the same."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are two types of "
          },
          {
            "Text": "comparison",
            "Link": "http://php.net/manual/en/types.comparisons.php"
          },
          {
            "Text": ": "
          },
          {
            "Text": "loose comparison",
            "AttrFlags": 1
          },
          {
            "Text": " with "
          },
          {
            "Text": "==",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "strict comparison",
            "AttrFlags": 1
          },
          {
            "Text": " with "
          },
          {
            "Text": "===",
            "AttrFlags": 2
          },
          {
            "Text": ". Strict comparison ensures both the type and value of both sides of the operator are the same."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022296556,
        "id": "92dd0f39-e5c7-4da6-a196-b4b7ee6cbb21",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022296556,
        "parent_id": "bec6f0ee-b4e5-4dd6-8195-355c92164248",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Loose comparisons\nvar_dump(1 == 1); // true\nvar_dump(1 == \"1\"); // true\nvar_dump(1 == true); // true\nvar_dump(0 == false); // true\n\n// Strict comparisons\nvar_dump(1 === 1); // true\nvar_dump(1 === \"1\"); // false\nvar_dump(1 === true); // false\nvar_dump(0 === false); // false\n\n// Notable exception: NAN — it never is equal to anything\nvar_dump(NAN == NAN); // false\nvar_dump(NAN === NAN); // false"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Loose comparisons\nvar_dump(1 == 1); // true\nvar_dump(1 == \"1\"); // true\nvar_dump(1 == true); // true\nvar_dump(0 == false); // true\n\n// Strict comparisons\nvar_dump(1 === 1); // true\nvar_dump(1 === \"1\"); // false\nvar_dump(1 === true); // false\nvar_dump(0 === false); // false\n\n// Notable exception: NAN — it never is equal to anything\nvar_dump(NAN == NAN); // false\nvar_dump(NAN === NAN); // false",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022296556,
        "id": "7b242c1c-6e24-455e-83b1-22e46db6326f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022296556,
        "parent_id": "bec6f0ee-b4e5-4dd6-8195-355c92164248",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can also use strong comparison to check if type and value "
            ],
            [
              "don’t",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " match using "
            ],
            [
              "!==",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can also use strong comparison to check if type and value "
          },
          {
            "Text": "don’t",
            "AttrFlags": 1
          },
          {
            "Text": " match using "
          },
          {
            "Text": "!==",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022296557,
        "id": "0126033e-c677-47f7-a169-919fce69a6cc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022296557,
        "parent_id": "bec6f0ee-b4e5-4dd6-8195-355c92164248",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A typical example where the "
            ],
            [
              "==",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator is not enough, are functions that can return different types, like "
            ],
            [
              "strpos",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://php.net/manual/en/function.strpos.php"
                ]
              ]
            ],
            [
              ", which returns "
            ],
            [
              "false",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if the "
            ],
            [
              "searchword",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not found, and the match position ("
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") otherwise:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A typical example where the "
          },
          {
            "Text": "==",
            "AttrFlags": 2
          },
          {
            "Text": " operator is not enough, are functions that can return different types, like "
          },
          {
            "Text": "strpos",
            "AttrFlags": 2,
            "Link": "http://php.net/manual/en/function.strpos.php"
          },
          {
            "Text": ", which returns "
          },
          {
            "Text": "false",
            "AttrFlags": 2
          },
          {
            "Text": " if the "
          },
          {
            "Text": "searchword",
            "AttrFlags": 2
          },
          {
            "Text": " is not found, and the match position ("
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ") otherwise:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022296557,
        "id": "90f98cc9-f083-44a8-aa2e-c5d748aefe36",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022296557,
        "parent_id": "bec6f0ee-b4e5-4dd6-8195-355c92164248",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if(strpos('text', 'searchword') == false)\n  // strpos returns false, so == comparison works as expected here, BUT:\nif(strpos('text bla', 'text') == false)\n  // strpos returns 0 (found match at position 0) and 0==false is true.\n  // This is probably not what you expect!\nif(strpos('text','text') === false)\n  // strpos returns 0, and 0===false is false, so this works as expected."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if(strpos('text', 'searchword') == false)\n  // strpos returns false, so == comparison works as expected here, BUT:\nif(strpos('text bla', 'text') == false)\n  // strpos returns 0 (found match at position 0) and 0==false is true.\n  // This is probably not what you expect!\nif(strpos('text','text') === false)\n  // strpos returns 0, and 0===false is false, so this works as expected.",
        "code_language": "Plain Text"
      }
    ],
    "title": "Type Comparison",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}