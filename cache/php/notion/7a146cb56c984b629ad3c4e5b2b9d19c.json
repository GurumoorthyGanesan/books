{
  "ID": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
  "Root": {
    "alive": true,
    "content": [
      "46a17f9c-c7fc-4e81-bd40-179b497a7c19",
      "10df272d-c5c1-47dd-bc50-6a5a8a674a37",
      "2f9ebdff-65a9-4f8e-91e3-84dce98c3161",
      "d4be57e4-c954-4898-a404-8852ecb8a28d",
      "520b4baf-9c8a-4b73-88bd-3cf4f360706a",
      "9e2d47a4-536f-4ea6-b2ea-9768c2362590",
      "633658ac-af84-4616-a89e-7c6679e96bc7",
      "32d3892a-1a2a-4423-a925-ce1e237039cd",
      "094c4f98-401a-4522-b152-11352fdbe31f",
      "3983ff5d-3730-4719-9c13-b4b1909a6cff",
      "53809705-5717-4ed3-824d-887e5edf2024",
      "b6d8c0ba-d611-444b-867c-d3ee6271f5cf",
      "dbc2fd65-baa5-4f66-b522-807c4261ae9c",
      "609641e5-73f8-4f5c-8391-7f22d0a51719",
      "a4fb094d-5d5b-47de-9bcb-a2fe723ce8b7",
      "6dc0d9c8-b667-4ab9-aa0a-efc6101d7788",
      "b5db34ef-f7c7-4c21-a057-365fd78e4601",
      "02b948d4-8cf6-4f23-aae5-e5f3b799e076",
      "d8906c5e-8a88-47c8-ac9c-358b15de1d9c",
      "2774b176-ade1-4387-a610-82a5bf6f2ae1",
      "688bd240-9ac8-45f8-aa5b-20e7f6f5f18d",
      "69cbcb33-8be1-4f3d-8af9-5294ba4e7709",
      "e9bf196b-3d5a-4c41-84ec-66c91959ac6c",
      "2094b463-9b41-4b88-8b5b-9ec1c4b958af",
      "956e382a-6fa3-400a-a83e-b5eaf9fb85b3",
      "8a69c5fc-29c8-458d-99be-636f5af713b0",
      "76ce0632-84b5-4897-a364-f86103bab60f",
      "ab7b8c6b-a247-4446-aba6-46ca8b609cfb",
      "f4f306aa-6991-4225-b301-30fbe203badb",
      "0299de49-ef21-4667-a3a7-ee80e524217a",
      "485bf471-4dd8-4fc7-be1e-cd8570294952",
      "d22649c1-d1e3-4619-ad2b-e2e416002d66",
      "f0a209ba-a1fc-49a4-bfea-35392ab64f47",
      "5aec3cff-24ae-4f8f-8a47-57d73f9dc74a",
      "70e01cab-d30e-4e74-87a0-2f39995391fc",
      "b09e39d9-620d-4bbd-8e84-a794331de5b0",
      "ad839e04-45f1-43e1-8df2-b67727421c62",
      "5639b467-66b7-4e4d-ae27-669c0dbf9fb0"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552024814759,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552024814759,
    "parent_id": "742d5ccb-5b6b-4d47-bb6c-9800fd80a6d3",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "SplFixedArray"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814751,
        "id": "46a17f9c-c7fc-4e81-bd40-179b497a7c19",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814751,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Difference from PHP Array"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Difference from PHP Array"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814753,
        "id": "10df272d-c5c1-47dd-bc50-6a5a8a674a37",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814753,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "PHP’s default Array type is actually implemented as ordered hash maps, which allow us to create arrays that consist of key/value pairs where values can be of any type and keys can be either numbers or strings. This is not traditionally how arrays are created, however."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "PHP’s default Array type is actually implemented as ordered hash maps, which allow us to create arrays that consist of key/value pairs where values can be of any type and keys can be either numbers or strings. This is not traditionally how arrays are created, however."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814754,
        "id": "2f9ebdff-65a9-4f8e-91e3-84dce98c3161",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814754,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/43ad785b-59f1-42e3-bf45-37f69a7e8963/5fb4b37c5bf2d01ad73d91ea59b881f457100c89.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/43ad785b-59f1-42e3-bf45-37f69a7e8963/5fb4b37c5bf2d01ad73d91ea59b881f457100c89.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2F43ad785b-59f1-42e3-bf45-37f69a7e8963%2F5fb4b37c5bf2d01ad73d91ea59b881f457100c89.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814754,
        "id": "d4be57e4-c954-4898-a404-8852ecb8a28d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814754,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So as you can see from this illustration a normal PHP array can be viewed more like an an ordered set of key/value pairs, where each key can map to any value. Notice in this array we have keys that are both numbers and strings, as well as values of different types and the key has no bearing on the order of the elements."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So as you can see from this illustration a normal PHP array can be viewed more like an an ordered set of key/value pairs, where each key can map to any value. Notice in this array we have keys that are both numbers and strings, as well as values of different types and the key has no bearing on the order of the elements."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814754,
        "id": "520b4baf-9c8a-4b73-88bd-3cf4f360706a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814754,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$arr = [\n    9     =\u003e \"foo\",\n    1     =\u003e 4.2,\n    \"bar\" =\u003e null,\n];\n\nforeach($arr as $key =\u003e $value) {\n    echo \"$key =\u003e $value\\n\";\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$arr = [\n    9     =\u003e \"foo\",\n    1     =\u003e 4.2,\n    \"bar\" =\u003e null,\n];\n\nforeach($arr as $key =\u003e $value) {\n    echo \"$key =\u003e $value\\n\";\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814754,
        "id": "9e2d47a4-536f-4ea6-b2ea-9768c2362590",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814754,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So the above code would give us exactly what we’d expect."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So the above code would give us exactly what we’d expect."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814754,
        "id": "633658ac-af84-4616-a89e-7c6679e96bc7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814754,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "9 =\u003e foo\n1 =\u003e 4.2\nbar =\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "9 =\u003e foo\n1 =\u003e 4.2\nbar =\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814754,
        "id": "32d3892a-1a2a-4423-a925-ce1e237039cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814754,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Regular PHP arrays are also dynamically sized for us. They grow and shrink as we push and pop values to and from the array, automatically."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Regular PHP arrays are also dynamically sized for us. They grow and shrink as we push and pop values to and from the array, automatically."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814754,
        "id": "094c4f98-401a-4522-b152-11352fdbe31f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814754,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814754,
        "id": "3983ff5d-3730-4719-9c13-b4b1909a6cff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814754,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, in a traditional array the size is fixed and consists entirely of the same type of value. Also, rather than keys each value is access by its index, which can be deduced by its offset in the array."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, in a traditional array the size is fixed and consists entirely of the same type of value. Also, rather than keys each value is access by its index, which can be deduced by its offset in the array."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814755,
        "id": "53809705-5717-4ed3-824d-887e5edf2024",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814755,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/43ad785b-59f1-42e3-bf45-37f69a7e8963/8ba42c1e66df84b7c19becbec2defb61541b6148.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/43ad785b-59f1-42e3-bf45-37f69a7e8963/8ba42c1e66df84b7c19becbec2defb61541b6148.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2F43ad785b-59f1-42e3-bf45-37f69a7e8963%2F8ba42c1e66df84b7c19becbec2defb61541b6148.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814755,
        "id": "b6d8c0ba-d611-444b-867c-d3ee6271f5cf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814755,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Since we would know the size of a given type and the fixed size of the array an offset is then the "
            ],
            [
              "type size * n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " were "
            ],
            [
              "n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " represents the value’s position in the array. So in the example above "
            ],
            [
              "$arr[0]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " gives us "
            ],
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the first element in the array and "
            ],
            [
              "$arr[1]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " gives us "
            ],
            [
              "2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and so on."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Since we would know the size of a given type and the fixed size of the array an offset is then the "
          },
          {
            "Text": "type size * n",
            "AttrFlags": 2
          },
          {
            "Text": " were "
          },
          {
            "Text": "n",
            "AttrFlags": 2
          },
          {
            "Text": " represents the value’s position in the array. So in the example above "
          },
          {
            "Text": "$arr[0]",
            "AttrFlags": 2
          },
          {
            "Text": " gives us "
          },
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": ", the first element in the array and "
          },
          {
            "Text": "$arr[1]",
            "AttrFlags": 2
          },
          {
            "Text": " gives us "
          },
          {
            "Text": "2",
            "AttrFlags": 2
          },
          {
            "Text": ", and so on."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814755,
        "id": "dbc2fd65-baa5-4f66-b522-807c4261ae9c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814755,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "SplFixedArray, however, doesn’t restrict the type of values. It only restricts the keys to number types. It’s also of a fixed size."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "SplFixedArray, however, doesn’t restrict the type of values. It only restricts the keys to number types. It’s also of a fixed size."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814755,
        "id": "609641e5-73f8-4f5c-8391-7f22d0a51719",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814755,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This makes SplFixedArrays more efficient than normal PHP arrays in one particular way. They are more compact so they require less memory."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This makes SplFixedArrays more efficient than normal PHP arrays in one particular way. They are more compact so they require less memory."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814755,
        "id": "a4fb094d-5d5b-47de-9bcb-a2fe723ce8b7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814755,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Instantiating the array"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Instantiating the array"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814756,
        "id": "6dc0d9c8-b667-4ab9-aa0a-efc6101d7788",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814756,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "SplFixedArray is implemented as an object, but it can be accessed with the same familiar syntax that you access a normal PHP array since they implement the "
            ],
            [
              "ArrayAccess",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface. They also implement "
            ],
            [
              "Countable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Iterator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interfaces so they behave the same way you’d be used to arrays behaving in PHP (i.e. things like "
            ],
            [
              "count($arr)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "foreach($arr as $k =\u003e $v)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " work the same way for SplFixedArray as they do normal arrays in PHP."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "SplFixedArray is implemented as an object, but it can be accessed with the same familiar syntax that you access a normal PHP array since they implement the "
          },
          {
            "Text": "ArrayAccess",
            "AttrFlags": 2
          },
          {
            "Text": " interface. They also implement "
          },
          {
            "Text": "Countable",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Iterator",
            "AttrFlags": 2
          },
          {
            "Text": " interfaces so they behave the same way you’d be used to arrays behaving in PHP (i.e. things like "
          },
          {
            "Text": "count($arr)",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "foreach($arr as $k =\u003e $v)",
            "AttrFlags": 2
          },
          {
            "Text": " work the same way for SplFixedArray as they do normal arrays in PHP."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814756,
        "id": "b5db34ef-f7c7-4c21-a057-365fd78e4601",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814756,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The SplFixedArray constructor takes one argument, which is the size of the array."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The SplFixedArray constructor takes one argument, which is the size of the array."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814756,
        "id": "02b948d4-8cf6-4f23-aae5-e5f3b799e076",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814756,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$arr = new SplFixedArray(4);\n\n$arr[0] = \"foo\";\n$arr[1] = \"bar\";\n$arr[2] = \"baz\";\n\nforeach($arr as $key =\u003e $value) {\n    echo \"$key =\u003e $value\\n\";\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$arr = new SplFixedArray(4);\n\n$arr[0] = \"foo\";\n$arr[1] = \"bar\";\n$arr[2] = \"baz\";\n\nforeach($arr as $key =\u003e $value) {\n    echo \"$key =\u003e $value\\n\";\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814756,
        "id": "d8906c5e-8a88-47c8-ac9c-358b15de1d9c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814756,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This gives you what you would expect."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This gives you what you would expect."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814756,
        "id": "2774b176-ade1-4387-a610-82a5bf6f2ae1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814756,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "0 =\u003e foo\n1 =\u003e bar\n2 =\u003e baz\n3 =\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "0 =\u003e foo\n1 =\u003e bar\n2 =\u003e baz\n3 =\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814756,
        "id": "688bd240-9ac8-45f8-aa5b-20e7f6f5f18d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814756,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This also works as expected."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This also works as expected."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814756,
        "id": "69cbcb33-8be1-4f3d-8af9-5294ba4e7709",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814756,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var_dump(count($arr));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var_dump(count($arr));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814756,
        "id": "e9bf196b-3d5a-4c41-84ec-66c91959ac6c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814756,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Gives us…"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Gives us…"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814757,
        "id": "2094b463-9b41-4b88-8b5b-9ec1c4b958af",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814757,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int(4)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int(4)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814757,
        "id": "956e382a-6fa3-400a-a83e-b5eaf9fb85b3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814757,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Notice in SplFixedArray, unlike a normal PHP Array, the key does depict the order of the element in our array, because it is a "
            ],
            [
              "true index",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " and not just a "
            ],
            [
              "map",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Notice in SplFixedArray, unlike a normal PHP Array, the key does depict the order of the element in our array, because it is a "
          },
          {
            "Text": "true index",
            "AttrFlags": 4
          },
          {
            "Text": " and not just a "
          },
          {
            "Text": "map",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814757,
        "id": "8a69c5fc-29c8-458d-99be-636f5af713b0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814757,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Resizing the array"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Resizing the array"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814757,
        "id": "76ce0632-84b5-4897-a364-f86103bab60f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814757,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Just keep in mind that because the array is of a fixed size, count will always return the same value. So while "
            ],
            [
              "unset($arr[1])",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will result in "
            ],
            [
              "$arr[1] === null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "count($arr)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " still remains "
            ],
            [
              "4",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Just keep in mind that because the array is of a fixed size, count will always return the same value. So while "
          },
          {
            "Text": "unset($arr[1])",
            "AttrFlags": 2
          },
          {
            "Text": " will result in "
          },
          {
            "Text": "$arr[1] === null",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "count($arr)",
            "AttrFlags": 2
          },
          {
            "Text": " still remains "
          },
          {
            "Text": "4",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814757,
        "id": "ab7b8c6b-a247-4446-aba6-46ca8b609cfb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814757,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So to resize the array you will need to call on the "
            ],
            [
              "setSize",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So to resize the array you will need to call on the "
          },
          {
            "Text": "setSize",
            "AttrFlags": 2
          },
          {
            "Text": " method."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814757,
        "id": "f4f306aa-6991-4225-b301-30fbe203badb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814757,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$arr-\u003esetSize(3);\n\nvar_dump(count($arr));\n\nforeach($arr as $key =\u003e $value) {\n    echo \"$key =\u003e $value\\n\";\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$arr-\u003esetSize(3);\n\nvar_dump(count($arr));\n\nforeach($arr as $key =\u003e $value) {\n    echo \"$key =\u003e $value\\n\";\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814758,
        "id": "0299de49-ef21-4667-a3a7-ee80e524217a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814758,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now we get…"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now we get…"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814758,
        "id": "485bf471-4dd8-4fc7-be1e-cd8570294952",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814758,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int(3)\n0 =\u003e foo\n1 =\u003e \n2 =\u003e baz"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int(3)\n0 =\u003e foo\n1 =\u003e \n2 =\u003e baz",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814758,
        "id": "d22649c1-d1e3-4619-ad2b-e2e416002d66",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814758,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Import to SplFixedArray \u0026 Export from SplFixedArray"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Import to SplFixedArray \u0026 Export from SplFixedArray"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814758,
        "id": "f0a209ba-a1fc-49a4-bfea-35392ab64f47",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814758,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can also import/export a normal PHP Array into and out of an SplFixedArray with the "
            ],
            [
              "fromArray",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "toArray",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " methods."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can also import/export a normal PHP Array into and out of an SplFixedArray with the "
          },
          {
            "Text": "fromArray",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "toArray",
            "AttrFlags": 2
          },
          {
            "Text": " methods."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814758,
        "id": "5aec3cff-24ae-4f8f-8a47-57d73f9dc74a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814758,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$array      = [1,2,3,4,5];\n$fixedArray = SplFixedArray::fromArray($array);\n\nforeach($fixedArray as $value) {\n    echo $value, \"\\n\";\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$array      = [1,2,3,4,5];\n$fixedArray = SplFixedArray::fromArray($array);\n\nforeach($fixedArray as $value) {\n    echo $value, \"\\n\";\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814758,
        "id": "70e01cab-d30e-4e74-87a0-2f39995391fc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814758,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "1\n2\n3\n4\n5"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "1\n2\n3\n4\n5",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814758,
        "id": "b09e39d9-620d-4bbd-8e84-a794331de5b0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814758,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Going the other way."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Going the other way."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814758,
        "id": "ad839e04-45f1-43e1-8df2-b67727421c62",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814758,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$fixedArray = new SplFixedArray(5);\n\n$fixedArray[0] = 1;\n$fixedArray[1] = 2;\n$fixedArray[2] = 3;\n$fixedArray[3] = 4;\n$fixedArray[4] = 5;\n\n$array = $fixedArray-\u003etoArray();\n\nforeach($array as $value) {\n    echo $value, \"\\n\";\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$fixedArray = new SplFixedArray(5);\n\n$fixedArray[0] = 1;\n$fixedArray[1] = 2;\n$fixedArray[2] = 3;\n$fixedArray[3] = 4;\n$fixedArray[4] = 5;\n\n$array = $fixedArray-\u003etoArray();\n\nforeach($array as $value) {\n    echo $value, \"\\n\";\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024814758,
        "id": "5639b467-66b7-4e4d-ae27-669c0dbf9fb0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024814758,
        "parent_id": "7a146cb5-6c98-4b62-9ad3-c4e5b2b9d19c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "1\n2\n3\n4\n5"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "1\n2\n3\n4\n5",
        "code_language": "Plain Text"
      }
    ],
    "title": "SplFixedArray",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}