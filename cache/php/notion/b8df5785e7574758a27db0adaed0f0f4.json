{
  "ID": "b8df5785-e757-4758-a27d-b0adaed0f0f4",
  "Root": {
    "alive": true,
    "content": [
      "cb42c41d-106e-4ab3-a343-eb77d8bb3719",
      "9e09f7cc-91e9-499f-9bc0-f9a6b1eb63b3",
      "63fb7ac7-fd75-4a56-a8da-73e9ff802dad",
      "41cced46-ee8a-44e4-a1bd-b65dab096e91"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552022303199,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "b8df5785-e757-4758-a27d-b0adaed0f0f4",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552022303199,
    "parent_id": "78acf98d-751b-413c-b0ef-3d520c041518",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Type Casting"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022303198,
        "id": "cb42c41d-106e-4ab3-a343-eb77d8bb3719",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022303198,
        "parent_id": "b8df5785-e757-4758-a27d-b0adaed0f0f4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "PHP will generally correctly guess the data type you intend to use from the context it’s used in, however sometimes it is useful to manually force a type. This can be accomplished by prefixing the declaration with the name of the required type in parenthesis:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "PHP will generally correctly guess the data type you intend to use from the context it’s used in, however sometimes it is useful to manually force a type. This can be accomplished by prefixing the declaration with the name of the required type in parenthesis:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022303198,
        "id": "9e09f7cc-91e9-499f-9bc0-f9a6b1eb63b3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022303198,
        "parent_id": "b8df5785-e757-4758-a27d-b0adaed0f0f4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$bool = true;\nvar_dump($bool); // bool(true)\n\n$int = (int) true;\nvar_dump($int); // int(1)\n\n$string = (string) true;\nvar_dump($string); // string(1) \"1\"\n$string = (string) false;\nvar_dump($string); // string(0) \"\"\n\n$float = (float) true;\nvar_dump($float); // float(1)\n\n$array = ['x' =\u003e 'y'];\nvar_dump((object) $array); // object(stdClass)#1 (1) { [\"x\"]=\u003e string(1) \"y\" } \n\n$object = new stdClass();\n$object-\u003ex = 'y';\nvar_dump((array) $object); // array(1) { [\"x\"]=\u003e string(1) \"y\" }\n\n$string = \"asdf\";\nvar_dump((unset)$string); // NULL"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$bool = true;\nvar_dump($bool); // bool(true)\n\n$int = (int) true;\nvar_dump($int); // int(1)\n\n$string = (string) true;\nvar_dump($string); // string(1) \"1\"\n$string = (string) false;\nvar_dump($string); // string(0) \"\"\n\n$float = (float) true;\nvar_dump($float); // float(1)\n\n$array = ['x' =\u003e 'y'];\nvar_dump((object) $array); // object(stdClass)#1 (1) { [\"x\"]=\u003e string(1) \"y\" } \n\n$object = new stdClass();\n$object-\u003ex = 'y';\nvar_dump((array) $object); // array(1) { [\"x\"]=\u003e string(1) \"y\" }\n\n$string = \"asdf\";\nvar_dump((unset)$string); // NULL",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022303198,
        "id": "63fb7ac7-fd75-4a56-a8da-73e9ff802dad",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022303198,
        "parent_id": "b8df5785-e757-4758-a27d-b0adaed0f0f4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But be carefull: not all type casts work as one might expect:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But be carefull: not all type casts work as one might expect:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022303198,
        "id": "41cced46-ee8a-44e4-a1bd-b65dab096e91",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022303198,
        "parent_id": "b8df5785-e757-4758-a27d-b0adaed0f0f4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// below 3 statements hold for 32-bits systems (PHP_INT_MAX=2147483647)\n// an integer value bigger than PHP_INT_MAX is automatically converted to float:\nvar_dump(       999888777666 ); // float(999888777666)\n// forcing to (int) gives overflow:\nvar_dump((int)  999888777666 ); // int(-838602302)\n// but in a string it just returns PHP_INT_MAX\nvar_dump((int) \"999888777666\"); // int(2147483647)\n\nvar_dump((bool) []);      // bool(false) (empty array)\nvar_dump((bool) [false]); // bool(true)  (non-empty array)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// below 3 statements hold for 32-bits systems (PHP_INT_MAX=2147483647)\n// an integer value bigger than PHP_INT_MAX is automatically converted to float:\nvar_dump(       999888777666 ); // float(999888777666)\n// forcing to (int) gives overflow:\nvar_dump((int)  999888777666 ); // int(-838602302)\n// but in a string it just returns PHP_INT_MAX\nvar_dump((int) \"999888777666\"); // int(2147483647)\n\nvar_dump((bool) []);      // bool(false) (empty array)\nvar_dump((bool) [false]); // bool(true)  (non-empty array)",
        "code_language": "Plain Text"
      }
    ],
    "title": "Type Casting",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}