{
  "ID": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
  "Root": {
    "alive": true,
    "content": [
      "20bed7c6-54ff-4402-8a39-5da0ff8e4694",
      "e2079832-7878-412f-a0a8-caae7816f6e3",
      "65d9478c-cafd-4e18-94dc-b1647688d64e",
      "395135ad-10f5-4888-addf-2d3b2e8f5ee4",
      "fa04c772-0a67-48fe-b56a-a9125526fd23",
      "cb04b8c6-e322-48e8-b483-3cf78cbcf1ed",
      "12c7f656-4a5f-40e4-907d-3c4efc6e27b4",
      "e79c6c72-c356-4868-a4be-ed80b61a9b9a",
      "2808ff6b-8615-4f7c-a752-c61ac5a116eb",
      "0583fa14-546b-4c88-82b1-f454e99d8fb9",
      "7e96721f-593e-43b0-8083-59ed3b546b0d",
      "7ad5229a-12e2-4319-9b19-8c1e3100fcf0",
      "d1eaa4b9-12cf-4de3-91c3-1697c22aff6e",
      "df03254f-4b0f-4aa2-91cb-d19a314f7924",
      "310c4c9b-3f9e-4b98-932a-d340d19f4d56",
      "0b8efb60-6001-492d-8dfb-1a95226e3d96",
      "c9632425-5352-4e49-ab3d-9b6b96931d95",
      "2687f2bc-ad9b-473a-a1c7-d4edeb04c624",
      "ebbf37fa-4de5-4cf5-8735-d7daa43f1d76",
      "1aa5fe53-c10b-46c9-be52-0c5729ddb98f",
      "f12593ea-cd06-4b87-8410-c06fdc405602",
      "c9a70ec8-396c-4ce7-8f5e-46589169e503",
      "c62ca555-cbaa-4d8a-ab1c-773a3ca90513",
      "1dd173c8-e790-4867-94da-367fe88f7ae8",
      "2ffea8b3-7cf1-476a-89d2-05cc3eaa7621",
      "dd739b57-b3a5-4190-a270-7820be658ea6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552022221221,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552022221221,
    "parent_id": "eb584d64-0967-460c-a9f1-9d66ff8697ea",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Initializing an Array"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221212,
        "id": "20bed7c6-54ff-4402-8a39-5da0ff8e4694",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221212,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An array can be initialized empty:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An array can be initialized empty:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221214,
        "id": "e2079832-7878-412f-a0a8-caae7816f6e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221214,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// An empty array\n$foo = array();\n\n// Shorthand notation available since PHP 5.4\n$foo = [];"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// An empty array\n$foo = array();\n\n// Shorthand notation available since PHP 5.4\n$foo = [];",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221214,
        "id": "65d9478c-cafd-4e18-94dc-b1647688d64e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221214,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An array can be initialized and preset with values:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An array can be initialized and preset with values:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221215,
        "id": "395135ad-10f5-4888-addf-2d3b2e8f5ee4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221215,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Creates a simple array with three strings\n$fruit = array('apples', 'pears', 'oranges');\n\n// Shorthand notation available since PHP 5.4\n$fruit = ['apples', 'pears', 'oranges'];"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Creates a simple array with three strings\n$fruit = array('apples', 'pears', 'oranges');\n\n// Shorthand notation available since PHP 5.4\n$fruit = ['apples', 'pears', 'oranges'];",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221215,
        "id": "fa04c772-0a67-48fe-b56a-a9125526fd23",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221215,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An array can also be initialized with custom indexes "
            ],
            [
              "(also called an associative array)",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An array can also be initialized with custom indexes "
          },
          {
            "Text": "(also called an associative array)",
            "AttrFlags": 4
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221215,
        "id": "cb04b8c6-e322-48e8-b483-3cf78cbcf1ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221215,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// A simple associative array\n$fruit = array(\n   'first'  =\u003e 'apples',\n   'second' =\u003e 'pears', \n   'third'  =\u003e 'oranges'\n);\n\n// Key and value can also be set as follows\n$fruit['first'] = 'apples';\n\n// Shorthand notation available since PHP 5.4\n$fruit = [\n    'first'  =\u003e 'apples', \n    'second' =\u003e 'pears', \n    'third'  =\u003e 'oranges'\n];"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// A simple associative array\n$fruit = array(\n   'first'  =\u003e 'apples',\n   'second' =\u003e 'pears', \n   'third'  =\u003e 'oranges'\n);\n\n// Key and value can also be set as follows\n$fruit['first'] = 'apples';\n\n// Shorthand notation available since PHP 5.4\n$fruit = [\n    'first'  =\u003e 'apples', \n    'second' =\u003e 'pears', \n    'third'  =\u003e 'oranges'\n];",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221215,
        "id": "12c7f656-4a5f-40e4-907d-3c4efc6e27b4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221215,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the variable hasn’t been used before, PHP will create it automatically. While convenient, this might make the code harder to read:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the variable hasn’t been used before, PHP will create it automatically. While convenient, this might make the code harder to read:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221215,
        "id": "e79c6c72-c356-4868-a4be-ed80b61a9b9a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221215,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$foo[] = 1;     // Array( [0] =\u003e 1 )\n$bar[][] = 2;   // Array( [0] =\u003e Array( [0] =\u003e 2 ) )"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$foo[] = 1;     // Array( [0] =\u003e 1 )\n$bar[][] = 2;   // Array( [0] =\u003e Array( [0] =\u003e 2 ) )",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221215,
        "id": "2808ff6b-8615-4f7c-a752-c61ac5a116eb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221215,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The index will usually continue where you left off. PHP will try to use numeric strings as integers:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The index will usually continue where you left off. PHP will try to use numeric strings as integers:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221215,
        "id": "0583fa14-546b-4c88-82b1-f454e99d8fb9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221215,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$foo = [2 =\u003e 'apple', 'melon'];  // Array( [2] =\u003e apple, [3] =\u003e melon )\n$foo = ['2' =\u003e 'apple', 'melon']; // same as above\n$foo = [2 =\u003e 'apple', 'this is index 3 temporarily', '3' =\u003e 'melon']; // same as above! The last entry will overwrite the second!"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$foo = [2 =\u003e 'apple', 'melon'];  // Array( [2] =\u003e apple, [3] =\u003e melon )\n$foo = ['2' =\u003e 'apple', 'melon']; // same as above\n$foo = [2 =\u003e 'apple', 'this is index 3 temporarily', '3' =\u003e 'melon']; // same as above! The last entry will overwrite the second!",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221217,
        "id": "7e96721f-593e-43b0-8083-59ed3b546b0d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221217,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To initialize an array with fixed size you can use "
            ],
            [
              "SplFixedArray",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://secure.php.net/manual/en/class.splfixedarray.php"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To initialize an array with fixed size you can use "
          },
          {
            "Text": "SplFixedArray",
            "AttrFlags": 2,
            "Link": "https://secure.php.net/manual/en/class.splfixedarray.php"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221217,
        "id": "7ad5229a-12e2-4319-9b19-8c1e3100fcf0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221217,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$array = new SplFixedArray(3);\n\n$array[0] = 1;\n$array[1] = 2;\n$array[2] = 3;\n$array[3] = 4; // RuntimeException\n\n// Increase the size of the array to 10\n$array-\u003esetSize(10);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$array = new SplFixedArray(3);\n\n$array[0] = 1;\n$array[1] = 2;\n$array[2] = 3;\n$array[3] = 4; // RuntimeException\n\n// Increase the size of the array to 10\n$array-\u003esetSize(10);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221217,
        "id": "d1eaa4b9-12cf-4de3-91c3-1697c22aff6e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221217,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: An array created using "
            ],
            [
              "SplFixedArray",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has a reduced memory footprint for large sets of data, but the keys must be integers."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: An array created using "
          },
          {
            "Text": "SplFixedArray",
            "AttrFlags": 2
          },
          {
            "Text": " has a reduced memory footprint for large sets of data, but the keys must be integers."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221218,
        "id": "df03254f-4b0f-4aa2-91cb-d19a314f7924",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221218,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To initialize an array with a dynamic size but with "
            ],
            [
              "n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " non empty elements (e.g. a placeholder) you can use a loop as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To initialize an array with a dynamic size but with "
          },
          {
            "Text": "n",
            "AttrFlags": 2
          },
          {
            "Text": " non empty elements (e.g. a placeholder) you can use a loop as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221218,
        "id": "310c4c9b-3f9e-4b98-932a-d340d19f4d56",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221218,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$myArray = array();\n$sizeOfMyArray = 5;\n$fill = 'placeholder';\n\nfor ($i = 0; $i \u003c $sizeOfMyArray; $i++) {\n    $myArray[] = $fill;\n}\n\n// print_r($myArray); results in the following:\n// Array ( [0] =\u003e placeholder [1] =\u003e placeholder [2] =\u003e placeholder [3] =\u003e placeholder [4] =\u003e placeholder )"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$myArray = array();\n$sizeOfMyArray = 5;\n$fill = 'placeholder';\n\nfor ($i = 0; $i \u003c $sizeOfMyArray; $i++) {\n    $myArray[] = $fill;\n}\n\n// print_r($myArray); results in the following:\n// Array ( [0] =\u003e placeholder [1] =\u003e placeholder [2] =\u003e placeholder [3] =\u003e placeholder [4] =\u003e placeholder )",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221218,
        "id": "0b8efb60-6001-492d-8dfb-1a95226e3d96",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221218,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If all your placeholders are the same then you can also create it using the function "
            ],
            [
              "array_fill()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://secure.php.net/manual/en/function.array-fill.php"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If all your placeholders are the same then you can also create it using the function "
          },
          {
            "Text": "array_fill()",
            "AttrFlags": 2,
            "Link": "https://secure.php.net/manual/en/function.array-fill.php"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221218,
        "id": "c9632425-5352-4e49-ab3d-9b6b96931d95",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221218,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "\u003c!– language: lang-none -\u003e array array_fill ( int $start_index , int $num , mixed $value )"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "\u003c!– language: lang-none -\u003e array array_fill ( int $start_index , int $num , mixed $value )"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221219,
        "id": "2687f2bc-ad9b-473a-a1c7-d4edeb04c624",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221219,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This creates and returns an array with "
            ],
            [
              "num",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " entries of "
            ],
            [
              "value",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", keys starting at "
            ],
            [
              "start_index",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This creates and returns an array with "
          },
          {
            "Text": "num",
            "AttrFlags": 2
          },
          {
            "Text": " entries of "
          },
          {
            "Text": "value",
            "AttrFlags": 2
          },
          {
            "Text": ", keys starting at "
          },
          {
            "Text": "start_index",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221219,
        "id": "ebbf37fa-4de5-4cf5-8735-d7daa43f1d76",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221219,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: If the "
            ],
            [
              "start_index",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is negative it will start with the negative index and continue from 0 for the following elements."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: If the "
          },
          {
            "Text": "start_index",
            "AttrFlags": 2
          },
          {
            "Text": " is negative it will start with the negative index and continue from 0 for the following elements."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221219,
        "id": "1aa5fe53-c10b-46c9-be52-0c5729ddb98f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221219,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$a = array_fill(5, 6, 'banana'); // Array ( [5] =\u003e banana, [6] =\u003e banana, ..., [10] =\u003e banana)\n$b = array_fill(-2, 4, 'pear'); // Array ( [-2] =\u003e pear, [0] =\u003e pear, ..., [2] =\u003e pear)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$a = array_fill(5, 6, 'banana'); // Array ( [5] =\u003e banana, [6] =\u003e banana, ..., [10] =\u003e banana)\n$b = array_fill(-2, 4, 'pear'); // Array ( [-2] =\u003e pear, [0] =\u003e pear, ..., [2] =\u003e pear)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221219,
        "id": "f12593ea-cd06-4b87-8410-c06fdc405602",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221219,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Conclusion: With "
            ],
            [
              "array_fill()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://secure.php.net/manual/en/function.array-fill.php"
                ]
              ]
            ],
            [
              " you are more limited for what you can actually do. The loop is more flexible and opens you a wider range of opportunities."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Conclusion: With "
          },
          {
            "Text": "array_fill()",
            "AttrFlags": 2,
            "Link": "https://secure.php.net/manual/en/function.array-fill.php"
          },
          {
            "Text": " you are more limited for what you can actually do. The loop is more flexible and opens you a wider range of opportunities."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221220,
        "id": "c9a70ec8-396c-4ce7-8f5e-46589169e503",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221220,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Whenever you want an array filled with a range of numbers (e.g. 1-4) you could either append every single element to an array or use the "
            ],
            [
              "range()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://secure.php.net/manual/en/function.range.php"
                ]
              ]
            ],
            [
              " function:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Whenever you want an array filled with a range of numbers (e.g. 1-4) you could either append every single element to an array or use the "
          },
          {
            "Text": "range()",
            "AttrFlags": 2,
            "Link": "https://secure.php.net/manual/en/function.range.php"
          },
          {
            "Text": " function:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221220,
        "id": "c62ca555-cbaa-4d8a-ab1c-773a3ca90513",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221220,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "\u003c!– language: lang-none -\u003e array range ( mixed $start , mixed $end [, number $step = 1 ] )"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "\u003c!– language: lang-none -\u003e array range ( mixed $start , mixed $end [, number $step = 1 ] )"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221221,
        "id": "1dd173c8-e790-4867-94da-367fe88f7ae8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221221,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This function creates an array containing a range of elements. The first two parameters are required, where they set the start and end points of the (inclusive) range. The third parameter is optional and defines the size of the steps being taken. Creating a "
            ],
            [
              "range",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " from "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "4",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with a "
            ],
            [
              "stepsize",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " of "
            ],
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the resulting array would consist of the following elements: "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and "
            ],
            [
              "4",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". If the step size is increased to "
            ],
            [
              "2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (i.e. "
            ],
            [
              "range(0, 4, 2)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") then the resulting array would be: "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and "
            ],
            [
              "4",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This function creates an array containing a range of elements. The first two parameters are required, where they set the start and end points of the (inclusive) range. The third parameter is optional and defines the size of the steps being taken. Creating a "
          },
          {
            "Text": "range",
            "AttrFlags": 2
          },
          {
            "Text": " from "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": " to "
          },
          {
            "Text": "4",
            "AttrFlags": 2
          },
          {
            "Text": " with a "
          },
          {
            "Text": "stepsize",
            "AttrFlags": 2
          },
          {
            "Text": " of "
          },
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": ", the resulting array would consist of the following elements: "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "2",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "3",
            "AttrFlags": 2
          },
          {
            "Text": ", and "
          },
          {
            "Text": "4",
            "AttrFlags": 2
          },
          {
            "Text": ". If the step size is increased to "
          },
          {
            "Text": "2",
            "AttrFlags": 2
          },
          {
            "Text": " (i.e. "
          },
          {
            "Text": "range(0, 4, 2)",
            "AttrFlags": 2
          },
          {
            "Text": ") then the resulting array would be: "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "2",
            "AttrFlags": 2
          },
          {
            "Text": ", and "
          },
          {
            "Text": "4",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221221,
        "id": "2ffea8b3-7cf1-476a-89d2-05cc3eaa7621",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221221,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$array = [];\n$array_with_range = range(1, 4);\n\nfor ($i = 1; $i \u003c= 4; $i++) {\n    $array[] = $i;\n}\n    \nprint_r($array); // Array ( [0] =\u003e 1 [1] =\u003e 2 [2] =\u003e 3 [3] =\u003e 4 )\nprint_r($array_with_range); // Array ( [0] =\u003e 1 [1] =\u003e 2 [2] =\u003e 3 [3] =\u003e 4 )"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$array = [];\n$array_with_range = range(1, 4);\n\nfor ($i = 1; $i \u003c= 4; $i++) {\n    $array[] = $i;\n}\n    \nprint_r($array); // Array ( [0] =\u003e 1 [1] =\u003e 2 [2] =\u003e 3 [3] =\u003e 4 )\nprint_r($array_with_range); // Array ( [0] =\u003e 1 [1] =\u003e 2 [2] =\u003e 3 [3] =\u003e 4 )",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022221221,
        "id": "dd739b57-b3a5-4190-a270-7820be658ea6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022221221,
        "parent_id": "d2d6d384-c9cd-473e-815b-40bdc1eaecbd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "range",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can work with integers, floats, booleans (which become casted to integers), and strings. Caution should be taken, however, when using floats as arguments due to the floating point precision problem."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "range",
            "AttrFlags": 2
          },
          {
            "Text": " can work with integers, floats, booleans (which become casted to integers), and strings. Caution should be taken, however, when using floats as arguments due to the floating point precision problem."
          }
        ]
      }
    ],
    "title": "Initializing an Array",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}