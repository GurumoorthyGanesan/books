{
  "ID": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
  "Root": {
    "alive": true,
    "content": [
      "7a45843b-fea2-4192-97fb-dd607271f606",
      "e15da609-b1aa-45ee-9b43-ebc3eafebda5",
      "651893d2-07e9-4887-839f-decd7260bf80",
      "87c07a95-3fc2-4c27-b854-28234cede679",
      "f40c36a1-7011-40af-bab9-1b607d307ac4",
      "5e2f16de-40d8-4953-9bfc-843319fca555",
      "ec640b4c-a443-4918-abd8-53a27fce8ddc",
      "3715c845-ecc4-4b17-b5b1-d5f79d769bef",
      "98f8441f-5f5a-4944-b94b-444c491bc80f",
      "3c6060d2-12e1-4927-ad07-75301e84ab03",
      "200a210f-cf8d-44ac-a4ac-d3b45742bfb3",
      "083f1fe1-1fa0-4011-a62b-66c4f75fd63f",
      "0078c149-3352-441c-8648-095d98594af5",
      "957a6d9e-0de1-45d3-aa7e-ab8497dfecf9",
      "2e4d6e5b-cc4d-4234-a03a-069f87e67190",
      "5ae5e181-f2e9-40a1-8042-b63a93fb48f1",
      "73927d25-b49e-4811-ab80-fb63d964b342",
      "d92cf226-605c-4bdb-a6b3-663e12e5041c",
      "3554a199-2912-42e1-9301-6fad70908ec6",
      "f93a5fef-b55c-4e9b-9e02-bc7c97188c82",
      "7fc5a3f7-d135-4262-844a-da53b59166f2"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552025092124,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552025092124,
    "parent_id": "9272c5f6-725a-4a1d-9d6a-bcf68f821ab7",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Method Chaining in PHP"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092118,
        "id": "7a45843b-fea2-4192-97fb-dd607271f606",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092118,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Method Chaining is a technique explained in "
            ],
            [
              "Martin Fowler’s book ",
              [
                [
                  "a",
                  "https://www.amazon.com/Domain-Specific-Languages-Addison-Wesley-Signature-Fowler/dp/0321712943"
                ]
              ]
            ],
            [
              "Domain Specific Languages",
              [
                [
                  "i"
                ],
                [
                  "a",
                  "https://www.amazon.com/Domain-Specific-Languages-Addison-Wesley-Signature-Fowler/dp/0321712943"
                ]
              ]
            ],
            [
              ". Method Chaining is summarized as"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Method Chaining is a technique explained in "
          },
          {
            "Text": "Martin Fowler’s book ",
            "Link": "https://www.amazon.com/Domain-Specific-Languages-Addison-Wesley-Signature-Fowler/dp/0321712943"
          },
          {
            "Text": "Domain Specific Languages",
            "AttrFlags": 4,
            "Link": "https://www.amazon.com/Domain-Specific-Languages-Addison-Wesley-Signature-Fowler/dp/0321712943"
          },
          {
            "Text": ". Method Chaining is summarized as"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092119,
        "id": "e15da609-b1aa-45ee-9b43-ebc3eafebda5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092119,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Makes modifier methods return the host object, so that multiple modifiers can be invoked in a single expression."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Makes modifier methods return the host object, so that multiple modifiers can be invoked in a single expression."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092119,
        "id": "651893d2-07e9-4887-839f-decd7260bf80",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092119,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consider this non-chaining/regular piece of code (ported to PHP from the aforementioned book)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consider this non-chaining/regular piece of code (ported to PHP from the aforementioned book)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092119,
        "id": "87c07a95-3fc2-4c27-b854-28234cede679",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092119,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$hardDrive = new HardDrive;\n$hardDrive-\u003esetCapacity(150);\n$hardDrive-\u003eexternal();\n$hardDrive-\u003esetSpeed(7200);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$hardDrive = new HardDrive;\n$hardDrive-\u003esetCapacity(150);\n$hardDrive-\u003eexternal();\n$hardDrive-\u003esetSpeed(7200);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092119,
        "id": "f40c36a1-7011-40af-bab9-1b607d307ac4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092119,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Method Chaining would allow you to write the above statements in a more compact way:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Method Chaining would allow you to write the above statements in a more compact way:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092119,
        "id": "5e2f16de-40d8-4953-9bfc-843319fca555",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092119,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$hardDrive = (new HardDrive)\n    -\u003esetCapacity(150)\n    -\u003eexternal()\n    -\u003esetSpeed(7200);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$hardDrive = (new HardDrive)\n    -\u003esetCapacity(150)\n    -\u003eexternal()\n    -\u003esetSpeed(7200);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092119,
        "id": "ec640b4c-a443-4918-abd8-53a27fce8ddc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092119,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All you need to do for this to work is to "
            ],
            [
              "return $this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the methods you want to chain from:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All you need to do for this to work is to "
          },
          {
            "Text": "return $this",
            "AttrFlags": 2
          },
          {
            "Text": " in the methods you want to chain from:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092119,
        "id": "3715c845-ecc4-4b17-b5b1-d5f79d769bef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092119,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class HardDrive {\n    protected $isExternal = false;\n    protected $capacity = 0;\n    protected $speed = 0;\n\n    public function external($isExternal = true) {\n        $this-\u003eisExternal = $isExternal;        \n        return $this; // returns the current class instance to allow method chaining\n    }\n\n    public function setCapacity($capacity) {\n        $this-\u003ecapacity = $capacity;        \n        return $this; // returns the current class instance to allow method chaining\n    }\n\n    public function setSpeed($speed) {\n        $this-\u003espeed = $speed;        \n        return $this; // returns the current class instance to allow method chaining\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class HardDrive {\n    protected $isExternal = false;\n    protected $capacity = 0;\n    protected $speed = 0;\n\n    public function external($isExternal = true) {\n        $this-\u003eisExternal = $isExternal;        \n        return $this; // returns the current class instance to allow method chaining\n    }\n\n    public function setCapacity($capacity) {\n        $this-\u003ecapacity = $capacity;        \n        return $this; // returns the current class instance to allow method chaining\n    }\n\n    public function setSpeed($speed) {\n        $this-\u003espeed = $speed;        \n        return $this; // returns the current class instance to allow method chaining\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092120,
        "id": "98f8441f-5f5a-4944-b94b-444c491bc80f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092120,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092120,
        "id": "3c6060d2-12e1-4927-ad07-75301e84ab03",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092120,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When to use it"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "When to use it"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092121,
        "id": "200a210f-cf8d-44ac-a4ac-d3b45742bfb3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092121,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The primary use cases for utilizing Method Chaining is when building internal Domain Specific Languages. Method Chaining is "
            ],
            [
              "a building block",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " in "
            ],
            [
              "Expression Builders",
              [
                [
                  "a",
                  "http://martinfowler.com/bliki/ExpressionBuilder.html"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Fluent Interfaces",
              [
                [
                  "a",
                  "http://martinfowler.com/bliki/FluentInterface.html"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "It is not synonymous with those, though",
              [
                [
                  "a",
                  "http://stackoverflow.com/a/17940086/208809"
                ]
              ]
            ],
            [
              ". Method Chaining merely enables those. Quoting Fowler:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The primary use cases for utilizing Method Chaining is when building internal Domain Specific Languages. Method Chaining is "
          },
          {
            "Text": "a building block",
            "AttrFlags": 4
          },
          {
            "Text": " in "
          },
          {
            "Text": "Expression Builders",
            "Link": "http://martinfowler.com/bliki/ExpressionBuilder.html"
          },
          {
            "Text": " and "
          },
          {
            "Text": "Fluent Interfaces",
            "Link": "http://martinfowler.com/bliki/FluentInterface.html"
          },
          {
            "Text": ". "
          },
          {
            "Text": "It is not synonymous with those, though",
            "Link": "http://stackoverflow.com/a/17940086/208809"
          },
          {
            "Text": ". Method Chaining merely enables those. Quoting Fowler:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092121,
        "id": "083f1fe1-1fa0-4011-a62b-66c4f75fd63f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092121,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "I’ve also noticed a common misconception - many people seem to equate fluent interfaces with Method Chaining. Certainly chaining is a common technique to use with fluent interfaces, but true fluency is much more than that."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "I’ve also noticed a common misconception - many people seem to equate fluent interfaces with Method Chaining. Certainly chaining is a common technique to use with fluent interfaces, but true fluency is much more than that."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092121,
        "id": "0078c149-3352-441c-8648-095d98594af5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092121,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With that said, using Method Chaining just for the sake of avoiding writing the host object is considered a "
            ],
            [
              "code smell",
              [
                [
                  "a",
                  "http://martinfowler.com/bliki/CodeSmell.html"
                ]
              ]
            ],
            [
              " by many. It makes for unobvious APIs, especially when mixing with non-chaining APIs."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With that said, using Method Chaining just for the sake of avoiding writing the host object is considered a "
          },
          {
            "Text": "code smell",
            "Link": "http://martinfowler.com/bliki/CodeSmell.html"
          },
          {
            "Text": " by many. It makes for unobvious APIs, especially when mixing with non-chaining APIs."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092121,
        "id": "957a6d9e-0de1-45d3-aa7e-ab8497dfecf9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092121,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092122,
        "id": "2e4d6e5b-cc4d-4234-a03a-069f87e67190",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092122,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Additional Notes"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Additional Notes"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092122,
        "id": "5ae5e181-f2e9-40a1-8042-b63a93fb48f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092122,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Command Query Separation"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Command Query Separation"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092122,
        "id": "73927d25-b49e-4811-ab80-fb63d964b342",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092122,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Command Query Separation is a design principle brought forth by Bertrand Meyer",
              [
                [
                  "a",
                  "http://martinfowler.com/bliki/CommandQuerySeparation.html"
                ]
              ]
            ],
            [
              ". It states that methods mutating state ("
            ],
            [
              "commands",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ") should not return anything, whereas methods returning something ("
            ],
            [
              "queries",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ") should not mutate state. This makes it easier to reason about the system. Method Chaining violates this principle because we are mutating state "
            ],
            [
              "and",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " returning something."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Command Query Separation is a design principle brought forth by Bertrand Meyer",
            "Link": "http://martinfowler.com/bliki/CommandQuerySeparation.html"
          },
          {
            "Text": ". It states that methods mutating state ("
          },
          {
            "Text": "commands",
            "AttrFlags": 4
          },
          {
            "Text": ") should not return anything, whereas methods returning something ("
          },
          {
            "Text": "queries",
            "AttrFlags": 4
          },
          {
            "Text": ") should not mutate state. This makes it easier to reason about the system. Method Chaining violates this principle because we are mutating state "
          },
          {
            "Text": "and",
            "AttrFlags": 4
          },
          {
            "Text": " returning something."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092122,
        "id": "d92cf226-605c-4bdb-a6b3-663e12e5041c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092122,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Getters"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Getters"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092123,
        "id": "3554a199-2912-42e1-9301-6fad70908ec6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092123,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When making use of classes which implement method chaining, pay particular attention when calling getter methods (that is, methods which return something other than "
            ],
            [
              "$this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "). Since getters must return a value other than "
            ],
            [
              "$this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", chaining an additional method onto a getter makes the call operate on the "
            ],
            [
              "gotten",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " value, not on the original object. While there are some use cases for chained getters, they may make code less readable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When making use of classes which implement method chaining, pay particular attention when calling getter methods (that is, methods which return something other than "
          },
          {
            "Text": "$this",
            "AttrFlags": 2
          },
          {
            "Text": "). Since getters must return a value other than "
          },
          {
            "Text": "$this",
            "AttrFlags": 2
          },
          {
            "Text": ", chaining an additional method onto a getter makes the call operate on the "
          },
          {
            "Text": "gotten",
            "AttrFlags": 4
          },
          {
            "Text": " value, not on the original object. While there are some use cases for chained getters, they may make code less readable."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092123,
        "id": "f93a5fef-b55c-4e9b-9e02-bc7c97188c82",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092123,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Law of Demeter and impact on testing"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Law of Demeter and impact on testing"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552025092124,
        "id": "7fc5a3f7-d135-4262-844a-da53b59166f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552025092124,
        "parent_id": "055a43c4-9cf3-4691-a357-e4e7e0308e3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Method Chaining as presented above does not violate "
            ],
            [
              "Law of Demeter",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Law_of_Demeter"
                ]
              ]
            ],
            [
              ". Nor does it impact testing. That is because we are returning the host instance and not some collaborator. It’s a common misconception stemming from people confusing mere Method Chaining with "
            ],
            [
              "Fluent Interfaces",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Expression Builders",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". It is only when Method Chaining returns "
            ],
            [
              "other objects than the host object",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " that you violate Law of Demeter and end up with Mock fests in your tests."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Method Chaining as presented above does not violate "
          },
          {
            "Text": "Law of Demeter",
            "Link": "https://en.wikipedia.org/wiki/Law_of_Demeter"
          },
          {
            "Text": ". Nor does it impact testing. That is because we are returning the host instance and not some collaborator. It’s a common misconception stemming from people confusing mere Method Chaining with "
          },
          {
            "Text": "Fluent Interfaces",
            "AttrFlags": 4
          },
          {
            "Text": " and "
          },
          {
            "Text": "Expression Builders",
            "AttrFlags": 4
          },
          {
            "Text": ". It is only when Method Chaining returns "
          },
          {
            "Text": "other objects than the host object",
            "AttrFlags": 4
          },
          {
            "Text": " that you violate Law of Demeter and end up with Mock fests in your tests."
          }
        ]
      }
    ],
    "title": "Method Chaining in PHP",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}