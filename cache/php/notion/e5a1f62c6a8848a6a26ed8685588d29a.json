{
  "ID": "e5a1f62c-6a88-48a6-a26e-d8685588d29a",
  "Root": {
    "alive": true,
    "content": [
      "a4f84041-f0e7-4f94-8c96-b1d0ca1445c8",
      "6d5ff5bb-a06b-46df-88d2-fad6abf7ad94",
      "c28583da-64b3-4a37-82f3-d68bfbeb0397",
      "0d6b2b63-a8bf-40e6-800d-7e092e67321d",
      "0a5e76f6-d5ed-4a83-b2f0-251d0b4ab71f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552022706564,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e5a1f62c-6a88-48a6-a26e-d8685588d29a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552022706564,
    "parent_id": "2a04f54f-cf44-4cd5-bb37-8dc6b9f2f1bd",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using the send-function to pass values to a generator"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022706563,
        "id": "a4f84041-f0e7-4f94-8c96-b1d0ca1445c8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022706563,
        "parent_id": "e5a1f62c-6a88-48a6-a26e-d8685588d29a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Generators are fast coded and in many cases a slim alternative to heavy iterator-implementations. With the fast implementation comes a little lack of control when a generator should stop generating or if it should generate something else. However this can be achieved with the usage of the "
            ],
            [
              "send()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function, enabling the requesting function to send parameters to the generator after every loop."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Generators are fast coded and in many cases a slim alternative to heavy iterator-implementations. With the fast implementation comes a little lack of control when a generator should stop generating or if it should generate something else. However this can be achieved with the usage of the "
          },
          {
            "Text": "send()",
            "AttrFlags": 2
          },
          {
            "Text": " function, enabling the requesting function to send parameters to the generator after every loop."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022706564,
        "id": "6d5ff5bb-a06b-46df-88d2-fad6abf7ad94",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022706564,
        "parent_id": "e5a1f62c-6a88-48a6-a26e-d8685588d29a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//Imagining accessing a large amount of data from a server, here is the generator for this:\nfunction generateDataFromServerDemo()\n{\n    $indexCurrentRun = 0; //In this example in place of data from the server, I just send feedback everytime a loop ran through.\n\n    $timeout = false;\n    while (!$timeout)\n    {\n        $timeout = yield $indexCurrentRun; // Values are passed to caller. The next time the generator is called, it will start at this statement. If send() is used, $timeout will take this value.\n        $indexCurrentRun++;\n    }\n\n    yield 'X of bytes are missing. \u003c/br\u003e';\n}\n\n// Start using the generator\n$generatorDataFromServer = generateDataFromServerDemo ();\nforeach($generatorDataFromServer as $numberOfRuns)\n{\n    if ($numberOfRuns \u003c 10)\n    {\n        echo $numberOfRuns . \"\u003c/br\u003e\";\n    }\n    else\n    {\n        $generatorDataFromServer-\u003esend(true); //sending data to the generator\n        echo $generatorDataFromServer-\u003ecurrent(); //accessing the latest element (hinting how many bytes are still missing.\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//Imagining accessing a large amount of data from a server, here is the generator for this:\nfunction generateDataFromServerDemo()\n{\n    $indexCurrentRun = 0; //In this example in place of data from the server, I just send feedback everytime a loop ran through.\n\n    $timeout = false;\n    while (!$timeout)\n    {\n        $timeout = yield $indexCurrentRun; // Values are passed to caller. The next time the generator is called, it will start at this statement. If send() is used, $timeout will take this value.\n        $indexCurrentRun++;\n    }\n\n    yield 'X of bytes are missing. \u003c/br\u003e';\n}\n\n// Start using the generator\n$generatorDataFromServer = generateDataFromServerDemo ();\nforeach($generatorDataFromServer as $numberOfRuns)\n{\n    if ($numberOfRuns \u003c 10)\n    {\n        echo $numberOfRuns . \"\u003c/br\u003e\";\n    }\n    else\n    {\n        $generatorDataFromServer-\u003esend(true); //sending data to the generator\n        echo $generatorDataFromServer-\u003ecurrent(); //accessing the latest element (hinting how many bytes are still missing.\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022706564,
        "id": "c28583da-64b3-4a37-82f3-d68bfbeb0397",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022706564,
        "parent_id": "e5a1f62c-6a88-48a6-a26e-d8685588d29a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Resulting in this Output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Resulting in this Output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022706564,
        "id": "0d6b2b63-a8bf-40e6-800d-7e092e67321d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022706564,
        "parent_id": "e5a1f62c-6a88-48a6-a26e-d8685588d29a",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/676daee5-ce23-4a19-b787-97e672ec8ded/caa370f99c5f87af148c966a20b333b7129a5111.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/676daee5-ce23-4a19-b787-97e672ec8ded/caa370f99c5f87af148c966a20b333b7129a5111.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2F676daee5-ce23-4a19-b787-97e672ec8ded%2Fcaa370f99c5f87af148c966a20b333b7129a5111.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022706564,
        "id": "0a5e76f6-d5ed-4a83-b2f0-251d0b4ab71f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022706564,
        "parent_id": "e5a1f62c-6a88-48a6-a26e-d8685588d29a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code_language": "Plain Text"
      }
    ],
    "title": "Using the send-function to pass values to a generator",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}