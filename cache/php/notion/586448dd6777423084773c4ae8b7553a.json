{
  "ID": "586448dd-6777-4230-8477-3c4ae8b7553a",
  "Root": {
    "alive": true,
    "content": [
      "2025355d-fbce-4d36-8e9e-8f1d38a07376",
      "7683e038-64c6-4be7-a06a-991c94e43472",
      "4a4af595-dc9c-424f-9b8e-8bb4de1edd1e",
      "ee325677-6be4-4b08-9d66-97c8bb7e5880",
      "1a4f5f53-4fb9-4348-85a7-69c695a2a900",
      "3ef2e195-dfa8-406c-a684-946ca1b4508a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552022705188,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "586448dd-6777-4230-8477-3c4ae8b7553a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552022705188,
    "parent_id": "2a04f54f-cf44-4cd5-bb37-8dc6b9f2f1bd",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Why use a generator"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022705187,
        "id": "2025355d-fbce-4d36-8e9e-8f1d38a07376",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022705187,
        "parent_id": "586448dd-6777-4230-8477-3c4ae8b7553a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Generators are useful when you need to generate a large collection to later iterate over. They’re a simpler alternative to creating a class that implements an "
            ],
            [
              "Iterator",
              [
                [
                  "a",
                  "http://php.net/manual/en/class.iterator.php"
                ]
              ]
            ],
            [
              ", which is often overkill."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Generators are useful when you need to generate a large collection to later iterate over. They’re a simpler alternative to creating a class that implements an "
          },
          {
            "Text": "Iterator",
            "Link": "http://php.net/manual/en/class.iterator.php"
          },
          {
            "Text": ", which is often overkill."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022705187,
        "id": "7683e038-64c6-4be7-a06a-991c94e43472",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022705187,
        "parent_id": "586448dd-6777-4230-8477-3c4ae8b7553a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example, consider the below function."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example, consider the below function."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022705188,
        "id": "4a4af595-dc9c-424f-9b8e-8bb4de1edd1e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022705188,
        "parent_id": "586448dd-6777-4230-8477-3c4ae8b7553a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function randomNumbers(int $length)\n{\n    $array = [];\n    \n    for ($i = 0; $i \u003c $length; $i++) {\n        $array[] = mt_rand(1, 10);\n    }\n    \n    return $array;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function randomNumbers(int $length)\n{\n    $array = [];\n    \n    for ($i = 0; $i \u003c $length; $i++) {\n        $array[] = mt_rand(1, 10);\n    }\n    \n    return $array;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022705188,
        "id": "ee325677-6be4-4b08-9d66-97c8bb7e5880",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022705188,
        "parent_id": "586448dd-6777-4230-8477-3c4ae8b7553a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All this function does is generates an array that’s filled with random numbers. To use it, we might do "
            ],
            [
              "randomNumbers(10)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which will give us an array of 10 random numbers. What if we want to generate one million random numbers? "
            ],
            [
              "randomNumbers(1000000)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will do that for us, but at a cost of memory. One million integers stored in an array uses approximately "
            ],
            [
              "33 megabytes",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " of memory."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All this function does is generates an array that’s filled with random numbers. To use it, we might do "
          },
          {
            "Text": "randomNumbers(10)",
            "AttrFlags": 2
          },
          {
            "Text": ", which will give us an array of 10 random numbers. What if we want to generate one million random numbers? "
          },
          {
            "Text": "randomNumbers(1000000)",
            "AttrFlags": 2
          },
          {
            "Text": " will do that for us, but at a cost of memory. One million integers stored in an array uses approximately "
          },
          {
            "Text": "33 megabytes",
            "AttrFlags": 1
          },
          {
            "Text": " of memory."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022705188,
        "id": "1a4f5f53-4fb9-4348-85a7-69c695a2a900",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022705188,
        "parent_id": "586448dd-6777-4230-8477-3c4ae8b7553a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$startMemory = memory_get_usage();\n\n$randomNumbers = randomNumbers(1000000);\n\necho memory_get_usage() - $startMemory, ' bytes';"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$startMemory = memory_get_usage();\n\n$randomNumbers = randomNumbers(1000000);\n\necho memory_get_usage() - $startMemory, ' bytes';",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022705188,
        "id": "3ef2e195-dfa8-406c-a684-946ca1b4508a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022705188,
        "parent_id": "586448dd-6777-4230-8477-3c4ae8b7553a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is due to the entire one million random numbers being generated and returned at once, rather than one at a time. Generators are an easy way to solve this issue."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is due to the entire one million random numbers being generated and returned at once, rather than one at a time. Generators are an easy way to solve this issue."
          }
        ]
      }
    ],
    "title": "Why use a generator",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}