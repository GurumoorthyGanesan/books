{
  "ID": "f09dfbd5-1304-440b-9348-189eae189376",
  "Root": {
    "alive": true,
    "content": [
      "bf83173e-2cff-483e-b16c-90a7f04481eb",
      "4f88cc4b-9f38-44c8-a4e9-dc74572ad737",
      "221ad98e-c350-4508-a85e-d5ae3a0ba6c2",
      "c0646b07-0369-4e45-a0a1-3fbef6b50467",
      "5047199b-c36b-475c-b79e-e66c0a6e7602",
      "808c4740-714a-4734-aff9-3fd207a20dc5",
      "1ca6b11e-f4bc-4d90-9fd4-d32298b12000",
      "c7545da3-132c-4cfd-823a-6ca22fb4bc17",
      "4558043d-b98f-489c-9a08-96ea5ba479bc",
      "d5ae20d2-1300-4927-9867-ffcfb4d739b7",
      "d6bab203-2d12-42a5-9175-44839a3d68a4",
      "8193ac46-8a4b-4e2b-9a2d-2b0cb409e829",
      "8f9b1942-aa75-4b43-9b5f-0b8f6444e580",
      "aef215ea-1840-4aeb-a6db-358194176fd6",
      "5c5f3cb5-bdae-4bdd-b860-c42bd2f0c14c",
      "b127bc3f-6ca0-404d-b821-54f7c4a1ad23",
      "92f9e114-dc62-41a4-b43f-0125457cc6a2",
      "b7027d80-ce99-4d30-8d84-37ea5cfbfe45",
      "6bfff11f-534a-44da-8ab1-8615876029f7",
      "c57f93c7-1008-4bf3-a2f8-f07494bc44f7",
      "a12a3205-0cdc-48ea-a94a-7b1c6a762c1e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552022361198,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "f09dfbd5-1304-440b-9348-189eae189376",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552022361198,
    "parent_id": "caabd093-67a6-454d-8e67-b40f2303905b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Method Chaining in PHP"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361193,
        "id": "bf83173e-2cff-483e-b16c-90a7f04481eb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361193,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Method Chaining is a technique explained in "
            ],
            [
              "Martin Fowler’s book ",
              [
                [
                  "a",
                  "https://www.amazon.com/Domain-Specific-Languages-Addison-Wesley-Signature-Fowler/dp/0321712943"
                ]
              ]
            ],
            [
              "Domain Specific Languages",
              [
                [
                  "i"
                ],
                [
                  "a",
                  "https://www.amazon.com/Domain-Specific-Languages-Addison-Wesley-Signature-Fowler/dp/0321712943"
                ]
              ]
            ],
            [
              ". Method Chaining is summarized as"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Method Chaining is a technique explained in "
          },
          {
            "Text": "Martin Fowler’s book ",
            "Link": "https://www.amazon.com/Domain-Specific-Languages-Addison-Wesley-Signature-Fowler/dp/0321712943"
          },
          {
            "Text": "Domain Specific Languages",
            "AttrFlags": 4,
            "Link": "https://www.amazon.com/Domain-Specific-Languages-Addison-Wesley-Signature-Fowler/dp/0321712943"
          },
          {
            "Text": ". Method Chaining is summarized as"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361193,
        "id": "4f88cc4b-9f38-44c8-a4e9-dc74572ad737",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361193,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Makes modifier methods return the host object, so that multiple modifiers can be invoked in a single expression."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Makes modifier methods return the host object, so that multiple modifiers can be invoked in a single expression."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361193,
        "id": "221ad98e-c350-4508-a85e-d5ae3a0ba6c2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361193,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consider this non-chaining/regular piece of code (ported to PHP from the aforementioned book)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consider this non-chaining/regular piece of code (ported to PHP from the aforementioned book)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361193,
        "id": "c0646b07-0369-4e45-a0a1-3fbef6b50467",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361193,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$hardDrive = new HardDrive;\n$hardDrive-\u003esetCapacity(150);\n$hardDrive-\u003eexternal();\n$hardDrive-\u003esetSpeed(7200);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$hardDrive = new HardDrive;\n$hardDrive-\u003esetCapacity(150);\n$hardDrive-\u003eexternal();\n$hardDrive-\u003esetSpeed(7200);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361194,
        "id": "5047199b-c36b-475c-b79e-e66c0a6e7602",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361194,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Method Chaining would allow you to write the above statements in a more compact way:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Method Chaining would allow you to write the above statements in a more compact way:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361194,
        "id": "808c4740-714a-4734-aff9-3fd207a20dc5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361194,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$hardDrive = (new HardDrive)\n    -\u003esetCapacity(150)\n    -\u003eexternal()\n    -\u003esetSpeed(7200);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$hardDrive = (new HardDrive)\n    -\u003esetCapacity(150)\n    -\u003eexternal()\n    -\u003esetSpeed(7200);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361194,
        "id": "1ca6b11e-f4bc-4d90-9fd4-d32298b12000",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361194,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All you need to do for this to work is to "
            ],
            [
              "return $this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the methods you want to chain from:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All you need to do for this to work is to "
          },
          {
            "Text": "return $this",
            "AttrFlags": 2
          },
          {
            "Text": " in the methods you want to chain from:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361194,
        "id": "c7545da3-132c-4cfd-823a-6ca22fb4bc17",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361194,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class HardDrive {\n    protected $isExternal = false;\n    protected $capacity = 0;\n    protected $speed = 0;\n\n    public function external($isExternal = true) {\n        $this-\u003eisExternal = $isExternal;        \n        return $this; // returns the current class instance to allow method chaining\n    }\n\n    public function setCapacity($capacity) {\n        $this-\u003ecapacity = $capacity;        \n        return $this; // returns the current class instance to allow method chaining\n    }\n\n    public function setSpeed($speed) {\n        $this-\u003espeed = $speed;        \n        return $this; // returns the current class instance to allow method chaining\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class HardDrive {\n    protected $isExternal = false;\n    protected $capacity = 0;\n    protected $speed = 0;\n\n    public function external($isExternal = true) {\n        $this-\u003eisExternal = $isExternal;        \n        return $this; // returns the current class instance to allow method chaining\n    }\n\n    public function setCapacity($capacity) {\n        $this-\u003ecapacity = $capacity;        \n        return $this; // returns the current class instance to allow method chaining\n    }\n\n    public function setSpeed($speed) {\n        $this-\u003espeed = $speed;        \n        return $this; // returns the current class instance to allow method chaining\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361194,
        "id": "4558043d-b98f-489c-9a08-96ea5ba479bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361194,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361194,
        "id": "d5ae20d2-1300-4927-9867-ffcfb4d739b7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361194,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When to use it"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "When to use it"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361195,
        "id": "d6bab203-2d12-42a5-9175-44839a3d68a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361195,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The primary use cases for utilizing Method Chaining is when building internal Domain Specific Languages. Method Chaining is "
            ],
            [
              "a building block",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " in "
            ],
            [
              "Expression Builders",
              [
                [
                  "a",
                  "http://martinfowler.com/bliki/ExpressionBuilder.html"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Fluent Interfaces",
              [
                [
                  "a",
                  "http://martinfowler.com/bliki/FluentInterface.html"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "It is not synonymous with those, though",
              [
                [
                  "a",
                  "http://stackoverflow.com/a/17940086/208809"
                ]
              ]
            ],
            [
              ". Method Chaining merely enables those. Quoting Fowler:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The primary use cases for utilizing Method Chaining is when building internal Domain Specific Languages. Method Chaining is "
          },
          {
            "Text": "a building block",
            "AttrFlags": 4
          },
          {
            "Text": " in "
          },
          {
            "Text": "Expression Builders",
            "Link": "http://martinfowler.com/bliki/ExpressionBuilder.html"
          },
          {
            "Text": " and "
          },
          {
            "Text": "Fluent Interfaces",
            "Link": "http://martinfowler.com/bliki/FluentInterface.html"
          },
          {
            "Text": ". "
          },
          {
            "Text": "It is not synonymous with those, though",
            "Link": "http://stackoverflow.com/a/17940086/208809"
          },
          {
            "Text": ". Method Chaining merely enables those. Quoting Fowler:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361195,
        "id": "8193ac46-8a4b-4e2b-9a2d-2b0cb409e829",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361195,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "I’ve also noticed a common misconception - many people seem to equate fluent interfaces with Method Chaining. Certainly chaining is a common technique to use with fluent interfaces, but true fluency is much more than that."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "I’ve also noticed a common misconception - many people seem to equate fluent interfaces with Method Chaining. Certainly chaining is a common technique to use with fluent interfaces, but true fluency is much more than that."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361196,
        "id": "8f9b1942-aa75-4b43-9b5f-0b8f6444e580",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361196,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With that said, using Method Chaining just for the sake of avoiding writing the host object is considered a "
            ],
            [
              "code smell",
              [
                [
                  "a",
                  "http://martinfowler.com/bliki/CodeSmell.html"
                ]
              ]
            ],
            [
              " by many. It makes for unobvious APIs, especially when mixing with non-chaining APIs."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With that said, using Method Chaining just for the sake of avoiding writing the host object is considered a "
          },
          {
            "Text": "code smell",
            "Link": "http://martinfowler.com/bliki/CodeSmell.html"
          },
          {
            "Text": " by many. It makes for unobvious APIs, especially when mixing with non-chaining APIs."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361196,
        "id": "aef215ea-1840-4aeb-a6db-358194176fd6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361196,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361196,
        "id": "5c5f3cb5-bdae-4bdd-b860-c42bd2f0c14c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361196,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Additional Notes"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Additional Notes"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361196,
        "id": "b127bc3f-6ca0-404d-b821-54f7c4a1ad23",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361196,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Command Query Separation"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Command Query Separation"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361197,
        "id": "92f9e114-dc62-41a4-b43f-0125457cc6a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361197,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Command Query Separation is a design principle brought forth by Bertrand Meyer",
              [
                [
                  "a",
                  "http://martinfowler.com/bliki/CommandQuerySeparation.html"
                ]
              ]
            ],
            [
              ". It states that methods mutating state ("
            ],
            [
              "commands",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ") should not return anything, whereas methods returning something ("
            ],
            [
              "queries",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ") should not mutate state. This makes it easier to reason about the system. Method Chaining violates this principle because we are mutating state "
            ],
            [
              "and",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " returning something."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Command Query Separation is a design principle brought forth by Bertrand Meyer",
            "Link": "http://martinfowler.com/bliki/CommandQuerySeparation.html"
          },
          {
            "Text": ". It states that methods mutating state ("
          },
          {
            "Text": "commands",
            "AttrFlags": 4
          },
          {
            "Text": ") should not return anything, whereas methods returning something ("
          },
          {
            "Text": "queries",
            "AttrFlags": 4
          },
          {
            "Text": ") should not mutate state. This makes it easier to reason about the system. Method Chaining violates this principle because we are mutating state "
          },
          {
            "Text": "and",
            "AttrFlags": 4
          },
          {
            "Text": " returning something."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361197,
        "id": "b7027d80-ce99-4d30-8d84-37ea5cfbfe45",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361197,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Getters"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Getters"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361197,
        "id": "6bfff11f-534a-44da-8ab1-8615876029f7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361197,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When making use of classes which implement method chaining, pay particular attention when calling getter methods (that is, methods which return something other than "
            ],
            [
              "$this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "). Since getters must return a value other than "
            ],
            [
              "$this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", chaining an additional method onto a getter makes the call operate on the "
            ],
            [
              "gotten",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " value, not on the original object. While there are some use cases for chained getters, they may make code less readable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When making use of classes which implement method chaining, pay particular attention when calling getter methods (that is, methods which return something other than "
          },
          {
            "Text": "$this",
            "AttrFlags": 2
          },
          {
            "Text": "). Since getters must return a value other than "
          },
          {
            "Text": "$this",
            "AttrFlags": 2
          },
          {
            "Text": ", chaining an additional method onto a getter makes the call operate on the "
          },
          {
            "Text": "gotten",
            "AttrFlags": 4
          },
          {
            "Text": " value, not on the original object. While there are some use cases for chained getters, they may make code less readable."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361197,
        "id": "c57f93c7-1008-4bf3-a2f8-f07494bc44f7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361197,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Law of Demeter and impact on testing"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Law of Demeter and impact on testing"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022361198,
        "id": "a12a3205-0cdc-48ea-a94a-7b1c6a762c1e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022361198,
        "parent_id": "f09dfbd5-1304-440b-9348-189eae189376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Method Chaining as presented above does not violate "
            ],
            [
              "Law of Demeter",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Law_of_Demeter"
                ]
              ]
            ],
            [
              ". Nor does it impact testing. That is because we are returning the host instance and not some collaborator. It’s a common misconception stemming from people confusing mere Method Chaining with "
            ],
            [
              "Fluent Interfaces",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Expression Builders",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". It is only when Method Chaining returns "
            ],
            [
              "other objects than the host object",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " that you violate Law of Demeter and end up with Mock fests in your tests."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Method Chaining as presented above does not violate "
          },
          {
            "Text": "Law of Demeter",
            "Link": "https://en.wikipedia.org/wiki/Law_of_Demeter"
          },
          {
            "Text": ". Nor does it impact testing. That is because we are returning the host instance and not some collaborator. It’s a common misconception stemming from people confusing mere Method Chaining with "
          },
          {
            "Text": "Fluent Interfaces",
            "AttrFlags": 4
          },
          {
            "Text": " and "
          },
          {
            "Text": "Expression Builders",
            "AttrFlags": 4
          },
          {
            "Text": ". It is only when Method Chaining returns "
          },
          {
            "Text": "other objects than the host object",
            "AttrFlags": 4
          },
          {
            "Text": " that you violate Law of Demeter and end up with Mock fests in your tests."
          }
        ]
      }
    ],
    "title": "Method Chaining in PHP",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}