{
  "ID": "71bc0573-65a0-407c-a747-12834d62e624",
  "Root": {
    "alive": true,
    "content": [
      "5e712cc0-3dfe-4666-b5dc-1829a8059a92",
      "0549351e-9498-4238-b151-5869b6db0082",
      "4beca543-881b-4e37-8c7c-9a47099f9cba",
      "560b55f9-8a14-4340-9737-4a601534a13b",
      "d8b3ec7a-08fd-4f84-8fab-fc8604f53f66",
      "bf21b5c8-611d-4fc1-944e-9cdf93573457",
      "4403646b-64fd-417d-a76d-ef59dfb71ad6",
      "ab4e3acd-ab6d-45b2-a708-5fa02bcfb0a6",
      "78e12779-563f-41a0-922f-4da6dbe844bb",
      "55b74721-cec5-4dd0-8c6c-0aa13a7bb227",
      "5f690b15-901a-4d22-8e6c-a28231397b99",
      "bb14f00c-1b7b-4f2e-a7aa-eab7f409985b",
      "2bfa7305-451d-47eb-84f4-5f7433ceb31f",
      "92df3728-d559-4a8a-b038-67f6e525e172",
      "e0f219ce-fad7-4a0a-b5fa-9b6fab46816a",
      "b6548048-cd31-46f9-9c8b-fed34e047306",
      "19d9d117-2d8c-4415-a4c7-606135cdf5c4",
      "65036f69-2c37-46f8-9649-1850875f1e6c",
      "2c4d0ccd-a583-4ee1-a20e-38ba9e0b0947",
      "677458e2-34c7-43bb-96be-0ee862ad574e",
      "8cff549d-db8c-43cd-b1a3-7723cfe747a0",
      "63dcbefe-d554-47bc-afb0-82aed65daa49",
      "8e6e5091-647a-48a2-abad-bdd313ca00fa",
      "5338f988-e30a-4607-a833-a08ff5519a67",
      "5c697ac3-9da6-4f52-a341-4f41411c4aab",
      "bc622e74-00a2-49b8-a135-aa8214234ad8",
      "043cfd66-7427-4934-8c10-bb58a96a1ba3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552024474180,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "71bc0573-65a0-407c-a747-12834d62e624",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552024474180,
    "parent_id": "e4e32393-007a-4cd6-b1f8-27b0cb8545c5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Classification using PHP-ML"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474173,
        "id": "5e712cc0-3dfe-4666-b5dc-1829a8059a92",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474173,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Classification in Machine Learning is the problem that identifies to which set of categories does a new observation belong. Classification falls under the category of "
            ],
            [
              "Supervised Machine Learning",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Classification in Machine Learning is the problem that identifies to which set of categories does a new observation belong. Classification falls under the category of "
          },
          {
            "Text": "Supervised Machine Learning",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474174,
        "id": "0549351e-9498-4238-b151-5869b6db0082",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474174,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Any algorithm that implements classification is known as classifier"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Any algorithm that implements classification is known as classifier"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474174,
        "id": "4beca543-881b-4e37-8c7c-9a47099f9cba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474174,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The classifiers supported in PHP-ML are"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The classifiers supported in PHP-ML are"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474174,
        "id": "560b55f9-8a14-4340-9737-4a601534a13b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474174,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "SVC (Support Vector Classification)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "SVC (Support Vector Classification)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474174,
        "id": "d8b3ec7a-08fd-4f84-8fab-fc8604f53f66",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474174,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "k-Nearest Neighbors"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "k-Nearest Neighbors"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474175,
        "id": "bf21b5c8-611d-4fc1-944e-9cdf93573457",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474175,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Naive Bayes"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Naive Bayes"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474175,
        "id": "4403646b-64fd-417d-a76d-ef59dfb71ad6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474175,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "train",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "predict",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method are same for all classifiers. The only difference would be in the underlying algorithm used."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "train",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "predict",
            "AttrFlags": 2
          },
          {
            "Text": " method are same for all classifiers. The only difference would be in the underlying algorithm used."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474175,
        "id": "ab4e3acd-ab6d-45b2-a708-5fa02bcfb0a6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474175,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "SVC (Support Vector Classification)"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "SVC (Support Vector Classification)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474175,
        "id": "78e12779-563f-41a0-922f-4da6dbe844bb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474175,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Before we can start with predicting a new observation, we need to train our classifier. Consider the following code"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Before we can start with predicting a new observation, we need to train our classifier. Consider the following code"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474175,
        "id": "55b74721-cec5-4dd0-8c6c-0aa13a7bb227",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474175,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Import library\nuse Phpml\\Classification\\SVC;\nuse Phpml\\SupportVectorMachine\\Kernel;\n\n// Data for training classifier\n$samples = [[1, 3], [1, 4], [2, 4], [3, 1], [4, 1], [4, 2]];  // Training samples\n$labels = ['a', 'a', 'a', 'b', 'b', 'b'];\n\n// Initialize the classifier\n$classifier = new SVC(Kernel::LINEAR, $cost = 1000);\n// Train the classifier\n$classifier-\u003etrain($samples, $labels);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Import library\nuse Phpml\\Classification\\SVC;\nuse Phpml\\SupportVectorMachine\\Kernel;\n\n// Data for training classifier\n$samples = [[1, 3], [1, 4], [2, 4], [3, 1], [4, 1], [4, 2]];  // Training samples\n$labels = ['a', 'a', 'a', 'b', 'b', 'b'];\n\n// Initialize the classifier\n$classifier = new SVC(Kernel::LINEAR, $cost = 1000);\n// Train the classifier\n$classifier-\u003etrain($samples, $labels);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474175,
        "id": "5f690b15-901a-4d22-8e6c-a28231397b99",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474175,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The code is pretty straight forward. "
            ],
            [
              "$cost",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " used above is a measure of how much we want to avoid misclassifying each training example. For a smaller value of "
            ],
            [
              "$cost",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " you might get misclassified examples. By default it is set to "
            ],
            [
              "1.0",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The code is pretty straight forward. "
          },
          {
            "Text": "$cost",
            "AttrFlags": 2
          },
          {
            "Text": " used above is a measure of how much we want to avoid misclassifying each training example. For a smaller value of "
          },
          {
            "Text": "$cost",
            "AttrFlags": 2
          },
          {
            "Text": " you might get misclassified examples. By default it is set to "
          },
          {
            "Text": "1.0",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474176,
        "id": "bb14f00c-1b7b-4f2e-a7aa-eab7f409985b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474176,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now that we have the classifier trained we can start making some actual predictions. Consider the following codes that we have for predictions"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now that we have the classifier trained we can start making some actual predictions. Consider the following codes that we have for predictions"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474176,
        "id": "2bfa7305-451d-47eb-84f4-5f7433ceb31f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474176,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$classifier-\u003epredict([3, 2]); // return 'b'\n$classifier-\u003epredict([[3, 2], [1, 5]]); // return ['b', 'a']"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$classifier-\u003epredict([3, 2]); // return 'b'\n$classifier-\u003epredict([[3, 2], [1, 5]]); // return ['b', 'a']",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474176,
        "id": "92df3728-d559-4a8a-b038-67f6e525e172",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474176,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The classifier in the case above can take unclassified samples and predicts there labels. "
            ],
            [
              "predict",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method can take a single sample as well as an array of samples."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The classifier in the case above can take unclassified samples and predicts there labels. "
          },
          {
            "Text": "predict",
            "AttrFlags": 2
          },
          {
            "Text": " method can take a single sample as well as an array of samples."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474176,
        "id": "e0f219ce-fad7-4a0a-b5fa-9b6fab46816a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474176,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "k-Nearest Neighbors"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "k-Nearest Neighbors"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474176,
        "id": "b6548048-cd31-46f9-9c8b-fed34e047306",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474176,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The classfier for this algorithm takes in two parameters and can be initialized like"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The classfier for this algorithm takes in two parameters and can be initialized like"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474176,
        "id": "19d9d117-2d8c-4415-a4c7-606135cdf5c4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474176,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$classifier = new KNearestNeighbors($neighbor_num=4);\n$classifier = new KNearestNeighbors($neighbor_num=3, new Minkowski($lambda=4));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$classifier = new KNearestNeighbors($neighbor_num=4);\n$classifier = new KNearestNeighbors($neighbor_num=3, new Minkowski($lambda=4));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474178,
        "id": "65036f69-2c37-46f8-9649-1850875f1e6c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474178,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$neighbor_num",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the number of nearest neighbours to scan in "
            ],
            [
              "knn",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm"
                ]
              ]
            ],
            [
              " algorithm while the second parameter is distance metric which by default in first case would be "
            ],
            [
              "Euclidean",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". More on Minkowski can be found "
            ],
            [
              "here",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Minkowski_distance"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "$neighbor_num",
            "AttrFlags": 2
          },
          {
            "Text": " is the number of nearest neighbours to scan in "
          },
          {
            "Text": "knn",
            "Link": "https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm"
          },
          {
            "Text": " algorithm while the second parameter is distance metric which by default in first case would be "
          },
          {
            "Text": "Euclidean",
            "AttrFlags": 2
          },
          {
            "Text": ". More on Minkowski can be found "
          },
          {
            "Text": "here",
            "Link": "https://en.wikipedia.org/wiki/Minkowski_distance"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474179,
        "id": "2c4d0ccd-a583-4ee1-a20e-38ba9e0b0947",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474179,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Following is a short example on how to use this classifier"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Following is a short example on how to use this classifier"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474179,
        "id": "677458e2-34c7-43bb-96be-0ee862ad574e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474179,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Training data\n$samples = [[1, 3], [1, 4], [2, 4], [3, 1], [4, 1], [4, 2]];\n$labels = ['a', 'a', 'a', 'b', 'b', 'b'];\n\n// Initialize classifier\n$classifier = new KNearestNeighbors();\n// Train classifier\n$classifier-\u003etrain($samples, $labels);\n\n// Make predictions\n$classifier-\u003epredict([3, 2]); // return 'b'\n$classifier-\u003epredict([[3, 2], [1, 5]]); // return ['b', 'a']"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Training data\n$samples = [[1, 3], [1, 4], [2, 4], [3, 1], [4, 1], [4, 2]];\n$labels = ['a', 'a', 'a', 'b', 'b', 'b'];\n\n// Initialize classifier\n$classifier = new KNearestNeighbors();\n// Train classifier\n$classifier-\u003etrain($samples, $labels);\n\n// Make predictions\n$classifier-\u003epredict([3, 2]); // return 'b'\n$classifier-\u003epredict([[3, 2], [1, 5]]); // return ['b', 'a']",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474179,
        "id": "8cff549d-db8c-43cd-b1a3-7723cfe747a0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474179,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "NaiveBayes Classifier"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "NaiveBayes Classifier"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474179,
        "id": "63dcbefe-d554-47bc-afb0-82aed65daa49",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474179,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "NaiveBayes Classifier",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is based on "
            ],
            [
              "Bayes' theorem",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and does not need any parameters in constructor."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "NaiveBayes Classifier",
            "AttrFlags": 2
          },
          {
            "Text": " is based on "
          },
          {
            "Text": "Bayes' theorem",
            "AttrFlags": 2
          },
          {
            "Text": " and does not need any parameters in constructor."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474179,
        "id": "8e6e5091-647a-48a2-abad-bdd313ca00fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474179,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following code demonstrates a simple prediction implementation"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following code demonstrates a simple prediction implementation"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474179,
        "id": "5338f988-e30a-4607-a833-a08ff5519a67",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474179,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Training data\n$samples = [[5, 1, 1], [1, 5, 1], [1, 1, 5]];\n$labels = ['a', 'b', 'c'];\n\n// Initialize classifier\n$classifier = new NaiveBayes();\n// Train classifier\n$classifier-\u003etrain($samples, $labels);\n\n// Make predictions\n$classifier-\u003epredict([3, 1, 1]); // return 'a'\n$classifier-\u003epredict([[3, 1, 1], [1, 4, 1]); // return ['a', 'b']"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Training data\n$samples = [[5, 1, 1], [1, 5, 1], [1, 1, 5]];\n$labels = ['a', 'b', 'c'];\n\n// Initialize classifier\n$classifier = new NaiveBayes();\n// Train classifier\n$classifier-\u003etrain($samples, $labels);\n\n// Make predictions\n$classifier-\u003epredict([3, 1, 1]); // return 'a'\n$classifier-\u003epredict([[3, 1, 1], [1, 4, 1]); // return ['a', 'b']",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474179,
        "id": "5c697ac3-9da6-4f52-a341-4f41411c4aab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474179,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Practical case"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Practical case"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474179,
        "id": "bc622e74-00a2-49b8-a135-aa8214234ad8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474179,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Till now we only used arrays of integer in all our case but that is not the case in real life. Therefore let me try to describe a practical situation on how to use classifiers."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Till now we only used arrays of integer in all our case but that is not the case in real life. Therefore let me try to describe a practical situation on how to use classifiers."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024474179,
        "id": "043cfd66-7427-4934-8c10-bb58a96a1ba3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024474179,
        "parent_id": "71bc0573-65a0-407c-a747-12834d62e624",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Suppose you have an application that stores characteristics of flowers in nature. For the sake of simplicity we can consider the color and length of petals. So there two characteristics would be used to train our data. color is the simpler one where you can assign an int value to each of them and for length, you can have a range like (0 mm,10 mm)=1 , (10 mm,20 mm)=2. With the initial data train your classifier. Now one of your user needs identify the kind of flower that grows in his backyard. What he does is select the color of the flower and adds the length of the petals. You classifier running can detect the type of flower (“Labels in example above”)"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Suppose you have an application that stores characteristics of flowers in nature. For the sake of simplicity we can consider the color and length of petals. So there two characteristics would be used to train our data. color is the simpler one where you can assign an int value to each of them and for length, you can have a range like (0 mm,10 mm)=1 , (10 mm,20 mm)=2. With the initial data train your classifier. Now one of your user needs identify the kind of flower that grows in his backyard. What he does is select the color of the flower and adds the length of the petals. You classifier running can detect the type of flower (“Labels in example above”)"
          }
        ]
      }
    ],
    "title": "Classification using PHP-ML",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}