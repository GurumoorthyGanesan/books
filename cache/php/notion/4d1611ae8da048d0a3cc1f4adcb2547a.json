{
  "ID": "4d1611ae-8da0-48d0-a3cc-1f4adcb2547a",
  "Root": {
    "alive": true,
    "content": [
      "59648110-da8b-4c1b-8dcb-430156c07f9e",
      "fd3dfa60-660f-4006-b136-59581c2d6be2",
      "cf580f78-82b9-448d-9672-034e79a8ae7f",
      "30a2fd00-bf6f-4e8f-9fea-3ee855f532cf",
      "e25403ff-800b-46d5-af99-0396a25864e1",
      "5c9fa534-03cf-48ab-a1d3-92798a64cffd",
      "78f4517d-4444-4424-a562-4f59c91d1d36",
      "59b38d08-132e-4840-abde-3f31bfd82cd7",
      "8b565bfa-bb18-49f8-9482-5dd9890ea794",
      "b451602a-9d76-433b-95ce-4e6eb741e9e7",
      "d6a335f7-80f0-46be-868e-66ee314c96e2",
      "5c5e0e63-3ed3-4182-ba76-2fc951e58e68"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552024394201,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "4d1611ae-8da0-48d0-a3cc-1f4adcb2547a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552024394201,
    "parent_id": "d5631366-098b-4c90-b10a-4c27cda07738",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Spawning non-blocking processes with proc open"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024394195,
        "id": "59648110-da8b-4c1b-8dcb-430156c07f9e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024394195,
        "parent_id": "4d1611ae-8da0-48d0-a3cc-1f4adcb2547a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "PHP has no support for running code concurrently unless you install extensions such as "
            ],
            [
              "pthread",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/php/1583/multi-threading-extension#t=201609251928593249974"
                ]
              ]
            ],
            [
              ". This can be sometimes bypassed by using "
            ],
            [
              "proc_open()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://php.net/manual/en/function.proc-open.php"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "stream_set_blocking()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://php.net/manual/en/function.stream-set-blocking.php"
                ]
              ]
            ],
            [
              " and reading their output asynchronously."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "PHP has no support for running code concurrently unless you install extensions such as "
          },
          {
            "Text": "pthread",
            "AttrFlags": 2,
            "Link": "http://stackoverflow.com/documentation/php/1583/multi-threading-extension#t=201609251928593249974"
          },
          {
            "Text": ". This can be sometimes bypassed by using "
          },
          {
            "Text": "proc_open()",
            "AttrFlags": 2,
            "Link": "http://php.net/manual/en/function.proc-open.php"
          },
          {
            "Text": " and "
          },
          {
            "Text": "stream_set_blocking()",
            "AttrFlags": 2,
            "Link": "http://php.net/manual/en/function.stream-set-blocking.php"
          },
          {
            "Text": " and reading their output asynchronously."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024394196,
        "id": "fd3dfa60-660f-4006-b136-59581c2d6be2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024394196,
        "parent_id": "4d1611ae-8da0-48d0-a3cc-1f4adcb2547a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If we split code into smaller chunks we can run it as multiple suprocesses. Then using "
            ],
            [
              "stream_set_blocking()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://php.net/manual/en/function.stream-set-blocking.php"
                ]
              ]
            ],
            [
              " function we can make each subprocess also non-blocking. This means we can spawn multiple subprocesses and then check for their output in a loop (similarly to an even loop) and wait until all of them finish."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If we split code into smaller chunks we can run it as multiple suprocesses. Then using "
          },
          {
            "Text": "stream_set_blocking()",
            "AttrFlags": 2,
            "Link": "http://php.net/manual/en/function.stream-set-blocking.php"
          },
          {
            "Text": " function we can make each subprocess also non-blocking. This means we can spawn multiple subprocesses and then check for their output in a loop (similarly to an even loop) and wait until all of them finish."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024394196,
        "id": "cf580f78-82b9-448d-9672-034e79a8ae7f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024394196,
        "parent_id": "4d1611ae-8da0-48d0-a3cc-1f4adcb2547a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As an example we can have a small subprocess that just runs a loop and in each iteration sleeps randomly for 100 - 1000ms (note, the delay is always the same for one subprocess)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As an example we can have a small subprocess that just runs a loop and in each iteration sleeps randomly for 100 - 1000ms (note, the delay is always the same for one subprocess)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024394196,
        "id": "30a2fd00-bf6f-4e8f-9fea-3ee855f532cf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024394196,
        "parent_id": "4d1611ae-8da0-48d0-a3cc-1f4adcb2547a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003c?php\n// subprocess.php\n$name = $argv[1];\n$delay = rand(1, 10) * 100;\nprintf(\"$name delay: ${delay}ms\\n\");\n\nfor ($i = 0; $i \u003c 5; $i++) {\n    usleep($delay * 1000);\n    printf(\"$name: $i\\n\");\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003c?php\n// subprocess.php\n$name = $argv[1];\n$delay = rand(1, 10) * 100;\nprintf(\"$name delay: ${delay}ms\\n\");\n\nfor ($i = 0; $i \u003c 5; $i++) {\n    usleep($delay * 1000);\n    printf(\"$name: $i\\n\");\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024394197,
        "id": "e25403ff-800b-46d5-af99-0396a25864e1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024394197,
        "parent_id": "4d1611ae-8da0-48d0-a3cc-1f4adcb2547a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Then the main process will spawn subprocesses and read their output. We can split it into smaller blocks:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Then the main process will spawn subprocesses and read their output. We can split it into smaller blocks:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024394198,
        "id": "5c9fa534-03cf-48ab-a1d3-92798a64cffd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024394198,
        "parent_id": "4d1611ae-8da0-48d0-a3cc-1f4adcb2547a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Spawn subprocesses with "
            ],
            [
              "proc_open()",
              [
                [
                  "a",
                  "http://php.net/manual/en/function.proc-open.php"
                ]
              ]
            ],
            [
              " ."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Spawn subprocesses with "
          },
          {
            "Text": "proc_open()",
            "Link": "http://php.net/manual/en/function.proc-open.php"
          },
          {
            "Text": " ."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024394198,
        "id": "78f4517d-4444-4424-a562-4f59c91d1d36",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024394198,
        "parent_id": "4d1611ae-8da0-48d0-a3cc-1f4adcb2547a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Make each subprocess non-blocking with "
            ],
            [
              "stream_set_blocking()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://php.net/manual/en/function.stream-set-blocking.php"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Make each subprocess non-blocking with "
          },
          {
            "Text": "stream_set_blocking()",
            "AttrFlags": 2,
            "Link": "http://php.net/manual/en/function.stream-set-blocking.php"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024394199,
        "id": "59b38d08-132e-4840-abde-3f31bfd82cd7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024394199,
        "parent_id": "4d1611ae-8da0-48d0-a3cc-1f4adcb2547a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Run a loop until all subprocesses finish using "
            ],
            [
              "proc_get_status()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://php.net/manual/en/function.proc-get-status.php"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Run a loop until all subprocesses finish using "
          },
          {
            "Text": "proc_get_status()",
            "AttrFlags": 2,
            "Link": "http://php.net/manual/en/function.proc-get-status.php"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024394200,
        "id": "8b565bfa-bb18-49f8-9482-5dd9890ea794",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024394200,
        "parent_id": "4d1611ae-8da0-48d0-a3cc-1f4adcb2547a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Properly close file handles with the output pipe for each subprocess using "
            ],
            [
              "fclose()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://php.net/manual/en/function.fclose.php"
                ]
              ]
            ],
            [
              " and close process handles with "
            ],
            [
              "proc_close()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://php.net/manual/en/function.proc-close.php"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Properly close file handles with the output pipe for each subprocess using "
          },
          {
            "Text": "fclose()",
            "AttrFlags": 2,
            "Link": "http://php.net/manual/en/function.fclose.php"
          },
          {
            "Text": " and close process handles with "
          },
          {
            "Text": "proc_close()",
            "AttrFlags": 2,
            "Link": "http://php.net/manual/en/function.proc-close.php"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024394200,
        "id": "b451602a-9d76-433b-95ce-4e6eb741e9e7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024394200,
        "parent_id": "4d1611ae-8da0-48d0-a3cc-1f4adcb2547a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003c?php\n// non-blocking-proc_open.php\n// File descriptors for each subprocess.\n$descriptors = [\n    0 =\u003e ['pipe', 'r'], // stdin\n    1 =\u003e ['pipe', 'w'], // stdout\n];\n\n$pipes = [];\n$processes = [];\nforeach (range(1, 3) as $i) {\n    // Spawn a subprocess.\n    $proc = proc_open('php subprocess.php proc' . $i, $descriptors, $procPipes);\n    $processes[$i] = $proc;\n    // Make the subprocess non-blocking (only output pipe).\n    stream_set_blocking($procPipes[1], 0);\n    $pipes[$i] = $procPipes;\n}\n\n// Run in a loop until all subprocesses finish.\nwhile (array_filter($processes, function($proc) { return proc_get_status($proc)['running']; })) {\n    foreach (range(1, 3) as $i) {\n        usleep(10 * 1000); // 100ms\n        // Read all available output (unread output is buffered).\n        $str = fread($pipes[$i][1], 1024);\n        if ($str) {\n            printf($str);\n        }\n    }\n}\n\n// Close all pipes and processes.\nforeach (range(1, 3) as $i) {\n    fclose($pipes[$i][1]);\n    proc_close($processes[$i]);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003c?php\n// non-blocking-proc_open.php\n// File descriptors for each subprocess.\n$descriptors = [\n    0 =\u003e ['pipe', 'r'], // stdin\n    1 =\u003e ['pipe', 'w'], // stdout\n];\n\n$pipes = [];\n$processes = [];\nforeach (range(1, 3) as $i) {\n    // Spawn a subprocess.\n    $proc = proc_open('php subprocess.php proc' . $i, $descriptors, $procPipes);\n    $processes[$i] = $proc;\n    // Make the subprocess non-blocking (only output pipe).\n    stream_set_blocking($procPipes[1], 0);\n    $pipes[$i] = $procPipes;\n}\n\n// Run in a loop until all subprocesses finish.\nwhile (array_filter($processes, function($proc) { return proc_get_status($proc)['running']; })) {\n    foreach (range(1, 3) as $i) {\n        usleep(10 * 1000); // 100ms\n        // Read all available output (unread output is buffered).\n        $str = fread($pipes[$i][1], 1024);\n        if ($str) {\n            printf($str);\n        }\n    }\n}\n\n// Close all pipes and processes.\nforeach (range(1, 3) as $i) {\n    fclose($pipes[$i][1]);\n    proc_close($processes[$i]);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024394201,
        "id": "d6a335f7-80f0-46be-868e-66ee314c96e2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024394201,
        "parent_id": "4d1611ae-8da0-48d0-a3cc-1f4adcb2547a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The output then contains mixture from all three subprocesses as they we’re read by "
            ],
            [
              "fread()",
              [
                [
                  "a",
                  "http://php.net/manual/en/function.fread.php"
                ]
              ]
            ],
            [
              " (note, that in this case "
            ],
            [
              "proc1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " ended much earlier than the other two):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The output then contains mixture from all three subprocesses as they we’re read by "
          },
          {
            "Text": "fread()",
            "Link": "http://php.net/manual/en/function.fread.php"
          },
          {
            "Text": " (note, that in this case "
          },
          {
            "Text": "proc1",
            "AttrFlags": 2
          },
          {
            "Text": " ended much earlier than the other two):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024394201,
        "id": "5c5e0e63-3ed3-4182-ba76-2fc951e58e68",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024394201,
        "parent_id": "4d1611ae-8da0-48d0-a3cc-1f4adcb2547a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$ php non-blocking-proc_open.php \nproc1 delay: 200ms\nproc2 delay: 1000ms\nproc3 delay: 800ms\nproc1: 0\nproc1: 1\nproc1: 2\nproc1: 3\nproc3: 0\nproc1: 4\nproc2: 0\nproc3: 1\nproc2: 1\nproc3: 2\nproc2: 2\nproc3: 3\nproc2: 3\nproc3: 4\nproc2: 4"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$ php non-blocking-proc_open.php \nproc1 delay: 200ms\nproc2 delay: 1000ms\nproc3 delay: 800ms\nproc1: 0\nproc1: 1\nproc1: 2\nproc1: 3\nproc3: 0\nproc1: 4\nproc2: 0\nproc3: 1\nproc2: 1\nproc3: 2\nproc2: 2\nproc3: 3\nproc2: 3\nproc3: 4\nproc2: 4",
        "code_language": "Plain Text"
      }
    ],
    "title": "Spawning non-blocking processes with proc open",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}