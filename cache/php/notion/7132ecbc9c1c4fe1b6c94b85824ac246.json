{
  "ID": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
  "Root": {
    "alive": true,
    "content": [
      "0f79cfe8-b12f-461f-b859-a75016284582",
      "a05b4eec-0d71-4568-9cca-1e96b041fcd5",
      "cb0d673f-e242-4b5c-b4e8-09d44fcbf951",
      "124202e6-1fe0-424c-b7d8-ea2d57b24275",
      "fee19fb3-1837-469e-98a1-ebf376e5a7bd",
      "36d68e9e-ddd3-4bc4-b78e-2082c01df4ba",
      "778bcc65-fab4-44ec-9db1-dae6778ec8da",
      "9981e69d-b737-4d6e-a7ad-2d337899ce05",
      "7541aa1a-abd0-4574-902d-1c73fb41a3fc",
      "8a639eca-7665-4c13-ad18-da02ddcff1d1",
      "05cdb86a-70fe-4b0d-b1d9-cbf6cc7424d6",
      "8afaa4d8-6cd9-4349-bb60-b1091421dab2",
      "4d1b1a93-00a8-4354-93dc-63760f5f3fcd",
      "ae75e583-adfd-4c9d-a4ab-7eb6c1a177cd",
      "1503e172-8274-4e3a-bd74-99930292440b",
      "bfd2b681-44a8-4ba3-a210-54d7fa6220b5",
      "d2c554cb-edb7-4d69-9a89-f93f44cf9444",
      "609756bb-3a62-45b9-8d12-34175a43922e",
      "031dde0a-533a-420d-b7ba-4e9a1ede2110",
      "c76871d2-e70c-48f1-b815-188e3e3b7956",
      "74ddaa80-fb9a-4a4a-8762-8c89186d6620",
      "7fb7be6e-9ec5-4b18-9b06-c1fdc6a61074",
      "d4013c93-60fe-4d0c-bcb3-283a3114f4e2",
      "c680daf5-667f-45ae-9bd7-6320beccde21",
      "ba4c9710-a19c-4302-a929-ea487c656f65",
      "ffd09b13-aec4-40d2-8ca0-76ea2ba52903"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552022366135,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552022366135,
    "parent_id": "caabd093-67a6-454d-8e67-b40f2303905b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Interfaces"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366128,
        "id": "0f79cfe8-b12f-461f-b859-a75016284582",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366128,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366131,
        "id": "a05b4eec-0d71-4568-9cca-1e96b041fcd5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366131,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Interfaces are definitions of the public APIs classes must implement to satisfy the interface. They work as “contracts”, specifying "
            ],
            [
              "what",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " a set of subclasses does, but "
            ],
            [
              "not how",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " they do it."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Interfaces are definitions of the public APIs classes must implement to satisfy the interface. They work as “contracts”, specifying "
          },
          {
            "Text": "what",
            "AttrFlags": 1
          },
          {
            "Text": " a set of subclasses does, but "
          },
          {
            "Text": "not how",
            "AttrFlags": 1
          },
          {
            "Text": " they do it."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366131,
        "id": "cb0d673f-e242-4b5c-b4e8-09d44fcbf951",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366131,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Interface definition is much alike class definition, changing the keyword "
            ],
            [
              "class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "interface",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Interface definition is much alike class definition, changing the keyword "
          },
          {
            "Text": "class",
            "AttrFlags": 2
          },
          {
            "Text": " to "
          },
          {
            "Text": "interface",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366132,
        "id": "124202e6-1fe0-424c-b7d8-ea2d57b24275",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366132,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "interface Foo {\n\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "interface Foo {\n\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366132,
        "id": "fee19fb3-1837-469e-98a1-ebf376e5a7bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366132,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Interfaces can contain methods and/or constants, but no attributes. Interface constants have the same restrictions as class constants. Interface methods are implicitly abstract:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Interfaces can contain methods and/or constants, but no attributes. Interface constants have the same restrictions as class constants. Interface methods are implicitly abstract:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366132,
        "id": "36d68e9e-ddd3-4bc4-b78e-2082c01df4ba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366132,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "interface Foo {\n    const BAR = 'BAR';\n\n    public function doSomething($param1, $param2);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "interface Foo {\n    const BAR = 'BAR';\n\n    public function doSomething($param1, $param2);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366132,
        "id": "778bcc65-fab4-44ec-9db1-dae6778ec8da",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366132,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " interfaces "
            ],
            [
              "must not",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " declare constructors or destructors, since these are implementation details on the class level."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note:",
            "AttrFlags": 1
          },
          {
            "Text": " interfaces "
          },
          {
            "Text": "must not",
            "AttrFlags": 1
          },
          {
            "Text": " declare constructors or destructors, since these are implementation details on the class level."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366132,
        "id": "9981e69d-b737-4d6e-a7ad-2d337899ce05",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366132,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Realization"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Realization"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366132,
        "id": "7541aa1a-abd0-4574-902d-1c73fb41a3fc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366132,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Any class that needs to implement an interface must do so using the "
            ],
            [
              "implements",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword. To do so, the class needs to provide a implementation for every method declared in the interface, respecting the same signature."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Any class that needs to implement an interface must do so using the "
          },
          {
            "Text": "implements",
            "AttrFlags": 2
          },
          {
            "Text": " keyword. To do so, the class needs to provide a implementation for every method declared in the interface, respecting the same signature."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366133,
        "id": "8a639eca-7665-4c13-ad18-da02ddcff1d1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366133,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A single class "
            ],
            [
              "can",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " implement more than one interface at a time."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A single class "
          },
          {
            "Text": "can",
            "AttrFlags": 1
          },
          {
            "Text": " implement more than one interface at a time."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366133,
        "id": "05cdb86a-70fe-4b0d-b1d9-cbf6cc7424d6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366133,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "interface Foo {\n    public function doSomething($param1, $param2);\n}\n\ninterface Bar {\n    public function doAnotherThing($param1);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "interface Foo {\n    public function doSomething($param1, $param2);\n}\n\ninterface Bar {\n    public function doAnotherThing($param1);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366133,
        "id": "8afaa4d8-6cd9-4349-bb60-b1091421dab2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366133,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Baz implements Foo, Bar {\n    public function doSomething($param1, $param2) {\n        // ...\n    }\n\n    public function doAnotherThing($param1) {\n        // ...\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Baz implements Foo, Bar {\n    public function doSomething($param1, $param2) {\n        // ...\n    }\n\n    public function doAnotherThing($param1) {\n        // ...\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366133,
        "id": "4d1b1a93-00a8-4354-93dc-63760f5f3fcd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366133,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When abstract classes implement interfaces, they do not need to implement all methods. Any method not implemented in the base class must then be implemented by the concrete class that extends it:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When abstract classes implement interfaces, they do not need to implement all methods. Any method not implemented in the base class must then be implemented by the concrete class that extends it:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366133,
        "id": "ae75e583-adfd-4c9d-a4ab-7eb6c1a177cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366133,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "abstract class AbstractBaz implements Foo, Bar {\n    // Partial implementation of the required interface...\n    public function doSomething($param1, $param2) {\n        // ...\n    }\n}\n\nclass Baz extends AbstractBaz {\n    public function doAnotherThing($param1) {\n        // ...\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "abstract class AbstractBaz implements Foo, Bar {\n    // Partial implementation of the required interface...\n    public function doSomething($param1, $param2) {\n        // ...\n    }\n}\n\nclass Baz extends AbstractBaz {\n    public function doAnotherThing($param1) {\n        // ...\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366133,
        "id": "1503e172-8274-4e3a-bd74-99930292440b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366133,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Notice that interface realization is an inherited characteristic. When extending a class that implements an interface, you do not need to redeclare it in the concrete class, because it is implicit."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Notice that interface realization is an inherited characteristic. When extending a class that implements an interface, you do not need to redeclare it in the concrete class, because it is implicit."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366133,
        "id": "bfd2b681-44a8-4ba3-a210-54d7fa6220b5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366133,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: Prior to PHP 5.3.9, a class could not implement two interfaces that specified a method with the same name, since it would cause ambiguity. More recent versions of PHP allow this as long as the duplicate methods have the same signature[1]."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: Prior to PHP 5.3.9, a class could not implement two interfaces that specified a method with the same name, since it would cause ambiguity. More recent versions of PHP allow this as long as the duplicate methods have the same signature[1]."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366134,
        "id": "d2c554cb-edb7-4d69-9a89-f93f44cf9444",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366134,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Inheritance"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Inheritance"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366134,
        "id": "609756bb-3a62-45b9-8d12-34175a43922e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366134,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Like classes, it is possible to establish an inheritance relationship between interfaces, using the same keyword "
            ],
            [
              "extends",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The main difference is that multiple inheritance is allowed for interfaces:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Like classes, it is possible to establish an inheritance relationship between interfaces, using the same keyword "
          },
          {
            "Text": "extends",
            "AttrFlags": 2
          },
          {
            "Text": ". The main difference is that multiple inheritance is allowed for interfaces:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366134,
        "id": "031dde0a-533a-420d-b7ba-4e9a1ede2110",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366134,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "interface Foo {\n\n}\n\ninterface Bar {\n\n}\n\ninterface Baz extends Foo, Bar {\n\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "interface Foo {\n\n}\n\ninterface Bar {\n\n}\n\ninterface Baz extends Foo, Bar {\n\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366134,
        "id": "c76871d2-e70c-48f1-b815-188e3e3b7956",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366134,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Examples"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Examples"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366134,
        "id": "74ddaa80-fb9a-4a4a-8762-8c89186d6620",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366134,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the example bellow we have a simple example interface for a vehicle. Vehicles can go forwards and backwards."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the example bellow we have a simple example interface for a vehicle. Vehicles can go forwards and backwards."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366134,
        "id": "7fb7be6e-9ec5-4b18-9b06-c1fdc6a61074",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366134,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "interface VehicleInterface {\n    public function forward();\n\n    public function reverse();\n\n    ...\n}\n\nclass Bike implements VehicleInterface {\n    public function forward() {\n        $this-\u003epedal();\n    }\n\n    public function reverse() {\n        $this-\u003ebackwardSteps();\n    }\n\n    protected function pedal() {\n        ...\n    }\n\n    protected function backwardSteps() {\n        ...\n    }\n\n    ...\n}\n\nclass Car implements VehicleInterface {\n    protected $gear = 'N';\n\n    public function forward() {\n        $this-\u003esetGear(1);\n        $this-\u003epushPedal();\n    }\n\n    public function reverse() {\n        $this-\u003esetGear('R');\n        $this-\u003epushPedal();\n    }\n\n    protected function setGear($gear) {\n        $this-\u003egear = $gear;\n    }\n\n    protected function pushPedal() {\n        ...\n    }\n\n    ...\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "interface VehicleInterface {\n    public function forward();\n\n    public function reverse();\n\n    ...\n}\n\nclass Bike implements VehicleInterface {\n    public function forward() {\n        $this-\u003epedal();\n    }\n\n    public function reverse() {\n        $this-\u003ebackwardSteps();\n    }\n\n    protected function pedal() {\n        ...\n    }\n\n    protected function backwardSteps() {\n        ...\n    }\n\n    ...\n}\n\nclass Car implements VehicleInterface {\n    protected $gear = 'N';\n\n    public function forward() {\n        $this-\u003esetGear(1);\n        $this-\u003epushPedal();\n    }\n\n    public function reverse() {\n        $this-\u003esetGear('R');\n        $this-\u003epushPedal();\n    }\n\n    protected function setGear($gear) {\n        $this-\u003egear = $gear;\n    }\n\n    protected function pushPedal() {\n        ...\n    }\n\n    ...\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366134,
        "id": "d4013c93-60fe-4d0c-bcb3-283a3114f4e2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366134,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Then we create two classes that implement the interface: Bike and Car. Bike and Car internally are very different, but both are vehicles, and must implement the same public methods that VehicleInterface provides."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Then we create two classes that implement the interface: Bike and Car. Bike and Car internally are very different, but both are vehicles, and must implement the same public methods that VehicleInterface provides."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366135,
        "id": "c680daf5-667f-45ae-9bd7-6320beccde21",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366135,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Typehinting allows methods and functions to request Interfaces. Let’s assume that we have a parking garage class, which contains vehicles of all kinds."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Typehinting allows methods and functions to request Interfaces. Let’s assume that we have a parking garage class, which contains vehicles of all kinds."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366135,
        "id": "ba4c9710-a19c-4302-a929-ea487c656f65",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366135,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class ParkingGarage {\n    protected $vehicles = [];\n\n    public function addVehicle(VehicleInterface $vehicle) {\n        $this-\u003evehicles[] = $vehicle;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class ParkingGarage {\n    protected $vehicles = [];\n\n    public function addVehicle(VehicleInterface $vehicle) {\n        $this-\u003evehicles[] = $vehicle;\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022366135,
        "id": "ffd09b13-aec4-40d2-8ca0-76ea2ba52903",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022366135,
        "parent_id": "7132ecbc-9c1c-4fe1-b6c9-4b85824ac246",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Because "
            ],
            [
              "addVehicle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " requires a "
            ],
            [
              "$vehicle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " of type "
            ],
            [
              "VehicleInterface",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "—not a concrete implementation—we can input both Bikes and Cars, which the ParkingGarage can manipulate and use."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Because "
          },
          {
            "Text": "addVehicle",
            "AttrFlags": 2
          },
          {
            "Text": " requires a "
          },
          {
            "Text": "$vehicle",
            "AttrFlags": 2
          },
          {
            "Text": " of type "
          },
          {
            "Text": "VehicleInterface",
            "AttrFlags": 2
          },
          {
            "Text": "—not a concrete implementation—we can input both Bikes and Cars, which the ParkingGarage can manipulate and use."
          }
        ]
      }
    ],
    "title": "Interfaces",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}