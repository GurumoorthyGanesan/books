{
  "ID": "11bfffa0-caa7-461c-9ecf-2ba732e442cb",
  "Root": {
    "alive": true,
    "content": [
      "c3228b2c-15bf-436b-ae1d-b9d7fb5cd804",
      "3c0a4b47-262a-4a49-ac47-2be0de8ae47d",
      "99f80548-312b-4b27-8beb-e4a18959a60b",
      "7dba9e04-cb83-4d70-a5cf-b81e585c2e33",
      "b9fdf5fc-9d9f-411e-b065-3e024a425768",
      "b1980e66-91b9-4b51-a5a9-99f32ca445ef",
      "ccafdf3a-0d2c-48bf-9d28-489c1dd0eb9b",
      "42f84859-0ec9-4d60-886a-6dd7614bcf72",
      "99cf218c-c87c-4f94-834c-d5defb5fd373",
      "e7dac997-d71f-46ef-aa90-f506095f4445",
      "3cca442b-c67e-4c6c-8bf3-826ca01315d2",
      "bf354fad-4fb8-416e-bff9-7910b8c281fd",
      "b52e71db-8589-492f-9c6a-9cfaa69c1ad6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552022419229,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "11bfffa0-caa7-461c-9ecf-2ba732e442cb",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552022419229,
    "parent_id": "8b30ba45-a57e-44b5-b6c2-501af4626d35",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Container Injection"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022419223,
        "id": "c3228b2c-15bf-436b-ae1d-b9d7fb5cd804",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022419223,
        "parent_id": "11bfffa0-caa7-461c-9ecf-2ba732e442cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Dependency Injection (DI) in the context of using a Dependency Injection Container (DIC) can be seen as a superset of constructor injection. A DIC will typically analyze a class constructor’s typehints and resolve its needs, effectively injecting the dependencies needed for the instance execution."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Dependency Injection (DI) in the context of using a Dependency Injection Container (DIC) can be seen as a superset of constructor injection. A DIC will typically analyze a class constructor’s typehints and resolve its needs, effectively injecting the dependencies needed for the instance execution."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022419224,
        "id": "3c0a4b47-262a-4a49-ac47-2be0de8ae47d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022419224,
        "parent_id": "11bfffa0-caa7-461c-9ecf-2ba732e442cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The exact implementation goes well beyond the scope of this document but at its very heart, a DIC relies on using the signature of a class…"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The exact implementation goes well beyond the scope of this document but at its very heart, a DIC relies on using the signature of a class…"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022419224,
        "id": "99f80548-312b-4b27-8beb-e4a18959a60b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022419224,
        "parent_id": "11bfffa0-caa7-461c-9ecf-2ba732e442cb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "namespace Documentation;\n\nclass Example\n{\n    private $meaning;\n\n    public function __construct(Meaning $meaning)\n    {\n        $this-\u003emeaning = $meaning;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "namespace Documentation;\n\nclass Example\n{\n    private $meaning;\n\n    public function __construct(Meaning $meaning)\n    {\n        $this-\u003emeaning = $meaning;\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022419226,
        "id": "7dba9e04-cb83-4d70-a5cf-b81e585c2e33",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022419226,
        "parent_id": "11bfffa0-caa7-461c-9ecf-2ba732e442cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "… to automatically instantiate it, relying most of the time on an "
            ],
            [
              "autoloading system",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/php/504/classes-and-objects/13197/autoloading#t=201612130423298386785"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "… to automatically instantiate it, relying most of the time on an "
          },
          {
            "Text": "autoloading system",
            "Link": "http://stackoverflow.com/documentation/php/504/classes-and-objects/13197/autoloading#t=201612130423298386785"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022419226,
        "id": "b9fdf5fc-9d9f-411e-b065-3e024a425768",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022419226,
        "parent_id": "11bfffa0-caa7-461c-9ecf-2ba732e442cb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// older PHP versions\n$container-\u003emake('Documentation\\Example');\n\n// since PHP 5.5\n$container-\u003emake(\\Documentation\\Example::class);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// older PHP versions\n$container-\u003emake('Documentation\\Example');\n\n// since PHP 5.5\n$container-\u003emake(\\Documentation\\Example::class);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022419226,
        "id": "b1980e66-91b9-4b51-a5a9-99f32ca445ef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022419226,
        "parent_id": "11bfffa0-caa7-461c-9ecf-2ba732e442cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you are using PHP in version at least 5.5 and want to get a name of a class in a way that’s being shown above, the correct way is the second approach. That way you can quickly find usages of the class using modern IDEs, which will greatly help you with potential refactoring. You do not want to rely on regular strings."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you are using PHP in version at least 5.5 and want to get a name of a class in a way that’s being shown above, the correct way is the second approach. That way you can quickly find usages of the class using modern IDEs, which will greatly help you with potential refactoring. You do not want to rely on regular strings."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022419227,
        "id": "ccafdf3a-0d2c-48bf-9d28-489c1dd0eb9b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022419227,
        "parent_id": "11bfffa0-caa7-461c-9ecf-2ba732e442cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this case, the "
            ],
            [
              "Documentation\\Example",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " knows it needs a "
            ],
            [
              "Meaning",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and a DIC would in turn instantiate a "
            ],
            [
              "Meaning",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " type. The concrete implementation need not depend on the consuming instance."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this case, the "
          },
          {
            "Text": "Documentation\\Example",
            "AttrFlags": 2
          },
          {
            "Text": " knows it needs a "
          },
          {
            "Text": "Meaning",
            "AttrFlags": 2
          },
          {
            "Text": ", and a DIC would in turn instantiate a "
          },
          {
            "Text": "Meaning",
            "AttrFlags": 2
          },
          {
            "Text": " type. The concrete implementation need not depend on the consuming instance."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022419227,
        "id": "42f84859-0ec9-4d60-886a-6dd7614bcf72",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022419227,
        "parent_id": "11bfffa0-caa7-461c-9ecf-2ba732e442cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Instead, we set rules in the container, prior to object creation, that instructs how specific types should be instantiated if need be."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Instead, we set rules in the container, prior to object creation, that instructs how specific types should be instantiated if need be."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022419227,
        "id": "99cf218c-c87c-4f94-834c-d5defb5fd373",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022419227,
        "parent_id": "11bfffa0-caa7-461c-9ecf-2ba732e442cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This has a number of advantages, as a DIC can"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This has a number of advantages, as a DIC can"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022419228,
        "id": "e7dac997-d71f-46ef-aa90-f506095f4445",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022419228,
        "parent_id": "11bfffa0-caa7-461c-9ecf-2ba732e442cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Share common instances"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Share common instances"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022419228,
        "id": "3cca442b-c67e-4c6c-8bf3-826ca01315d2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022419228,
        "parent_id": "11bfffa0-caa7-461c-9ecf-2ba732e442cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Provide a factory to resolve a type signature"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Provide a factory to resolve a type signature"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022419228,
        "id": "bf354fad-4fb8-416e-bff9-7910b8c281fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022419228,
        "parent_id": "11bfffa0-caa7-461c-9ecf-2ba732e442cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Resolve an interface signature"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Resolve an interface signature"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022419229,
        "id": "b52e71db-8589-492f-9c6a-9cfaa69c1ad6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022419229,
        "parent_id": "11bfffa0-caa7-461c-9ecf-2ba732e442cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If we define rules about how specific type needs to be managed we can achieve fine control over which types are shared, instantiated, or created from a factory."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If we define rules about how specific type needs to be managed we can achieve fine control over which types are shared, instantiated, or created from a factory."
          }
        ]
      }
    ],
    "title": "Container Injection",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}