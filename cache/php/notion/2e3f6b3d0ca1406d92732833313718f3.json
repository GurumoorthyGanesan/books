{
  "ID": "2e3f6b3d-0ca1-406d-9273-2833313718f3",
  "Root": {
    "alive": true,
    "content": [
      "bf65500c-fc14-40dd-8c66-698ab7546973",
      "a1315083-d356-4fb0-a1d1-0f78367bf3ff",
      "2b06b843-ffa9-473b-9380-a6f139e86df5"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552024730275,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "2e3f6b3d-0ca1-406d-9273-2833313718f3",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552024730275,
    "parent_id": "3bb8f2d9-3a30-426a-90e4-c8d89d2b2785",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Basic PDO Connection and Retrieval"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024730274,
        "id": "bf65500c-fc14-40dd-8c66-698ab7546973",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024730274,
        "parent_id": "2e3f6b3d-0ca1-406d-9273-2833313718f3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Since PHP 5.0, "
            ],
            [
              "PDO",
              [
                [
                  "a",
                  "http://php.net/manual/en/intro.pdo.php"
                ]
              ]
            ],
            [
              " has been available as a database access layer. It is database agnostic, and so the following connection example code should work for any "
            ],
            [
              "of its supported databases",
              [
                [
                  "a",
                  "http://php.net/manual/en/pdo.drivers.php"
                ]
              ]
            ],
            [
              " simply by changing the DSN."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Since PHP 5.0, "
          },
          {
            "Text": "PDO",
            "Link": "http://php.net/manual/en/intro.pdo.php"
          },
          {
            "Text": " has been available as a database access layer. It is database agnostic, and so the following connection example code should work for any "
          },
          {
            "Text": "of its supported databases",
            "Link": "http://php.net/manual/en/pdo.drivers.php"
          },
          {
            "Text": " simply by changing the DSN."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024730275,
        "id": "a1315083-d356-4fb0-a1d1-0f78367bf3ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024730275,
        "parent_id": "2e3f6b3d-0ca1-406d-9273-2833313718f3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// First, create the database handle\n\n//Using MySQL (connection via local socket):\n$dsn = \"mysql:host=localhost;dbname=testdb;charset=utf8\";\n\n//Using MySQL (connection via network, optionally you can specify the port too):\n//$dsn = \"mysql:host=127.0.0.1;port=3306;dbname=testdb;charset=utf8\";\n\n//Or Postgres\n//$dsn = \"pgsql:host=localhost;port=5432;dbname=testdb;\";\n\n//Or even SQLite\n//$dsn = \"sqlite:/path/to/database\"\n\n$username = \"user\";\n$password = \"pass\";\n$db = new PDO($dsn, $username, $password);\n\n// setup PDO to throw an exception if an invalid query is provided\n$db-\u003esetAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n// Next, let's prepare a statement for execution, with a single placeholder\n$query = \"SELECT * FROM users WHERE class = ?\";\n$statement = $db-\u003eprepare($query);\n\n// Create some parameters to fill the placeholders, and execute the statement\n$parameters = [ \"221B\" ];\n$statement-\u003eexecute($parameters);\n\n// Now, loop through each record as an associative array\nwhile ($row = $statement-\u003efetch(PDO::FETCH_ASSOC)) {\n    do_stuff($row);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// First, create the database handle\n\n//Using MySQL (connection via local socket):\n$dsn = \"mysql:host=localhost;dbname=testdb;charset=utf8\";\n\n//Using MySQL (connection via network, optionally you can specify the port too):\n//$dsn = \"mysql:host=127.0.0.1;port=3306;dbname=testdb;charset=utf8\";\n\n//Or Postgres\n//$dsn = \"pgsql:host=localhost;port=5432;dbname=testdb;\";\n\n//Or even SQLite\n//$dsn = \"sqlite:/path/to/database\"\n\n$username = \"user\";\n$password = \"pass\";\n$db = new PDO($dsn, $username, $password);\n\n// setup PDO to throw an exception if an invalid query is provided\n$db-\u003esetAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n// Next, let's prepare a statement for execution, with a single placeholder\n$query = \"SELECT * FROM users WHERE class = ?\";\n$statement = $db-\u003eprepare($query);\n\n// Create some parameters to fill the placeholders, and execute the statement\n$parameters = [ \"221B\" ];\n$statement-\u003eexecute($parameters);\n\n// Now, loop through each record as an associative array\nwhile ($row = $statement-\u003efetch(PDO::FETCH_ASSOC)) {\n    do_stuff($row);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024730275,
        "id": "2b06b843-ffa9-473b-9380-a6f139e86df5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024730275,
        "parent_id": "2e3f6b3d-0ca1-406d-9273-2833313718f3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "prepare",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://php.net/manual/en/pdo.prepare.php"
                ]
              ]
            ],
            [
              " function creates a "
            ],
            [
              "PDOStatement",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object from the query string. The execution of the query and retrieval of the results are performed on this returned object. In case of a failure, the function either returns "
            ],
            [
              "false",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or throws an "
            ],
            [
              "exception",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (depending upon how the PDO connection was configured)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "prepare",
            "AttrFlags": 2,
            "Link": "http://php.net/manual/en/pdo.prepare.php"
          },
          {
            "Text": " function creates a "
          },
          {
            "Text": "PDOStatement",
            "AttrFlags": 2
          },
          {
            "Text": " object from the query string. The execution of the query and retrieval of the results are performed on this returned object. In case of a failure, the function either returns "
          },
          {
            "Text": "false",
            "AttrFlags": 2
          },
          {
            "Text": " or throws an "
          },
          {
            "Text": "exception",
            "AttrFlags": 2
          },
          {
            "Text": " (depending upon how the PDO connection was configured)."
          }
        ]
      }
    ],
    "title": "Basic PDO Connection and Retrieval",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}