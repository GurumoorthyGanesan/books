{
  "ID": "8a99639d-a7d6-4f55-a786-00b5c106c990",
  "Root": {
    "alive": true,
    "content": [
      "4ad3a3a4-cf2e-403c-a9c6-2df0ea6ad3c8",
      "c2cd74f7-bd4c-4a02-9932-524673778202",
      "ebb05ad9-7335-4ab9-99de-d19d0106469e",
      "fa278d97-5a1a-4a0d-91c1-303fcf3917ae",
      "76482987-dde1-4518-9872-c66d52b818a4",
      "4e4312f5-db09-439e-9e19-8f7387456ad7",
      "6492bc96-cef8-4127-ab02-2a59c4f59e5a",
      "8b330098-8a17-4840-9a71-6cb11aa76fed",
      "7b59ccce-e03d-418f-b994-cd1010c2bdc5",
      "dac009e2-7b90-4344-a142-44eaab18d6e7",
      "34472188-8b7d-43ab-9576-9381ebe92104",
      "d1aa3c76-9693-4ae1-9cb3-2de484bb5fdc",
      "1d1a8d70-a65a-4049-aa32-bdcba92ed581"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552023050163,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "8a99639d-a7d6-4f55-a786-00b5c106c990",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552023050163,
    "parent_id": "c09beb38-7179-42f3-a2d1-f4b433238aa0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Prepared statements in MySQLi"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023050159,
        "id": "4ad3a3a4-cf2e-403c-a9c6-2df0ea6ad3c8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023050159,
        "parent_id": "8a99639d-a7d6-4f55-a786-00b5c106c990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Please read http://stackoverflow.com/documentation/php/5828/pdo/2685/preventing-sql-injection-with-parametrized-queries for a complete discussion of why prepared statements help you secure your SQL statements from SQL Injection attacks"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Please read http://stackoverflow.com/documentation/php/5828/pdo/2685/preventing-sql-injection-with-parametrized-queries for a complete discussion of why prepared statements help you secure your SQL statements from SQL Injection attacks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023050160,
        "id": "c2cd74f7-bd4c-4a02-9932-524673778202",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023050160,
        "parent_id": "8a99639d-a7d6-4f55-a786-00b5c106c990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "$conn",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variable here is a MySQLi object. See "
            ],
            [
              "MySQLi connect example",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/php/2784/php-mysqli/9380/mysqli-connect#t=201607250822526544368"
                ]
              ]
            ],
            [
              " for more details."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "$conn",
            "AttrFlags": 2
          },
          {
            "Text": " variable here is a MySQLi object. See "
          },
          {
            "Text": "MySQLi connect example",
            "Link": "http://stackoverflow.com/documentation/php/2784/php-mysqli/9380/mysqli-connect#t=201607250822526544368"
          },
          {
            "Text": " for more details."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023050161,
        "id": "ebb05ad9-7335-4ab9-99de-d19d0106469e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023050161,
        "parent_id": "8a99639d-a7d6-4f55-a786-00b5c106c990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For both examples, we assume that "
            ],
            [
              "$sql",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For both examples, we assume that "
          },
          {
            "Text": "$sql",
            "AttrFlags": 2
          },
          {
            "Text": " is"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023050161,
        "id": "fa278d97-5a1a-4a0d-91c1-303fcf3917ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023050161,
        "parent_id": "8a99639d-a7d6-4f55-a786-00b5c106c990",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$sql = \"SELECT column_1 \n    FROM table \n    WHERE column_2 = ? \n        AND column_3 \u003e ?\";"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$sql = \"SELECT column_1 \n    FROM table \n    WHERE column_2 = ? \n        AND column_3 \u003e ?\";",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023050161,
        "id": "76482987-dde1-4518-9872-c66d52b818a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023050161,
        "parent_id": "8a99639d-a7d6-4f55-a786-00b5c106c990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "?",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " represents the values we will provide later. Please note that we do not need quotes for the placeholders, regardless of the type. We can also only provide placeholders in the data portions of the query, meaning "
            ],
            [
              "SET",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "VALUES",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "WHERE",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". You cannot use placeholders in the "
            ],
            [
              "SELECT",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "FROM",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " portions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "?",
            "AttrFlags": 2
          },
          {
            "Text": " represents the values we will provide later. Please note that we do not need quotes for the placeholders, regardless of the type. We can also only provide placeholders in the data portions of the query, meaning "
          },
          {
            "Text": "SET",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "VALUES",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "WHERE",
            "AttrFlags": 2
          },
          {
            "Text": ". You cannot use placeholders in the "
          },
          {
            "Text": "SELECT",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "FROM",
            "AttrFlags": 2
          },
          {
            "Text": " portions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023050161,
        "id": "4e4312f5-db09-439e-9e19-8f7387456ad7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023050161,
        "parent_id": "8a99639d-a7d6-4f55-a786-00b5c106c990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Object oriented style",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Object oriented style",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023050161,
        "id": "6492bc96-cef8-4127-ab02-2a59c4f59e5a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023050161,
        "parent_id": "8a99639d-a7d6-4f55-a786-00b5c106c990",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if ($stmt = $conn-\u003eprepare($sql)) {\n  $stmt-\u003ebind_param(\"si\", $column_2_value, $column_3_value);\n  $stmt-\u003eexecute();\n\n  $stmt-\u003ebind_result($column_1);\n  $stmt-\u003efetch();\n  //Now use variable $column_1 one as if it were any other PHP variable\n  $stmt-\u003eclose();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if ($stmt = $conn-\u003eprepare($sql)) {\n  $stmt-\u003ebind_param(\"si\", $column_2_value, $column_3_value);\n  $stmt-\u003eexecute();\n\n  $stmt-\u003ebind_result($column_1);\n  $stmt-\u003efetch();\n  //Now use variable $column_1 one as if it were any other PHP variable\n  $stmt-\u003eclose();\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023050162,
        "id": "8b330098-8a17-4840-9a71-6cb11aa76fed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023050162,
        "parent_id": "8a99639d-a7d6-4f55-a786-00b5c106c990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Procedural style",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Procedural style",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023050162,
        "id": "7b59ccce-e03d-418f-b994-cd1010c2bdc5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023050162,
        "parent_id": "8a99639d-a7d6-4f55-a786-00b5c106c990",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if ($stmt = mysqli_prepare($conn, $sql)) {\n  mysqli_stmt_bind_param($stmt, \"si\", $column_2_value, $column_3_value);\n  mysqli_stmt_execute($stmt);\n  // Fetch data here\n  mysqli_stmt_close($stmt);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if ($stmt = mysqli_prepare($conn, $sql)) {\n  mysqli_stmt_bind_param($stmt, \"si\", $column_2_value, $column_3_value);\n  mysqli_stmt_execute($stmt);\n  // Fetch data here\n  mysqli_stmt_close($stmt);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023050162,
        "id": "dac009e2-7b90-4344-a142-44eaab18d6e7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023050162,
        "parent_id": "8a99639d-a7d6-4f55-a786-00b5c106c990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The first parameter of "
            ],
            [
              "$stmt-\u003ebind_param",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or the second parameter of "
            ],
            [
              "mysqli_stmt_bind_param",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is determined by the data type of the corresponding parameter in the SQL query:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The first parameter of "
          },
          {
            "Text": "$stmt-\u003ebind_param",
            "AttrFlags": 2
          },
          {
            "Text": " or the second parameter of "
          },
          {
            "Text": "mysqli_stmt_bind_param",
            "AttrFlags": 2
          },
          {
            "Text": " is determined by the data type of the corresponding parameter in the SQL query:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023050162,
        "id": "34472188-8b7d-43ab-9576-9381ebe92104",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023050162,
        "parent_id": "8a99639d-a7d6-4f55-a786-00b5c106c990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parameter | Data type of the bound parameter |\n——— | –––––––––––––––– |"
            ],
            [
              "i",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | integer |"
            ],
            [
              "d",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | double |"
            ],
            [
              "s",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | string |"
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | blob |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parameter | Data type of the bound parameter |\n——— | –––––––––––––––– |"
          },
          {
            "Text": "i",
            "AttrFlags": 2
          },
          {
            "Text": " | integer |"
          },
          {
            "Text": "d",
            "AttrFlags": 2
          },
          {
            "Text": " | double |"
          },
          {
            "Text": "s",
            "AttrFlags": 2
          },
          {
            "Text": " | string |"
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": " | blob |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023050162,
        "id": "d1aa3c76-9693-4ae1-9cb3-2de484bb5fdc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023050162,
        "parent_id": "8a99639d-a7d6-4f55-a786-00b5c106c990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Your list of parameters needs to be in the order provided in your query. In this example "
            ],
            [
              "si",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " means the first parameter "
            ],
            [
              "(",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "column_2 = ?",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              ")",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " is string and the second parameter "
            ],
            [
              "(",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "column_3 \u003e ?",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              ")",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " is integer."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Your list of parameters needs to be in the order provided in your query. In this example "
          },
          {
            "Text": "si",
            "AttrFlags": 2
          },
          {
            "Text": " means the first parameter "
          },
          {
            "Text": "(",
            "AttrFlags": 4
          },
          {
            "Text": "column_2 = ?",
            "AttrFlags": 6
          },
          {
            "Text": ")",
            "AttrFlags": 4
          },
          {
            "Text": " is string and the second parameter "
          },
          {
            "Text": "(",
            "AttrFlags": 4
          },
          {
            "Text": "column_3 \u003e ?",
            "AttrFlags": 6
          },
          {
            "Text": ")",
            "AttrFlags": 4
          },
          {
            "Text": " is integer."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023050163,
        "id": "1d1a8d70-a65a-4049-aa32-bdcba92ed581",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023050163,
        "parent_id": "8a99639d-a7d6-4f55-a786-00b5c106c990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For retrieving data, see http://stackoverflow.com/documentation/php/2784/php-mysqli/24001/how-to-get-data-from-a-prepared-statements"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For retrieving data, see http://stackoverflow.com/documentation/php/2784/php-mysqli/24001/how-to-get-data-from-a-prepared-statements"
          }
        ]
      }
    ],
    "title": "Prepared statements in MySQLi",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}