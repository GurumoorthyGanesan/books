{
  "ID": "d88ee77e-969f-4c8c-baad-6311e80e7cb3",
  "Root": {
    "alive": true,
    "content": [
      "36c07295-c3c8-466c-bf73-375b86d62dc5",
      "6f80052e-e45d-42aa-8e86-79a34f5a66a8",
      "81f80c3b-7e98-4843-b949-1d24f0cf407f",
      "dacd3089-d2ff-4738-b920-49cab909d8f2",
      "c27830ad-c940-4ba0-97e0-41a3121ac315",
      "472e0cef-e631-4853-bcb1-b2b7b9134577",
      "4936592d-900a-46b6-a817-8ee8bdfcf9a9",
      "cbec82db-f010-4a4c-92ba-0664c213ede2",
      "9b747f2c-5abf-4668-9136-c36abb73558e",
      "063d983a-600b-4fd6-898c-81596118b19b",
      "07eb626f-799d-4e1c-b1ca-8c46efe23b5f",
      "5bbcd275-9a4d-4dce-8908-329b38ac2f5e",
      "c9d23ea7-c130-4ae7-811b-d29ba7f50c78",
      "15b8ab94-b52b-4eb2-893f-36a867243e6b",
      "49331310-46fd-44c4-a690-97f4b14fa542",
      "12ec574b-caa1-444a-996c-078e59d554fd"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552024876744,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d88ee77e-969f-4c8c-baad-6311e80e7cb3",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552024876744,
    "parent_id": "8f27b6c2-32e0-46fe-9052-1bece702489a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "BC Math Binary Calculator"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024876735,
        "id": "36c07295-c3c8-466c-bf73-375b86d62dc5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024876735,
        "parent_id": "d88ee77e-969f-4c8c-baad-6311e80e7cb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024876738,
        "id": "6f80052e-e45d-42aa-8e86-79a34f5a66a8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024876738,
        "parent_id": "d88ee77e-969f-4c8c-baad-6311e80e7cb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The Binary Calculator can be used to calculate with numbers of any size and precision up to 2147483647-1 decimals, in string format. The Binary Calculator is more precise than the float calculation of PHP."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The Binary Calculator can be used to calculate with numbers of any size and precision up to 2147483647-1 decimals, in string format. The Binary Calculator is more precise than the float calculation of PHP."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024876738,
        "id": "81f80c3b-7e98-4843-b949-1d24f0cf407f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024876738,
        "parent_id": "d88ee77e-969f-4c8c-baad-6311e80e7cb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Syntax"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Syntax"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024876739,
        "id": "dacd3089-d2ff-4738-b920-49cab909d8f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024876739,
        "parent_id": "d88ee77e-969f-4c8c-baad-6311e80e7cb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "string bcadd ( string $left_operand , string $right_operand [, int $scale = 0 ] )"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "string bcadd ( string $left_operand , string $right_operand [, int $scale = 0 ] )"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024876739,
        "id": "c27830ad-c940-4ba0-97e0-41a3121ac315",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024876739,
        "parent_id": "d88ee77e-969f-4c8c-baad-6311e80e7cb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "int bccomp ( string $left_operand , string $right_operand [, int $scale = 0 ] )"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "int bccomp ( string $left_operand , string $right_operand [, int $scale = 0 ] )"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024876740,
        "id": "472e0cef-e631-4853-bcb1-b2b7b9134577",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024876740,
        "parent_id": "d88ee77e-969f-4c8c-baad-6311e80e7cb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "string bcdiv ( string $left_operand , string $right_operand [, int $scale = 0 ] )"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "string bcdiv ( string $left_operand , string $right_operand [, int $scale = 0 ] )"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024876740,
        "id": "4936592d-900a-46b6-a817-8ee8bdfcf9a9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024876740,
        "parent_id": "d88ee77e-969f-4c8c-baad-6311e80e7cb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "string bcmod ( string $left_operand , string $modulus )"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "string bcmod ( string $left_operand , string $modulus )"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024876740,
        "id": "cbec82db-f010-4a4c-92ba-0664c213ede2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024876740,
        "parent_id": "d88ee77e-969f-4c8c-baad-6311e80e7cb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "string bcmul ( string $left_operand , string $right_operand [, int $scale = 0 ] )"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "string bcmul ( string $left_operand , string $right_operand [, int $scale = 0 ] )"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024876740,
        "id": "9b747f2c-5abf-4668-9136-c36abb73558e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024876740,
        "parent_id": "d88ee77e-969f-4c8c-baad-6311e80e7cb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "string bcpowmod ( string $left_operand , string $right_operand , string $modulus [, int $scale = 0 ] )"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "string bcpowmod ( string $left_operand , string $right_operand , string $modulus [, int $scale = 0 ] )"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024876740,
        "id": "063d983a-600b-4fd6-898c-81596118b19b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024876740,
        "parent_id": "d88ee77e-969f-4c8c-baad-6311e80e7cb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "bool bcscale ( int $scale )"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "bool bcscale ( int $scale )"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024876740,
        "id": "07eb626f-799d-4e1c-b1ca-8c46efe23b5f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024876740,
        "parent_id": "d88ee77e-969f-4c8c-baad-6311e80e7cb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "string bcsqrt ( string $operand [, int $scale = 0 ] )"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "string bcsqrt ( string $operand [, int $scale = 0 ] )"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024876741,
        "id": "5bbcd275-9a4d-4dce-8908-329b38ac2f5e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024876741,
        "parent_id": "d88ee77e-969f-4c8c-baad-6311e80e7cb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "string bcsub ( string $left_operand , string $right_operand [, int $scale = 0 ] )"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "string bcsub ( string $left_operand , string $right_operand [, int $scale = 0 ] )"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024876741,
        "id": "c9d23ea7-c130-4ae7-811b-d29ba7f50c78",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024876741,
        "parent_id": "d88ee77e-969f-4c8c-baad-6311e80e7cb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parameters"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parameters"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024876743,
        "id": "15b8ab94-b52b-4eb2-893f-36a867243e6b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024876743,
        "parent_id": "d88ee77e-969f-4c8c-baad-6311e80e7cb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "bcadd | "
            ],
            [
              "Add two arbitrary precision numbers.",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " |\n— | — |"
            ],
            [
              "left_operand",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | The left operand, as a string. |"
            ],
            [
              "right_operand",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | The right operand, as a string. |"
            ],
            [
              "scale",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | A optional parameter to set the number of digits after the decimal place in the result. |"
            ],
            [
              "bccomp",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "Compare two arbitrary precision numbers.",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "left_operand",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | The left operand, as a string. |"
            ],
            [
              "right_operand",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | The right operand, as a string. |"
            ],
            [
              "scale",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | A optional parameter to set the number of digits after the decimal place which will be used in the comparison.|"
            ],
            [
              "bcdiv",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "Divide two arbitrary precision numbers.",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "left_operand",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | The left operand, as a string. |"
            ],
            [
              "right_operand",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | The right operand, as a string. |"
            ],
            [
              "scale",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | A optional parameter to set the number of digits after the decimal place in the result. |"
            ],
            [
              "bcmod",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "Get modulus of an arbitrary precision number.",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "left_operand",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | The left operand, as a string. |"
            ],
            [
              "modulus",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | The modulus, as a string. |"
            ],
            [
              "bcmul",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "Multiply two arbitrary precision numbers.",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "left_operand",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | The left operand, as a string. |"
            ],
            [
              "right_operand",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | The right operand, as a string. |"
            ],
            [
              "scale",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | A optional parameter to set the number of digits after the decimal place in the result. |"
            ],
            [
              "bcpow",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "Raise an arbitrary precision number to another.",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "left_operand",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | The left operand, as a string. |"
            ],
            [
              "right_operand",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | The right operand, as a string. |"
            ],
            [
              "scale",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | A optional parameter to set the number of digits after the decimal place in the result. |"
            ],
            [
              "bcpowmod",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "Raise an arbitrary precision number to another, reduced by a specified modulus.",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "left_operand",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | The left operand, as a string. |"
            ],
            [
              "right_operand",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | The right operand, as a string. |"
            ],
            [
              "modulus",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | The modulus, as a string. |"
            ],
            [
              "scale",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | A optional parameter to set the number of digits after the decimal place in the result. |"
            ],
            [
              "bcscale",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "Set default scale parameter for all bc math functions.",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "scale",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | The scale factor. |"
            ],
            [
              "bcsqrt",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "Get the square root of an arbitrary precision number.",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "operand",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | The operand, as a string. |"
            ],
            [
              "scale",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | A optional parameter to set the number of digits after the decimal place in the result. |"
            ],
            [
              "bcsub",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "Subtract one arbitrary precision number from another.",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "left_operand",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | The left operand, as a string.|"
            ],
            [
              "right_operand",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |The right operand, as a string. |"
            ],
            [
              "scale",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | A optional parameter to set the number of digits after the decimal place in the result. |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "bcadd | "
          },
          {
            "Text": "Add two arbitrary precision numbers.",
            "AttrFlags": 4
          },
          {
            "Text": " |\n— | — |"
          },
          {
            "Text": "left_operand",
            "AttrFlags": 2
          },
          {
            "Text": " | The left operand, as a string. |"
          },
          {
            "Text": "right_operand",
            "AttrFlags": 2
          },
          {
            "Text": " | The right operand, as a string. |"
          },
          {
            "Text": "scale",
            "AttrFlags": 2
          },
          {
            "Text": " | A optional parameter to set the number of digits after the decimal place in the result. |"
          },
          {
            "Text": "bccomp",
            "AttrFlags": 1
          },
          {
            "Text": " | "
          },
          {
            "Text": "Compare two arbitrary precision numbers.",
            "AttrFlags": 5
          },
          {
            "Text": " |"
          },
          {
            "Text": "left_operand",
            "AttrFlags": 2
          },
          {
            "Text": " | The left operand, as a string. |"
          },
          {
            "Text": "right_operand",
            "AttrFlags": 2
          },
          {
            "Text": " | The right operand, as a string. |"
          },
          {
            "Text": "scale",
            "AttrFlags": 2
          },
          {
            "Text": " | A optional parameter to set the number of digits after the decimal place which will be used in the comparison.|"
          },
          {
            "Text": "bcdiv",
            "AttrFlags": 1
          },
          {
            "Text": " | "
          },
          {
            "Text": "Divide two arbitrary precision numbers.",
            "AttrFlags": 5
          },
          {
            "Text": " |"
          },
          {
            "Text": "left_operand",
            "AttrFlags": 2
          },
          {
            "Text": " | The left operand, as a string. |"
          },
          {
            "Text": "right_operand",
            "AttrFlags": 2
          },
          {
            "Text": " | The right operand, as a string. |"
          },
          {
            "Text": "scale",
            "AttrFlags": 2
          },
          {
            "Text": " | A optional parameter to set the number of digits after the decimal place in the result. |"
          },
          {
            "Text": "bcmod",
            "AttrFlags": 1
          },
          {
            "Text": " | "
          },
          {
            "Text": "Get modulus of an arbitrary precision number.",
            "AttrFlags": 5
          },
          {
            "Text": " |"
          },
          {
            "Text": "left_operand",
            "AttrFlags": 2
          },
          {
            "Text": " | The left operand, as a string. |"
          },
          {
            "Text": "modulus",
            "AttrFlags": 2
          },
          {
            "Text": " | The modulus, as a string. |"
          },
          {
            "Text": "bcmul",
            "AttrFlags": 1
          },
          {
            "Text": " | "
          },
          {
            "Text": "Multiply two arbitrary precision numbers.",
            "AttrFlags": 5
          },
          {
            "Text": " |"
          },
          {
            "Text": "left_operand",
            "AttrFlags": 2
          },
          {
            "Text": " | The left operand, as a string. |"
          },
          {
            "Text": "right_operand",
            "AttrFlags": 2
          },
          {
            "Text": " | The right operand, as a string. |"
          },
          {
            "Text": "scale",
            "AttrFlags": 2
          },
          {
            "Text": " | A optional parameter to set the number of digits after the decimal place in the result. |"
          },
          {
            "Text": "bcpow",
            "AttrFlags": 1
          },
          {
            "Text": " | "
          },
          {
            "Text": "Raise an arbitrary precision number to another.",
            "AttrFlags": 5
          },
          {
            "Text": " |"
          },
          {
            "Text": "left_operand",
            "AttrFlags": 2
          },
          {
            "Text": " | The left operand, as a string. |"
          },
          {
            "Text": "right_operand",
            "AttrFlags": 2
          },
          {
            "Text": " | The right operand, as a string. |"
          },
          {
            "Text": "scale",
            "AttrFlags": 2
          },
          {
            "Text": " | A optional parameter to set the number of digits after the decimal place in the result. |"
          },
          {
            "Text": "bcpowmod",
            "AttrFlags": 1
          },
          {
            "Text": " | "
          },
          {
            "Text": "Raise an arbitrary precision number to another, reduced by a specified modulus.",
            "AttrFlags": 5
          },
          {
            "Text": " |"
          },
          {
            "Text": "left_operand",
            "AttrFlags": 2
          },
          {
            "Text": " | The left operand, as a string. |"
          },
          {
            "Text": "right_operand",
            "AttrFlags": 2
          },
          {
            "Text": " | The right operand, as a string. |"
          },
          {
            "Text": "modulus",
            "AttrFlags": 2
          },
          {
            "Text": " | The modulus, as a string. |"
          },
          {
            "Text": "scale",
            "AttrFlags": 2
          },
          {
            "Text": " | A optional parameter to set the number of digits after the decimal place in the result. |"
          },
          {
            "Text": "bcscale",
            "AttrFlags": 1
          },
          {
            "Text": " | "
          },
          {
            "Text": "Set default scale parameter for all bc math functions.",
            "AttrFlags": 5
          },
          {
            "Text": " |"
          },
          {
            "Text": "scale",
            "AttrFlags": 2
          },
          {
            "Text": " | The scale factor. |"
          },
          {
            "Text": "bcsqrt",
            "AttrFlags": 1
          },
          {
            "Text": " | "
          },
          {
            "Text": "Get the square root of an arbitrary precision number.",
            "AttrFlags": 5
          },
          {
            "Text": " |"
          },
          {
            "Text": "operand",
            "AttrFlags": 2
          },
          {
            "Text": " | The operand, as a string. |"
          },
          {
            "Text": "scale",
            "AttrFlags": 2
          },
          {
            "Text": " | A optional parameter to set the number of digits after the decimal place in the result. |"
          },
          {
            "Text": "bcsub",
            "AttrFlags": 1
          },
          {
            "Text": " | "
          },
          {
            "Text": "Subtract one arbitrary precision number from another.",
            "AttrFlags": 5
          },
          {
            "Text": " |"
          },
          {
            "Text": "left_operand",
            "AttrFlags": 2
          },
          {
            "Text": " | The left operand, as a string.|"
          },
          {
            "Text": "right_operand",
            "AttrFlags": 2
          },
          {
            "Text": " |The right operand, as a string. |"
          },
          {
            "Text": "scale",
            "AttrFlags": 2
          },
          {
            "Text": " | A optional parameter to set the number of digits after the decimal place in the result. |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024876743,
        "id": "49331310-46fd-44c4-a690-97f4b14fa542",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024876743,
        "parent_id": "d88ee77e-969f-4c8c-baad-6311e80e7cb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552024876743,
        "id": "12ec574b-caa1-444a-996c-078e59d554fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552024876743,
        "parent_id": "d88ee77e-969f-4c8c-baad-6311e80e7cb3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For all BC functions, if the "
            ],
            [
              "scale",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " parameter is not set, it defaults to 0, which will make all operations integer operations."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For all BC functions, if the "
          },
          {
            "Text": "scale",
            "AttrFlags": 2
          },
          {
            "Text": " parameter is not set, it defaults to 0, which will make all operations integer operations."
          }
        ]
      }
    ],
    "title": "BC Math Binary Calculator",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}