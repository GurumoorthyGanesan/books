{
  "ID": "282fc71a-fbf4-4f78-ad0c-11d45d0137cd",
  "Root": {
    "alive": true,
    "content": [
      "f0f39df6-256f-43d9-948f-a65f8a03040d",
      "cfc5e330-af80-471d-b858-ae7550b5e7e2",
      "c3163945-7669-4154-b9d3-f1cb1971a358",
      "93c15bbc-e9ae-4587-a428-6391259a2d85",
      "459c310a-120f-4143-b051-376cab0230fc",
      "09683152-bc66-42f5-a8ff-0ae3645122d4"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552022364140,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "282fc71a-fbf4-4f78-ad0c-11d45d0137cd",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552022364140,
    "parent_id": "caabd093-67a6-454d-8e67-b40f2303905b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Late static binding"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022364138,
        "id": "f0f39df6-256f-43d9-948f-a65f8a03040d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022364138,
        "parent_id": "282fc71a-fbf4-4f78-ad0c-11d45d0137cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In PHP 5.3+ and above you can utilize "
            ],
            [
              "late static binding",
              [
                [
                  "a",
                  "http://php.net/manual/en/language.oop5.late-static-bindings.php"
                ]
              ]
            ],
            [
              " to control which class a static property or method is called from. It was added to overcome the problem inherent with the "
            ],
            [
              "self::",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " scope resolutor. Take the following code"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In PHP 5.3+ and above you can utilize "
          },
          {
            "Text": "late static binding",
            "Link": "http://php.net/manual/en/language.oop5.late-static-bindings.php"
          },
          {
            "Text": " to control which class a static property or method is called from. It was added to overcome the problem inherent with the "
          },
          {
            "Text": "self::",
            "AttrFlags": 2
          },
          {
            "Text": " scope resolutor. Take the following code"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022364139,
        "id": "cfc5e330-af80-471d-b858-ae7550b5e7e2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022364139,
        "parent_id": "282fc71a-fbf4-4f78-ad0c-11d45d0137cd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Horse {\n    public static function whatToSay() {\n         echo 'Neigh!';\n    }\n\n    public static function speak() {\n         self::whatToSay();\n    }\n}\n\nclass MrEd extends Horse {\n    public static function whatToSay() {\n         echo 'Hello Wilbur!';\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Horse {\n    public static function whatToSay() {\n         echo 'Neigh!';\n    }\n\n    public static function speak() {\n         self::whatToSay();\n    }\n}\n\nclass MrEd extends Horse {\n    public static function whatToSay() {\n         echo 'Hello Wilbur!';\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022364139,
        "id": "c3163945-7669-4154-b9d3-f1cb1971a358",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022364139,
        "parent_id": "282fc71a-fbf4-4f78-ad0c-11d45d0137cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You would expect that the "
            ],
            [
              "MrEd",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class will override the parent "
            ],
            [
              "whatToSay()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function. But when we run this we get something unexpected"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You would expect that the "
          },
          {
            "Text": "MrEd",
            "AttrFlags": 2
          },
          {
            "Text": " class will override the parent "
          },
          {
            "Text": "whatToSay()",
            "AttrFlags": 2
          },
          {
            "Text": " function. But when we run this we get something unexpected"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022364139,
        "id": "93c15bbc-e9ae-4587-a428-6391259a2d85",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022364139,
        "parent_id": "282fc71a-fbf4-4f78-ad0c-11d45d0137cd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Horse::speak(); // Neigh!\nMrEd::speak(); // Neigh!"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Horse::speak(); // Neigh!\nMrEd::speak(); // Neigh!",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022364140,
        "id": "459c310a-120f-4143-b051-376cab0230fc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022364140,
        "parent_id": "282fc71a-fbf4-4f78-ad0c-11d45d0137cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The problem is that "
            ],
            [
              "self::whatToSay();",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can only refer to the "
            ],
            [
              "Horse",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class, meaning it doesn’t obey "
            ],
            [
              "MrEd",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". If we switch to the "
            ],
            [
              "static::",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " scope resolutor, we don’t have this problem. This newer method tells the class to obey the instance calling it. Thus we get the inheritance we’re expecting"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The problem is that "
          },
          {
            "Text": "self::whatToSay();",
            "AttrFlags": 2
          },
          {
            "Text": " can only refer to the "
          },
          {
            "Text": "Horse",
            "AttrFlags": 2
          },
          {
            "Text": " class, meaning it doesn’t obey "
          },
          {
            "Text": "MrEd",
            "AttrFlags": 2
          },
          {
            "Text": ". If we switch to the "
          },
          {
            "Text": "static::",
            "AttrFlags": 2
          },
          {
            "Text": " scope resolutor, we don’t have this problem. This newer method tells the class to obey the instance calling it. Thus we get the inheritance we’re expecting"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022364140,
        "id": "09683152-bc66-42f5-a8ff-0ae3645122d4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022364140,
        "parent_id": "282fc71a-fbf4-4f78-ad0c-11d45d0137cd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Horse {\n    public static function whatToSay() {\n         echo 'Neigh!';\n    }\n\n    public static function speak() {\n         static::whatToSay(); // Late Static Binding\n    }\n}\n\nHorse::speak(); // Neigh!\nMrEd::speak(); // Hello Wilbur!"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Horse {\n    public static function whatToSay() {\n         echo 'Neigh!';\n    }\n\n    public static function speak() {\n         static::whatToSay(); // Late Static Binding\n    }\n}\n\nHorse::speak(); // Neigh!\nMrEd::speak(); // Hello Wilbur!",
        "code_language": "Plain Text"
      }
    ],
    "title": "Late static binding",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}