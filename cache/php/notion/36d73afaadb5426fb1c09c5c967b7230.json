{
  "ID": "36d73afa-adb5-426f-b1c0-9c5c967b7230",
  "Root": {
    "alive": true,
    "content": [
      "974225dd-7253-4e42-b244-7864af796ff6",
      "379e85ec-e719-441f-81d6-0b8d0de18ed0",
      "1c28829b-048c-4ee4-ba16-3773a3c3eb93",
      "adbca4c2-d77f-43e2-98a6-07252d750559",
      "13fdccde-1187-4777-9e8b-b4c8e5a6b85d",
      "cb78edfd-6447-4aa0-a7a4-a351aae59635",
      "07cd4512-7100-4a2d-b998-68d57b1930ec",
      "69acfdae-7dbc-454d-98b1-f1cd5174da78",
      "51e1b078-ec05-406e-8ae7-4bc15ee19afc",
      "a14dd603-6f9e-4d03-8e44-2c427478300b",
      "ff86f9f2-2ee9-4671-818b-0246b0ecb134",
      "6bcd7a89-101f-4daf-a9d3-ddadf10824db",
      "a217a327-36bf-4407-b6d9-ab06c8b3765f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552022718098,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "36d73afa-adb5-426f-b1c0-9c5c967b7230",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552022718098,
    "parent_id": "98823712-1c98-4a43-8727-0a1d762add3b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Object and Class Operators"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022718095,
        "id": "974225dd-7253-4e42-b244-7864af796ff6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022718095,
        "parent_id": "36d73afa-adb5-426f-b1c0-9c5c967b7230",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Members of objects or classes can be accessed using the object operator ("
            ],
            [
              "-\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") and the class operator ("
            ],
            [
              "::",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Members of objects or classes can be accessed using the object operator ("
          },
          {
            "Text": "-\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ") and the class operator ("
          },
          {
            "Text": "::",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022718096,
        "id": "379e85ec-e719-441f-81d6-0b8d0de18ed0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022718096,
        "parent_id": "36d73afa-adb5-426f-b1c0-9c5c967b7230",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class MyClass {\n    public $a = 1;\n    public static $b = 2;\n    const C = 3;\n    public function d() { return 4; }\n    public static function e() { return 5; }\n}\n\n$object = new MyClass();\nvar_dump($object-\u003ea);   // int(1)\nvar_dump($object::$b);  // int(2)\nvar_dump($object::C);   // int(3)\nvar_dump(MyClass::$b);  // int(2)\nvar_dump(MyClass::C);   // int(3)\nvar_dump($object-\u003ed()); // int(4)\nvar_dump($object::d()); // int(4)\nvar_dump(MyClass::e()); // int(5)\n$classname = \"MyClass\";\nvar_dump($classname::e()); // also works! int(5)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class MyClass {\n    public $a = 1;\n    public static $b = 2;\n    const C = 3;\n    public function d() { return 4; }\n    public static function e() { return 5; }\n}\n\n$object = new MyClass();\nvar_dump($object-\u003ea);   // int(1)\nvar_dump($object::$b);  // int(2)\nvar_dump($object::C);   // int(3)\nvar_dump(MyClass::$b);  // int(2)\nvar_dump(MyClass::C);   // int(3)\nvar_dump($object-\u003ed()); // int(4)\nvar_dump($object::d()); // int(4)\nvar_dump(MyClass::e()); // int(5)\n$classname = \"MyClass\";\nvar_dump($classname::e()); // also works! int(5)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022718096,
        "id": "1c28829b-048c-4ee4-ba16-3773a3c3eb93",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022718096,
        "parent_id": "36d73afa-adb5-426f-b1c0-9c5c967b7230",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that after the object operator, the "
            ],
            [
              "$",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " should not be written ("
            ],
            [
              "$object-\u003ea",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instead of "
            ],
            [
              "$object-\u003e$a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "). For the class operator, this is not the case and the "
            ],
            [
              "$",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is necessary. For a constant defined in the class, the "
            ],
            [
              "$",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is never used."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that after the object operator, the "
          },
          {
            "Text": "$",
            "AttrFlags": 2
          },
          {
            "Text": " should not be written ("
          },
          {
            "Text": "$object-\u003ea",
            "AttrFlags": 2
          },
          {
            "Text": " instead of "
          },
          {
            "Text": "$object-\u003e$a",
            "AttrFlags": 2
          },
          {
            "Text": "). For the class operator, this is not the case and the "
          },
          {
            "Text": "$",
            "AttrFlags": 2
          },
          {
            "Text": " is necessary. For a constant defined in the class, the "
          },
          {
            "Text": "$",
            "AttrFlags": 2
          },
          {
            "Text": " is never used."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022718096,
        "id": "adbca4c2-d77f-43e2-98a6-07252d750559",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022718096,
        "parent_id": "36d73afa-adb5-426f-b1c0-9c5c967b7230",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Also note that "
            ],
            [
              "var_dump(MyClass::d());",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is only allowed if the function "
            ],
            [
              "d()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " does "
            ],
            [
              "not",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " reference the object:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Also note that "
          },
          {
            "Text": "var_dump(MyClass::d());",
            "AttrFlags": 2
          },
          {
            "Text": " is only allowed if the function "
          },
          {
            "Text": "d()",
            "AttrFlags": 2
          },
          {
            "Text": " does "
          },
          {
            "Text": "not",
            "AttrFlags": 4
          },
          {
            "Text": " reference the object:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022718096,
        "id": "13fdccde-1187-4777-9e8b-b4c8e5a6b85d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022718097,
        "parent_id": "36d73afa-adb5-426f-b1c0-9c5c967b7230",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class MyClass {\n    private $a = 1;\n    public function d() {\n        return $this-\u003ea;\n    }\n}\n\n$object = new MyClass();\nvar_dump(MyClass::d());   // Error!"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class MyClass {\n    private $a = 1;\n    public function d() {\n        return $this-\u003ea;\n    }\n}\n\n$object = new MyClass();\nvar_dump(MyClass::d());   // Error!",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022718097,
        "id": "cb78edfd-6447-4aa0-a7a4-a351aae59635",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022718097,
        "parent_id": "36d73afa-adb5-426f-b1c0-9c5c967b7230",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This causes a ‘PHP Fatal error: Uncaught Error: Using $this when not in object context’"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This causes a ‘PHP Fatal error: Uncaught Error: Using $this when not in object context’"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022718097,
        "id": "07cd4512-7100-4a2d-b998-68d57b1930ec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022718097,
        "parent_id": "36d73afa-adb5-426f-b1c0-9c5c967b7230",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These operators have "
            ],
            [
              "left",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " associativity, which can be used for ‘chaining’:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These operators have "
          },
          {
            "Text": "left",
            "AttrFlags": 4
          },
          {
            "Text": " associativity, which can be used for ‘chaining’:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022718097,
        "id": "69acfdae-7dbc-454d-98b1-f1cd5174da78",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022718097,
        "parent_id": "36d73afa-adb5-426f-b1c0-9c5c967b7230",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class MyClass {\n    private $a = 1;\n    \n    public function add(int $a) {\n        $this-\u003ea += $a;\n        return $this;\n    }\n    \n    public function get() {\n        return $this-\u003ea;\n    }\n}\n\n$object = new MyClass();\nvar_dump($object-\u003eadd(4)-\u003eget());  // int(5)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class MyClass {\n    private $a = 1;\n    \n    public function add(int $a) {\n        $this-\u003ea += $a;\n        return $this;\n    }\n    \n    public function get() {\n        return $this-\u003ea;\n    }\n}\n\n$object = new MyClass();\nvar_dump($object-\u003eadd(4)-\u003eget());  // int(5)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022718097,
        "id": "51e1b078-ec05-406e-8ae7-4bc15ee19afc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022718097,
        "parent_id": "36d73afa-adb5-426f-b1c0-9c5c967b7230",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These operators have the highest precedence (they are not even mentioned in the manual), even higher that "
            ],
            [
              "clone",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Thus:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These operators have the highest precedence (they are not even mentioned in the manual), even higher that "
          },
          {
            "Text": "clone",
            "AttrFlags": 2
          },
          {
            "Text": ". Thus:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022718097,
        "id": "a14dd603-6f9e-4d03-8e44-2c427478300b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022718097,
        "parent_id": "36d73afa-adb5-426f-b1c0-9c5c967b7230",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class MyClass {\n    private $a = 0;\n    public function add(int $a) {\n        $this-\u003ea += $a;\n        return $this;\n    }\n    public function get() {\n        return $this-\u003ea;\n    }\n}\n\n$o1 = new MyClass();\n$o2 = clone $o1-\u003eadd(2);\nvar_dump($o1-\u003eget()); // int(2)\nvar_dump($o2-\u003eget()); // int(2)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class MyClass {\n    private $a = 0;\n    public function add(int $a) {\n        $this-\u003ea += $a;\n        return $this;\n    }\n    public function get() {\n        return $this-\u003ea;\n    }\n}\n\n$o1 = new MyClass();\n$o2 = clone $o1-\u003eadd(2);\nvar_dump($o1-\u003eget()); // int(2)\nvar_dump($o2-\u003eget()); // int(2)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022718098,
        "id": "ff86f9f2-2ee9-4671-818b-0246b0ecb134",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022718098,
        "parent_id": "36d73afa-adb5-426f-b1c0-9c5c967b7230",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The value of "
            ],
            [
              "$o1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is added to "
            ],
            [
              "before",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " the object is cloned!"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The value of "
          },
          {
            "Text": "$o1",
            "AttrFlags": 2
          },
          {
            "Text": " is added to "
          },
          {
            "Text": "before",
            "AttrFlags": 4
          },
          {
            "Text": " the object is cloned!"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022718098,
        "id": "6bcd7a89-101f-4daf-a9d3-ddadf10824db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022718098,
        "parent_id": "36d73afa-adb5-426f-b1c0-9c5c967b7230",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that using parentheses to influence precedence did not work in PHP version 5 and older (it does in PHP 7):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that using parentheses to influence precedence did not work in PHP version 5 and older (it does in PHP 7):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022718098,
        "id": "a217a327-36bf-4407-b6d9-ab06c8b3765f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022718098,
        "parent_id": "36d73afa-adb5-426f-b1c0-9c5c967b7230",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// using the class MyClass from the previous code\n$o1 = new MyClass();\n$o2 = (clone $o1)-\u003eadd(2);  // Error in PHP 5 and before, fine in PHP 7\nvar_dump($o1-\u003eget()); // int(0) in PHP 7\nvar_dump($o2-\u003eget()); // int(2) in PHP 7"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// using the class MyClass from the previous code\n$o1 = new MyClass();\n$o2 = (clone $o1)-\u003eadd(2);  // Error in PHP 5 and before, fine in PHP 7\nvar_dump($o1-\u003eget()); // int(0) in PHP 7\nvar_dump($o2-\u003eget()); // int(2) in PHP 7",
        "code_language": "Plain Text"
      }
    ],
    "title": "Object and Class Operators",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}