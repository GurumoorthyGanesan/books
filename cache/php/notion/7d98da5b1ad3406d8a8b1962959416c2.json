{
  "ID": "7d98da5b-1ad3-406d-8a8b-1962959416c2",
  "Root": {
    "alive": true,
    "content": [
      "fecdfaf7-80d7-4430-b043-103886ce8b0e",
      "3ec6156f-9b98-4fbe-aecd-b772ba20347d",
      "9fea8dac-afac-4e39-999c-b9d4e38b14a0",
      "a9735afa-e6d0-4bae-b70a-c3cfda82b558",
      "c8113d89-2e80-492e-9eb9-550633dcce79",
      "68e8ff2d-2666-4b3d-a09a-177f5c35e5a5"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552023056344,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "7d98da5b-1ad3-406d-8a8b-1962959416c2",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552023056344,
    "parent_id": "e738bef3-04ad-47b8-abdb-d2ff70319024",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Handling Program Options"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023056343,
        "id": "fecdfaf7-80d7-4430-b043-103886ce8b0e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023056343,
        "parent_id": "7d98da5b-1ad3-406d-8a8b-1962959416c2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Program options can be handled with the "
            ],
            [
              "getopt()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function. It operates with a similar syntax to the POSIX "
            ],
            [
              "getopt",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " command, with additional support for GNU-style long options."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Program options can be handled with the "
          },
          {
            "Text": "getopt()",
            "AttrFlags": 2
          },
          {
            "Text": " function. It operates with a similar syntax to the POSIX "
          },
          {
            "Text": "getopt",
            "AttrFlags": 2
          },
          {
            "Text": " command, with additional support for GNU-style long options."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023056343,
        "id": "3ec6156f-9b98-4fbe-aecd-b772ba20347d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023056343,
        "parent_id": "7d98da5b-1ad3-406d-8a8b-1962959416c2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#!/usr/bin/php\n\n// a single colon indicates the option takes a value\n// a double colon indicates the value may be omitted\n$shortopts = \"hf:v::d\";\n// GNU-style long options are not required\n$longopts = [\"help\", \"version\"];\n$opts = getopt($shortopts, $longopts);\n\n// options without values are assigned a value of boolean false\n// you must check their existence, not their truthiness\nif (isset($opts[\"h\"]) || isset($opts[\"help\"])) {\n    fprintf(STDERR, \"Here is some help!\\n\");\n    exit;\n}\n\n// long options are called with two hyphens: \"--version\"\nif (isset($opts[\"version\"])) {\n    fprintf(STDERR, \"%s Version 223.45\" . PHP_EOL, $argv[0]);\n    exit;\n}\n\n// options with values can be called like \"-f foo\", \"-ffoo\", or \"-f=foo\"\n$file = \"\";\nif (isset($opts[\"f\"])) {\n    $file = $opts[\"f\"];\n}\nif (empty($file)) {\n    fprintf(STDERR, \"We wanted a file!\" . PHP_EOL);\n    exit(1);\n}\nfprintf(STDOUT, \"File is %s\" . PHP_EOL, $file);\n\n// options with optional values must be called like \"-v5\" or \"-v=5\"\n$verbosity = 0;\nif (isset($opts[\"v\"])) {\n    $verbosity = ($opts[\"v\"] === false) ? 1 : (int)$opts[\"v\"];\n}\nfprintf(STDOUT, \"Verbosity is %d\" . PHP_EOL, $verbosity);\n\n// options called multiple times are passed as an array\n$debug = 0;\nif (isset($opts[\"d\"])) {\n    $debug = is_array($opts[\"d\"]) ? count($opts[\"d\"]) : 1;\n}\nfprintf(STDOUT, \"Debug is %d\" . PHP_EOL, $debug);\n\n// there is no automated way for getopt to handle unexpected options"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#!/usr/bin/php\n\n// a single colon indicates the option takes a value\n// a double colon indicates the value may be omitted\n$shortopts = \"hf:v::d\";\n// GNU-style long options are not required\n$longopts = [\"help\", \"version\"];\n$opts = getopt($shortopts, $longopts);\n\n// options without values are assigned a value of boolean false\n// you must check their existence, not their truthiness\nif (isset($opts[\"h\"]) || isset($opts[\"help\"])) {\n    fprintf(STDERR, \"Here is some help!\\n\");\n    exit;\n}\n\n// long options are called with two hyphens: \"--version\"\nif (isset($opts[\"version\"])) {\n    fprintf(STDERR, \"%s Version 223.45\" . PHP_EOL, $argv[0]);\n    exit;\n}\n\n// options with values can be called like \"-f foo\", \"-ffoo\", or \"-f=foo\"\n$file = \"\";\nif (isset($opts[\"f\"])) {\n    $file = $opts[\"f\"];\n}\nif (empty($file)) {\n    fprintf(STDERR, \"We wanted a file!\" . PHP_EOL);\n    exit(1);\n}\nfprintf(STDOUT, \"File is %s\" . PHP_EOL, $file);\n\n// options with optional values must be called like \"-v5\" or \"-v=5\"\n$verbosity = 0;\nif (isset($opts[\"v\"])) {\n    $verbosity = ($opts[\"v\"] === false) ? 1 : (int)$opts[\"v\"];\n}\nfprintf(STDOUT, \"Verbosity is %d\" . PHP_EOL, $verbosity);\n\n// options called multiple times are passed as an array\n$debug = 0;\nif (isset($opts[\"d\"])) {\n    $debug = is_array($opts[\"d\"]) ? count($opts[\"d\"]) : 1;\n}\nfprintf(STDOUT, \"Debug is %d\" . PHP_EOL, $debug);\n\n// there is no automated way for getopt to handle unexpected options",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023056344,
        "id": "9fea8dac-afac-4e39-999c-b9d4e38b14a0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023056344,
        "parent_id": "7d98da5b-1ad3-406d-8a8b-1962959416c2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This script can be tested like so:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This script can be tested like so:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023056344,
        "id": "a9735afa-e6d0-4bae-b70a-c3cfda82b558",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023056344,
        "parent_id": "7d98da5b-1ad3-406d-8a8b-1962959416c2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "./test.php --help\n./test.php --version\n./test.php -f foo -ddd\n./test.php -v -d -ffoo\n./test.php -v5 -f=foo\n./test.php -f foo -v 5 -d"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "./test.php --help\n./test.php --version\n./test.php -f foo -ddd\n./test.php -v -d -ffoo\n./test.php -v5 -f=foo\n./test.php -f foo -v 5 -d",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023056344,
        "id": "c8113d89-2e80-492e-9eb9-550633dcce79",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023056344,
        "parent_id": "7d98da5b-1ad3-406d-8a8b-1962959416c2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note the last method will not work because "
            ],
            [
              "-v 5",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not valid."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note the last method will not work because "
          },
          {
            "Text": "-v 5",
            "AttrFlags": 2
          },
          {
            "Text": " is not valid."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023056344,
        "id": "68e8ff2d-2666-4b3d-a09a-177f5c35e5a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023056344,
        "parent_id": "7d98da5b-1ad3-406d-8a8b-1962959416c2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: As of PHP 5.3.0, getopt is OS independent, working also on Windows."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: As of PHP 5.3.0, getopt is OS independent, working also on Windows."
          }
        ]
      }
    ],
    "title": "Handling Program Options",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}