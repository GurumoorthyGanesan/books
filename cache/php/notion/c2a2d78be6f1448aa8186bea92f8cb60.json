{
  "ID": "c2a2d78b-e6f1-448a-a818-6bea92f8cb60",
  "Root": {
    "alive": true,
    "content": [
      "f1a1cfd4-a66f-4d6c-aae5-0393918f0c44",
      "9702631f-687e-44d7-ac96-3b5705eedb1a",
      "6374f583-6367-4c91-b4f1-c266ae0eb91c",
      "0e662bf7-3ba2-4aab-a256-544344bb55bd",
      "4f630dac-5416-4667-bc28-e10b78760b8b",
      "6563c09b-9592-4bd6-a7e8-f3dc1a97663b",
      "01f04706-a6c5-4d19-8b3b-1dd285d70a1d",
      "1606735f-1529-4250-984c-04b651f3843b",
      "f2870d0d-f3b6-4eb2-89b9-ea9d57c9bf34",
      "56c9455f-d25b-4d58-b036-3863106646dc",
      "d0fdfd4c-caa8-4d90-9db7-42c1e9833100",
      "3f581db9-33ac-4aad-944b-3eef951cf6e9",
      "ac3a2563-6241-48f1-9c19-00771874fcef",
      "f9cd2871-e1cf-4aa2-9fec-378790a15f18",
      "181e58d1-70d5-4826-b01c-353328faa132",
      "abbb8fbd-e361-4fe9-b999-113ed64ef13a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552022300230,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c2a2d78b-e6f1-448a-a818-6bea92f8cb60",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552022300230,
    "parent_id": "78acf98d-751b-413c-b0ef-3d520c041518",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Strings"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022300214,
        "id": "f1a1cfd4-a66f-4d6c-aae5-0393918f0c44",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022300214,
        "parent_id": "c2a2d78b-e6f1-448a-a818-6bea92f8cb60",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A string in PHP is a series of single-byte characters (i.e. there is no native Unicode support) that can be specified in four ways:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A string in PHP is a series of single-byte characters (i.e. there is no native Unicode support) that can be specified in four ways:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022300215,
        "id": "9702631f-687e-44d7-ac96-3b5705eedb1a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022300215,
        "parent_id": "c2a2d78b-e6f1-448a-a818-6bea92f8cb60",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Single Quoted"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Single Quoted"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022300227,
        "id": "6374f583-6367-4c91-b4f1-c266ae0eb91c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022300227,
        "parent_id": "c2a2d78b-e6f1-448a-a818-6bea92f8cb60",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Displays things almost completely “as is”. Variables and most escape sequences will not be interpreted. The exception is that to display a literal single quote, one can escape it with a back slash ', and to display a back slash, one can escape it with another backslash \\"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Displays things almost completely “as is”. Variables and most escape sequences will not be interpreted. The exception is that to display a literal single quote, one can escape it with a back slash ', and to display a back slash, one can escape it with another backslash \\"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022300228,
        "id": "0e662bf7-3ba2-4aab-a256-544344bb55bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022300228,
        "parent_id": "c2a2d78b-e6f1-448a-a818-6bea92f8cb60",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$my_string = 'Nothing is parsed, except an escap\\'d apostrophe or backslash. $foo\\n';\nvar_dump($my_string);\n\n/*\nstring(68) \"Nothing is parsed, except an escap'd apostrophe or backslash. $foo\\n\"\n*/"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$my_string = 'Nothing is parsed, except an escap\\'d apostrophe or backslash. $foo\\n';\nvar_dump($my_string);\n\n/*\nstring(68) \"Nothing is parsed, except an escap'd apostrophe or backslash. $foo\\n\"\n*/",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022300228,
        "id": "4f630dac-5416-4667-bc28-e10b78760b8b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022300228,
        "parent_id": "c2a2d78b-e6f1-448a-a818-6bea92f8cb60",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022300228,
        "id": "6563c09b-9592-4bd6-a7e8-f3dc1a97663b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022300228,
        "parent_id": "c2a2d78b-e6f1-448a-a818-6bea92f8cb60",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Double Quoted"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Double Quoted"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022300229,
        "id": "01f04706-a6c5-4d19-8b3b-1dd285d70a1d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022300229,
        "parent_id": "c2a2d78b-e6f1-448a-a818-6bea92f8cb60",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Unlike a single-quoted string, simple variable names and "
            ],
            [
              "escape sequences",
              [
                [
                  "a",
                  "http://php.net/manual/en/language.types.string.php#language.types.string.syntax.double"
                ]
              ]
            ],
            [
              " in the strings will be evaluated. Curly braces (as in the last example) can be used to isolate complex variable names."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Unlike a single-quoted string, simple variable names and "
          },
          {
            "Text": "escape sequences",
            "Link": "http://php.net/manual/en/language.types.string.php#language.types.string.syntax.double"
          },
          {
            "Text": " in the strings will be evaluated. Curly braces (as in the last example) can be used to isolate complex variable names."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022300229,
        "id": "1606735f-1529-4250-984c-04b651f3843b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022300229,
        "parent_id": "c2a2d78b-e6f1-448a-a818-6bea92f8cb60",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$variable1 = \"Testing!\";\n$variable2 = [ \"Testing?\", [ \"Failure\", \"Success\" ] ];\n$my_string = \"Variables and escape characters are parsed:\\n\\n\";\n$my_string .= \"$variable1\\n\\n$variable2[0]\\n\\n\";\n$my_string .= \"There are limits: $variable2[1][0]\";\n$my_string .= \"But we can get around them by wrapping the whole variable in braces: {$variable2[1][1]}\";\nvar_dump($my_string);\n\n/*\nstring(98) \"Variables and escape characters are parsed:\n\nTesting!\n\nTesting?\n\nThere are limits: Array[0]\"\n\nBut we can get around them by wrapping the whole variable in braces: Success\n\n*/"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$variable1 = \"Testing!\";\n$variable2 = [ \"Testing?\", [ \"Failure\", \"Success\" ] ];\n$my_string = \"Variables and escape characters are parsed:\\n\\n\";\n$my_string .= \"$variable1\\n\\n$variable2[0]\\n\\n\";\n$my_string .= \"There are limits: $variable2[1][0]\";\n$my_string .= \"But we can get around them by wrapping the whole variable in braces: {$variable2[1][1]}\";\nvar_dump($my_string);\n\n/*\nstring(98) \"Variables and escape characters are parsed:\n\nTesting!\n\nTesting?\n\nThere are limits: Array[0]\"\n\nBut we can get around them by wrapping the whole variable in braces: Success\n\n*/",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022300229,
        "id": "f2870d0d-f3b6-4eb2-89b9-ea9d57c9bf34",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022300229,
        "parent_id": "c2a2d78b-e6f1-448a-a818-6bea92f8cb60",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022300229,
        "id": "56c9455f-d25b-4d58-b036-3863106646dc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022300229,
        "parent_id": "c2a2d78b-e6f1-448a-a818-6bea92f8cb60",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Heredoc"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Heredoc"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022300230,
        "id": "d0fdfd4c-caa8-4d90-9db7-42c1e9833100",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022300230,
        "parent_id": "c2a2d78b-e6f1-448a-a818-6bea92f8cb60",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In a heredoc string, variable names and escape sequences are parsed in a similar manner to double-quoted strings, though braces are not available for complex variable names. The start of the string is delimited by "
            ],
            [
              "\u003c\u003c\u003c",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "identifier",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              ", and the end by "
            ],
            [
              "identifier",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              ", where "
            ],
            [
              "identifier",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " is any valid PHP name. The ending identifier must appear on a line by itself. No whitespace is allowed before or after the identifier, although like any line in PHP, it must also be terminated by a semicolon."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In a heredoc string, variable names and escape sequences are parsed in a similar manner to double-quoted strings, though braces are not available for complex variable names. The start of the string is delimited by "
          },
          {
            "Text": "\u003c\u003c\u003c",
            "AttrFlags": 2
          },
          {
            "Text": "identifier",
            "AttrFlags": 6
          },
          {
            "Text": ", and the end by "
          },
          {
            "Text": "identifier",
            "AttrFlags": 6
          },
          {
            "Text": ", where "
          },
          {
            "Text": "identifier",
            "AttrFlags": 6
          },
          {
            "Text": " is any valid PHP name. The ending identifier must appear on a line by itself. No whitespace is allowed before or after the identifier, although like any line in PHP, it must also be terminated by a semicolon."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022300230,
        "id": "3f581db9-33ac-4aad-944b-3eef951cf6e9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022300230,
        "parent_id": "c2a2d78b-e6f1-448a-a818-6bea92f8cb60",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$variable1 = \"Including text blocks is easier\";\n$my_string = \u003c\u003c\u003c EOF\nEverything is parsed in the same fashion as a double-quoted string,\nbut there are advantages. $variable1; database queries and HTML output\ncan benefit from this formatting.\nOnce we hit a line containing nothing but the identifier, the string ends.\nEOF;\nvar_dump($my_string);\n\n/*\nstring(268) \"Everything is parsed in the same fashion as a double-quoted string,\nbut there are advantages. Including text blocks is easier; database queries and HTML output\ncan benefit from this formatting.\nOnce we hit a line containing nothing but the identifier, the string ends.\"\n*/"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$variable1 = \"Including text blocks is easier\";\n$my_string = \u003c\u003c\u003c EOF\nEverything is parsed in the same fashion as a double-quoted string,\nbut there are advantages. $variable1; database queries and HTML output\ncan benefit from this formatting.\nOnce we hit a line containing nothing but the identifier, the string ends.\nEOF;\nvar_dump($my_string);\n\n/*\nstring(268) \"Everything is parsed in the same fashion as a double-quoted string,\nbut there are advantages. Including text blocks is easier; database queries and HTML output\ncan benefit from this formatting.\nOnce we hit a line containing nothing but the identifier, the string ends.\"\n*/",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022300230,
        "id": "ac3a2563-6241-48f1-9c19-00771874fcef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022300230,
        "parent_id": "c2a2d78b-e6f1-448a-a818-6bea92f8cb60",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022300230,
        "id": "f9cd2871-e1cf-4aa2-9fec-378790a15f18",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022300230,
        "parent_id": "c2a2d78b-e6f1-448a-a818-6bea92f8cb60",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Nowdoc"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Nowdoc"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022300230,
        "id": "181e58d1-70d5-4826-b01c-353328faa132",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022300230,
        "parent_id": "c2a2d78b-e6f1-448a-a818-6bea92f8cb60",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A nowdoc string is like the single-quoted version of heredoc, although not even the most basic escape sequences are evaluated. The identifier at the beginning of the string is wrapped in single quotes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A nowdoc string is like the single-quoted version of heredoc, although not even the most basic escape sequences are evaluated. The identifier at the beginning of the string is wrapped in single quotes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022300230,
        "id": "abbb8fbd-e361-4fe9-b999-113ed64ef13a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022300230,
        "parent_id": "c2a2d78b-e6f1-448a-a818-6bea92f8cb60",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$my_string = \u003c\u003c\u003c 'EOF'\nA similar syntax to heredoc but, similar to single quoted strings,\nnothing is parsed (not even escaped apostrophes \\' and backslashes \\\\.)\nEOF;\nvar_dump($my_string);\n\n/*\nstring(116) \"A similar syntax to heredoc but, similar to single quoted strings,\nnothing is parsed (not even escaped apostrophes \\' and backslashes \\\\.)\"\n*/"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$my_string = \u003c\u003c\u003c 'EOF'\nA similar syntax to heredoc but, similar to single quoted strings,\nnothing is parsed (not even escaped apostrophes \\' and backslashes \\\\.)\nEOF;\nvar_dump($my_string);\n\n/*\nstring(116) \"A similar syntax to heredoc but, similar to single quoted strings,\nnothing is parsed (not even escaped apostrophes \\' and backslashes \\\\.)\"\n*/",
        "code_language": "Plain Text"
      }
    ],
    "title": "Strings",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}