{
  "ID": "5fa9cd1f-8004-404d-ba44-cf6332927842",
  "Root": {
    "alive": true,
    "content": [
      "b173b265-e7ad-4d12-9d8c-30619b981d77",
      "5d3e0121-b343-463e-a870-c2dfe86348ce",
      "ca2ad4df-0d72-4dc9-8d1c-d8fb3e8d835a",
      "c0c5d580-95bd-4b8d-a49d-63462e5d5cb9"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552022731168,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "5fa9cd1f-8004-404d-ba44-cf6332927842",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552022731168,
    "parent_id": "80fa00b7-710d-4ce0-a406-927876f8600b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Input"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022731167,
        "id": "b173b265-e7ad-4d12-9d8c-30619b981d77",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022731167,
        "parent_id": "5fa9cd1f-8004-404d-ba44-cf6332927842",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You should verify every received string as being valid UTF-8 before you try to store it or use it anywhere. PHP’s "
            ],
            [
              "mb_check_encoding()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://php.net/manual/en/function.mb-check-encoding.php"
                ]
              ]
            ],
            [
              " does the trick, but you have to use it consistently. There’s really no way around this, as malicious clients can submit data in whatever encoding they want."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "You should verify every received string as being valid UTF-8 before you try to store it or use it anywhere. PHP’s "
          },
          {
            "Text": "mb_check_encoding()",
            "AttrFlags": 2,
            "Link": "http://php.net/manual/en/function.mb-check-encoding.php"
          },
          {
            "Text": " does the trick, but you have to use it consistently. There’s really no way around this, as malicious clients can submit data in whatever encoding they want."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022731167,
        "id": "5d3e0121-b343-463e-a870-c2dfe86348ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022731167,
        "parent_id": "5fa9cd1f-8004-404d-ba44-cf6332927842",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$string = $_REQUEST['user_comment'];\nif (!mb_check_encoding($string, 'UTF-8')) {\n    // the string is not UTF-8, so re-encode it.\n    $actualEncoding = mb_detect_encoding($string);\n    $string = mb_convert_encoding($string, 'UTF-8', $actualEncoding);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$string = $_REQUEST['user_comment'];\nif (!mb_check_encoding($string, 'UTF-8')) {\n    // the string is not UTF-8, so re-encode it.\n    $actualEncoding = mb_detect_encoding($string);\n    $string = mb_convert_encoding($string, 'UTF-8', $actualEncoding);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022731168,
        "id": "ca2ad4df-0d72-4dc9-8d1c-d8fb3e8d835a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022731168,
        "parent_id": "5fa9cd1f-8004-404d-ba44-cf6332927842",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you’re using HTML5 then you can ignore this last point.",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " You want all data sent to you by browsers to be in UTF-8. The only reliable way to do this is to add the "
            ],
            [
              "accept-charset",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " attribute to all of your "
            ],
            [
              "\u003cform\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " tags like so:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you’re using HTML5 then you can ignore this last point.",
            "AttrFlags": 1
          },
          {
            "Text": " You want all data sent to you by browsers to be in UTF-8. The only reliable way to do this is to add the "
          },
          {
            "Text": "accept-charset",
            "AttrFlags": 2
          },
          {
            "Text": " attribute to all of your "
          },
          {
            "Text": "\u003cform\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " tags like so:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022731168,
        "id": "c0c5d580-95bd-4b8d-a49d-63462e5d5cb9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022731168,
        "parent_id": "5fa9cd1f-8004-404d-ba44-cf6332927842",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003cform action=\"somepage.php\" accept-charset=\"UTF-8\"\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003cform action=\"somepage.php\" accept-charset=\"UTF-8\"\u003e",
        "code_language": "Plain Text"
      }
    ],
    "title": "Input",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}