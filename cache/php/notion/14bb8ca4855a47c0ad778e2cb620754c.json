{
  "ID": "14bb8ca4-855a-47c0-ad77-8e2cb620754c",
  "Root": {
    "alive": true,
    "content": [
      "13008bb2-8ffa-4ef8-a7d1-872207db615c",
      "25383e26-845c-4608-8ce4-af19116b11ec",
      "59ffb79e-1a97-46dd-824c-98fbd61065fe",
      "1a7bf532-68f7-4f6a-ad58-0afd2a43a56d",
      "bda0332c-3a81-48d6-8eaa-c5bff9aa309b",
      "b586de07-e8bb-4ed4-9462-4a94d1e41fa5"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552023090276,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "14bb8ca4-855a-47c0-ad77-8e2cb620754c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552023090276,
    "parent_id": "8aad07a8-ece6-477b-8cf0-8ad575a906a8",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Test exceptions"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023090271,
        "id": "13008bb2-8ffa-4ef8-a7d1-872207db615c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023090271,
        "parent_id": "14bb8ca4-855a-47c0-ad77-8e2cb620754c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s say you want to test method which throws an exception"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s say you want to test method which throws an exception"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023090273,
        "id": "25383e26-845c-4608-8ce4-af19116b11ec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023090273,
        "parent_id": "14bb8ca4-855a-47c0-ad77-8e2cb620754c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Car\n{\n    /**\n     * @throws \\Exception\n     */\n    public function drive()\n    {\n        throw new \\Exception('Useful message', 1);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Car\n{\n    /**\n     * @throws \\Exception\n     */\n    public function drive()\n    {\n        throw new \\Exception('Useful message', 1);\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023090275,
        "id": "59ffb79e-1a97-46dd-824c-98fbd61065fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023090275,
        "parent_id": "14bb8ca4-855a-47c0-ad77-8e2cb620754c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can do that by enclosing the method call into a try/catch block and making assertions on execption object’s properties, but more conveniently you can use exception assertion methods. As of "
            ],
            [
              "PHPUnit 5.2",
              [
                [
                  "a",
                  "https://github.com/sebastianbergmann/phpunit/wiki/Release-Announcement-for-PHPUnit-5.2.0"
                ]
              ]
            ],
            [
              " you have expectX() methods available for asserting exception type, message \u0026 code"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can do that by enclosing the method call into a try/catch block and making assertions on execption object’s properties, but more conveniently you can use exception assertion methods. As of "
          },
          {
            "Text": "PHPUnit 5.2",
            "Link": "https://github.com/sebastianbergmann/phpunit/wiki/Release-Announcement-for-PHPUnit-5.2.0"
          },
          {
            "Text": " you have expectX() methods available for asserting exception type, message \u0026 code"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023090275,
        "id": "1a7bf532-68f7-4f6a-ad58-0afd2a43a56d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023090275,
        "parent_id": "14bb8ca4-855a-47c0-ad77-8e2cb620754c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class DriveTest extends PHPUnit_Framework_TestCase\n{\n    public function testDrive()\n    {\n        // prepare\n        $car = new \\Car();\n        $expectedClass = \\Exception::class;\n        $expectedMessage = 'Useful message';\n        $expectedCode = 1;\n\n        // test\n        $this-\u003eexpectException($expectedClass);\n        $this-\u003eexpectMessage($expectedMessage);\n        $this-\u003eexpectCode($expectedCode);\n\n        // invoke\n        $car-\u003edrive();\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class DriveTest extends PHPUnit_Framework_TestCase\n{\n    public function testDrive()\n    {\n        // prepare\n        $car = new \\Car();\n        $expectedClass = \\Exception::class;\n        $expectedMessage = 'Useful message';\n        $expectedCode = 1;\n\n        // test\n        $this-\u003eexpectException($expectedClass);\n        $this-\u003eexpectMessage($expectedMessage);\n        $this-\u003eexpectCode($expectedCode);\n\n        // invoke\n        $car-\u003edrive();\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023090276,
        "id": "bda0332c-3a81-48d6-8eaa-c5bff9aa309b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023090276,
        "parent_id": "14bb8ca4-855a-47c0-ad77-8e2cb620754c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you are using earlier version of PHPUnit, method setExpectedException can be used in stead of expectX() methods, but keep in mind that it’s deprecated and will be removed in version 6."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you are using earlier version of PHPUnit, method setExpectedException can be used in stead of expectX() methods, but keep in mind that it’s deprecated and will be removed in version 6."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552023090276,
        "id": "b586de07-e8bb-4ed4-9462-4a94d1e41fa5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552023090276,
        "parent_id": "14bb8ca4-855a-47c0-ad77-8e2cb620754c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class DriveTest extends PHPUnit_Framework_TestCase\n{\n    public function testDrive()\n    {\n        // prepare\n        $car = new \\Car();\n        $expectedClass = \\Exception::class;\n        $expectedMessage = 'Useful message';\n        $expectedCode = 1;\n\n        // test\n        $this-\u003esetExpectedException($expectedClass, $expectedMessage, $expectedCode);\n\n        // invoke\n        $car-\u003edrive();\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class DriveTest extends PHPUnit_Framework_TestCase\n{\n    public function testDrive()\n    {\n        // prepare\n        $car = new \\Car();\n        $expectedClass = \\Exception::class;\n        $expectedMessage = 'Useful message';\n        $expectedCode = 1;\n\n        // test\n        $this-\u003esetExpectedException($expectedClass, $expectedMessage, $expectedCode);\n\n        // invoke\n        $car-\u003edrive();\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Test exceptions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}