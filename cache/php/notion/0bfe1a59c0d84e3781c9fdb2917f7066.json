{
  "ID": "0bfe1a59-c0d8-4e37-81c9-fdb2917f7066",
  "Root": {
    "alive": true,
    "content": [
      "1587ef17-4975-4463-b745-d2a03f0b7788",
      "a6425b5d-fbf7-410b-a767-b3571012c50d",
      "9b967f28-a66e-444f-b1cf-94980e94fa51",
      "e1914116-6576-4966-b43f-d04963cd52f3",
      "f9046227-0a65-4afa-a87e-317fd75af116",
      "cd59b6ed-d2e7-472f-ade9-d5c7ba55b821",
      "36c9af76-cbcc-4a8c-a971-c8f7d3e6485b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552022712075,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "0bfe1a59-c0d8-4e37-81c9-fdb2917f7066",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552022712075,
    "parent_id": "98823712-1c98-4a43-8727-0a1d762add3b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Spaceship Operator"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022712071,
        "id": "1587ef17-4975-4463-b745-d2a03f0b7788",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022712071,
        "parent_id": "0bfe1a59-c0d8-4e37-81c9-fdb2917f7066",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "PHP 7 introduces a new kind of operator, which can be used to compare expressions. This operator will return -1, 0 or 1 if the first expression is less than, equal to, or greater than the second expression."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "PHP 7 introduces a new kind of operator, which can be used to compare expressions. This operator will return -1, 0 or 1 if the first expression is less than, equal to, or greater than the second expression."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022712074,
        "id": "a6425b5d-fbf7-410b-a767-b3571012c50d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022712074,
        "parent_id": "0bfe1a59-c0d8-4e37-81c9-fdb2917f7066",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Integers\nprint (1 \u003c=\u003e 1); // 0\nprint (1 \u003c=\u003e 2); // -1\nprint (2 \u003c=\u003e 1); // 1\n\n// Floats\nprint (1.5 \u003c=\u003e 1.5); // 0\nprint (1.5 \u003c=\u003e 2.5); // -1\nprint (2.5 \u003c=\u003e 1.5); // 1\n \n// Strings\nprint (\"a\" \u003c=\u003e \"a\"); // 0\nprint (\"a\" \u003c=\u003e \"b\"); // -1\nprint (\"b\" \u003c=\u003e \"a\"); // 1"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Integers\nprint (1 \u003c=\u003e 1); // 0\nprint (1 \u003c=\u003e 2); // -1\nprint (2 \u003c=\u003e 1); // 1\n\n// Floats\nprint (1.5 \u003c=\u003e 1.5); // 0\nprint (1.5 \u003c=\u003e 2.5); // -1\nprint (2.5 \u003c=\u003e 1.5); // 1\n \n// Strings\nprint (\"a\" \u003c=\u003e \"a\"); // 0\nprint (\"a\" \u003c=\u003e \"b\"); // -1\nprint (\"b\" \u003c=\u003e \"a\"); // 1",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022712074,
        "id": "9b967f28-a66e-444f-b1cf-94980e94fa51",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022712074,
        "parent_id": "0bfe1a59-c0d8-4e37-81c9-fdb2917f7066",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Objects are not comparable, and so doing so will result in undefined behaviour."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Objects are not comparable, and so doing so will result in undefined behaviour."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022712074,
        "id": "e1914116-6576-4966-b43f-d04963cd52f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022712074,
        "parent_id": "0bfe1a59-c0d8-4e37-81c9-fdb2917f7066",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This operator is particularly useful when writing a user-defined comparison function using "
            ],
            [
              "usort",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "uasort",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", or "
            ],
            [
              "uksort",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Given an array of objects to be sorted by their "
            ],
            [
              "weight",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " property, for example, an anonymous function can use "
            ],
            [
              "\u003c=\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to return the value expected by the sorting functions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This operator is particularly useful when writing a user-defined comparison function using "
          },
          {
            "Text": "usort",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "uasort",
            "AttrFlags": 2
          },
          {
            "Text": ", or "
          },
          {
            "Text": "uksort",
            "AttrFlags": 2
          },
          {
            "Text": ". Given an array of objects to be sorted by their "
          },
          {
            "Text": "weight",
            "AttrFlags": 2
          },
          {
            "Text": " property, for example, an anonymous function can use "
          },
          {
            "Text": "\u003c=\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " to return the value expected by the sorting functions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022712074,
        "id": "f9046227-0a65-4afa-a87e-317fd75af116",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022712074,
        "parent_id": "0bfe1a59-c0d8-4e37-81c9-fdb2917f7066",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "usort($list, function($a, $b) { return $a-\u003eweight \u003c=\u003e $b-\u003eweight; });"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "usort($list, function($a, $b) { return $a-\u003eweight \u003c=\u003e $b-\u003eweight; });",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022712074,
        "id": "cd59b6ed-d2e7-472f-ade9-d5c7ba55b821",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022712074,
        "parent_id": "0bfe1a59-c0d8-4e37-81c9-fdb2917f7066",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In PHP 5 this would have required a rather more elaborate expression."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In PHP 5 this would have required a rather more elaborate expression."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552022712075,
        "id": "36c9af76-cbcc-4a8c-a971-c8f7d3e6485b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552022712075,
        "parent_id": "0bfe1a59-c0d8-4e37-81c9-fdb2917f7066",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "usort($list, function($a, $b) {\n    return $a-\u003eweight \u003c $b-\u003eweight ? -1 : ($a-\u003eweight == $b-\u003eweight ? 0 : 1);\n});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "usort($list, function($a, $b) {\n    return $a-\u003eweight \u003c $b-\u003eweight ? -1 : ($a-\u003eweight == $b-\u003eweight ? 0 : 1);\n});",
        "code_language": "Plain Text"
      }
    ],
    "title": "Spaceship Operator",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}