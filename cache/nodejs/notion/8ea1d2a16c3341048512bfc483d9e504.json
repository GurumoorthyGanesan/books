{
  "ID": "8ea1d2a1-6c33-4104-8512-bfc483d9e504",
  "Root": {
    "alive": true,
    "content": [
      "e276dfeb-6f83-49ec-849a-48973981790d",
      "fa74e7c8-32aa-46e1-abdc-288fd8c94baf"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552020701112,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "8ea1d2a1-6c33-4104-8512-bfc483d9e504",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552020701112,
    "parent_id": "9b0f6705-5ace-4c7d-97df-6ea6c684a487",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Hello to N-API"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020701110,
        "id": "e276dfeb-6f83-49ec-849a-48973981790d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020701110,
        "parent_id": "8ea1d2a1-6c33-4104-8512-bfc483d9e504",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This module register hello function on hello module. hello function prints Hello world on console with "
            ],
            [
              "printf",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and return "
            ],
            [
              "1373",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " from native function into javascript caller."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This module register hello function on hello module. hello function prints Hello world on console with "
          },
          {
            "Text": "printf",
            "AttrFlags": 2
          },
          {
            "Text": " and return "
          },
          {
            "Text": "1373",
            "AttrFlags": 2
          },
          {
            "Text": " from native function into javascript caller."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020701112,
        "id": "fa74e7c8-32aa-46e1-abdc-288fd8c94baf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020701112,
        "parent_id": "8ea1d2a1-6c33-4104-8512-bfc483d9e504",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003cnode_api.h\u003e\n#include \u003cstdio.h\u003e\n\n\nnapi_value say_hello(napi_env env, napi_callback_info info)\n{\n    napi_value retval;\n\n    printf(\"Hello world\\n\");\n\n    napi_create_number(env, 1373, \u0026retval);\n\n    return retval;\n}\n\nvoid init(napi_env env, napi_value exports, napi_value module, void* priv)\n{\n    napi_status status;\n    napi_property_descriptor desc = {\n        /*\n         * String describing the key for the property, encoded as UTF8.\n         */\n        .utf8name = \"hello\",\n        /*\n         * Set this to make the property descriptor object's value property\n         * to be a JavaScript function represented by method.\n         * If this is passed in, set value, getter and setter to NULL (since these members won't be used).\n         */\n        .method = say_hello,\n        /*\n         * A function to call when a get access of the property is performed.\n         * If this is passed in, set value and method to NULL (since these members won't be used).\n         * The given function is called implicitly by the runtime when the property is accessed\n         * from JavaScript code (or if a get on the property is performed using a N-API call).\n         */\n        .getter = NULL,\n        /*\n         * A function to call when a set access of the property is performed.\n         * If this is passed in, set value and method to NULL (since these members won't be used).\n         * The given function is called implicitly by the runtime when the property is set\n         * from JavaScript code (or if a set on the property is performed using a N-API call).\n         */\n        .setter = NULL,\n        /*\n         * The value that's retrieved by a get access of the property if the property is a data property.\n         * If this is passed in, set getter, setter, method and data to NULL (since these members won't be used).\n         */\n        .value = NULL,\n        /*\n         * The attributes associated with the particular property. See napi_property_attributes.\n         */\n        .attributes = napi_default,\n        /*\n         * The callback data passed into method, getter and setter if this function is invoked.\n         */\n        .data = NULL\n    };\n    /*\n     * This method allows the efficient definition of multiple properties on a given object.\n     */\n    status = napi_define_properties(env, exports, 1, \u0026desc);\n\n    if (status != napi_ok)\n        return;\n}\n\n\nNAPI_MODULE(hello, init)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003cnode_api.h\u003e\n#include \u003cstdio.h\u003e\n\n\nnapi_value say_hello(napi_env env, napi_callback_info info)\n{\n    napi_value retval;\n\n    printf(\"Hello world\\n\");\n\n    napi_create_number(env, 1373, \u0026retval);\n\n    return retval;\n}\n\nvoid init(napi_env env, napi_value exports, napi_value module, void* priv)\n{\n    napi_status status;\n    napi_property_descriptor desc = {\n        /*\n         * String describing the key for the property, encoded as UTF8.\n         */\n        .utf8name = \"hello\",\n        /*\n         * Set this to make the property descriptor object's value property\n         * to be a JavaScript function represented by method.\n         * If this is passed in, set value, getter and setter to NULL (since these members won't be used).\n         */\n        .method = say_hello,\n        /*\n         * A function to call when a get access of the property is performed.\n         * If this is passed in, set value and method to NULL (since these members won't be used).\n         * The given function is called implicitly by the runtime when the property is accessed\n         * from JavaScript code (or if a get on the property is performed using a N-API call).\n         */\n        .getter = NULL,\n        /*\n         * A function to call when a set access of the property is performed.\n         * If this is passed in, set value and method to NULL (since these members won't be used).\n         * The given function is called implicitly by the runtime when the property is set\n         * from JavaScript code (or if a set on the property is performed using a N-API call).\n         */\n        .setter = NULL,\n        /*\n         * The value that's retrieved by a get access of the property if the property is a data property.\n         * If this is passed in, set getter, setter, method and data to NULL (since these members won't be used).\n         */\n        .value = NULL,\n        /*\n         * The attributes associated with the particular property. See napi_property_attributes.\n         */\n        .attributes = napi_default,\n        /*\n         * The callback data passed into method, getter and setter if this function is invoked.\n         */\n        .data = NULL\n    };\n    /*\n     * This method allows the efficient definition of multiple properties on a given object.\n     */\n    status = napi_define_properties(env, exports, 1, \u0026desc);\n\n    if (status != napi_ok)\n        return;\n}\n\n\nNAPI_MODULE(hello, init)",
        "code_language": "Plain Text"
      }
    ],
    "title": "Hello to N-API",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}