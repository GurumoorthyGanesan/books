{
  "ID": "dafb43d2-62f4-4282-abe6-6ecd5c0bf058",
  "Root": {
    "alive": true,
    "content": [
      "97fde8b8-d93e-4cd5-ade6-7b000c6d1da6",
      "e7de03fa-2ce3-4994-9364-af7eff6cd1f0",
      "7ff6fc47-05b9-4066-aa30-df0690c10e97",
      "abdf5e77-96e3-4d89-a466-a587f1f4cea9",
      "bd9a1d70-e9c7-463c-8392-81e75dffafb2",
      "c4c554d0-0659-44bb-8c22-cd04801d009c",
      "f25f4de3-ca56-4314-a7b1-4cddb4dddbbc",
      "0260c39a-9623-4f6f-9dee-a0fa17a94ce9",
      "695f4762-23f4-402d-9484-c42ca8b9b9c9",
      "59643fe1-fe45-41c3-85b5-3f22b7b9fb08"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552018327594,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "dafb43d2-62f4-4282-abe6-6ecd5c0bf058",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552018327594,
    "parent_id": "afde1e36-e2e3-47b3-94c5-48f834a08cad",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Handling POST request in Node.js"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018327587,
        "id": "97fde8b8-d93e-4cd5-ade6-7b000c6d1da6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018327587,
        "parent_id": "dafb43d2-62f4-4282-abe6-6ecd5c0bf058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018327591,
        "id": "e7de03fa-2ce3-4994-9364-af7eff6cd1f0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018327591,
        "parent_id": "dafb43d2-62f4-4282-abe6-6ecd5c0bf058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Node.js uses "
            ],
            [
              "streams",
              [
                [
                  "a",
                  "https://nodejs.org/api/stream.html#stream_stream"
                ]
              ]
            ],
            [
              " to handle incoming data."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Node.js uses "
          },
          {
            "Text": "streams",
            "Link": "https://nodejs.org/api/stream.html#stream_stream"
          },
          {
            "Text": " to handle incoming data."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018327591,
        "id": "7ff6fc47-05b9-4066-aa30-df0690c10e97",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018327591,
        "parent_id": "dafb43d2-62f4-4282-abe6-6ecd5c0bf058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Quoting from the docs,"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Quoting from the docs,"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018327591,
        "id": "abdf5e77-96e3-4d89-a466-a587f1f4cea9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018327591,
        "parent_id": "dafb43d2-62f4-4282-abe6-6ecd5c0bf058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A stream is an abstract interface for working with streaming data in Node.js. The stream module provides a base API that makes it easy to build objects that implement the stream interface."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "A stream is an abstract interface for working with streaming data in Node.js. The stream module provides a base API that makes it easy to build objects that implement the stream interface."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018327592,
        "id": "bd9a1d70-e9c7-463c-8392-81e75dffafb2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018327592,
        "parent_id": "dafb43d2-62f4-4282-abe6-6ecd5c0bf058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To handle in request body of a POST request, use the "
            ],
            [
              "request",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object, which is a readable stream. Data streams are emitted as "
            ],
            [
              "data",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " events on the "
            ],
            [
              "request",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To handle in request body of a POST request, use the "
          },
          {
            "Text": "request",
            "AttrFlags": 2
          },
          {
            "Text": " object, which is a readable stream. Data streams are emitted as "
          },
          {
            "Text": "data",
            "AttrFlags": 2
          },
          {
            "Text": " events on the "
          },
          {
            "Text": "request",
            "AttrFlags": 2
          },
          {
            "Text": " object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018327592,
        "id": "c4c554d0-0659-44bb-8c22-cd04801d009c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018327592,
        "parent_id": "dafb43d2-62f4-4282-abe6-6ecd5c0bf058",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "request.on('data', chunk =\u003e {\n    buffer += chunk;\n  });\n  request.on('end', () =\u003e {\n    // POST request body is now available as `buffer`\n  });"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "request.on('data', chunk =\u003e {\n    buffer += chunk;\n  });\n  request.on('end', () =\u003e {\n    // POST request body is now available as `buffer`\n  });",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018327592,
        "id": "f25f4de3-ca56-4314-a7b1-4cddb4dddbbc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018327592,
        "parent_id": "dafb43d2-62f4-4282-abe6-6ecd5c0bf058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Simply create an empty buffer string and append the buffer data as it received via "
            ],
            [
              "data",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " events."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Simply create an empty buffer string and append the buffer data as it received via "
          },
          {
            "Text": "data",
            "AttrFlags": 2
          },
          {
            "Text": " events."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018327592,
        "id": "0260c39a-9623-4f6f-9dee-a0fa17a94ce9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018327592,
        "parent_id": "dafb43d2-62f4-4282-abe6-6ecd5c0bf058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "NOTE",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "NOTE",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018327594,
        "id": "695f4762-23f4-402d-9484-c42ca8b9b9c9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018327594,
        "parent_id": "dafb43d2-62f4-4282-abe6-6ecd5c0bf058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Buffer data received on "
            ],
            [
              "data",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " events is of type "
            ],
            [
              "Buffer",
              [
                [
                  "a",
                  "https://nodejs.org/api/buffer.html"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Buffer data received on "
          },
          {
            "Text": "data",
            "AttrFlags": 2
          },
          {
            "Text": " events is of type "
          },
          {
            "Text": "Buffer",
            "Link": "https://nodejs.org/api/buffer.html"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018327594,
        "id": "59643fe1-fe45-41c3-85b5-3f22b7b9fb08",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018327594,
        "parent_id": "dafb43d2-62f4-4282-abe6-6ecd5c0bf058",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Create new buffer string to collect buffered data from data events "
            ],
            [
              "for every request",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " i.e. create "
            ],
            [
              "buffer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " string inside the request handler."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Create new buffer string to collect buffered data from data events "
          },
          {
            "Text": "for every request",
            "AttrFlags": 1
          },
          {
            "Text": " i.e. create "
          },
          {
            "Text": "buffer",
            "AttrFlags": 2
          },
          {
            "Text": " string inside the request handler."
          }
        ]
      }
    ],
    "title": "Handling POST request in Node.js",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}