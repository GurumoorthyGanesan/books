{
  "ID": "69c2eb17-b4c3-4e3c-9af3-4b54ec4324b6",
  "Root": {
    "alive": true,
    "content": [
      "5fe44e9c-be91-4f4d-8c5d-13eef0f86a60"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552020362103,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "69c2eb17-b4c3-4e3c-9af3-4b54ec4324b6",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552020362103,
    "parent_id": "3561bb22-a1a5-4dfa-baa7-0c27bd59a32c",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Enable gzip"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020362101,
        "id": "5fe44e9c-be91-4f4d-8c5d-13eef0f86a60",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020362101,
        "parent_id": "69c2eb17-b4c3-4e3c-9af3-4b54ec4324b6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const http = require('http')\nconst fs   = require('fs')\nconst zlib = require('zlib')\n\nhttp.createServer((request, response) =\u003e {\n  const stream          = fs.createReadStream('index.html')\n  const acceptsEncoding = request.headers['accept-encoding']\n\n  let encoder = {\n    hasEncoder     : false,\n    contentEncoding: {},\n    createEncoder  : () =\u003e throw 'There is no encoder'\n  }\n\n  if (!acceptsEncoding) {\n    acceptsEncoding = ''\n  }\n\n  if (acceptsEncoding.match(/\\bdeflate\\b/)) {\n    encoder = {\n      hasEncoder     : true,\n      contentEncoding: { 'content-encoding': 'deflate' },\n      createEncoder  : zlib.createDeflate\n    }\n  } else if (acceptsEncoding.match(/\\bgzip\\b/)) {\n    encoder = {\n      hasEncoder     : true,\n      contentEncoding: { 'content-encoding': 'gzip' },\n      createEncoder  : zlib.createGzip\n    }\n  }\n\n  response.writeHead(200, encoder.contentEncoding)\n\n  if (encoder.hasEncoder) {\n    stream = stream.pipe(encoder.createEncoder())\n  }\n\n  stream.pipe(response)\n\n}).listen(1337)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const http = require('http')\nconst fs   = require('fs')\nconst zlib = require('zlib')\n\nhttp.createServer((request, response) =\u003e {\n  const stream          = fs.createReadStream('index.html')\n  const acceptsEncoding = request.headers['accept-encoding']\n\n  let encoder = {\n    hasEncoder     : false,\n    contentEncoding: {},\n    createEncoder  : () =\u003e throw 'There is no encoder'\n  }\n\n  if (!acceptsEncoding) {\n    acceptsEncoding = ''\n  }\n\n  if (acceptsEncoding.match(/\\bdeflate\\b/)) {\n    encoder = {\n      hasEncoder     : true,\n      contentEncoding: { 'content-encoding': 'deflate' },\n      createEncoder  : zlib.createDeflate\n    }\n  } else if (acceptsEncoding.match(/\\bgzip\\b/)) {\n    encoder = {\n      hasEncoder     : true,\n      contentEncoding: { 'content-encoding': 'gzip' },\n      createEncoder  : zlib.createGzip\n    }\n  }\n\n  response.writeHead(200, encoder.contentEncoding)\n\n  if (encoder.hasEncoder) {\n    stream = stream.pipe(encoder.createEncoder())\n  }\n\n  stream.pipe(response)\n\n}).listen(1337)",
        "code_language": "Plain Text"
      }
    ],
    "title": "Enable gzip",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}