{
  "ID": "e2f7f7c6-a939-415f-bbaf-2bf3b569c0d3",
  "Root": {
    "alive": true,
    "content": [
      "d2dc1826-e046-4c8b-a184-0f17b7849079",
      "aa00ffbb-f257-46a0-b9b6-766bb208d54c",
      "f31328ce-d0d6-403c-90b5-0959ed60ebed",
      "820bd67f-219f-4498-bb1f-588e7fc2125a",
      "d94b8da5-402f-4cb1-9235-00346256f0ff",
      "fd17d5be-9c96-4a6f-99d6-e689ec0a0f28"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552020309386,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e2f7f7c6-a939-415f-bbaf-2bf3b569c0d3",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552020309386,
    "parent_id": "d275ffcd-1363-4686-b12e-8272e93d7522",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Creating a Mongoose Model"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020309385,
        "id": "d2dc1826-e046-4c8b-a184-0f17b7849079",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020309385,
        "parent_id": "e2f7f7c6-a939-415f-bbaf-2bf3b569c0d3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const Schema = mongoose.Schema;\nconst ObjectId = Schema.Types.ObjectId;\n\nconst Article = new Schema({\n  title: {\n    type: String,\n    unique: true,\n    required: [true, 'Article must have title']\n  },\n  author: {\n    type: ObjectId,\n    ref: 'User'\n  }\n});\n\nmodule.exports = mongoose.model('Article, Article);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const Schema = mongoose.Schema;\nconst ObjectId = Schema.Types.ObjectId;\n\nconst Article = new Schema({\n  title: {\n    type: String,\n    unique: true,\n    required: [true, 'Article must have title']\n  },\n  author: {\n    type: ObjectId,\n    ref: 'User'\n  }\n});\n\nmodule.exports = mongoose.model('Article, Article);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020309385,
        "id": "aa00ffbb-f257-46a0-b9b6-766bb208d54c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020309385,
        "parent_id": "e2f7f7c6-a939-415f-bbaf-2bf3b569c0d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s dissect this. MongoDB and Mongoose use JSON(actually BSON, but that’s irrelevant here) as the data format. At the top, I’ve set a few variables to reduce typing."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s dissect this. MongoDB and Mongoose use JSON(actually BSON, but that’s irrelevant here) as the data format. At the top, I’ve set a few variables to reduce typing."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020309385,
        "id": "f31328ce-d0d6-403c-90b5-0959ed60ebed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020309385,
        "parent_id": "e2f7f7c6-a939-415f-bbaf-2bf3b569c0d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "I create a "
            ],
            [
              "new Schema",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and assign it to a constant. It’s simple JSON, and each attribute is another Object with properties that help enforce a more consistent schema. Unique forces new instances being inserted in the database to, obviously, be unique. This is great for preventing a user creating multiple accounts on a service."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "I create a "
          },
          {
            "Text": "new Schema",
            "AttrFlags": 2
          },
          {
            "Text": " and assign it to a constant. It’s simple JSON, and each attribute is another Object with properties that help enforce a more consistent schema. Unique forces new instances being inserted in the database to, obviously, be unique. This is great for preventing a user creating multiple accounts on a service."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020309386,
        "id": "820bd67f-219f-4498-bb1f-588e7fc2125a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020309386,
        "parent_id": "e2f7f7c6-a939-415f-bbaf-2bf3b569c0d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Required is another, declared as an array. The first element is the boolean value, and the second the error message should the value being inserted or updated fail to exist."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Required is another, declared as an array. The first element is the boolean value, and the second the error message should the value being inserted or updated fail to exist."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020309386,
        "id": "d94b8da5-402f-4cb1-9235-00346256f0ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020309386,
        "parent_id": "e2f7f7c6-a939-415f-bbaf-2bf3b569c0d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "ObjectIds are used for relationships between Models. Examples might be ’Users have many Comments`. Other attributes can be used instead of ObjectId. Strings like a username is one example."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "ObjectIds are used for relationships between Models. Examples might be ’Users have many Comments`. Other attributes can be used instead of ObjectId. Strings like a username is one example."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020309386,
        "id": "fd17d5be-9c96-4a6f-99d6-e689ec0a0f28",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020309386,
        "parent_id": "e2f7f7c6-a939-415f-bbaf-2bf3b569c0d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Lastly, exporting the model for use with your API routes provides access to your schema."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Lastly, exporting the model for use with your API routes provides access to your schema."
          }
        ]
      }
    ],
    "title": "Creating a Mongoose Model",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}