{
  "ID": "1154c624-a256-48e7-8f5e-4177f349cf86",
  "Root": {
    "alive": true,
    "content": [
      "0e2eefba-66d8-4822-bb35-723cd4da2019",
      "4b91fbf5-9593-4d1a-8a72-354ac0e00c6a",
      "3fde59da-f4db-405d-8cb2-fd0fa07c9c21"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552019916091,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1154c624-a256-48e7-8f5e-4177f349cf86",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552019916091,
    "parent_id": "8c88749b-63a8-49fa-8524-c992aab72ea3",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Creating New Collection"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552019916090,
        "id": "0e2eefba-66d8-4822-bb35-723cd4da2019",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552019916090,
        "parent_id": "1154c624-a256-48e7-8f5e-4177f349cf86",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With Mongoose, everything is derived from a Schema. Lets create a schema."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With Mongoose, everything is derived from a Schema. Lets create a schema."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552019916091,
        "id": "4b91fbf5-9593-4d1a-8a72-354ac0e00c6a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552019916091,
        "parent_id": "1154c624-a256-48e7-8f5e-4177f349cf86",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var mongoose = require('mongoose');\n        \nvar Schema = mongoose.Schema;\n\nvar AutoSchema = new Schema({\n    name : String,\n    countOf: Number,\n});\n// defining the document structure \n\n// by default the collection created in the db would be the first parameter we use (or the plural of it)    \nmodule.exports = mongoose.model('Auto', AutoSchema); \n\n// we can over write it and define the collection name by specifying that in the third parameters. \nmodule.exports = mongoose.model('Auto', AutoSchema, 'collectionName'); \n\n\n// We can also define methods in the models. \nAutoSchema.methods.speak = function () {\n  var greeting = this.name\n    ? \"Hello this is  \" + this.name+ \" and I have counts of \"+ this.countOf\n    : \"I don't have a name\";\n  console.log(greeting);\n}\nmongoose.model('Auto', AutoSchema, 'collectionName');"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var mongoose = require('mongoose');\n        \nvar Schema = mongoose.Schema;\n\nvar AutoSchema = new Schema({\n    name : String,\n    countOf: Number,\n});\n// defining the document structure \n\n// by default the collection created in the db would be the first parameter we use (or the plural of it)    \nmodule.exports = mongoose.model('Auto', AutoSchema); \n\n// we can over write it and define the collection name by specifying that in the third parameters. \nmodule.exports = mongoose.model('Auto', AutoSchema, 'collectionName'); \n\n\n// We can also define methods in the models. \nAutoSchema.methods.speak = function () {\n  var greeting = this.name\n    ? \"Hello this is  \" + this.name+ \" and I have counts of \"+ this.countOf\n    : \"I don't have a name\";\n  console.log(greeting);\n}\nmongoose.model('Auto', AutoSchema, 'collectionName');",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552019916091,
        "id": "3fde59da-f4db-405d-8cb2-fd0fa07c9c21",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552019916091,
        "parent_id": "1154c624-a256-48e7-8f5e-4177f349cf86",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remember methods must be added to the schema before compiling it with mongoose.model() like done above .."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remember methods must be added to the schema before compiling it with mongoose.model() like done above .."
          }
        ]
      }
    ],
    "title": "Creating New Collection",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}