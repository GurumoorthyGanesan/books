{
  "ID": "02dca666-7ef2-49ba-8403-fd64ae5469a7",
  "Root": {
    "alive": true,
    "content": [
      "1ad45dd6-e2e5-466a-9334-9edb549b53be",
      "12454481-8e66-49f3-a4cb-ef2eaa408de6",
      "2279b571-ee61-4280-aad8-799f4a7d17ac",
      "078fa65f-e976-4ab4-bc44-d4d73ebf88dc",
      "d84f2351-54f8-415e-a9a9-6d2f7860035f",
      "d865c2f1-0e13-4a23-b234-dd758d222e9e",
      "f0b356d9-a192-466b-a882-ffa29ad8dfd9",
      "5e42e676-bbce-418a-be0a-8dfe4350c34b",
      "f7baa394-9c12-44fd-aa79-ca138592b799",
      "81b97b31-071d-417c-b3b8-5f2aa7772945",
      "1dec65ff-0d2c-4a55-9de2-cd89b20c6296",
      "09521a30-4ad2-4a33-8f44-def6ee216772"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552020667654,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "02dca666-7ef2-49ba-8403-fd64ae5469a7",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552020667654,
    "parent_id": "115b8d49-2bac-4ad0-8b3d-14540356aab0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Connecting with SQL via. mssql npm module"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020667647,
        "id": "1ad45dd6-e2e5-466a-9334-9edb549b53be",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020667647,
        "parent_id": "02dca666-7ef2-49ba-8403-fd64ae5469a7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We will start with creating a simple node application with a basic structure and then connecting with local sql server database and performing some queries on that database."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We will start with creating a simple node application with a basic structure and then connecting with local sql server database and performing some queries on that database."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020667650,
        "id": "12454481-8e66-49f3-a4cb-ef2eaa408de6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020667650,
        "parent_id": "02dca666-7ef2-49ba-8403-fd64ae5469a7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Step 1:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Create a directory/folder by the name of project which you intent to create. Initialize a node application using "
            ],
            [
              "npm init",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " command which will create a package.json in current directory ."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Step 1:",
            "AttrFlags": 1
          },
          {
            "Text": " Create a directory/folder by the name of project which you intent to create. Initialize a node application using "
          },
          {
            "Text": "npm init",
            "AttrFlags": 4
          },
          {
            "Text": " command which will create a package.json in current directory ."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020667650,
        "id": "2279b571-ee61-4280-aad8-799f4a7d17ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020667650,
        "parent_id": "02dca666-7ef2-49ba-8403-fd64ae5469a7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "mkdir mySqlApp\n//folder created \ncd mwSqlApp\n//change to newly created directory\nnpm init\n//answer all the question ..\nnpm install\n//This will complete quickly since we have not added any packages to our app."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "mkdir mySqlApp\n//folder created \ncd mwSqlApp\n//change to newly created directory\nnpm init\n//answer all the question ..\nnpm install\n//This will complete quickly since we have not added any packages to our app.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020667650,
        "id": "078fa65f-e976-4ab4-bc44-d4d73ebf88dc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020667650,
        "parent_id": "02dca666-7ef2-49ba-8403-fd64ae5469a7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Step 2:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Now we will create a App.js file in this directory and install some packages which we are going to need to connect to sql db."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Step 2:",
            "AttrFlags": 1
          },
          {
            "Text": " Now we will create a App.js file in this directory and install some packages which we are going to need to connect to sql db."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020667650,
        "id": "d84f2351-54f8-415e-a9a9-6d2f7860035f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020667650,
        "parent_id": "02dca666-7ef2-49ba-8403-fd64ae5469a7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "sudo gedit App.js\n//This will create App.js file , you can use your fav. text editor :)\nnpm install --save mssql\n//This will install the mssql package to you app"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "sudo gedit App.js\n//This will create App.js file , you can use your fav. text editor :)\nnpm install --save mssql\n//This will install the mssql package to you app",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020667650,
        "id": "d865c2f1-0e13-4a23-b234-dd758d222e9e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020667650,
        "parent_id": "02dca666-7ef2-49ba-8403-fd64ae5469a7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Step 3:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Now we will add a basic configuration variable to our application which will be used by mssql module to establish a connection ."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Step 3:",
            "AttrFlags": 1
          },
          {
            "Text": " Now we will add a basic configuration variable to our application which will be used by mssql module to establish a connection ."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020667651,
        "id": "f0b356d9-a192-466b-a882-ffa29ad8dfd9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020667651,
        "parent_id": "02dca666-7ef2-49ba-8403-fd64ae5469a7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "console.log(\"Hello world, This is an app to connect to sql server.\");\nvar config = {\n        \"user\": \"myusername\", //default is sa\n        \"password\": \"yourStrong(!)Password\",\n        \"server\": \"localhost\", // for local machine\n        \"database\": \"staging\", // name of database\n        \"options\": {\n            \"encrypt\": true\n        }\n      }\n\nsql.connect(config, err =\u003e { \n    if(err){\n        throw err ;\n    }\n    console.log(\"Connection Successful !\");\n\n    new sql.Request().query('select 1 as number', (err, result) =\u003e {\n        //handle err\n        console.dir(result)\n        // This example uses callbacks strategy for getting results.\n    })\n        \n});\n\nsql.on('error', err =\u003e {\n    // ... error handler \n    console.log(\"Sql database connection error \" ,err);\n})"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "console.log(\"Hello world, This is an app to connect to sql server.\");\nvar config = {\n        \"user\": \"myusername\", //default is sa\n        \"password\": \"yourStrong(!)Password\",\n        \"server\": \"localhost\", // for local machine\n        \"database\": \"staging\", // name of database\n        \"options\": {\n            \"encrypt\": true\n        }\n      }\n\nsql.connect(config, err =\u003e { \n    if(err){\n        throw err ;\n    }\n    console.log(\"Connection Successful !\");\n\n    new sql.Request().query('select 1 as number', (err, result) =\u003e {\n        //handle err\n        console.dir(result)\n        // This example uses callbacks strategy for getting results.\n    })\n        \n});\n\nsql.on('error', err =\u003e {\n    // ... error handler \n    console.log(\"Sql database connection error \" ,err);\n})",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020667651,
        "id": "5e42e676-bbce-418a-be0a-8dfe4350c34b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020667651,
        "parent_id": "02dca666-7ef2-49ba-8403-fd64ae5469a7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Step 4:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " This is the easiest step ,where we start the application and the application will connect to the sql server and print out some simple results ."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Step 4:",
            "AttrFlags": 1
          },
          {
            "Text": " This is the easiest step ,where we start the application and the application will connect to the sql server and print out some simple results ."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020667651,
        "id": "f7baa394-9c12-44fd-aa79-ca138592b799",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020667651,
        "parent_id": "02dca666-7ef2-49ba-8403-fd64ae5469a7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "node App.js\n// Output : \n// Hello world, This is an app to connect to sql server.\n// Connection Successful !\n// 1"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "node App.js\n// Output : \n// Hello world, This is an app to connect to sql server.\n// Connection Successful !\n// 1",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020667651,
        "id": "81b97b31-071d-417c-b3b8-5f2aa7772945",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020667651,
        "parent_id": "02dca666-7ef2-49ba-8403-fd64ae5469a7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To use promises or async for query execution refer the official documents of the mssql package :"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "To use promises or async for query execution refer the official documents of the mssql package :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020667653,
        "id": "1dec65ff-0d2c-4a55-9de2-cd89b20c6296",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020667653,
        "parent_id": "02dca666-7ef2-49ba-8403-fd64ae5469a7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Promises",
              [
                [
                  "a",
                  "https://www.npmjs.com/package/mssql#promises"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Promises",
            "Link": "https://www.npmjs.com/package/mssql#promises"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020667654,
        "id": "09521a30-4ad2-4a33-8f44-def6ee216772",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020667654,
        "parent_id": "02dca666-7ef2-49ba-8403-fd64ae5469a7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Async/Await",
              [
                [
                  "a",
                  "https://www.npmjs.com/package/mssql#async-await"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Async/Await",
            "Link": "https://www.npmjs.com/package/mssql#async-await"
          }
        ]
      }
    ],
    "title": "Connecting with SQL via. mssql npm module",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}