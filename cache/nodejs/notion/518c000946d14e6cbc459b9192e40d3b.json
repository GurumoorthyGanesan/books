{
  "ID": "518c0009-46d1-4e6c-bc45-9b9192e40d3b",
  "Root": {
    "alive": true,
    "content": [
      "c1772def-abe0-4995-9a00-9cab8ff90d62",
      "6cb6c378-9d95-482b-8e2b-5ef3d3055cf5",
      "f1f77210-737f-4272-83cd-1530b2ad698d",
      "6f276846-9119-403b-930c-77899f4e1630",
      "5dfaba9c-986e-4def-b3a5-086fbf90f05f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552018256257,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "518c0009-46d1-4e6c-bc45-9b9192e40d3b",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552018256257,
    "parent_id": "ecaf025e-b182-47ec-a1fd-bc34897b9351",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Creating your own readablewritable stream"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018256254,
        "id": "c1772def-abe0-4995-9a00-9cab8ff90d62",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018256254,
        "parent_id": "518c0009-46d1-4e6c-bc45-9b9192e40d3b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We will see stream objects being returned by modules like fs etc but what if we want to create our own streamable object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We will see stream objects being returned by modules like fs etc but what if we want to create our own streamable object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018256256,
        "id": "6cb6c378-9d95-482b-8e2b-5ef3d3055cf5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018256256,
        "parent_id": "518c0009-46d1-4e6c-bc45-9b9192e40d3b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To create Stream object we need to use the stream module provided by NodeJs"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To create Stream object we need to use the stream module provided by NodeJs"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018256257,
        "id": "f1f77210-737f-4272-83cd-1530b2ad698d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018256257,
        "parent_id": "518c0009-46d1-4e6c-bc45-9b9192e40d3b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var fs = require(\"fs\");\nvar stream = require(\"stream\").Writable;\n\n/* \n *  Implementing the write function in writable stream class.\n *  This is the function which will be used when other stream is piped into this \n *  writable stream.\n */\nstream.prototype._write = function(chunk, data){\n    console.log(data);\n}\n\nvar customStream = new stream();\n\nfs.createReadStream(\"am1.js\").pipe(customStream);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var fs = require(\"fs\");\nvar stream = require(\"stream\").Writable;\n\n/* \n *  Implementing the write function in writable stream class.\n *  This is the function which will be used when other stream is piped into this \n *  writable stream.\n */\nstream.prototype._write = function(chunk, data){\n    console.log(data);\n}\n\nvar customStream = new stream();\n\nfs.createReadStream(\"am1.js\").pipe(customStream);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018256257,
        "id": "6f276846-9119-403b-930c-77899f4e1630",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018256257,
        "parent_id": "518c0009-46d1-4e6c-bc45-9b9192e40d3b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This will give us our own custom writable stream. we can implement anything within the "
            ],
            [
              "_write",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " function. Above method works in NodeJs 4.x.x version but in NodeJs 6.x "
            ],
            [
              "ES6",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " introduced classes therefore syntax have changed. Below is the code for 6.x version of NodeJs"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This will give us our own custom writable stream. we can implement anything within the "
          },
          {
            "Text": "_write",
            "AttrFlags": 4
          },
          {
            "Text": " function. Above method works in NodeJs 4.x.x version but in NodeJs 6.x "
          },
          {
            "Text": "ES6",
            "AttrFlags": 1
          },
          {
            "Text": " introduced classes therefore syntax have changed. Below is the code for 6.x version of NodeJs"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018256257,
        "id": "5dfaba9c-986e-4def-b3a5-086fbf90f05f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018256257,
        "parent_id": "518c0009-46d1-4e6c-bc45-9b9192e40d3b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const Writable = require('stream').Writable;\n\nclass MyWritable extends Writable {\n  constructor(options) {\n    super(options);\n  }\n\n  _write(chunk, encoding, callback) {\n    console.log(chunk);\n  }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const Writable = require('stream').Writable;\n\nclass MyWritable extends Writable {\n  constructor(options) {\n    super(options);\n  }\n\n  _write(chunk, encoding, callback) {\n    console.log(chunk);\n  }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Creating your own readablewritable stream",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}