{
  "ID": "2cd30d22-cf59-4f11-9b99-1f6509af105f",
  "Root": {
    "alive": true,
    "content": [
      "d74cca40-62d9-46ef-b732-8235531d5f35",
      "4bf7dfe8-9695-4e65-bb8b-7a0174b9ed89",
      "418de72e-57b4-4e92-938e-f34024c35c78",
      "0a35b201-038e-44e3-a2d9-66a9c8a3c95d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552019988073,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "2cd30d22-cf59-4f11-9b99-1f6509af105f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552019988073,
    "parent_id": "def8685a-695d-43e3-904b-2d051ee14798",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using async"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552019988071,
        "id": "d74cca40-62d9-46ef-b732-8235531d5f35",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552019988071,
        "parent_id": "2cd30d22-cf59-4f11-9b99-1f6509af105f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "async package",
              [
                [
                  "a",
                  "https://www.npmjs.com/package/async"
                ]
              ]
            ],
            [
              " provides functions for asynchronous code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "async package",
            "Link": "https://www.npmjs.com/package/async"
          },
          {
            "Text": " provides functions for asynchronous code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552019988072,
        "id": "4bf7dfe8-9695-4e65-bb8b-7a0174b9ed89",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552019988072,
        "parent_id": "2cd30d22-cf59-4f11-9b99-1f6509af105f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using the "
            ],
            [
              "auto",
              [
                [
                  "a",
                  "http://caolan.github.io/async/docs.html#auto"
                ]
              ]
            ],
            [
              " function you can define asynchronous relations between two or more functions:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using the "
          },
          {
            "Text": "auto",
            "Link": "http://caolan.github.io/async/docs.html#auto"
          },
          {
            "Text": " function you can define asynchronous relations between two or more functions:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552019988072,
        "id": "418de72e-57b4-4e92-938e-f34024c35c78",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552019988072,
        "parent_id": "2cd30d22-cf59-4f11-9b99-1f6509af105f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var async = require('async');\n\nasync.auto({\n    get_data: function(callback) {\n        console.log('in get_data');\n        // async code to get some data\n        callback(null, 'data', 'converted to array');\n    },\n    make_folder: function(callback) {\n        console.log('in make_folder');\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n        callback(null, 'folder');\n    },\n    write_file: ['get_data', 'make_folder', function(results, callback) {\n        console.log('in write_file', JSON.stringify(results));\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, 'filename');\n    }],\n    email_link: ['write_file', function(results, callback) {\n        console.log('in email_link', JSON.stringify(results));\n        // once the file is written let's email a link to it...\n        // results.write_file contains the filename returned by write_file.\n        callback(null, {'file':results.write_file, 'email':'user@example.com'});\n    }]\n}, function(err, results) {\n    console.log('err = ', err);\n    console.log('results = ', results);\n});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var async = require('async');\n\nasync.auto({\n    get_data: function(callback) {\n        console.log('in get_data');\n        // async code to get some data\n        callback(null, 'data', 'converted to array');\n    },\n    make_folder: function(callback) {\n        console.log('in make_folder');\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n        callback(null, 'folder');\n    },\n    write_file: ['get_data', 'make_folder', function(results, callback) {\n        console.log('in write_file', JSON.stringify(results));\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, 'filename');\n    }],\n    email_link: ['write_file', function(results, callback) {\n        console.log('in email_link', JSON.stringify(results));\n        // once the file is written let's email a link to it...\n        // results.write_file contains the filename returned by write_file.\n        callback(null, {'file':results.write_file, 'email':'user@example.com'});\n    }]\n}, function(err, results) {\n    console.log('err = ', err);\n    console.log('results = ', results);\n});",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552019988073,
        "id": "0a35b201-038e-44e3-a2d9-66a9c8a3c95d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552019988073,
        "parent_id": "2cd30d22-cf59-4f11-9b99-1f6509af105f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This code could have been made synchronously, by just calling the "
            ],
            [
              "get_data",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "make_folder",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "write_file",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "email_link",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the correct order. Async keeps track of the results for you, and if an error occurred (first parameter of "
            ],
            [
              "callback",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " unequal to "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") it stops the execution of the other functions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This code could have been made synchronously, by just calling the "
          },
          {
            "Text": "get_data",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "make_folder",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "write_file",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "email_link",
            "AttrFlags": 2
          },
          {
            "Text": " in the correct order. Async keeps track of the results for you, and if an error occurred (first parameter of "
          },
          {
            "Text": "callback",
            "AttrFlags": 2
          },
          {
            "Text": " unequal to "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": ") it stops the execution of the other functions."
          }
        ]
      }
    ],
    "title": "Using async",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}