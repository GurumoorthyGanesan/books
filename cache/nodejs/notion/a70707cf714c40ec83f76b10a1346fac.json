{
  "ID": "a70707cf-714c-40ec-83f7-6b10a1346fac",
  "Root": {
    "alive": true,
    "content": [
      "011961f3-de4f-407d-9c59-065d3abe6597",
      "b5666cd8-8d40-4453-b86c-12c31f5d0bb6",
      "615d7af0-6391-4aca-b19f-29531a89d3de",
      "1971c4a4-6f23-4510-a045-e137cc5c66dd"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552017898032,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "a70707cf-714c-40ec-83f7-6b10a1346fac",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552017898032,
    "parent_id": "b60b83af-cc4e-47ae-ab6e-4110865abee0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Writing to a file using writeFile or writeFileSync"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552017898031,
        "id": "011961f3-de4f-407d-9c59-065d3abe6597",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552017898031,
        "parent_id": "a70707cf-714c-40ec-83f7-6b10a1346fac",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var fs = require('fs');\n\n// Save the string \"Hello world!\" in a file called \"hello.txt\" in\n// the directory \"/tmp\" using the default encoding (utf8).\n// This operation will be completed in background and the callback\n// will be called when it is either done or failed.\nfs.writeFile('/tmp/hello.txt', 'Hello world!', function(err) {\n  // If an error occurred, show it and return\n  if(err) return console.error(err);\n  // Successfully wrote to the file!\n});\n\n// Save binary data to a file called \"binary.txt\" in the current\n// directory. Again, the operation will be completed in background.\nvar buffer = new Buffer([ 0x48, 0x65, 0x6c, 0x6c, 0x6f ]);\nfs.writeFile('binary.txt', buffer, function(err) {\n  // If an error occurred, show it and return\n  if(err) return console.error(err);\n  // Successfully wrote binary contents to the file!\n});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var fs = require('fs');\n\n// Save the string \"Hello world!\" in a file called \"hello.txt\" in\n// the directory \"/tmp\" using the default encoding (utf8).\n// This operation will be completed in background and the callback\n// will be called when it is either done or failed.\nfs.writeFile('/tmp/hello.txt', 'Hello world!', function(err) {\n  // If an error occurred, show it and return\n  if(err) return console.error(err);\n  // Successfully wrote to the file!\n});\n\n// Save binary data to a file called \"binary.txt\" in the current\n// directory. Again, the operation will be completed in background.\nvar buffer = new Buffer([ 0x48, 0x65, 0x6c, 0x6c, 0x6f ]);\nfs.writeFile('binary.txt', buffer, function(err) {\n  // If an error occurred, show it and return\n  if(err) return console.error(err);\n  // Successfully wrote binary contents to the file!\n});",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552017898031,
        "id": "b5666cd8-8d40-4453-b86c-12c31f5d0bb6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552017898031,
        "parent_id": "a70707cf-714c-40ec-83f7-6b10a1346fac",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "fs.writeFileSync",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " behaves similarly to "
            ],
            [
              "fs.writeFile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", but does not take a callback as it completes synchronously and therefore blocks the main thread. Most node.js developers prefer the asynchronous variants which will cause virtually no delay in the program execution."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "fs.writeFileSync",
            "AttrFlags": 2
          },
          {
            "Text": " behaves similarly to "
          },
          {
            "Text": "fs.writeFile",
            "AttrFlags": 2
          },
          {
            "Text": ", but does not take a callback as it completes synchronously and therefore blocks the main thread. Most node.js developers prefer the asynchronous variants which will cause virtually no delay in the program execution."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552017898032,
        "id": "615d7af0-6391-4aca-b19f-29531a89d3de",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552017898032,
        "parent_id": "a70707cf-714c-40ec-83f7-6b10a1346fac",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: Blocking the main thread is bad practice in node.js. Synchronous function should only be used when debugging or when no other options are availables.",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: Blocking the main thread is bad practice in node.js. Synchronous function should only be used when debugging or when no other options are availables.",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552017898032,
        "id": "1971c4a4-6f23-4510-a045-e137cc5c66dd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552017898032,
        "parent_id": "a70707cf-714c-40ec-83f7-6b10a1346fac",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Write a string to another file and set the file mode to 0755\ntry {\n  fs.writeFileSync('sync.txt', 'anni', { mode: 0o755 });\n} catch(err) {\n  // An error occurred\n  console.error(err);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Write a string to another file and set the file mode to 0755\ntry {\n  fs.writeFileSync('sync.txt', 'anni', { mode: 0o755 });\n} catch(err) {\n  // An error occurred\n  console.error(err);\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Writing to a file using writeFile or writeFileSync",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}