{
  "ID": "66db9c88-ea59-416b-8dbf-c6032b066c43",
  "Root": {
    "alive": true,
    "content": [
      "e40f8c05-851a-4e6c-b5f6-0be8a1ac2418",
      "0502d6e5-c078-48cd-9194-2b25722924c6",
      "816d93ee-41e1-441a-9a77-39727b80ba98"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552017887144,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "66db9c88-ea59-416b-8dbf-c6032b066c43",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552017887144,
    "parent_id": "f2951439-dbd4-468d-b709-5d05eeed9c64",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Error handling in Express"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552017887144,
        "id": "e40f8c05-851a-4e6c-b5f6-0be8a1ac2418",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552017887144,
        "parent_id": "66db9c88-ea59-416b-8dbf-c6032b066c43",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Express, you can define unified error handler for handling errors occurred in application. Define then handler at the end of all routes and logic code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Express, you can define unified error handler for handling errors occurred in application. Define then handler at the end of all routes and logic code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552017887144,
        "id": "0502d6e5-c078-48cd-9194-2b25722924c6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552017887144,
        "parent_id": "66db9c88-ea59-416b-8dbf-c6032b066c43",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552017887144,
        "id": "816d93ee-41e1-441a-9a77-39727b80ba98",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552017887144,
        "parent_id": "66db9c88-ea59-416b-8dbf-c6032b066c43",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var express = require('express');\nvar app = express();\n\n//GET /names/john\napp.get('/names/:name', function(req, res, next){\n    if (req.params.name == 'john'){\n        return res.send('Valid Name');\n    } else{\n        next(new Error('Not valid name'));    //pass to error handler\n    }\n});\n\n//error handler\napp.use(function(err, req, res, next){\n    console.log(err.stack);    // e.g., Not valid name\n    return res.status(500).send('Internal Server Occured');\n});\n\napp.listen(3000);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var express = require('express');\nvar app = express();\n\n//GET /names/john\napp.get('/names/:name', function(req, res, next){\n    if (req.params.name == 'john'){\n        return res.send('Valid Name');\n    } else{\n        next(new Error('Not valid name'));    //pass to error handler\n    }\n});\n\n//error handler\napp.use(function(err, req, res, next){\n    console.log(err.stack);    // e.g., Not valid name\n    return res.status(500).send('Internal Server Occured');\n});\n\napp.listen(3000);",
        "code_language": "Plain Text"
      }
    ],
    "title": "Error handling in Express",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}