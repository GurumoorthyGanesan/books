{
  "ID": "59a2ac29-16ba-4509-9f67-aaab693b94b0",
  "Root": {
    "alive": true,
    "content": [
      "3f26e709-8e42-4e18-9afd-b2570df184f6",
      "229bf3c2-f44e-406f-963c-ace2f4d27768",
      "1ff7df3f-5a5f-4ae3-991b-0ea15944b9dd",
      "cfa4fe41-4e9d-4d03-8967-d0faf5450604"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552018300488,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "59a2ac29-16ba-4509-9f67-aaab693b94b0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552018300488,
    "parent_id": "6154e406-49be-4b00-9e86-05faa7dbf5e2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Waterfall dependent mono-tasking"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018300487,
        "id": "3f26e709-8e42-4e18-9afd-b2570df184f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018300487,
        "parent_id": "59a2ac29-16ba-4509-9f67-aaab693b94b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "async.waterfall(tasks, afterTasksCallback)",
              [
                [
                  "i"
                ],
                [
                  "a",
                  "http://caolan.github.io/async/docs.html#.waterfall"
                ]
              ]
            ],
            [
              " will execute a set of tasks. Each task are executed "
            ],
            [
              "after another, and the result of a task is passed to the next task",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". As "
            ],
            [
              "async.series()",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", if a task fails, "
            ],
            [
              "async",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " stop the execution and call immediately the main callback."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "async.waterfall(tasks, afterTasksCallback)",
            "AttrFlags": 4,
            "Link": "http://caolan.github.io/async/docs.html#.waterfall"
          },
          {
            "Text": " will execute a set of tasks. Each task are executed "
          },
          {
            "Text": "after another, and the result of a task is passed to the next task",
            "AttrFlags": 1
          },
          {
            "Text": ". As "
          },
          {
            "Text": "async.series()",
            "AttrFlags": 4
          },
          {
            "Text": ", if a task fails, "
          },
          {
            "Text": "async",
            "AttrFlags": 4
          },
          {
            "Text": " stop the execution and call immediately the main callback."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018300488,
        "id": "229bf3c2-f44e-406f-963c-ace2f4d27768",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018300488,
        "parent_id": "59a2ac29-16ba-4509-9f67-aaab693b94b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When tasks are finished successfully, "
            ],
            [
              "async",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " call the “master” callback with all errors and all results of tasks."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When tasks are finished successfully, "
          },
          {
            "Text": "async",
            "AttrFlags": 4
          },
          {
            "Text": " call the “master” callback with all errors and all results of tasks."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018300488,
        "id": "1ff7df3f-5a5f-4ae3-991b-0ea15944b9dd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018300488,
        "parent_id": "59a2ac29-16ba-4509-9f67-aaab693b94b0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function getUserRequest(callback) {\n  // We simulate the request with a timeout\n  setTimeout(function() {\n    var userResult = {\n      name : 'Aamu'\n    };\n\n    callback(null, userResult);\n  }, 500);\n}\n\nfunction getUserFriendsRequest(user, callback) {\n  // Another request simulate with a timeout\n  setTimeout(function() {\n    var friendsResult = [];\n\n    if (user.name === \"Aamu\"){\n        friendsResult = [{\n          name : 'Alice'\n        }, {\n          name: 'Bob'\n        }];\n    }\n    \n    callback(null, friendsResult);\n  }, 500);\n}\n\nasync.waterfall([\n    getUserRequest,\n    getUserFriendsRequest\n  ],\n  function(err, results) {\n    if (err) {\n      return console.error(err);\n    }\n\n    console.log(JSON.stringify(results));\n  });"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function getUserRequest(callback) {\n  // We simulate the request with a timeout\n  setTimeout(function() {\n    var userResult = {\n      name : 'Aamu'\n    };\n\n    callback(null, userResult);\n  }, 500);\n}\n\nfunction getUserFriendsRequest(user, callback) {\n  // Another request simulate with a timeout\n  setTimeout(function() {\n    var friendsResult = [];\n\n    if (user.name === \"Aamu\"){\n        friendsResult = [{\n          name : 'Alice'\n        }, {\n          name: 'Bob'\n        }];\n    }\n    \n    callback(null, friendsResult);\n  }, 500);\n}\n\nasync.waterfall([\n    getUserRequest,\n    getUserFriendsRequest\n  ],\n  function(err, results) {\n    if (err) {\n      return console.error(err);\n    }\n\n    console.log(JSON.stringify(results));\n  });",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018300488,
        "id": "cfa4fe41-4e9d-4d03-8967-d0faf5450604",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018300488,
        "parent_id": "59a2ac29-16ba-4509-9f67-aaab693b94b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Result:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "results",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " contains the second callback parameter of the last function of the waterfall, which is "
            ],
            [
              "friendsResult",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in that case."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Result:",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "results",
            "AttrFlags": 2
          },
          {
            "Text": " contains the second callback parameter of the last function of the waterfall, which is "
          },
          {
            "Text": "friendsResult",
            "AttrFlags": 2
          },
          {
            "Text": " in that case."
          }
        ]
      }
    ],
    "title": "Waterfall dependent mono-tasking",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}