{
  "ID": "66d823f5-858a-436f-826c-ab7a34ff15f2",
  "Root": {
    "alive": true,
    "content": [
      "3a934643-6c80-4f53-9475-a174b1ae9413",
      "4fbd1260-e9b0-4730-8039-8925d8f3425e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552017950102,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "66d823f5-858a-436f-826c-ab7a34ff15f2",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552017950102,
    "parent_id": "d387eaec-ca20-4f67-822e-3a433b010c19",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Get the number of listeners registered to listen for a specific event"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552017950099,
        "id": "3a934643-6c80-4f53-9475-a174b1ae9413",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552017950099,
        "parent_id": "66d823f5-858a-436f-826c-ab7a34ff15f2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The function Emitter.listenerCount(eventName) will return the number of listeners that are currently listening for the event provided as argument"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The function Emitter.listenerCount(eventName) will return the number of listeners that are currently listening for the event provided as argument"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552017950102,
        "id": "4fbd1260-e9b0-4730-8039-8925d8f3425e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552017950102,
        "parent_id": "66d823f5-858a-436f-826c-ab7a34ff15f2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const EventEmitter = require(\"events\");\nclass MyEmitter extends EventEmitter{}\nvar emitter = new MyEmitter();\n\nemitter\n.on(\"data\", ()=\u003e{ // add listener for data event\n    console.log(\"data event emitter\");\n});\n\nconsole.log(emitter.listenerCount(\"data\"))    // =\u003e 1\nconsole.log(emitter.listenerCount(\"message\")) // =\u003e 0\n\nemitter.on(\"message\", function mListener(){ //add listener for message event\n    console.log(\"message event emitted\");\n});\nconsole.log(emitter.listenerCount(\"data\"))    // =\u003e 1\nconsole.log(emitter.listenerCount(\"message\")) // =\u003e 1\n\nemitter.once(\"data\", (stuff)=\u003e{ //add another listener for data event\n    console.log(`Tell me my ${stuff}`);\n})\n\nconsole.log(emitter.listenerCount(\"data\"))   // =\u003e 2\nconsole.log(emitter.listenerCount(\"message\"))// =\u003e 1"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const EventEmitter = require(\"events\");\nclass MyEmitter extends EventEmitter{}\nvar emitter = new MyEmitter();\n\nemitter\n.on(\"data\", ()=\u003e{ // add listener for data event\n    console.log(\"data event emitter\");\n});\n\nconsole.log(emitter.listenerCount(\"data\"))    // =\u003e 1\nconsole.log(emitter.listenerCount(\"message\")) // =\u003e 0\n\nemitter.on(\"message\", function mListener(){ //add listener for message event\n    console.log(\"message event emitted\");\n});\nconsole.log(emitter.listenerCount(\"data\"))    // =\u003e 1\nconsole.log(emitter.listenerCount(\"message\")) // =\u003e 1\n\nemitter.once(\"data\", (stuff)=\u003e{ //add another listener for data event\n    console.log(`Tell me my ${stuff}`);\n})\n\nconsole.log(emitter.listenerCount(\"data\"))   // =\u003e 2\nconsole.log(emitter.listenerCount(\"message\"))// =\u003e 1",
        "code_language": "Plain Text"
      }
    ],
    "title": "Get the number of listeners registered to listen for a specific event",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}