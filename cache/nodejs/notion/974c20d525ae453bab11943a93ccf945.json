{
  "ID": "974c20d5-25ae-453b-ab11-943a93ccf945",
  "Root": {
    "alive": true,
    "content": [
      "b60b2d09-9bad-4372-868c-1606d81eff64"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552018338077,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "974c20d5-25ae-453b-ab11-943a93ccf945",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552018338077,
    "parent_id": "88f0ef80-140d-4d2e-b969-b4aeb0441a10",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "REST API for CRUD in Express 3"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552018338076,
        "id": "b60b2d09-9bad-4372-868c-1606d81eff64",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552018338076,
        "parent_id": "974c20d5-25ae-453b-ab11-943a93ccf945",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var express = require(\"express\"),\n    bodyParser = require(\"body-parser\"),\n    server = express();\n\n//body parser for parsing request body\nserver.use(bodyParser.json());\nserver.use(bodyParser.urlencoded({ extended: true }));\n\n//temperary store for `item` in memory\nvar itemStore = [];\n\n//GET all items\nserver.get('/item', function (req, res) {\n    res.json(itemStore);\n});\n\n//GET the item with specified id\nserver.get('/item/:id', function (req, res) {\n    res.json(itemStore[req.params.id]);\n});\n\n//POST new item\nserver.post('/item', function (req, res) {\n    itemStore.push(req.body);\n    res.json(req.body);\n});\n\n//PUT edited item in-place of item with specified id\nserver.put('/item/:id', function (req, res) {\n    itemStore[req.params.id] = req.body\n    res.json(req.body);\n});\n\n//DELETE item with specified id\nserver.delete('/item/:id', function (req, res) {\n    itemStore.splice(req.params.id, 1)\n    res.json(req.body);\n});\n\n//START SERVER\nserver.listen(3000, function () {\n    console.log(\"Server running\");\n})"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var express = require(\"express\"),\n    bodyParser = require(\"body-parser\"),\n    server = express();\n\n//body parser for parsing request body\nserver.use(bodyParser.json());\nserver.use(bodyParser.urlencoded({ extended: true }));\n\n//temperary store for `item` in memory\nvar itemStore = [];\n\n//GET all items\nserver.get('/item', function (req, res) {\n    res.json(itemStore);\n});\n\n//GET the item with specified id\nserver.get('/item/:id', function (req, res) {\n    res.json(itemStore[req.params.id]);\n});\n\n//POST new item\nserver.post('/item', function (req, res) {\n    itemStore.push(req.body);\n    res.json(req.body);\n});\n\n//PUT edited item in-place of item with specified id\nserver.put('/item/:id', function (req, res) {\n    itemStore[req.params.id] = req.body\n    res.json(req.body);\n});\n\n//DELETE item with specified id\nserver.delete('/item/:id', function (req, res) {\n    itemStore.splice(req.params.id, 1)\n    res.json(req.body);\n});\n\n//START SERVER\nserver.listen(3000, function () {\n    console.log(\"Server running\");\n})",
        "code_language": "Plain Text"
      }
    ],
    "title": "REST API for CRUD in Express 3",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}