{
  "ID": "ee22f1c8-791c-43dc-85b4-84bac922913b",
  "Root": {
    "alive": true,
    "content": [
      "19726154-05af-4419-b12c-5b2a50b227fc",
      "aef58ba3-cc09-4ba2-8fed-7c457ebed80c",
      "cbd1f7b6-b5cb-4986-9b5d-7d678dd36316",
      "02c16dd3-abbe-451f-9b0e-223e4ca1a876",
      "f7d094a0-b12d-461f-a2cf-8c38a07a4ffc"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552017991120,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ee22f1c8-791c-43dc-85b4-84bac922913b",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552017991120,
    "parent_id": "eec055cf-46d0-4084-a9cb-b9d077313c4f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Cluster Example"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552017991117,
        "id": "19726154-05af-4419-b12c-5b2a50b227fc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552017991117,
        "parent_id": "ee22f1c8-791c-43dc-85b4-84bac922913b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A single instance of "
            ],
            [
              "Node.js",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " runs in a single thread. To take advantage of multi-core systems, application can be launched in a cluster of Node.js processes to handle the load."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A single instance of "
          },
          {
            "Text": "Node.js",
            "AttrFlags": 2
          },
          {
            "Text": " runs in a single thread. To take advantage of multi-core systems, application can be launched in a cluster of Node.js processes to handle the load."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552017991120,
        "id": "aef58ba3-cc09-4ba2-8fed-7c457ebed80c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552017991120,
        "parent_id": "ee22f1c8-791c-43dc-85b4-84bac922913b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "cluster",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " module allows you to easily create child processes that all share server ports."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "cluster",
            "AttrFlags": 2
          },
          {
            "Text": " module allows you to easily create child processes that all share server ports."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552017991120,
        "id": "cbd1f7b6-b5cb-4986-9b5d-7d678dd36316",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552017991120,
        "parent_id": "ee22f1c8-791c-43dc-85b4-84bac922913b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Following example create the worker child process in main process that handles the load across multiple cores."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Following example create the worker child process in main process that handles the load across multiple cores."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552017991120,
        "id": "02c16dd3-abbe-451f-9b0e-223e4ca1a876",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552017991120,
        "parent_id": "ee22f1c8-791c-43dc-85b4-84bac922913b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552017991120,
        "id": "f7d094a0-b12d-461f-a2cf-8c38a07a4ffc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552017991120,
        "parent_id": "ee22f1c8-791c-43dc-85b4-84bac922913b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const cluster = require('cluster');\nconst http = require('http');\nconst numCPUs = require('os').cpus().length; //number of CPUS\n\nif (cluster.isMaster) {\n  // Fork workers.\n  for (var i = 0; i \u003c numCPUs; i++) {\n    cluster.fork();    //creating child process\n  }\n\n  //on exit of cluster\n  cluster.on('exit', (worker, code, signal) =\u003e {\n      if (signal) {\n        console.log(`worker was killed by signal: ${signal}`);\n      } else if (code !== 0) {\n        console.log(`worker exited with error code: ${code}`);\n      } else {\n        console.log('worker success!');\n      }\n  });\n} else {\n  // Workers can share any TCP connection\n  // In this case it is an HTTP server\n  http.createServer((req, res) =\u003e {\n    res.writeHead(200);\n    res.end('hello world\\n');\n  }).listen(3000);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const cluster = require('cluster');\nconst http = require('http');\nconst numCPUs = require('os').cpus().length; //number of CPUS\n\nif (cluster.isMaster) {\n  // Fork workers.\n  for (var i = 0; i \u003c numCPUs; i++) {\n    cluster.fork();    //creating child process\n  }\n\n  //on exit of cluster\n  cluster.on('exit', (worker, code, signal) =\u003e {\n      if (signal) {\n        console.log(`worker was killed by signal: ${signal}`);\n      } else if (code !== 0) {\n        console.log(`worker exited with error code: ${code}`);\n      } else {\n        console.log('worker success!');\n      }\n  });\n} else {\n  // Workers can share any TCP connection\n  // In this case it is an HTTP server\n  http.createServer((req, res) =\u003e {\n    res.writeHead(200);\n    res.end('hello world\\n');\n  }).listen(3000);\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Cluster Example",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}