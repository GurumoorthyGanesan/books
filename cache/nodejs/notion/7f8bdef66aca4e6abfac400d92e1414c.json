{
  "ID": "7f8bdef6-6aca-4e6a-bfac-400d92e1414c",
  "Root": {
    "alive": true,
    "content": [
      "93e5c860-ea9c-4c18-96cc-65497c20f5e2",
      "b9ef8b58-6ca2-434f-ba85-0bef600e5e12",
      "cdc95567-3038-44ab-973e-6cf286c73c00",
      "fa29211a-c5c9-4ddb-866e-bb518dec1e57",
      "4bf76b0e-4c99-4298-a8cf-f6e48ec22963",
      "de9d2fdc-8a0c-4a5f-b3cd-404d53ffa688",
      "5fe7e136-8ad9-455a-bad8-fdcf6079e59f",
      "94b47aca-8074-4cef-afe1-7a7b5b5856fd",
      "bdb5188d-55d8-48e4-8828-368f10b0deea",
      "6f5d2949-d0e3-4500-b209-6396d011f56e",
      "18f4a9ef-3a5f-4aa1-aad3-43fb66eecc64"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552020363577,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "7f8bdef6-6aca-4e6a-bfac-400d92e1414c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552020363577,
    "parent_id": "3561bb22-a1a5-4dfa-baa7-0c27bd59a32c",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Event Loop"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020363574,
        "id": "93e5c860-ea9c-4c18-96cc-65497c20f5e2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020363574,
        "parent_id": "7f8bdef6-6aca-4e6a-bfac-400d92e1414c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Blocking Operation Example"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Blocking Operation Example"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020363575,
        "id": "b9ef8b58-6ca2-434f-ba85-0bef600e5e12",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020363575,
        "parent_id": "7f8bdef6-6aca-4e6a-bfac-400d92e1414c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let loop = (i, max) =\u003e {\n  while (i \u003c max) i++\n  return i\n}\n\n// This operation will block Node.js\n// Because, it's CPU-bound\n// You should be careful about this kind of code\nloop(0, 1e+12)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let loop = (i, max) =\u003e {\n  while (i \u003c max) i++\n  return i\n}\n\n// This operation will block Node.js\n// Because, it's CPU-bound\n// You should be careful about this kind of code\nloop(0, 1e+12)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020363575,
        "id": "cdc95567-3038-44ab-973e-6cf286c73c00",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020363575,
        "parent_id": "7f8bdef6-6aca-4e6a-bfac-400d92e1414c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Non-Blocking IO Operation Example"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Non-Blocking IO Operation Example"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020363575,
        "id": "fa29211a-c5c9-4ddb-866e-bb518dec1e57",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020363575,
        "parent_id": "7f8bdef6-6aca-4e6a-bfac-400d92e1414c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let i = 0\n\nconst step = max =\u003e {\n  while (i \u003c max) i++\n  console.log('i = %d', i)\n}\n\nconst tick = max =\u003e process.nextTick(step, max)\n\n// this will postpone tick run step's while-loop to event loop cycles\n// any other IO-bound operation (like filesystem reading) can take place\n// in parallel\ntick(1e+6)\ntick(1e+7)\nconsole.log('this will output before all of tick operations. i = %d', i)\nconsole.log('because tick operations will be postponed')\ntick(1e+8)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let i = 0\n\nconst step = max =\u003e {\n  while (i \u003c max) i++\n  console.log('i = %d', i)\n}\n\nconst tick = max =\u003e process.nextTick(step, max)\n\n// this will postpone tick run step's while-loop to event loop cycles\n// any other IO-bound operation (like filesystem reading) can take place\n// in parallel\ntick(1e+6)\ntick(1e+7)\nconsole.log('this will output before all of tick operations. i = %d', i)\nconsole.log('because tick operations will be postponed')\ntick(1e+8)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020363575,
        "id": "4bf76b0e-4c99-4298-a8cf-f6e48ec22963",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020363575,
        "parent_id": "7f8bdef6-6aca-4e6a-bfac-400d92e1414c",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/3eb734f5-01b8-4cd5-b4a3-cb369070b668/3d70f3625caf91da22c6ab7dc294e9e7e1559b2a.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/3eb734f5-01b8-4cd5-b4a3-cb369070b668/3d70f3625caf91da22c6ab7dc294e9e7e1559b2a.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2F3eb734f5-01b8-4cd5-b4a3-cb369070b668%2F3d70f3625caf91da22c6ab7dc294e9e7e1559b2a.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020363575,
        "id": "de9d2fdc-8a0c-4a5f-b3cd-404d53ffa688",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020363575,
        "parent_id": "7f8bdef6-6aca-4e6a-bfac-400d92e1414c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In simpler terms, Event Loop is a single-threaded queue mechanism which executes your CPU-bound code until end of its execution and IO-bound code in a non-blocking fashion."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In simpler terms, Event Loop is a single-threaded queue mechanism which executes your CPU-bound code until end of its execution and IO-bound code in a non-blocking fashion."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020363576,
        "id": "5fe7e136-8ad9-455a-bad8-fdcf6079e59f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020363576,
        "parent_id": "7f8bdef6-6aca-4e6a-bfac-400d92e1414c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, Node.js under the carpet uses multi-threading for some of its operations through ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "libuv",
              [
                [
                  "i"
                ],
                [
                  "a",
                  "http://libuv.org/"
                ]
              ]
            ],
            [
              " Library.",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, Node.js under the carpet uses multi-threading for some of its operations through ",
            "AttrFlags": 4
          },
          {
            "Text": "libuv",
            "AttrFlags": 4,
            "Link": "http://libuv.org/"
          },
          {
            "Text": " Library.",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020363576,
        "id": "94b47aca-8074-4cef-afe1-7a7b5b5856fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020363576,
        "parent_id": "7f8bdef6-6aca-4e6a-bfac-400d92e1414c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Performance Considerations"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Performance Considerations"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020363576,
        "id": "bdb5188d-55d8-48e4-8828-368f10b0deea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020363576,
        "parent_id": "7f8bdef6-6aca-4e6a-bfac-400d92e1414c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Non-blocking operations will not block the queue and will not effect the performance of the loop."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Non-blocking operations will not block the queue and will not effect the performance of the loop."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020363577,
        "id": "6f5d2949-d0e3-4500-b209-6396d011f56e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020363577,
        "parent_id": "7f8bdef6-6aca-4e6a-bfac-400d92e1414c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, CPU-bound operations will block the queue, so you should be careful not to do CPU-bound operations in your Node.js code."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, CPU-bound operations will block the queue, so you should be careful not to do CPU-bound operations in your Node.js code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020363577,
        "id": "18f4a9ef-3a5f-4aa1-aad3-43fb66eecc64",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020363577,
        "parent_id": "7f8bdef6-6aca-4e6a-bfac-400d92e1414c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Node.js non-blocks IO because it offloads the work to the operating system kernel, and when the IO operation supplies data ("
            ],
            [
              "as an event",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "), it will notify your code with your supplied callbacks."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Node.js non-blocks IO because it offloads the work to the operating system kernel, and when the IO operation supplies data ("
          },
          {
            "Text": "as an event",
            "AttrFlags": 4
          },
          {
            "Text": "), it will notify your code with your supplied callbacks."
          }
        ]
      }
    ],
    "title": "Event Loop",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}