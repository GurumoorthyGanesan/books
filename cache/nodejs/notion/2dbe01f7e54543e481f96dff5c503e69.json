{
  "ID": "2dbe01f7-e545-43e4-81f9-6dff5c503e69",
  "Root": {
    "alive": true,
    "content": [
      "29a8b832-c0be-431f-952e-211fa256bb42",
      "4cbaa493-2590-4be2-b067-52a41f9db79b",
      "847c84c2-966e-4bbf-aaa9-7dcd9fce89c1",
      "6361a3bf-8adb-45ad-8b19-434efefeb552",
      "aa4020d3-4e0d-404f-9a9e-b41d6855f63e",
      "9e686537-faf9-4f44-98f6-8f1d653d81ea"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552019835048,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "2dbe01f7-e545-43e4-81f9-6dff5c503e69",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552019835048,
    "parent_id": "48dce1e7-686a-4ece-9505-0b0521157603",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Progression from Callbacks"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552019835043,
        "id": "29a8b832-c0be-431f-952e-211fa256bb42",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552019835043,
        "parent_id": "2dbe01f7-e545-43e4-81f9-6dff5c503e69",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the beginning there were callbacks, and callbacks were ok:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the beginning there were callbacks, and callbacks were ok:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552019835046,
        "id": "4cbaa493-2590-4be2-b067-52a41f9db79b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552019835046,
        "parent_id": "2dbe01f7-e545-43e4-81f9-6dff5c503e69",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const getTemperature = (callback) =\u003e {\n  http.get('www.temperature.com/current', (res) =\u003e {\n    callback(res.data.temperature)\n  })\n}\n\nconst getAirPollution = (callback) =\u003e {\n  http.get('www.pollution.com/current', (res) =\u003e {\n    callback(res.data.pollution)\n  });\n}\n\ngetTemperature(function(temp) {\n  getAirPollution(function(pollution) {\n    console.log(`the temp is ${temp} and the pollution is ${pollution}.`)\n    // The temp is 27 and the pollution is 0.5.\n  })\n})"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const getTemperature = (callback) =\u003e {\n  http.get('www.temperature.com/current', (res) =\u003e {\n    callback(res.data.temperature)\n  })\n}\n\nconst getAirPollution = (callback) =\u003e {\n  http.get('www.pollution.com/current', (res) =\u003e {\n    callback(res.data.pollution)\n  });\n}\n\ngetTemperature(function(temp) {\n  getAirPollution(function(pollution) {\n    console.log(`the temp is ${temp} and the pollution is ${pollution}.`)\n    // The temp is 27 and the pollution is 0.5.\n  })\n})",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552019835047,
        "id": "847c84c2-966e-4bbf-aaa9-7dcd9fce89c1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552019835047,
        "parent_id": "2dbe01f7-e545-43e4-81f9-6dff5c503e69",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But there were a few "
            ],
            [
              "really frustrating",
              [
                [
                  "a",
                  "http://callbackhell.com/"
                ]
              ]
            ],
            [
              " issues with callbacks so we all started using promises."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But there were a few "
          },
          {
            "Text": "really frustrating",
            "Link": "http://callbackhell.com/"
          },
          {
            "Text": " issues with callbacks so we all started using promises."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552019835048,
        "id": "6361a3bf-8adb-45ad-8b19-434efefeb552",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552019835048,
        "parent_id": "2dbe01f7-e545-43e4-81f9-6dff5c503e69",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const getTemperature = () =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    http.get('www.temperature.com/current', (res) =\u003e {\n      resolve(res.data.temperature)\n    })\n  })\n}\n\nconst getAirPollution = () =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    http.get('www.pollution.com/current', (res) =\u003e {\n      resolve(res.data.pollution)\n    })\n  })\n}\n\ngetTemperature()\n.then(temp =\u003e console.log(`the temp is ${temp}`))\n.then(() =\u003e getAirPollution())\n.then(pollution =\u003e console.log(`and the pollution is ${pollution}`))\n// the temp is 32\n// and the pollution is 0.5"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const getTemperature = () =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    http.get('www.temperature.com/current', (res) =\u003e {\n      resolve(res.data.temperature)\n    })\n  })\n}\n\nconst getAirPollution = () =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    http.get('www.pollution.com/current', (res) =\u003e {\n      resolve(res.data.pollution)\n    })\n  })\n}\n\ngetTemperature()\n.then(temp =\u003e console.log(`the temp is ${temp}`))\n.then(() =\u003e getAirPollution())\n.then(pollution =\u003e console.log(`and the pollution is ${pollution}`))\n// the temp is 32\n// and the pollution is 0.5",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552019835048,
        "id": "aa4020d3-4e0d-404f-9a9e-b41d6855f63e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552019835048,
        "parent_id": "2dbe01f7-e545-43e4-81f9-6dff5c503e69",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This was a bit better. Finally, we found async/await. Which still uses promises under the hood."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This was a bit better. Finally, we found async/await. Which still uses promises under the hood."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552019835048,
        "id": "9e686537-faf9-4f44-98f6-8f1d653d81ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552019835048,
        "parent_id": "2dbe01f7-e545-43e4-81f9-6dff5c503e69",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const temp = await getTemperature()\nconst pollution = await getAirPollution()"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const temp = await getTemperature()\nconst pollution = await getAirPollution()",
        "code_language": "Plain Text"
      }
    ],
    "title": "Progression from Callbacks",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}