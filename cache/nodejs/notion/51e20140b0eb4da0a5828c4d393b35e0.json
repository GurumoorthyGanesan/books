{
  "ID": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
  "Root": {
    "alive": true,
    "content": [
      "3571ea56-f892-46b1-a560-02812a9fe41d",
      "64ac927e-2c27-48aa-86db-8aecf4e62541",
      "79aa35c4-bce8-46bc-94be-35f065fc4fb1",
      "befa0a32-de13-464f-a296-3888e195e9d0",
      "745bf8ce-26f2-425b-8e26-06b54e09c101",
      "f06657e6-4251-4c85-afda-743e24c94c8a",
      "07ee2b41-7f89-4503-bf31-212fc0dbad6e",
      "f7e75e7b-5b77-4046-85fa-a86381ac2f63",
      "84ce5e08-7b36-4c37-a754-6798d768ad15",
      "c255eefb-9264-469a-84f6-f12f72d8bc9e",
      "8d7ddf04-0457-472f-b9b8-82093bf80179",
      "ebf27c58-fa6c-4dbb-81cc-9a923d3ab5ad",
      "f9814433-fb7f-4289-8d51-1797754851a2",
      "b7fe8f9b-212c-4c84-89e0-968b3fd8496a",
      "4452df00-71e3-4b26-a946-250df46b893e",
      "8da06746-fe6d-4c8a-ac7e-16c0ff1c6b27",
      "3a7d0e51-508c-4af2-9c6a-de446f713d3e",
      "571cf531-0e2c-4a66-a0be-326fe65e034a",
      "84768f2e-93dc-45f1-9474-898b04334912",
      "04b8a047-3881-47ce-94df-3e7d9c1573ee",
      "bb6782ae-52f2-40b3-9447-ad6324d0a636",
      "da6066c3-e256-4575-be3a-64ca076a6da8",
      "7e14c039-69dd-4146-9791-88de474b6dec",
      "41fd00c5-734b-4c49-a425-9dfd66c7f99f",
      "b6abc78c-7f7b-4ac9-a81b-ca9a9ad0129c",
      "ddf0b9f6-9f20-422d-aca4-5f2e84315c36",
      "0da1e6ac-4cf7-47cc-a537-41a3c4b83a93",
      "429d3877-fdc0-464c-983f-93026c462d97",
      "c5ffdbd8-4471-436d-a4e9-159896c9d1aa",
      "699bb87d-4beb-41ab-a9c8-c84d7b840983",
      "04500242-2649-4618-a910-c6e368e1856c",
      "23f1133c-0798-4506-8a82-7d75ea7c92b0",
      "085b03f4-4634-4bfd-8530-79630a29a395",
      "380a0e7a-be68-4a38-9b25-0ca092a17477",
      "c94a7416-bf72-4266-ae7d-89bf9bdd0322",
      "12df0fb2-107f-4361-9603-6d585e741fbb"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552020292582,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552020292582,
    "parent_id": "4fad85d1-d36e-41df-952d-b4ea8df24e6e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Callback functions"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292569,
        "id": "3571ea56-f892-46b1-a560-02812a9fe41d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292569,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Callback functions in JavaScript"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Callback functions in JavaScript"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292573,
        "id": "64ac927e-2c27-48aa-86db-8aecf4e62541",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292573,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Callback functions are common in JavaScript. Callback functions are possible in JavaScript because "
            ],
            [
              "functions are first-class citizens",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/First-class_function"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Callback functions are common in JavaScript. Callback functions are possible in JavaScript because "
          },
          {
            "Text": "functions are first-class citizens",
            "Link": "https://en.wikipedia.org/wiki/First-class_function"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292574,
        "id": "79aa35c4-bce8-46bc-94be-35f065fc4fb1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292574,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Synchronous callbacks."
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Synchronous callbacks."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292574,
        "id": "befa0a32-de13-464f-a296-3888e195e9d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292574,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Callback functions can be synchronous or asynchronous. Since Asynchronous callback functions may be more complex here is a simple example of a synchronous callback function."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Callback functions can be synchronous or asynchronous. Since Asynchronous callback functions may be more complex here is a simple example of a synchronous callback function."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292574,
        "id": "745bf8ce-26f2-425b-8e26-06b54e09c101",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292574,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// a function that uses a callback named `cb` as a parameter\nfunction getSyncMessage(cb) {\n    cb(\"Hello World!\");\n}\n\nconsole.log(\"Before getSyncMessage call\");\n// calling a function and sending in a callback function as an argument.\ngetSyncMessage(function(message) {\n    console.log(message);\n});\nconsole.log(\"After getSyncMessage call\");"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// a function that uses a callback named `cb` as a parameter\nfunction getSyncMessage(cb) {\n    cb(\"Hello World!\");\n}\n\nconsole.log(\"Before getSyncMessage call\");\n// calling a function and sending in a callback function as an argument.\ngetSyncMessage(function(message) {\n    console.log(message);\n});\nconsole.log(\"After getSyncMessage call\");",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292574,
        "id": "f06657e6-4251-4c85-afda-743e24c94c8a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292574,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The output for the above code is:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The output for the above code is:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292574,
        "id": "07ee2b41-7f89-4503-bf31-212fc0dbad6e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292574,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003e Before getSyncMessage call\n\u003e Hello World!\n\u003e After getSyncMessage call"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003e Before getSyncMessage call\n\u003e Hello World!\n\u003e After getSyncMessage call",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292575,
        "id": "f7e75e7b-5b77-4046-85fa-a86381ac2f63",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292575,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "First we will step through how the above code is executed. This is more for those who do not already understand the concept of callbacks if you do already understand it feel free to skip this paragraph. First the code is parsed and then the first interesting thing to happen is line 6 is executed which outputs "
            ],
            [
              "Before getSyncMessage call",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to the console. Then line 8 is executed which calls the function "
            ],
            [
              "getSyncMessage",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " sending in an anonymous function as an argument for the parameter named "
            ],
            [
              "cb",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the "
            ],
            [
              "getSyncMessage",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function. Execution is now done inside the "
            ],
            [
              "getSyncMessage",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function on line 3 which executes the function "
            ],
            [
              "cb",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which was just passed in, this call sends an argument string “Hello World” for the param named "
            ],
            [
              "message",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the passed in anonymous function. Execution then goes to line 9 which logs "
            ],
            [
              "Hello World!",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to the console. Then the execution goes through the process of exiting the "
            ],
            [
              "callstack",
              [
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Glossary/Call_Stack"
                ]
              ]
            ],
            [
              " ("
            ],
            [
              "see also",
              [
                [
                  "a",
                  "https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop"
                ]
              ]
            ],
            [
              ") hitting line 10 then line 4 then finally back to line 11."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "First we will step through how the above code is executed. This is more for those who do not already understand the concept of callbacks if you do already understand it feel free to skip this paragraph. First the code is parsed and then the first interesting thing to happen is line 6 is executed which outputs "
          },
          {
            "Text": "Before getSyncMessage call",
            "AttrFlags": 2
          },
          {
            "Text": " to the console. Then line 8 is executed which calls the function "
          },
          {
            "Text": "getSyncMessage",
            "AttrFlags": 2
          },
          {
            "Text": " sending in an anonymous function as an argument for the parameter named "
          },
          {
            "Text": "cb",
            "AttrFlags": 2
          },
          {
            "Text": " in the "
          },
          {
            "Text": "getSyncMessage",
            "AttrFlags": 2
          },
          {
            "Text": " function. Execution is now done inside the "
          },
          {
            "Text": "getSyncMessage",
            "AttrFlags": 2
          },
          {
            "Text": " function on line 3 which executes the function "
          },
          {
            "Text": "cb",
            "AttrFlags": 2
          },
          {
            "Text": " which was just passed in, this call sends an argument string “Hello World” for the param named "
          },
          {
            "Text": "message",
            "AttrFlags": 2
          },
          {
            "Text": " in the passed in anonymous function. Execution then goes to line 9 which logs "
          },
          {
            "Text": "Hello World!",
            "AttrFlags": 2
          },
          {
            "Text": " to the console. Then the execution goes through the process of exiting the "
          },
          {
            "Text": "callstack",
            "Link": "https://developer.mozilla.org/en-US/docs/Glossary/Call_Stack"
          },
          {
            "Text": " ("
          },
          {
            "Text": "see also",
            "Link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop"
          },
          {
            "Text": ") hitting line 10 then line 4 then finally back to line 11."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292576,
        "id": "84ce5e08-7b36-4c37-a754-6798d768ad15",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292576,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Some information to know about callbacks in general:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Some information to know about callbacks in general:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292577,
        "id": "c255eefb-9264-469a-84f6-f12f72d8bc9e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292577,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The function you send in to a function as a callback may be called zero times, once, or multiple times. It all depends on implementation."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The function you send in to a function as a callback may be called zero times, once, or multiple times. It all depends on implementation."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292577,
        "id": "8d7ddf04-0457-472f-b9b8-82093bf80179",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292577,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The callback function may be called synchronously or asynchronously and possibly both synchronously and asynchronously."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The callback function may be called synchronously or asynchronously and possibly both synchronously and asynchronously."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292577,
        "id": "ebf27c58-fa6c-4dbb-81cc-9a923d3ab5ad",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292577,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Just like normal functions the names you give parameters to your function are not important but the order is. So for example on line 8 the parameter "
            ],
            [
              "message",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " could have been named "
            ],
            [
              "statement",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "msg",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", or if you’re being nonsensical something like "
            ],
            [
              "jellybean",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". So you should know what parameters are sent into your callback so you can get them in the right order with proper names."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Just like normal functions the names you give parameters to your function are not important but the order is. So for example on line 8 the parameter "
          },
          {
            "Text": "message",
            "AttrFlags": 2
          },
          {
            "Text": " could have been named "
          },
          {
            "Text": "statement",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "msg",
            "AttrFlags": 2
          },
          {
            "Text": ", or if you’re being nonsensical something like "
          },
          {
            "Text": "jellybean",
            "AttrFlags": 2
          },
          {
            "Text": ". So you should know what parameters are sent into your callback so you can get them in the right order with proper names."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292577,
        "id": "f9814433-fb7f-4289-8d51-1797754851a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292577,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Asynchronous callbacks."
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Asynchronous callbacks."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292578,
        "id": "b7fe8f9b-212c-4c84-89e0-968b3fd8496a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292578,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One thing to note about JavaScript is it is synchronous by default, but there are APIs given in the environment (browser, Node.js, etc.) that could make it asynchronous (there’s more about that "
            ],
            [
              "here",
              [
                [
                  "a",
                  "https://stackoverflow.com/a/13806828/2066736"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One thing to note about JavaScript is it is synchronous by default, but there are APIs given in the environment (browser, Node.js, etc.) that could make it asynchronous (there’s more about that "
          },
          {
            "Text": "here",
            "Link": "https://stackoverflow.com/a/13806828/2066736"
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292578,
        "id": "4452df00-71e3-4b26-a946-250df46b893e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292578,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Some common things that are asynchronous in JavaScript environments that accept callbacks:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Some common things that are asynchronous in JavaScript environments that accept callbacks:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292578,
        "id": "8da06746-fe6d-4c8a-ac7e-16c0ff1c6b27",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292578,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Events"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Events"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292579,
        "id": "3a7d0e51-508c-4af2-9c6a-de446f713d3e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292579,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "setTimeout"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "setTimeout"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292579,
        "id": "571cf531-0e2c-4a66-a0be-326fe65e034a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292579,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "setInterval"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "setInterval"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292579,
        "id": "84768f2e-93dc-45f1-9474-898b04334912",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292579,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the fetch API"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "the fetch API"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292579,
        "id": "04b8a047-3881-47ce-94df-3e7d9c1573ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292579,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Promises"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Promises"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292579,
        "id": "bb6782ae-52f2-40b3-9447-ad6324d0a636",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292579,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Also any function that uses one of the above functions may be wrapped with a function that takes a callback and the callback would then be an asynchronous callback (although wrapping a promises with a function that takes a callback would likely be considered an anti-pattern as there are more preferred ways to handle promises)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Also any function that uses one of the above functions may be wrapped with a function that takes a callback and the callback would then be an asynchronous callback (although wrapping a promises with a function that takes a callback would likely be considered an anti-pattern as there are more preferred ways to handle promises)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292579,
        "id": "da6066c3-e256-4575-be3a-64ca076a6da8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292579,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So given that information we can construct an asynchronous function similar to the above synchronous one."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So given that information we can construct an asynchronous function similar to the above synchronous one."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292579,
        "id": "7e14c039-69dd-4146-9791-88de474b6dec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292579,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// a function that uses a callback named `cb` as a parameter\nfunction getAsyncMessage(cb) {\n    setTimeout(function () { cb(\"Hello World!\") }, 1000);\n}\n\nconsole.log(\"Before getSyncMessage call\");\n// calling a function and sending in a callback function as an argument.\ngetAsyncMessage(function(message) {\n    console.log(message);\n});\nconsole.log(\"After getSyncMessage call\");"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// a function that uses a callback named `cb` as a parameter\nfunction getAsyncMessage(cb) {\n    setTimeout(function () { cb(\"Hello World!\") }, 1000);\n}\n\nconsole.log(\"Before getSyncMessage call\");\n// calling a function and sending in a callback function as an argument.\ngetAsyncMessage(function(message) {\n    console.log(message);\n});\nconsole.log(\"After getSyncMessage call\");",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292580,
        "id": "41fd00c5-734b-4c49-a425-9dfd66c7f99f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292580,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Which prints the following to the console:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Which prints the following to the console:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292580,
        "id": "b6abc78c-7f7b-4ac9-a81b-ca9a9ad0129c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292580,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003e Before getSyncMessage call\n\u003e After getSyncMessage call\n// pauses for 1000 ms with no output\n\u003e Hello World!"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003e Before getSyncMessage call\n\u003e After getSyncMessage call\n// pauses for 1000 ms with no output\n\u003e Hello World!",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292580,
        "id": "ddf0b9f6-9f20-422d-aca4-5f2e84315c36",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292580,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Line execution goes to line 6 logs “Before getSyncMessage call”. Then execution goes to line 8 calling getAsyncMessage with a callback for the param "
            ],
            [
              "cb",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Line 3 is then executed which calls setTimeout with a callback as the first argument and the number 300 as the second argument. "
            ],
            [
              "setTimeout",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " does whatever it does and holds on to that callback so that it can call it later in 1000 milliseconds, but following setting up the timeout and before it pauses the 1000 milliseconds it hands execution back to where it left off so it goes to line 4, then line 11, and then pauses for 1 second and setTimeout then calls its callback function which takes execution back to line 3 where "
            ],
            [
              "getAsyncMessages",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " callback is called with value “Hello World” for its parameter "
            ],
            [
              "message",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which is then logged to the console on line 9."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Line execution goes to line 6 logs “Before getSyncMessage call”. Then execution goes to line 8 calling getAsyncMessage with a callback for the param "
          },
          {
            "Text": "cb",
            "AttrFlags": 2
          },
          {
            "Text": ". Line 3 is then executed which calls setTimeout with a callback as the first argument and the number 300 as the second argument. "
          },
          {
            "Text": "setTimeout",
            "AttrFlags": 2
          },
          {
            "Text": " does whatever it does and holds on to that callback so that it can call it later in 1000 milliseconds, but following setting up the timeout and before it pauses the 1000 milliseconds it hands execution back to where it left off so it goes to line 4, then line 11, and then pauses for 1 second and setTimeout then calls its callback function which takes execution back to line 3 where "
          },
          {
            "Text": "getAsyncMessages",
            "AttrFlags": 2
          },
          {
            "Text": " callback is called with value “Hello World” for its parameter "
          },
          {
            "Text": "message",
            "AttrFlags": 2
          },
          {
            "Text": " which is then logged to the console on line 9."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292580,
        "id": "0da1e6ac-4cf7-47cc-a537-41a3c4b83a93",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292580,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Callback functions in Node.js"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Callback functions in Node.js"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292580,
        "id": "429d3877-fdc0-464c-983f-93026c462d97",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292580,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "NodeJS has asynchronous callbacks and commonly supplies two parameters to your functions sometimes conventionally called "
            ],
            [
              "err",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "data",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". An example with reading a file text."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "NodeJS has asynchronous callbacks and commonly supplies two parameters to your functions sometimes conventionally called "
          },
          {
            "Text": "err",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "data",
            "AttrFlags": 2
          },
          {
            "Text": ". An example with reading a file text."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292580,
        "id": "c5ffdbd8-4471-436d-a4e9-159896c9d1aa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292580,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const fs = require(\"fs\");\n\nfs.readFile(\"./test.txt\", \"utf8\", function(err, data) {\n    if(err) {\n        // handle the error \n    } else {\n        // process the file text given with data\n    }\n});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const fs = require(\"fs\");\n\nfs.readFile(\"./test.txt\", \"utf8\", function(err, data) {\n    if(err) {\n        // handle the error \n    } else {\n        // process the file text given with data\n    }\n});",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292581,
        "id": "699bb87d-4beb-41ab-a9c8-c84d7b840983",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292581,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is an example of a callback that is called a single time."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is an example of a callback that is called a single time."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292581,
        "id": "04500242-2649-4618-a910-c6e368e1856c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292581,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It’s good practice to handle the error somehow even if your just logging it or throwing it. The else is not necessary if you throw or return and can be removed to decrease indentation so long as you stop execution of the current function in the if by doing something like throwing or returning."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It’s good practice to handle the error somehow even if your just logging it or throwing it. The else is not necessary if you throw or return and can be removed to decrease indentation so long as you stop execution of the current function in the if by doing something like throwing or returning."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292581,
        "id": "23f1133c-0798-4506-8a82-7d75ea7c92b0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292581,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Though it may be common to see "
            ],
            [
              "err",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "data",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " it may not always be the case that your callbacks will use that pattern it’s best to look at documentation."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Though it may be common to see "
          },
          {
            "Text": "err",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "data",
            "AttrFlags": 2
          },
          {
            "Text": " it may not always be the case that your callbacks will use that pattern it’s best to look at documentation."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292581,
        "id": "085b03f4-4634-4bfd-8530-79630a29a395",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292581,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another example callback comes from the express library (express 4.x):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another example callback comes from the express library (express 4.x):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292581,
        "id": "380a0e7a-be68-4a38-9b25-0ca092a17477",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292581,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// this code snippet was on http://expressjs.com/en/4x/api.html\nconst express = require('express');\nconst app = express();\n\n// this app.get method takes a url route to watch for and a callback\n// to call whenever that route is requested by a user.\napp.get('/', function(req, res){\n  res.send('hello world');\n});\n\napp.listen(3000);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// this code snippet was on http://expressjs.com/en/4x/api.html\nconst express = require('express');\nconst app = express();\n\n// this app.get method takes a url route to watch for and a callback\n// to call whenever that route is requested by a user.\napp.get('/', function(req, res){\n  res.send('hello world');\n});\n\napp.listen(3000);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292581,
        "id": "c94a7416-bf72-4266-ae7d-89bf9bdd0322",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292581,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example shows a callback that is called multiple times. The callback is provided with two objects as params named here as "
            ],
            [
              "req",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "res",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " these names correspond to request and response respectively, and they provide ways to view the request coming in and set up the response that will be sent to the user."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example shows a callback that is called multiple times. The callback is provided with two objects as params named here as "
          },
          {
            "Text": "req",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "res",
            "AttrFlags": 2
          },
          {
            "Text": " these names correspond to request and response respectively, and they provide ways to view the request coming in and set up the response that will be sent to the user."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552020292582,
        "id": "12df0fb2-107f-4361-9603-6d585e741fbb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552020292582,
        "parent_id": "51e20140-b0eb-4da0-a582-8c4d393b35e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As you can see there are various ways a callback can be used to execute sync and async code in JavaScript and callbacks are very ubiquitous throughout JavaScript."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As you can see there are various ways a callback can be used to execute sync and async code in JavaScript and callbacks are very ubiquitous throughout JavaScript."
          }
        ]
      }
    ],
    "title": "Callback functions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}