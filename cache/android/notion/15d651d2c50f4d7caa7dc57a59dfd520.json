{
  "ID": "15d651d2-c50f-4d7c-aa7d-c57a59dfd520",
  "Root": {
    "alive": true,
    "content": [
      "f2585fee-9e9d-4a22-b53f-35f8e19eefad",
      "4ea0b509-2078-476c-a50b-3415dc9b9799",
      "2f9f9a70-168b-41d2-aa02-1a77c47d4d55",
      "225eae38-76f8-446f-876c-dbb8879428c5",
      "3c0b3b78-88a1-437d-9125-a648cab7a512",
      "b250c4c9-9842-4866-b336-e4d147bf1d6a",
      "11aaa625-c6bd-42a5-a807-478d48979488",
      "4e5b13b1-a65a-4a5f-b1de-5bf7f650a210"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550447975941,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "15d651d2-c50f-4d7c-aa7d-c57a59dfd520",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550447975941,
    "parent_id": "9c91430d-940a-46b8-894c-258836f7d0f4",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Avoid leaking Activities with AsyncTask"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447975936,
        "id": "f2585fee-9e9d-4a22-b53f-35f8e19eefad",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447975936,
        "parent_id": "15d651d2-c50f-4d7c-aa7d-c57a59dfd520",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A word of caution: AsyncTask has many gotcha’s apart from the memory leak described here. So be careful with this API, or avoid it altogether if you don’t fully understand the implications. There are many alternatives (Thread, EventBus, RxAndroid, etc)."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "A word of caution: AsyncTask has many gotcha’s apart from the memory leak described here. So be careful with this API, or avoid it altogether if you don’t fully understand the implications. There are many alternatives (Thread, EventBus, RxAndroid, etc)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447975939,
        "id": "4ea0b509-2078-476c-a50b-3415dc9b9799",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447975939,
        "parent_id": "15d651d2-c50f-4d7c-aa7d-c57a59dfd520",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One common mistake with "
            ],
            [
              "AsyncTask",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is to capture a strong reference to the host "
            ],
            [
              "Activity",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (or "
            ],
            [
              "Fragment",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One common mistake with "
          },
          {
            "Text": "AsyncTask",
            "AttrFlags": 2
          },
          {
            "Text": " is to capture a strong reference to the host "
          },
          {
            "Text": "Activity",
            "AttrFlags": 2
          },
          {
            "Text": " (or "
          },
          {
            "Text": "Fragment",
            "AttrFlags": 2
          },
          {
            "Text": "):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447975939,
        "id": "2f9f9a70-168b-41d2-aa02-1a77c47d4d55",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447975939,
        "parent_id": "15d651d2-c50f-4d7c-aa7d-c57a59dfd520",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class MyActivity extends Activity {\n  private AsyncTask\u003cVoid, Void, Void\u003e myTask = new AsyncTask\u003cVoid, Void, Void\u003e() {"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class MyActivity extends Activity {\n  private AsyncTask\u003cVoid, Void, Void\u003e myTask = new AsyncTask\u003cVoid, Void, Void\u003e() {",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447975939,
        "id": "225eae38-76f8-446f-876c-dbb8879428c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447975939,
        "parent_id": "15d651d2-c50f-4d7c-aa7d-c57a59dfd520",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "// Don’t do this! Inner classes implicitly keep a pointer to their // parent, which in this case is the Activity!"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "// Don’t do this! Inner classes implicitly keep a pointer to their // parent, which in this case is the Activity!"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447975939,
        "id": "3c0b3b78-88a1-437d-9125-a648cab7a512",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447975939,
        "parent_id": "15d651d2-c50f-4d7c-aa7d-c57a59dfd520",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "}\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "}\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447975939,
        "id": "b250c4c9-9842-4866-b336-e4d147bf1d6a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447975939,
        "parent_id": "15d651d2-c50f-4d7c-aa7d-c57a59dfd520",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is a problem because "
            ],
            [
              "AsyncTask",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can easily outlive the parent "
            ],
            [
              "Activity",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", for example if a configuration change happens while the task is running."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is a problem because "
          },
          {
            "Text": "AsyncTask",
            "AttrFlags": 2
          },
          {
            "Text": " can easily outlive the parent "
          },
          {
            "Text": "Activity",
            "AttrFlags": 2
          },
          {
            "Text": ", for example if a configuration change happens while the task is running."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447975941,
        "id": "11aaa625-c6bd-42a5-a807-478d48979488",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447975941,
        "parent_id": "15d651d2-c50f-4d7c-aa7d-c57a59dfd520",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The right way to do this is to make your task a "
            ],
            [
              "static",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class, which does not capture the parent, and holding a "
            ],
            [
              "weak reference",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/lang/ref/WeakReference.html"
                ]
              ]
            ],
            [
              " to the host "
            ],
            [
              "Activity",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The right way to do this is to make your task a "
          },
          {
            "Text": "static",
            "AttrFlags": 2
          },
          {
            "Text": " class, which does not capture the parent, and holding a "
          },
          {
            "Text": "weak reference",
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/lang/ref/WeakReference.html"
          },
          {
            "Text": " to the host "
          },
          {
            "Text": "Activity",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447975941,
        "id": "4e5b13b1-a65a-4a5f-b1de-5bf7f650a210",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447975941,
        "parent_id": "15d651d2-c50f-4d7c-aa7d-c57a59dfd520",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class MyActivity extends Activity {\n  static class MyTask extends AsyncTask\u003cVoid, Void, Void\u003e {\n    // Weak references will still allow the Activity to be garbage-collected\n    private final WeakReference\u003cMyActivity\u003e weakActivity;\n\n    MyTask(MyActivity myActivity) {\n      this.weakActivity = new WeakReference\u003c\u003e(myActivity);\n    }\n\n    @Override\n    public Void doInBackground(Void... params) {\n      // do async stuff here\n    }\n\n    @Override\n    public void onPostExecute(Void result) {\n      // Re-acquire a strong reference to the activity, and verify\n      // that it still exists and is active.\n      MyActivity activity = weakActivity.get();\n      if (activity == null\n          || activity.isFinishing()\n          || activity.isDestroyed()) {\n        // activity is no longer valid, don't do anything!\n        return;\n      }\n\n      // The activity is still valid, do main-thread stuff here\n    }\n  }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class MyActivity extends Activity {\n  static class MyTask extends AsyncTask\u003cVoid, Void, Void\u003e {\n    // Weak references will still allow the Activity to be garbage-collected\n    private final WeakReference\u003cMyActivity\u003e weakActivity;\n\n    MyTask(MyActivity myActivity) {\n      this.weakActivity = new WeakReference\u003c\u003e(myActivity);\n    }\n\n    @Override\n    public Void doInBackground(Void... params) {\n      // do async stuff here\n    }\n\n    @Override\n    public void onPostExecute(Void result) {\n      // Re-acquire a strong reference to the activity, and verify\n      // that it still exists and is active.\n      MyActivity activity = weakActivity.get();\n      if (activity == null\n          || activity.isFinishing()\n          || activity.isDestroyed()) {\n        // activity is no longer valid, don't do anything!\n        return;\n      }\n\n      // The activity is still valid, do main-thread stuff here\n    }\n  }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Avoid leaking Activities with AsyncTask",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}