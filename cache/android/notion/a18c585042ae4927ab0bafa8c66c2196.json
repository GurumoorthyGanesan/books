{
  "ID": "a18c5850-42ae-4927-ab0b-afa8c66c2196",
  "Root": {
    "alive": true,
    "content": [
      "e24663e9-2c72-46ad-84d3-fbb431c81db4",
      "dc81f315-4a8b-46f3-a931-03c0c0e2e00e",
      "d453fbfe-47e7-4913-819d-ced6faa5ef5e",
      "b51ff5eb-3932-4a11-b94f-8553c6c023a0"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550451878032,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "a18c5850-42ae-4927-ab0b-afa8c66c2196",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551734746210,
    "parent_id": "96cf5a86-7732-431c-be7c-7c753d92a46a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Hiding SoftKeyboard"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451878029,
        "id": "e24663e9-2c72-46ad-84d3-fbb431c81db4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451878029,
        "parent_id": "a18c5850-42ae-4927-ab0b-afa8c66c2196",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Hiding Softkeyboard is a "
            ],
            [
              "basic requirement",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " usually when working with EditText. The softkeyboard by "
            ],
            [
              "default",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " can only be closed by pressing back button and so most developers use "
            ],
            [
              "InputMethodManager",
              [
                [
                  "a",
                  "https://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html"
                ]
              ]
            ],
            [
              " to force Android to hide the virtual keyboard calling "
            ],
            [
              "hideSoftInputFromWindow",
              [
                [
                  "a",
                  "http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html#hideSoftInputFromWindow(android.os.IBinder,%20int)"
                ]
              ]
            ],
            [
              " and passing in the token of the window containing your focused view. The code to do the following:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Hiding Softkeyboard is a "
          },
          {
            "Text": "basic requirement",
            "AttrFlags": 1
          },
          {
            "Text": " usually when working with EditText. The softkeyboard by "
          },
          {
            "Text": "default",
            "AttrFlags": 4
          },
          {
            "Text": " can only be closed by pressing back button and so most developers use "
          },
          {
            "Text": "InputMethodManager",
            "Link": "https://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html"
          },
          {
            "Text": " to force Android to hide the virtual keyboard calling "
          },
          {
            "Text": "hideSoftInputFromWindow",
            "Link": "http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html#hideSoftInputFromWindow(android.os.IBinder,%20int)"
          },
          {
            "Text": " and passing in the token of the window containing your focused view. The code to do the following:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451878032,
        "id": "dc81f315-4a8b-46f3-a931-03c0c0e2e00e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451878032,
        "parent_id": "a18c5850-42ae-4927-ab0b-afa8c66c2196",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public void hideSoftKeyboard()    \n{\n        InputMethodManager inputMethodManager = (InputMethodManager) getSystemService(Activity.INPUT_METHOD_SERVICE);\n        inputMethodManager.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), 0);    \n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public void hideSoftKeyboard()    \n{\n        InputMethodManager inputMethodManager = (InputMethodManager) getSystemService(Activity.INPUT_METHOD_SERVICE);\n        inputMethodManager.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), 0);    \n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451878032,
        "id": "d453fbfe-47e7-4913-819d-ced6faa5ef5e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451878032,
        "parent_id": "a18c5850-42ae-4927-ab0b-afa8c66c2196",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The code is direct, but another major problems that arises is that the hide function needs to be called when some event occurs. What to do when you need the Softkeyboard hidden upon pressing anywhere other than your EditText? The following code gives a neat function that needs to be called in your onCreate() method just once."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The code is direct, but another major problems that arises is that the hide function needs to be called when some event occurs. What to do when you need the Softkeyboard hidden upon pressing anywhere other than your EditText? The following code gives a neat function that needs to be called in your onCreate() method just once."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451878032,
        "id": "b51ff5eb-3932-4a11-b94f-8553c6c023a0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451878032,
        "parent_id": "a18c5850-42ae-4927-ab0b-afa8c66c2196",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public void setupUI(View view) \n{\n        String s = \"inside\";\n        //Set up touch listener for non-text box views to hide keyboard.\n        if (!(view instanceof EditText)) {\n\n            view.setOnTouchListener(new View.OnTouchListener() {\n\n                public boolean onTouch(View v, MotionEvent event) {\n                    hideSoftKeyboard();\n                    return false;\n                }\n\n            });\n        }\n\n        //If a layout container, iterate over children and seed recursion.\n        if (view instanceof ViewGroup) {\n\n            for (int i = 0; i \u003c ((ViewGroup) view).getChildCount(); i++) {\n\n                View innerView = ((ViewGroup) view).getChildAt(i);\n\n                setupUI(innerView);\n            }\n        }    \n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public void setupUI(View view) \n{\n        String s = \"inside\";\n        //Set up touch listener for non-text box views to hide keyboard.\n        if (!(view instanceof EditText)) {\n\n            view.setOnTouchListener(new View.OnTouchListener() {\n\n                public boolean onTouch(View v, MotionEvent event) {\n                    hideSoftKeyboard();\n                    return false;\n                }\n\n            });\n        }\n\n        //If a layout container, iterate over children and seed recursion.\n        if (view instanceof ViewGroup) {\n\n            for (int i = 0; i \u003c ((ViewGroup) view).getChildCount(); i++) {\n\n                View innerView = ((ViewGroup) view).getChildAt(i);\n\n                setupUI(innerView);\n            }\n        }    \n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Hiding SoftKeyboard",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}