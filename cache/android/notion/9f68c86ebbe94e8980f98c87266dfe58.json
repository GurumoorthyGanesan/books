{
  "ID": "9f68c86e-bbe9-4e89-80f9-8c87266dfe58",
  "Root": {
    "alive": true,
    "content": [
      "013e2b00-681c-4bc7-8d3a-31652d4920a7",
      "b1cefcfc-6481-4411-ae99-bce95fc5d8fe",
      "766f2057-4749-4187-a932-ae85501096bd",
      "1734f4af-2da4-4ffa-9b8a-4a4d262d79a2"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550447787846,
    "id": "9f68c86e-bbe9-4e89-80f9-8c87266dfe58",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550447787846,
    "parent_id": "2e2716b4-5b9a-4670-8a00-377992b3a547",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "030 Asynchronous prepare"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447787843,
        "id": "013e2b00-681c-4bc7-8d3a-31652d4920a7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447787843,
        "parent_id": "9f68c86e-bbe9-4e89-80f9-8c87266dfe58",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "MediaPlayer$prepare()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a blocking call and will freeze the UI till execution completes. To solve this problem, "
            ],
            [
              "MediaPlayer$prepareAsync()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be used."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "MediaPlayer$prepare()",
            "AttrFlags": 2
          },
          {
            "Text": " is a blocking call and will freeze the UI till execution completes. To solve this problem, "
          },
          {
            "Text": "MediaPlayer$prepareAsync()",
            "AttrFlags": 2
          },
          {
            "Text": " can be used."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447787846,
        "id": "b1cefcfc-6481-4411-ae99-bce95fc5d8fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447787846,
        "parent_id": "9f68c86e-bbe9-4e89-80f9-8c87266dfe58",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "mMediaPlayer = ... // Initialize it here\nmMediaPlayer.setOnPreparedListener(new MediaPlayer.OnPreparedListener(){\n    @Override\n    public void onPrepared(MediaPlayer player) {\n        // Called when the MediaPlayer is ready to play\n        mMediaPlayer.start();\n    }\n}); // Set callback for when prepareAsync() finishes\nmMediaPlayer.prepareAsync(); // Prepare asynchronously to not block the Main Thread"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "mMediaPlayer = ... // Initialize it here\nmMediaPlayer.setOnPreparedListener(new MediaPlayer.OnPreparedListener(){\n    @Override\n    public void onPrepared(MediaPlayer player) {\n        // Called when the MediaPlayer is ready to play\n        mMediaPlayer.start();\n    }\n}); // Set callback for when prepareAsync() finishes\nmMediaPlayer.prepareAsync(); // Prepare asynchronously to not block the Main Thread",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447787846,
        "id": "766f2057-4749-4187-a932-ae85501096bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447787846,
        "parent_id": "9f68c86e-bbe9-4e89-80f9-8c87266dfe58",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "On synchronous operations, errors would normally be signaled with an exception or an error code, but whenever you use asynchronous resources, you should make sure your application is notified of errors appropriately. For MediaPlayer,"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "On synchronous operations, errors would normally be signaled with an exception or an error code, but whenever you use asynchronous resources, you should make sure your application is notified of errors appropriately. For MediaPlayer,"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447787846,
        "id": "1734f4af-2da4-4ffa-9b8a-4a4d262d79a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447787846,
        "parent_id": "9f68c86e-bbe9-4e89-80f9-8c87266dfe58",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "mMediaPlayer.setOnErrorListener(new MediaPlayer.OnErrorListener(){\n        @Override\n        public boolean onError(MediaPlayer mp, int what, int extra) {\n            // ... react appropriately ...\n            // The MediaPlayer has moved to the Error state, must be reset!\n            // Then return true if the error has been handled\n        }\n});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "mMediaPlayer.setOnErrorListener(new MediaPlayer.OnErrorListener(){\n        @Override\n        public boolean onError(MediaPlayer mp, int what, int extra) {\n            // ... react appropriately ...\n            // The MediaPlayer has moved to the Error state, must be reset!\n            // Then return true if the error has been handled\n        }\n});",
        "code_language": "Plain Text"
      }
    ],
    "title": "030 Asynchronous prepare"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}