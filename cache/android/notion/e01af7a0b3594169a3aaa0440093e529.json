{
  "ID": "e01af7a0-b359-4169-a3aa-a0440093e529",
  "Root": {
    "alive": true,
    "content": [
      "1311a080-2215-4356-8cd5-df50a77c1137",
      "0e3a081a-fb9e-4fb8-b47b-5db3521c764b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550456700144,
    "id": "e01af7a0-b359-4169-a3aa-a0440093e529",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550456700144,
    "parent_id": "786f5a33-fe08-45e1-b4a3-d87fee25c003",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 Create own singleton class for toast massages"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550456700141,
        "id": "1311a080-2215-4356-8cd5-df50a77c1137",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550456700141,
        "parent_id": "e01af7a0-b359-4169-a3aa-a0440093e529",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here is how to create your own singleton class for toast messages, If your application need to show success, warning and the danger messages for different use cases you can use this class after you have modified it to your own specifications."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here is how to create your own singleton class for toast messages, If your application need to show success, warning and the danger messages for different use cases you can use this class after you have modified it to your own specifications."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550456700144,
        "id": "0e3a081a-fb9e-4fb8-b47b-5db3521c764b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550456700144,
        "parent_id": "e01af7a0-b359-4169-a3aa-a0440093e529",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class ToastGenerate {\n    private static ToastGenerate ourInstance;\n\n    public ToastGenerate (Context context) {\n        this.context = context;\n                                            }\n    public static ToastGenerate getInstance(Context context) {\n        if (ourInstance == null)\n            ourInstance = new ToastGenerate(context);\n        return ourInstance;\n    }\n\n   //pass message and message type to this method\n    public void createToastMessage(String message,int type){\n   \n//inflate the custom layout \n        LayoutInflater layoutInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n\n        LinearLayout toastLayout = (LinearLayout) layoutInflater.inflate(R.layout.layout_custome_toast,null);\n        TextView toastShowMessage = (TextView) toastLayout.findViewById(R.id.textCustomToastTopic);\n\n        switch (type){\n            case 0:\n                //if the message type is 0 fail toaster method will call\n                createFailToast(toastLayout,toastShowMessage,message);\n                break;\n            case 1:\n                //if the message type is 1 success toaster method will call\n                createSuccessToast(toastLayout,toastShowMessage,message);\n                break;\n\n            case 2:\n                createWarningToast( toastLayout, toastShowMessage, message);\n                //if the message type is 2 warning toaster method will call\n                break;\n            default:\n                createFailToast(toastLayout,toastShowMessage,message);\n\n        }\n    }\n\n//Failure toast message method\n    private final void createFailToast(LinearLayout toastLayout,TextView toastMessage,String message){\n        toastLayout.setBackgroundColor(context.getResources().getColor(R.color.button_alert_normal));\n        toastMessage.setText(message);\n        toastMessage.setTextColor(context.getResources().getColor(R.color.white));\n        showToast(context,toastLayout);\n    }\n\n    //warning toast message method\n    private final void createWarningToast( LinearLayout toastLayout, TextView toastMessage, String message) {\n        toastLayout.setBackgroundColor(context.getResources().getColor(R.color.warning_toast));\n        toastMessage.setText(message);\n        toastMessage.setTextColor(context.getResources().getColor(R.color.white));\n        showToast(context, toastLayout);\n    }\n//success toast message method\n    private final void createSuccessToast(LinearLayout toastLayout,TextView toastMessage,String message){\n        toastLayout.setBackgroundColor(context.getResources().getColor(R.color.success_toast));\n\n        toastMessage.setText(message);\n        toastMessage.setTextColor(context.getResources().getColor(R.color.white));\n        showToast(context,toastLayout);\n    }\n\n    private void showToast(View view){\n        Toast toast = new Toast(context);\n        toast.setGravity(Gravity.TOP,0,0); // show message in the top of the device\n        toast.setDuration(Toast.LENGTH_SHORT);\n        toast.setView(view);\n        toast.show();\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class ToastGenerate {\n    private static ToastGenerate ourInstance;\n\n    public ToastGenerate (Context context) {\n        this.context = context;\n                                            }\n    public static ToastGenerate getInstance(Context context) {\n        if (ourInstance == null)\n            ourInstance = new ToastGenerate(context);\n        return ourInstance;\n    }\n\n   //pass message and message type to this method\n    public void createToastMessage(String message,int type){\n   \n//inflate the custom layout \n        LayoutInflater layoutInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n\n        LinearLayout toastLayout = (LinearLayout) layoutInflater.inflate(R.layout.layout_custome_toast,null);\n        TextView toastShowMessage = (TextView) toastLayout.findViewById(R.id.textCustomToastTopic);\n\n        switch (type){\n            case 0:\n                //if the message type is 0 fail toaster method will call\n                createFailToast(toastLayout,toastShowMessage,message);\n                break;\n            case 1:\n                //if the message type is 1 success toaster method will call\n                createSuccessToast(toastLayout,toastShowMessage,message);\n                break;\n\n            case 2:\n                createWarningToast( toastLayout, toastShowMessage, message);\n                //if the message type is 2 warning toaster method will call\n                break;\n            default:\n                createFailToast(toastLayout,toastShowMessage,message);\n\n        }\n    }\n\n//Failure toast message method\n    private final void createFailToast(LinearLayout toastLayout,TextView toastMessage,String message){\n        toastLayout.setBackgroundColor(context.getResources().getColor(R.color.button_alert_normal));\n        toastMessage.setText(message);\n        toastMessage.setTextColor(context.getResources().getColor(R.color.white));\n        showToast(context,toastLayout);\n    }\n\n    //warning toast message method\n    private final void createWarningToast( LinearLayout toastLayout, TextView toastMessage, String message) {\n        toastLayout.setBackgroundColor(context.getResources().getColor(R.color.warning_toast));\n        toastMessage.setText(message);\n        toastMessage.setTextColor(context.getResources().getColor(R.color.white));\n        showToast(context, toastLayout);\n    }\n//success toast message method\n    private final void createSuccessToast(LinearLayout toastLayout,TextView toastMessage,String message){\n        toastLayout.setBackgroundColor(context.getResources().getColor(R.color.success_toast));\n\n        toastMessage.setText(message);\n        toastMessage.setTextColor(context.getResources().getColor(R.color.white));\n        showToast(context,toastLayout);\n    }\n\n    private void showToast(View view){\n        Toast toast = new Toast(context);\n        toast.setGravity(Gravity.TOP,0,0); // show message in the top of the device\n        toast.setDuration(Toast.LENGTH_SHORT);\n        toast.setView(view);\n        toast.show();\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "010 Create own singleton class for toast massages"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}