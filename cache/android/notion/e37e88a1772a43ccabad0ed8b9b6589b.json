{
  "ID": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
  "Root": {
    "alive": true,
    "content": [
      "cf611e5d-0a1c-4f74-8d78-679d0888e31d",
      "5ab3633a-2b81-4531-8d63-27b40a02f9f2",
      "1d009393-56e3-47ae-9aab-8477a1486621",
      "fa1a3ba7-6f0d-4ad3-ab31-3391e8a4db24",
      "e7b01cb3-3814-4bbc-b8e8-e2c11cd02352",
      "e185f1f2-c150-40c8-8767-d2b6a51eeb92",
      "2d56bd2a-3480-4671-8743-bf759e13b654",
      "100007eb-8ba8-4f76-b295-144386e45ae6",
      "8baef6d0-857b-4b00-a5d5-91476f8a99c6",
      "ac2ec8bb-3fbc-4d1b-8f9d-47cd0070fd2f",
      "05767966-aa48-4ca6-84b2-e314165d356d",
      "b210d06b-aed1-4ab5-9dc6-ab52a9c48720",
      "7d826c02-ee2c-477f-942a-d7d684e010e5",
      "8fa9e32a-dc82-4e07-9350-285436a40bcd",
      "95270514-75eb-422d-9123-2aa77938d7ff",
      "c9ff24b7-d2c1-4251-9a67-750d21562253",
      "ca732ed4-af20-4b95-a683-35c63094096d",
      "ba3760ab-96a6-446a-ab8b-e9280e166d69",
      "b3ae7e1a-3950-413c-b2a7-fb14030d9a98",
      "21bcf77f-7001-491e-a6ef-78e4910a3826",
      "f2b93843-6cdb-451e-a536-2924a5b0400f",
      "fa02e7c5-0bfd-439c-a702-e576315365aa",
      "1a4a7389-06d1-4a09-93c9-0488d420d67d",
      "dbf593de-5fea-433e-84d6-be67a758f006",
      "b4db12bd-a4e2-44cf-bb60-6b830fd43dce",
      "fd273548-bd3c-4496-bbe9-93f9d0fa9315"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550445060136,
    "id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550445060136,
    "parent_id": "e5dfd590-a7f4-4ea2-b744-e87d7d45fabf",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "050 Binding Views using ButterKnife"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060130,
        "id": "cf611e5d-0a1c-4f74-8d78-679d0888e31d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060130,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "we can annotate fields with "
            ],
            [
              "@BindView",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and a view ID for Butter Knife to find and automatically cast the corresponding view in our layout."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "we can annotate fields with "
          },
          {
            "Text": "@BindView",
            "AttrFlags": 2
          },
          {
            "Text": " and a view ID for Butter Knife to find and automatically cast the corresponding view in our layout."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060133,
        "id": "5ab3633a-2b81-4531-8d63-27b40a02f9f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060133,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Binding Views"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Binding Views"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060134,
        "id": "1d009393-56e3-47ae-9aab-8477a1486621",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060134,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Binding Views in Activity"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Binding Views in Activity"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060134,
        "id": "fa1a3ba7-6f0d-4ad3-ab31-3391e8a4db24",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060134,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class ExampleActivity extends Activity {\n  @BindView(R.id.title) TextView title;\n  @BindView(R.id.subtitle) TextView subtitle;\n  @BindView(R.id.footer) TextView footer;\n\n  @Override public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.simple_activity);\n    ButterKnife.bind(this);\n    // TODO Use fields...\n  }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class ExampleActivity extends Activity {\n  @BindView(R.id.title) TextView title;\n  @BindView(R.id.subtitle) TextView subtitle;\n  @BindView(R.id.footer) TextView footer;\n\n  @Override public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.simple_activity);\n    ButterKnife.bind(this);\n    // TODO Use fields...\n  }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060134,
        "id": "e7b01cb3-3814-4bbc-b8e8-e2c11cd02352",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060134,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Binding Views in Fragments"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Binding Views in Fragments"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060134,
        "id": "e185f1f2-c150-40c8-8767-d2b6a51eeb92",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060134,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class FancyFragment extends Fragment {\n  @BindView(R.id.button1) Button button1;\n  @BindView(R.id.button2) Button button2;\n  private Unbinder unbinder;\n\n  @Override \n  public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n    View view = inflater.inflate(R.layout.fancy_fragment, container, false);\n    unbinder = ButterKnife.bind(this, view);\n    // TODO Use fields...\n    return view;\n  }\n  \n  // in fragments or non activity bindings we need to unbind the binding when view is about to be destroyed\n  @Override\n    public void onDestroy() {\n        super.onDestroy();\n        unbinder.unbind();\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class FancyFragment extends Fragment {\n  @BindView(R.id.button1) Button button1;\n  @BindView(R.id.button2) Button button2;\n  private Unbinder unbinder;\n\n  @Override \n  public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n    View view = inflater.inflate(R.layout.fancy_fragment, container, false);\n    unbinder = ButterKnife.bind(this, view);\n    // TODO Use fields...\n    return view;\n  }\n  \n  // in fragments or non activity bindings we need to unbind the binding when view is about to be destroyed\n  @Override\n    public void onDestroy() {\n        super.onDestroy();\n        unbinder.unbind();\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060134,
        "id": "2d56bd2a-3480-4671-8743-bf759e13b654",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060134,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Binding Views in Dialogs"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Binding Views in Dialogs"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060134,
        "id": "100007eb-8ba8-4f76-b295-144386e45ae6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060134,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can use "
            ],
            [
              "ButterKnife.findById",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to find views on a View, Activity, or Dialog. It uses generics to infer the return type and automatically performs the cast."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can use "
          },
          {
            "Text": "ButterKnife.findById",
            "AttrFlags": 2
          },
          {
            "Text": " to find views on a View, Activity, or Dialog. It uses generics to infer the return type and automatically performs the cast."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060134,
        "id": "8baef6d0-857b-4b00-a5d5-91476f8a99c6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060134,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "View view = LayoutInflater.from(context).inflate(R.layout.thing, null);\nTextView firstName = ButterKnife.findById(view, R.id.first_name);\nTextView lastName = ButterKnife.findById(view, R.id.last_name);\nImageView photo = ButterKnife.findById(view, R.id.photo);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "View view = LayoutInflater.from(context).inflate(R.layout.thing, null);\nTextView firstName = ButterKnife.findById(view, R.id.first_name);\nTextView lastName = ButterKnife.findById(view, R.id.last_name);\nImageView photo = ButterKnife.findById(view, R.id.photo);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060134,
        "id": "ac2ec8bb-3fbc-4d1b-8f9d-47cd0070fd2f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060134,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Binding Views in ViewHolder"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Binding Views in ViewHolder"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060134,
        "id": "05767966-aa48-4ca6-84b2-e314165d356d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060134,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "static class ViewHolder {\n    @BindView(R.id.title) TextView name;\n    @BindView(R.id.job_title) TextView jobTitle;\n\n    public ViewHolder(View view) {\n      ButterKnife.bind(this, view);\n    }\n  }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "static class ViewHolder {\n    @BindView(R.id.title) TextView name;\n    @BindView(R.id.job_title) TextView jobTitle;\n\n    public ViewHolder(View view) {\n      ButterKnife.bind(this, view);\n    }\n  }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060134,
        "id": "b210d06b-aed1-4ab5-9dc6-ab52a9c48720",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060134,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Binding Resources"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Binding Resources"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060135,
        "id": "7d826c02-ee2c-477f-942a-d7d684e010e5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060135,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Apart from being useful for binding views, one could also use ButterKnife to bind resources such as those defined within "
            ],
            [
              "strings.xml",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "drawables.xml",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "colors.xml",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "dimens.xml",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", etc."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Apart from being useful for binding views, one could also use ButterKnife to bind resources such as those defined within "
          },
          {
            "Text": "strings.xml",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "drawables.xml",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "colors.xml",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "dimens.xml",
            "AttrFlags": 2
          },
          {
            "Text": ", etc."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060135,
        "id": "8fa9e32a-dc82-4e07-9350-285436a40bcd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060135,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class ExampleActivity extends Activity {"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class ExampleActivity extends Activity {",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060135,
        "id": "95270514-75eb-422d-9123-2aa77938d7ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060135,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "@BindString(R.string.title) String title; @BindDrawable(R.drawable.graphic) Drawable graphic; @BindColor(R.color.red) int red; // int or ColorStateList field @BindDimen(R.dimen.spacer) Float spacer; // int (for pixel size) or float (for exact value) field"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "@BindString(R.string.title) String title; @BindDrawable(R.drawable.graphic) Drawable graphic; @BindColor(R.color.red) int red; // int or ColorStateList field @BindDimen(R.dimen.spacer) Float spacer; // int (for pixel size) or float (for exact value) field"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060135,
        "id": "c9ff24b7-d2c1-4251-9a67-750d21562253",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060135,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "@Override public void onCreate(Bundle savedInstanceState) {"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "@Override public void onCreate(Bundle savedInstanceState) {"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060135,
        "id": "ca732ed4-af20-4b95-a683-35c63094096d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060135,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// ...\n\nButterKnife.bind(this);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// ...\n\nButterKnife.bind(this);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060135,
        "id": "ba3760ab-96a6-446a-ab8b-e9280e166d69",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060135,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "}"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "}"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060135,
        "id": "b3ae7e1a-3950-413c-b2a7-fb14030d9a98",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060135,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060135,
        "id": "21bcf77f-7001-491e-a6ef-78e4910a3826",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060135,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Binding View Lists"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Binding View Lists"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060135,
        "id": "f2b93843-6cdb-451e-a536-2924a5b0400f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060135,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can group multiple views into a List or array. This is very helpful when we need to perform one action on multiple views at once."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can group multiple views into a List or array. This is very helpful when we need to perform one action on multiple views at once."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060135,
        "id": "fa02e7c5-0bfd-439c-a702-e576315365aa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060135,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@BindViews({ R.id.first_name, R.id.middle_name, R.id.last_name })\nList\u003cEditText\u003e nameViews;\n\n//The apply method allows you to act on all the views in a list at once.\nButterKnife.apply(nameViews, DISABLE);\nButterKnife.apply(nameViews, ENABLED, false);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@BindViews({ R.id.first_name, R.id.middle_name, R.id.last_name })\nList\u003cEditText\u003e nameViews;\n\n//The apply method allows you to act on all the views in a list at once.\nButterKnife.apply(nameViews, DISABLE);\nButterKnife.apply(nameViews, ENABLED, false);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060136,
        "id": "1a4a7389-06d1-4a09-93c9-0488d420d67d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060136,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//We can use Action and Setter interfaces allow specifying simple behavior.\nstatic final ButterKnife.Action\u003cView\u003e DISABLE = new ButterKnife.Action\u003cView\u003e() {\n  @Override public void apply(View view, int index) {\n    view.setEnabled(false);\n  }\n};\nstatic final ButterKnife.Setter\u003cView, Boolean\u003e ENABLED = new ButterKnife.Setter\u003cView, Boolean\u003e() {\n  @Override public void set(View view, Boolean value, int index) {\n    view.setEnabled(value);\n  }\n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//We can use Action and Setter interfaces allow specifying simple behavior.\nstatic final ButterKnife.Action\u003cView\u003e DISABLE = new ButterKnife.Action\u003cView\u003e() {\n  @Override public void apply(View view, int index) {\n    view.setEnabled(false);\n  }\n};\nstatic final ButterKnife.Setter\u003cView, Boolean\u003e ENABLED = new ButterKnife.Setter\u003cView, Boolean\u003e() {\n  @Override public void set(View view, Boolean value, int index) {\n    view.setEnabled(value);\n  }\n};",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060136,
        "id": "dbf593de-5fea-433e-84d6-be67a758f006",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060136,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Optional Bindings"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Optional Bindings"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060136,
        "id": "b4db12bd-a4e2-44cf-bb60-6b830fd43dce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060136,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By default, both "
            ],
            [
              "@Bind",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and listener bindings are required. An exception is thrown if the target view cannot be found. But if we are not sure if a view will be there or not then we can add a "
            ],
            [
              "@Nullable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " annotation to fields or the "
            ],
            [
              "@Optional",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " annotation to methods to suppress this behavior and create an optional binding."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By default, both "
          },
          {
            "Text": "@Bind",
            "AttrFlags": 2
          },
          {
            "Text": " and listener bindings are required. An exception is thrown if the target view cannot be found. But if we are not sure if a view will be there or not then we can add a "
          },
          {
            "Text": "@Nullable",
            "AttrFlags": 2
          },
          {
            "Text": " annotation to fields or the "
          },
          {
            "Text": "@Optional",
            "AttrFlags": 2
          },
          {
            "Text": " annotation to methods to suppress this behavior and create an optional binding."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445060136,
        "id": "fd273548-bd3c-4496-bbe9-93f9d0fa9315",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445060136,
        "parent_id": "e37e88a1-772a-43cc-abad-0ed8b9b6589b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@Nullable \n@BindView(R.id.might_not_be_there) TextView mightNotBeThere;\n\n@Optional \n@OnClick(R.id.maybe_missing) \nvoid onMaybeMissingClicked() {\n  // TODO ...\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@Nullable \n@BindView(R.id.might_not_be_there) TextView mightNotBeThere;\n\n@Optional \n@OnClick(R.id.maybe_missing) \nvoid onMaybeMissingClicked() {\n  // TODO ...\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "050 Binding Views using ButterKnife"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}