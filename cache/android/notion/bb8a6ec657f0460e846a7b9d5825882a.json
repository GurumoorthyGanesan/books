{
  "ID": "bb8a6ec6-57f0-460e-846a-7b9d5825882a",
  "Root": {
    "alive": true,
    "content": [
      "9414183c-90dd-4f44-aa41-c02fc70e0346",
      "97b46df4-60cc-4e77-bc55-ffefeb38d0db",
      "da308580-2c99-4a7e-bc6f-34f44edd0fdd",
      "6ca6ac50-ccca-4997-907c-0866d4f10845",
      "d313413f-55d2-4de4-b10e-f33ec1e90672",
      "28570721-fe1c-40c4-aad7-4e79affb9dc4",
      "06fac0ae-51d3-4a43-92fe-d1a505b9bff5",
      "498b8871-4634-4716-8d00-e1bfd7233956",
      "a61e22ef-bb63-4a0e-9bce-1e2676e6ca31",
      "180f94ba-ad6c-4b44-9065-6282e4a49ff5",
      "72a4b6ac-b399-407c-98da-94b7fbc4096c",
      "64dc7c77-b18d-4895-aa0c-ec30d0471684",
      "1e3d2121-49a3-487f-9e29-7cbea6d98736",
      "5d298223-8878-4233-81e5-59b2bdbbfb2c",
      "1d42de77-c26e-417c-8b30-ed4d6f053676",
      "f4d4368c-2da9-42d2-83f9-b8713adbdd03",
      "6f02ead6-b1da-415c-8f24-ceb1aa2b4e59"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550445434978,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "bb8a6ec6-57f0-460e-846a-7b9d5825882a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550445434978,
    "parent_id": "621f346c-f9c6-4d5c-8e6e-6106d643fcce",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Creating Custom Views"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445434967,
        "id": "9414183c-90dd-4f44-aa41-c02fc70e0346",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445434967,
        "parent_id": "bb8a6ec6-57f0-460e-846a-7b9d5825882a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you need a completely customized view, you’ll need to subclass "
            ],
            [
              "View",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (the superclass of all Android views) and provide your custom sizing ("
            ],
            [
              "onMeasure(...)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") and drawing ("
            ],
            [
              "onDraw(...)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") methods:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you need a completely customized view, you’ll need to subclass "
          },
          {
            "Text": "View",
            "AttrFlags": 2
          },
          {
            "Text": " (the superclass of all Android views) and provide your custom sizing ("
          },
          {
            "Text": "onMeasure(...)",
            "AttrFlags": 2
          },
          {
            "Text": ") and drawing ("
          },
          {
            "Text": "onDraw(...)",
            "AttrFlags": 2
          },
          {
            "Text": ") methods:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445434970,
        "id": "97b46df4-60cc-4e77-bc55-ffefeb38d0db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445434970,
        "parent_id": "bb8a6ec6-57f0-460e-846a-7b9d5825882a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Create your custom view skeleton:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " this is basically the same for every custom view. Here we create the skeleton for a custom view that can draw a smiley, called "
            ],
            [
              "SmileyView",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Create your custom view skeleton:",
            "AttrFlags": 1
          },
          {
            "Text": " this is basically the same for every custom view. Here we create the skeleton for a custom view that can draw a smiley, called "
          },
          {
            "Text": "SmileyView",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445434970,
        "id": "da308580-2c99-4a7e-bc6f-34f44edd0fdd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445434970,
        "parent_id": "bb8a6ec6-57f0-460e-846a-7b9d5825882a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class SmileyView extends View {\n    private Paint mCirclePaint;\n    private Paint mEyeAndMouthPaint;\n\n    private float mCenterX;\n    private float mCenterY;\n    private float mRadius;\n    private RectF mArcBounds = new RectF();\n\n    public SmileyView(Context context) {\n        this(context, null, 0);\n    }\n\n    public SmileyView(Context context, AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public SmileyView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        initPaints();\n    }\n\n    private void initPaints() {/* ... */}\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {/* ... */}\n\n    @Override\n    protected void onDraw(Canvas canvas) {/* ... */}\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class SmileyView extends View {\n    private Paint mCirclePaint;\n    private Paint mEyeAndMouthPaint;\n\n    private float mCenterX;\n    private float mCenterY;\n    private float mRadius;\n    private RectF mArcBounds = new RectF();\n\n    public SmileyView(Context context) {\n        this(context, null, 0);\n    }\n\n    public SmileyView(Context context, AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public SmileyView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        initPaints();\n    }\n\n    private void initPaints() {/* ... */}\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {/* ... */}\n\n    @Override\n    protected void onDraw(Canvas canvas) {/* ... */}\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445434971,
        "id": "6ca6ac50-ccca-4997-907c-0866d4f10845",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445434971,
        "parent_id": "bb8a6ec6-57f0-460e-846a-7b9d5825882a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Initialize your paints:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " the "
            ],
            [
              "Paint",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " objects are the brushes of your virtual canvas defining how your geometric objects are rendered (e.g. color, fill and stroke style, etc.). Here we create two "
            ],
            [
              "Paint",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s, one yellow filled paint for the circle and one black stroke paint for the eyes and the mouth:"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Initialize your paints:",
            "AttrFlags": 1
          },
          {
            "Text": " the "
          },
          {
            "Text": "Paint",
            "AttrFlags": 2
          },
          {
            "Text": " objects are the brushes of your virtual canvas defining how your geometric objects are rendered (e.g. color, fill and stroke style, etc.). Here we create two "
          },
          {
            "Text": "Paint",
            "AttrFlags": 2
          },
          {
            "Text": "s, one yellow filled paint for the circle and one black stroke paint for the eyes and the mouth:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445434971,
        "id": "d313413f-55d2-4de4-b10e-f33ec1e90672",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445434971,
        "parent_id": "bb8a6ec6-57f0-460e-846a-7b9d5825882a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "private void initPaints() {\n    mCirclePaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n    mCirclePaint.setStyle(Paint.Style.FILL);\n    mCirclePaint.setColor(Color.YELLOW);\n    mEyeAndMouthPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n    mEyeAndMouthPaint.setStyle(Paint.Style.STROKE);\n    mEyeAndMouthPaint.setStrokeWidth(16 * getResources().getDisplayMetrics().density);\n    mEyeAndMouthPaint.setStrokeCap(Paint.Cap.ROUND);\n    mEyeAndMouthPaint.setColor(Color.BLACK);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "private void initPaints() {\n    mCirclePaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n    mCirclePaint.setStyle(Paint.Style.FILL);\n    mCirclePaint.setColor(Color.YELLOW);\n    mEyeAndMouthPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n    mEyeAndMouthPaint.setStyle(Paint.Style.STROKE);\n    mEyeAndMouthPaint.setStrokeWidth(16 * getResources().getDisplayMetrics().density);\n    mEyeAndMouthPaint.setStrokeCap(Paint.Cap.ROUND);\n    mEyeAndMouthPaint.setColor(Color.BLACK);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445434973,
        "id": "28570721-fe1c-40c4-aad7-4e79affb9dc4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445434973,
        "parent_id": "bb8a6ec6-57f0-460e-846a-7b9d5825882a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Implement your own ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "onMeasure(...)",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " method:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " this is required so that the parent layouts (e.g. "
            ],
            [
              "FrameLayout",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") can properly align your custom view. It provides a set of "
            ],
            [
              "measureSpecs",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that you can use to determine your view’s height and width. Here we create a square by making sure that the height and width are the same:"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Implement your own ",
            "AttrFlags": 1
          },
          {
            "Text": "onMeasure(...)",
            "AttrFlags": 3
          },
          {
            "Text": " method:",
            "AttrFlags": 1
          },
          {
            "Text": " this is required so that the parent layouts (e.g. "
          },
          {
            "Text": "FrameLayout",
            "AttrFlags": 2
          },
          {
            "Text": ") can properly align your custom view. It provides a set of "
          },
          {
            "Text": "measureSpecs",
            "AttrFlags": 2
          },
          {
            "Text": " that you can use to determine your view’s height and width. Here we create a square by making sure that the height and width are the same:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445434973,
        "id": "06fac0ae-51d3-4a43-92fe-d1a505b9bff5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445434973,
        "parent_id": "bb8a6ec6-57f0-460e-846a-7b9d5825882a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@Override\nprotected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n    int w = MeasureSpec.getSize(widthMeasureSpec);\n    int h = MeasureSpec.getSize(heightMeasureSpec);\n\n    int size = Math.min(w, h);\n    setMeasuredDimension(size, size);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@Override\nprotected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n    int w = MeasureSpec.getSize(widthMeasureSpec);\n    int h = MeasureSpec.getSize(heightMeasureSpec);\n\n    int size = Math.min(w, h);\n    setMeasuredDimension(size, size);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445434974,
        "id": "498b8871-4634-4716-8d00-e1bfd7233956",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445434974,
        "parent_id": "bb8a6ec6-57f0-460e-846a-7b9d5825882a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that "
            ],
            [
              "onMeasure(...)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " must contain at least one call to "
            ],
            [
              "setMeasuredDimension(..)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or else your custom view will crash with an "
            ],
            [
              "IllegalStateException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that "
          },
          {
            "Text": "onMeasure(...)",
            "AttrFlags": 2
          },
          {
            "Text": " must contain at least one call to "
          },
          {
            "Text": "setMeasuredDimension(..)",
            "AttrFlags": 2
          },
          {
            "Text": " or else your custom view will crash with an "
          },
          {
            "Text": "IllegalStateException",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445434974,
        "id": "a61e22ef-bb63-4a0e-9bce-1e2676e6ca31",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445434974,
        "parent_id": "bb8a6ec6-57f0-460e-846a-7b9d5825882a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Implement your own ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "onSizeChanged(...)",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " method:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " this allows you to catch the current height and width of your custom view to properly adjust your rendering code. Here we just calculate our center and our radius:"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Implement your own ",
            "AttrFlags": 1
          },
          {
            "Text": "onSizeChanged(...)",
            "AttrFlags": 3
          },
          {
            "Text": " method:",
            "AttrFlags": 1
          },
          {
            "Text": " this allows you to catch the current height and width of your custom view to properly adjust your rendering code. Here we just calculate our center and our radius:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445434974,
        "id": "180f94ba-ad6c-4b44-9065-6282e4a49ff5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445434974,
        "parent_id": "bb8a6ec6-57f0-460e-846a-7b9d5825882a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@Override\nprotected void onSizeChanged(int w, int h, int oldw, int oldh) {\n    mCenterX = w / 2f;\n    mCenterY = h / 2f;\n    mRadius = Math.min(w, h) / 2f;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@Override\nprotected void onSizeChanged(int w, int h, int oldw, int oldh) {\n    mCenterX = w / 2f;\n    mCenterY = h / 2f;\n    mRadius = Math.min(w, h) / 2f;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445434976,
        "id": "72a4b6ac-b399-407c-98da-94b7fbc4096c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445434976,
        "parent_id": "bb8a6ec6-57f0-460e-846a-7b9d5825882a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Implement your own ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "onDraw(...)",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " method:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " this is where you implement the actual rendering of your view. It provides a "
            ],
            [
              "Canvas",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object that you can draw on (see the official "
            ],
            [
              "Canvas",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.android.com/reference/android/graphics/Canvas.html"
                ]
              ]
            ],
            [
              " documentation for all drawing methods available)."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Implement your own ",
            "AttrFlags": 1
          },
          {
            "Text": "onDraw(...)",
            "AttrFlags": 3
          },
          {
            "Text": " method:",
            "AttrFlags": 1
          },
          {
            "Text": " this is where you implement the actual rendering of your view. It provides a "
          },
          {
            "Text": "Canvas",
            "AttrFlags": 2
          },
          {
            "Text": " object that you can draw on (see the official "
          },
          {
            "Text": "Canvas",
            "AttrFlags": 2,
            "Link": "https://developer.android.com/reference/android/graphics/Canvas.html"
          },
          {
            "Text": " documentation for all drawing methods available)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445434976,
        "id": "64dc7c77-b18d-4895-aa0c-ec30d0471684",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445434976,
        "parent_id": "bb8a6ec6-57f0-460e-846a-7b9d5825882a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@Override\nprotected void onDraw(Canvas canvas) {\n    // draw face\n    canvas.drawCircle(mCenterX, mCenterY, mRadius, mCirclePaint);\n    // draw eyes\n    float eyeRadius = mRadius / 5f;\n    float eyeOffsetX = mRadius / 3f;\n    float eyeOffsetY = mRadius / 3f;\n    canvas.drawCircle(mCenterX - eyeOffsetX, mCenterY - eyeOffsetY, eyeRadius, mEyeAndMouthPaint);\n    canvas.drawCircle(mCenterX + eyeOffsetX, mCenterY - eyeOffsetY, eyeRadius, mEyeAndMouthPaint);\n    // draw mouth\n    float mouthInset = mRadius /3f;\n    mArcBounds.set(mouthInset, mouthInset, mRadius * 2 - mouthInset, mRadius * 2 - mouthInset);\n    canvas.drawArc(mArcBounds, 45f, 90f, false, mEyeAndMouthPaint);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@Override\nprotected void onDraw(Canvas canvas) {\n    // draw face\n    canvas.drawCircle(mCenterX, mCenterY, mRadius, mCirclePaint);\n    // draw eyes\n    float eyeRadius = mRadius / 5f;\n    float eyeOffsetX = mRadius / 3f;\n    float eyeOffsetY = mRadius / 3f;\n    canvas.drawCircle(mCenterX - eyeOffsetX, mCenterY - eyeOffsetY, eyeRadius, mEyeAndMouthPaint);\n    canvas.drawCircle(mCenterX + eyeOffsetX, mCenterY - eyeOffsetY, eyeRadius, mEyeAndMouthPaint);\n    // draw mouth\n    float mouthInset = mRadius /3f;\n    mArcBounds.set(mouthInset, mouthInset, mRadius * 2 - mouthInset, mRadius * 2 - mouthInset);\n    canvas.drawArc(mArcBounds, 45f, 90f, false, mEyeAndMouthPaint);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445434977,
        "id": "1e3d2121-49a3-487f-9e29-7cbea6d98736",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445434977,
        "parent_id": "bb8a6ec6-57f0-460e-846a-7b9d5825882a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Add your custom view to a layout:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " the custom view can now be included in any layout files that you have. Here we just wrap it inside a "
            ],
            [
              "FrameLayout",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Add your custom view to a layout:",
            "AttrFlags": 1
          },
          {
            "Text": " the custom view can now be included in any layout files that you have. Here we just wrap it inside a "
          },
          {
            "Text": "FrameLayout",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445434977,
        "id": "5d298223-8878-4233-81e5-59b2bdbbfb2c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445434977,
        "parent_id": "bb8a6ec6-57f0-460e-846a-7b9d5825882a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003cFrameLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\u003e\n\n    \u003ccom.example.app.SmileyView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\" /\u003e\n\u003c/FrameLayout\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003cFrameLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\u003e\n\n    \u003ccom.example.app.SmileyView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\" /\u003e\n\u003c/FrameLayout\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445434977,
        "id": "1d42de77-c26e-417c-8b30-ed4d6f053676",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445434977,
        "parent_id": "bb8a6ec6-57f0-460e-846a-7b9d5825882a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that it is recommended to build your project after the view code is finished. Without building it you won’t be able to see the view on a preview screen in Android Studio."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that it is recommended to build your project after the view code is finished. Without building it you won’t be able to see the view on a preview screen in Android Studio."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445434977,
        "id": "f4d4368c-2da9-42d2-83f9-b8713adbdd03",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445434977,
        "parent_id": "bb8a6ec6-57f0-460e-846a-7b9d5825882a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "After putting everything together, you should be greeted with the following screen after launching the activity containing the above layout:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "After putting everything together, you should be greeted with the following screen after launching the activity containing the above layout:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445434978,
        "id": "6f02ead6-b1da-415c-8f24-ceb1aa2b4e59",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445434978,
        "parent_id": "bb8a6ec6-57f0-460e-846a-7b9d5825882a",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "https://i.stack.imgur.com/0yhjv.jpg"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "https://i.stack.imgur.com/0yhjv.jpg",
        "image_url": "https://www.notion.so/image/https:%2F%2Fi.stack.imgur.com%2F0yhjv.jpg"
      }
    ],
    "title": "Creating Custom Views",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}