{
  "ID": "4e039b8f-1c09-489a-84bf-13736f887616",
  "Root": {
    "alive": true,
    "content": [
      "3933fc42-8a32-4cff-b171-77b621a54513",
      "6c9a1409-64e6-41b0-96a4-119e1809f3c1",
      "7ebf14a6-3555-4fd5-bdf1-54aaa376a6f7",
      "ad19fc1d-33b6-400c-9145-88b51a9a3fbb",
      "622ed9e2-2133-4558-9ee2-0ee0133fd111",
      "f6f2971f-e66f-4b00-b275-3e86223615b8",
      "44e15068-be73-4b77-b191-9152d525fb94",
      "7ecbeaf4-ca19-4969-a832-2db51106498f",
      "456c0071-6e34-4faf-bc33-d02dd4fab237",
      "f4ce812f-37c0-4685-b467-7adca46909b4",
      "b8955b6b-c8f8-4929-b66c-c99935a6a07e",
      "b6edd8cd-42ac-4142-8b72-053b4727e264",
      "07565c0d-67cf-48e5-86b8-37524919323f",
      "7a7ea63f-a320-4632-a1a7-77aba2fbd9f7",
      "a4dae005-ee83-462c-acc9-53dd4d8504fd",
      "c61d07d1-58c5-43da-8635-03c10067cf5a",
      "f4902041-0b06-43a6-a7e4-42762b61e5c7",
      "4942c55d-1106-4c0d-a371-6a1220c4d086",
      "93820225-5a8b-4b03-851b-b1758e4650ac",
      "f2feece6-aed7-4ebd-ab76-50cdf0c06c5f",
      "38d9a0fd-81a8-48fe-9757-79717a978e89",
      "be500621-5e07-4073-9620-c7a67d8116ff"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550451643040,
    "id": "4e039b8f-1c09-489a-84bf-13736f887616",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550451643040,
    "parent_id": "3d365296-5561-464b-9301-04d4f320fea9",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "030 Designing and understanding how to retrieve realtime data from the Firebase Database"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643037,
        "id": "3933fc42-8a32-4cff-b171-77b621a54513",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643037,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example assumes that you have already set up a Firebase Realtime Database. If you are a starter, then please inform yourself "
            ],
            [
              "here",
              [
                [
                  "a",
                  "https://firebase.google.com/docs/android/setup"
                ]
              ]
            ],
            [
              " on how to add Firebase to your Android project."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example assumes that you have already set up a Firebase Realtime Database. If you are a starter, then please inform yourself "
          },
          {
            "Text": "here",
            "Link": "https://firebase.google.com/docs/android/setup"
          },
          {
            "Text": " on how to add Firebase to your Android project."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643038,
        "id": "6c9a1409-64e6-41b0-96a4-119e1809f3c1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643038,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "First, add the dependency of the Firebase Database to the app level "
            ],
            [
              "build.gradle",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " file:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "First, add the dependency of the Firebase Database to the app level "
          },
          {
            "Text": "build.gradle",
            "AttrFlags": 4
          },
          {
            "Text": " file:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643038,
        "id": "7ebf14a6-3555-4fd5-bdf1-54aaa376a6f7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643038,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "compile 'com.google.firebase:firebase-database:9.4.0'"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "compile 'com.google.firebase:firebase-database:9.4.0'",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643038,
        "id": "ad19fc1d-33b6-400c-9145-88b51a9a3fbb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643038,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now, let us create a chat app which stores data into the Firebase Database."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now, let us create a chat app which stores data into the Firebase Database."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643038,
        "id": "622ed9e2-2133-4558-9ee2-0ee0133fd111",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643038,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Step 1: Create a class named Chat"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Step 1: Create a class named Chat"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643038,
        "id": "f6f2971f-e66f-4b00-b275-3e86223615b8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643038,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Just create a class with some basic variables required for the chat:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Just create a class with some basic variables required for the chat:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643039,
        "id": "44e15068-be73-4b77-b191-9152d525fb94",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643039,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Chat{\n    public String name, message;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Chat{\n    public String name, message;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643039,
        "id": "7ecbeaf4-ca19-4969-a832-2db51106498f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643039,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Step 2: Create some JSON data"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Step 2: Create some JSON data"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643039,
        "id": "456c0071-6e34-4faf-bc33-d02dd4fab237",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643039,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For sending/retrieving data to/from the Firebase Database, you need to use JSON. Let us assume that some chats are already stored at the root level in the database. The data of these chats could look like as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For sending/retrieving data to/from the Firebase Database, you need to use JSON. Let us assume that some chats are already stored at the root level in the database. The data of these chats could look like as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643039,
        "id": "f4ce812f-37c0-4685-b467-7adca46909b4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643039,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "[\n    {\n        \"name\":\"John Doe\",\n        \"message\":\"My first Message\"\n    },\n    {\n        \"name\":\"John Doe\",\n        \"message\":\"Second Message\"\n    },\n    {\n        \"name\":\"John Doe\",\n        \"message\":\"Third Message\"\n    }\n]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "[\n    {\n        \"name\":\"John Doe\",\n        \"message\":\"My first Message\"\n    },\n    {\n        \"name\":\"John Doe\",\n        \"message\":\"Second Message\"\n    },\n    {\n        \"name\":\"John Doe\",\n        \"message\":\"Third Message\"\n    }\n]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643039,
        "id": "b8955b6b-c8f8-4929-b66c-c99935a6a07e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643039,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Step 3: Adding the listeners"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Step 3: Adding the listeners"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643039,
        "id": "b6edd8cd-42ac-4142-8b72-053b4727e264",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643039,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are three types of listeners. In the following example we are going to use the "
            ],
            [
              "childEventListener",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are three types of listeners. In the following example we are going to use the "
          },
          {
            "Text": "childEventListener",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643039,
        "id": "07565c0d-67cf-48e5-86b8-37524919323f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643039,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "DatabaseReference chatDb = FirebaseDatabase.getInstance().getReference() // Referencing the root of the database.\n        .child(\"chats\"); // Referencing the \"chats\" node under the root.\n\nchatDb.addChildEventListener(new ChildEventListener() {\n    @Override\n    public void onChildAdded(DataSnapshot dataSnapshot, String s) {\n        // This function is called for every child id chat in this case, so using the above\n        // example, this function is going to be called 3 times.\n        \n        // Retrieving the Chat object from this function is simple.\n        Chat chat; // Create a null chat object.\n\n        // Use the getValue function in the dataSnapshot and pass the object's class name to\n        // which you want to convert and get data. In this case it is Chat.class.\n        chat = dataSnapshot.getValue(Chat.class);\n\n        // Now you can use this chat object and add it into an ArrayList or something like\n        // that and show it in the recycler view.\n    }\n\n    @Override\n    public void onChildChanged(DataSnapshot dataSnapshot, String s) {\n        // This function is called when any of the node value is changed, dataSnapshot will\n        // get the data with the key of the child, so you can swap the new value with the\n        // old one in the ArrayList or something like that.\n\n        // To get the key, use the .getKey() function.\n        // To get the value, use code similar to the above one.\n    }\n\n    @Override\n    public void onChildRemoved(DataSnapshot dataSnapshot) {\n        // This function is called when any of the child node is removed. dataSnapshot will\n        // get the data with the key of the child.\n\n        // To get the key, use the s String parameter .\n    }\n\n    @Override\n    public void onChildMoved(DataSnapshot dataSnapshot, String s) {\n        // This function is called when any of the child nodes is moved to a different position.\n\n        // To get the key, use the s String parameter.\n    }\n\n    @Override\n    public void onCancelled(DatabaseError databaseError) {\n        // If anything goes wrong, this function is going to be called.\n\n        // You can get the exception by using databaseError.toException();\n    }\n});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "DatabaseReference chatDb = FirebaseDatabase.getInstance().getReference() // Referencing the root of the database.\n        .child(\"chats\"); // Referencing the \"chats\" node under the root.\n\nchatDb.addChildEventListener(new ChildEventListener() {\n    @Override\n    public void onChildAdded(DataSnapshot dataSnapshot, String s) {\n        // This function is called for every child id chat in this case, so using the above\n        // example, this function is going to be called 3 times.\n        \n        // Retrieving the Chat object from this function is simple.\n        Chat chat; // Create a null chat object.\n\n        // Use the getValue function in the dataSnapshot and pass the object's class name to\n        // which you want to convert and get data. In this case it is Chat.class.\n        chat = dataSnapshot.getValue(Chat.class);\n\n        // Now you can use this chat object and add it into an ArrayList or something like\n        // that and show it in the recycler view.\n    }\n\n    @Override\n    public void onChildChanged(DataSnapshot dataSnapshot, String s) {\n        // This function is called when any of the node value is changed, dataSnapshot will\n        // get the data with the key of the child, so you can swap the new value with the\n        // old one in the ArrayList or something like that.\n\n        // To get the key, use the .getKey() function.\n        // To get the value, use code similar to the above one.\n    }\n\n    @Override\n    public void onChildRemoved(DataSnapshot dataSnapshot) {\n        // This function is called when any of the child node is removed. dataSnapshot will\n        // get the data with the key of the child.\n\n        // To get the key, use the s String parameter .\n    }\n\n    @Override\n    public void onChildMoved(DataSnapshot dataSnapshot, String s) {\n        // This function is called when any of the child nodes is moved to a different position.\n\n        // To get the key, use the s String parameter.\n    }\n\n    @Override\n    public void onCancelled(DatabaseError databaseError) {\n        // If anything goes wrong, this function is going to be called.\n\n        // You can get the exception by using databaseError.toException();\n    }\n});",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643039,
        "id": "7a7ea63f-a320-4632-a1a7-77aba2fbd9f7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643039,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Step 4: Add data to the database"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Step 4: Add data to the database"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643039,
        "id": "a4dae005-ee83-462c-acc9-53dd4d8504fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643039,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Just create a Chat class object and add the values as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Just create a Chat class object and add the values as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643039,
        "id": "c61d07d1-58c5-43da-8635-03c10067cf5a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643039,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Chat chat=new Chat();\nchat.name=\"John Doe\";\nchat.message=\"First message from android\";"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Chat chat=new Chat();\nchat.name=\"John Doe\";\nchat.message=\"First message from android\";",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643040,
        "id": "f4902041-0b06-43a6-a7e4-42762b61e5c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643040,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now get a reference to the chats node as done in the retrieving session:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now get a reference to the chats node as done in the retrieving session:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643040,
        "id": "4942c55d-1106-4c0d-a371-6a1220c4d086",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643040,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "DatabaseReference chatDb = FirebaseDatabase.getInstance().getReference().child(\"chats\");"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "DatabaseReference chatDb = FirebaseDatabase.getInstance().getReference().child(\"chats\");",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643040,
        "id": "93820225-5a8b-4b03-851b-b1758e4650ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643040,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Before you start adding data, keep in mind that you need one more deep reference since a chat node has several more nodes and adding a new chat means adding a new node containing the chat details. We can generate a new and unique name of the node using the "
            ],
            [
              "push()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function on the "
            ],
            [
              "DatabaseReference",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object, which will return another "
            ],
            [
              "DatabaseReference",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which in turn points to a newly formed node to insert the chat data."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Before you start adding data, keep in mind that you need one more deep reference since a chat node has several more nodes and adding a new chat means adding a new node containing the chat details. We can generate a new and unique name of the node using the "
          },
          {
            "Text": "push()",
            "AttrFlags": 2
          },
          {
            "Text": " function on the "
          },
          {
            "Text": "DatabaseReference",
            "AttrFlags": 2
          },
          {
            "Text": " object, which will return another "
          },
          {
            "Text": "DatabaseReference",
            "AttrFlags": 2
          },
          {
            "Text": ", which in turn points to a newly formed node to insert the chat data."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643040,
        "id": "f2feece6-aed7-4ebd-ab76-50cdf0c06c5f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643040,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643040,
        "id": "38d9a0fd-81a8-48fe-9757-79717a978e89",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643040,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// The parameter is the chat object that was newly created a few lines above.\nchatDb.push().setValue(chat);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// The parameter is the chat object that was newly created a few lines above.\nchatDb.push().setValue(chat);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451643040,
        "id": "be500621-5e07-4073-9620-c7a67d8116ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451643040,
        "parent_id": "4e039b8f-1c09-489a-84bf-13736f887616",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "setValue()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function will make sure that all of the application’s "
            ],
            [
              "onDataChanged",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " functions are getting called (including the same device), which happens to be the attached listener of the “chats” node."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "setValue()",
            "AttrFlags": 2
          },
          {
            "Text": " function will make sure that all of the application’s "
          },
          {
            "Text": "onDataChanged",
            "AttrFlags": 2
          },
          {
            "Text": " functions are getting called (including the same device), which happens to be the attached listener of the “chats” node."
          }
        ]
      }
    ],
    "title": "030 Designing and understanding how to retrieve realtime data from the Firebase Database"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}