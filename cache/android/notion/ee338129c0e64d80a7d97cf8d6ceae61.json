{
  "ID": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
  "Root": {
    "alive": true,
    "content": [
      "b8458256-64b5-4f0a-a650-06da4f3bd792",
      "4cf6fdf0-56d2-4638-bdcb-57243181f121",
      "6cdfa939-ee03-4347-b0ff-b63e8b26dd38",
      "73f8a8ae-90c3-4790-b96b-4520c5d38446",
      "a41459f3-71f3-41d6-943c-aaf6ce5c400d",
      "80c89a83-0b6c-40d2-9e29-08079ae2124d",
      "ec2f9c4a-abab-4b0d-be81-c6648ab89fe2",
      "a6ff70d5-fcbe-4a5d-b83c-54c200b96ff5",
      "826cf23a-d9c7-41de-bbff-b646599bd18c",
      "65dd3e88-ae60-4e99-8476-6a7556d4d2a9",
      "48a87e08-d1cf-486f-883e-a0ea28a2ebd4",
      "ab81cd9c-d6b9-4dd8-b312-6ada2c30f72d",
      "d5642c79-8988-46f7-9bcf-03b3a7109c52",
      "fc3b90bf-2864-49be-9a24-767bd07ec030",
      "5274bfa9-b7b6-42ec-b344-8bc2458df74d",
      "e37ce91b-d121-4925-bfb8-aaf1d7798f77",
      "6c91944c-c2a7-44a2-9ca4-d25a3fb843a7",
      "e6b62b95-be87-4428-b5d9-ef3994417386",
      "2e3becf3-17fe-4070-9df5-04ecc6570a5f",
      "c5cbbf76-9eae-419a-85af-5bf73afc0946"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550449644762,
    "id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550449644762,
    "parent_id": "db56e9e4-397a-4b38-a33f-a2324e683304",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "040 Espresso custom matchers"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644756,
        "id": "b8458256-64b5-4f0a-a650-06da4f3bd792",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644756,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Espresso by default has many matchers that help you find views that you need to do some checks or interactions with them."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Espresso by default has many matchers that help you find views that you need to do some checks or interactions with them."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644759,
        "id": "4cf6fdf0-56d2-4638-bdcb-57243181f121",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644759,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Most important ones can be found in the following cheat sheet:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Most important ones can be found in the following cheat sheet:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644759,
        "id": "6cdfa939-ee03-4347-b0ff-b63e8b26dd38",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644759,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "https://google.github.io/android-testing-support-library/docs/espresso/cheatsheet/"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "https://google.github.io/android-testing-support-library/docs/espresso/cheatsheet/"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644759,
        "id": "73f8a8ae-90c3-4790-b96b-4520c5d38446",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644759,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Some examples of matchers are:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Some examples of matchers are:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644760,
        "id": "a41459f3-71f3-41d6-943c-aaf6ce5c400d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644760,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "withId(R.id.ID_of_object_you_are_looking_for);"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "withId(R.id.ID_of_object_you_are_looking_for);"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644760,
        "id": "80c89a83-0b6c-40d2-9e29-08079ae2124d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644760,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "withText(“Some text you expect object to have”);"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "withText(“Some text you expect object to have”);"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644760,
        "id": "ec2f9c4a-abab-4b0d-be81-c6648ab89fe2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644760,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "isDisplayed() \u003c– check is the view visible"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "isDisplayed() \u003c– check is the view visible"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644760,
        "id": "a6ff70d5-fcbe-4a5d-b83c-54c200b96ff5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644760,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "doesNotExist() \u003c– check that the view does not exist"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "doesNotExist() \u003c– check that the view does not exist"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644760,
        "id": "826cf23a-d9c7-41de-bbff-b646599bd18c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644760,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All of these are very useful for everyday use, but if you have more complex views writing your custom matchers can make the tests more readable and you can reuse them in different places."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All of these are very useful for everyday use, but if you have more complex views writing your custom matchers can make the tests more readable and you can reuse them in different places."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644760,
        "id": "65dd3e88-ae60-4e99-8476-6a7556d4d2a9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644760,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are 2 most common type of matchers you can extend: "
            ],
            [
              "TypeSafeMatcher",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "BoundedMatcher",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are 2 most common type of matchers you can extend: "
          },
          {
            "Text": "TypeSafeMatcher",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "BoundedMatcher",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644761,
        "id": "48a87e08-d1cf-486f-883e-a0ea28a2ebd4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644761,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Implementing TypeSafeMatcher requires you to check the instanceOf the view you are asserting against, if its the correct type you match some of its properties against a value you provided to a matcher."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Implementing TypeSafeMatcher requires you to check the instanceOf the view you are asserting against, if its the correct type you match some of its properties against a value you provided to a matcher."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644761,
        "id": "ab81cd9c-d6b9-4dd8-b312-6ada2c30f72d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644761,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example, type safe matcher that validates an image view has correct drawable:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example, type safe matcher that validates an image view has correct drawable:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644761,
        "id": "d5642c79-8988-46f7-9bcf-03b3a7109c52",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644761,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class DrawableMatcher extends TypeSafeMatcher\u003cView\u003e {\n\n    private @DrawableRes final int expectedId;\n    String resourceName;\n    \n    public DrawableMatcher(@DrawableRes int expectedId) {\n        super(View.class);\n        this.expectedId = expectedId;\n    }\n\n    @Override\n    protected boolean matchesSafely(View target) {\n        //Type check we need to do in TypeSafeMatcher\n        if (!(target instanceof ImageView)) {\n            return false;\n        }\n        //We fetch the image view from the focused view\n        ImageView imageView = (ImageView) target;\n        if (expectedId \u003c 0) {\n            return imageView.getDrawable() == null;\n        }\n        //We get the drawable from the resources that we are going to compare with image view source\n        Resources resources = target.getContext().getResources();\n        Drawable expectedDrawable = resources.getDrawable(expectedId);\n        resourceName = resources.getResourceEntryName(expectedId);\n\n        if (expectedDrawable == null) {\n            return false;\n        }\n        //comparing the bitmaps should give results of the matcher if they are equal\n        Bitmap bitmap = ((BitmapDrawable) imageView.getDrawable()).getBitmap();\n        Bitmap otherBitmap = ((BitmapDrawable) expectedDrawable).getBitmap();\n        return bitmap.sameAs(otherBitmap);\n    }\n\n\n    @Override\n    public void describeTo(Description description) {\n        description.appendText(\"with drawable from resource id: \");\n        description.appendValue(expectedId);\n        if (resourceName != null) {\n            description.appendText(\"[\");\n            description.appendText(resourceName);\n            description.appendText(\"]\");\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class DrawableMatcher extends TypeSafeMatcher\u003cView\u003e {\n\n    private @DrawableRes final int expectedId;\n    String resourceName;\n    \n    public DrawableMatcher(@DrawableRes int expectedId) {\n        super(View.class);\n        this.expectedId = expectedId;\n    }\n\n    @Override\n    protected boolean matchesSafely(View target) {\n        //Type check we need to do in TypeSafeMatcher\n        if (!(target instanceof ImageView)) {\n            return false;\n        }\n        //We fetch the image view from the focused view\n        ImageView imageView = (ImageView) target;\n        if (expectedId \u003c 0) {\n            return imageView.getDrawable() == null;\n        }\n        //We get the drawable from the resources that we are going to compare with image view source\n        Resources resources = target.getContext().getResources();\n        Drawable expectedDrawable = resources.getDrawable(expectedId);\n        resourceName = resources.getResourceEntryName(expectedId);\n\n        if (expectedDrawable == null) {\n            return false;\n        }\n        //comparing the bitmaps should give results of the matcher if they are equal\n        Bitmap bitmap = ((BitmapDrawable) imageView.getDrawable()).getBitmap();\n        Bitmap otherBitmap = ((BitmapDrawable) expectedDrawable).getBitmap();\n        return bitmap.sameAs(otherBitmap);\n    }\n\n\n    @Override\n    public void describeTo(Description description) {\n        description.appendText(\"with drawable from resource id: \");\n        description.appendValue(expectedId);\n        if (resourceName != null) {\n            description.appendText(\"[\");\n            description.appendText(resourceName);\n            description.appendText(\"]\");\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644761,
        "id": "fc3b90bf-2864-49be-9a24-767bd07ec030",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644761,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Usage of the matcher could be wrapped like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Usage of the matcher could be wrapped like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644761,
        "id": "5274bfa9-b7b6-42ec-b344-8bc2458df74d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644761,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public static Matcher\u003cView\u003e withDrawable(final int resourceId) {\n  return new DrawableMatcher(resourceId);\n}\n\nonView(withDrawable(R.drawable.someDrawable)).check(matches(isDisplayed()));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public static Matcher\u003cView\u003e withDrawable(final int resourceId) {\n  return new DrawableMatcher(resourceId);\n}\n\nonView(withDrawable(R.drawable.someDrawable)).check(matches(isDisplayed()));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644761,
        "id": "e37ce91b-d121-4925-bfb8-aaf1d7798f77",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644761,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Bounded matchers are similar you just dont have to do the type check but, since that is done automagically for you:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Bounded matchers are similar you just dont have to do the type check but, since that is done automagically for you:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644761,
        "id": "6c91944c-c2a7-44a2-9ca4-d25a3fb843a7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644761,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "/**\n* Matches a {@link TextInputFormView}'s input hint with the given resource ID\n*\n* @param stringId\n* @return\n*/\npublic static Matcher\u003cView\u003e withTextInputHint(@StringRes final int stringId) {\n   return new BoundedMatcher\u003cView, TextInputFormView\u003e(TextInputFormView.class) {\n       private String mResourceName = null;\n\n       @Override\n       public void describeTo(final Description description) {\n           //fill these out properly so your logging and error reporting is more clear\n           description.appendText(\"with TextInputFormView that has hint \");\n           description.appendValue(stringId);\n           if (null != mResourceName) {\n               description.appendText(\"[\");\n               description.appendText(mResourceName);\n               description.appendText(\"]\");\n           }\n       }\n\n       @Override\n       public boolean matchesSafely(final TextInputFormView view) {\n           if (null == mResourceName) {\n               try {\n                   mResourceName = view.getResources().getResourceEntryName(stringId);\n               } catch (Resources.NotFoundException e) {\n                   throw new IllegalStateException(\"could not find string with ID \" + stringId, e);\n               }\n           }\n           return view.getResources().getString(stringId).equals(view.getHint());\n       }\n   };\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "/**\n* Matches a {@link TextInputFormView}'s input hint with the given resource ID\n*\n* @param stringId\n* @return\n*/\npublic static Matcher\u003cView\u003e withTextInputHint(@StringRes final int stringId) {\n   return new BoundedMatcher\u003cView, TextInputFormView\u003e(TextInputFormView.class) {\n       private String mResourceName = null;\n\n       @Override\n       public void describeTo(final Description description) {\n           //fill these out properly so your logging and error reporting is more clear\n           description.appendText(\"with TextInputFormView that has hint \");\n           description.appendValue(stringId);\n           if (null != mResourceName) {\n               description.appendText(\"[\");\n               description.appendText(mResourceName);\n               description.appendText(\"]\");\n           }\n       }\n\n       @Override\n       public boolean matchesSafely(final TextInputFormView view) {\n           if (null == mResourceName) {\n               try {\n                   mResourceName = view.getResources().getResourceEntryName(stringId);\n               } catch (Resources.NotFoundException e) {\n                   throw new IllegalStateException(\"could not find string with ID \" + stringId, e);\n               }\n           }\n           return view.getResources().getString(stringId).equals(view.getHint());\n       }\n   };\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644761,
        "id": "e6b62b95-be87-4428-b5d9-ef3994417386",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644761,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "More on matchers can be read up on:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "More on matchers can be read up on:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644761,
        "id": "2e3becf3-17fe-4070-9df5-04ecc6570a5f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644761,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://hamcrest.org/"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "http://hamcrest.org/"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449644761,
        "id": "c5cbbf76-9eae-419a-85af-5bf73afc0946",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449644761,
        "parent_id": "ee338129-c0e6-4d80-a7d9-7cf8d6ceae61",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "https://developer.android.com/reference/android/support/test/espresso/matcher/ViewMatchers.html"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "https://developer.android.com/reference/android/support/test/espresso/matcher/ViewMatchers.html"
          }
        ]
      }
    ],
    "title": "040 Espresso custom matchers"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}