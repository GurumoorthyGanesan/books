{
  "ID": "45f62b62-f7ca-4270-a860-b28c9450f2c9",
  "Root": {
    "alive": true,
    "content": [
      "1b0d667a-22ca-4e53-8bed-cd9060b5618c",
      "e86341ba-5e18-464f-8093-f20f1adf806a",
      "beaac5fe-a37c-4731-8db2-9099b6097921",
      "d53169b2-b88b-4f08-903f-92a53e1c81aa",
      "14760bee-9f36-4fe0-b992-8d2c58862fcb",
      "48dd4096-ec8b-4e60-a6c7-b2194e4f1467",
      "cf949c60-72da-4e17-ad0f-5756cbb437a5",
      "263f503b-1c25-4acb-af58-52347434f827"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550450441275,
    "id": "45f62b62-f7ca-4270-a860-b28c9450f2c9",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550450441275,
    "parent_id": "9b6546ec-87e7-4f0d-97af-9dd8a76e52a2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Adding a custom Converter to Gson"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550450441271,
        "id": "1b0d667a-22ca-4e53-8bed-cd9060b5618c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550450441271,
        "parent_id": "45f62b62-f7ca-4270-a860-b28c9450f2c9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sometimes you need to serialize or deserialize some fields in a desired format, for example your backend may use the format “YYYY-MM-dd HH:mm” for dates and you want your POJOS to use the DateTime class in Joda Time."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sometimes you need to serialize or deserialize some fields in a desired format, for example your backend may use the format “YYYY-MM-dd HH:mm” for dates and you want your POJOS to use the DateTime class in Joda Time."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550450441274,
        "id": "e86341ba-5e18-464f-8093-f20f1adf806a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550450441274,
        "parent_id": "45f62b62-f7ca-4270-a860-b28c9450f2c9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In order to automatically convert these strings into DateTimes object, you can use a custom converter."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In order to automatically convert these strings into DateTimes object, you can use a custom converter."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550450441274,
        "id": "beaac5fe-a37c-4731-8db2-9099b6097921",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550450441274,
        "parent_id": "45f62b62-f7ca-4270-a860-b28c9450f2c9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "/**\n * Gson serialiser/deserialiser for converting Joda {@link DateTime} objects.\n */\npublic class DateTimeConverter implements JsonSerializer\u003cDateTime\u003e, JsonDeserializer\u003cDateTime\u003e {\n\n    private final DateTimeFormatter dateTimeFormatter;\n\n    @Inject\n    public DateTimeConverter() {\n        this.dateTimeFormatter = DateTimeFormat.forPattern(\"YYYY-MM-dd HH:mm\");\n    }\n\n    @Override\n    public JsonElement serialize(DateTime src, Type typeOfSrc, JsonSerializationContext context) {\n        return new JsonPrimitive(dateTimeFormatter.print(src));\n    }\n\n    @Override\n    public DateTime deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)\n            throws JsonParseException {\n        \n        if (json.getAsString() == null || json.getAsString().isEmpty()) {\n            return null;\n        }\n\n        return dateTimeFormatter.parseDateTime(json.getAsString());\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "/**\n * Gson serialiser/deserialiser for converting Joda {@link DateTime} objects.\n */\npublic class DateTimeConverter implements JsonSerializer\u003cDateTime\u003e, JsonDeserializer\u003cDateTime\u003e {\n\n    private final DateTimeFormatter dateTimeFormatter;\n\n    @Inject\n    public DateTimeConverter() {\n        this.dateTimeFormatter = DateTimeFormat.forPattern(\"YYYY-MM-dd HH:mm\");\n    }\n\n    @Override\n    public JsonElement serialize(DateTime src, Type typeOfSrc, JsonSerializationContext context) {\n        return new JsonPrimitive(dateTimeFormatter.print(src));\n    }\n\n    @Override\n    public DateTime deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)\n            throws JsonParseException {\n        \n        if (json.getAsString() == null || json.getAsString().isEmpty()) {\n            return null;\n        }\n\n        return dateTimeFormatter.parseDateTime(json.getAsString());\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550450441275,
        "id": "d53169b2-b88b-4f08-903f-92a53e1c81aa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550450441275,
        "parent_id": "45f62b62-f7ca-4270-a860-b28c9450f2c9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To make Gson use the newly created converter you need to assign it when creating the Gson object:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To make Gson use the newly created converter you need to assign it when creating the Gson object:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550450441275,
        "id": "14760bee-9f36-4fe0-b992-8d2c58862fcb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550450441275,
        "parent_id": "45f62b62-f7ca-4270-a860-b28c9450f2c9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "DateTimeConverter dateTimeConverter = new DateTimeConverter();\nGson gson = new GsonBuilder().registerTypeAdapter(DateTime.class, dateTimeConverter)\n        .create();\n\nString s = gson.toJson(DateTime.now());\n// this will show the date in the desired format"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "DateTimeConverter dateTimeConverter = new DateTimeConverter();\nGson gson = new GsonBuilder().registerTypeAdapter(DateTime.class, dateTimeConverter)\n        .create();\n\nString s = gson.toJson(DateTime.now());\n// this will show the date in the desired format",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550450441275,
        "id": "48dd4096-ec8b-4e60-a6c7-b2194e4f1467",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550450441275,
        "parent_id": "45f62b62-f7ca-4270-a860-b28c9450f2c9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In order to deserialize the date in that format you only have to define a field in the DateTime format:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In order to deserialize the date in that format you only have to define a field in the DateTime format:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550450441275,
        "id": "cf949c60-72da-4e17-ad0f-5756cbb437a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550450441275,
        "parent_id": "45f62b62-f7ca-4270-a860-b28c9450f2c9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class SomePojo {\n    private DateTime someDate;    \n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class SomePojo {\n    private DateTime someDate;    \n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550450441275,
        "id": "263f503b-1c25-4acb-af58-52347434f827",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550450441275,
        "parent_id": "45f62b62-f7ca-4270-a860-b28c9450f2c9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When Gson encounters a field of type DateTime, it will call your converter in order to deserialize the field."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When Gson encounters a field of type DateTime, it will call your converter in order to deserialize the field."
          }
        ]
      }
    ],
    "title": "020 Adding a custom Converter to Gson"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}