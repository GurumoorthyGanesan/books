{
  "ID": "8f3c43e7-5a35-423a-8c03-513beb2a4266",
  "Root": {
    "alive": true,
    "content": [
      "66778610-3210-4e5f-a416-045edc514008",
      "36235f10-5c89-407f-9e34-510381eb7243",
      "ae4b343a-15a3-4708-b160-50ad6c7cb6d6",
      "b8276efa-5989-40ef-a0bf-571b73a07f61",
      "944203d5-a651-458e-8ac7-27a3a1dbf6d1",
      "a0e6b460-1f25-4821-804c-63186862835d",
      "484d3335-928b-48f3-9046-c2facb4f77a4",
      "255c6a91-16df-429e-b882-b8e37e2fa327",
      "2b6bfd02-a91b-4002-9955-15169de6b05e",
      "d9a81e20-ca97-4899-8a60-93dfcf1e3c3b",
      "b5ace012-5a6e-45b4-b5f2-75809e487abc",
      "116c69a3-477f-4874-a418-0ee8f3328543",
      "8ff5eb2d-a6f8-4bac-b7a4-20b582f45521",
      "825d5b5b-27ab-4405-9c08-ace1cd846cd9"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550447928936,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "8f3c43e7-5a35-423a-8c03-513beb2a4266",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550447928936,
    "parent_id": "e3584a94-a9f0-4362-8875-ecc7887d08a7",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Find nearby Bluetooth Low Energy devices"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447928933,
        "id": "66778610-3210-4e5f-a416-045edc514008",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447928933,
        "parent_id": "8f3c43e7-5a35-423a-8c03-513beb2a4266",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The BluetoothLE API was introduced in API 18. However, the way of scanning devices has changed in API 21. The searching of devices must start with defining the "
            ],
            [
              "service UUID",
              [
                [
                  "a",
                  "https://learn.adafruit.com/introduction-to-bluetooth-low-energy/gatt#services"
                ]
              ]
            ],
            [
              " that is to be scanned (either officailly adopted 16-bit UUID’s or proprietary ones). This example illustrates, how to make an API independent way of searching for BLE devices:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The BluetoothLE API was introduced in API 18. However, the way of scanning devices has changed in API 21. The searching of devices must start with defining the "
          },
          {
            "Text": "service UUID",
            "Link": "https://learn.adafruit.com/introduction-to-bluetooth-low-energy/gatt#services"
          },
          {
            "Text": " that is to be scanned (either officailly adopted 16-bit UUID’s or proprietary ones). This example illustrates, how to make an API independent way of searching for BLE devices:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447928934,
        "id": "36235f10-5c89-407f-9e34-510381eb7243",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447928934,
        "parent_id": "8f3c43e7-5a35-423a-8c03-513beb2a4266",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Create bluetooth device model:"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Create bluetooth device model:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447928934,
        "id": "ae4b343a-15a3-4708-b160-50ad6c7cb6d6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447928934,
        "parent_id": "8f3c43e7-5a35-423a-8c03-513beb2a4266",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class BTDevice {\n    String address;\n    String name;\n\n    public String getAddress() {\n        return address;\n    }\n\n    public void setAddress(String address) {\n        this.address = address;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class BTDevice {\n    String address;\n    String name;\n\n    public String getAddress() {\n        return address;\n    }\n\n    public void setAddress(String address) {\n        this.address = address;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447928934,
        "id": "b8276efa-5989-40ef-a0bf-571b73a07f61",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447928934,
        "parent_id": "8f3c43e7-5a35-423a-8c03-513beb2a4266",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Define Bluetooth Scanning interface:"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Define Bluetooth Scanning interface:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447928934,
        "id": "944203d5-a651-458e-8ac7-27a3a1dbf6d1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447928934,
        "parent_id": "8f3c43e7-5a35-423a-8c03-513beb2a4266",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public interface ScanningAdapter {\n\n    void startScanning(String name, String[] uuids);\n    void stopScanning();\n    List\u003cBTDevice\u003e getFoundDeviceList();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public interface ScanningAdapter {\n\n    void startScanning(String name, String[] uuids);\n    void stopScanning();\n    List\u003cBTDevice\u003e getFoundDeviceList();\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447928935,
        "id": "a0e6b460-1f25-4821-804c-63186862835d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447928935,
        "parent_id": "8f3c43e7-5a35-423a-8c03-513beb2a4266",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Create scanning factory class:"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Create scanning factory class:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447928935,
        "id": "484d3335-928b-48f3-9046-c2facb4f77a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447928935,
        "parent_id": "8f3c43e7-5a35-423a-8c03-513beb2a4266",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class BluetoothScanningFactory implements ScanningAdapter {\n\n    private ScanningAdapter mScanningAdapter;\n\n    public BluetoothScanningFactory() {\n        if (isNewerAPI()) {\n            mScanningAdapter = new LollipopBluetoothLEScanAdapter();\n        } else {\n            mScanningAdapter = new JellyBeanBluetoothLEScanAdapter();\n        }\n    }\n\n    private boolean isNewerAPI() {\n        return Build.VERSION.SDK_INT \u003e= Build.VERSION_CODES.LOLLIPOP;\n    }\n\n    @Override\n    public void startScanning(String[] uuids) {\n        mScanningAdapter.startScanning(uuids);\n    }\n\n    @Override\n    public void stopScanning() {\n        mScanningAdapter.stopScanning();\n    }\n\n    @Override\n    public List\u003cBTDevice\u003e getFoundDeviceList() {\n        return mScanningAdapter.getFoundDeviceList();\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class BluetoothScanningFactory implements ScanningAdapter {\n\n    private ScanningAdapter mScanningAdapter;\n\n    public BluetoothScanningFactory() {\n        if (isNewerAPI()) {\n            mScanningAdapter = new LollipopBluetoothLEScanAdapter();\n        } else {\n            mScanningAdapter = new JellyBeanBluetoothLEScanAdapter();\n        }\n    }\n\n    private boolean isNewerAPI() {\n        return Build.VERSION.SDK_INT \u003e= Build.VERSION_CODES.LOLLIPOP;\n    }\n\n    @Override\n    public void startScanning(String[] uuids) {\n        mScanningAdapter.startScanning(uuids);\n    }\n\n    @Override\n    public void stopScanning() {\n        mScanningAdapter.stopScanning();\n    }\n\n    @Override\n    public List\u003cBTDevice\u003e getFoundDeviceList() {\n        return mScanningAdapter.getFoundDeviceList();\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447928935,
        "id": "255c6a91-16df-429e-b882-b8e37e2fa327",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447928935,
        "parent_id": "8f3c43e7-5a35-423a-8c03-513beb2a4266",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Create factory implementation for each API:"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Create factory implementation for each API:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447928935,
        "id": "2b6bfd02-a91b-4002-9955-15169de6b05e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447928935,
        "parent_id": "8f3c43e7-5a35-423a-8c03-513beb2a4266",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "API 18:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "API 18:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447928935,
        "id": "d9a81e20-ca97-4899-8a60-93dfcf1e3c3b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447928935,
        "parent_id": "8f3c43e7-5a35-423a-8c03-513beb2a4266",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import android.annotation.TargetApi;\nimport android.bluetooth.BluetoothAdapter;\nimport android.bluetooth.BluetoothDevice;\nimport android.os.Build;\nimport android.os.Parcelable;\nimport android.util.Log;\n\nimport bluetooth.model.BTDevice;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.UUID;\n\n@TargetApi(Build.VERSION_CODES.JELLY_BEAN_MR2)\npublic class JellyBeanBluetoothLEScanAdapter implements ScanningAdapter{\n    BluetoothAdapter bluetoothAdapter;\n    ScanCallback mCallback;\n\n    List\u003cBTDevice\u003e mBluetoothDeviceList;\n\n    public JellyBeanBluetoothLEScanAdapter() {\n        bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();\n        mCallback = new ScanCallback();\n        mBluetoothDeviceList = new ArrayList\u003c\u003e();\n    }\n\n    @Override\n    public void startScanning(String[] uuids) {\n        if (uuids == null || uuids.length == 0) {\n            return;\n        }\n        UUID[] uuidList = createUUIDList(uuids);\n        bluetoothAdapter.startLeScan(uuidList, mCallback);\n    }\n\n    private UUID[] createUUIDList(String[] uuids) {\n        UUID[] uuidList = new UUID[uuids.length];\n        for (int i = 0 ; i \u003c uuids.length ; ++i) {\n            String uuid = uuids[i];\n            if (uuid == null) {\n                continue;\n            }\n            uuidList[i] = UUID.fromString(uuid);\n        }\n        return uuidList;\n    }\n\n    @Override\n    public void stopScanning() {\n        bluetoothAdapter.stopLeScan(mCallback);\n    }\n\n    @Override\n    public List\u003cBTDevice\u003e getFoundDeviceList() {\n        return mBluetoothDeviceList;\n    }\n\n    private class ScanCallback implements BluetoothAdapter.LeScanCallback {\n\n        @Override\n        public void onLeScan(BluetoothDevice device, int rssi, byte[] scanRecord) {\n            if (isAlreadyAdded(device)) {\n                return;\n            }\n            BTDevice btDevice = new BTDevice();\n            btDevice.setName(new String(device.getName()));\n            btDevice.setAddress(device.getAddress());\n            mBluetoothDeviceList.add(btDevice);\n            Log.d(\"Bluetooth discovery\", device.getName() + \" \" + device.getAddress());\n            Parcelable[] uuids = device.getUuids();\n            String uuid = \"\";\n            if (uuids != null) {\n                for (Parcelable ep : uuids) {\n                    uuid += ep + \" \";\n                }\n                Log.d(\"Bluetooth discovery\", device.getName() + \" \" + device.getAddress() + \" \" + uuid);\n            }\n        }\n\n        private boolean isAlreadyAdded(BluetoothDevice bluetoothDevice) {\n            for (BTDevice device : mBluetoothDeviceList) {\n                String alreadyAddedDeviceMACAddress = device.getAddress();\n                String newDeviceMACAddress = bluetoothDevice.getAddress();\n                if (alreadyAddedDeviceMACAddress.equals(newDeviceMACAddress)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import android.annotation.TargetApi;\nimport android.bluetooth.BluetoothAdapter;\nimport android.bluetooth.BluetoothDevice;\nimport android.os.Build;\nimport android.os.Parcelable;\nimport android.util.Log;\n\nimport bluetooth.model.BTDevice;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.UUID;\n\n@TargetApi(Build.VERSION_CODES.JELLY_BEAN_MR2)\npublic class JellyBeanBluetoothLEScanAdapter implements ScanningAdapter{\n    BluetoothAdapter bluetoothAdapter;\n    ScanCallback mCallback;\n\n    List\u003cBTDevice\u003e mBluetoothDeviceList;\n\n    public JellyBeanBluetoothLEScanAdapter() {\n        bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();\n        mCallback = new ScanCallback();\n        mBluetoothDeviceList = new ArrayList\u003c\u003e();\n    }\n\n    @Override\n    public void startScanning(String[] uuids) {\n        if (uuids == null || uuids.length == 0) {\n            return;\n        }\n        UUID[] uuidList = createUUIDList(uuids);\n        bluetoothAdapter.startLeScan(uuidList, mCallback);\n    }\n\n    private UUID[] createUUIDList(String[] uuids) {\n        UUID[] uuidList = new UUID[uuids.length];\n        for (int i = 0 ; i \u003c uuids.length ; ++i) {\n            String uuid = uuids[i];\n            if (uuid == null) {\n                continue;\n            }\n            uuidList[i] = UUID.fromString(uuid);\n        }\n        return uuidList;\n    }\n\n    @Override\n    public void stopScanning() {\n        bluetoothAdapter.stopLeScan(mCallback);\n    }\n\n    @Override\n    public List\u003cBTDevice\u003e getFoundDeviceList() {\n        return mBluetoothDeviceList;\n    }\n\n    private class ScanCallback implements BluetoothAdapter.LeScanCallback {\n\n        @Override\n        public void onLeScan(BluetoothDevice device, int rssi, byte[] scanRecord) {\n            if (isAlreadyAdded(device)) {\n                return;\n            }\n            BTDevice btDevice = new BTDevice();\n            btDevice.setName(new String(device.getName()));\n            btDevice.setAddress(device.getAddress());\n            mBluetoothDeviceList.add(btDevice);\n            Log.d(\"Bluetooth discovery\", device.getName() + \" \" + device.getAddress());\n            Parcelable[] uuids = device.getUuids();\n            String uuid = \"\";\n            if (uuids != null) {\n                for (Parcelable ep : uuids) {\n                    uuid += ep + \" \";\n                }\n                Log.d(\"Bluetooth discovery\", device.getName() + \" \" + device.getAddress() + \" \" + uuid);\n            }\n        }\n\n        private boolean isAlreadyAdded(BluetoothDevice bluetoothDevice) {\n            for (BTDevice device : mBluetoothDeviceList) {\n                String alreadyAddedDeviceMACAddress = device.getAddress();\n                String newDeviceMACAddress = bluetoothDevice.getAddress();\n                if (alreadyAddedDeviceMACAddress.equals(newDeviceMACAddress)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447928935,
        "id": "b5ace012-5a6e-45b4-b5f2-75809e487abc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447928935,
        "parent_id": "8f3c43e7-5a35-423a-8c03-513beb2a4266",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "API 21:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "API 21:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447928935,
        "id": "116c69a3-477f-4874-a418-0ee8f3328543",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447928935,
        "parent_id": "8f3c43e7-5a35-423a-8c03-513beb2a4266",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import android.annotation.TargetApi;\nimport android.bluetooth.BluetoothAdapter;\nimport android.bluetooth.le.BluetoothLeScanner;\nimport android.bluetooth.le.ScanFilter;\nimport android.bluetooth.le.ScanResult;\nimport android.bluetooth.le.ScanSettings;\nimport android.os.Build;\nimport android.os.ParcelUuid;\n\nimport bluetooth.model.BTDevice;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n@TargetApi(Build.VERSION_CODES.LOLLIPOP)\npublic class LollipopBluetoothLEScanAdapter implements ScanningAdapter {\n    BluetoothLeScanner bluetoothLeScanner;\n    ScanCallback mCallback;\n\n    List\u003cBTDevice\u003e mBluetoothDeviceList;\n\n    public LollipopBluetoothLEScanAdapter() {\n        bluetoothLeScanner = BluetoothAdapter.getDefaultAdapter().getBluetoothLeScanner();\n        mCallback = new ScanCallback();\n        mBluetoothDeviceList = new ArrayList\u003c\u003e();\n    }\n\n    @Override\n    public void startScanning(String[] uuids) {\n        if (uuids == null || uuids.length == 0) {\n            return;\n        }\n        List\u003cScanFilter\u003e filterList = createScanFilterList(uuids);\n        ScanSettings scanSettings = createScanSettings();\n        bluetoothLeScanner.startScan(filterList, scanSettings, mCallback);\n    }\n\n    private List\u003cScanFilter\u003e createScanFilterList(String[] uuids) {\n        List\u003cScanFilter\u003e filterList = new ArrayList\u003c\u003e();\n        for (String uuid : uuids) {\n            ScanFilter filter = new ScanFilter.Builder()\n                    .setServiceUuid(ParcelUuid.fromString(uuid))\n                    .build();\n            filterList.add(filter);\n        };\n        return filterList;\n    }\n\n    private ScanSettings createScanSettings() {\n        ScanSettings settings = new ScanSettings.Builder()\n                .setScanMode(ScanSettings.SCAN_MODE_BALANCED)\n                .build();\n        return settings;\n    }\n\n    @Override\n    public void stopScanning() {\n        bluetoothLeScanner.stopScan(mCallback);\n    }\n\n    @Override\n    public List\u003cBTDevice\u003e getFoundDeviceList() {\n        return mBluetoothDeviceList;\n    }\n\n    public class ScanCallback extends android.bluetooth.le.ScanCallback {\n\n        @Override\n        public void onScanResult(int callbackType, ScanResult result) {\n            super.onScanResult(callbackType, result);\n            if (result == null) {\n                return;\n            }\n            BTDevice device = new BTDevice();\n            device.setAddress(result.getDevice().getAddress());\n            device.setName(new StringBuffer(result.getScanRecord().getDeviceName()).toString());\n            if (device == null || device.getAddress() == null) {\n                return;\n            }\n            if (isAlreadyAdded(device)) {\n                return;\n            }\n            mBluetoothDeviceList.add(device);\n        }\n\n        private boolean isAlreadyAdded(BTDevice bluetoothDevice) {\n            for (BTDevice device : mBluetoothDeviceList) {\n                String alreadyAddedDeviceMACAddress = device.getAddress();\n                String newDeviceMACAddress = bluetoothDevice.getAddress();\n                if (alreadyAddedDeviceMACAddress.equals(newDeviceMACAddress)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import android.annotation.TargetApi;\nimport android.bluetooth.BluetoothAdapter;\nimport android.bluetooth.le.BluetoothLeScanner;\nimport android.bluetooth.le.ScanFilter;\nimport android.bluetooth.le.ScanResult;\nimport android.bluetooth.le.ScanSettings;\nimport android.os.Build;\nimport android.os.ParcelUuid;\n\nimport bluetooth.model.BTDevice;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n@TargetApi(Build.VERSION_CODES.LOLLIPOP)\npublic class LollipopBluetoothLEScanAdapter implements ScanningAdapter {\n    BluetoothLeScanner bluetoothLeScanner;\n    ScanCallback mCallback;\n\n    List\u003cBTDevice\u003e mBluetoothDeviceList;\n\n    public LollipopBluetoothLEScanAdapter() {\n        bluetoothLeScanner = BluetoothAdapter.getDefaultAdapter().getBluetoothLeScanner();\n        mCallback = new ScanCallback();\n        mBluetoothDeviceList = new ArrayList\u003c\u003e();\n    }\n\n    @Override\n    public void startScanning(String[] uuids) {\n        if (uuids == null || uuids.length == 0) {\n            return;\n        }\n        List\u003cScanFilter\u003e filterList = createScanFilterList(uuids);\n        ScanSettings scanSettings = createScanSettings();\n        bluetoothLeScanner.startScan(filterList, scanSettings, mCallback);\n    }\n\n    private List\u003cScanFilter\u003e createScanFilterList(String[] uuids) {\n        List\u003cScanFilter\u003e filterList = new ArrayList\u003c\u003e();\n        for (String uuid : uuids) {\n            ScanFilter filter = new ScanFilter.Builder()\n                    .setServiceUuid(ParcelUuid.fromString(uuid))\n                    .build();\n            filterList.add(filter);\n        };\n        return filterList;\n    }\n\n    private ScanSettings createScanSettings() {\n        ScanSettings settings = new ScanSettings.Builder()\n                .setScanMode(ScanSettings.SCAN_MODE_BALANCED)\n                .build();\n        return settings;\n    }\n\n    @Override\n    public void stopScanning() {\n        bluetoothLeScanner.stopScan(mCallback);\n    }\n\n    @Override\n    public List\u003cBTDevice\u003e getFoundDeviceList() {\n        return mBluetoothDeviceList;\n    }\n\n    public class ScanCallback extends android.bluetooth.le.ScanCallback {\n\n        @Override\n        public void onScanResult(int callbackType, ScanResult result) {\n            super.onScanResult(callbackType, result);\n            if (result == null) {\n                return;\n            }\n            BTDevice device = new BTDevice();\n            device.setAddress(result.getDevice().getAddress());\n            device.setName(new StringBuffer(result.getScanRecord().getDeviceName()).toString());\n            if (device == null || device.getAddress() == null) {\n                return;\n            }\n            if (isAlreadyAdded(device)) {\n                return;\n            }\n            mBluetoothDeviceList.add(device);\n        }\n\n        private boolean isAlreadyAdded(BTDevice bluetoothDevice) {\n            for (BTDevice device : mBluetoothDeviceList) {\n                String alreadyAddedDeviceMACAddress = device.getAddress();\n                String newDeviceMACAddress = bluetoothDevice.getAddress();\n                if (alreadyAddedDeviceMACAddress.equals(newDeviceMACAddress)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447928935,
        "id": "8ff5eb2d-a6f8-4bac-b7a4-20b582f45521",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447928935,
        "parent_id": "8f3c43e7-5a35-423a-8c03-513beb2a4266",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Get found device list by calling:"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Get found device list by calling:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550447928936,
        "id": "825d5b5b-27ab-4405-9c08-ace1cd846cd9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550447928936,
        "parent_id": "8f3c43e7-5a35-423a-8c03-513beb2a4266",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "scanningFactory.startScanning({uuidlist});\n\nwait few seconds...\n\nList\u003cBTDevice\u003e bluetoothDeviceList = scanningFactory.getFoundDeviceList();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "scanningFactory.startScanning({uuidlist});\n\nwait few seconds...\n\nList\u003cBTDevice\u003e bluetoothDeviceList = scanningFactory.getFoundDeviceList();",
        "code_language": "Plain Text"
      }
    ],
    "title": "Find nearby Bluetooth Low Energy devices",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}