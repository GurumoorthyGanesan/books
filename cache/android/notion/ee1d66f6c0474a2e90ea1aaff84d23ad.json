{
  "ID": "ee1d66f6-c047-4a2e-90ea-1aaff84d23ad",
  "Root": {
    "alive": true,
    "content": [
      "eed43ca2-1f7c-437f-966a-5629dde9a7c0",
      "88af9641-d93c-44ed-b892-27f1d73997b0",
      "14f5db14-5e56-4943-8150-c09f2081542a",
      "5cdfba7b-03ba-4aba-a5b7-576d6e2e4a28",
      "86185e13-2efd-4d7b-8be8-00b3933f4231"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550443764087,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ee1d66f6-c047-4a2e-90ea-1aaff84d23ad",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550443764087,
    "parent_id": "f7aa3cbf-18e0-4aee-8ec1-725bd9ccb0bc",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "130 Handling dynamic key for JSON response"
        ]
      ]
    },
    "type": "page",
    "version": 2,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550443764086,
        "id": "eed43ca2-1f7c-437f-966a-5629dde9a7c0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550443764086,
        "parent_id": "ee1d66f6-c047-4a2e-90ea-1aaff84d23ad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is an example for how to handle dynamic key for response. Here "
            ],
            [
              "A",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "B",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are dynamic keys it can be anything"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is an example for how to handle dynamic key for response. Here "
          },
          {
            "Text": "A",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "B",
            "AttrFlags": 2
          },
          {
            "Text": " are dynamic keys it can be anything"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550443764087,
        "id": "88af9641-d93c-44ed-b892-27f1d73997b0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550443764087,
        "parent_id": "ee1d66f6-c047-4a2e-90ea-1aaff84d23ad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Response"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Response"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550443764087,
        "id": "14f5db14-5e56-4943-8150-c09f2081542a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550443764087,
        "parent_id": "ee1d66f6-c047-4a2e-90ea-1aaff84d23ad",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "{\n  \"response\": [\n    {\n      \"A\": [\n        {\n          \"name\": \"Tango\"\n        },\n        {\n          \"name\": \"Ping\"\n        }\n      ],\n      \"B\": [\n        {\n          \"name\": \"Jon\"\n        },\n        {\n          \"name\": \"Mark\"\n        }\n      ]\n    }\n  ]\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "{\n  \"response\": [\n    {\n      \"A\": [\n        {\n          \"name\": \"Tango\"\n        },\n        {\n          \"name\": \"Ping\"\n        }\n      ],\n      \"B\": [\n        {\n          \"name\": \"Jon\"\n        },\n        {\n          \"name\": \"Mark\"\n        }\n      ]\n    }\n  ]\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550443764087,
        "id": "5cdfba7b-03ba-4aba-a5b7-576d6e2e4a28",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550443764087,
        "parent_id": "ee1d66f6-c047-4a2e-90ea-1aaff84d23ad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Java code"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Java code"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550443764087,
        "id": "86185e13-2efd-4d7b-8be8-00b3933f4231",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550443764087,
        "parent_id": "ee1d66f6-c047-4a2e-90ea-1aaff84d23ad",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// ResponseData is raw string of response\nJSONObject responseDataObj = new JSONObject(responseData);\nJSONArray responseArray = responseDataObj.getJSONArray(\"response\");\nfor (int i = 0; i \u003c responseArray.length(); i++) {\n    // Nodes ArrayList\u003cArrayList\u003cString\u003e\u003e declared globally\n    nodes = new ArrayList\u003cArrayList\u003cString\u003e\u003e();\n    JSONObject obj = responseArray.getJSONObject(i);\n    Iterator keys = obj.keys();\n    while(keys.hasNext()) {\n       // Loop to get the dynamic key\n       String currentDynamicKey = (String)keys.next();\n       // Get the value of the dynamic key\n       JSONArray currentDynamicValue = obj.getJSONArray(currentDynamicKey);\n       int jsonArraySize = currentDynamicValue.length();\n       if(jsonArraySize \u003e 0) {\n           for (int ii = 0; ii \u003c jsonArraySize; ii++) {\n                // NameList ArrayList\u003cString\u003e declared globally\n                nameList = new ArrayList\u003cString\u003e();\n               if(ii == 0) {\n                JSONObject nameObj = currentDynamicValue.getJSONObject(ii);\n                String name = nameObj.getString(\"name\");\n                System.out.print(\"Name = \" + name);\n                // Store name in an array list\n                nameList.add(name);\n              }\n           }                    \n       }\n     nodes.add(nameList);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// ResponseData is raw string of response\nJSONObject responseDataObj = new JSONObject(responseData);\nJSONArray responseArray = responseDataObj.getJSONArray(\"response\");\nfor (int i = 0; i \u003c responseArray.length(); i++) {\n    // Nodes ArrayList\u003cArrayList\u003cString\u003e\u003e declared globally\n    nodes = new ArrayList\u003cArrayList\u003cString\u003e\u003e();\n    JSONObject obj = responseArray.getJSONObject(i);\n    Iterator keys = obj.keys();\n    while(keys.hasNext()) {\n       // Loop to get the dynamic key\n       String currentDynamicKey = (String)keys.next();\n       // Get the value of the dynamic key\n       JSONArray currentDynamicValue = obj.getJSONArray(currentDynamicKey);\n       int jsonArraySize = currentDynamicValue.length();\n       if(jsonArraySize \u003e 0) {\n           for (int ii = 0; ii \u003c jsonArraySize; ii++) {\n                // NameList ArrayList\u003cString\u003e declared globally\n                nameList = new ArrayList\u003cString\u003e();\n               if(ii == 0) {\n                JSONObject nameObj = currentDynamicValue.getJSONObject(ii);\n                String name = nameObj.getString(\"name\");\n                System.out.print(\"Name = \" + name);\n                // Store name in an array list\n                nameList.add(name);\n              }\n           }                    \n       }\n     nodes.add(nameList);\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "130 Handling dynamic key for JSON response",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}