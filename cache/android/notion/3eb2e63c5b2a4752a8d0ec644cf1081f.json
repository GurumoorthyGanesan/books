{
  "ID": "3eb2e63c-5b2a-4752-a8d0-ec644cf1081f",
  "Root": {
    "alive": true,
    "content": [
      "05ffde58-b66c-4fc6-9fdf-401f160a4c06",
      "b4c54dfd-6940-41b4-bb6a-e6ec54dee030"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550455300073,
    "id": "3eb2e63c-5b2a-4752-a8d0-ec644cf1081f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550455300073,
    "parent_id": "cea43ac2-635b-47f0-8e22-31dd43944c2b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 Basic example using SparseArray"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550455300068,
        "id": "05ffde58-b66c-4fc6-9fdf-401f160a4c06",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550455300068,
        "parent_id": "3eb2e63c-5b2a-4752-a8d0-ec644cf1081f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Person {\n    String name;\n\n    public Person(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n\n        Person person = (Person) o;\n\n        return name != null ? name.equals(person.name) : person.name == null;\n    }\n\n    @Override\n    public int hashCode() {\n        return name != null ? name.hashCode() : 0;\n    }\n\n    @Override\n    public String toString() {\n        return \"Person{\" +\n                \"name='\" + name + '\\'' +\n                '}';\n    }\n}\n\nfinal Person steve = new Person(\"Steve\");\nPerson[] persons = new Person[] { new Person(\"John\"), new Person(\"Gwen\"), steve, new Person(\"Rob\") };\nint[] identifiers = new int[] {1234, 2345, 3456, 4567};\n\nfinal SparseArray\u003cPerson\u003e demo = new SparseArray\u003c\u003e();\n\n// Mapping persons to identifiers.\nfor (int i = 0; i \u003c persons.length; i++) {\n    demo.put(identifiers[i], persons[i]);\n}\n\n// Find the person with identifier 1234.\nPerson id1234 = demo.get(1234); // Returns John.\n\n// Find the person with identifier 6410.\nPerson id6410 = demo.get(6410); // Returns null.\n\n// Find the 3rd person.\nPerson third = demo.valueAt(3); // Returns Rob.\n\n// Find the 42th person.\n//Person fortysecond = demo.valueAt(42); // Throws ArrayIndexOutOfBoundsException.\n\n// Remove the last person.\ndemo.removeAt(demo.size() - 1); // Rob removed.\n\n// Remove the person with identifier 1234.\ndemo.delete(1234); // John removed.\n\n// Find the index of Steve.\nint indexOfSteve = demo.indexOfValue(steve);\n\n// Find the identifier of Steve.\nint identifierOfSteve = demo.keyAt(indexOfSteve);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Person {\n    String name;\n\n    public Person(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n\n        Person person = (Person) o;\n\n        return name != null ? name.equals(person.name) : person.name == null;\n    }\n\n    @Override\n    public int hashCode() {\n        return name != null ? name.hashCode() : 0;\n    }\n\n    @Override\n    public String toString() {\n        return \"Person{\" +\n                \"name='\" + name + '\\'' +\n                '}';\n    }\n}\n\nfinal Person steve = new Person(\"Steve\");\nPerson[] persons = new Person[] { new Person(\"John\"), new Person(\"Gwen\"), steve, new Person(\"Rob\") };\nint[] identifiers = new int[] {1234, 2345, 3456, 4567};\n\nfinal SparseArray\u003cPerson\u003e demo = new SparseArray\u003c\u003e();\n\n// Mapping persons to identifiers.\nfor (int i = 0; i \u003c persons.length; i++) {\n    demo.put(identifiers[i], persons[i]);\n}\n\n// Find the person with identifier 1234.\nPerson id1234 = demo.get(1234); // Returns John.\n\n// Find the person with identifier 6410.\nPerson id6410 = demo.get(6410); // Returns null.\n\n// Find the 3rd person.\nPerson third = demo.valueAt(3); // Returns Rob.\n\n// Find the 42th person.\n//Person fortysecond = demo.valueAt(42); // Throws ArrayIndexOutOfBoundsException.\n\n// Remove the last person.\ndemo.removeAt(demo.size() - 1); // Rob removed.\n\n// Remove the person with identifier 1234.\ndemo.delete(1234); // John removed.\n\n// Find the index of Steve.\nint indexOfSteve = demo.indexOfValue(steve);\n\n// Find the identifier of Steve.\nint identifierOfSteve = demo.keyAt(indexOfSteve);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550455300072,
        "id": "b4c54dfd-6940-41b4-bb6a-e6ec54dee030",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550455300072,
        "parent_id": "3eb2e63c-5b2a-4752-a8d0-ec644cf1081f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Tutorial on YouTube",
              [
                [
                  "a",
                  "https://www.youtube.com/watch?v=I16lz26WyzQ"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Tutorial on YouTube",
            "Link": "https://www.youtube.com/watch?v=I16lz26WyzQ"
          }
        ]
      }
    ],
    "title": "010 Basic example using SparseArray"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}