{
  "ID": "fcaa763b-e2b5-42db-b69e-946765b2c4a1",
  "Root": {
    "alive": true,
    "content": [
      "cb0d97c8-5d07-4fcf-9f7e-f6e023219de0",
      "0864ca82-fbe9-4c25-937e-f7149d42c03d",
      "8d9ab8b8-2126-455a-9f10-18c052ac4f31",
      "2ce8a9d3-0a1a-4bbc-afa4-69a936e6067e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550443639915,
    "id": "fcaa763b-e2b5-42db-b69e-946765b2c4a1",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550443639915,
    "parent_id": "b9098913-7e61-4386-8d02-ca92ab88b324",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "030 Another way to implement Item Click Listener"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550443639912,
        "id": "cb0d97c8-5d07-4fcf-9f7e-f6e023219de0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550443639912,
        "parent_id": "fcaa763b-e2b5-42db-b69e-946765b2c4a1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another way to implement item click listener is to use interface with several methods, the number of which is equal to the number of clickable views, and use overrided click listeners as you can see below. This method is more flexible, because you can set click listeners to different views and quite easy control the click logic separately for each."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another way to implement item click listener is to use interface with several methods, the number of which is equal to the number of clickable views, and use overrided click listeners as you can see below. This method is more flexible, because you can set click listeners to different views and quite easy control the click logic separately for each."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550443639915,
        "id": "0864ca82-fbe9-4c25-937e-f7149d42c03d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550443639915,
        "parent_id": "fcaa763b-e2b5-42db-b69e-946765b2c4a1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class CustomAdapter extends RecyclerView.Adapter\u003cCustomAdapter.CustomHolder\u003e {\n\n    private ArrayList\u003cObject\u003e mObjects;\n    private ClickInterface mClickInterface;\n\n    public interface ClickInterface {\n        void clickEventOne(Object obj);\n        void clickEventTwo(Object obj1, Object obj2);\n    }\n\n    public void setClickInterface(ClickInterface clickInterface) {\n        mClickInterface = clickInterface;\n    }\n\n    public CustomAdapter(){\n        mList = new ArrayList\u003c\u003e();\n    }\n\n    public void addItems(ArrayList\u003cObject\u003e objects) {\n        mObjects.clear();\n        mObjects.addAll(objects);\n        notifyDataSetChanged();\n    }\n\n    @Override\n    public CustomHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View v = LayoutInflater.from(parent.getContext())\n                                .inflate(R.layout.list_item, parent, false);\n        return new CustomHolder(v);\n    }\n\n    @Override\n    public void onBindViewHolder(CustomHolder holder, int position) {\n        //make all even positions not clickable\n        holder.firstClickListener.setClickable(position%2==0);\n        holder.firstClickListener.setPosition(position);\n        holder.secondClickListener.setPosition(position);\n    }\n\n\n    private class FirstClickListener implements View.OnClickListener {\n        private int mPosition;\n        private boolean mClickable;\n\n        void setPosition(int position) {\n            mPosition = position;\n        }\n\n        void setClickable(boolean clickable) {\n            mPosition = position;\n        }\n\n        @Override\n        public void onClick(View v) {\n            if(mClickable) {\n                mClickInterface.clickEventOne(mObjects.get(mPosition));\n            }\n        }\n    }\n\n    private class SecondClickListener implements View.OnClickListener {\n        private int mPosition;\n\n        void setPosition(int position) {\n            mPosition = position;\n        }\n\n        @Override\n        public void onClick(View v) {\n            mClickInterface.clickEventTwo(mObjects.get(mPosition), v);\n        }\n    }\n\n    @Override\n    public int getItemCount() {\n        return mObjects.size();\n    }\n\n    protected class CustomHolder extends RecyclerView.ViewHolder {\n        FirstClickListener firstClickListener;\n        SecondClickListener secondClickListener;\n        View v1, v2;\n\n        public DialogHolder(View itemView) {\n            super(itemView);\n            v1 = itemView.findViewById(R.id.v1);\n            v2 = itemView.findViewById(R.id.v2);\n            firstClickListener = new FirstClickListener();\n            secondClickListener = new SecondClickListener();\n\n            v1.setOnClickListener(firstClickListener);\n            v2.setOnClickListener(secondClickListener);\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class CustomAdapter extends RecyclerView.Adapter\u003cCustomAdapter.CustomHolder\u003e {\n\n    private ArrayList\u003cObject\u003e mObjects;\n    private ClickInterface mClickInterface;\n\n    public interface ClickInterface {\n        void clickEventOne(Object obj);\n        void clickEventTwo(Object obj1, Object obj2);\n    }\n\n    public void setClickInterface(ClickInterface clickInterface) {\n        mClickInterface = clickInterface;\n    }\n\n    public CustomAdapter(){\n        mList = new ArrayList\u003c\u003e();\n    }\n\n    public void addItems(ArrayList\u003cObject\u003e objects) {\n        mObjects.clear();\n        mObjects.addAll(objects);\n        notifyDataSetChanged();\n    }\n\n    @Override\n    public CustomHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View v = LayoutInflater.from(parent.getContext())\n                                .inflate(R.layout.list_item, parent, false);\n        return new CustomHolder(v);\n    }\n\n    @Override\n    public void onBindViewHolder(CustomHolder holder, int position) {\n        //make all even positions not clickable\n        holder.firstClickListener.setClickable(position%2==0);\n        holder.firstClickListener.setPosition(position);\n        holder.secondClickListener.setPosition(position);\n    }\n\n\n    private class FirstClickListener implements View.OnClickListener {\n        private int mPosition;\n        private boolean mClickable;\n\n        void setPosition(int position) {\n            mPosition = position;\n        }\n\n        void setClickable(boolean clickable) {\n            mPosition = position;\n        }\n\n        @Override\n        public void onClick(View v) {\n            if(mClickable) {\n                mClickInterface.clickEventOne(mObjects.get(mPosition));\n            }\n        }\n    }\n\n    private class SecondClickListener implements View.OnClickListener {\n        private int mPosition;\n\n        void setPosition(int position) {\n            mPosition = position;\n        }\n\n        @Override\n        public void onClick(View v) {\n            mClickInterface.clickEventTwo(mObjects.get(mPosition), v);\n        }\n    }\n\n    @Override\n    public int getItemCount() {\n        return mObjects.size();\n    }\n\n    protected class CustomHolder extends RecyclerView.ViewHolder {\n        FirstClickListener firstClickListener;\n        SecondClickListener secondClickListener;\n        View v1, v2;\n\n        public DialogHolder(View itemView) {\n            super(itemView);\n            v1 = itemView.findViewById(R.id.v1);\n            v2 = itemView.findViewById(R.id.v2);\n            firstClickListener = new FirstClickListener();\n            secondClickListener = new SecondClickListener();\n\n            v1.setOnClickListener(firstClickListener);\n            v2.setOnClickListener(secondClickListener);\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550443639915,
        "id": "8d9ab8b8-2126-455a-9f10-18c052ac4f31",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550443639915,
        "parent_id": "fcaa763b-e2b5-42db-b69e-946765b2c4a1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And when you have an instance of adapter, you can set your click listener which listens to clicking on each of the views:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And when you have an instance of adapter, you can set your click listener which listens to clicking on each of the views:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550443639915,
        "id": "2ce8a9d3-0a1a-4bbc-afa4-69a936e6067e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550443639915,
        "parent_id": "fcaa763b-e2b5-42db-b69e-946765b2c4a1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "customAdapter.setClickInterface(new CustomAdapter.ClickInterface {\n    @Override\n    public void clickEventOne(Object obj) {\n        // Your implementation here\n    }\n    @Override\n    public void clickEventTwo(Object obj1, Object obj2) {\n        // Your implementation here\n    }\n});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "customAdapter.setClickInterface(new CustomAdapter.ClickInterface {\n    @Override\n    public void clickEventOne(Object obj) {\n        // Your implementation here\n    }\n    @Override\n    public void clickEventTwo(Object obj1, Object obj2) {\n        // Your implementation here\n    }\n});",
        "code_language": "Plain Text"
      }
    ],
    "title": "030 Another way to implement Item Click Listener"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}