{
  "ID": "c40c68ca-aeae-471a-bc08-d80ebd76ad3a",
  "Root": {
    "alive": true,
    "content": [
      "5649982c-0fd6-440c-8cc5-3adb0313666b",
      "ff749929-3076-4197-a392-80474a1d206f",
      "b010f9d3-c6d4-4382-a495-ddd0c914d200",
      "9fcf69c9-5994-4320-95bd-220db57c0186"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550452544030,
    "id": "c40c68ca-aeae-471a-bc08-d80ebd76ad3a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550452544030,
    "parent_id": "9d26f612-3468-4d2c-a80b-ad718b6e877e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Speech to Text without Dialog"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452544021,
        "id": "5649982c-0fd6-440c-8cc5-3adb0313666b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452544021,
        "parent_id": "c40c68ca-aeae-471a-bc08-d80ebd76ad3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following code can be used to trigger speech-to-text translation without showing a dialog:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following code can be used to trigger speech-to-text translation without showing a dialog:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452544029,
        "id": "ff749929-3076-4197-a392-80474a1d206f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452544029,
        "parent_id": "c40c68ca-aeae-471a-bc08-d80ebd76ad3a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public void startListeningWithoutDialog() {\n    // Intent to listen to user vocal input and return the result to the same activity.\n    Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);\n\n    // Use a language model based on free-form speech recognition.\n    intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,\n            RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);\n    intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, Locale.getDefault());\n    intent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, 5);\n    intent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE,\n            appContext.getPackageName());\n\n    // Add custom listeners.\n    CustomRecognitionListener listener = new CustomRecognitionListener();\n    SpeechRecognizer sr = SpeechRecognizer.createSpeechRecognizer(appContext);\n    sr.setRecognitionListener(listener);\n    sr.startListening(intent);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public void startListeningWithoutDialog() {\n    // Intent to listen to user vocal input and return the result to the same activity.\n    Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);\n\n    // Use a language model based on free-form speech recognition.\n    intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,\n            RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);\n    intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, Locale.getDefault());\n    intent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, 5);\n    intent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE,\n            appContext.getPackageName());\n\n    // Add custom listeners.\n    CustomRecognitionListener listener = new CustomRecognitionListener();\n    SpeechRecognizer sr = SpeechRecognizer.createSpeechRecognizer(appContext);\n    sr.setRecognitionListener(listener);\n    sr.startListening(intent);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452544030,
        "id": "b010f9d3-c6d4-4382-a495-ddd0c914d200",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452544030,
        "parent_id": "c40c68ca-aeae-471a-bc08-d80ebd76ad3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The custom listener class "
            ],
            [
              "CustomRecognitionListener",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " used in the code above is implemented as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The custom listener class "
          },
          {
            "Text": "CustomRecognitionListener",
            "AttrFlags": 2
          },
          {
            "Text": " used in the code above is implemented as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452544030,
        "id": "9fcf69c9-5994-4320-95bd-220db57c0186",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452544030,
        "parent_id": "c40c68ca-aeae-471a-bc08-d80ebd76ad3a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class CustomRecognitionListener implements RecognitionListener {\n    private static final String TAG = \"RecognitionListener\";\n\n    public void onReadyForSpeech(Bundle params) {\n        Log.d(TAG, \"onReadyForSpeech\");\n    }\n\n    public void onBeginningOfSpeech() {\n        Log.d(TAG, \"onBeginningOfSpeech\");\n    }\n\n    public void onRmsChanged(float rmsdB) {\n        Log.d(TAG, \"onRmsChanged\");\n    }\n\n    public void onBufferReceived(byte[] buffer) {\n        Log.d(TAG, \"onBufferReceived\");\n    }\n\n    public void onEndOfSpeech() {\n        Log.d(TAG, \"onEndofSpeech\");\n    }\n\n    public void onError(int error) {\n        Log.e(TAG, \"error \" + error);\n\n        conversionCallaback.onErrorOccured(TranslatorUtil.getErrorText(error));\n    }\n\n    public void onResults(Bundle results) {\n        ArrayList\u003cString\u003e result = data\n                .getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS);\n        txtSpeechInput.setText(result.get(0));\n    }\n\n    public void onPartialResults(Bundle partialResults) {\n        Log.d(TAG, \"onPartialResults\");\n    }\n\n    public void onEvent(int eventType, Bundle params) {\n        Log.d(TAG, \"onEvent \" + eventType);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class CustomRecognitionListener implements RecognitionListener {\n    private static final String TAG = \"RecognitionListener\";\n\n    public void onReadyForSpeech(Bundle params) {\n        Log.d(TAG, \"onReadyForSpeech\");\n    }\n\n    public void onBeginningOfSpeech() {\n        Log.d(TAG, \"onBeginningOfSpeech\");\n    }\n\n    public void onRmsChanged(float rmsdB) {\n        Log.d(TAG, \"onRmsChanged\");\n    }\n\n    public void onBufferReceived(byte[] buffer) {\n        Log.d(TAG, \"onBufferReceived\");\n    }\n\n    public void onEndOfSpeech() {\n        Log.d(TAG, \"onEndofSpeech\");\n    }\n\n    public void onError(int error) {\n        Log.e(TAG, \"error \" + error);\n\n        conversionCallaback.onErrorOccured(TranslatorUtil.getErrorText(error));\n    }\n\n    public void onResults(Bundle results) {\n        ArrayList\u003cString\u003e result = data\n                .getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS);\n        txtSpeechInput.setText(result.get(0));\n    }\n\n    public void onPartialResults(Bundle partialResults) {\n        Log.d(TAG, \"onPartialResults\");\n    }\n\n    public void onEvent(int eventType, Bundle params) {\n        Log.d(TAG, \"onEvent \" + eventType);\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "020 Speech to Text without Dialog"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}