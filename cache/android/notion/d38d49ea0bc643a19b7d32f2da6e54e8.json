{
  "ID": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
  "Root": {
    "alive": true,
    "content": [
      "7aba3412-a39c-443c-b4a6-67cacd10ed06",
      "899449e7-7789-40a4-a8ef-99600e58f107",
      "b8980d43-f34c-4d4e-9a29-95e17593d0ac",
      "7380d951-d367-4607-a433-4e06fe732194",
      "67367877-2033-49cb-83e2-69d0a7ec86e1",
      "f1ba038f-bc6c-4323-86fa-04af2856d9af",
      "c4b707ec-c35c-4b58-885f-1ccb989782ff",
      "f8c241cb-78ea-4aa4-99b2-27a0b3434108",
      "dd8c668d-8f48-4e9f-a80c-3e8362c8caba",
      "73d067f1-9655-40fa-b6fd-0ed83d81a6cc",
      "c7d876a2-eb2a-4222-92d9-92d54e5895b5",
      "8ea8bbc5-4c8c-4264-a91d-a35b6eda0c41",
      "b2b82180-3b85-4325-b339-2285765bd26f",
      "c23515b3-c8e2-423c-b4ae-ab15b3fa1d28",
      "12a6ea30-7bc4-4bac-8d60-fe77f002768f",
      "41ed3bc3-3d95-4f65-be42-f3d507f78218",
      "b6a6e2cb-cda1-4146-966e-35b6232a175b",
      "b3f3ed0d-f786-4cb3-875c-784dc82515d1",
      "c5f44f9f-0fe6-4b0f-a33c-d61634f7022d",
      "ab4b3a3f-5a63-45a8-92c4-3958bf224aa2",
      "9ae03851-276b-4970-9bc5-72ce52fa00be"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550457040082,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550457040082,
    "parent_id": "0a7e7d49-fbc6-48a3-b125-26138aebe090",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Smart card send and receive"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040078,
        "id": "7aba3412-a39c-443c-b4a6-67cacd10ed06",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040078,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For connection, here is a snippet to help you understand:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For connection, here is a snippet to help you understand:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040080,
        "id": "899449e7-7789-40a4-a8ef-99600e58f107",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040080,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//Allows you to enumerate and communicate with connected USB devices.\nUsbManager mUsbManager = (UsbManager) getSystemService(Context.USB_SERVICE);\n//Explicitly asking for permission\nfinal String ACTION_USB_PERMISSION = \"com.android.example.USB_PERMISSION\";\nPendingIntent mPermissionIntent = PendingIntent.getBroadcast(this, 0, new Intent(ACTION_USB_PERMISSION), 0);\nHashMap\u003cString, UsbDevice\u003e deviceList = mUsbManager.getDeviceList();\n\nUsbDevice device = deviceList.get(\"//the device you want to work with\");\nif (device != null) {\n    mUsbManager.requestPermission(device, mPermissionIntent);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//Allows you to enumerate and communicate with connected USB devices.\nUsbManager mUsbManager = (UsbManager) getSystemService(Context.USB_SERVICE);\n//Explicitly asking for permission\nfinal String ACTION_USB_PERMISSION = \"com.android.example.USB_PERMISSION\";\nPendingIntent mPermissionIntent = PendingIntent.getBroadcast(this, 0, new Intent(ACTION_USB_PERMISSION), 0);\nHashMap\u003cString, UsbDevice\u003e deviceList = mUsbManager.getDeviceList();\n\nUsbDevice device = deviceList.get(\"//the device you want to work with\");\nif (device != null) {\n    mUsbManager.requestPermission(device, mPermissionIntent);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040081,
        "id": "b8980d43-f34c-4d4e-9a29-95e17593d0ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040081,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now you have to understand that in java the communication takes place using package javax.smarcard which is not available for Android so take a look here for getting an idea as to how you can communicate or send/receive APDU (smartcard command)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now you have to understand that in java the communication takes place using package javax.smarcard which is not available for Android so take a look here for getting an idea as to how you can communicate or send/receive APDU (smartcard command)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040081,
        "id": "7380d951-d367-4607-a433-4e06fe732194",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040081,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now as told in the answer mentioned above"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now as told in the answer mentioned above"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040081,
        "id": "67367877-2033-49cb-83e2-69d0a7ec86e1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040081,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You cannot simply send an APDU (smartcard command) over the bulk-out endpoint and expect to receive a response APDU over the bulk-in endpoint. For getting the endpoints see the code snippet below :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You cannot simply send an APDU (smartcard command) over the bulk-out endpoint and expect to receive a response APDU over the bulk-in endpoint. For getting the endpoints see the code snippet below :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040081,
        "id": "f1ba038f-bc6c-4323-86fa-04af2856d9af",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040081,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "UsbEndpoint epOut = null, epIn = null;\nUsbInterface usbInterface;\n\nUsbDeviceConnection connection = mUsbManager.openDevice(device);\n\n    for (int i = 0; i \u003c device.getInterfaceCount(); i++) {\n        usbInterface = device.getInterface(i);\n        connection.claimInterface(usbInterface, true);\n\n        for (int j = 0; j \u003c usbInterface.getEndpointCount(); j++) {\n            UsbEndpoint ep = usbInterface.getEndpoint(j);\n\n            if (ep.getType() == UsbConstants.USB_ENDPOINT_XFER_BULK) {\n                if (ep.getDirection() == UsbConstants.USB_DIR_OUT) {\n                    // from host to device\n                    epOut = ep;\n\n                } else if (ep.getDirection() == UsbConstants.USB_DIR_IN) {\n                    // from device to host\n                    epIn = ep;\n                }\n            }\n        }\n    }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "UsbEndpoint epOut = null, epIn = null;\nUsbInterface usbInterface;\n\nUsbDeviceConnection connection = mUsbManager.openDevice(device);\n\n    for (int i = 0; i \u003c device.getInterfaceCount(); i++) {\n        usbInterface = device.getInterface(i);\n        connection.claimInterface(usbInterface, true);\n\n        for (int j = 0; j \u003c usbInterface.getEndpointCount(); j++) {\n            UsbEndpoint ep = usbInterface.getEndpoint(j);\n\n            if (ep.getType() == UsbConstants.USB_ENDPOINT_XFER_BULK) {\n                if (ep.getDirection() == UsbConstants.USB_DIR_OUT) {\n                    // from host to device\n                    epOut = ep;\n\n                } else if (ep.getDirection() == UsbConstants.USB_DIR_IN) {\n                    // from device to host\n                    epIn = ep;\n                }\n            }\n        }\n    }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040081,
        "id": "c4b707ec-c35c-4b58-885f-1ccb989782ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040081,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now you have the bulk-in and bulk-out endpoints to send and receive APDU command and APDU response blocks:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now you have the bulk-in and bulk-out endpoints to send and receive APDU command and APDU response blocks:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040081,
        "id": "f8c241cb-78ea-4aa4-99b2-27a0b3434108",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040081,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For sending commands, see the code snippet below:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For sending commands, see the code snippet below:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040081,
        "id": "dd8c668d-8f48-4e9f-a80c-3e8362c8caba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040081,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public void write(UsbDeviceConnection connection, UsbEndpoint epOut, byte[] command) {\n    result = new StringBuilder();\n    connection.bulkTransfer(epOut, command, command.length, TIMEOUT);\n    //For Printing logs you can use result variable\n    for (byte bb : command) {\n        result.append(String.format(\" %02X \", bb));\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public void write(UsbDeviceConnection connection, UsbEndpoint epOut, byte[] command) {\n    result = new StringBuilder();\n    connection.bulkTransfer(epOut, command, command.length, TIMEOUT);\n    //For Printing logs you can use result variable\n    for (byte bb : command) {\n        result.append(String.format(\" %02X \", bb));\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040081,
        "id": "73d067f1-9655-40fa-b6fd-0ed83d81a6cc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040081,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And for receive/ read a response see the code snippet below :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And for receive/ read a response see the code snippet below :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040081,
        "id": "c7d876a2-eb2a-4222-92d9-92d54e5895b5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040081,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public int read(UsbDeviceConnection connection, UsbEndpoint epIn) {\nresult = new StringBuilder();\nfinal byte[] buffer = new byte[epIn.getMaxPacketSize()];\nint byteCount = 0;\nbyteCount = connection.bulkTransfer(epIn, buffer, buffer.length, TIMEOUT);\n\n//For Printing logs you can use result variable\nif (byteCount \u003e= 0) {\n    for (byte bb : buffer) {\n        result.append(String.format(\" %02X \", bb));\n    }\n\n    //Buffer received was : result.toString()\n} else {\n    //Something went wrong as count was : \" + byteCount\n}\n\nreturn byteCount;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public int read(UsbDeviceConnection connection, UsbEndpoint epIn) {\nresult = new StringBuilder();\nfinal byte[] buffer = new byte[epIn.getMaxPacketSize()];\nint byteCount = 0;\nbyteCount = connection.bulkTransfer(epIn, buffer, buffer.length, TIMEOUT);\n\n//For Printing logs you can use result variable\nif (byteCount \u003e= 0) {\n    for (byte bb : buffer) {\n        result.append(String.format(\" %02X \", bb));\n    }\n\n    //Buffer received was : result.toString()\n} else {\n    //Something went wrong as count was : \" + byteCount\n}\n\nreturn byteCount;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040081,
        "id": "8ea8bbc5-4c8c-4264-a91d-a35b6eda0c41",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040081,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now if you see this answer here the 1st command to be sent is :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now if you see this answer here the 1st command to be sent is :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040082,
        "id": "b2b82180-3b85-4325-b339-2285765bd26f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040082,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "PC_to_RDR_IccPowerOn command to activate the card."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "PC_to_RDR_IccPowerOn command to activate the card."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040082,
        "id": "c23515b3-c8e2-423c-b4ae-ab15b3fa1d28",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040082,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "which you can create by reading section 6.1.1 of the USB Device Class Specifications doc here."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "which you can create by reading section 6.1.1 of the USB Device Class Specifications doc here."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040082,
        "id": "12a6ea30-7bc4-4bac-8d60-fe77f002768f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040082,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now let’s take an example of this command like the one here: "
            ],
            [
              "62000000000000000000",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " How you can send this is :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now let’s take an example of this command like the one here: "
          },
          {
            "Text": "62000000000000000000",
            "AttrFlags": 2
          },
          {
            "Text": " How you can send this is :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040082,
        "id": "41ed3bc3-3d95-4f65-be42-f3d507f78218",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040082,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "write(connection, epOut, \"62000000000000000000\");"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "write(connection, epOut, \"62000000000000000000\");",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040082,
        "id": "b6a6e2cb-cda1-4146-966e-35b6232a175b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040082,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now after you have successfully sent the APDU command, you can read the response using :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now after you have successfully sent the APDU command, you can read the response using :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040082,
        "id": "b3f3ed0d-f786-4cb3-875c-784dc82515d1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040082,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "read(connection, epIn);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "read(connection, epIn);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040082,
        "id": "c5f44f9f-0fe6-4b0f-a33c-d61634f7022d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040082,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And receive something like"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And receive something like"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040082,
        "id": "ab4b3a3f-5a63-45a8-92c4-3958bf224aa2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040082,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "80 18000000 00 00 00 00 00 3BBF11008131FE45455041000000000000000000000000F1"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "80 18000000 00 00 00 00 00 3BBF11008131FE45455041000000000000000000000000F1",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550457040082,
        "id": "9ae03851-276b-4970-9bc5-72ce52fa00be",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550457040082,
        "parent_id": "d38d49ea-0bc6-43a1-9b7d-32f2da6e54e8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now the response received in the code here will be in the "
            ],
            [
              "result",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variable of "
            ],
            [
              "read()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method from code"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now the response received in the code here will be in the "
          },
          {
            "Text": "result",
            "AttrFlags": 2
          },
          {
            "Text": " variable of "
          },
          {
            "Text": "read()",
            "AttrFlags": 2
          },
          {
            "Text": " method from code"
          }
        ]
      }
    ],
    "title": "Smart card send and receive",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}