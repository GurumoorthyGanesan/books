{
  "ID": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
  "Root": {
    "alive": true,
    "content": [
      "641beada-c01b-4888-935a-9128ce560d06",
      "038e2b05-74c2-4c47-be34-aa0a990f80dc",
      "1c380479-a3f6-4ee3-bd8c-b8ef7e095344",
      "4a5f79e9-b0a4-450d-b603-27851cd5bc40",
      "031c41ab-7fe4-4f54-ae2d-5917ea61c50a",
      "254b82a2-8bf4-4983-a403-1dbe6894ca19",
      "6c3ad925-4faa-49a7-a024-8d08ccbf4f11",
      "11f6a801-5ce3-4f06-b693-0c05f150c0ae",
      "a5e20da3-c654-4cda-bb8c-fbbe35548c0b",
      "b0f1da32-ea41-4143-b0d8-fb73b320a67b",
      "39508274-a78e-4f61-bc59-879013f1abb0",
      "969f87bd-7163-45a0-9cb8-fa25ab4848d6",
      "a3a85200-7ed3-4c5b-b105-a8268c10fde7",
      "b61f4065-b8b4-4eb8-ae5b-71a92e81c2a2",
      "744e99e8-38e8-4970-9d0b-65c11c3d99aa",
      "f764fc12-bddf-43a4-aa47-a59a3df5f6c6",
      "ab4d6004-5f2e-433d-bb86-055b950d91d6",
      "670bcc5d-be17-48d3-9106-4773fba34e07",
      "cd25b826-ee8a-4196-8e74-9c06f24541d3",
      "36ec8f7a-b31b-4d6b-8165-dedc2d1d1101",
      "d1de7473-525e-43c2-b9c8-b75e315ee099",
      "d80f17a8-ab9e-415d-b635-aac9b144076c",
      "2f4eac73-e608-4715-9633-936bbf97ca20",
      "48da10ac-bb67-4021-b503-f3fc72c7c18c",
      "cd84b09a-3a14-4a70-8f0a-54634be9c9c7",
      "b11bac71-1089-4173-9ec0-2fdf6ecca518",
      "a4b5451e-149e-4fe6-91c3-8d1d0caef1ab",
      "78f7b287-a821-4c9e-8ea7-1db24e838469",
      "df86ba28-51c7-440b-8402-33997a3e3987",
      "f9aea648-c91f-41e2-bd61-320b43da592c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550448243966,
    "id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550448243966,
    "parent_id": "c78edde1-b73e-43d7-ab97-ddf82241f21f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "030 Basic Usage"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243959,
        "id": "641beada-c01b-4888-935a-9128ce560d06",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243959,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Setting up an instance"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Setting up an instance"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243962,
        "id": "038e2b05-74c2-4c47-be34-aa0a990f80dc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243962,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To use Realm you first need to obtain an instance of it. Each Realm instance maps to a file on disk. The most basic way to get an instance is as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To use Realm you first need to obtain an instance of it. Each Realm instance maps to a file on disk. The most basic way to get an instance is as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243962,
        "id": "1c380479-a3f6-4ee3-bd8c-b8ef7e095344",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243962,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Create configuration\nRealmConfiguration realmConfiguration = new RealmConfiguration.Builder(context).build();\n\n// Obtain realm instance\nRealm realm = Realm.getInstance(realmConfiguration);\n// or\nRealm.setDefaultConfiguration(realmConfiguration);\nRealm realm = Realm.getDefaultInstance();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Create configuration\nRealmConfiguration realmConfiguration = new RealmConfiguration.Builder(context).build();\n\n// Obtain realm instance\nRealm realm = Realm.getInstance(realmConfiguration);\n// or\nRealm.setDefaultConfiguration(realmConfiguration);\nRealm realm = Realm.getDefaultInstance();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243962,
        "id": "4a5f79e9-b0a4-450d-b603-27851cd5bc40",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243962,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The method "
            ],
            [
              "Realm.getInstance()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " creates the database file if it has not been created, otherwise opens the file. The "
            ],
            [
              "RealmConfiguration",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object controls all aspects of how a Realm is created - whether it’s an "
            ],
            [
              "inMemory()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " database, name of the Realm file, if the Realm should be cleared if a migration is needed, initial data, etc."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The method "
          },
          {
            "Text": "Realm.getInstance()",
            "AttrFlags": 2
          },
          {
            "Text": " creates the database file if it has not been created, otherwise opens the file. The "
          },
          {
            "Text": "RealmConfiguration",
            "AttrFlags": 2
          },
          {
            "Text": " object controls all aspects of how a Realm is created - whether it’s an "
          },
          {
            "Text": "inMemory()",
            "AttrFlags": 2
          },
          {
            "Text": " database, name of the Realm file, if the Realm should be cleared if a migration is needed, initial data, etc."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243962,
        "id": "031c41ab-7fe4-4f54-ae2d-5917ea61c50a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243962,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Please note that calls to "
            ],
            [
              "Realm.getInstance()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are reference counted (each call increments a counter), and the counter is decremented when "
            ],
            [
              "realm.close()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is called."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Please note that calls to "
          },
          {
            "Text": "Realm.getInstance()",
            "AttrFlags": 2
          },
          {
            "Text": " are reference counted (each call increments a counter), and the counter is decremented when "
          },
          {
            "Text": "realm.close()",
            "AttrFlags": 2
          },
          {
            "Text": " is called."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243962,
        "id": "254b82a2-8bf4-4983-a403-1dbe6894ca19",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243962,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Closing an instance"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Closing an instance"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243963,
        "id": "6c3ad925-4faa-49a7-a024-8d08ccbf4f11",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243963,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "On background threads, it’s "
            ],
            [
              "very important",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "close",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " the Realm instance(s) once it’s no longer used (for example, transaction is complete and the thread execution ends). Failure to close all Realm instances on background thread results in version pinning, and can cause a large growth in file size."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "On background threads, it’s "
          },
          {
            "Text": "very important",
            "AttrFlags": 4
          },
          {
            "Text": " to "
          },
          {
            "Text": "close",
            "AttrFlags": 5
          },
          {
            "Text": " the Realm instance(s) once it’s no longer used (for example, transaction is complete and the thread execution ends). Failure to close all Realm instances on background thread results in version pinning, and can cause a large growth in file size."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243963,
        "id": "11f6a801-5ce3-4f06-b693-0c05f150c0ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243963,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Runnable runnable = new Runnable() {\n    Realm realm = null;\n    try {\n        realm = Realm.getDefaultInstance();\n        // ...\n    } finally {\n        if(realm != null) {\n            realm.close();\n        }\n    }\n};\n\nnew Thread(runnable).start(); // background thread, like `doInBackground()` of AsyncTask"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Runnable runnable = new Runnable() {\n    Realm realm = null;\n    try {\n        realm = Realm.getDefaultInstance();\n        // ...\n    } finally {\n        if(realm != null) {\n            realm.close();\n        }\n    }\n};\n\nnew Thread(runnable).start(); // background thread, like `doInBackground()` of AsyncTask",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243963,
        "id": "a5e20da3-c654-4cda-bb8c-fbbe35548c0b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243963,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It’s worth noting that above API Level 19, you can replace this code with just this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It’s worth noting that above API Level 19, you can replace this code with just this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243963,
        "id": "b0f1da32-ea41-4143-b0d8-fb73b320a67b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243963,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "try(Realm realm = Realm.getDefaultInstance()) {\n    // ...\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "try(Realm realm = Realm.getDefaultInstance()) {\n    // ...\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243963,
        "id": "39508274-a78e-4f61-bc59-879013f1abb0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243963,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Models"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Models"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243963,
        "id": "969f87bd-7163-45a0-9cb8-fa25ab4848d6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243963,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Next step would be creating your models. Here a question might be asked, “what is a model?”. A model is a structure which defines properties of an object being stored in the database. For example, in the following we model a book."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Next step would be creating your models. Here a question might be asked, “what is a model?”. A model is a structure which defines properties of an object being stored in the database. For example, in the following we model a book."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243963,
        "id": "a3a85200-7ed3-4c5b-b105-a8268c10fde7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243963,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Book extends RealmObject {\n \n    // Primary key of this entity\n    @PrimaryKey\n    private long id;\n \n    private String title;\n\n    @Index // faster queries\n    private String author;\n \n    // Standard getters \u0026 setter\n    public long getId() {\n        return id;\n    }\n \n    public void setId(long id) {\n        this.id = id;\n    }\n \n    public String getTitle() {\n        return title;\n    }\n \n    public void setTitle(String title) {\n        this.title = title;\n    }\n \n    public String getAuthor() {\n        return author;\n    }\n \n    public void setAuthor(String author) {\n        this.author = author;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Book extends RealmObject {\n \n    // Primary key of this entity\n    @PrimaryKey\n    private long id;\n \n    private String title;\n\n    @Index // faster queries\n    private String author;\n \n    // Standard getters \u0026 setter\n    public long getId() {\n        return id;\n    }\n \n    public void setId(long id) {\n        this.id = id;\n    }\n \n    public String getTitle() {\n        return title;\n    }\n \n    public void setTitle(String title) {\n        this.title = title;\n    }\n \n    public String getAuthor() {\n        return author;\n    }\n \n    public void setAuthor(String author) {\n        this.author = author;\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243963,
        "id": "b61f4065-b8b4-4eb8-ae5b-71a92e81c2a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243963,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that your models should extend RealmObject class. Primary key is also specified by "
            ],
            [
              "@PrimaryKey",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " annotation. Primary keys can be null, but only one element can have "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as a primary key. Also you can use the "
            ],
            [
              "@Ignore",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " annotation for the fields that should not be persisted to the disk:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that your models should extend RealmObject class. Primary key is also specified by "
          },
          {
            "Text": "@PrimaryKey",
            "AttrFlags": 2
          },
          {
            "Text": " annotation. Primary keys can be null, but only one element can have "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": " as a primary key. Also you can use the "
          },
          {
            "Text": "@Ignore",
            "AttrFlags": 2
          },
          {
            "Text": " annotation for the fields that should not be persisted to the disk:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243964,
        "id": "744e99e8-38e8-4970-9d0b-65c11c3d99aa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243964,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@Ignore\nprivate String isbn;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@Ignore\nprivate String isbn;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243964,
        "id": "f764fc12-bddf-43a4-aa47-a59a3df5f6c6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243964,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Inserting or updating data"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Inserting or updating data"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243964,
        "id": "ab4d6004-5f2e-433d-bb86-055b950d91d6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243964,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In order to store a book object to your Realm database instance, you can first create an instance of your model and then store it to the database via "
            ],
            [
              "copyToRealm",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method. For creating or updating you can use "
            ],
            [
              "copyToRealmOrUpdate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". (A faster alternative is the newly added "
            ],
            [
              "insertOrUpdate()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In order to store a book object to your Realm database instance, you can first create an instance of your model and then store it to the database via "
          },
          {
            "Text": "copyToRealm",
            "AttrFlags": 2
          },
          {
            "Text": " method. For creating or updating you can use "
          },
          {
            "Text": "copyToRealmOrUpdate",
            "AttrFlags": 2
          },
          {
            "Text": ". (A faster alternative is the newly added "
          },
          {
            "Text": "insertOrUpdate()",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243964,
        "id": "670bcc5d-be17-48d3-9106-4773fba34e07",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243964,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Creating an instance of the model\nBook book = new Book();\nbook.setId(1);\nbook.setTitle(\"Walking on air\");\nbook.setAuthor(\"Taylor Swift\")\n\n// Store to the database\nrealm.executeTransaction(new Realm.Transaction() {\n    @Override\n    public void execute(Realm realm) {\n        realm.insertOrUpdate(book);\n    }\n});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Creating an instance of the model\nBook book = new Book();\nbook.setId(1);\nbook.setTitle(\"Walking on air\");\nbook.setAuthor(\"Taylor Swift\")\n\n// Store to the database\nrealm.executeTransaction(new Realm.Transaction() {\n    @Override\n    public void execute(Realm realm) {\n        realm.insertOrUpdate(book);\n    }\n});",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243964,
        "id": "cd25b826-ee8a-4196-8e74-9c06f24541d3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243964,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that all changes to data must happen in a transaction. Another way to create an object is using the following pattern:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that all changes to data must happen in a transaction. Another way to create an object is using the following pattern:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243964,
        "id": "36ec8f7a-b31b-4d6b-8165-dedc2d1d1101",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243964,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Book book = realm.createObject(Book.class, primaryKey);\n..."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Book book = realm.createObject(Book.class, primaryKey);\n...",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243964,
        "id": "d1de7473-525e-43c2-b9c8-b75e315ee099",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243964,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Querying the database"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Querying the database"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243965,
        "id": "d80f17a8-ab9e-415d-b635-aac9b144076c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243965,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All books:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "All books:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243965,
        "id": "2f4eac73-e608-4715-9633-936bbf97ca20",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243965,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "RealmResults\u003cBook\u003e results = realm.where(Book.class).findAll();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "RealmResults\u003cBook\u003e results = realm.where(Book.class).findAll();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243965,
        "id": "48da10ac-bb67-4021-b503-f3fc72c7c18c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243965,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All books having id greater than 10:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "All books having id greater than 10:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243965,
        "id": "cd84b09a-3a14-4a70-8f0a-54634be9c9c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243965,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "RealmResults\u003cBook\u003e results = realm.where(Book.class)\n                                  .greaterThan(\"id\", 10)\n                                  .findAll();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "RealmResults\u003cBook\u003e results = realm.where(Book.class)\n                                  .greaterThan(\"id\", 10)\n                                  .findAll();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243965,
        "id": "b11bac71-1089-4173-9ec0-2fdf6ecca518",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243965,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Books by "
            ],
            [
              "'Taylor Swift'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "'%Peter%'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Books by "
          },
          {
            "Text": "'Taylor Swift'",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "'%Peter%'",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243965,
        "id": "a4b5451e-149e-4fe6-91c3-8d1d0caef1ab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243965,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "RealmResults\u003cBook\u003e results = realm.where(Book.class)\n                                  .beginGroup()\n                                      .equalTo(\"author\", \"Taylor Swift\")\n                                      .or()\n                                      .contains(\"author\", \"Peter\")\n                                  .endGroup().findAll();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "RealmResults\u003cBook\u003e results = realm.where(Book.class)\n                                  .beginGroup()\n                                      .equalTo(\"author\", \"Taylor Swift\")\n                                      .or()\n                                      .contains(\"author\", \"Peter\")\n                                  .endGroup().findAll();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243966,
        "id": "78f7b287-a821-4c9e-8ea7-1db24e838469",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243966,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Deleting an object"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Deleting an object"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243966,
        "id": "df86ba28-51c7-440b-8402-33997a3e3987",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243966,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example, we want to delete all books by Taylor Swift:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example, we want to delete all books by Taylor Swift:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448243966,
        "id": "f9aea648-c91f-41e2-bd61-320b43da592c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448243966,
        "parent_id": "c0b3ce72-1548-4f9f-9fc4-c040d5dfc790",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Start of transaction\nrealm.executeTransaction(new Realm.Transaction() {\n    @Override\n    public void execute(Realm realm) {\n        // First Step: Query all Taylor Swift books\n        RealmResults\u003cBook\u003e results = ...\n        \n        // Second Step: Delete elements in Realm\n        results.deleteAllFromRealm();\n    }\n});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Start of transaction\nrealm.executeTransaction(new Realm.Transaction() {\n    @Override\n    public void execute(Realm realm) {\n        // First Step: Query all Taylor Swift books\n        RealmResults\u003cBook\u003e results = ...\n        \n        // Second Step: Delete elements in Realm\n        results.deleteAllFromRealm();\n    }\n});",
        "code_language": "Plain Text"
      }
    ],
    "title": "030 Basic Usage"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}