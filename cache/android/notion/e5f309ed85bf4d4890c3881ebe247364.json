{
  "ID": "e5f309ed-85bf-4d48-90c3-881ebe247364",
  "Root": {
    "alive": true,
    "content": [
      "cfb5571e-3d42-428d-830b-b6164eef4fbf"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550450990959,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e5f309ed-85bf-4d48-90c3-881ebe247364",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550450990959,
    "parent_id": "830c8731-8c33-4c19-ae58-4b8ff19d4cc7",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Shake Detector in Android Example"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550450990956,
        "id": "cfb5571e-3d42-428d-830b-b6164eef4fbf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550450990956,
        "parent_id": "e5f309ed-85bf-4d48-90c3-881ebe247364",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class ShakeDetector implements SensorEventListener {\n \n\n    private static final float SHAKE_THRESHOLD_GRAVITY = 2.7F;\n    private static final int SHAKE_SLOP_TIME_MS = 500;\n    private static final int SHAKE_COUNT_RESET_TIME_MS = 3000;\n \n    private OnShakeListener mListener;\n    private long mShakeTimestamp;\n    private int mShakeCount;\n \n    public void setOnShakeListener(OnShakeListener listener) {\n        this.mListener = listener;\n    }\n \n    public interface OnShakeListener {\n        public void onShake(int count);\n    }\n \n    @Override\n    public void onAccuracyChanged(Sensor sensor, int accuracy) {\n        // ignore\n    }\n \n    @Override\n    public void onSensorChanged(SensorEvent event) {\n \n        if (mListener != null) {\n            float x = event.values[0];\n            float y = event.values[1];\n            float z = event.values[2];\n \n            float gX = x / SensorManager.GRAVITY_EARTH;\n            float gY = y / SensorManager.GRAVITY_EARTH;\n            float gZ = z / SensorManager.GRAVITY_EARTH;\n \n            // gForce will be close to 1 when there is no movement.\n            float gForce = FloatMath.sqrt(gX * gX + gY * gY + gZ * gZ);\n \n            if (gForce \u003e SHAKE_THRESHOLD_GRAVITY) {\n                final long now = System.currentTimeMillis();\n                // ignore shake events too close to each other (500ms)\n                if (mShakeTimestamp + SHAKE_SLOP_TIME_MS \u003e now) {\n                    return;\n                }\n \n                // reset the shake count after 3 seconds of no shakes\n                if (mShakeTimestamp + SHAKE_COUNT_RESET_TIME_MS \u003c now) {\n                    mShakeCount = 0;\n                }\n \n                mShakeTimestamp = now;\n                mShakeCount++;\n \n                mListener.onShake(mShakeCount);\n            }\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class ShakeDetector implements SensorEventListener {\n \n\n    private static final float SHAKE_THRESHOLD_GRAVITY = 2.7F;\n    private static final int SHAKE_SLOP_TIME_MS = 500;\n    private static final int SHAKE_COUNT_RESET_TIME_MS = 3000;\n \n    private OnShakeListener mListener;\n    private long mShakeTimestamp;\n    private int mShakeCount;\n \n    public void setOnShakeListener(OnShakeListener listener) {\n        this.mListener = listener;\n    }\n \n    public interface OnShakeListener {\n        public void onShake(int count);\n    }\n \n    @Override\n    public void onAccuracyChanged(Sensor sensor, int accuracy) {\n        // ignore\n    }\n \n    @Override\n    public void onSensorChanged(SensorEvent event) {\n \n        if (mListener != null) {\n            float x = event.values[0];\n            float y = event.values[1];\n            float z = event.values[2];\n \n            float gX = x / SensorManager.GRAVITY_EARTH;\n            float gY = y / SensorManager.GRAVITY_EARTH;\n            float gZ = z / SensorManager.GRAVITY_EARTH;\n \n            // gForce will be close to 1 when there is no movement.\n            float gForce = FloatMath.sqrt(gX * gX + gY * gY + gZ * gZ);\n \n            if (gForce \u003e SHAKE_THRESHOLD_GRAVITY) {\n                final long now = System.currentTimeMillis();\n                // ignore shake events too close to each other (500ms)\n                if (mShakeTimestamp + SHAKE_SLOP_TIME_MS \u003e now) {\n                    return;\n                }\n \n                // reset the shake count after 3 seconds of no shakes\n                if (mShakeTimestamp + SHAKE_COUNT_RESET_TIME_MS \u003c now) {\n                    mShakeCount = 0;\n                }\n \n                mShakeTimestamp = now;\n                mShakeCount++;\n \n                mListener.onShake(mShakeCount);\n            }\n        }\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Shake Detector in Android Example",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}