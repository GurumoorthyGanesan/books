{
  "ID": "99fb59c3-9b88-4cbe-b3ce-0038a0824926",
  "Root": {
    "alive": true,
    "content": [
      "3ed25743-7619-4536-beff-534f338ef936",
      "19cbb41e-275b-4ee1-8f70-4de935df41e0",
      "dad51e08-2a75-445b-9793-e71bae74dba7",
      "f34d2496-9456-43bb-8e3c-8dd8453dde02"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550444729452,
    "id": "99fb59c3-9b88-4cbe-b3ce-0038a0824926",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550444729452,
    "parent_id": "e851dd0d-078a-4cf4-b0e2-4fb9a34577ba",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "060 Obtaining the SH1-Fingerprint of your certificate keystore file"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550444729450,
        "id": "3ed25743-7619-4536-beff-534f338ef936",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550444729450,
        "parent_id": "99fb59c3-9b88-4cbe-b3ce-0038a0824926",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In order to obtain a Google Maps API key for your certificate, you must provide the API console with the SH1-fingerprint of your debug/release keystore."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In order to obtain a Google Maps API key for your certificate, you must provide the API console with the SH1-fingerprint of your debug/release keystore."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550444729452,
        "id": "19cbb41e-275b-4ee1-8f70-4de935df41e0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550444729452,
        "parent_id": "99fb59c3-9b88-4cbe-b3ce-0038a0824926",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can obtain the keystore by using the "
            ],
            [
              "JDK’s keytool",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " program as described "
            ],
            [
              "here",
              [
                [
                  "a",
                  "https://developers.google.com/maps/documentation/android-api/signup"
                ]
              ]
            ],
            [
              " in the docs."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can obtain the keystore by using the "
          },
          {
            "Text": "JDK’s keytool",
            "AttrFlags": 1
          },
          {
            "Text": " program as described "
          },
          {
            "Text": "here",
            "Link": "https://developers.google.com/maps/documentation/android-api/signup"
          },
          {
            "Text": " in the docs."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550444729452,
        "id": "dad51e08-2a75-445b-9793-e71bae74dba7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550444729452,
        "parent_id": "99fb59c3-9b88-4cbe-b3ce-0038a0824926",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another approach is to obtain the fingerprint programmatically by running this snippet with your app signed with the debug/release certificate and printing the hash to the log."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another approach is to obtain the fingerprint programmatically by running this snippet with your app signed with the debug/release certificate and printing the hash to the log."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550444729452,
        "id": "f34d2496-9456-43bb-8e3c-8dd8453dde02",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550444729452,
        "parent_id": "99fb59c3-9b88-4cbe-b3ce-0038a0824926",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "PackageInfo info;\ntry {\n    info = getPackageManager().getPackageInfo(\"com.package.name\", PackageManager.GET_SIGNATURES);\n    for (Signature signature : info.signatures) {\n        MessageDigest md;\n        md = MessageDigest.getInstance(\"SHA\");\n        md.update(signature.toByteArray());\n        String hash= new String(Base64.encode(md.digest(), 0));\n        Log.e(\"hash\", hash);\n    }\n} catch (NameNotFoundException e1) {\n    Log.e(\"name not found\", e1.toString());\n} catch (NoSuchAlgorithmException e) {\n    Log.e(\"no such an algorithm\", e.toString());\n} catch (Exception e) {\n    Log.e(\"exception\", e.toString());\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "PackageInfo info;\ntry {\n    info = getPackageManager().getPackageInfo(\"com.package.name\", PackageManager.GET_SIGNATURES);\n    for (Signature signature : info.signatures) {\n        MessageDigest md;\n        md = MessageDigest.getInstance(\"SHA\");\n        md.update(signature.toByteArray());\n        String hash= new String(Base64.encode(md.digest(), 0));\n        Log.e(\"hash\", hash);\n    }\n} catch (NameNotFoundException e1) {\n    Log.e(\"name not found\", e1.toString());\n} catch (NoSuchAlgorithmException e) {\n    Log.e(\"no such an algorithm\", e.toString());\n} catch (Exception e) {\n    Log.e(\"exception\", e.toString());\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "060 Obtaining the SH1-Fingerprint of your certificate keystore file"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}