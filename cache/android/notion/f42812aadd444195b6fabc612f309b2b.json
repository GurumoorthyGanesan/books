{
  "ID": "f42812aa-dd44-4195-b6fa-bc612f309b2b",
  "Root": {
    "alive": true,
    "content": [
      "2f913ab7-d714-418a-b735-81ff737cf88a",
      "46a04705-2782-463b-b93a-5648c653bbb4",
      "3801a196-90f3-4d76-836c-f396e988baff",
      "7e9266f7-0dad-4307-b955-ba27a643671a",
      "ef329c16-634a-48f0-996f-baecb180b68d",
      "18a9db01-b912-4e62-a3bc-0f8b11653c22"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550451299379,
    "id": "f42812aa-dd44-4195-b6fa-bc612f309b2b",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550451299379,
    "parent_id": "68e828c6-f314-441c-b64a-ba28f0d1cc35",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Take photo"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451299376,
        "id": "2f913ab7-d714-418a-b735-81ff737cf88a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451299376,
        "parent_id": "f42812aa-dd44-4195-b6fa-bc612f309b2b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Add a permission to access the camera to the AndroidManifest file:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Add a permission to access the camera to the AndroidManifest file:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451299378,
        "id": "46a04705-2782-463b-b93a-5648c653bbb4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451299378,
        "parent_id": "f42812aa-dd44-4195-b6fa-bc612f309b2b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003cuses-permission android:name=\"android.permission.CAMERA\"\u003e\u003c/uses-permission\u003e  \n\u003cuses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" /\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003cuses-permission android:name=\"android.permission.CAMERA\"\u003e\u003c/uses-permission\u003e  \n\u003cuses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" /\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451299379,
        "id": "3801a196-90f3-4d76-836c-f396e988baff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451299379,
        "parent_id": "f42812aa-dd44-4195-b6fa-bc612f309b2b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Xml file :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Xml file :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451299379,
        "id": "7e9266f7-0dad-4307-b955-ba27a643671a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451299379,
        "parent_id": "f42812aa-dd44-4195-b6fa-bc612f309b2b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n\u003cLinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"fill_parent\"\n    \u003e\n\u003cSurfaceView android:id=\"@+id/surfaceView\" android:layout_height=\"0dip\" android:layout_width=\"0dip\"\u003e\u003c/SurfaceView\u003e\n\u003cImageView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:id=\"@+id/imageView\"\u003e\u003c/ImageView\u003e\n\u003c/LinearLayout\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n\u003cLinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"fill_parent\"\n    \u003e\n\u003cSurfaceView android:id=\"@+id/surfaceView\" android:layout_height=\"0dip\" android:layout_width=\"0dip\"\u003e\u003c/SurfaceView\u003e\n\u003cImageView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:id=\"@+id/imageView\"\u003e\u003c/ImageView\u003e\n\u003c/LinearLayout\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451299379,
        "id": "ef329c16-634a-48f0-996f-baecb180b68d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451299379,
        "parent_id": "f42812aa-dd44-4195-b6fa-bc612f309b2b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Activity"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Activity"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451299379,
        "id": "18a9db01-b912-4e62-a3bc-0f8b11653c22",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451299379,
        "parent_id": "f42812aa-dd44-4195-b6fa-bc612f309b2b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import java.io.IOException;  \n  \nimport android.app.Activity;  \nimport android.graphics.Bitmap;  \nimport android.graphics.BitmapFactory;  \nimport android.hardware.Camera;  \nimport android.hardware.Camera.Parameters;  \nimport android.os.Bundle;  \nimport android.view.SurfaceHolder;  \nimport android.view.SurfaceView;  \nimport android.widget.ImageView;  \n  \npublic class TakePicture extends Activity implements SurfaceHolder.Callback  \n{  \n    //a variable to store a reference to the Image View at the main.xml file  \n    private ImageView iv_image;  \n    //a variable to store a reference to the Surface View at the main.xml file  \n    private SurfaceView sv;  \n  \n    //a bitmap to display the captured image  \n    private Bitmap bmp;  \n  \n    //Camera variables  \n    //a surface holder  \n    private SurfaceHolder sHolder;  \n    //a variable to control the camera  \n    private Camera mCamera;  \n    //the camera parameters  \n    private Parameters parameters;  \n  \n    /** Called when the activity is first created. */  \n    @Override  \n    public void onCreate(Bundle savedInstanceState)  \n    {  \n        super.onCreate(savedInstanceState);  \n        setContentView(R.layout.main);  \n  \n        //get the Image View at the main.xml file  \n        iv_image = (ImageView) findViewById(R.id.imageView);  \n  \n        //get the Surface View at the main.xml file  \n        sv = (SurfaceView) findViewById(R.id.surfaceView);  \n  \n        //Get a surface  \n        sHolder = sv.getHolder();  \n  \n        //add the callback interface methods defined below as the Surface View callbacks  \n        sHolder.addCallback(this);  \n  \n        //tells Android that this surface will have its data constantly replaced  \n        sHolder.setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);  \n    }  \n  \n    @Override  \n    public void surfaceChanged(SurfaceHolder arg0, int arg1, int arg2, int arg3)  \n    {  \n         //get camera parameters  \n         parameters = mCamera.getParameters();  \n  \n         //set camera parameters  \n         mCamera.setParameters(parameters);  \n         mCamera.startPreview();  \n  \n         //sets what code should be executed after the picture is taken  \n         Camera.PictureCallback mCall = new Camera.PictureCallback()  \n         {  \n             @Override  \n             public void onPictureTaken(byte[] data, Camera camera)  \n             {  \n                 //decode the data obtained by the camera into a Bitmap  \n                 bmp = BitmapFactory.decodeByteArray(data, 0, data.length);  \n                String filename=Environment.getExternalStorageDirectory()\n                                + File.separator + \"testimage.jpg\";\n                FileOutputStream out = null;\n                try {\n                    out = new FileOutputStream(filename);\n                    bmp.compress(Bitmap.CompressFormat.PNG, 100, out); // bmp is your Bitmap instance\n                    // PNG is a lossless format, the compression factor (100) is ignored\n                } catch (Exception e) {\n                    e.printStackTrace();\n                } finally {\n                    try {\n                        if (out != null) {\n                            out.close();\n                        }\n                    } catch (IOException e) {\n                        e.printStackTrace();\n                    }\n                }\n                 //set the iv_image  \n                 iv_image.setImageBitmap(bmp);  \n             }  \n         };  \n  \n         mCamera.takePicture(null, null, mCall);  \n    }  \n  \n    @Override  \n    public void surfaceCreated(SurfaceHolder holder)  \n    {  \n        // The Surface has been created, acquire the camera and tell it where  \n        // to draw the preview.  \n        mCamera = Camera.open();  \n        try {  \n           mCamera.setPreviewDisplay(holder);  \n  \n        } catch (IOException exception) {  \n            mCamera.release();  \n            mCamera = null;  \n        }  \n    }  \n  \n    @Override  \n    public void surfaceDestroyed(SurfaceHolder holder)  \n    {  \n        //stop the preview  \n        mCamera.stopPreview();  \n        //release the camera  \n        mCamera.release();  \n        //unbind the camera from this object  \n        mCamera = null;  \n    }  \n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import java.io.IOException;  \n  \nimport android.app.Activity;  \nimport android.graphics.Bitmap;  \nimport android.graphics.BitmapFactory;  \nimport android.hardware.Camera;  \nimport android.hardware.Camera.Parameters;  \nimport android.os.Bundle;  \nimport android.view.SurfaceHolder;  \nimport android.view.SurfaceView;  \nimport android.widget.ImageView;  \n  \npublic class TakePicture extends Activity implements SurfaceHolder.Callback  \n{  \n    //a variable to store a reference to the Image View at the main.xml file  \n    private ImageView iv_image;  \n    //a variable to store a reference to the Surface View at the main.xml file  \n    private SurfaceView sv;  \n  \n    //a bitmap to display the captured image  \n    private Bitmap bmp;  \n  \n    //Camera variables  \n    //a surface holder  \n    private SurfaceHolder sHolder;  \n    //a variable to control the camera  \n    private Camera mCamera;  \n    //the camera parameters  \n    private Parameters parameters;  \n  \n    /** Called when the activity is first created. */  \n    @Override  \n    public void onCreate(Bundle savedInstanceState)  \n    {  \n        super.onCreate(savedInstanceState);  \n        setContentView(R.layout.main);  \n  \n        //get the Image View at the main.xml file  \n        iv_image = (ImageView) findViewById(R.id.imageView);  \n  \n        //get the Surface View at the main.xml file  \n        sv = (SurfaceView) findViewById(R.id.surfaceView);  \n  \n        //Get a surface  \n        sHolder = sv.getHolder();  \n  \n        //add the callback interface methods defined below as the Surface View callbacks  \n        sHolder.addCallback(this);  \n  \n        //tells Android that this surface will have its data constantly replaced  \n        sHolder.setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);  \n    }  \n  \n    @Override  \n    public void surfaceChanged(SurfaceHolder arg0, int arg1, int arg2, int arg3)  \n    {  \n         //get camera parameters  \n         parameters = mCamera.getParameters();  \n  \n         //set camera parameters  \n         mCamera.setParameters(parameters);  \n         mCamera.startPreview();  \n  \n         //sets what code should be executed after the picture is taken  \n         Camera.PictureCallback mCall = new Camera.PictureCallback()  \n         {  \n             @Override  \n             public void onPictureTaken(byte[] data, Camera camera)  \n             {  \n                 //decode the data obtained by the camera into a Bitmap  \n                 bmp = BitmapFactory.decodeByteArray(data, 0, data.length);  \n                String filename=Environment.getExternalStorageDirectory()\n                                + File.separator + \"testimage.jpg\";\n                FileOutputStream out = null;\n                try {\n                    out = new FileOutputStream(filename);\n                    bmp.compress(Bitmap.CompressFormat.PNG, 100, out); // bmp is your Bitmap instance\n                    // PNG is a lossless format, the compression factor (100) is ignored\n                } catch (Exception e) {\n                    e.printStackTrace();\n                } finally {\n                    try {\n                        if (out != null) {\n                            out.close();\n                        }\n                    } catch (IOException e) {\n                        e.printStackTrace();\n                    }\n                }\n                 //set the iv_image  \n                 iv_image.setImageBitmap(bmp);  \n             }  \n         };  \n  \n         mCamera.takePicture(null, null, mCall);  \n    }  \n  \n    @Override  \n    public void surfaceCreated(SurfaceHolder holder)  \n    {  \n        // The Surface has been created, acquire the camera and tell it where  \n        // to draw the preview.  \n        mCamera = Camera.open();  \n        try {  \n           mCamera.setPreviewDisplay(holder);  \n  \n        } catch (IOException exception) {  \n            mCamera.release();  \n            mCamera = null;  \n        }  \n    }  \n  \n    @Override  \n    public void surfaceDestroyed(SurfaceHolder holder)  \n    {  \n        //stop the preview  \n        mCamera.stopPreview();  \n        //release the camera  \n        mCamera.release();  \n        //unbind the camera from this object  \n        mCamera = null;  \n    }  \n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "020 Take photo"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}