{
  "ID": "e1487d93-fc1a-43c7-8e21-6748f973c4cd",
  "Root": {
    "alive": true,
    "content": [
      "749a9b61-0d00-441e-bd59-32033ed341cd"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550453104368,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e1487d93-fc1a-43c7-8e21-6748f973c4cd",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551734705083,
    "parent_id": "d0f4d361-3ebe-433f-8d61-aa782fae1629",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Activity extending YouTubeBaseActivity"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550453104365,
        "id": "749a9b61-0d00-441e-bd59-32033ed341cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550453104365,
        "parent_id": "e1487d93-fc1a-43c7-8e21-6748f973c4cd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class CustomYouTubeActivity extends YouTubeBaseActivity implements YouTubePlayer.OnInitializedListener, YouTubePlayer.PlayerStateChangeListener {\n\n    private YouTubePlayerView mPlayerView;\n    private YouTubePlayer mYouTubePlayer;\n    private String mVideoId = \"B08iLAtS3AQ\";\n    private String mApiKey;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        mApiKey = Config.YOUTUBE_API_KEY;\n        mPlayerView = new YouTubePlayerView(this);\n        mPlayerView.initialize(mApiKey, this); // setting up OnInitializedListener\n        addContentView(mPlayerView, new LayoutParams(LayoutParams.MATCH_PARENT,\n                LayoutParams.MATCH_PARENT)); //show it in full screen\n    }\n\n    //Called when initialization of the player succeeds.\n    @Override\n    public void onInitializationSuccess(YouTubePlayer.Provider provider,\n                                        YouTubePlayer player,\n                                        boolean wasRestored) {\n\n        player.setPlayerStateChangeListener(this); // setting up the player state change listener\n        this.mYouTubePlayer = player;\n        if (!wasRestored)\n            player.cueVideo(mVideoId);\n    }\n\n        @Override\n    public void onInitializationFailure(YouTubePlayer.Provider provider,\n                                        YouTubeInitializationResult errorReason) {\n\n        Toast.makeText(this, \"Error While initializing\", Toast.LENGTH_LONG).show();\n    }\n\n    @Override\n    public void onAdStarted() {\n    }\n\n    @Override\n    public void onLoaded(String videoId) { //video has been loaded\n        if(!TextUtils.isEmpty(mVideoId) \u0026\u0026 !this.isFinishing() \u0026\u0026 mYouTubePlayer != null)\n            mYouTubePlayer.play(); // if we dont call play then video will not auto play, but user still has the option to play via play button\n    }\n\n    @Override\n    public void onLoading() {\n    }\n\n    @Override\n    public void onVideoEnded() {\n    }\n\n    @Override\n    public void onVideoStarted() {\n\n    }\n\n    @Override\n    public void onError(ErrorReason reason) {\n        Log.e(\"onError\", \"onError : \" + reason.name());\n    }\n\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class CustomYouTubeActivity extends YouTubeBaseActivity implements YouTubePlayer.OnInitializedListener, YouTubePlayer.PlayerStateChangeListener {\n\n    private YouTubePlayerView mPlayerView;\n    private YouTubePlayer mYouTubePlayer;\n    private String mVideoId = \"B08iLAtS3AQ\";\n    private String mApiKey;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        mApiKey = Config.YOUTUBE_API_KEY;\n        mPlayerView = new YouTubePlayerView(this);\n        mPlayerView.initialize(mApiKey, this); // setting up OnInitializedListener\n        addContentView(mPlayerView, new LayoutParams(LayoutParams.MATCH_PARENT,\n                LayoutParams.MATCH_PARENT)); //show it in full screen\n    }\n\n    //Called when initialization of the player succeeds.\n    @Override\n    public void onInitializationSuccess(YouTubePlayer.Provider provider,\n                                        YouTubePlayer player,\n                                        boolean wasRestored) {\n\n        player.setPlayerStateChangeListener(this); // setting up the player state change listener\n        this.mYouTubePlayer = player;\n        if (!wasRestored)\n            player.cueVideo(mVideoId);\n    }\n\n        @Override\n    public void onInitializationFailure(YouTubePlayer.Provider provider,\n                                        YouTubeInitializationResult errorReason) {\n\n        Toast.makeText(this, \"Error While initializing\", Toast.LENGTH_LONG).show();\n    }\n\n    @Override\n    public void onAdStarted() {\n    }\n\n    @Override\n    public void onLoaded(String videoId) { //video has been loaded\n        if(!TextUtils.isEmpty(mVideoId) \u0026\u0026 !this.isFinishing() \u0026\u0026 mYouTubePlayer != null)\n            mYouTubePlayer.play(); // if we dont call play then video will not auto play, but user still has the option to play via play button\n    }\n\n    @Override\n    public void onLoading() {\n    }\n\n    @Override\n    public void onVideoEnded() {\n    }\n\n    @Override\n    public void onVideoStarted() {\n\n    }\n\n    @Override\n    public void onError(ErrorReason reason) {\n        Log.e(\"onError\", \"onError : \" + reason.name());\n    }\n\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Activity extending YouTubeBaseActivity",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}