{
  "ID": "eefde3a8-7785-4aca-be3d-441771a25681",
  "Root": {
    "alive": true,
    "content": [
      "8869b418-7577-4a06-b3c3-cfa67ef2a891",
      "2e6b9d47-8bb5-43fd-81b3-a05a7c7147b5",
      "490121bd-75c5-4688-a362-6a95488fad09",
      "dfabd00b-aee2-4171-9150-a46842156872",
      "baff3ba9-4ac5-4305-b880-11677d1eef6c",
      "dfd83e18-3c3e-4b84-b8f9-441a60e9063d",
      "fe48d2e2-760d-4327-a247-ca7f3d2da60d",
      "6d9fe28c-3acc-424f-9f5c-4fd94172df9a",
      "f017f064-469a-4f65-8ad3-aca82c5edc33",
      "7c158828-61cd-49da-ad9d-ee8dcd22636f",
      "4586736c-340f-41d4-80f3-3ecf11492d08",
      "c8ee7012-b5cf-4693-874c-3cb2c77d9863",
      "12e54c17-2b47-4bc4-8d43-2152be7baa53",
      "2d0b3b4b-93db-4679-87ef-002028b2d2a2",
      "10cea4fd-e1c3-4933-b0ec-d20e36eae4d0",
      "cdc4e6d2-79af-4293-8f8f-863be929b96d",
      "3cbcd3ac-42f0-41dd-817a-7defe6078533",
      "21458a27-21c5-4d7b-a77d-488813c636e6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550445437851,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "eefde3a8-7785-4aca-be3d-441771a25681",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550445437851,
    "parent_id": "621f346c-f9c6-4d5c-8e6e-6106d643fcce",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Creating a compound view"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445437848,
        "id": "8869b418-7577-4a06-b3c3-cfa67ef2a891",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445437848,
        "parent_id": "eefde3a8-7785-4aca-be3d-441771a25681",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A "
            ],
            [
              "compound view",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " is a custom "
            ],
            [
              "ViewGroup",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that’s treated as a single view by the surrounding program code. Such a ViewGroup can be really useful in "
            ],
            [
              "DDD",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Domain-driven_design"
                ]
              ]
            ],
            [
              "-like design, because it can correspond to an aggregate, in this example, a Contact. It can be reused everywhere that contact is displayed."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A "
          },
          {
            "Text": "compound view",
            "AttrFlags": 1
          },
          {
            "Text": " is a custom "
          },
          {
            "Text": "ViewGroup",
            "AttrFlags": 2
          },
          {
            "Text": " that’s treated as a single view by the surrounding program code. Such a ViewGroup can be really useful in "
          },
          {
            "Text": "DDD",
            "Link": "https://en.wikipedia.org/wiki/Domain-driven_design"
          },
          {
            "Text": "-like design, because it can correspond to an aggregate, in this example, a Contact. It can be reused everywhere that contact is displayed."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445437849,
        "id": "2e6b9d47-8bb5-43fd-81b3-a05a7c7147b5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445437849,
        "parent_id": "eefde3a8-7785-4aca-be3d-441771a25681",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This means that the surrounding controller code, an Activity, Fragment or Adapter, can simply pass the data object to the view without picking it apart into a number of different UI widgets."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This means that the surrounding controller code, an Activity, Fragment or Adapter, can simply pass the data object to the view without picking it apart into a number of different UI widgets."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445437849,
        "id": "490121bd-75c5-4688-a362-6a95488fad09",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445437849,
        "parent_id": "eefde3a8-7785-4aca-be3d-441771a25681",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This facilitates code reuse and makes for a better design according to "
            ],
            [
              "SOLID priciples",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This facilitates code reuse and makes for a better design according to "
          },
          {
            "Text": "SOLID priciples",
            "Link": "https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445437849,
        "id": "dfabd00b-aee2-4171-9150-a46842156872",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445437849,
        "parent_id": "eefde3a8-7785-4aca-be3d-441771a25681",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The layout XML",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The layout XML",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445437849,
        "id": "baff3ba9-4ac5-4305-b880-11677d1eef6c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445437849,
        "parent_id": "eefde3a8-7785-4aca-be3d-441771a25681",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is usually where you start. You have an existing bit of XML that you find yourself reusing, perhaps as an "
            ],
            [
              "\u003cinclude/\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Extract it into a separate XML file and wrap the root tag in a "
            ],
            [
              "\u003cmerge\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " element:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is usually where you start. You have an existing bit of XML that you find yourself reusing, perhaps as an "
          },
          {
            "Text": "\u003cinclude/\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ". Extract it into a separate XML file and wrap the root tag in a "
          },
          {
            "Text": "\u003cmerge\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " element:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445437849,
        "id": "dfd83e18-3c3e-4b84-b8f9-441a60e9063d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445437849,
        "parent_id": "eefde3a8-7785-4aca-be3d-441771a25681",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n\u003cmerge xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\u003e\n\n        \u003cImageView\n            android:id=\"@+id/photo\"\n            android:layout_width=\"48dp\"\n            android:layout_height=\"48dp\"\n            android:layout_alignParentRight=\"true\" /\u003e\n\n        \u003cTextView\n            android:id=\"@+id/name\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_toLeftOf=\"@id/photo\" /\u003e\n\n        \u003cTextView\n            android:id=\"@+id/phone_number\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_below=\"@id/name\"\n            android:layout_toLeftOf=\"@id/photo\" /\u003e\n\u003c/merge\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n\u003cmerge xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\u003e\n\n        \u003cImageView\n            android:id=\"@+id/photo\"\n            android:layout_width=\"48dp\"\n            android:layout_height=\"48dp\"\n            android:layout_alignParentRight=\"true\" /\u003e\n\n        \u003cTextView\n            android:id=\"@+id/name\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_toLeftOf=\"@id/photo\" /\u003e\n\n        \u003cTextView\n            android:id=\"@+id/phone_number\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_below=\"@id/name\"\n            android:layout_toLeftOf=\"@id/photo\" /\u003e\n\u003c/merge\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445437850,
        "id": "fe48d2e2-760d-4327-a247-ca7f3d2da60d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445437850,
        "parent_id": "eefde3a8-7785-4aca-be3d-441771a25681",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This XML file keeps working in the Layout Editor in Android Studio perfectly fine. You can treat it like any other layout."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This XML file keeps working in the Layout Editor in Android Studio perfectly fine. You can treat it like any other layout."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445437850,
        "id": "6d9fe28c-3acc-424f-9f5c-4fd94172df9a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445437850,
        "parent_id": "eefde3a8-7785-4aca-be3d-441771a25681",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The compound ViewGroup",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The compound ViewGroup",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445437850,
        "id": "f017f064-469a-4f65-8ad3-aca82c5edc33",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445437850,
        "parent_id": "eefde3a8-7785-4aca-be3d-441771a25681",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Once you have the XML file, create the custom view group."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Once you have the XML file, create the custom view group."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445437850,
        "id": "7c158828-61cd-49da-ad9d-ee8dcd22636f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445437850,
        "parent_id": "eefde3a8-7785-4aca-be3d-441771a25681",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import android.annotation.TargetApi;\nimport android.content.Context;\nimport android.os.Build;\nimport android.util.AttributeSet;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.widget.RelativeLayout;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\nimport myapp.R;\n\n/**\n * A compound view to show contacts.\n *\n * This class can be put into an XML layout or instantiated programmatically, it\n * will work correctly either way.\n */\npublic class ContactView extends RelativeLayout {\n\n    // This class extends RelativeLayout because that comes with an automatic\n    // (MATCH_PARENT, MATCH_PARENT) layout for its child item. You can extend\n    // the raw android.view.ViewGroup class if you want more control. See the\n    // note in the layout XML why you wouldn't want to extend a complex view\n    // such as RelativeLayout.\n\n    // 1. Implement superclass constructors.\n    public ContactView(Context context) {\n        super(context);\n        init(context, null);\n    }\n\n    // two extra constructors left out to keep the example shorter\n\n    @TargetApi(Build.VERSION_CODES.LOLLIPOP)\n    public ContactView(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {\n        super(context, attrs, defStyleAttr, defStyleRes);\n        init(context, attrs);\n    }\n\n    // 2. Initialize the view by inflating an XML using `this` as parent\n    private TextView mName;\n    private TextView mPhoneNumber;\n    private ImageView mPhoto;\n\n    private void init(Context context, AttributeSet attrs) {\n        LayoutInflater.from(context).inflate(R.layout.contact_view, this, true);\n        mName = (TextView) findViewById(R.id.name);\n        mPhoneNumber = (TextView) findViewById(R.id.phone_number);\n        mPhoto = (ImageView) findViewById(R.id.photo);\n    }\n\n    // 3. Define a setter that's expressed in your domain model. This is what the example is\n    //    all about. All controller code can just invoke this setter instead of fiddling with\n    //    lots of strings, visibility options, colors, animations, etc. If you don't use a\n    //    custom view, this code will usually end up in a static helper method (bad) or copies \n    //    of this code will be copy-pasted all over the place (worse).\n    public void setContact(Contact contact) {\n        mName.setText(contact.getName());\n        mPhoneNumber.setText(contact.getPhoneNumber());\n        if (contact.hasPhoto()) {\n            mPhoto.setVisibility(View.VISIBLE);\n            mPhoto.setImageBitmap(contact.getPhoto());\n        } else {\n            mPhoto.setVisibility(View.GONE);\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import android.annotation.TargetApi;\nimport android.content.Context;\nimport android.os.Build;\nimport android.util.AttributeSet;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.widget.RelativeLayout;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\nimport myapp.R;\n\n/**\n * A compound view to show contacts.\n *\n * This class can be put into an XML layout or instantiated programmatically, it\n * will work correctly either way.\n */\npublic class ContactView extends RelativeLayout {\n\n    // This class extends RelativeLayout because that comes with an automatic\n    // (MATCH_PARENT, MATCH_PARENT) layout for its child item. You can extend\n    // the raw android.view.ViewGroup class if you want more control. See the\n    // note in the layout XML why you wouldn't want to extend a complex view\n    // such as RelativeLayout.\n\n    // 1. Implement superclass constructors.\n    public ContactView(Context context) {\n        super(context);\n        init(context, null);\n    }\n\n    // two extra constructors left out to keep the example shorter\n\n    @TargetApi(Build.VERSION_CODES.LOLLIPOP)\n    public ContactView(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {\n        super(context, attrs, defStyleAttr, defStyleRes);\n        init(context, attrs);\n    }\n\n    // 2. Initialize the view by inflating an XML using `this` as parent\n    private TextView mName;\n    private TextView mPhoneNumber;\n    private ImageView mPhoto;\n\n    private void init(Context context, AttributeSet attrs) {\n        LayoutInflater.from(context).inflate(R.layout.contact_view, this, true);\n        mName = (TextView) findViewById(R.id.name);\n        mPhoneNumber = (TextView) findViewById(R.id.phone_number);\n        mPhoto = (ImageView) findViewById(R.id.photo);\n    }\n\n    // 3. Define a setter that's expressed in your domain model. This is what the example is\n    //    all about. All controller code can just invoke this setter instead of fiddling with\n    //    lots of strings, visibility options, colors, animations, etc. If you don't use a\n    //    custom view, this code will usually end up in a static helper method (bad) or copies \n    //    of this code will be copy-pasted all over the place (worse).\n    public void setContact(Contact contact) {\n        mName.setText(contact.getName());\n        mPhoneNumber.setText(contact.getPhoneNumber());\n        if (contact.hasPhoto()) {\n            mPhoto.setVisibility(View.VISIBLE);\n            mPhoto.setImageBitmap(contact.getPhoto());\n        } else {\n            mPhoto.setVisibility(View.GONE);\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445437850,
        "id": "4586736c-340f-41d4-80f3-3ecf11492d08",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445437850,
        "parent_id": "eefde3a8-7785-4aca-be3d-441771a25681",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "init(Context, AttributeSet)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method is where you would read any custom XML attributes as explained in "
            ],
            [
              "Adding Attributes to Views",
              [
                [
                  "a",
                  "https://stackoverflow.com/documentation/android/1446/creating-custom-views/4726/adding-attributes-to-views#t=201607212055553085582"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "init(Context, AttributeSet)",
            "AttrFlags": 2
          },
          {
            "Text": " method is where you would read any custom XML attributes as explained in "
          },
          {
            "Text": "Adding Attributes to Views",
            "Link": "https://stackoverflow.com/documentation/android/1446/creating-custom-views/4726/adding-attributes-to-views#t=201607212055553085582"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445437850,
        "id": "c8ee7012-b5cf-4693-874c-3cb2c77d9863",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445437850,
        "parent_id": "eefde3a8-7785-4aca-be3d-441771a25681",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With these pieces in place, you can use it in your app."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With these pieces in place, you can use it in your app."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445437850,
        "id": "12e54c17-2b47-4bc4-8d43-2152be7baa53",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445437850,
        "parent_id": "eefde3a8-7785-4aca-be3d-441771a25681",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Usage in XML",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Usage in XML",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445437851,
        "id": "2d0b3b4b-93db-4679-87ef-002028b2d2a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445437851,
        "parent_id": "eefde3a8-7785-4aca-be3d-441771a25681",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here’s an example "
            ],
            [
              "fragment_contact_info.xml",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that illustrates how you’d put a single ContactView on top of a list of messages:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here’s an example "
          },
          {
            "Text": "fragment_contact_info.xml",
            "AttrFlags": 2
          },
          {
            "Text": " that illustrates how you’d put a single ContactView on top of a list of messages:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445437851,
        "id": "10cea4fd-e1c3-4933-b0ec-d20e36eae4d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445437851,
        "parent_id": "eefde3a8-7785-4aca-be3d-441771a25681",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003cLinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\u003e\n\n    \u003c!-- The compound view becomes like any other view XML element --\u003e\n    \u003cmyapp.ContactView\n        android:id=\"@+id/contact\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"/\u003e\n\n    \u003candroid.support.v7.widget.RecyclerView\n        android:id=\"@+id/message_list\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:layout_weight=\"1\"/\u003e\n\n\u003c/LinearLayout\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003cLinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\u003e\n\n    \u003c!-- The compound view becomes like any other view XML element --\u003e\n    \u003cmyapp.ContactView\n        android:id=\"@+id/contact\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"/\u003e\n\n    \u003candroid.support.v7.widget.RecyclerView\n        android:id=\"@+id/message_list\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:layout_weight=\"1\"/\u003e\n\n\u003c/LinearLayout\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445437851,
        "id": "cdc4e6d2-79af-4293-8f8f-863be929b96d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445437851,
        "parent_id": "eefde3a8-7785-4aca-be3d-441771a25681",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Usage in Code",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Usage in Code",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445437851,
        "id": "3cbcd3ac-42f0-41dd-817a-7defe6078533",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445437851,
        "parent_id": "eefde3a8-7785-4aca-be3d-441771a25681",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here’s an example "
            ],
            [
              "RecyclerView.Adapter",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that shows a list of contacts. This example illustrates just how much cleaner the controller code gets when it’s completely free of View manipulation."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here’s an example "
          },
          {
            "Text": "RecyclerView.Adapter",
            "AttrFlags": 2
          },
          {
            "Text": " that shows a list of contacts. This example illustrates just how much cleaner the controller code gets when it’s completely free of View manipulation."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550445437851,
        "id": "21458a27-21c5-4d7b-a77d-488813c636e6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550445437851,
        "parent_id": "eefde3a8-7785-4aca-be3d-441771a25681",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "package myapp;\n\nimport android.content.Context;\nimport android.support.v7.widget.RecyclerView;\nimport android.view.ViewGroup;\n\npublic class ContactsAdapter extends RecyclerView.Adapter\u003cContactsViewHolder\u003e {\n\n    private final Context context;\n\n    public ContactsAdapter(final Context context) {\n        this.context = context;\n    }\n\n    @Override\n    public ContactsViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        ContactView v = new ContactView(context); // \u003c--- this\n        return new ContactsViewHolder(v);\n    }\n\n    @Override\n    public void onBindViewHolder(ContactsViewHolder holder, int position) {\n        Contact contact = this.getItem(position);\n        holder.setContact(contact);  // \u003c--- this\n    }\n\n    static class ContactsViewHolder extends RecyclerView.ViewHolder {\n\n        public ContactsViewHolder(ContactView itemView) {\n            super(itemView);\n        }\n\n        public void setContact(Contact contact) {\n            ((ContactView) itemView).setContact(contact); // \u003c--- this\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "package myapp;\n\nimport android.content.Context;\nimport android.support.v7.widget.RecyclerView;\nimport android.view.ViewGroup;\n\npublic class ContactsAdapter extends RecyclerView.Adapter\u003cContactsViewHolder\u003e {\n\n    private final Context context;\n\n    public ContactsAdapter(final Context context) {\n        this.context = context;\n    }\n\n    @Override\n    public ContactsViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        ContactView v = new ContactView(context); // \u003c--- this\n        return new ContactsViewHolder(v);\n    }\n\n    @Override\n    public void onBindViewHolder(ContactsViewHolder holder, int position) {\n        Contact contact = this.getItem(position);\n        holder.setContact(contact);  // \u003c--- this\n    }\n\n    static class ContactsViewHolder extends RecyclerView.ViewHolder {\n\n        public ContactsViewHolder(ContactView itemView) {\n            super(itemView);\n        }\n\n        public void setContact(Contact contact) {\n            ((ContactView) itemView).setContact(contact); // \u003c--- this\n        }\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Creating a compound view",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}