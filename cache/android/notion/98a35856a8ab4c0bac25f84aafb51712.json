{
  "ID": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
  "Root": {
    "alive": true,
    "content": [
      "1bdd91cc-847f-4ae1-9108-b45741e6f5c8",
      "acf4e6dc-1e86-47b6-9fe7-2d59fdfade68",
      "49ee0a76-7d83-403a-a93e-2fee964d66af",
      "e95685ca-7b76-4b0a-91bd-98311015120a",
      "7143987d-c654-49bc-9e52-1650e566ebdb",
      "5d8cc46f-728e-4328-9e7c-ca190551f467",
      "ed4083be-d2e4-4f9c-8a83-e26dae34112e",
      "f02aeea7-5b46-4ddf-a6c0-4892fe68cb8e",
      "d8fc941b-bbb6-48c4-a5c2-96aecdce9817",
      "c32f8242-8fa0-4f4a-9024-2f6cf1ee12c3",
      "04095165-7e5c-4c43-bf3e-49fd2af2c6d7",
      "21471132-fc46-4e52-8da1-bacecc1d58db",
      "83860396-d28b-4a98-9430-e8f64ca6df44",
      "2e9c9eec-406f-43c5-8111-641bcd230d6a",
      "ec66e6d7-0ff3-42cd-814f-70698992ad6a",
      "ed0843ab-f383-453e-8bb8-20dd174b9d0e",
      "89521cff-ba8f-4b4d-a4ac-89f63935f3cd",
      "d02331ac-5b0d-4398-bb3f-12c6f09103e7",
      "8c91811d-b2d1-4e4e-a74d-6e41f1580c1f",
      "9abe8ebd-2fea-46bd-933e-7a489083e2ee",
      "63698064-ccfa-4be8-ae75-015d9074b540",
      "bfa16168-b06e-4d34-82a8-9217e83c2373",
      "11bdece3-22f8-4097-bac6-6bb674921a48"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550452950027,
    "id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550452950027,
    "parent_id": "fdb69422-5411-4296-b9d8-962b4d7831c2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 How to vary between child and parent view group touch events"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950022,
        "id": "1bdd91cc-847f-4ae1-9108-b45741e6f5c8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950022,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "onTouchEvents()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for nested view groups can be managed by the "
            ],
            [
              "boolean",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "onInterceptTouchEvent",
              [
                [
                  "a",
                  "http://developer.android.com/reference/android/view/ViewGroup.html#onInterceptTouchEvent(android.view.MotionEvent)"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "onTouchEvents()",
            "AttrFlags": 2
          },
          {
            "Text": " for nested view groups can be managed by the "
          },
          {
            "Text": "boolean",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "onInterceptTouchEvent",
            "Link": "http://developer.android.com/reference/android/view/ViewGroup.html#onInterceptTouchEvent(android.view.MotionEvent)"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950022,
        "id": "acf4e6dc-1e86-47b6-9fe7-2d59fdfade68",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950022,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The default value for the "
            ],
            [
              "OnInterceptTouchEvent",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is false."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The default value for the "
          },
          {
            "Text": "OnInterceptTouchEvent",
            "AttrFlags": 2
          },
          {
            "Text": " is false."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950023,
        "id": "49ee0a76-7d83-403a-a93e-2fee964d66af",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950023,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The parent’s "
            ],
            [
              "onTouchEvent",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is received before the child’s. If the "
            ],
            [
              "OnInterceptTouchEvent",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns false, it sends the motion event down the chain to the child’s "
            ],
            [
              "OnTouchEvent",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " handler. If it returns true the parent’s will handle the touch event."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The parent’s "
          },
          {
            "Text": "onTouchEvent",
            "AttrFlags": 2
          },
          {
            "Text": " is received before the child’s. If the "
          },
          {
            "Text": "OnInterceptTouchEvent",
            "AttrFlags": 2
          },
          {
            "Text": " returns false, it sends the motion event down the chain to the child’s "
          },
          {
            "Text": "OnTouchEvent",
            "AttrFlags": 2
          },
          {
            "Text": " handler. If it returns true the parent’s will handle the touch event."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950023,
        "id": "e95685ca-7b76-4b0a-91bd-98311015120a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950023,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However there may be instances when we want some child elements to manage "
            ],
            [
              "OnTouchEvent",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s and some to be managed by the parent view (or possibly the parent of the parent)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However there may be instances when we want some child elements to manage "
          },
          {
            "Text": "OnTouchEvent",
            "AttrFlags": 2
          },
          {
            "Text": "s and some to be managed by the parent view (or possibly the parent of the parent)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950023,
        "id": "7143987d-c654-49bc-9e52-1650e566ebdb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950023,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This can be managed in more than one way."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This can be managed in more than one way."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950024,
        "id": "5d8cc46f-728e-4328-9e7c-ca190551f467",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950024,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One way a child element can be protected from the parent’s "
            ],
            [
              "OnInterceptTouchEvent",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is by implementing the "
            ],
            [
              "requestDisallowInterceptTouchEvent",
              [
                [
                  "a",
                  "http://developer.android.com/reference/android/view/ViewGroup.html#requestDisallowInterceptTouchEvent(boolean)"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "One way a child element can be protected from the parent’s "
          },
          {
            "Text": "OnInterceptTouchEvent",
            "AttrFlags": 2
          },
          {
            "Text": " is by implementing the "
          },
          {
            "Text": "requestDisallowInterceptTouchEvent",
            "Link": "http://developer.android.com/reference/android/view/ViewGroup.html#requestDisallowInterceptTouchEvent(boolean)"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950024,
        "id": "ed4083be-d2e4-4f9c-8a83-e26dae34112e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950024,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "public void requestDisallowInterceptTouchEvent (boolean disallowIntercept)"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "public void requestDisallowInterceptTouchEvent (boolean disallowIntercept)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950024,
        "id": "f02aeea7-5b46-4ddf-a6c0-4892fe68cb8e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950024,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This prevents any of the parent views from managing the "
            ],
            [
              "OnTouchEvent",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for this element, if the element has event handlers enabled."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This prevents any of the parent views from managing the "
          },
          {
            "Text": "OnTouchEvent",
            "AttrFlags": 2
          },
          {
            "Text": " for this element, if the element has event handlers enabled."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950024,
        "id": "d8fc941b-bbb6-48c4-a5c2-96aecdce9817",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950024,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "type": "numbered_list",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950024,
        "id": "c32f8242-8fa0-4f4a-9024-2f6cf1ee12c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950024,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the "
            ],
            [
              "OnInterceptTouchEvent",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is false, the child element’s "
            ],
            [
              "OnTouchEvent",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be evaluated. If you have a methods within the child elements handling the various touch events, any related event handlers that are disabled will return the OnTouchEvent to the parent."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the "
          },
          {
            "Text": "OnInterceptTouchEvent",
            "AttrFlags": 2
          },
          {
            "Text": " is false, the child element’s "
          },
          {
            "Text": "OnTouchEvent",
            "AttrFlags": 2
          },
          {
            "Text": " will be evaluated. If you have a methods within the child elements handling the various touch events, any related event handlers that are disabled will return the OnTouchEvent to the parent."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950025,
        "id": "04095165-7e5c-4c43-bf3e-49fd2af2c6d7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950025,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This answer:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This answer:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950025,
        "id": "21471132-fc46-4e52-8da1-bacecc1d58db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950025,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A visualisation of how the propagation of touch events passes through:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A visualisation of how the propagation of touch events passes through:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950025,
        "id": "83860396-d28b-4a98-9430-e8f64ca6df44",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950025,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "parent -\u003e child|parent -\u003e child|parent -\u003e child views.",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "parent -\u003e child|parent -\u003e child|parent -\u003e child views.",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950025,
        "id": "2e9c9eec-406f-43c5-8111-641bcd230d6a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950025,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Courtesy from here",
              [
                [
                  "a",
                  "http://stackoverflow.com/a/13540006/3956566"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Courtesy from here",
            "Link": "http://stackoverflow.com/a/13540006/3956566"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950025,
        "id": "ec66e6d7-0ff3-42cd-814f-70698992ad6a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950025,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "http://i.stack.imgur.com/unTyh.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "http://i.stack.imgur.com/unTyh.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.sohttp:%2F%2Fi.stack.imgur.com%2FunTyh.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950026,
        "id": "ed0843ab-f383-453e-8bb8-20dd174b9d0e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950026,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another way is returning varying values from the "
            ],
            [
              "OnInterceptTouchEvent",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for the parent."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another way is returning varying values from the "
          },
          {
            "Text": "OnInterceptTouchEvent",
            "AttrFlags": 2
          },
          {
            "Text": " for the parent."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950026,
        "id": "89521cff-ba8f-4b4d-a4ac-89f63935f3cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950026,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example taken from "
            ],
            [
              "Managing Touch Events in a ViewGroup",
              [
                [
                  "a",
                  "http://developer.android.com/training/gestures/viewgroup.html"
                ]
              ]
            ],
            [
              " and demonstrates how to intercept the child’s "
            ],
            [
              "OnTouchEvent",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when the user is scrolling."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example taken from "
          },
          {
            "Text": "Managing Touch Events in a ViewGroup",
            "Link": "http://developer.android.com/training/gestures/viewgroup.html"
          },
          {
            "Text": " and demonstrates how to intercept the child’s "
          },
          {
            "Text": "OnTouchEvent",
            "AttrFlags": 2
          },
          {
            "Text": " when the user is scrolling."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950026,
        "id": "d02331ac-5b0d-4398-bb3f-12c6f09103e7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950026,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "4a."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "4a."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950026,
        "id": "8c91811d-b2d1-4e4e-a74d-6e41f1580c1f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950026,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@Override\npublic boolean onInterceptTouchEvent(MotionEvent ev) {\n    /*\n     * This method JUST determines whether we want to intercept the motion.\n     * If we return true, onTouchEvent will be called and we do the actual\n     * scrolling there.\n     */"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@Override\npublic boolean onInterceptTouchEvent(MotionEvent ev) {\n    /*\n     * This method JUST determines whether we want to intercept the motion.\n     * If we return true, onTouchEvent will be called and we do the actual\n     * scrolling there.\n     */",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950026,
        "id": "9abe8ebd-2fea-46bd-933e-7a489083e2ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950026,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "final int action = MotionEventCompat.getActionMasked(ev);\n\n// Always handle the case of the touch gesture being complete.\nif (action == MotionEvent.ACTION_CANCEL || action == MotionEvent.ACTION_UP) {\n    // Release the scroll.\n    mIsScrolling = false;\n    return false; // Do not intercept touch event, let the child handle it\n}\n\nswitch (action) {\n    case MotionEvent.ACTION_MOVE: {\n        if (mIsScrolling) {\n            // We're currently scrolling, so yes, intercept the \n            // touch event!\n            return true;\n        }\n\n        // If the user has dragged her finger horizontally more than \n        // the touch slop, start the scroll\n\n        // left as an exercise for the reader\n        final int xDiff = calculateDistanceX(ev); \n\n        // Touch slop should be calculated using ViewConfiguration \n        // constants.\n        if (xDiff \u003e mTouchSlop) { \n            // Start scrolling!\n            mIsScrolling = true;\n            return true;\n        }\n        break;\n    }\n    ...\n}\n\n// In general, we don't want to intercept touch events. They should be \n// handled by the child view.\nreturn false;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "final int action = MotionEventCompat.getActionMasked(ev);\n\n// Always handle the case of the touch gesture being complete.\nif (action == MotionEvent.ACTION_CANCEL || action == MotionEvent.ACTION_UP) {\n    // Release the scroll.\n    mIsScrolling = false;\n    return false; // Do not intercept touch event, let the child handle it\n}\n\nswitch (action) {\n    case MotionEvent.ACTION_MOVE: {\n        if (mIsScrolling) {\n            // We're currently scrolling, so yes, intercept the \n            // touch event!\n            return true;\n        }\n\n        // If the user has dragged her finger horizontally more than \n        // the touch slop, start the scroll\n\n        // left as an exercise for the reader\n        final int xDiff = calculateDistanceX(ev); \n\n        // Touch slop should be calculated using ViewConfiguration \n        // constants.\n        if (xDiff \u003e mTouchSlop) { \n            // Start scrolling!\n            mIsScrolling = true;\n            return true;\n        }\n        break;\n    }\n    ...\n}\n\n// In general, we don't want to intercept touch events. They should be \n// handled by the child view.\nreturn false;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950027,
        "id": "63698064-ccfa-4be8-ae75-015d9074b540",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950027,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is some code from the same link showing how to create the parameters of the rectangle around your element:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is some code from the same link showing how to create the parameters of the rectangle around your element:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950027,
        "id": "bfa16168-b06e-4d34-82a8-9217e83c2373",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950027,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "4b."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "4b."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452950027,
        "id": "11bdece3-22f8-4097-bac6-6bb674921a48",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452950027,
        "parent_id": "98a35856-a8ab-4c0b-ac25-f84aafb51712",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// The hit rectangle for the ImageButton\nmyButton.getHitRect(delegateArea);\n        \n// Extend the touch area of the ImageButton beyond its bounds\n// on the right and bottom.\ndelegateArea.right += 100;\ndelegateArea.bottom += 100;\n        \n// Instantiate a TouchDelegate.\n// \"delegateArea\" is the bounds in local coordinates of \n// the containing view to be mapped to the delegate view.\n// \"myButton\" is the child view that should receive motion\n// events.\nTouchDelegate touchDelegate = new TouchDelegate(delegateArea, myButton);\n \n// Sets the TouchDelegate on the parent view, such that touches \n// within the touch delegate bounds are routed to the child.\nif (View.class.isInstance(myButton.getParent())) {\n    ((View) myButton.getParent()).setTouchDelegate(touchDelegate);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// The hit rectangle for the ImageButton\nmyButton.getHitRect(delegateArea);\n        \n// Extend the touch area of the ImageButton beyond its bounds\n// on the right and bottom.\ndelegateArea.right += 100;\ndelegateArea.bottom += 100;\n        \n// Instantiate a TouchDelegate.\n// \"delegateArea\" is the bounds in local coordinates of \n// the containing view to be mapped to the delegate view.\n// \"myButton\" is the child view that should receive motion\n// events.\nTouchDelegate touchDelegate = new TouchDelegate(delegateArea, myButton);\n \n// Sets the TouchDelegate on the parent view, such that touches \n// within the touch delegate bounds are routed to the child.\nif (View.class.isInstance(myButton.getParent())) {\n    ((View) myButton.getParent()).setTouchDelegate(touchDelegate);\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "010 How to vary between child and parent view group touch events"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}