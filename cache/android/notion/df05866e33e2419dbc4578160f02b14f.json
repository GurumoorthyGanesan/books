{
  "ID": "df05866e-33e2-419d-bc45-78160f02b14f",
  "Root": {
    "alive": true,
    "content": [
      "b5f1a47a-cacf-4067-8b27-333d617b236d",
      "e78a092c-41b0-488b-98b3-b9a974504332",
      "2fc38228-6699-4b16-a5b7-abc61cb57f00",
      "25a1e9f1-128f-40ee-8756-4daff36191bf"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550451198461,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "df05866e-33e2-419d-bc45-78160f02b14f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550451198461,
    "parent_id": "a52e40c1-3556-4e99-a114-0488389ebe90",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "MLRoundedImageView.java"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451198458,
        "id": "b5f1a47a-cacf-4067-8b27-333d617b236d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451198458,
        "parent_id": "df05866e-33e2-419d-bc45-78160f02b14f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Copy and Paste following class in your package:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Copy and Paste following class in your package:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451198461,
        "id": "e78a092c-41b0-488b-98b3-b9a974504332",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451198461,
        "parent_id": "df05866e-33e2-419d-bc45-78160f02b14f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class MLRoundedImageView extends ImageView {\n\n    public MLRoundedImageView(Context context) {\n        super(context);\n    }\n\n    public MLRoundedImageView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    public MLRoundedImageView(Context context, AttributeSet attrs, int defStyle) {\n        super(context, attrs, defStyle);\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n\n        Drawable drawable = getDrawable();\n\n        if (drawable == null) {\n            return;\n        }\n\n        if (getWidth() == 0 || getHeight() == 0) {\n            return;\n        }\n        Bitmap b = ((BitmapDrawable) drawable).getBitmap();\n        Bitmap bitmap = b.copy(Bitmap.Config.ARGB_8888, true);\n\n        int w = getWidth(), h = getHeight();\n\n        Bitmap roundBitmap = getCroppedBitmap(bitmap, w);\n        canvas.drawBitmap(roundBitmap, 0, 0, null);\n\n    }\n\n    public static Bitmap getCroppedBitmap(Bitmap bmp, int radius) {\n        Bitmap sbmp;\n        \n        if (bmp.getWidth() != radius || bmp.getHeight() != radius) {\n            float smallest = Math.min(bmp.getWidth(), bmp.getHeight());\n            float factor = smallest / radius;\n            sbmp = Bitmap.createScaledBitmap(bmp, (int)(bmp.getWidth() / factor), (int)(bmp.getHeight() / factor), false);\n        } else {\n            sbmp = bmp;\n        }\n        \n        Bitmap output = Bitmap.createBitmap(radius, radius,\n                Config.ARGB_8888);\n        Canvas canvas = new Canvas(output);\n\n        final int color = 0xffa19774;\n        final Paint paint = new Paint();\n        final Rect rect = new Rect(0, 0, radius, radius);\n\n        paint.setAntiAlias(true);\n        paint.setFilterBitmap(true);\n        paint.setDither(true);\n        canvas.drawARGB(0, 0, 0, 0);\n        paint.setColor(Color.parseColor(\"#BAB399\"));\n        canvas.drawCircle(radius / 2 + 0.7f,\n                radius / 2 + 0.7f, radius / 2 + 0.1f, paint);\n        paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));\n        canvas.drawBitmap(sbmp, rect, rect, paint);\n\n        return output;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class MLRoundedImageView extends ImageView {\n\n    public MLRoundedImageView(Context context) {\n        super(context);\n    }\n\n    public MLRoundedImageView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    public MLRoundedImageView(Context context, AttributeSet attrs, int defStyle) {\n        super(context, attrs, defStyle);\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n\n        Drawable drawable = getDrawable();\n\n        if (drawable == null) {\n            return;\n        }\n\n        if (getWidth() == 0 || getHeight() == 0) {\n            return;\n        }\n        Bitmap b = ((BitmapDrawable) drawable).getBitmap();\n        Bitmap bitmap = b.copy(Bitmap.Config.ARGB_8888, true);\n\n        int w = getWidth(), h = getHeight();\n\n        Bitmap roundBitmap = getCroppedBitmap(bitmap, w);\n        canvas.drawBitmap(roundBitmap, 0, 0, null);\n\n    }\n\n    public static Bitmap getCroppedBitmap(Bitmap bmp, int radius) {\n        Bitmap sbmp;\n        \n        if (bmp.getWidth() != radius || bmp.getHeight() != radius) {\n            float smallest = Math.min(bmp.getWidth(), bmp.getHeight());\n            float factor = smallest / radius;\n            sbmp = Bitmap.createScaledBitmap(bmp, (int)(bmp.getWidth() / factor), (int)(bmp.getHeight() / factor), false);\n        } else {\n            sbmp = bmp;\n        }\n        \n        Bitmap output = Bitmap.createBitmap(radius, radius,\n                Config.ARGB_8888);\n        Canvas canvas = new Canvas(output);\n\n        final int color = 0xffa19774;\n        final Paint paint = new Paint();\n        final Rect rect = new Rect(0, 0, radius, radius);\n\n        paint.setAntiAlias(true);\n        paint.setFilterBitmap(true);\n        paint.setDither(true);\n        canvas.drawARGB(0, 0, 0, 0);\n        paint.setColor(Color.parseColor(\"#BAB399\"));\n        canvas.drawCircle(radius / 2 + 0.7f,\n                radius / 2 + 0.7f, radius / 2 + 0.1f, paint);\n        paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));\n        canvas.drawBitmap(sbmp, rect, rect, paint);\n\n        return output;\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451198461,
        "id": "2fc38228-6699-4b16-a5b7-abc61cb57f00",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451198461,
        "parent_id": "df05866e-33e2-419d-bc45-78160f02b14f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Use this Class in XML with package name instead of "
            ],
            [
              "ImageView",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Use this Class in XML with package name instead of "
          },
          {
            "Text": "ImageView",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451198461,
        "id": "25a1e9f1-128f-40ee-8756-4daff36191bf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451198461,
        "parent_id": "df05866e-33e2-419d-bc45-78160f02b14f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003ccom.androidbuts.example.MLRoundedImageView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:src=\"@mipmap/ic_launcher\" /\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003ccom.androidbuts.example.MLRoundedImageView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:src=\"@mipmap/ic_launcher\" /\u003e",
        "code_language": "Plain Text"
      }
    ],
    "title": "MLRoundedImageView.java",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}