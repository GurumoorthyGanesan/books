{
  "ID": "2ab39bc7-614e-4cf8-83c1-34cca273d038",
  "Root": {
    "alive": true,
    "content": [
      "ea20de09-870d-48fd-a67a-cc2254c16507"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550453222062,
    "id": "2ab39bc7-614e-4cf8-83c1-34cca273d038",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550453222062,
    "parent_id": "cf617cc7-abc9-4c02-b109-8817de9e1fe8",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 Zip file on android"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550453222060,
        "id": "ea20de09-870d-48fd-a67a-cc2254c16507",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550453222060,
        "parent_id": "2ab39bc7-614e-4cf8-83c1-34cca273d038",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import android.util.Log; \nimport java.io.BufferedInputStream; \nimport java.io.BufferedOutputStream; \nimport java.io.FileInputStream; \nimport java.io.FileOutputStream; \nimport java.util.zip.ZipEntry; \nimport java.util.zip.ZipOutputStream; \n\n\n  public class Compress { \n      private static final int BUFFER = 2048; \n     \n      private String[] _files; \n      private String _zipFile; \n     \n      public Compress(String[] files, String zipFile) { \n        _files = files; \n        _zipFile = zipFile; \n      } \n     \n      public void zip() { \n        try  { \n          BufferedInputStream origin = null; \n          FileOutputStream dest = new FileOutputStream(_zipFile); \n     \n          ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(dest)); \n     \n          byte data[] = new byte[BUFFER]; \n     \n          for(int i=0; i \u003c _files.length; i++) { \n            Log.v(\"Compress\", \"Adding: \" + _files[i]); \n            FileInputStream fi = new FileInputStream(_files[i]); \n            origin = new BufferedInputStream(fi, BUFFER); \n            ZipEntry entry = new ZipEntry(_files[i].substring(_files[i].lastIndexOf(\"/\") + 1)); \n            out.putNextEntry(entry); \n            int count; \n            while ((count = origin.read(data, 0, BUFFER)) != -1) { \n              out.write(data, 0, count); \n            } \n            origin.close(); \n          } \n     \n          out.close(); \n        } catch(Exception e) { \n          e.printStackTrace(); \n        } \n     \n      } \n     \n    }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import android.util.Log; \nimport java.io.BufferedInputStream; \nimport java.io.BufferedOutputStream; \nimport java.io.FileInputStream; \nimport java.io.FileOutputStream; \nimport java.util.zip.ZipEntry; \nimport java.util.zip.ZipOutputStream; \n\n\n  public class Compress { \n      private static final int BUFFER = 2048; \n     \n      private String[] _files; \n      private String _zipFile; \n     \n      public Compress(String[] files, String zipFile) { \n        _files = files; \n        _zipFile = zipFile; \n      } \n     \n      public void zip() { \n        try  { \n          BufferedInputStream origin = null; \n          FileOutputStream dest = new FileOutputStream(_zipFile); \n     \n          ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(dest)); \n     \n          byte data[] = new byte[BUFFER]; \n     \n          for(int i=0; i \u003c _files.length; i++) { \n            Log.v(\"Compress\", \"Adding: \" + _files[i]); \n            FileInputStream fi = new FileInputStream(_files[i]); \n            origin = new BufferedInputStream(fi, BUFFER); \n            ZipEntry entry = new ZipEntry(_files[i].substring(_files[i].lastIndexOf(\"/\") + 1)); \n            out.putNextEntry(entry); \n            int count; \n            while ((count = origin.read(data, 0, BUFFER)) != -1) { \n              out.write(data, 0, count); \n            } \n            origin.close(); \n          } \n     \n          out.close(); \n        } catch(Exception e) { \n          e.printStackTrace(); \n        } \n     \n      } \n     \n    }",
        "code_language": "Plain Text"
      }
    ],
    "title": "010 Zip file on android"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}