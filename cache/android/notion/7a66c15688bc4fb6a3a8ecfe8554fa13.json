{
  "ID": "7a66c156-88bc-4fb6-a3a8-ecfe8554fa13",
  "Root": {
    "alive": true,
    "content": [
      "062eb5a8-7c5d-4e39-87ef-21c0f4b00dbc",
      "42faaca7-0ed9-4f25-a0bc-5f77e5012a57",
      "1df79829-9e87-4442-9656-6d52a1a93e0c",
      "c889bbf2-d5e1-40d0-912a-7a9dc4b7395f",
      "2010c9e1-c84b-40d5-a57c-b4dafdfe5192"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550444963918,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "7a66c156-88bc-4fb6-a3a8-ecfe8554fa13",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550444963918,
    "parent_id": "6190cb6e-dc43-458e-9fc6-34c0e0c69fa6",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Reading data from a Cursor"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550444963916,
        "id": "062eb5a8-7c5d-4e39-87ef-21c0f4b00dbc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550444963916,
        "parent_id": "7a66c156-88bc-4fb6-a3a8-ecfe8554fa13",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here is an example of a method that would live inside a "
            ],
            [
              "SQLiteOpenHelper",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper.html"
                ]
              ]
            ],
            [
              " subclass. It uses the "
            ],
            [
              "searchTerm",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " String to filter the results, iterates through the Cursor’s contents, and returns those contents in a "
            ],
            [
              "List",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " of "
            ],
            [
              "Product",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " Objects."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here is an example of a method that would live inside a "
          },
          {
            "Text": "SQLiteOpenHelper",
            "AttrFlags": 2,
            "Link": "https://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper.html"
          },
          {
            "Text": " subclass. It uses the "
          },
          {
            "Text": "searchTerm",
            "AttrFlags": 2
          },
          {
            "Text": " String to filter the results, iterates through the Cursor’s contents, and returns those contents in a "
          },
          {
            "Text": "List",
            "AttrFlags": 2
          },
          {
            "Text": " of "
          },
          {
            "Text": "Product",
            "AttrFlags": 2
          },
          {
            "Text": " Objects."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550444963917,
        "id": "42faaca7-0ed9-4f25-a0bc-5f77e5012a57",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550444963917,
        "parent_id": "7a66c156-88bc-4fb6-a3a8-ecfe8554fa13",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "First, define the "
            ],
            [
              "Product",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "POJO class",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Plain_Old_Java_Object"
                ]
              ]
            ],
            [
              " that will be the container for each row retrieved from the database:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "First, define the "
          },
          {
            "Text": "Product",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "POJO class",
            "Link": "https://en.wikipedia.org/wiki/Plain_Old_Java_Object"
          },
          {
            "Text": " that will be the container for each row retrieved from the database:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550444963917,
        "id": "1df79829-9e87-4442-9656-6d52a1a93e0c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550444963917,
        "parent_id": "7a66c156-88bc-4fb6-a3a8-ecfe8554fa13",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Product {\n  long mId;\n  String mName;\n  String mDescription;\n  float mValue;\n  public Product(long id, String name, String description, float value) {\n    mId = id;\n    mName = name;\n    mDescription = description;\n    mValue = value;\n  }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Product {\n  long mId;\n  String mName;\n  String mDescription;\n  float mValue;\n  public Product(long id, String name, String description, float value) {\n    mId = id;\n    mName = name;\n    mDescription = description;\n    mValue = value;\n  }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550444963918,
        "id": "c889bbf2-d5e1-40d0-912a-7a9dc4b7395f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550444963918,
        "parent_id": "7a66c156-88bc-4fb6-a3a8-ecfe8554fa13",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Then, define the method that will query the database, and return a "
            ],
            [
              "List",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " of "
            ],
            [
              "Product",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " Objects:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Then, define the method that will query the database, and return a "
          },
          {
            "Text": "List",
            "AttrFlags": 2
          },
          {
            "Text": " of "
          },
          {
            "Text": "Product",
            "AttrFlags": 2
          },
          {
            "Text": " Objects:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550444963918,
        "id": "2010c9e1-c84b-40d5-a57c-b4dafdfe5192",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550444963918,
        "parent_id": "7a66c156-88bc-4fb6-a3a8-ecfe8554fa13",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public List\u003cProduct\u003e searchForProducts(String searchTerm) {\n    \n    // When reading data one should always just get a readable database.\n    final SQLiteDatabase database = this.getReadableDatabase();\n\n    final Cursor cursor = database.query(\n            // Name of the table to read from\n            TABLE_NAME,\n\n            // String array of the columns which are supposed to be read\n            new String[]{COLUMN_NAME, COLUMN_DESCRIPTION, COLUMN_VALUE},\n\n            // The selection argument which specifies which row is read.\n            // ? symbols are parameters.\n            COLUMN_NAME + \" LIKE ?\",\n\n            // The actual parameters values for the selection as a String array.\n            // ? above take the value from here\n            new String[]{\"%\" + searchTerm + \"%\"},\n\n            // GroupBy clause. Specify a column name to group similar values\n            // in that column together.\n            null,\n\n            // Having clause. When using the GroupBy clause this allows you to\n            // specify which groups to include.\n            null,\n\n            // OrderBy clause. Specify a column name here to order the results\n            // according to that column. Optionally append ASC or DESC to specify\n            // an ascending or descending order.\n            null\n    );\n\n    // To increase performance first get the index of each column in the cursor\n    final int idIndex = cursor.getColumnIndex(COLUMN_ID);\n    final int nameIndex = cursor.getColumnIndex(COLUMN_NAME);\n    final int descriptionIndex = cursor.getColumnIndex(COLUMN_DESCRIPTION);\n    final int valueIndex = cursor.getColumnIndex(COLUMN_VALUE);\n\n    try {\n\n        // If moveToFirst() returns false then cursor is empty\n        if (!cursor.moveToFirst()) {\n            return new ArrayList\u003c\u003e();\n        }\n\n        final List\u003cProduct\u003e products = new ArrayList\u003c\u003e();\n\n        do {\n\n            // Read the values of a row in the table using the indexes acquired above\n            final long id = cursor.getLong(idIndex);\n            final String name = cursor.getString(nameIndex);\n            final String description = cursor.getString(descriptionIndex);\n            final float value = cursor.getFloat(valueIndex);\n\n            products.add(new Product(id, name, description, value));\n\n        } while (cursor.moveToNext());\n\n        return products;\n\n    } finally {\n        // Don't forget to close the Cursor once you are done to avoid memory leaks.\n        // Using a try/finally like in this example is usually the best way to handle this\n        cursor.close();\n\n        // close the database\n        database.close();\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public List\u003cProduct\u003e searchForProducts(String searchTerm) {\n    \n    // When reading data one should always just get a readable database.\n    final SQLiteDatabase database = this.getReadableDatabase();\n\n    final Cursor cursor = database.query(\n            // Name of the table to read from\n            TABLE_NAME,\n\n            // String array of the columns which are supposed to be read\n            new String[]{COLUMN_NAME, COLUMN_DESCRIPTION, COLUMN_VALUE},\n\n            // The selection argument which specifies which row is read.\n            // ? symbols are parameters.\n            COLUMN_NAME + \" LIKE ?\",\n\n            // The actual parameters values for the selection as a String array.\n            // ? above take the value from here\n            new String[]{\"%\" + searchTerm + \"%\"},\n\n            // GroupBy clause. Specify a column name to group similar values\n            // in that column together.\n            null,\n\n            // Having clause. When using the GroupBy clause this allows you to\n            // specify which groups to include.\n            null,\n\n            // OrderBy clause. Specify a column name here to order the results\n            // according to that column. Optionally append ASC or DESC to specify\n            // an ascending or descending order.\n            null\n    );\n\n    // To increase performance first get the index of each column in the cursor\n    final int idIndex = cursor.getColumnIndex(COLUMN_ID);\n    final int nameIndex = cursor.getColumnIndex(COLUMN_NAME);\n    final int descriptionIndex = cursor.getColumnIndex(COLUMN_DESCRIPTION);\n    final int valueIndex = cursor.getColumnIndex(COLUMN_VALUE);\n\n    try {\n\n        // If moveToFirst() returns false then cursor is empty\n        if (!cursor.moveToFirst()) {\n            return new ArrayList\u003c\u003e();\n        }\n\n        final List\u003cProduct\u003e products = new ArrayList\u003c\u003e();\n\n        do {\n\n            // Read the values of a row in the table using the indexes acquired above\n            final long id = cursor.getLong(idIndex);\n            final String name = cursor.getString(nameIndex);\n            final String description = cursor.getString(descriptionIndex);\n            final float value = cursor.getFloat(valueIndex);\n\n            products.add(new Product(id, name, description, value));\n\n        } while (cursor.moveToNext());\n\n        return products;\n\n    } finally {\n        // Don't forget to close the Cursor once you are done to avoid memory leaks.\n        // Using a try/finally like in this example is usually the best way to handle this\n        cursor.close();\n\n        // close the database\n        database.close();\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Reading data from a Cursor",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}