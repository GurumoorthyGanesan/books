{
  "ID": "c9fd828d-66bd-469f-ae69-a6dfaf3159ba",
  "Root": {
    "alive": true,
    "content": [
      "a0ed1960-17d1-44ce-b068-d31ab659b10d",
      "2b380603-79ad-49fe-855b-dabbd222e5f2"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550444816958,
    "id": "c9fd828d-66bd-469f-ae69-a6dfaf3159ba",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550444816958,
    "parent_id": "b698fa46-dece-4676-a681-eecc1a3388d2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 Drawing a Separator"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550444816957,
        "id": "a0ed1960-17d1-44ce-b068-d31ab659b10d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550444816957,
        "parent_id": "c9fd828d-66bd-469f-ae69-a6dfaf3159ba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This will draw a line at the bottom of every view but the last to act as a separator between items."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This will draw a line at the bottom of every view but the last to act as a separator between items."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550444816957,
        "id": "2b380603-79ad-49fe-855b-dabbd222e5f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550444816957,
        "parent_id": "c9fd828d-66bd-469f-ae69-a6dfaf3159ba",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class SeparatorDecoration extends RecyclerView.ItemDecoration {\n\n    private final Paint mPaint;\n    private final int mAlpha;\n\n    public SeparatorDecoration(@ColorInt int color, float width) {\n        mPaint = new Paint();\n        mPaint.setColor(color);\n        mPaint.setStrokeWidth(width);\n        mAlpha = mPaint.getAlpha();\n    }\n\n    @Override\n    public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) {\n        final RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) view.getLayoutParams();\n\n        // we retrieve the position in the list\n        final int position = params.getViewAdapterPosition();\n\n        // add space for the separator to the bottom of every view but the last one\n        if (position \u003c state.getItemCount()) {\n            outRect.set(0, 0, 0, (int) mPaint.getStrokeWidth()); // left, top, right, bottom\n        } else {\n            outRect.setEmpty(); // 0, 0, 0, 0\n        }\n    }\n\n    @Override\n    public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {\n        // a line will draw half its size to top and bottom,\n        // hence the offset to place it correctly\n        final int offset = (int) (mPaint.getStrokeWidth() / 2);\n\n        // this will iterate over every visible view\n        for (int i = 0; i \u003c parent.getChildCount(); i++) {\n            final View view = parent.getChildAt(i);\n            final RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) view.getLayoutParams();\n\n            // get the position\n            final int position = params.getViewAdapterPosition();\n\n            // and finally draw the separator\n            if (position \u003c state.getItemCount()) {\n                // apply alpha to support animations\n                mPaint.setAlpha((int) (view.getAlpha() * mAlpha));\n\n                float positionY = view.getBottom() + offset + view.getTranslationY();\n                // do the drawing\n                c.drawLine(view.getLeft() + view.getTranslationX(),\n                        positionY,\n                        view.getRight() + view.getTranslationX(),\n                        positionY,\n                        mPaint);\n            }\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class SeparatorDecoration extends RecyclerView.ItemDecoration {\n\n    private final Paint mPaint;\n    private final int mAlpha;\n\n    public SeparatorDecoration(@ColorInt int color, float width) {\n        mPaint = new Paint();\n        mPaint.setColor(color);\n        mPaint.setStrokeWidth(width);\n        mAlpha = mPaint.getAlpha();\n    }\n\n    @Override\n    public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) {\n        final RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) view.getLayoutParams();\n\n        // we retrieve the position in the list\n        final int position = params.getViewAdapterPosition();\n\n        // add space for the separator to the bottom of every view but the last one\n        if (position \u003c state.getItemCount()) {\n            outRect.set(0, 0, 0, (int) mPaint.getStrokeWidth()); // left, top, right, bottom\n        } else {\n            outRect.setEmpty(); // 0, 0, 0, 0\n        }\n    }\n\n    @Override\n    public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {\n        // a line will draw half its size to top and bottom,\n        // hence the offset to place it correctly\n        final int offset = (int) (mPaint.getStrokeWidth() / 2);\n\n        // this will iterate over every visible view\n        for (int i = 0; i \u003c parent.getChildCount(); i++) {\n            final View view = parent.getChildAt(i);\n            final RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) view.getLayoutParams();\n\n            // get the position\n            final int position = params.getViewAdapterPosition();\n\n            // and finally draw the separator\n            if (position \u003c state.getItemCount()) {\n                // apply alpha to support animations\n                mPaint.setAlpha((int) (view.getAlpha() * mAlpha));\n\n                float positionY = view.getBottom() + offset + view.getTranslationY();\n                // do the drawing\n                c.drawLine(view.getLeft() + view.getTranslationX(),\n                        positionY,\n                        view.getRight() + view.getTranslationX(),\n                        positionY,\n                        mPaint);\n            }\n        }\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "010 Drawing a Separator"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}