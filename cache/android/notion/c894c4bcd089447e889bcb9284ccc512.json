{
  "ID": "c894c4bc-d089-447e-889b-cb9284ccc512",
  "Root": {
    "alive": true,
    "content": [
      "2916450c-10b4-469c-9520-1cdd762e09f5",
      "20fc2b16-df1c-4f76-9c57-94d05cc9b7df",
      "21957bdd-e931-466d-969b-0fd0993d27a8",
      "c157e66b-9acc-4689-aa86-bf804b0314b1",
      "e4ad49c9-468c-4168-b631-535104905568",
      "f821fd27-cc88-4aed-9e3a-7470ab8254ca",
      "0585b753-842b-403e-82c0-6a9c48b858e6",
      "f474acc3-bc85-414c-8e6e-cef5efa7bd58",
      "81ffc6d4-a4e6-43d4-a78f-78833a246e77",
      "260a3c40-14ef-472a-bf52-e00001d3aabb",
      "9e689b59-55e5-42b5-af7a-98c5b2ff6a4c",
      "66d8d103-4ab7-4567-9f2a-c58782c5333f",
      "891c6310-ff37-46da-9e9d-552d44641d92",
      "718b4f50-2614-40db-bd55-c00d185f27bb",
      "0d6b82ac-8e7e-43a6-aa43-1a6b4795b3ae",
      "f18bf327-ae79-4deb-8155-6deb27824184",
      "2f6dd0ac-c042-4df4-b3e8-73aea37b76ae",
      "8464cce0-05c7-4733-b4f9-b435662fddbe",
      "ada6cde4-b9df-4164-92f8-29c5922ea677",
      "51cd2e1b-de4d-47fa-b6d9-3ca806004d3f",
      "6bcc2dea-d075-4786-afee-30063211f082",
      "80260b6c-b1de-4dea-a6dc-3468a04e408a",
      "1bd9ca04-c766-46ec-a87f-22dd217126fa",
      "293ef076-f392-45a7-ab75-5fd8ccffad31",
      "5ab76012-61d8-49db-901b-6d3a9f581ff8",
      "9ee540ee-9829-4fbb-ae1d-3a7cf09c7047",
      "6f75f949-cbe7-438c-8cb8-e2c4b7fcec0a",
      "6fc98ef1-930d-4031-a9ae-9b5407065d87",
      "b127df42-0ea4-4a10-89ba-c4d335f6e384",
      "6d3cfd6c-0cef-412e-b3f0-684ecbb78f82",
      "de6e0ea8-3616-4c2a-9ebb-d53c9861b092",
      "c1fcf768-77e5-4017-90f9-c8defda78b63",
      "1de04ae4-00c9-471e-a305-48690bd6b3f8",
      "59002645-e581-48a6-96b4-38bfa5c1324a",
      "013501d5-e36a-4856-aabb-d49d869decdd",
      "acfb1d34-7e7e-4a94-bb1b-00991dee9c8f",
      "24f55fc2-4505-42cb-8856-1cc8a89658d6",
      "fc17f971-71d6-4729-822d-5507c8d9774d",
      "3c174e6d-6b90-4212-a6ec-afac4105d028",
      "0f4a1d27-2933-4d6e-a47f-1f7a0841bfab",
      "25a43f9a-853d-4ba2-a8d5-adade51b1fd0",
      "5c22c116-7e18-4f87-8c22-b6bd4d6c5b55",
      "24a1a47c-bb22-49ed-8f71-98fbd278329c",
      "4f121b4f-d7c1-4cd1-958c-300c57b215d8",
      "1c9c6ab1-ac7c-4ca3-9ec0-953103400782",
      "43256fc7-1bbb-441c-9524-049adc9d7c38",
      "aa10335b-b094-4cbb-8b23-db83cb631ac1",
      "f0c4d505-5e01-4aa8-a9d3-5e98bc8347e6",
      "2f33ebc9-ef19-419c-bfdc-95c39d0e7c42",
      "2149f2f2-b158-410e-878d-4f407e7b428d",
      "b1aa047f-455b-43e1-82fd-020307dfc5c5",
      "8fc90390-e4a6-4d7c-be57-a94f4dd116ff",
      "b1b926d0-b2eb-4c92-89b8-a5a6491661ec",
      "07955bdf-c02a-40ef-bf24-9949506696c9",
      "6efdf3e5-9ea1-457e-8e86-7d93a72bdbde",
      "d3fcc603-6720-4c7e-8200-dd60dda376a6",
      "5ea3a7b9-7d52-4f9c-bcd5-8220810ace30",
      "acdbd066-768d-496d-9b76-53fc0356492b",
      "7dd92514-6019-4ce5-a1a6-42aa7d0a5b7e",
      "46e8c158-b8b0-4dcf-a48d-265756d40b22",
      "17db0202-ead4-4621-bdd0-d0342a7c1a5a",
      "0473e81a-4838-43d9-bd81-a3e45e9e320d",
      "7bd23776-e8c9-4dfd-a1c2-a30cc12403d7",
      "a95f7efa-eee5-4db6-ade5-5071778fdaae",
      "ae3a8891-0bcd-477b-8324-282148e111ab",
      "b2659e37-2786-4a8e-8453-03af04cadf9f",
      "39b3c5fc-4a77-4950-b1f0-6e96acc43e43",
      "7505fcf1-6c12-455d-a5ca-50bb036a8280",
      "e723ef70-4c90-4069-ac45-1a1164623911",
      "6c5a9dac-1f9e-457a-9fb3-a0d6c2f58ac8",
      "22cae2fb-2156-4342-812b-c8663ff8f4bb",
      "de0bd918-aaef-412b-8e38-29ba26ff559b",
      "1580e649-42ff-40fc-aec2-60d98a69dd2c",
      "37a71897-6d41-4343-8753-3d696207e6c6",
      "69d10b00-ccc2-412c-8874-1c768d42d6dc",
      "e692d8fd-37e6-434e-86a1-93f96ff1c263",
      "2e7d64dd-5431-44fc-8a63-999763de701e",
      "0c344819-38b5-42ad-899d-c59ee4b1c14f",
      "ebcf14dc-4f0f-49a7-8881-12c6a8f24838",
      "c9fc191b-070a-4736-bb3c-029160f8d1f4",
      "7dfa25da-5e28-4277-97ad-bac2794f4bff",
      "ed26a207-3563-4641-a6cb-9d1cfbd0a4b5",
      "cf402c5a-d603-436f-8ebd-f9990448aec6",
      "448438a6-d3d1-42a6-8b5c-01962f0ff8b8",
      "e08baa50-199b-4143-b467-11a90b925aed",
      "f85b45f2-d37e-48e3-ad6f-5210f5332f85",
      "e2aaa7c1-cffc-4cd9-b5c0-34e01d700d2f",
      "bec5ca28-2ea0-47ea-9849-e29677dce3b6",
      "30fb04e9-83f0-4048-8285-69934fd5e628",
      "c36204ca-c913-4b84-bcd8-be7c3edbbeaf",
      "ed3ad1f0-5462-49a1-bbb6-4944b420fb70",
      "3c5bb275-846f-4363-be0b-8c001156b8d1",
      "9ec100c1-51b1-46ec-855c-d81dd37ec9b3",
      "ccb16e5d-1c25-414c-9d27-e72901e40f4d",
      "3f2d5b24-d233-4e83-825c-a9de5805dc79",
      "fc56b214-b8cd-4f19-b113-7afd3ce7c31b",
      "f840b331-9d4a-4a5d-ba6a-92924e06947b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550451461417,
    "id": "c894c4bc-d089-447e-889b-cb9284ccc512",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550451461417,
    "parent_id": "77f833e9-2996-4ded-b5af-7e17de12e8bf",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 Getting Started"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461377,
        "id": "2916450c-10b4-469c-9520-1cdd762e09f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461377,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "RenderScript is a framework to allow high performance parallel computation on Android. Scripts you write will be executed across all available processors (e.g. CPU, GPU etc) in parallel allowing you to focus on the task you want to achieve instead of how it is scheduled and executed."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "RenderScript is a framework to allow high performance parallel computation on Android. Scripts you write will be executed across all available processors (e.g. CPU, GPU etc) in parallel allowing you to focus on the task you want to achieve instead of how it is scheduled and executed."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461380,
        "id": "20fc2b16-df1c-4f76-9c57-94d05cc9b7df",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461380,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Scripts are written in a C99 based language (C99 being an old version of the C programming language standard). For each Script a Java class is created which allows you to easily interact with RenderScript in your Java code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Scripts are written in a C99 based language (C99 being an old version of the C programming language standard). For each Script a Java class is created which allows you to easily interact with RenderScript in your Java code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461381,
        "id": "21957bdd-e931-466d-969b-0fd0993d27a8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461381,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Setting up your project"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Setting up your project"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461381,
        "id": "c157e66b-9acc-4689-aa86-bf804b0314b1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461381,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There exist two different ways to access RenderScript in your app, with the Android Framework libraries or the Support Library. Even if you don’t want to target devices before API level 11 you should always use the Support Library implementation because it ensures devices compatibility across many different devices. To use the support library implementation you need to use at least build tools version "
            ],
            [
              "18.1.0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "!"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There exist two different ways to access RenderScript in your app, with the Android Framework libraries or the Support Library. Even if you don’t want to target devices before API level 11 you should always use the Support Library implementation because it ensures devices compatibility across many different devices. To use the support library implementation you need to use at least build tools version "
          },
          {
            "Text": "18.1.0",
            "AttrFlags": 2
          },
          {
            "Text": "!"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461381,
        "id": "e4ad49c9-468c-4168-b631-535104905568",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461381,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now lets setup the build.gradle file of your application:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now lets setup the build.gradle file of your application:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461381,
        "id": "f821fd27-cc88-4aed-9e3a-7470ab8254ca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461381,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "android {\n    compileSdkVersion 24\n    buildToolsVersion '24.0.1'\n\n    defaultConfig {\n        minSdkVersion 8\n        targetSdkVersion 24\n\n        renderscriptTargetApi 18\n        renderscriptSupportModeEnabled true\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "android {\n    compileSdkVersion 24\n    buildToolsVersion '24.0.1'\n\n    defaultConfig {\n        minSdkVersion 8\n        targetSdkVersion 24\n\n        renderscriptTargetApi 18\n        renderscriptSupportModeEnabled true\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461392,
        "id": "0585b753-842b-403e-82c0-6a9c48b858e6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461392,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "renderscriptTargetApi",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": This should be set to the version earliest API level which provides all RenderScript functionality you require."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "renderscriptTargetApi",
            "AttrFlags": 2
          },
          {
            "Text": ": This should be set to the version earliest API level which provides all RenderScript functionality you require."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461393,
        "id": "f474acc3-bc85-414c-8e6e-cef5efa7bd58",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461393,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "renderscriptSupportModeEnabled",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": This enables the use of the Support Library RenderScript implementation."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "renderscriptSupportModeEnabled",
            "AttrFlags": 2
          },
          {
            "Text": ": This enables the use of the Support Library RenderScript implementation."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461393,
        "id": "81ffc6d4-a4e6-43d4-a78f-78833a246e77",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461393,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "How RenderScript works"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "How RenderScript works"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461393,
        "id": "260a3c40-14ef-472a-bf52-e00001d3aabb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461393,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A typical RenderScript consists of two things: Kernels and Functions. A function is just what it sounds like - it accepts an input, does something with that input and returns an output. A Kernel is where the real power of RenderScript comes from."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A typical RenderScript consists of two things: Kernels and Functions. A function is just what it sounds like - it accepts an input, does something with that input and returns an output. A Kernel is where the real power of RenderScript comes from."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461393,
        "id": "9e689b59-55e5-42b5-af7a-98c5b2ff6a4c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461393,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A Kernel is a function which is executed against every element inside an "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". An "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be used to pass data like a "
            ],
            [
              "Bitmap",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or a "
            ],
            [
              "byte",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " array to a "
            ],
            [
              "RenderScript",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and they are also used to get a result from a Kernel. Kernels can either take one "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as input and another as output or they can modify the data inside just one "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A Kernel is a function which is executed against every element inside an "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": ". An "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": " can be used to pass data like a "
          },
          {
            "Text": "Bitmap",
            "AttrFlags": 2
          },
          {
            "Text": " or a "
          },
          {
            "Text": "byte",
            "AttrFlags": 2
          },
          {
            "Text": " array to a "
          },
          {
            "Text": "RenderScript",
            "AttrFlags": 2
          },
          {
            "Text": " and they are also used to get a result from a Kernel. Kernels can either take one "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": " as input and another as output or they can modify the data inside just one "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461393,
        "id": "66d8d103-4ab7-4567-9f2a-c58782c5333f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461393,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can write your one Kernels, but there are also many predefined Kernels which you can use to perform common operations like a Gaussian Image Blur."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can write your one Kernels, but there are also many predefined Kernels which you can use to perform common operations like a Gaussian Image Blur."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461394,
        "id": "891c6310-ff37-46da-9e9d-552d44641d92",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461394,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As already mentioned for every RenderScript file a class is generated to interact with it. These classes always start with the prefix "
            ],
            [
              "ScriptC_",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " followed by the name of the RenderScript file. For example if your RenderScript file is called "
            ],
            [
              "example",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " then the generated Java class will be called "
            ],
            [
              "ScriptC_example",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". All predefined Scripts just start with the prefix "
            ],
            [
              "Script",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " - for example the Gaussian Image Blur Script is called "
            ],
            [
              "ScriptIntrinsicBlur",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As already mentioned for every RenderScript file a class is generated to interact with it. These classes always start with the prefix "
          },
          {
            "Text": "ScriptC_",
            "AttrFlags": 2
          },
          {
            "Text": " followed by the name of the RenderScript file. For example if your RenderScript file is called "
          },
          {
            "Text": "example",
            "AttrFlags": 2
          },
          {
            "Text": " then the generated Java class will be called "
          },
          {
            "Text": "ScriptC_example",
            "AttrFlags": 2
          },
          {
            "Text": ". All predefined Scripts just start with the prefix "
          },
          {
            "Text": "Script",
            "AttrFlags": 2
          },
          {
            "Text": " - for example the Gaussian Image Blur Script is called "
          },
          {
            "Text": "ScriptIntrinsicBlur",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461394,
        "id": "718b4f50-2614-40db-bd55-c00d185f27bb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461394,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Writing your first RenderScript"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Writing your first RenderScript"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461396,
        "id": "0d6b82ac-8e7e-43a6-aa43-1a6b4795b3ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461396,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following example is based on an example on GitHub. It performs basic image manipulation by modifying the saturation of an image. You can find the source code "
            ],
            [
              "here",
              [
                [
                  "b"
                ],
                [
                  "a",
                  "https://github.com/Wrdlbrnft/RenderScriptSample"
                ]
              ]
            ],
            [
              " and check it out if you want to play around with it yourself. Here’s a quick gif of what the result is supposed to look like:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following example is based on an example on GitHub. It performs basic image manipulation by modifying the saturation of an image. You can find the source code "
          },
          {
            "Text": "here",
            "AttrFlags": 1,
            "Link": "https://github.com/Wrdlbrnft/RenderScriptSample"
          },
          {
            "Text": " and check it out if you want to play around with it yourself. Here’s a quick gif of what the result is supposed to look like:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461396,
        "id": "f18bf327-ae79-4deb-8155-6deb27824184",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461396,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "http://i.stack.imgur.com/9dNTF.gif"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "http://i.stack.imgur.com/9dNTF.gif",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.sohttp:%2F%2Fi.stack.imgur.com%2F9dNTF.gif"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461396,
        "id": "2f6dd0ac-c042-4df4-b3e8-73aea37b76ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461396,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "demo picture"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "demo picture"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461396,
        "id": "8464cce0-05c7-4733-b4f9-b435662fddbe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461396,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "RenderScript Boilerplate"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "RenderScript Boilerplate"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461396,
        "id": "ada6cde4-b9df-4164-92f8-29c5922ea677",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461396,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "RenderScript files reside in the folder "
            ],
            [
              "src/main/rs",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in your project. Each file has the file extension "
            ],
            [
              ".rs",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and has to contain two "
            ],
            [
              "#pragma",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statements at the top:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "RenderScript files reside in the folder "
          },
          {
            "Text": "src/main/rs",
            "AttrFlags": 2
          },
          {
            "Text": " in your project. Each file has the file extension "
          },
          {
            "Text": ".rs",
            "AttrFlags": 2
          },
          {
            "Text": " and has to contain two "
          },
          {
            "Text": "#pragma",
            "AttrFlags": 2
          },
          {
            "Text": " statements at the top:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461396,
        "id": "51cd2e1b-de4d-47fa-b6d9-3ca806004d3f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461396,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#pragma version(1)\n#pragma rs java_package_name(your.package.name)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#pragma version(1)\n#pragma rs java_package_name(your.package.name)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461397,
        "id": "6bcc2dea-d075-4786-afee-30063211f082",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461397,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "#pragma version(1)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": This can be used to set the version of RenderScript you are using. Currently there is only version 1."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "#pragma version(1)",
            "AttrFlags": 2
          },
          {
            "Text": ": This can be used to set the version of RenderScript you are using. Currently there is only version 1."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461397,
        "id": "80260b6c-b1de-4dea-a6dc-3468a04e408a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461397,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "#pragma rs java_package_name(your.package.name)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": This can be used to set the package name of the Java class generated to interact with this particular RenderScript."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "#pragma rs java_package_name(your.package.name)",
            "AttrFlags": 2
          },
          {
            "Text": ": This can be used to set the package name of the Java class generated to interact with this particular RenderScript."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461397,
        "id": "1bd9ca04-c766-46ec-a87f-22dd217126fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461397,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There is another "
            ],
            [
              "#pragma",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " you should usually set in each of your RenderScript files and it is used to set the floating point precision. You can set the floating point precision to three different levels:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There is another "
          },
          {
            "Text": "#pragma",
            "AttrFlags": 2
          },
          {
            "Text": " you should usually set in each of your RenderScript files and it is used to set the floating point precision. You can set the floating point precision to three different levels:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461397,
        "id": "293ef076-f392-45a7-ab75-5fd8ccffad31",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461397,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "#pragma rs_fp_full",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": This is the strictest setting with the highest precision and it is also the default value if don’t specify anything. You should use this if you require high floating point precision."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "#pragma rs_fp_full",
            "AttrFlags": 2
          },
          {
            "Text": ": This is the strictest setting with the highest precision and it is also the default value if don’t specify anything. You should use this if you require high floating point precision."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461398,
        "id": "5ab76012-61d8-49db-901b-6d3a9f581ff8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461398,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "#pragma rs_fp_relaxed",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": This is ensures not quite as high floating point precision, but on some architectures it enables a bunch of optimizations which can cause your scripts to run faster."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "#pragma rs_fp_relaxed",
            "AttrFlags": 2
          },
          {
            "Text": ": This is ensures not quite as high floating point precision, but on some architectures it enables a bunch of optimizations which can cause your scripts to run faster."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461398,
        "id": "9ee540ee-9829-4fbb-ae1d-3a7cf09c7047",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461398,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "#pragma rs_fp_imprecise",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": This ensures even less precision and should be used if floating point precision does not really matter to your script."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "#pragma rs_fp_imprecise",
            "AttrFlags": 2
          },
          {
            "Text": ": This ensures even less precision and should be used if floating point precision does not really matter to your script."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461398,
        "id": "6f75f949-cbe7-438c-8cb8-e2c4b7fcec0a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461398,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Most scripts can just use "
            ],
            [
              "#pragma rs_fp_relaxed",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " unless you really need high floating point precision."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Most scripts can just use "
          },
          {
            "Text": "#pragma rs_fp_relaxed",
            "AttrFlags": 2
          },
          {
            "Text": " unless you really need high floating point precision."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461398,
        "id": "6fc98ef1-930d-4031-a9ae-9b5407065d87",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461398,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Global Variables"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Global Variables"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461398,
        "id": "b127df42-0ea4-4a10-89ba-c4d335f6e384",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461398,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now just like in C code you can define global variables or constants:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now just like in C code you can define global variables or constants:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461398,
        "id": "6d3cfd6c-0cef-412e-b3f0-684ecbb78f82",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461398,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const static float3 gMonoMult = {0.299f, 0.587f, 0.114f};\n\nfloat saturationLevel = 0.0f;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const static float3 gMonoMult = {0.299f, 0.587f, 0.114f};\n\nfloat saturationLevel = 0.0f;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461398,
        "id": "de6e0ea8-3616-4c2a-9ebb-d53c9861b092",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461398,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The variable "
            ],
            [
              "gMonoMult",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is of type "
            ],
            [
              "float3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This means it is a vector consisting of 3 float numbers. The other "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variable called "
            ],
            [
              "saturationValue",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not constant, therefore you can set it at runtime to a value you like. You can use variables like this in your Kernels or functions and therefore they are another way to give input to or receive output from your RenderScripts. For each not constant variable a getter and setter method will be generated on the associated Java class."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The variable "
          },
          {
            "Text": "gMonoMult",
            "AttrFlags": 2
          },
          {
            "Text": " is of type "
          },
          {
            "Text": "float3",
            "AttrFlags": 2
          },
          {
            "Text": ". This means it is a vector consisting of 3 float numbers. The other "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": " variable called "
          },
          {
            "Text": "saturationValue",
            "AttrFlags": 2
          },
          {
            "Text": " is not constant, therefore you can set it at runtime to a value you like. You can use variables like this in your Kernels or functions and therefore they are another way to give input to or receive output from your RenderScripts. For each not constant variable a getter and setter method will be generated on the associated Java class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461399,
        "id": "c1fcf768-77e5-4017-90f9-c8defda78b63",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461399,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Kernels"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Kernels"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461399,
        "id": "1de04ae4-00c9-471e-a305-48690bd6b3f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461399,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But now lets get started implementing the Kernel. For the purposes of this example I am not going to explain the math used in the Kernel to modify the saturation of the image, but instead will focus on how to implement a Kernel and and how to use it. At the end of this chapter I will quickly explain what the code in this Kernel is actually doing."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But now lets get started implementing the Kernel. For the purposes of this example I am not going to explain the math used in the Kernel to modify the saturation of the image, but instead will focus on how to implement a Kernel and and how to use it. At the end of this chapter I will quickly explain what the code in this Kernel is actually doing."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461399,
        "id": "59002645-e581-48a6-96b4-38bfa5c1324a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461399,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Kernels in general"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Kernels in general"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461399,
        "id": "013501d5-e36a-4856-aabb-d49d869decdd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461399,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s take a look at the source code first:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s take a look at the source code first:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461399,
        "id": "acfb1d34-7e7e-4a94-bb1b-00991dee9c8f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461399,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "uchar4 __attribute__((kernel)) saturation(uchar4 in) {\n    float4 f4 = rsUnpackColor8888(in);\n    float3 dotVector = dot(f4.rgb, gMonoMult);\n    float3 newColor = mix(dotVector, f4.rgb, saturationLevel);\n    return rsPackColorTo8888(newColor);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "uchar4 __attribute__((kernel)) saturation(uchar4 in) {\n    float4 f4 = rsUnpackColor8888(in);\n    float3 dotVector = dot(f4.rgb, gMonoMult);\n    float3 newColor = mix(dotVector, f4.rgb, saturationLevel);\n    return rsPackColorTo8888(newColor);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461400,
        "id": "24f55fc2-4505-42cb-8856-1cc8a89658d6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461400,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As you can see it looks like a normal C function with one exception: The "
            ],
            [
              "__attribute__((kernel))",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " between the return type and method name. This is what tells RenderScript that this method is a Kernel. Another thing you might notice is that this method accepts a "
            ],
            [
              "uchar4",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " parameter and returns another "
            ],
            [
              "uchar4",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " value. "
            ],
            [
              "uchar4",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is - like the "
            ],
            [
              "float3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variable we discussed in the chapter before - a vector. It contains 4 "
            ],
            [
              "uchar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " values which are just byte values in the range from 0 to 255."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As you can see it looks like a normal C function with one exception: The "
          },
          {
            "Text": "__attribute__((kernel))",
            "AttrFlags": 2
          },
          {
            "Text": " between the return type and method name. This is what tells RenderScript that this method is a Kernel. Another thing you might notice is that this method accepts a "
          },
          {
            "Text": "uchar4",
            "AttrFlags": 2
          },
          {
            "Text": " parameter and returns another "
          },
          {
            "Text": "uchar4",
            "AttrFlags": 2
          },
          {
            "Text": " value. "
          },
          {
            "Text": "uchar4",
            "AttrFlags": 2
          },
          {
            "Text": " is - like the "
          },
          {
            "Text": "float3",
            "AttrFlags": 2
          },
          {
            "Text": " variable we discussed in the chapter before - a vector. It contains 4 "
          },
          {
            "Text": "uchar",
            "AttrFlags": 2
          },
          {
            "Text": " values which are just byte values in the range from 0 to 255."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461400,
        "id": "fc17f971-71d6-4729-822d-5507c8d9774d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461400,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can access these individual values in many different ways, for example "
            ],
            [
              "in.r",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " would return the byte which corresponds to the red channel of a pixel. We use a "
            ],
            [
              "uchar4",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " since each pixel is made up of 4 values - "
            ],
            [
              "r",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for red, "
            ],
            [
              "g",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for green, "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for blue and "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for alpha - and you can access them with this shorthand. RenderScript also allows you to take any number of values from a vector and create another vector with them. For example "
            ],
            [
              "in.rgb",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " would return a "
            ],
            [
              "uchar3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " value which just contains the red, green and blue parts of the pixel without the alpha value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can access these individual values in many different ways, for example "
          },
          {
            "Text": "in.r",
            "AttrFlags": 2
          },
          {
            "Text": " would return the byte which corresponds to the red channel of a pixel. We use a "
          },
          {
            "Text": "uchar4",
            "AttrFlags": 2
          },
          {
            "Text": " since each pixel is made up of 4 values - "
          },
          {
            "Text": "r",
            "AttrFlags": 2
          },
          {
            "Text": " for red, "
          },
          {
            "Text": "g",
            "AttrFlags": 2
          },
          {
            "Text": " for green, "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": " for blue and "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " for alpha - and you can access them with this shorthand. RenderScript also allows you to take any number of values from a vector and create another vector with them. For example "
          },
          {
            "Text": "in.rgb",
            "AttrFlags": 2
          },
          {
            "Text": " would return a "
          },
          {
            "Text": "uchar3",
            "AttrFlags": 2
          },
          {
            "Text": " value which just contains the red, green and blue parts of the pixel without the alpha value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461401,
        "id": "3c174e6d-6b90-4212-a6ec-afac4105d028",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461401,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "At runtime RenderScript will call this Kernel method for each pixel of an image which is why the return value and parameter are just one "
            ],
            [
              "uchar4",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " value. RenderScript will run many of these calls in parallel on all available processors which is why RenderScript is so powerful. This also means that you don’t have to worry about threading or thread safety, you can just implement whatever you want to do to each pixel and RenderScript takes care of the rest."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "At runtime RenderScript will call this Kernel method for each pixel of an image which is why the return value and parameter are just one "
          },
          {
            "Text": "uchar4",
            "AttrFlags": 2
          },
          {
            "Text": " value. RenderScript will run many of these calls in parallel on all available processors which is why RenderScript is so powerful. This also means that you don’t have to worry about threading or thread safety, you can just implement whatever you want to do to each pixel and RenderScript takes care of the rest."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461401,
        "id": "0f4a1d27-2933-4d6e-a47f-1f7a0841bfab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461401,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When calling a Kernel in Java you supply two "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variables, one which contains the input data and another one which will receive the output. Your Kernel method will be called for each value in the input "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and will write the result to the output "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When calling a Kernel in Java you supply two "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": " variables, one which contains the input data and another one which will receive the output. Your Kernel method will be called for each value in the input "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": " and will write the result to the output "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461401,
        "id": "25a43f9a-853d-4ba2-a8d5-adade51b1fd0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461401,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "RenderScript Runtime API methods"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "RenderScript Runtime API methods"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461401,
        "id": "5c22c116-7e18-4f87-8c22-b6bd4d6c5b55",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461401,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the Kernel above a few methods are used which are provided out of the box. RenderScript provides many such methods and they are vital for almost anything you are going to do with RenderScript. Among them are methods to do math operations like "
            ],
            [
              "sin()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and helper methods like "
            ],
            [
              "mix()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which mixes two values according to another values. But there are also methods for more complex operations when dealing with vectors, quaternions and matrices."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the Kernel above a few methods are used which are provided out of the box. RenderScript provides many such methods and they are vital for almost anything you are going to do with RenderScript. Among them are methods to do math operations like "
          },
          {
            "Text": "sin()",
            "AttrFlags": 2
          },
          {
            "Text": " and helper methods like "
          },
          {
            "Text": "mix()",
            "AttrFlags": 2
          },
          {
            "Text": " which mixes two values according to another values. But there are also methods for more complex operations when dealing with vectors, quaternions and matrices."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461402,
        "id": "24a1a47c-bb22-49ed-8f71-98fbd278329c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461402,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The official "
            ],
            [
              "RenderScript Runtime API Reference",
              [
                [
                  "b"
                ],
                [
                  "a",
                  "https://developer.android.com/guide/topics/renderscript/reference/overview.html"
                ]
              ]
            ],
            [
              " is the best resource out there if you want to know more about a particular method or are looking for a specific method which performs a common operation like calculating the dot product of a matrix. You can find this documentation "
            ],
            [
              "here",
              [
                [
                  "b"
                ],
                [
                  "a",
                  "https://developer.android.com/guide/topics/renderscript/reference/overview.html"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The official "
          },
          {
            "Text": "RenderScript Runtime API Reference",
            "AttrFlags": 1,
            "Link": "https://developer.android.com/guide/topics/renderscript/reference/overview.html"
          },
          {
            "Text": " is the best resource out there if you want to know more about a particular method or are looking for a specific method which performs a common operation like calculating the dot product of a matrix. You can find this documentation "
          },
          {
            "Text": "here",
            "AttrFlags": 1,
            "Link": "https://developer.android.com/guide/topics/renderscript/reference/overview.html"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461402,
        "id": "4f121b4f-d7c1-4cd1-958c-300c57b215d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461402,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Kernel Implementation"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Kernel Implementation"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461402,
        "id": "1c9c6ab1-ac7c-4ca3-9ec0-953103400782",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461402,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now let’s take a look at the specifics of what this Kernel is doing. Here’s the first line in the Kernel:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now let’s take a look at the specifics of what this Kernel is doing. Here’s the first line in the Kernel:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461402,
        "id": "43256fc7-1bbb-441c-9524-049adc9d7c38",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461402,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "float4 f4 = rsUnpackColor8888(in);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "float4 f4 = rsUnpackColor8888(in);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461403,
        "id": "aa10335b-b094-4cbb-8b23-db83cb631ac1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461403,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The first line calls the built in method "
            ],
            [
              "rsUnpackColor8888()",
              [
                [
                  "b"
                ],
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.android.com/guide/topics/renderscript/reference/rs_convert.html#android_rs:rsUnpackColor8888"
                ]
              ]
            ],
            [
              " which transforms the "
            ],
            [
              "uchar4",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " value to a "
            ],
            [
              "float4",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " values. Each color channel is also transformed to the range "
            ],
            [
              "0.0f - 1.0f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " where "
            ],
            [
              "0.0f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " corresponds to a byte value of "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "1.0f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "255",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The main purpose of this is to make all the math in this Kernel a lot simpler."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The first line calls the built in method "
          },
          {
            "Text": "rsUnpackColor8888()",
            "AttrFlags": 3,
            "Link": "https://developer.android.com/guide/topics/renderscript/reference/rs_convert.html#android_rs:rsUnpackColor8888"
          },
          {
            "Text": " which transforms the "
          },
          {
            "Text": "uchar4",
            "AttrFlags": 2
          },
          {
            "Text": " value to a "
          },
          {
            "Text": "float4",
            "AttrFlags": 2
          },
          {
            "Text": " values. Each color channel is also transformed to the range "
          },
          {
            "Text": "0.0f - 1.0f",
            "AttrFlags": 2
          },
          {
            "Text": " where "
          },
          {
            "Text": "0.0f",
            "AttrFlags": 2
          },
          {
            "Text": " corresponds to a byte value of "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "1.0f",
            "AttrFlags": 2
          },
          {
            "Text": " to "
          },
          {
            "Text": "255",
            "AttrFlags": 2
          },
          {
            "Text": ". The main purpose of this is to make all the math in this Kernel a lot simpler."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461403,
        "id": "f0c4d505-5e01-4aa8-a9d3-5e98bc8347e6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461403,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "float3 dotVector = dot(f4.rgb, gMonoMult);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "float3 dotVector = dot(f4.rgb, gMonoMult);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461404,
        "id": "2f33ebc9-ef19-419c-bfdc-95c39d0e7c42",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461404,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This next line uses the built in method "
            ],
            [
              "dot()",
              [
                [
                  "b"
                ],
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.android.com/guide/topics/renderscript/reference/rs_vector_math.html#android_rs:dot"
                ]
              ]
            ],
            [
              " to calculate the dot product of two vectors. "
            ],
            [
              "gMonoMult",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a constant value we defined a few chapters above. Since both vectors need to be of the same length to calculate the dot product and also since we just want to affect the color channels and not the alpha channel of a pixel we use the shorthand "
            ],
            [
              ".rgb",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to get a new "
            ],
            [
              "float3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " vector which just contains the red, green and blue color channels. Those of us who still remember from school how the dot product works will quickly notice that the dot product should return just one value and not a vector. Yet in the code above we are assigning the result to a "
            ],
            [
              "float3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " vector. This is again a feature of RenderScript. When you assign a one dimensional number to a vector all elements in the vector will be set to this value. For example the following snippet will assign "
            ],
            [
              "2.0f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to each of the three values in the "
            ],
            [
              "float3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " vector:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This next line uses the built in method "
          },
          {
            "Text": "dot()",
            "AttrFlags": 3,
            "Link": "https://developer.android.com/guide/topics/renderscript/reference/rs_vector_math.html#android_rs:dot"
          },
          {
            "Text": " to calculate the dot product of two vectors. "
          },
          {
            "Text": "gMonoMult",
            "AttrFlags": 2
          },
          {
            "Text": " is a constant value we defined a few chapters above. Since both vectors need to be of the same length to calculate the dot product and also since we just want to affect the color channels and not the alpha channel of a pixel we use the shorthand "
          },
          {
            "Text": ".rgb",
            "AttrFlags": 2
          },
          {
            "Text": " to get a new "
          },
          {
            "Text": "float3",
            "AttrFlags": 2
          },
          {
            "Text": " vector which just contains the red, green and blue color channels. Those of us who still remember from school how the dot product works will quickly notice that the dot product should return just one value and not a vector. Yet in the code above we are assigning the result to a "
          },
          {
            "Text": "float3",
            "AttrFlags": 2
          },
          {
            "Text": " vector. This is again a feature of RenderScript. When you assign a one dimensional number to a vector all elements in the vector will be set to this value. For example the following snippet will assign "
          },
          {
            "Text": "2.0f",
            "AttrFlags": 2
          },
          {
            "Text": " to each of the three values in the "
          },
          {
            "Text": "float3",
            "AttrFlags": 2
          },
          {
            "Text": " vector:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461404,
        "id": "2149f2f2-b158-410e-878d-4f407e7b428d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461404,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "float3 example = 2.0f;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "float3 example = 2.0f;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461404,
        "id": "b1aa047f-455b-43e1-82fd-020307dfc5c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461404,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So the result of the dot product above is assigned to each element in the "
            ],
            [
              "float3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " vector above."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So the result of the dot product above is assigned to each element in the "
          },
          {
            "Text": "float3",
            "AttrFlags": 2
          },
          {
            "Text": " vector above."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461405,
        "id": "8fc90390-e4a6-4d7c-be57-a94f4dd116ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461405,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now comes the part in which we actually use the global variable "
            ],
            [
              "saturationLevel",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to modify the saturation of the image:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now comes the part in which we actually use the global variable "
          },
          {
            "Text": "saturationLevel",
            "AttrFlags": 2
          },
          {
            "Text": " to modify the saturation of the image:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461405,
        "id": "b1b926d0-b2eb-4c92-89b8-a5a6491661ec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461405,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "float3 newColor = mix(dotVector, f4.rgb, saturationLevel);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "float3 newColor = mix(dotVector, f4.rgb, saturationLevel);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461405,
        "id": "07955bdf-c02a-40ef-bf24-9949506696c9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461405,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This uses the built in method "
            ],
            [
              "mix()",
              [
                [
                  "b"
                ],
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.android.com/guide/topics/renderscript/reference/rs_math.html#android_rs:mix"
                ]
              ]
            ],
            [
              " to mix together the original color with the dot product vector we created above. How they are mixed together is determined by the global "
            ],
            [
              "saturationLevel",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variable. So a "
            ],
            [
              "saturationLevel",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " of "
            ],
            [
              "0.0f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will cause the resulting color to have no part of the original color values and will only consist of values in the "
            ],
            [
              "dotVector",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which results in a black and white or grayed out image. A value of "
            ],
            [
              "1.0f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will cause the resulting color to be completely made up of the original color values and values above "
            ],
            [
              "1.0f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will multiply the original colors to make them more bright and intense."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This uses the built in method "
          },
          {
            "Text": "mix()",
            "AttrFlags": 3,
            "Link": "https://developer.android.com/guide/topics/renderscript/reference/rs_math.html#android_rs:mix"
          },
          {
            "Text": " to mix together the original color with the dot product vector we created above. How they are mixed together is determined by the global "
          },
          {
            "Text": "saturationLevel",
            "AttrFlags": 2
          },
          {
            "Text": " variable. So a "
          },
          {
            "Text": "saturationLevel",
            "AttrFlags": 2
          },
          {
            "Text": " of "
          },
          {
            "Text": "0.0f",
            "AttrFlags": 2
          },
          {
            "Text": " will cause the resulting color to have no part of the original color values and will only consist of values in the "
          },
          {
            "Text": "dotVector",
            "AttrFlags": 2
          },
          {
            "Text": " which results in a black and white or grayed out image. A value of "
          },
          {
            "Text": "1.0f",
            "AttrFlags": 2
          },
          {
            "Text": " will cause the resulting color to be completely made up of the original color values and values above "
          },
          {
            "Text": "1.0f",
            "AttrFlags": 2
          },
          {
            "Text": " will multiply the original colors to make them more bright and intense."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461406,
        "id": "6efdf3e5-9ea1-457e-8e86-7d93a72bdbde",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461406,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "return rsPackColorTo8888(newColor);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "return rsPackColorTo8888(newColor);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461406,
        "id": "d3fcc603-6720-4c7e-8200-dd60dda376a6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461406,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is the last part in the Kernel. "
            ],
            [
              "rsPackColorTo8888()",
              [
                [
                  "b"
                ],
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.android.com/guide/topics/renderscript/reference/rs_convert.html#android_rs:rsPackColorTo8888"
                ]
              ]
            ],
            [
              " transforms the "
            ],
            [
              "float3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " vector back to a "
            ],
            [
              "uchar4",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " value which is then returned. The resulting byte values are clamped to a range between 0 and 255, so float values higher than "
            ],
            [
              "1.0f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will result in a byte value of 255 and values lower than "
            ],
            [
              "0.0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will result in a byte value of "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is the last part in the Kernel. "
          },
          {
            "Text": "rsPackColorTo8888()",
            "AttrFlags": 3,
            "Link": "https://developer.android.com/guide/topics/renderscript/reference/rs_convert.html#android_rs:rsPackColorTo8888"
          },
          {
            "Text": " transforms the "
          },
          {
            "Text": "float3",
            "AttrFlags": 2
          },
          {
            "Text": " vector back to a "
          },
          {
            "Text": "uchar4",
            "AttrFlags": 2
          },
          {
            "Text": " value which is then returned. The resulting byte values are clamped to a range between 0 and 255, so float values higher than "
          },
          {
            "Text": "1.0f",
            "AttrFlags": 2
          },
          {
            "Text": " will result in a byte value of 255 and values lower than "
          },
          {
            "Text": "0.0",
            "AttrFlags": 2
          },
          {
            "Text": " will result in a byte value of "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461407,
        "id": "5ea3a7b9-7d52-4f9c-bcd5-8220810ace30",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461407,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And that is the whole Kernel implementation. Now there is only one part remaining: How to call a Kernel in Java."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And that is the whole Kernel implementation. Now there is only one part remaining: How to call a Kernel in Java."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461407,
        "id": "acdbd066-768d-496d-9b76-53fc0356492b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461407,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Calling RenderScript in Java"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Calling RenderScript in Java"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461407,
        "id": "7dd92514-6019-4ce5-a1a6-42aa7d0a5b7e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461407,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Basics"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Basics"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461407,
        "id": "46e8c158-b8b0-4dcf-a48d-265756d40b22",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461407,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As was already mentioned above for each RenderScript file a Java class is generated which allows you to interact with the your scripts. These files have the prefix "
            ],
            [
              "ScriptC_",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " followed by the name of the RenderScript file. To create an instance of these classes you first need an instance of the "
            ],
            [
              "RenderScript",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As was already mentioned above for each RenderScript file a Java class is generated which allows you to interact with the your scripts. These files have the prefix "
          },
          {
            "Text": "ScriptC_",
            "AttrFlags": 2
          },
          {
            "Text": " followed by the name of the RenderScript file. To create an instance of these classes you first need an instance of the "
          },
          {
            "Text": "RenderScript",
            "AttrFlags": 2
          },
          {
            "Text": " class:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461407,
        "id": "17db0202-ead4-4621-bdd0-d0342a7c1a5a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461407,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "final RenderScript renderScript = RenderScript.create(context);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "final RenderScript renderScript = RenderScript.create(context);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461407,
        "id": "0473e81a-4838-43d9-bd81-a3e45e9e320d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461407,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The static method "
            ],
            [
              "create()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be used to create a "
            ],
            [
              "RenderScript",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instance from a "
            ],
            [
              "Context",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". You can then instantiate the Java class which was generated for your script. If you called the RenderScript file "
            ],
            [
              "saturation.rs",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " then the class will be called "
            ],
            [
              "ScriptC_saturation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The static method "
          },
          {
            "Text": "create()",
            "AttrFlags": 2
          },
          {
            "Text": " can be used to create a "
          },
          {
            "Text": "RenderScript",
            "AttrFlags": 2
          },
          {
            "Text": " instance from a "
          },
          {
            "Text": "Context",
            "AttrFlags": 2
          },
          {
            "Text": ". You can then instantiate the Java class which was generated for your script. If you called the RenderScript file "
          },
          {
            "Text": "saturation.rs",
            "AttrFlags": 2
          },
          {
            "Text": " then the class will be called "
          },
          {
            "Text": "ScriptC_saturation",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461408,
        "id": "7bd23776-e8c9-4dfd-a1c2-a30cc12403d7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461408,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "final ScriptC_saturation script = new ScriptC_saturation(renderScript);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "final ScriptC_saturation script = new ScriptC_saturation(renderScript);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461408,
        "id": "a95f7efa-eee5-4db6-ade5-5071778fdaae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461408,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "On this class you can now set the saturation level and call the Kernel. The setter which was generated for the "
            ],
            [
              "saturationLevel",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variable will have the prefix "
            ],
            [
              "set_",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " followed by the name of the variable:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "On this class you can now set the saturation level and call the Kernel. The setter which was generated for the "
          },
          {
            "Text": "saturationLevel",
            "AttrFlags": 2
          },
          {
            "Text": " variable will have the prefix "
          },
          {
            "Text": "set_",
            "AttrFlags": 2
          },
          {
            "Text": " followed by the name of the variable:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461408,
        "id": "ae3a8891-0bcd-477b-8324-282148e111ab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461408,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "script.set_saturationLevel(1.0f);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "script.set_saturationLevel(1.0f);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461408,
        "id": "b2659e37-2786-4a8e-8453-03af04cadf9f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461408,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There is also a getter prefixed with "
            ],
            [
              "get_",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which allows you to get the saturation level currently set:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There is also a getter prefixed with "
          },
          {
            "Text": "get_",
            "AttrFlags": 2
          },
          {
            "Text": " which allows you to get the saturation level currently set:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461408,
        "id": "39b3c5fc-4a77-4950-b1f0-6e96acc43e43",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461408,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "float saturationLevel = script.get_saturationLevel();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "float saturationLevel = script.get_saturationLevel();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461409,
        "id": "7505fcf1-6c12-455d-a5ca-50bb036a8280",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461409,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Kernels you define in your RenderScript are prefixed with "
            ],
            [
              "forEach_",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " followed by the name of the Kernel method. The Kernel we have written expects an input "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and an output "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as its parameters:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Kernels you define in your RenderScript are prefixed with "
          },
          {
            "Text": "forEach_",
            "AttrFlags": 2
          },
          {
            "Text": " followed by the name of the Kernel method. The Kernel we have written expects an input "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": " and an output "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": " as its parameters:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461409,
        "id": "e723ef70-4c90-4069-ac45-1a1164623911",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461409,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "script.forEach_saturation(inputAllocation, outputAllocation);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "script.forEach_saturation(inputAllocation, outputAllocation);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461409,
        "id": "6c5a9dac-1f9e-457a-9fb3-a0d6c2f58ac8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461409,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The input "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " needs to contain the input image, and after the "
            ],
            [
              "forEach_saturation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method has finished the output allocation will contain the modified image data."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The input "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": " needs to contain the input image, and after the "
          },
          {
            "Text": "forEach_saturation",
            "AttrFlags": 2
          },
          {
            "Text": " method has finished the output allocation will contain the modified image data."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461409,
        "id": "22cae2fb-2156-4342-812b-c8663ff8f4bb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461409,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Once you have an "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instance you can copy data from and to those "
            ],
            [
              "Allocations",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " by using the methods "
            ],
            [
              "copyFrom()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "copyTo()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". For example you can copy a new image into your input `Allocation by calling:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Once you have an "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": " instance you can copy data from and to those "
          },
          {
            "Text": "Allocations",
            "AttrFlags": 2
          },
          {
            "Text": " by using the methods "
          },
          {
            "Text": "copyFrom()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "copyTo()",
            "AttrFlags": 2
          },
          {
            "Text": ". For example you can copy a new image into your input `Allocation by calling:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461409,
        "id": "de0bd918-aaef-412b-8e38-29ba26ff559b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461409,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "inputAllocation.copyFrom(inputBitmap);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "inputAllocation.copyFrom(inputBitmap);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461409,
        "id": "1580e649-42ff-40fc-aec2-60d98a69dd2c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461409,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The same way you can retrieve the result image by calling "
            ],
            [
              "copyTo()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " on the output "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The same way you can retrieve the result image by calling "
          },
          {
            "Text": "copyTo()",
            "AttrFlags": 2
          },
          {
            "Text": " on the output "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461409,
        "id": "37a71897-6d41-4343-8753-3d696207e6c6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461409,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "outputAllocation.copyTo(outputBitmap);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "outputAllocation.copyTo(outputBitmap);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461410,
        "id": "69d10b00-ccc2-412c-8874-1c768d42d6dc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461410,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Creating Allocation instances"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Creating Allocation instances"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461410,
        "id": "e692d8fd-37e6-434e-86a1-93f96ff1c263",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461410,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are many ways to create an "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Once you have an "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instance you can copy new data from and to those "
            ],
            [
              "Allocations",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with "
            ],
            [
              "copyTo()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "copyFrom()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " like explained above, but to create them initially you have to know with what kind of data you are exactly working with. Let’s start with the input "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are many ways to create an "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": ". Once you have an "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": " instance you can copy new data from and to those "
          },
          {
            "Text": "Allocations",
            "AttrFlags": 2
          },
          {
            "Text": " with "
          },
          {
            "Text": "copyTo()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "copyFrom()",
            "AttrFlags": 2
          },
          {
            "Text": " like explained above, but to create them initially you have to know with what kind of data you are exactly working with. Let’s start with the input "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461410,
        "id": "2e7d64dd-5431-44fc-8a63-999763de701e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461410,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can use the static method "
            ],
            [
              "createFromBitmap()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to quickly create our input "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " from a "
            ],
            [
              "Bitmap",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can use the static method "
          },
          {
            "Text": "createFromBitmap()",
            "AttrFlags": 2
          },
          {
            "Text": " to quickly create our input "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": " from a "
          },
          {
            "Text": "Bitmap",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461410,
        "id": "0c344819-38b5-42ad-899d-c59ee4b1c14f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461410,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "final Allocation inputAllocation = Allocation.createFromBitmap(renderScript, image);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "final Allocation inputAllocation = Allocation.createFromBitmap(renderScript, image);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461410,
        "id": "ebcf14dc-4f0f-49a7-8881-12c6a8f24838",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461410,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example the input image never changes so we never need to modify the input "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " again. We can reuse it each time the "
            ],
            [
              "saturationLevel",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " changes to create a new output "
            ],
            [
              "Bitmap",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example the input image never changes so we never need to modify the input "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": " again. We can reuse it each time the "
          },
          {
            "Text": "saturationLevel",
            "AttrFlags": 2
          },
          {
            "Text": " changes to create a new output "
          },
          {
            "Text": "Bitmap",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461411,
        "id": "c9fc191b-070a-4736-bb3c-029160f8d1f4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461411,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Creating the output "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a little more complex. First we need to create what’s called a "
            ],
            [
              "Type",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". A "
            ],
            [
              "Type",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is used to tell an "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with what kind of data it’s dealing with. Usually one uses the "
            ],
            [
              "Type.Builder",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class to quickly create an appropriate "
            ],
            [
              "Type",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Let’s take a look at the code first:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Creating the output "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": " is a little more complex. First we need to create what’s called a "
          },
          {
            "Text": "Type",
            "AttrFlags": 2
          },
          {
            "Text": ". A "
          },
          {
            "Text": "Type",
            "AttrFlags": 2
          },
          {
            "Text": " is used to tell an "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": " with what kind of data it’s dealing with. Usually one uses the "
          },
          {
            "Text": "Type.Builder",
            "AttrFlags": 2
          },
          {
            "Text": " class to quickly create an appropriate "
          },
          {
            "Text": "Type",
            "AttrFlags": 2
          },
          {
            "Text": ". Let’s take a look at the code first:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461411,
        "id": "7dfa25da-5e28-4277-97ad-bac2794f4bff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461411,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "final Type outputType = new Type.Builder(renderScript, Element.RGBA_8888(renderScript))\n        .setX(inputBitmap.getWidth())\n        .setY(inputBitmap.getHeight())\n        .create();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "final Type outputType = new Type.Builder(renderScript, Element.RGBA_8888(renderScript))\n        .setX(inputBitmap.getWidth())\n        .setY(inputBitmap.getHeight())\n        .create();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461411,
        "id": "ed26a207-3563-4641-a6cb-9d1cfbd0a4b5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461411,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We are working with a normal 32 bit (or in other words 4 byte) per pixel "
            ],
            [
              "Bitmap",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with 4 color channels. That’s why we are choosing "
            ],
            [
              "Element.RGBA_8888",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to create the "
            ],
            [
              "Type",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Then we use the methods "
            ],
            [
              "setX()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "setY()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to set the width and height of the output image to the same size as the input image. The method "
            ],
            [
              "create()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " then creates the "
            ],
            [
              "Type",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with the parameters we specified."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We are working with a normal 32 bit (or in other words 4 byte) per pixel "
          },
          {
            "Text": "Bitmap",
            "AttrFlags": 2
          },
          {
            "Text": " with 4 color channels. That’s why we are choosing "
          },
          {
            "Text": "Element.RGBA_8888",
            "AttrFlags": 2
          },
          {
            "Text": " to create the "
          },
          {
            "Text": "Type",
            "AttrFlags": 2
          },
          {
            "Text": ". Then we use the methods "
          },
          {
            "Text": "setX()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "setY()",
            "AttrFlags": 2
          },
          {
            "Text": " to set the width and height of the output image to the same size as the input image. The method "
          },
          {
            "Text": "create()",
            "AttrFlags": 2
          },
          {
            "Text": " then creates the "
          },
          {
            "Text": "Type",
            "AttrFlags": 2
          },
          {
            "Text": " with the parameters we specified."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461412,
        "id": "cf402c5a-d603-436f-8ebd-f9990448aec6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461412,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Once we have the correct "
            ],
            [
              "Type",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " we can create the output "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with the static method "
            ],
            [
              "createTyped()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Once we have the correct "
          },
          {
            "Text": "Type",
            "AttrFlags": 2
          },
          {
            "Text": " we can create the output "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": " with the static method "
          },
          {
            "Text": "createTyped()",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461412,
        "id": "448438a6-d3d1-42a6-8b5c-01962f0ff8b8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461412,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "final Allocation outputAllocation = Allocation.createTyped(renderScript, outputType);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "final Allocation outputAllocation = Allocation.createTyped(renderScript, outputType);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461412,
        "id": "e08baa50-199b-4143-b467-11a90b925aed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461412,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now we are almost done. We also need an output "
            ],
            [
              "Bitmap",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in which we can copy the data from the output "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". To do this we use the static method "
            ],
            [
              "createBitmap()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to create a new empty "
            ],
            [
              "Bitmap",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with the same size and configuration as the input "
            ],
            [
              "Bitmap",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now we are almost done. We also need an output "
          },
          {
            "Text": "Bitmap",
            "AttrFlags": 2
          },
          {
            "Text": " in which we can copy the data from the output "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": ". To do this we use the static method "
          },
          {
            "Text": "createBitmap()",
            "AttrFlags": 2
          },
          {
            "Text": " to create a new empty "
          },
          {
            "Text": "Bitmap",
            "AttrFlags": 2
          },
          {
            "Text": " with the same size and configuration as the input "
          },
          {
            "Text": "Bitmap",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461412,
        "id": "f85b45f2-d37e-48e3-ad6f-5210f5332f85",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461412,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "final Bitmap outputBitmap = Bitmap.createBitmap(\n        inputBitmap.getWidth(),\n        inputBitmap.getHeight(),\n        inputBitmap.getConfig()\n);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "final Bitmap outputBitmap = Bitmap.createBitmap(\n        inputBitmap.getWidth(),\n        inputBitmap.getHeight(),\n        inputBitmap.getConfig()\n);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461412,
        "id": "e2aaa7c1-cffc-4cd9-b5c0-34e01d700d2f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461412,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And with that we have all the puzzle pieces to execute our RenderScript."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And with that we have all the puzzle pieces to execute our RenderScript."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461414,
        "id": "bec5ca28-2ea0-47ea-9849-e29677dce3b6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461414,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Full example"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Full example"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461414,
        "id": "30fb04e9-83f0-4048-8285-69934fd5e628",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461414,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now let’s put all this together in one example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now let’s put all this together in one example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461414,
        "id": "c36204ca-c913-4b84-bcd8-be7c3edbbeaf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461414,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Create the RenderScript instance\nfinal RenderScript renderScript = RenderScript.create(context);\n\n// Create the input Allocation \nfinal Allocation inputAllocation = Allocation.createFromBitmap(renderScript, inputBitmap);\n\n// Create the output Type.\nfinal Type outputType = new Type.Builder(renderScript, Element.RGBA_8888(renderScript))\n        .setX(inputBitmap.getWidth())\n        .setY(inputBitmap.getHeight())\n        .create();\n\n// And use the Type to create am output Allocation\nfinal Allocation outputAllocation = Allocation.createTyped(renderScript, outputType);\n\n// Create an empty output Bitmap from the input Bitmap\nfinal Bitmap outputBitmap = Bitmap.createBitmap(\n        inputBitmap.getWidth(),\n        inputBitmap.getHeight(),\n        inputBitmap.getConfig()\n);\n\n// Create an instance of our script\nfinal ScriptC_saturation script = new ScriptC_saturation(renderScript);\n\n// Set the saturation level\nscript.set_saturationLevel(2.0f);\n\n// Execute the Kernel\nscript.forEach_saturation(inputAllocation, outputAllocation);\n\n// Copy the result data to the output Bitmap\noutputAllocation.copyTo(outputBitmap);\n\n// Display the result Bitmap somewhere\nsomeImageView.setImageBitmap(outputBitmap);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Create the RenderScript instance\nfinal RenderScript renderScript = RenderScript.create(context);\n\n// Create the input Allocation \nfinal Allocation inputAllocation = Allocation.createFromBitmap(renderScript, inputBitmap);\n\n// Create the output Type.\nfinal Type outputType = new Type.Builder(renderScript, Element.RGBA_8888(renderScript))\n        .setX(inputBitmap.getWidth())\n        .setY(inputBitmap.getHeight())\n        .create();\n\n// And use the Type to create am output Allocation\nfinal Allocation outputAllocation = Allocation.createTyped(renderScript, outputType);\n\n// Create an empty output Bitmap from the input Bitmap\nfinal Bitmap outputBitmap = Bitmap.createBitmap(\n        inputBitmap.getWidth(),\n        inputBitmap.getHeight(),\n        inputBitmap.getConfig()\n);\n\n// Create an instance of our script\nfinal ScriptC_saturation script = new ScriptC_saturation(renderScript);\n\n// Set the saturation level\nscript.set_saturationLevel(2.0f);\n\n// Execute the Kernel\nscript.forEach_saturation(inputAllocation, outputAllocation);\n\n// Copy the result data to the output Bitmap\noutputAllocation.copyTo(outputBitmap);\n\n// Display the result Bitmap somewhere\nsomeImageView.setImageBitmap(outputBitmap);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461414,
        "id": "ed3ad1f0-5462-49a1-bbb6-4944b420fb70",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461414,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Conclusion"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Conclusion"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461414,
        "id": "3c5bb275-846f-4363-be0b-8c001156b8d1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461414,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With this introduction you should be all set to write your own RenderScript Kernels for simple image manipulation. However there are a few things you have to keep in mind:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With this introduction you should be all set to write your own RenderScript Kernels for simple image manipulation. However there are a few things you have to keep in mind:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461415,
        "id": "9ec100c1-51b1-46ec-855c-d81dd37ec9b3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461415,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "RenderScript only works in Application projects",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": Currently RenderScript files cannot be part of a library project."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "RenderScript only works in Application projects",
            "AttrFlags": 1
          },
          {
            "Text": ": Currently RenderScript files cannot be part of a library project."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461415,
        "id": "ccb16e5d-1c25-414c-9d27-e72901e40f4d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461415,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Watch out for memory",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": RenderScript is very fast, but it can also be memory intensive. There should never be more than one instance of "
            ],
            [
              "RenderScript",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " at any time. You should also reuse as much as possible. Normally you just need to create your "
            ],
            [
              "Allocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instances once and can reuse them in the future. The same goes for output "
            ],
            [
              "Bitmaps",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or your script instances. Reuse as much as possible."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Watch out for memory",
            "AttrFlags": 1
          },
          {
            "Text": ": RenderScript is very fast, but it can also be memory intensive. There should never be more than one instance of "
          },
          {
            "Text": "RenderScript",
            "AttrFlags": 2
          },
          {
            "Text": " at any time. You should also reuse as much as possible. Normally you just need to create your "
          },
          {
            "Text": "Allocation",
            "AttrFlags": 2
          },
          {
            "Text": " instances once and can reuse them in the future. The same goes for output "
          },
          {
            "Text": "Bitmaps",
            "AttrFlags": 2
          },
          {
            "Text": " or your script instances. Reuse as much as possible."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461416,
        "id": "3f2d5b24-d233-4e83-825c-a9de5805dc79",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461416,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Do your work in the background",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": Again RenderScript is very fast, but not instant in any way. Any Kernel, especially complex ones should be executed off the UI thread in an "
            ],
            [
              "AsyncTask",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or something similar. However for the most part you don’t have to worry about memory leaks. All RenderScript related classes only use the application "
            ],
            [
              "Context",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and therefore don’t cause memory leaks. But you still have to worry about the usual stuff like leaking "
            ],
            [
              "View",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Activity",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or any "
            ],
            [
              "Context",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instance which you use yourself!"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Do your work in the background",
            "AttrFlags": 1
          },
          {
            "Text": ": Again RenderScript is very fast, but not instant in any way. Any Kernel, especially complex ones should be executed off the UI thread in an "
          },
          {
            "Text": "AsyncTask",
            "AttrFlags": 2
          },
          {
            "Text": " or something similar. However for the most part you don’t have to worry about memory leaks. All RenderScript related classes only use the application "
          },
          {
            "Text": "Context",
            "AttrFlags": 2
          },
          {
            "Text": " and therefore don’t cause memory leaks. But you still have to worry about the usual stuff like leaking "
          },
          {
            "Text": "View",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Activity",
            "AttrFlags": 2
          },
          {
            "Text": " or any "
          },
          {
            "Text": "Context",
            "AttrFlags": 2
          },
          {
            "Text": " instance which you use yourself!"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461416,
        "id": "fc56b214-b8cd-4f19-b113-7afd3ce7c31b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461416,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Use built in stuff",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": There are many predefined scripts which perform tasks like image blurring, blending, converting, resizing. And there are many more built in methods which help you implement your kernels. Chances are that if you want to do something there is either a script or method which already does what you are trying to do. Don’t reinvent the wheel."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Use built in stuff",
            "AttrFlags": 1
          },
          {
            "Text": ": There are many predefined scripts which perform tasks like image blurring, blending, converting, resizing. And there are many more built in methods which help you implement your kernels. Chances are that if you want to do something there is either a script or method which already does what you are trying to do. Don’t reinvent the wheel."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451461416,
        "id": "f840b331-9d4a-4a5d-ba6a-92924e06947b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451461416,
        "parent_id": "c894c4bc-d089-447e-889b-cb9284ccc512",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you want to quickly get started and play around with actual code I recommend you take a look at the example GitHub project which implements the exact example talked about in this tutorial. You can find the project "
            ],
            [
              "here",
              [
                [
                  "b"
                ],
                [
                  "a",
                  "https://github.com/Wrdlbrnft/RenderScriptSample"
                ]
              ]
            ],
            [
              ". Have fun with RenderScript!"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you want to quickly get started and play around with actual code I recommend you take a look at the example GitHub project which implements the exact example talked about in this tutorial. You can find the project "
          },
          {
            "Text": "here",
            "AttrFlags": 1,
            "Link": "https://github.com/Wrdlbrnft/RenderScriptSample"
          },
          {
            "Text": ". Have fun with RenderScript!"
          }
        ]
      }
    ],
    "title": "010 Getting Started"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}