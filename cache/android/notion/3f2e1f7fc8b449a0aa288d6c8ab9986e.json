{
  "ID": "3f2e1f7f-c8b4-49a0-aa28-8d6c8ab9986e",
  "Root": {
    "alive": true,
    "content": [
      "19ad1765-1270-4d58-931f-5b5d437cc155",
      "82a49cc1-cbd3-4187-a9dc-ffce1a08a2f6",
      "8e38512f-dde6-456a-816e-4c5f42d5c4e5",
      "b6c7348e-cebb-4be9-ae17-d62b04aaef3a",
      "2087d123-7740-474f-bb5b-d07f1f4db4c2",
      "01c32aeb-164d-4447-94bf-b4935aa901af",
      "ef90c0f2-bc3a-4245-bd90-8696a779ba8b",
      "2f649699-0975-4f9d-857d-986ea88f83c2"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550448266975,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "3f2e1f7f-c8b4-49a0-aa28-8d6c8ab9986e",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550448266975,
    "parent_id": "a50a635e-1226-4210-baec-32b24d8676e4",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Exceptions"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448266971,
        "id": "19ad1765-1270-4d58-931f-5b5d437cc155",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448266971,
        "parent_id": "3f2e1f7f-c8b4-49a0-aa28-8d6c8ab9986e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "JUnit can also be used to test if a method throws a specific exception for a given input."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "JUnit can also be used to test if a method throws a specific exception for a given input."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448266974,
        "id": "82a49cc1-cbd3-4187-a9dc-ffce1a08a2f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448266974,
        "parent_id": "3f2e1f7f-c8b4-49a0-aa28-8d6c8ab9986e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example we will test if the following method really throws an exception if the Boolean format (input) is not recognized/unknown:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example we will test if the following method really throws an exception if the Boolean format (input) is not recognized/unknown:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448266974,
        "id": "8e38512f-dde6-456a-816e-4c5f42d5c4e5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448266974,
        "parent_id": "3f2e1f7f-c8b4-49a0-aa28-8d6c8ab9986e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public static boolean parseBoolean(@NonNull String raw) throws IllegalArgumentException{\n    raw = raw.toLowerCase().trim();\n    switch (raw) {\n        case \"t\": case \"yes\": case \"1\": case \"true\":\n            return true;\n        case \"f\": case \"no\": case \"0\": case \"false\":\n            return false;\n        default:\n            throw new IllegalArgumentException(\"Unknown boolean format: \" + raw);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public static boolean parseBoolean(@NonNull String raw) throws IllegalArgumentException{\n    raw = raw.toLowerCase().trim();\n    switch (raw) {\n        case \"t\": case \"yes\": case \"1\": case \"true\":\n            return true;\n        case \"f\": case \"no\": case \"0\": case \"false\":\n            return false;\n        default:\n            throw new IllegalArgumentException(\"Unknown boolean format: \" + raw);\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448266974,
        "id": "b6c7348e-cebb-4be9-ae17-d62b04aaef3a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448266974,
        "parent_id": "3f2e1f7f-c8b4-49a0-aa28-8d6c8ab9986e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By adding the "
            ],
            [
              "expected",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " parameter to the "
            ],
            [
              "@Test",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " annotation, one can define which exception is expected to be thrown. The unit test will fail if this exception does not occur, and succeed if the exception is indeed thrown:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By adding the "
          },
          {
            "Text": "expected",
            "AttrFlags": 2
          },
          {
            "Text": " parameter to the "
          },
          {
            "Text": "@Test",
            "AttrFlags": 2
          },
          {
            "Text": " annotation, one can define which exception is expected to be thrown. The unit test will fail if this exception does not occur, and succeed if the exception is indeed thrown:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448266974,
        "id": "2087d123-7740-474f-bb5b-d07f1f4db4c2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448266974,
        "parent_id": "3f2e1f7f-c8b4-49a0-aa28-8d6c8ab9986e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@Test(expected = IllegalArgumentException.class)\npublic void parseBoolean_parsesInvalidFormat_throwsException(){\n    StringUtilities.parseBoolean(\"Hello JUnit\");\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@Test(expected = IllegalArgumentException.class)\npublic void parseBoolean_parsesInvalidFormat_throwsException(){\n    StringUtilities.parseBoolean(\"Hello JUnit\");\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448266975,
        "id": "01c32aeb-164d-4447-94bf-b4935aa901af",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448266975,
        "parent_id": "3f2e1f7f-c8b4-49a0-aa28-8d6c8ab9986e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This works well, however, it does limit you to just a single test case within the method. Sometimes you might want to test multiple cases within a single method. A technique often used to overcome this limitation is using "
            ],
            [
              "try-catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " blocks and the "
            ],
            [
              "Assert.fail()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This works well, however, it does limit you to just a single test case within the method. Sometimes you might want to test multiple cases within a single method. A technique often used to overcome this limitation is using "
          },
          {
            "Text": "try-catch",
            "AttrFlags": 2
          },
          {
            "Text": " blocks and the "
          },
          {
            "Text": "Assert.fail()",
            "AttrFlags": 2
          },
          {
            "Text": " method:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448266975,
        "id": "ef90c0f2-bc3a-4245-bd90-8696a779ba8b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448266975,
        "parent_id": "3f2e1f7f-c8b4-49a0-aa28-8d6c8ab9986e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@Test\npublic void parseBoolean_parsesInvalidFormats_throwsException(){\n    try {\n        StringUtilities.parseBoolean(\"Hello!\");\n        fail(\"Expected IllegalArgumentException\");\n    } catch(IllegalArgumentException e){\n    }\n\n    try {\n        StringUtilities.parseBoolean(\"JUnit!\");\n        fail(\"Expected IllegalArgumentException\");\n    } catch(IllegalArgumentException e){\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@Test\npublic void parseBoolean_parsesInvalidFormats_throwsException(){\n    try {\n        StringUtilities.parseBoolean(\"Hello!\");\n        fail(\"Expected IllegalArgumentException\");\n    } catch(IllegalArgumentException e){\n    }\n\n    try {\n        StringUtilities.parseBoolean(\"JUnit!\");\n        fail(\"Expected IllegalArgumentException\");\n    } catch(IllegalArgumentException e){\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448266975,
        "id": "2f649699-0975-4f9d-857d-986ea88f83c2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448266975,
        "parent_id": "3f2e1f7f-c8b4-49a0-aa28-8d6c8ab9986e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: Some people consider it to be bad practice to test more than a single case inside a unit test.",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: Some people consider it to be bad practice to test more than a single case inside a unit test.",
            "AttrFlags": 4
          }
        ]
      }
    ],
    "title": "Exceptions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}