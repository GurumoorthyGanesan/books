{
  "ID": "e1b721d8-7332-4d04-9478-3f863ae2d7f2",
  "Root": {
    "alive": true,
    "content": [
      "aa704718-d893-452f-b061-d9bdc164b97e",
      "1297a437-45ef-4857-905e-0daa41b83c60",
      "df98dc1d-4fa3-41d2-aab4-b8227c22560f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550452295998,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e1b721d8-7332-4d04-9478-3f863ae2d7f2",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550452295998,
    "parent_id": "8e556e15-f5fd-43fa-bf95-98cee5a7bc8f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Receiving an event"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452295995,
        "id": "aa704718-d893-452f-b061-d9bdc164b97e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452295995,
        "parent_id": "e1b721d8-7332-4d04-9478-3f863ae2d7f2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To receive an event it is necessary to implement a method with the event type as parameter and annotate it using "
            ],
            [
              "@Subscribe",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Furthermore you have to register/unregister the instance of your object at the "
            ],
            [
              "BusProvider",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (see example "
            ],
            [
              "Sending an event",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To receive an event it is necessary to implement a method with the event type as parameter and annotate it using "
          },
          {
            "Text": "@Subscribe",
            "AttrFlags": 2
          },
          {
            "Text": ". Furthermore you have to register/unregister the instance of your object at the "
          },
          {
            "Text": "BusProvider",
            "AttrFlags": 2
          },
          {
            "Text": " (see example "
          },
          {
            "Text": "Sending an event",
            "AttrFlags": 4
          },
          {
            "Text": "):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452295997,
        "id": "1297a437-45ef-4857-905e-0daa41b83c60",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452295997,
        "parent_id": "e1b721d8-7332-4d04-9478-3f863ae2d7f2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class MyFragment extends Fragment {\n    private final static String TAG = \"MyFragment\";\n\n    ...\n\n    @Override\n    public void onResume() {\n        super.onResume();\n        BusProvider.getInstance().register(this);\n    }\n\n    @Override\n    public void onPause() {\n        super.onPause();\n        BusProvider.getInstance().unregister(this);\n    }\n\n    @Subscribe\n    public void onDatabaseContentChanged(DatabaseContentChangedEvent event) {\n        Log.i(TAG, \"onDatabaseContentChanged: \"+event.message);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class MyFragment extends Fragment {\n    private final static String TAG = \"MyFragment\";\n\n    ...\n\n    @Override\n    public void onResume() {\n        super.onResume();\n        BusProvider.getInstance().register(this);\n    }\n\n    @Override\n    public void onPause() {\n        super.onPause();\n        BusProvider.getInstance().unregister(this);\n    }\n\n    @Subscribe\n    public void onDatabaseContentChanged(DatabaseContentChangedEvent event) {\n        Log.i(TAG, \"onDatabaseContentChanged: \"+event.message);\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550452295998,
        "id": "df98dc1d-4fa3-41d2-aab4-b8227c22560f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550452295998,
        "parent_id": "e1b721d8-7332-4d04-9478-3f863ae2d7f2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Important:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " In order to receive that event an instance of the class has to exist. This is usually not the case when you want to send a result from one activity to another activity. So check your use case for the event bus."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Important:",
            "AttrFlags": 1
          },
          {
            "Text": " In order to receive that event an instance of the class has to exist. This is usually not the case when you want to send a result from one activity to another activity. So check your use case for the event bus."
          }
        ]
      }
    ],
    "title": "Receiving an event",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}