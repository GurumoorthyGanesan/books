{
  "ID": "f5328450-cb64-48e0-870f-753addbc5ffa",
  "Root": {
    "alive": true,
    "content": [
      "4b872149-ee6b-46c3-a0ab-d4aa7bc1a65b",
      "c47c72d2-af4d-4603-9236-4da134921bbc",
      "f5c474f7-c156-4fdf-a035-c478997b500f",
      "e8215367-4d8c-4d59-ae2d-d46e399f440a",
      "54918a0b-1f58-40bb-9360-911de2439946",
      "003bd8b0-7756-42a2-b962-af03eea96a40",
      "f9a92e65-893c-4bad-84ad-3534be3ef18b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550451298238,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "f5328450-cb64-48e0-870f-753addbc5ffa",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551739158578,
    "parent_id": "68e828c6-f314-441c-b64a-ba28f0d1cc35",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Taking full-sized photo from camera"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451298232,
        "id": "4b872149-ee6b-46c3-a0ab-d4aa7bc1a65b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451298232,
        "parent_id": "f5328450-cb64-48e0-870f-753addbc5ffa",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To take a photo, first we need to declare required permissions in "
            ],
            [
              "AndroidManifest.xml",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". We need two permissions:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To take a photo, first we need to declare required permissions in "
          },
          {
            "Text": "AndroidManifest.xml",
            "AttrFlags": 2
          },
          {
            "Text": ". We need two permissions:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451298237,
        "id": "c47c72d2-af4d-4603-9236-4da134921bbc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451298237,
        "parent_id": "f5328450-cb64-48e0-870f-753addbc5ffa",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Camera",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " - to open camera app. If attribute "
            ],
            [
              "required",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is set to "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " you will not be able to install this app if you don’t have hardware camera."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Camera",
            "AttrFlags": 2
          },
          {
            "Text": " - to open camera app. If attribute "
          },
          {
            "Text": "required",
            "AttrFlags": 2
          },
          {
            "Text": " is set to "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": " you will not be able to install this app if you don’t have hardware camera."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451298237,
        "id": "f5c474f7-c156-4fdf-a035-c478997b500f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451298237,
        "parent_id": "f5328450-cb64-48e0-870f-753addbc5ffa",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "WRITE_EXTERNAL_STORAGE",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " - This permission is required to create new file, in which captured photo will be saved."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "WRITE_EXTERNAL_STORAGE",
            "AttrFlags": 2
          },
          {
            "Text": " - This permission is required to create new file, in which captured photo will be saved."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451298237,
        "id": "e8215367-4d8c-4d59-ae2d-d46e399f440a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451298237,
        "parent_id": "f5328450-cb64-48e0-870f-753addbc5ffa",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "AndroidManifest.xml"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "AndroidManifest.xml"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451298238,
        "id": "54918a0b-1f58-40bb-9360-911de2439946",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451298238,
        "parent_id": "f5328450-cb64-48e0-870f-753addbc5ffa",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003cuses-feature android:name=\"android.hardware.camera\"\n          android:required=\"true\" /\u003e\n\u003cuses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003cuses-feature android:name=\"android.hardware.camera\"\n          android:required=\"true\" /\u003e\n\u003cuses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451298238,
        "id": "003bd8b0-7756-42a2-b962-af03eea96a40",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451298238,
        "parent_id": "f5328450-cb64-48e0-870f-753addbc5ffa",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The main idea in taking full-sized photo from camera is that we need to create new file for photo, before we open camera app and capture photo."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The main idea in taking full-sized photo from camera is that we need to create new file for photo, before we open camera app and capture photo."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550451298238,
        "id": "f9a92e65-893c-4bad-84ad-3534be3ef18b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550451298238,
        "parent_id": "f5328450-cb64-48e0-870f-753addbc5ffa",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "private void dispatchTakePictureIntent() {\n    Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\n    // Ensure that there's a camera activity to handle the intent\n    if (takePictureIntent.resolveActivity(getPackageManager()) != null) {\n        // Create the File where the photo should go\n        File photoFile = null;\n        try {\n            photoFile = createImageFile();\n        } catch (IOException ex) {\n            Log.e(\"DEBUG_TAG\", \"createFile\", ex);\n        }\n        // Continue only if the File was successfully created\n        if (photoFile != null) {\n            takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(photoFile));\n            startActivityForResult(takePictureIntent, REQUEST_IMAGE_CAPTURE);\n        }\n    }\n}\n\nprivate File createImageFile() throws IOException {\n    // Create an image file name\n    String timeStamp = new SimpleDateFormat(\"yyyyMMdd_HHmmss\", Locale.getDefault()).format(new Date());\n    String imageFileName = \"JPEG_\" + timeStamp + \"_\";\n    File storageDir = getAlbumDir();\n    File image = File.createTempFile(\n            imageFileName,  /* prefix */\n            \".jpg\",         /* suffix */\n            storageDir      /* directory */\n    );\n\n    // Save a file: path for use with ACTION_VIEW intents\n    mCurrentPhotoPath = image.getAbsolutePath();\n    return image;\n}\n\nprivate File getAlbumDir() {\n    File storageDir = null;\n\n    if (Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {\n\n        storageDir = new File(Environment.getExternalStorageDirectory()\n                + \"/dcim/\"\n                + \"MyRecipes\");\n\n        if (!storageDir.mkdirs()) {\n            if (!storageDir.exists()) {\n                Log.d(\"CameraSample\", \"failed to create directory\");\n                return null;\n            }\n        }\n\n    } else {\n        Log.v(getString(R.string.app_name), \"External storage is not mounted READ/WRITE.\");\n    }\n\n    return storageDir;\n}\n\nprivate void setPic() {\n\n    /* There isn't enough memory to open up more than a couple camera photos */\n    /* So pre-scale the target bitmap into which the file is decoded */\n\n    /* Get the size of the ImageView */\n    int targetW = recipeImage.getWidth();\n    int targetH = recipeImage.getHeight();\n\n    /* Get the size of the image */\n    BitmapFactory.Options bmOptions = new BitmapFactory.Options();\n    bmOptions.inJustDecodeBounds = true;\n    BitmapFactory.decodeFile(mCurrentPhotoPath, bmOptions);\n    int photoW = bmOptions.outWidth;\n    int photoH = bmOptions.outHeight;\n\n    /* Figure out which way needs to be reduced less */\n    int scaleFactor = 2;\n    if ((targetW \u003e 0) \u0026\u0026 (targetH \u003e 0)) {\n        scaleFactor = Math.max(photoW / targetW, photoH / targetH);\n    }\n\n    /* Set bitmap options to scale the image decode target */\n    bmOptions.inJustDecodeBounds = false;\n    bmOptions.inSampleSize = scaleFactor;\n    bmOptions.inPurgeable = true;\n\n    Matrix matrix = new Matrix();\n    matrix.postRotate(getRotation());\n\n    /* Decode the JPEG file into a Bitmap */\n    Bitmap bitmap = BitmapFactory.decodeFile(mCurrentPhotoPath, bmOptions);\n    bitmap = Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, false);\n\n    /* Associate the Bitmap to the ImageView */\n    recipeImage.setImageBitmap(bitmap);\n}\n\nprivate float getRotation() {\n    try {\n        ExifInterface ei = new ExifInterface(mCurrentPhotoPath);\n        int orientation = ei.getAttributeInt(ExifInterface.TAG_ORIENTATION, ExifInterface.ORIENTATION_NORMAL);\n\n        switch (orientation) {\n            case ExifInterface.ORIENTATION_ROTATE_90:\n                return 90f;\n            case ExifInterface.ORIENTATION_ROTATE_180:\n                return 180f;\n            case ExifInterface.ORIENTATION_ROTATE_270:\n                return 270f;\n            default:\n                return 0f;\n        }\n    } catch (Exception e) {\n        Log.e(\"Add Recipe\", \"getRotation\", e);\n        return 0f;\n    }\n}\n\nprivate void galleryAddPic() {\n    Intent mediaScanIntent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);\n    File f = new File(mCurrentPhotoPath);\n    Uri contentUri = Uri.fromFile(f);\n    mediaScanIntent.setData(contentUri);\n    sendBroadcast(mediaScanIntent);\n}\n\nprivate void handleBigCameraPhoto() {\n\n    if (mCurrentPhotoPath != null) {\n        setPic();\n        galleryAddPic();\n    }\n}\n\n\n@Override\npublic void onActivityResult(int requestCode, int resultCode, Intent data) {\n    super.onActivityResult(requestCode, resultCode, data);\n    if (requestCode == REQUEST_IMAGE_CAPTURE \u0026\u0026 resultCode == Activity.RESULT_OK) {\n        handleBigCameraPhoto();\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "private void dispatchTakePictureIntent() {\n    Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\n    // Ensure that there's a camera activity to handle the intent\n    if (takePictureIntent.resolveActivity(getPackageManager()) != null) {\n        // Create the File where the photo should go\n        File photoFile = null;\n        try {\n            photoFile = createImageFile();\n        } catch (IOException ex) {\n            Log.e(\"DEBUG_TAG\", \"createFile\", ex);\n        }\n        // Continue only if the File was successfully created\n        if (photoFile != null) {\n            takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(photoFile));\n            startActivityForResult(takePictureIntent, REQUEST_IMAGE_CAPTURE);\n        }\n    }\n}\n\nprivate File createImageFile() throws IOException {\n    // Create an image file name\n    String timeStamp = new SimpleDateFormat(\"yyyyMMdd_HHmmss\", Locale.getDefault()).format(new Date());\n    String imageFileName = \"JPEG_\" + timeStamp + \"_\";\n    File storageDir = getAlbumDir();\n    File image = File.createTempFile(\n            imageFileName,  /* prefix */\n            \".jpg\",         /* suffix */\n            storageDir      /* directory */\n    );\n\n    // Save a file: path for use with ACTION_VIEW intents\n    mCurrentPhotoPath = image.getAbsolutePath();\n    return image;\n}\n\nprivate File getAlbumDir() {\n    File storageDir = null;\n\n    if (Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {\n\n        storageDir = new File(Environment.getExternalStorageDirectory()\n                + \"/dcim/\"\n                + \"MyRecipes\");\n\n        if (!storageDir.mkdirs()) {\n            if (!storageDir.exists()) {\n                Log.d(\"CameraSample\", \"failed to create directory\");\n                return null;\n            }\n        }\n\n    } else {\n        Log.v(getString(R.string.app_name), \"External storage is not mounted READ/WRITE.\");\n    }\n\n    return storageDir;\n}\n\nprivate void setPic() {\n\n    /* There isn't enough memory to open up more than a couple camera photos */\n    /* So pre-scale the target bitmap into which the file is decoded */\n\n    /* Get the size of the ImageView */\n    int targetW = recipeImage.getWidth();\n    int targetH = recipeImage.getHeight();\n\n    /* Get the size of the image */\n    BitmapFactory.Options bmOptions = new BitmapFactory.Options();\n    bmOptions.inJustDecodeBounds = true;\n    BitmapFactory.decodeFile(mCurrentPhotoPath, bmOptions);\n    int photoW = bmOptions.outWidth;\n    int photoH = bmOptions.outHeight;\n\n    /* Figure out which way needs to be reduced less */\n    int scaleFactor = 2;\n    if ((targetW \u003e 0) \u0026\u0026 (targetH \u003e 0)) {\n        scaleFactor = Math.max(photoW / targetW, photoH / targetH);\n    }\n\n    /* Set bitmap options to scale the image decode target */\n    bmOptions.inJustDecodeBounds = false;\n    bmOptions.inSampleSize = scaleFactor;\n    bmOptions.inPurgeable = true;\n\n    Matrix matrix = new Matrix();\n    matrix.postRotate(getRotation());\n\n    /* Decode the JPEG file into a Bitmap */\n    Bitmap bitmap = BitmapFactory.decodeFile(mCurrentPhotoPath, bmOptions);\n    bitmap = Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, false);\n\n    /* Associate the Bitmap to the ImageView */\n    recipeImage.setImageBitmap(bitmap);\n}\n\nprivate float getRotation() {\n    try {\n        ExifInterface ei = new ExifInterface(mCurrentPhotoPath);\n        int orientation = ei.getAttributeInt(ExifInterface.TAG_ORIENTATION, ExifInterface.ORIENTATION_NORMAL);\n\n        switch (orientation) {\n            case ExifInterface.ORIENTATION_ROTATE_90:\n                return 90f;\n            case ExifInterface.ORIENTATION_ROTATE_180:\n                return 180f;\n            case ExifInterface.ORIENTATION_ROTATE_270:\n                return 270f;\n            default:\n                return 0f;\n        }\n    } catch (Exception e) {\n        Log.e(\"Add Recipe\", \"getRotation\", e);\n        return 0f;\n    }\n}\n\nprivate void galleryAddPic() {\n    Intent mediaScanIntent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);\n    File f = new File(mCurrentPhotoPath);\n    Uri contentUri = Uri.fromFile(f);\n    mediaScanIntent.setData(contentUri);\n    sendBroadcast(mediaScanIntent);\n}\n\nprivate void handleBigCameraPhoto() {\n\n    if (mCurrentPhotoPath != null) {\n        setPic();\n        galleryAddPic();\n    }\n}\n\n\n@Override\npublic void onActivityResult(int requestCode, int resultCode, Intent data) {\n    super.onActivityResult(requestCode, resultCode, data);\n    if (requestCode == REQUEST_IMAGE_CAPTURE \u0026\u0026 resultCode == Activity.RESULT_OK) {\n        handleBigCameraPhoto();\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Taking full-sized photo from camera",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}