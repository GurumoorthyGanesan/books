{
  "ID": "a095edd2-3f5d-4aff-8ed5-453883a7e8de",
  "Root": {
    "alive": true,
    "content": [
      "03225aac-2cf7-4c9c-a980-e75c45866579",
      "fdad1f0e-ea1d-48e4-8fc3-46518f57d87c",
      "6cff12e6-b248-434b-ad97-05b3041aea3b",
      "9cae327d-f73d-45d3-a702-567d54a63eb6",
      "cad3662f-210e-49dc-85ea-cd3cf97e844a",
      "3f824037-73f7-4b5e-b2dd-5fc7527e0558",
      "39bf42e6-851f-4eb3-ba76-eab1c1eabb2c",
      "16e4c558-d986-4ea4-88d8-0a1935daf88f",
      "603e0303-0867-42fd-b2a7-aca005ab57b9",
      "2dee064a-9849-4103-b51d-1edf9d5c801d",
      "a9b2a4df-c4a8-42a0-98e2-8f99d3686172"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550449673719,
    "id": "a095edd2-3f5d-4aff-8ed5-453883a7e8de",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550449673719,
    "parent_id": "d75c0cae-6a9d-433a-91d1-96901cb34d26",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 Passing a Simple Event"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449673714,
        "id": "03225aac-2cf7-4c9c-a980-e75c45866579",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449673714,
        "parent_id": "a095edd2-3f5d-4aff-8ed5-453883a7e8de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The first thing we need to do it add EventBus to our module’s gradle file:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The first thing we need to do it add EventBus to our module’s gradle file:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449673717,
        "id": "fdad1f0e-ea1d-48e4-8fc3-46518f57d87c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449673717,
        "parent_id": "a095edd2-3f5d-4aff-8ed5-453883a7e8de",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "dependencies {\n    ...\n    compile 'org.greenrobot:eventbus:3.0.0'\n    ...\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "dependencies {\n    ...\n    compile 'org.greenrobot:eventbus:3.0.0'\n    ...\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449673717,
        "id": "6cff12e6-b248-434b-ad97-05b3041aea3b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449673717,
        "parent_id": "a095edd2-3f5d-4aff-8ed5-453883a7e8de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now we need to create a model for our event. It can contain anything we want to pass along. For now we’ll just make an empty class."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now we need to create a model for our event. It can contain anything we want to pass along. For now we’ll just make an empty class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449673717,
        "id": "9cae327d-f73d-45d3-a702-567d54a63eb6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449673717,
        "parent_id": "a095edd2-3f5d-4aff-8ed5-453883a7e8de",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class DeviceConnectedEvent\n{\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class DeviceConnectedEvent\n{\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449673718,
        "id": "cad3662f-210e-49dc-85ea-cd3cf97e844a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449673718,
        "parent_id": "a095edd2-3f5d-4aff-8ed5-453883a7e8de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now we can add the code to our "
            ],
            [
              "Activity",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that will register with EventBus and subscribe to the event."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now we can add the code to our "
          },
          {
            "Text": "Activity",
            "AttrFlags": 2
          },
          {
            "Text": " that will register with EventBus and subscribe to the event."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449673718,
        "id": "3f824037-73f7-4b5e-b2dd-5fc7527e0558",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449673718,
        "parent_id": "a095edd2-3f5d-4aff-8ed5-453883a7e8de",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class MainActivity extends AppCompatActivity\n{\n    private EventBus _eventBus;\n\n    @Override\n    protected void onCreate (Bundle savedInstanceState)\n    {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        _eventBus = EventBus.getDefault();\n    }\n\n    @Override\n    protected void onStart ()\n    {\n        super.onStart();\n        _eventBus.register(this);\n    }\n\n    @Override\n    protected void onStop ()\n    {\n        _eventBus.unregister(this);\n        super.onStop();\n    }\n\n    @Subscribe(threadMode = ThreadMode.MAIN)\n    public void onDeviceConnected (final DeviceConnectedEvent event)\n    {\n        // Process event and update UI\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class MainActivity extends AppCompatActivity\n{\n    private EventBus _eventBus;\n\n    @Override\n    protected void onCreate (Bundle savedInstanceState)\n    {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        _eventBus = EventBus.getDefault();\n    }\n\n    @Override\n    protected void onStart ()\n    {\n        super.onStart();\n        _eventBus.register(this);\n    }\n\n    @Override\n    protected void onStop ()\n    {\n        _eventBus.unregister(this);\n        super.onStop();\n    }\n\n    @Subscribe(threadMode = ThreadMode.MAIN)\n    public void onDeviceConnected (final DeviceConnectedEvent event)\n    {\n        // Process event and update UI\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449673718,
        "id": "39bf42e6-851f-4eb3-ba76-eab1c1eabb2c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449673718,
        "parent_id": "a095edd2-3f5d-4aff-8ed5-453883a7e8de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this "
            ],
            [
              "Activity",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " we get an instance of "
            ],
            [
              "EventBus",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the "
            ],
            [
              "onCreate()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method. We register / unregister for events in "
            ],
            [
              "onStart()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " / "
            ],
            [
              "onStop()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". It’s important to remember to unregister when your listener loses scope or you could leak your "
            ],
            [
              "Activity",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this "
          },
          {
            "Text": "Activity",
            "AttrFlags": 2
          },
          {
            "Text": " we get an instance of "
          },
          {
            "Text": "EventBus",
            "AttrFlags": 2
          },
          {
            "Text": " in the "
          },
          {
            "Text": "onCreate()",
            "AttrFlags": 2
          },
          {
            "Text": " method. We register / unregister for events in "
          },
          {
            "Text": "onStart()",
            "AttrFlags": 2
          },
          {
            "Text": " / "
          },
          {
            "Text": "onStop()",
            "AttrFlags": 2
          },
          {
            "Text": ". It’s important to remember to unregister when your listener loses scope or you could leak your "
          },
          {
            "Text": "Activity",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449673718,
        "id": "16e4c558-d986-4ea4-88d8-0a1935daf88f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449673718,
        "parent_id": "a095edd2-3f5d-4aff-8ed5-453883a7e8de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finally we define the method that we want called with the event. The "
            ],
            [
              "@Subscribe",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " annotation tells EventBus which methods it can look for to handle events. You have to have at least one methods annotated with "
            ],
            [
              "@Subscribe",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to register with EventBus or it will throw an exception. In the annotation we define the thread mode. This tells EventBus which thread to call the method on. It is a very handy way of passing information from a background thread to the UI thread! That’s exactly what we’re doing here. "
            ],
            [
              "ThreadMode.MAIN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " means that this method will be called on Android’s main UI thread so it’s safe to do any UI manipulations here that you need. The name of the method doesn’t matter. The only think, other that the "
            ],
            [
              "@Subscribe",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " annotation, that EventBus is looking for is the type of the argument. As long as the type matches it will be called when an event is posted."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finally we define the method that we want called with the event. The "
          },
          {
            "Text": "@Subscribe",
            "AttrFlags": 2
          },
          {
            "Text": " annotation tells EventBus which methods it can look for to handle events. You have to have at least one methods annotated with "
          },
          {
            "Text": "@Subscribe",
            "AttrFlags": 2
          },
          {
            "Text": " to register with EventBus or it will throw an exception. In the annotation we define the thread mode. This tells EventBus which thread to call the method on. It is a very handy way of passing information from a background thread to the UI thread! That’s exactly what we’re doing here. "
          },
          {
            "Text": "ThreadMode.MAIN",
            "AttrFlags": 2
          },
          {
            "Text": " means that this method will be called on Android’s main UI thread so it’s safe to do any UI manipulations here that you need. The name of the method doesn’t matter. The only think, other that the "
          },
          {
            "Text": "@Subscribe",
            "AttrFlags": 2
          },
          {
            "Text": " annotation, that EventBus is looking for is the type of the argument. As long as the type matches it will be called when an event is posted."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449673718,
        "id": "603e0303-0867-42fd-b2a7-aca005ab57b9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449673718,
        "parent_id": "a095edd2-3f5d-4aff-8ed5-453883a7e8de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The last thing we need to do it to post an event. This code will be in our "
            ],
            [
              "Service",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The last thing we need to do it to post an event. This code will be in our "
          },
          {
            "Text": "Service",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449673718,
        "id": "2dee064a-9849-4103-b51d-1edf9d5c801d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449673718,
        "parent_id": "a095edd2-3f5d-4aff-8ed5-453883a7e8de",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "EventBus.getDefault().post(new DeviceConnectedEvent());"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "EventBus.getDefault().post(new DeviceConnectedEvent());",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550449673719,
        "id": "a9b2a4df-c4a8-42a0-98e2-8f99d3686172",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550449673719,
        "parent_id": "a095edd2-3f5d-4aff-8ed5-453883a7e8de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "That’s all there is to it! EventBus will take that DeviceConnectedEvent and look through its registered listeners, look through the methods that they’ve subscribed and find the ones that take a DeviceConnectedEvent as an argument and call them on the thread that they want to be called on."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "That’s all there is to it! EventBus will take that DeviceConnectedEvent and look through its registered listeners, look through the methods that they’ve subscribed and find the ones that take a DeviceConnectedEvent as an argument and call them on the thread that they want to be called on."
          }
        ]
      }
    ],
    "title": "010 Passing a Simple Event"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}