{
  "ID": "1267e4c3-086c-42dd-bbb2-416cd3c01eef",
  "Root": {
    "alive": true,
    "content": [
      "879282cd-75d6-42cc-a408-00563e2cecac",
      "bbe0bb82-2a2e-4c1c-b7df-54941bf08f15",
      "d797214b-aafb-43ad-9c1c-38bdf3dcb14e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550444554928,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1267e4c3-086c-42dd-bbb2-416cd3c01eef",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550444554928,
    "parent_id": "a2530ba9-8b01-4c7b-ad00-037bf9f232a2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Save Database on SD Card Backup DB on SD"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550444554925,
        "id": "879282cd-75d6-42cc-a408-00563e2cecac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550444554925,
        "parent_id": "1267e4c3-086c-42dd-bbb2-416cd3c01eef",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public static Boolean ExportDB(String DATABASE_NAME , String packageName , String folderName){\n    //DATABASE_NAME including \".db\" at the end like \"mayApp.db\"\n    String DBName = DATABASE_NAME.substring(0, DATABASE_NAME.length() - 3);\n    File data = Environment.getDataDirectory();\n    FileChannel source=null;\n    FileChannel destination=null;\n    String currentDBPath = \"/data/\"+ packageName +\"/databases/\"+DATABASE_NAME; // getting app db path\n\n    File sd = Environment.getExternalStorageDirectory(); // getting phone SD card path\n    String backupPath = sd.getAbsolutePath() + folderName; // if you want to set backup in specific folder name\n        /* be careful , foldername must initial like this : \"/myFolder\" . dont forget \"/\" at begin of folder name\n            you could define foldername like this : \"/myOutterFolder/MyInnerFolder\" and so on ...\n        */\n    File dir = new File(backupPath);\n    if(!dir.exists()) // if there was no folder at this path , it create it .\n    {\n        dir.mkdirs();\n    }\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd_HH-mm-ss\");\n    Date date = new Date();\n        /* use date including file name for arrange them and preventing to make file with the same*/\n    File currentDB = new File(data, currentDBPath);\n    File backupDB = new File(backupPath, DBName +\"(\"+ dateFormat.format(date)+\").db\");\n    try {\n        if (currentDB.exists() \u0026\u0026 !backupDB.exists()) {\n            source = new FileInputStream(currentDB).getChannel();\n            destination = new FileOutputStream(backupDB).getChannel();\n            destination.transferFrom(source, 0, source.size());\n            source.close();\n            destination.close();\n            return true;\n        }\n        return false;\n    } catch(IOException e) {\n        e.printStackTrace();\n        return false;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public static Boolean ExportDB(String DATABASE_NAME , String packageName , String folderName){\n    //DATABASE_NAME including \".db\" at the end like \"mayApp.db\"\n    String DBName = DATABASE_NAME.substring(0, DATABASE_NAME.length() - 3);\n    File data = Environment.getDataDirectory();\n    FileChannel source=null;\n    FileChannel destination=null;\n    String currentDBPath = \"/data/\"+ packageName +\"/databases/\"+DATABASE_NAME; // getting app db path\n\n    File sd = Environment.getExternalStorageDirectory(); // getting phone SD card path\n    String backupPath = sd.getAbsolutePath() + folderName; // if you want to set backup in specific folder name\n        /* be careful , foldername must initial like this : \"/myFolder\" . dont forget \"/\" at begin of folder name\n            you could define foldername like this : \"/myOutterFolder/MyInnerFolder\" and so on ...\n        */\n    File dir = new File(backupPath);\n    if(!dir.exists()) // if there was no folder at this path , it create it .\n    {\n        dir.mkdirs();\n    }\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd_HH-mm-ss\");\n    Date date = new Date();\n        /* use date including file name for arrange them and preventing to make file with the same*/\n    File currentDB = new File(data, currentDBPath);\n    File backupDB = new File(backupPath, DBName +\"(\"+ dateFormat.format(date)+\").db\");\n    try {\n        if (currentDB.exists() \u0026\u0026 !backupDB.exists()) {\n            source = new FileInputStream(currentDB).getChannel();\n            destination = new FileOutputStream(backupDB).getChannel();\n            destination.transferFrom(source, 0, source.size());\n            source.close();\n            destination.close();\n            return true;\n        }\n        return false;\n    } catch(IOException e) {\n        e.printStackTrace();\n        return false;\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550444554927,
        "id": "bbe0bb82-2a2e-4c1c-b7df-54941bf08f15",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550444554927,
        "parent_id": "1267e4c3-086c-42dd-bbb2-416cd3c01eef",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "call this method this way :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "call this method this way :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550444554928,
        "id": "d797214b-aafb-43ad-9c1c-38bdf3dcb14e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550444554928,
        "parent_id": "1267e4c3-086c-42dd-bbb2-416cd3c01eef",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "ExportDB(“myDB.db”,“com.example.exam”,“/myFolder”);"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "ExportDB(“myDB.db”,“com.example.exam”,“/myFolder”);"
          }
        ]
      }
    ],
    "title": "Save Database on SD Card Backup DB on SD",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}