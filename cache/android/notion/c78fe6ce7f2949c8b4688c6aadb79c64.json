{
  "ID": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
  "Root": {
    "alive": true,
    "content": [
      "630e9633-8f26-4e16-b5ad-87f4fb4e6bee",
      "773f30be-2539-430f-abfc-3ff67e06c5d4",
      "4b25ec5d-72f5-4636-8482-0f07b64b94b4",
      "84e97d56-f83a-4ad9-a9d4-30e43dd1d39b",
      "37addd34-5813-4dcf-a476-7c7edbfbf1e7",
      "587ec474-2872-4dc5-88ce-d37936b8683f",
      "0fb48b93-2041-4fc0-b230-6d8aefd564a3",
      "0de1bf6c-e5e8-421c-8d2d-331e0e4c0204",
      "c4c80f71-db09-4ae4-b98f-31300600694a",
      "38fbd386-6f6a-40f5-9a6a-ee82795a5e2f",
      "845a379f-6e45-4e3d-b665-4dcc4dec62e5",
      "a5725b11-73a9-432a-91e6-7da5ad69f2a9",
      "b00ccbd4-2404-4c4f-a4a7-a88134482862",
      "e046f03a-c32b-49a5-950a-08e9ea70e240",
      "6dcedecb-7461-4ebd-a397-79449c24dee0",
      "663e21fe-ad33-454e-ad66-94818dd225e0",
      "e0cdd9ca-7a1f-46b1-9808-d8ee5a068f96",
      "d684c7a2-5583-4466-91b0-a94fce417e46",
      "25dc0bf0-22cc-4c64-9fb0-f8906c407809",
      "a237656e-be8c-4d42-9b4b-8cce345093b9",
      "e1daed1b-0789-4b93-a295-4777cffb60ae",
      "9d0c897e-ec9a-4c45-9c38-807b0a06de7d",
      "304ffbe7-11f3-49c3-ae59-e6260bdb4f10",
      "f83d1fe7-be20-466a-a67a-4335af66ac8c",
      "026d1250-ff08-4069-844e-c5f771cf89d9",
      "c2252343-b275-49ac-b431-3f833b25cd1f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550448165961,
    "id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550448165961,
    "parent_id": "199c82a7-fe1c-4163-8405-c17464a5f76c",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 Consumable In-app Purchases"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165953,
        "id": "630e9633-8f26-4e16-b5ad-87f4fb4e6bee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165953,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consumable Managed Products are products that can be bought multiple times such as in-game currency, game lives, power-ups, etc."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consumable Managed Products are products that can be bought multiple times such as in-game currency, game lives, power-ups, etc."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165955,
        "id": "773f30be-2539-430f-abfc-3ff67e06c5d4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165955,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example, we are going to implement 4 different consumable "
            ],
            [
              "managed products",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\"item1\", \"item2\", \"item3\", \"item4\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example, we are going to implement 4 different consumable "
          },
          {
            "Text": "managed products",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "\"item1\", \"item2\", \"item3\", \"item4\"",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165956,
        "id": "4b25ec5d-72f5-4636-8482-0f07b64b94b4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165956,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Steps in summary:"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Steps in summary:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165956,
        "id": "84e97d56-f83a-4ad9-a9d4-30e43dd1d39b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165956,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Add the In-app Billing library to your project (AIDL File)."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Add the In-app Billing library to your project (AIDL File)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165956,
        "id": "37addd34-5813-4dcf-a476-7c7edbfbf1e7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165956,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Add the required permission in "
            ],
            [
              "AndroidManifest.xml",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " file."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Add the required permission in "
          },
          {
            "Text": "AndroidManifest.xml",
            "AttrFlags": 2
          },
          {
            "Text": " file."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165956,
        "id": "587ec474-2872-4dc5-88ce-d37936b8683f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165956,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Deploy a signed apk to Google Developers Console."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Deploy a signed apk to Google Developers Console."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165957,
        "id": "0fb48b93-2041-4fc0-b230-6d8aefd564a3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165957,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Define your products."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Define your products."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165957,
        "id": "0de1bf6c-e5e8-421c-8d2d-331e0e4c0204",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165957,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Implement the code."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Implement the code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165957,
        "id": "c4c80f71-db09-4ae4-b98f-31300600694a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165957,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Test In-app Billing (optional)."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Test In-app Billing (optional)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165957,
        "id": "38fbd386-6f6a-40f5-9a6a-ee82795a5e2f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165957,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Step 1:"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Step 1:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165959,
        "id": "845a379f-6e45-4e3d-b665-4dcc4dec62e5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165959,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "First of all, we will need to add the AIDL file to your project as clearly explained in Google Documentation "
            ],
            [
              "here",
              [
                [
                  "a",
                  "https://developer.android.com/google/play/billing/billing_integrate.html#billing-add-aidl"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "First of all, we will need to add the AIDL file to your project as clearly explained in Google Documentation "
          },
          {
            "Text": "here",
            "Link": "https://developer.android.com/google/play/billing/billing_integrate.html#billing-add-aidl"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165959,
        "id": "a5725b11-73a9-432a-91e6-7da5ad69f2a9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165959,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "IInAppBillingService.aidl",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is an Android Interface Definition Language (AIDL) file that defines the interface to the In-app Billing Version 3 service. You will use this interface to make billing requests by invoking IPC method calls."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "IInAppBillingService.aidl",
            "AttrFlags": 2
          },
          {
            "Text": " is an Android Interface Definition Language (AIDL) file that defines the interface to the In-app Billing Version 3 service. You will use this interface to make billing requests by invoking IPC method calls."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165959,
        "id": "b00ccbd4-2404-4c4f-a4a7-a88134482862",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165959,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Step 2:"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Step 2:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165959,
        "id": "e046f03a-c32b-49a5-950a-08e9ea70e240",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165959,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "After adding the AIDL file, add BILLING permission in "
            ],
            [
              "AndroidManifest.xml",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "After adding the AIDL file, add BILLING permission in "
          },
          {
            "Text": "AndroidManifest.xml",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165959,
        "id": "6dcedecb-7461-4ebd-a397-79449c24dee0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165959,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003c!-- Required permission for implementing In-app Billing --\u003e\n\u003cuses-permission android:name=\"com.android.vending.BILLING\" /\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003c!-- Required permission for implementing In-app Billing --\u003e\n\u003cuses-permission android:name=\"com.android.vending.BILLING\" /\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165960,
        "id": "663e21fe-ad33-454e-ad66-94818dd225e0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165960,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Step 3:"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Step 3:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165960,
        "id": "e0cdd9ca-7a1f-46b1-9808-d8ee5a068f96",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165960,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Generate a signed apk, and upload it to Google Developers Console. This is required so that we can start defining our in-app products there."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Generate a signed apk, and upload it to Google Developers Console. This is required so that we can start defining our in-app products there."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165960,
        "id": "d684c7a2-5583-4466-91b0-a94fce417e46",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165960,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Step 4:"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Step 4:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165960,
        "id": "25dc0bf0-22cc-4c64-9fb0-f8906c407809",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165960,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Define all your products with different productID, and set a price to each one of them. There are 2 types of products (Managed Products and Subscriptions). As we already said, we are going to implement 4 different consumable "
            ],
            [
              "managed products",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\"item1\", \"item2\", \"item3\", \"item4\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Define all your products with different productID, and set a price to each one of them. There are 2 types of products (Managed Products and Subscriptions). As we already said, we are going to implement 4 different consumable "
          },
          {
            "Text": "managed products",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "\"item1\", \"item2\", \"item3\", \"item4\"",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165960,
        "id": "a237656e-be8c-4d42-9b4b-8cce345093b9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165960,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Step 5:"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Step 5:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165960,
        "id": "e1daed1b-0789-4b93-a295-4777cffb60ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165960,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "After doing all the steps above, you are now ready to start implementing the code itself in your own activity."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "After doing all the steps above, you are now ready to start implementing the code itself in your own activity."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165960,
        "id": "9d0c897e-ec9a-4c45-9c38-807b0a06de7d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165960,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "MainActivity:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "MainActivity:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165960,
        "id": "304ffbe7-11f3-49c3-ae59-e6260bdb4f10",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165960,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class MainActivity extends Activity {\n\n    IInAppBillingService inAppBillingService;\n    ServiceConnection serviceConnection;\n\n    // productID for each item. You should define them in the Google Developers Console.\n    final String item1 = \"item1\";\n    final String item2 = \"item2\";\n    final String item3 = \"item3\";\n    final String item4 = \"item4\";\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        // Instantiate the views according to your layout file.\n        final Button buy1 = (Button) findViewById(R.id.buy1);\n        final Button buy2 = (Button) findViewById(R.id.buy2);\n        final Button buy3 = (Button) findViewById(R.id.buy3);\n        final Button buy4 = (Button) findViewById(R.id.buy4);\n\n        // setOnClickListener() for each button.\n        // buyItem() here is the method that we will implement to launch the PurchaseFlow.\n        buy1.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                buyItem(item1);\n            }\n        });\n\n        buy2.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                buyItem(item2);\n            }\n        });\n\n        buy3.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                buyItem(item3);\n            }\n        });\n\n        buy4.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                buyItem(item4);\n            }\n        });\n\n        // Attach the service connection.\n        serviceConnection = new ServiceConnection() {\n            @Override\n            public void onServiceDisconnected(ComponentName name) {\n                inAppBillingService = null;\n            }\n\n            @Override\n            public void onServiceConnected(ComponentName name, IBinder service) {\n                inAppBillingService = IInAppBillingService.Stub.asInterface(service);\n            }\n        };\n\n        // Bind the service.\n        Intent serviceIntent = new Intent(\"com.android.vending.billing.InAppBillingService.BIND\");\n        serviceIntent.setPackage(\"com.android.vending\");\n        bindService(serviceIntent, serviceConnection, BIND_AUTO_CREATE);\n\n        // Get the price of each product, and set the price as text to\n        // each button so that the user knows the price of each item.\n        if (inAppBillingService != null) {\n            // Attention: You need to create a new thread here because\n            // getSkuDetails() triggers a network request, which can\n            // cause lag to your app if it was called from the main thread.\n            Thread thread = new Thread(new Runnable() {\n                @Override\n                public void run() {\n                    ArrayList\u003cString\u003e skuList = new ArrayList\u003c\u003e();\n                    skuList.add(item1);\n                    skuList.add(item2);\n                    skuList.add(item3);\n                    skuList.add(item4);\n                    Bundle querySkus = new Bundle();\n                    querySkus.putStringArrayList(\"ITEM_ID_LIST\", skuList);\n\n                    try {\n                        Bundle skuDetails = inAppBillingService.getSkuDetails(3, getPackageName(), \"inapp\", querySkus);\n                        int response = skuDetails.getInt(\"RESPONSE_CODE\");\n\n                        if (response == 0) {\n                            ArrayList\u003cString\u003e responseList = skuDetails.getStringArrayList(\"DETAILS_LIST\");\n\n                            for (String thisResponse : responseList) {\n                                JSONObject object = new JSONObject(thisResponse);\n                                String sku = object.getString(\"productId\");\n                                String price = object.getString(\"price\");\n\n                                switch (sku) {\n                                    case item1:\n                                        buy1.setText(price);\n                                        break;\n                                    case item2:\n                                        buy2.setText(price);\n                                        break;\n                                    case item3:\n                                        buy3.setText(price);\n                                        break;\n                                    case item4:\n                                        buy4.setText(price);\n                                        break;\n                                }\n                            }\n                        }\n                    } catch (RemoteException | JSONException e) {\n                        e.printStackTrace();\n                    }\n                }\n            });\n            thread.start();\n        }\n    }\n\n    // Launch the PurchaseFlow passing the productID of the item the user wants to buy as a parameter.\n    private void buyItem(String productID) {\n        if (inAppBillingService != null) {\n            try {\n                Bundle buyIntentBundle = inAppBillingService.getBuyIntent(3, getPackageName(), productID, \"inapp\", \"bGoa+V7g/yqDXvKRqq+JTFn4uQZbPiQJo4pf9RzJ\");\n                PendingIntent pendingIntent = buyIntentBundle.getParcelable(\"BUY_INTENT\");\n                startIntentSenderForResult(pendingIntent.getIntentSender(), 1003, new Intent(), 0, 0, 0);\n            } catch (RemoteException | IntentSender.SendIntentException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    // Unbind the service in onDestroy(). If you don’t unbind, the open\n    // service connection could cause your device’s performance to degrade.\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n        if (inAppBillingService != null) {\n            unbindService(serviceConnection);\n        }\n    }\n\n    // Check here if the in-app purchase was successful or not. If it was successful,\n    // then consume the product, and let the app make the required changes.\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n\n        if (requestCode == 1003 \u0026\u0026 resultCode == RESULT_OK) {\n\n            final String purchaseData = data.getStringExtra(\"INAPP_PURCHASE_DATA\");\n\n            // Attention: You need to create a new thread here because\n            // consumePurchase() triggers a network request, which can\n            // cause lag to your app if it was called from the main thread.\n            Thread thread = new Thread(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        JSONObject jo = new JSONObject(purchaseData);\n                        // Get the productID of the purchased item.\n                        String sku = jo.getString(\"productId\");\n                        String productName = null;\n\n                        // increaseCoins() here is a method used as an example in a game to\n                        // increase the in-game currency if the purchase was successful.\n                        // You should implement your own code here, and let the app apply\n                        // the required changes after the purchase was successful.\n                        switch (sku) {\n                            case item1:\n                                productName = \"Item 1\";\n                                increaseCoins(2000);\n                                break;\n                            case item2:\n                                productName = \"Item 2\";\n                                increaseCoins(8000);\n                                break;\n                            case item3:\n                                productName = \"Item 3\";\n                                increaseCoins(18000);\n                                break;\n                            case item4:\n                                productName = \"Item 4\";\n                                increaseCoins(30000);\n                                break;\n                        }\n\n                        // Consume the purchase so that the user is able to purchase the same product again.\n                        inAppBillingService.consumePurchase(3, getPackageName(), jo.getString(\"purchaseToken\"));\n                        Toast.makeText(MainActivity.this, productName + \" is successfully purchased. Excellent choice, master!\", Toast.LENGTH_LONG).show();\n                    } catch (JSONException | RemoteException e) {\n                        Toast.makeText(MainActivity.this, \"Failed to parse purchase data.\", Toast.LENGTH_LONG).show();\n                        e.printStackTrace();\n                    }\n                }\n            });\n            thread.start();\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class MainActivity extends Activity {\n\n    IInAppBillingService inAppBillingService;\n    ServiceConnection serviceConnection;\n\n    // productID for each item. You should define them in the Google Developers Console.\n    final String item1 = \"item1\";\n    final String item2 = \"item2\";\n    final String item3 = \"item3\";\n    final String item4 = \"item4\";\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        // Instantiate the views according to your layout file.\n        final Button buy1 = (Button) findViewById(R.id.buy1);\n        final Button buy2 = (Button) findViewById(R.id.buy2);\n        final Button buy3 = (Button) findViewById(R.id.buy3);\n        final Button buy4 = (Button) findViewById(R.id.buy4);\n\n        // setOnClickListener() for each button.\n        // buyItem() here is the method that we will implement to launch the PurchaseFlow.\n        buy1.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                buyItem(item1);\n            }\n        });\n\n        buy2.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                buyItem(item2);\n            }\n        });\n\n        buy3.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                buyItem(item3);\n            }\n        });\n\n        buy4.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                buyItem(item4);\n            }\n        });\n\n        // Attach the service connection.\n        serviceConnection = new ServiceConnection() {\n            @Override\n            public void onServiceDisconnected(ComponentName name) {\n                inAppBillingService = null;\n            }\n\n            @Override\n            public void onServiceConnected(ComponentName name, IBinder service) {\n                inAppBillingService = IInAppBillingService.Stub.asInterface(service);\n            }\n        };\n\n        // Bind the service.\n        Intent serviceIntent = new Intent(\"com.android.vending.billing.InAppBillingService.BIND\");\n        serviceIntent.setPackage(\"com.android.vending\");\n        bindService(serviceIntent, serviceConnection, BIND_AUTO_CREATE);\n\n        // Get the price of each product, and set the price as text to\n        // each button so that the user knows the price of each item.\n        if (inAppBillingService != null) {\n            // Attention: You need to create a new thread here because\n            // getSkuDetails() triggers a network request, which can\n            // cause lag to your app if it was called from the main thread.\n            Thread thread = new Thread(new Runnable() {\n                @Override\n                public void run() {\n                    ArrayList\u003cString\u003e skuList = new ArrayList\u003c\u003e();\n                    skuList.add(item1);\n                    skuList.add(item2);\n                    skuList.add(item3);\n                    skuList.add(item4);\n                    Bundle querySkus = new Bundle();\n                    querySkus.putStringArrayList(\"ITEM_ID_LIST\", skuList);\n\n                    try {\n                        Bundle skuDetails = inAppBillingService.getSkuDetails(3, getPackageName(), \"inapp\", querySkus);\n                        int response = skuDetails.getInt(\"RESPONSE_CODE\");\n\n                        if (response == 0) {\n                            ArrayList\u003cString\u003e responseList = skuDetails.getStringArrayList(\"DETAILS_LIST\");\n\n                            for (String thisResponse : responseList) {\n                                JSONObject object = new JSONObject(thisResponse);\n                                String sku = object.getString(\"productId\");\n                                String price = object.getString(\"price\");\n\n                                switch (sku) {\n                                    case item1:\n                                        buy1.setText(price);\n                                        break;\n                                    case item2:\n                                        buy2.setText(price);\n                                        break;\n                                    case item3:\n                                        buy3.setText(price);\n                                        break;\n                                    case item4:\n                                        buy4.setText(price);\n                                        break;\n                                }\n                            }\n                        }\n                    } catch (RemoteException | JSONException e) {\n                        e.printStackTrace();\n                    }\n                }\n            });\n            thread.start();\n        }\n    }\n\n    // Launch the PurchaseFlow passing the productID of the item the user wants to buy as a parameter.\n    private void buyItem(String productID) {\n        if (inAppBillingService != null) {\n            try {\n                Bundle buyIntentBundle = inAppBillingService.getBuyIntent(3, getPackageName(), productID, \"inapp\", \"bGoa+V7g/yqDXvKRqq+JTFn4uQZbPiQJo4pf9RzJ\");\n                PendingIntent pendingIntent = buyIntentBundle.getParcelable(\"BUY_INTENT\");\n                startIntentSenderForResult(pendingIntent.getIntentSender(), 1003, new Intent(), 0, 0, 0);\n            } catch (RemoteException | IntentSender.SendIntentException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    // Unbind the service in onDestroy(). If you don’t unbind, the open\n    // service connection could cause your device’s performance to degrade.\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n        if (inAppBillingService != null) {\n            unbindService(serviceConnection);\n        }\n    }\n\n    // Check here if the in-app purchase was successful or not. If it was successful,\n    // then consume the product, and let the app make the required changes.\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n\n        if (requestCode == 1003 \u0026\u0026 resultCode == RESULT_OK) {\n\n            final String purchaseData = data.getStringExtra(\"INAPP_PURCHASE_DATA\");\n\n            // Attention: You need to create a new thread here because\n            // consumePurchase() triggers a network request, which can\n            // cause lag to your app if it was called from the main thread.\n            Thread thread = new Thread(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        JSONObject jo = new JSONObject(purchaseData);\n                        // Get the productID of the purchased item.\n                        String sku = jo.getString(\"productId\");\n                        String productName = null;\n\n                        // increaseCoins() here is a method used as an example in a game to\n                        // increase the in-game currency if the purchase was successful.\n                        // You should implement your own code here, and let the app apply\n                        // the required changes after the purchase was successful.\n                        switch (sku) {\n                            case item1:\n                                productName = \"Item 1\";\n                                increaseCoins(2000);\n                                break;\n                            case item2:\n                                productName = \"Item 2\";\n                                increaseCoins(8000);\n                                break;\n                            case item3:\n                                productName = \"Item 3\";\n                                increaseCoins(18000);\n                                break;\n                            case item4:\n                                productName = \"Item 4\";\n                                increaseCoins(30000);\n                                break;\n                        }\n\n                        // Consume the purchase so that the user is able to purchase the same product again.\n                        inAppBillingService.consumePurchase(3, getPackageName(), jo.getString(\"purchaseToken\"));\n                        Toast.makeText(MainActivity.this, productName + \" is successfully purchased. Excellent choice, master!\", Toast.LENGTH_LONG).show();\n                    } catch (JSONException | RemoteException e) {\n                        Toast.makeText(MainActivity.this, \"Failed to parse purchase data.\", Toast.LENGTH_LONG).show();\n                        e.printStackTrace();\n                    }\n                }\n            });\n            thread.start();\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165960,
        "id": "f83d1fe7-be20-466a-a67a-4335af66ac8c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165960,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Step 6:"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Step 6:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165961,
        "id": "026d1250-ff08-4069-844e-c5f771cf89d9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165961,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "After implementing the code, you can test it by deploying your apk to beta/alpha channel, and let other users test the code for you. However, real in-app purchases can’t be made while in testing mode. You have to publish your app/game first to Play Store so that all the products are fully activated."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "After implementing the code, you can test it by deploying your apk to beta/alpha channel, and let other users test the code for you. However, real in-app purchases can’t be made while in testing mode. You have to publish your app/game first to Play Store so that all the products are fully activated."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550448165961,
        "id": "c2252343-b275-49ac-b431-3f833b25cd1f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550448165961,
        "parent_id": "c78fe6ce-7f29-49c8-b468-8c6aadb79c64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "More info on testing In-app Billing can be found "
            ],
            [
              "here",
              [
                [
                  "a",
                  "https://developer.android.com/google/play/billing/billing_testing.html"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "More info on testing In-app Billing can be found "
          },
          {
            "Text": "here",
            "Link": "https://developer.android.com/google/play/billing/billing_testing.html"
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "010 Consumable In-app Purchases"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}