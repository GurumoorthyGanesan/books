{
  "ID": "76fe2ad4-fddd-4479-a5b9-9cf9b0e512ca",
  "Root": {
    "alive": true,
    "content": [
      "9fc1060d-d0e9-4fe8-98aa-50136780213b",
      "105ead11-5b4a-4a20-82b0-b9672b38c829",
      "b5a8668d-985b-48c2-949b-fad576b7049e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550461149307,
    "id": "76fe2ad4-fddd-4479-a5b9-9cf9b0e512ca",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550461149307,
    "parent_id": "6f2fa7ab-2d05-4439-ac96-63b175867e14",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "050 Computing the Nth power of a number"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461149304,
        "id": "9fc1060d-d0e9-4fe8-98aa-50136780213b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461149304,
        "parent_id": "76fe2ad4-fddd-4479-a5b9-9cf9b0e512ca",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following method computes the value of "
            ],
            [
              "num",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " raised to the power of "
            ],
            [
              "exp",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " using recursion:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following method computes the value of "
          },
          {
            "Text": "num",
            "AttrFlags": 2
          },
          {
            "Text": " raised to the power of "
          },
          {
            "Text": "exp",
            "AttrFlags": 2
          },
          {
            "Text": " using recursion:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461149307,
        "id": "105ead11-5b4a-4a20-82b0-b9672b38c829",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461149307,
        "parent_id": "76fe2ad4-fddd-4479-a5b9-9cf9b0e512ca",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public long power(final int num, final int exp) {\n    if (exp == 0) {\n        return 1;\n    }\n    if (exp == 1) {\n        return num;\n    }\n    return num * power(num, exp - 1);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public long power(final int num, final int exp) {\n    if (exp == 0) {\n        return 1;\n    }\n    if (exp == 1) {\n        return num;\n    }\n    return num * power(num, exp - 1);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461149307,
        "id": "b5a8668d-985b-48c2-949b-fad576b7049e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461149307,
        "parent_id": "76fe2ad4-fddd-4479-a5b9-9cf9b0e512ca",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This illustrates the principles mentioned above: the recursive method implements a base case (two cases, n = 0 and n = 1) that terminates the recursion, and a recursive case that calls the method again. This method is O(N) and can be reduced to a simple loop using tail-call optimization."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This illustrates the principles mentioned above: the recursive method implements a base case (two cases, n = 0 and n = 1) that terminates the recursion, and a recursive case that calls the method again. This method is O(N) and can be reduced to a simple loop using tail-call optimization."
          }
        ]
      }
    ],
    "title": "050 Computing the Nth power of a number"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}