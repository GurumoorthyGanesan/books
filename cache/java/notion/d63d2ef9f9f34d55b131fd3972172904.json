{
  "ID": "d63d2ef9-f9f3-4d55-b131-fd3972172904",
  "Root": {
    "alive": true,
    "content": [
      "87b319e4-8067-4941-a1fb-0e05b9f39027",
      "dd8bfad9-fb06-4fa5-8d34-48e9c0ac1b1a",
      "ed25fa38-3aa5-4de8-82f8-1f321b1fd13d",
      "0c623986-d999-41bc-bd06-d33059a55de6",
      "07d2c3a0-4460-4b3a-b025-f7e7220e1934",
      "205cd87d-2d25-4364-a74f-a094ba6df10b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550461138168,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d63d2ef9-f9f3-4d55-b131-fd3972172904",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551756794078,
    "parent_id": "c5846508-be18-4fc1-871b-a4ccbf7a323f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Select random numbers without duplicates"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461138165,
        "id": "87b319e4-8067-4941-a1fb-0e05b9f39027",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461138165,
        "parent_id": "d63d2ef9-f9f3-4d55-b131-fd3972172904",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "/**\n * returns a array of random numbers with no duplicates\n * @param range the range of possible numbers for ex. if 100 then it can be anywhere from 1-100\n * @param length the length of the array of random numbers\n * @return array of random numbers with no duplicates.\n */\npublic static int[] getRandomNumbersWithNoDuplicates(int range, int length){\n    if (length\u003crange){\n        // this is where all the random numbers\n        int[] randomNumbers = new int[length];\n        \n        // loop through all the random numbers to set them\n        for (int q = 0; q \u003c randomNumbers.length; q++){\n            \n            // get the remaining possible numbers\n            int remainingNumbers = range-q;\n            \n            // get a new random number from the remainingNumbers\n            int newRandSpot = (int) (Math.random()*remainingNumbers);\n            \n            newRandSpot++;\n            \n            // loop through all the possible numbers\n            for (int t = 1; t \u003c range+1; t++){\n                \n                // check to see if this number has already been taken\n                boolean taken = false;\n                for (int number : randomNumbers){\n                    if (t==number){\n                        taken = true;\n                        break;\n                    }\n                }\n                \n                // if it hasnt been taken then remove one from the spots\n                if (!taken){\n                    newRandSpot--;\n                    \n                    // if we have gone though all the spots then set the value\n                    if (newRandSpot==0){\n                        randomNumbers[q] = t;\n                    }\n                }\n            }\n        }\n        return randomNumbers;\n    } else {\n        // invalid can't have a length larger then the range of possible numbers\n    }\n    return null;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "/**\n * returns a array of random numbers with no duplicates\n * @param range the range of possible numbers for ex. if 100 then it can be anywhere from 1-100\n * @param length the length of the array of random numbers\n * @return array of random numbers with no duplicates.\n */\npublic static int[] getRandomNumbersWithNoDuplicates(int range, int length){\n    if (length\u003crange){\n        // this is where all the random numbers\n        int[] randomNumbers = new int[length];\n        \n        // loop through all the random numbers to set them\n        for (int q = 0; q \u003c randomNumbers.length; q++){\n            \n            // get the remaining possible numbers\n            int remainingNumbers = range-q;\n            \n            // get a new random number from the remainingNumbers\n            int newRandSpot = (int) (Math.random()*remainingNumbers);\n            \n            newRandSpot++;\n            \n            // loop through all the possible numbers\n            for (int t = 1; t \u003c range+1; t++){\n                \n                // check to see if this number has already been taken\n                boolean taken = false;\n                for (int number : randomNumbers){\n                    if (t==number){\n                        taken = true;\n                        break;\n                    }\n                }\n                \n                // if it hasnt been taken then remove one from the spots\n                if (!taken){\n                    newRandSpot--;\n                    \n                    // if we have gone though all the spots then set the value\n                    if (newRandSpot==0){\n                        randomNumbers[q] = t;\n                    }\n                }\n            }\n        }\n        return randomNumbers;\n    } else {\n        // invalid can't have a length larger then the range of possible numbers\n    }\n    return null;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461138167,
        "id": "dd8bfad9-fb06-4fa5-8d34-48e9c0ac1b1a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461138167,
        "parent_id": "d63d2ef9-f9f3-4d55-b131-fd3972172904",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461138168,
        "id": "ed25fa38-3aa5-4de8-82f8-1f321b1fd13d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461138168,
        "parent_id": "d63d2ef9-f9f3-4d55-b131-fd3972172904",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The method works by looping though an array that has the size of the requested length and finds the remaining length of possible numbers. It sets a random number of those possible numbers "
            ],
            [
              "newRandSpot",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and finds that number within the non taken number left. It does this by looping through the range and checking to see if that number has already been taken."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The method works by looping though an array that has the size of the requested length and finds the remaining length of possible numbers. It sets a random number of those possible numbers "
          },
          {
            "Text": "newRandSpot",
            "AttrFlags": 2
          },
          {
            "Text": " and finds that number within the non taken number left. It does this by looping through the range and checking to see if that number has already been taken."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461138168,
        "id": "0c623986-d999-41bc-bd06-d33059a55de6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461138168,
        "parent_id": "d63d2ef9-f9f3-4d55-b131-fd3972172904",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461138168,
        "id": "07d2c3a0-4460-4b3a-b025-f7e7220e1934",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461138168,
        "parent_id": "d63d2ef9-f9f3-4d55-b131-fd3972172904",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example if the range is 5 and the length is 3 and we have already chosen the number 2. Then we have 4 remaining numbers so we get a random number between 1 and 4 and we loop through the range(5) skipping over any numbers that we have already used(2)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example if the range is 5 and the length is 3 and we have already chosen the number 2. Then we have 4 remaining numbers so we get a random number between 1 and 4 and we loop through the range(5) skipping over any numbers that we have already used(2)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461138168,
        "id": "205cd87d-2d25-4364-a74f-a094ba6df10b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461138168,
        "parent_id": "d63d2ef9-f9f3-4d55-b131-fd3972172904",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now letâ€™s say the next number chosen between 1 \u0026 4 is 3. On the first loop we get 1 which has not yet been taken so we can remove 1 from 3 making it 2. Now on the second loop we get 2 which has been taken so we do nothing. We follow this pattern until we get to 4 where once we remove 1 it becomes 0 so we set the new randomNumber to 4."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now letâ€™s say the next number chosen between 1 \u0026 4 is 3. On the first loop we get 1 which has not yet been taken so we can remove 1 from 3 making it 2. Now on the second loop we get 2 which has been taken so we do nothing. We follow this pattern until we get to 4 where once we remove 1 it becomes 0 so we set the new randomNumber to 4."
          }
        ]
      }
    ],
    "title": "Select random numbers without duplicates",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}