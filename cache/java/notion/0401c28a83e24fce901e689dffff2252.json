{
  "ID": "0401c28a-83e2-4fce-901e-689dffff2252",
  "Root": {
    "alive": true,
    "content": [
      "f6b49627-a7b9-4ce4-941f-31794291df82",
      "e31da3d0-23e7-4ffe-bd4b-13231f73a85c",
      "ebccf496-ca4d-454f-a9b0-92d1f6c999bb"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550518386064,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "0401c28a-83e2-4fce-901e-689dffff2252",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550518386064,
    "parent_id": "cd39ba46-bf9a-48ed-82fa-26244685c82f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Pitfall of Auto-Unboxing Null Objects into Primitives"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518386054,
        "id": "f6b49627-a7b9-4ce4-941f-31794291df82",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518386054,
        "parent_id": "0401c28a-83e2-4fce-901e-689dffff2252",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Foobar {\n    public static void main(String[] args) {\n\n        // example: \n        Boolean ignore = null;\n        if (ignore == false) {\n            System.out.println(\"Do not ignore!\");\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Foobar {\n    public static void main(String[] args) {\n\n        // example: \n        Boolean ignore = null;\n        if (ignore == false) {\n            System.out.println(\"Do not ignore!\");\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518386063,
        "id": "e31da3d0-23e7-4ffe-bd4b-13231f73a85c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518386063,
        "parent_id": "0401c28a-83e2-4fce-901e-689dffff2252",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The pitfall here is that "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is compared to "
            ],
            [
              "false",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Since we’re comparing a primitive "
            ],
            [
              "boolean",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " against a "
            ],
            [
              "Boolean",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", Java attempts to "
            ],
            [
              "unbox",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " the the "
            ],
            [
              "Boolean",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "Object",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " into a primitive equivalent, ready for comparison. However, since that value is "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", a "
            ],
            [
              "NullPointerException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is thrown."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The pitfall here is that "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": " is compared to "
          },
          {
            "Text": "false",
            "AttrFlags": 2
          },
          {
            "Text": ". Since we’re comparing a primitive "
          },
          {
            "Text": "boolean",
            "AttrFlags": 2
          },
          {
            "Text": " against a "
          },
          {
            "Text": "Boolean",
            "AttrFlags": 2
          },
          {
            "Text": ", Java attempts to "
          },
          {
            "Text": "unbox",
            "AttrFlags": 4
          },
          {
            "Text": " the the "
          },
          {
            "Text": "Boolean",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "Object",
            "AttrFlags": 2
          },
          {
            "Text": " into a primitive equivalent, ready for comparison. However, since that value is "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": ", a "
          },
          {
            "Text": "NullPointerException",
            "AttrFlags": 2
          },
          {
            "Text": " is thrown."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518386064,
        "id": "ebccf496-ca4d-454f-a9b0-92d1f6c999bb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518386064,
        "parent_id": "0401c28a-83e2-4fce-901e-689dffff2252",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Java is incapable of comparing primitive types against "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " values, which causes a "
            ],
            [
              "NullPointerException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " at runtime. Consider the primitive case of the condition "
            ],
            [
              "false == null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "; this would generate a "
            ],
            [
              "compile time",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " error "
            ],
            [
              "incomparable types: int and \u003cnull\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Java is incapable of comparing primitive types against "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": " values, which causes a "
          },
          {
            "Text": "NullPointerException",
            "AttrFlags": 2
          },
          {
            "Text": " at runtime. Consider the primitive case of the condition "
          },
          {
            "Text": "false == null",
            "AttrFlags": 2
          },
          {
            "Text": "; this would generate a "
          },
          {
            "Text": "compile time",
            "AttrFlags": 4
          },
          {
            "Text": " error "
          },
          {
            "Text": "incomparable types: int and \u003cnull\u003e",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Pitfall of Auto-Unboxing Null Objects into Primitives",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}