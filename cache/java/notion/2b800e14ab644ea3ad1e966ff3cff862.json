{
  "ID": "2b800e14-ab64-4ea3-ad1e-966ff3cff862",
  "Root": {
    "alive": true,
    "content": [
      "834fecc2-129f-4931-b1fe-6e3a28d7586f",
      "f0431f9f-b79c-4031-a113-332fb1769a60",
      "69d6c3f6-628e-4c80-a010-3670f28190cf",
      "9ba2f75a-a06a-4416-9182-9c7285b1065d",
      "4d60ed83-09e9-4dfb-8149-ded6d2f19157",
      "745dde67-cbe7-4074-aa22-25dd85600c1f",
      "2925efbc-2e26-4440-8081-b80ed390353f",
      "117c5134-c723-40a0-9b6f-490bfc2833a6",
      "cb222d16-2b01-4f8e-8269-7507df1f5035",
      "29de180d-3fb2-4f36-a2e8-0e2d4b670b27",
      "74ec01ce-b664-4e98-86f2-4b6e339258a3",
      "57e49c99-9843-4b4d-9320-339dce03aef9",
      "6f6b437b-cc58-45e3-9551-f8d654f16f8a",
      "736bc627-e781-4e39-8412-4a2c5194e299"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550518444477,
    "id": "2b800e14-ab64-4ea3-ad1e-966ff3cff862",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550518444478,
    "parent_id": "ac647426-fa05-4ba9-92e4-2f1b5e397608",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 Using Selector to wait for events example with OP CONNECT"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518444470,
        "id": "834fecc2-129f-4931-b1fe-6e3a28d7586f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518444470,
        "parent_id": "2b800e14-ab64-4ea3-ad1e-966ff3cff862",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "NIO appeared in Java 1.4 and introduced the concept of “Channels”, which are supposed to be faster than regular I/O. Network-wise, the "
            ],
            [
              "SelectableChannel",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/nio/channels/SelectableChannel.html"
                ]
              ]
            ],
            [
              " is the most interesting as it allows to monitor different states of the Channel. It works in a similar manner as the C "
            ],
            [
              "select()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " system call: we get woken-up when certain types of events occur:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "NIO appeared in Java 1.4 and introduced the concept of “Channels”, which are supposed to be faster than regular I/O. Network-wise, the "
          },
          {
            "Text": "SelectableChannel",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/nio/channels/SelectableChannel.html"
          },
          {
            "Text": " is the most interesting as it allows to monitor different states of the Channel. It works in a similar manner as the C "
          },
          {
            "Text": "select()",
            "AttrFlags": 2
          },
          {
            "Text": " system call: we get woken-up when certain types of events occur:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518444473,
        "id": "f0431f9f-b79c-4031-a113-332fb1769a60",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518444473,
        "parent_id": "2b800e14-ab64-4ea3-ad1e-966ff3cff862",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "connection received ("
            ],
            [
              "OP_ACCEPT",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "connection received ("
          },
          {
            "Text": "OP_ACCEPT",
            "AttrFlags": 2
          },
          {
            "Text": ")"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518444473,
        "id": "69d6c3f6-628e-4c80-a010-3670f28190cf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518444473,
        "parent_id": "2b800e14-ab64-4ea3-ad1e-966ff3cff862",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "connection realized ("
            ],
            [
              "OP_CONNECT",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "connection realized ("
          },
          {
            "Text": "OP_CONNECT",
            "AttrFlags": 2
          },
          {
            "Text": ")"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518444473,
        "id": "9ba2f75a-a06a-4416-9182-9c7285b1065d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518444473,
        "parent_id": "2b800e14-ab64-4ea3-ad1e-966ff3cff862",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "data available in read FIFO ("
            ],
            [
              "OP_READ",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "data available in read FIFO ("
          },
          {
            "Text": "OP_READ",
            "AttrFlags": 2
          },
          {
            "Text": ")"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518444474,
        "id": "4d60ed83-09e9-4dfb-8149-ded6d2f19157",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518444474,
        "parent_id": "2b800e14-ab64-4ea3-ad1e-966ff3cff862",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "data can be pushed to write FIFO ("
            ],
            [
              "OP_WRITE",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "data can be pushed to write FIFO ("
          },
          {
            "Text": "OP_WRITE",
            "AttrFlags": 2
          },
          {
            "Text": ")"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518444474,
        "id": "745dde67-cbe7-4074-aa22-25dd85600c1f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518444474,
        "parent_id": "2b800e14-ab64-4ea3-ad1e-966ff3cff862",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It allows for separation between "
            ],
            [
              "detecting",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " socket I/O (something can be read/written/…) and "
            ],
            [
              "performing",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " the I/O (read/write/…). Especially, all I/O detection can be done in a single thread for multiple sockets (clients), while performing I/O can be handled in a thread pool or anywhere else. That allows for an application to scale easily to the number of connected clients."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It allows for separation between "
          },
          {
            "Text": "detecting",
            "AttrFlags": 4
          },
          {
            "Text": " socket I/O (something can be read/written/…) and "
          },
          {
            "Text": "performing",
            "AttrFlags": 4
          },
          {
            "Text": " the I/O (read/write/…). Especially, all I/O detection can be done in a single thread for multiple sockets (clients), while performing I/O can be handled in a thread pool or anywhere else. That allows for an application to scale easily to the number of connected clients."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518444474,
        "id": "2925efbc-2e26-4440-8081-b80ed390353f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518444474,
        "parent_id": "2b800e14-ab64-4ea3-ad1e-966ff3cff862",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following example shows the basics:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following example shows the basics:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518444475,
        "id": "117c5134-c723-40a0-9b6f-490bfc2833a6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518444475,
        "parent_id": "2b800e14-ab64-4ea3-ad1e-966ff3cff862",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Create a "
            ],
            [
              "Selector",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/nio/channels/Selector.html"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Create a "
          },
          {
            "Text": "Selector",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/nio/channels/Selector.html"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518444476,
        "id": "cb222d16-2b01-4f8e-8269-7507df1f5035",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518444476,
        "parent_id": "2b800e14-ab64-4ea3-ad1e-966ff3cff862",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Create a "
            ],
            [
              "SocketChannel",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/nio/channels/SocketChannel.html"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Create a "
          },
          {
            "Text": "SocketChannel",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/nio/channels/SocketChannel.html"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518444477,
        "id": "29de180d-3fb2-4f36-a2e8-0e2d4b670b27",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518444477,
        "parent_id": "2b800e14-ab64-4ea3-ad1e-966ff3cff862",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Register the "
            ],
            [
              "SocketChannel",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "to the "
            ],
            [
              "Selector",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Register the "
          },
          {
            "Text": "SocketChannel",
            "AttrFlags": 2
          },
          {
            "Text": "to the "
          },
          {
            "Text": "Selector",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518444477,
        "id": "74ec01ce-b664-4e98-86f2-4b6e339258a3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518444477,
        "parent_id": "2b800e14-ab64-4ea3-ad1e-966ff3cff862",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Loop with the "
            ],
            [
              "Selector",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to detect events"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Loop with the "
          },
          {
            "Text": "Selector",
            "AttrFlags": 2
          },
          {
            "Text": " to detect events"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518444477,
        "id": "57e49c99-9843-4b4d-9320-339dce03aef9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518444477,
        "parent_id": "2b800e14-ab64-4ea3-ad1e-966ff3cff862",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Selector sel = Selector.open(); // Create the Selector\nSocketChannel sc = SocketChannel.open(); // Create a SocketChannel\nsc.configureBlocking(false); // ... non blocking\nsc.setOption(StandardSocketOptions.SO_KEEPALIVE, true); // ... set some options\n\n// Register the Channel to the Selector for wake-up on CONNECT event and use some description as an attachement\nsc.register(sel, SelectionKey.OP_CONNECT, \"Connection to google.com\"); // Returns a SelectionKey: the association between the SocketChannel and the Selector\nSystem.out.println(\"Initiating connection\");\nif (sc.connect(new InetSocketAddress(\"www.google.com\", 80)))\n    System.out.println(\"Connected\"); // Connected right-away: nothing else to do\nelse {\n    boolean exit = false;\n    while (!exit) {\n        if (sel.select(100) == 0) // Did something happen on some registered Channels during the last 100ms?\n            continue; // No, wait some more\n        \n        // Something happened...\n        Set\u003cSelectionKey\u003e keys = sel.selectedKeys(); // List of SelectionKeys on which some registered operation was triggered\n        for (SelectionKey k : keys) {\n            System.out.println(\"Checking \"+k.attachment());\n            if (k.isConnectable()) { // CONNECT event\n                System.out.print(\"Connected through select() on \"+k.channel()+\" -\u003e \");\n                if (sc.finishConnect()) { // Finish connection process\n                    System.out.println(\"done!\");\n                    k.interestOps(k.interestOps() \u0026 ~SelectionKey.OP_CONNECT); // We are already connected: remove interest in CONNECT event\n                    exit = true;\n                } else\n                    System.out.println(\"unfinished...\");\n            }\n            // TODO: else if (k.isReadable()) { ...\n        }\n        keys.clear(); // Have to clear the selected keys set once processed!\n    }\n}\nSystem.out.print(\"Disconnecting ... \");\nsc.shutdownOutput(); // Initiate graceful disconnection\n// TODO: emtpy receive buffer\nsc.close();\nSystem.out.println(\"done\");"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Selector sel = Selector.open(); // Create the Selector\nSocketChannel sc = SocketChannel.open(); // Create a SocketChannel\nsc.configureBlocking(false); // ... non blocking\nsc.setOption(StandardSocketOptions.SO_KEEPALIVE, true); // ... set some options\n\n// Register the Channel to the Selector for wake-up on CONNECT event and use some description as an attachement\nsc.register(sel, SelectionKey.OP_CONNECT, \"Connection to google.com\"); // Returns a SelectionKey: the association between the SocketChannel and the Selector\nSystem.out.println(\"Initiating connection\");\nif (sc.connect(new InetSocketAddress(\"www.google.com\", 80)))\n    System.out.println(\"Connected\"); // Connected right-away: nothing else to do\nelse {\n    boolean exit = false;\n    while (!exit) {\n        if (sel.select(100) == 0) // Did something happen on some registered Channels during the last 100ms?\n            continue; // No, wait some more\n        \n        // Something happened...\n        Set\u003cSelectionKey\u003e keys = sel.selectedKeys(); // List of SelectionKeys on which some registered operation was triggered\n        for (SelectionKey k : keys) {\n            System.out.println(\"Checking \"+k.attachment());\n            if (k.isConnectable()) { // CONNECT event\n                System.out.print(\"Connected through select() on \"+k.channel()+\" -\u003e \");\n                if (sc.finishConnect()) { // Finish connection process\n                    System.out.println(\"done!\");\n                    k.interestOps(k.interestOps() \u0026 ~SelectionKey.OP_CONNECT); // We are already connected: remove interest in CONNECT event\n                    exit = true;\n                } else\n                    System.out.println(\"unfinished...\");\n            }\n            // TODO: else if (k.isReadable()) { ...\n        }\n        keys.clear(); // Have to clear the selected keys set once processed!\n    }\n}\nSystem.out.print(\"Disconnecting ... \");\nsc.shutdownOutput(); // Initiate graceful disconnection\n// TODO: emtpy receive buffer\nsc.close();\nSystem.out.println(\"done\");",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518444477,
        "id": "6f6b437b-cc58-45e3-9551-f8d654f16f8a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518444477,
        "parent_id": "2b800e14-ab64-4ea3-ad1e-966ff3cff862",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Would give the following output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Would give the following output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518444477,
        "id": "736bc627-e781-4e39-8412-4a2c5194e299",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518444477,
        "parent_id": "2b800e14-ab64-4ea3-ad1e-966ff3cff862",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Initiating connection\nChecking Connection to google.com\nConnected through 'select()' on java.nio.channels.SocketChannel[connection-pending remote=www.google.com/216.58.208.228:80] -\u003e done!\nDisconnecting ... done"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Initiating connection\nChecking Connection to google.com\nConnected through 'select()' on java.nio.channels.SocketChannel[connection-pending remote=www.google.com/216.58.208.228:80] -\u003e done!\nDisconnecting ... done",
        "code_language": "Plain Text"
      }
    ],
    "title": "010 Using Selector to wait for events example with OP CONNECT"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}