{
  "ID": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
  "Root": {
    "alive": true,
    "content": [
      "85e0062b-6237-4640-8a62-18aa9085bbf5",
      "f0e5775d-927c-4ebc-a8cc-d2d18f722040",
      "d0d5c1dd-bf4e-4963-aaed-00420fbdf99c",
      "93415706-900c-4733-870c-95878dadf458",
      "e41f8471-9c4f-4a16-b5a0-c717af548114",
      "ad88c5b3-8e72-4f69-9cf9-847249d827bf",
      "b8b0a7b3-4b7d-486e-a9e3-f78a72894a7a",
      "d93dffd6-bb1b-4c63-97fc-6941f5da6eec",
      "608b7005-ac48-4243-99fb-9be8f9a2d456",
      "83ee15bf-83f5-45d9-b810-38dd273f7e48",
      "52b52e07-649f-481f-925d-4d2409712f85",
      "45245525-ffeb-4490-a3fb-f45b41212d61",
      "4c94585a-78c6-4716-a264-3bb78bc5e931",
      "d4ec6fc3-37bc-4068-bdda-86cf228e1e70",
      "db51e433-504c-448d-9709-f45708598a0f",
      "b141c0fe-f787-4a88-9bf0-3adab9b647f1",
      "4df84c32-aaf1-483a-b464-d8f023b45806",
      "edf8c989-4b04-412d-b984-ac7fb285d0b0"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550463152106,
    "id": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550463152106,
    "parent_id": "ff382d4c-e48a-463a-bc32-a1c6bbf07b92",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 Sorting a generic list"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463152100,
        "id": "85e0062b-6237-4640-8a62-18aa9085bbf5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463152100,
        "parent_id": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "Collections",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class offers two standard static methods to sort a list:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "Collections",
            "AttrFlags": 2
          },
          {
            "Text": " class offers two standard static methods to sort a list:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463152104,
        "id": "f0e5775d-927c-4ebc-a8cc-d2d18f722040",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463152104,
        "parent_id": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "sort(List\u003cT\u003e list)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " applicable to lists where "
            ],
            [
              "T extends Comparable\u003c? super T\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "sort(List\u003cT\u003e list)",
            "AttrFlags": 2
          },
          {
            "Text": " applicable to lists where "
          },
          {
            "Text": "T extends Comparable\u003c? super T\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ", and"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463152104,
        "id": "d0d5c1dd-bf4e-4963-aaed-00420fbdf99c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463152104,
        "parent_id": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "sort(List\u003cT\u003e list, Comparator\u003c? super T\u003e c)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " applicable to lists of any type."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "sort(List\u003cT\u003e list, Comparator\u003c? super T\u003e c)",
            "AttrFlags": 2
          },
          {
            "Text": " applicable to lists of any type."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463152104,
        "id": "93415706-900c-4733-870c-95878dadf458",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463152104,
        "parent_id": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Applying the former requires amending the class of list elements being sorted, which is not always possible. It might also be undesirable as although it provides the default sorting, other sorting orders may be required in different circumstances, or sorting is just a one off task."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Applying the former requires amending the class of list elements being sorted, which is not always possible. It might also be undesirable as although it provides the default sorting, other sorting orders may be required in different circumstances, or sorting is just a one off task."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463152104,
        "id": "e41f8471-9c4f-4a16-b5a0-c717af548114",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463152104,
        "parent_id": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consider we have a task of sorting objects that are instances of the following class:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consider we have a task of sorting objects that are instances of the following class:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463152104,
        "id": "ad88c5b3-8e72-4f69-9cf9-847249d827bf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463152104,
        "parent_id": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class User {\n    public final Long id;\n    public final String username;\n\n    public User(Long id, String username) {\n        this.id = id;\n        this.username = username;\n    }\n\n    @Override\n    public String toString() {\n        return String.format(\"%s:%d\", username, id);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class User {\n    public final Long id;\n    public final String username;\n\n    public User(Long id, String username) {\n        this.id = id;\n        this.username = username;\n    }\n\n    @Override\n    public String toString() {\n        return String.format(\"%s:%d\", username, id);\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463152105,
        "id": "b8b0a7b3-4b7d-486e-a9e3-f78a72894a7a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463152105,
        "parent_id": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In order to use "
            ],
            [
              "Collections.sort(List\u003cUser\u003e list)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " we need to modify the "
            ],
            [
              "User",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class to implement the "
            ],
            [
              "Comparable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface. For example"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In order to use "
          },
          {
            "Text": "Collections.sort(List\u003cUser\u003e list)",
            "AttrFlags": 2
          },
          {
            "Text": " we need to modify the "
          },
          {
            "Text": "User",
            "AttrFlags": 2
          },
          {
            "Text": " class to implement the "
          },
          {
            "Text": "Comparable",
            "AttrFlags": 2
          },
          {
            "Text": " interface. For example"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463152105,
        "id": "d93dffd6-bb1b-4c63-97fc-6941f5da6eec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463152105,
        "parent_id": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class User implements Comparable\u003cUser\u003e {\n    public final Long id;\n    public final String username;\n\n    public User(Long id, String username) {\n        this.id = id;\n        this.username = username;\n    }\n\n    @Override\n    public String toString() {\n        return String.format(\"%s:%d\", username, id);\n    }\n\n    @Override\n    /** The natural ordering for 'User' objects is by the 'id' field. */\n    public int compareTo(User o) {\n        return id.compareTo(o.id);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class User implements Comparable\u003cUser\u003e {\n    public final Long id;\n    public final String username;\n\n    public User(Long id, String username) {\n        this.id = id;\n        this.username = username;\n    }\n\n    @Override\n    public String toString() {\n        return String.format(\"%s:%d\", username, id);\n    }\n\n    @Override\n    /** The natural ordering for 'User' objects is by the 'id' field. */\n    public int compareTo(User o) {\n        return id.compareTo(o.id);\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463152105,
        "id": "608b7005-ac48-4243-99fb-9be8f9a2d456",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463152105,
        "parent_id": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "(Aside: many standard Java classes such as "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Integer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " implement the "
            ],
            [
              "Comparable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface. This makes lists of those elements sortable by default, and simplifies implementation of "
            ],
            [
              "compare",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "compareTo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in other classes.)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "(Aside: many standard Java classes such as "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Long",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Integer",
            "AttrFlags": 2
          },
          {
            "Text": " implement the "
          },
          {
            "Text": "Comparable",
            "AttrFlags": 2
          },
          {
            "Text": " interface. This makes lists of those elements sortable by default, and simplifies implementation of "
          },
          {
            "Text": "compare",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "compareTo",
            "AttrFlags": 2
          },
          {
            "Text": " in other classes.)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463152105,
        "id": "83ee15bf-83f5-45d9-b810-38dd273f7e48",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463152105,
        "parent_id": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With the modification above, the we can easily sort a list of "
            ],
            [
              "User",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " objects based on the classes "
            ],
            [
              "natural ordering",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". (In this case, we have defined that to be ordering based on "
            ],
            [
              "id",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " values). For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With the modification above, the we can easily sort a list of "
          },
          {
            "Text": "User",
            "AttrFlags": 2
          },
          {
            "Text": " objects based on the classes "
          },
          {
            "Text": "natural ordering",
            "AttrFlags": 4
          },
          {
            "Text": ". (In this case, we have defined that to be ordering based on "
          },
          {
            "Text": "id",
            "AttrFlags": 2
          },
          {
            "Text": " values). For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463152105,
        "id": "52b52e07-649f-481f-925d-4d2409712f85",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463152105,
        "parent_id": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "List\u003cUser\u003e users = Lists.newArrayList(\n    new User(33L, \"A\"),\n    new User(25L, \"B\"),\n    new User(28L, \"\"));\nCollections.sort(users);\n\nSystem.out.print(users);\n// [B:25, C:28, A:33]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "List\u003cUser\u003e users = Lists.newArrayList(\n    new User(33L, \"A\"),\n    new User(25L, \"B\"),\n    new User(28L, \"\"));\nCollections.sort(users);\n\nSystem.out.print(users);\n// [B:25, C:28, A:33]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463152106,
        "id": "45245525-ffeb-4490-a3fb-f45b41212d61",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463152106,
        "parent_id": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, suppose that we wanted to sort "
            ],
            [
              "User",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " objects by "
            ],
            [
              "name",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " rather than by "
            ],
            [
              "id",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Alternatively, suppose that we had not been able to change the class to make it implement "
            ],
            [
              "Comparable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, suppose that we wanted to sort "
          },
          {
            "Text": "User",
            "AttrFlags": 2
          },
          {
            "Text": " objects by "
          },
          {
            "Text": "name",
            "AttrFlags": 2
          },
          {
            "Text": " rather than by "
          },
          {
            "Text": "id",
            "AttrFlags": 2
          },
          {
            "Text": ". Alternatively, suppose that we had not been able to change the class to make it implement "
          },
          {
            "Text": "Comparable",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463152106,
        "id": "4c94585a-78c6-4716-a264-3bb78bc5e931",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463152106,
        "parent_id": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is where the "
            ],
            [
              "sort",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method with the "
            ],
            [
              "Comparator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " argument is useful:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is where the "
          },
          {
            "Text": "sort",
            "AttrFlags": 2
          },
          {
            "Text": " method with the "
          },
          {
            "Text": "Comparator",
            "AttrFlags": 2
          },
          {
            "Text": " argument is useful:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463152106,
        "id": "d4ec6fc3-37bc-4068-bdda-86cf228e1e70",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463152106,
        "parent_id": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Collections.sort(users, new Comparator\u003cUser\u003e() {\n    @Override\n    /* Order two 'User' objects based on their names. */\n    public int compare(User left, User right) {\n        return left.username.compareTo(right.username);\n    }\n});\nSystem.out.print(users);\n// [A:33, B:25, C:28]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Collections.sort(users, new Comparator\u003cUser\u003e() {\n    @Override\n    /* Order two 'User' objects based on their names. */\n    public int compare(User left, User right) {\n        return left.username.compareTo(right.username);\n    }\n});\nSystem.out.print(users);\n// [A:33, B:25, C:28]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463152106,
        "id": "db51e433-504c-448d-9709-f45708598a0f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463152106,
        "parent_id": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Java 8 you can use a "
            ],
            [
              "lambda",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " instead of an anonymous class. The latter reduces to a one-liner:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Java 8 you can use a "
          },
          {
            "Text": "lambda",
            "AttrFlags": 4
          },
          {
            "Text": " instead of an anonymous class. The latter reduces to a one-liner:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463152106,
        "id": "b141c0fe-f787-4a88-9bf0-3adab9b647f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463152106,
        "parent_id": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Collections.sort(users, (l, r) -\u003e l.username.compareTo(r.username));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Collections.sort(users, (l, r) -\u003e l.username.compareTo(r.username));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463152106,
        "id": "4df84c32-aaf1-483a-b464-d8f023b45806",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463152106,
        "parent_id": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Further, there Java 8 adds a default "
            ],
            [
              "sort",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method on the "
            ],
            [
              "List",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface, which simplifies sorting even more."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Further, there Java 8 adds a default "
          },
          {
            "Text": "sort",
            "AttrFlags": 2
          },
          {
            "Text": " method on the "
          },
          {
            "Text": "List",
            "AttrFlags": 2
          },
          {
            "Text": " interface, which simplifies sorting even more."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463152106,
        "id": "edf8c989-4b04-412d-b984-ac7fb285d0b0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463152106,
        "parent_id": "f67037c9-8595-4b46-8dc6-d38e45e3fbb8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "users.sort((l, r) -\u003e l.username.compareTo(r.username))"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "users.sort((l, r) -\u003e l.username.compareTo(r.username))",
        "code_language": "Plain Text"
      }
    ],
    "title": "010 Sorting a generic list"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}