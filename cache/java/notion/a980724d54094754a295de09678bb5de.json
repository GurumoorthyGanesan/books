{
  "ID": "a980724d-5409-4754-a295-de09678bb5de",
  "Root": {
    "alive": true,
    "content": [
      "cf75faa2-da1f-4e2a-81ac-81aef50323b8",
      "e0a21794-327e-463c-a7db-37f689f40f6e",
      "e1adfd42-2a75-4cc5-a2e2-5ac5fc8b9800",
      "fb13e707-fe26-4432-aa10-f1585f1e4a16",
      "7642f512-b9ee-46e9-b7c8-3aad06debe41",
      "7cc5f4f7-60b4-4b06-aa22-498275b72e5a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550520160501,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "a980724d-5409-4754-a295-de09678bb5de",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551758317157,
    "parent_id": "71bf925d-a7d0-40f4-a229-0ec8cdcbd38f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Upload file to s3 bucket"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550520160497,
        "id": "cf75faa2-da1f-4e2a-81ac-81aef50323b8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550520160497,
        "parent_id": "a980724d-5409-4754-a295-de09678bb5de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here we will create a rest APi which will take file object as a multipart parameter from front end and upload it to S3 bucket using java rest API."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here we will create a rest APi which will take file object as a multipart parameter from front end and upload it to S3 bucket using java rest API."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550520160500,
        "id": "e0a21794-327e-463c-a7db-37f689f40f6e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550520160500,
        "parent_id": "a980724d-5409-4754-a295-de09678bb5de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Requirement",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " :- secrete key and Access key for s3 bucket where you wanna upload your file."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Requirement",
            "AttrFlags": 1
          },
          {
            "Text": " :- secrete key and Access key for s3 bucket where you wanna upload your file."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550520160500,
        "id": "e1adfd42-2a75-4cc5-a2e2-5ac5fc8b9800",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550520160500,
        "parent_id": "a980724d-5409-4754-a295-de09678bb5de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "code:- DocumentController.java",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "code:- DocumentController.java",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550520160500,
        "id": "fb13e707-fe26-4432-aa10-f1585f1e4a16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550520160500,
        "parent_id": "a980724d-5409-4754-a295-de09678bb5de",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@RestController\n@RequestMapping(\"/api/v2\")\npublic class DocumentController {\n\n    private static String bucketName = \"pharmerz-chat\";\n    //   private static String keyName        = \"Pharmerz\"+ UUID.randomUUID();\n\n    @RequestMapping(value = \"/upload\", method = RequestMethod.POST, consumes = MediaType.MULTIPART_FORM_DATA)\n    public URL uploadFileHandler(@RequestParam(\"name\") String name,\n                                 @RequestParam(\"file\") MultipartFile file) throws IOException {\n\n/******* Printing all the possible parameter from @RequestParam *************/\n\n        System.out.println(\"*****************************\");\n\n        System.out.println(\"file.getOriginalFilename() \" + file.getOriginalFilename());\n        System.out.println(\"file.getContentType()\" + file.getContentType());\n        System.out.println(\"file.getInputStream() \" + file.getInputStream());\n        System.out.println(\"file.toString() \" + file.toString());\n        System.out.println(\"file.getSize() \" + file.getSize());\n        System.out.println(\"name \" + name);\n        System.out.println(\"file.getBytes() \" + file.getBytes());\n        System.out.println(\"file.hashCode() \" + file.hashCode());\n        System.out.println(\"file.getClass() \" + file.getClass());\n        System.out.println(\"file.isEmpty() \" + file.isEmpty());\n\n        /*************Parameters to b pass to s3 bucket put Object **************/\n        InputStream is = file.getInputStream();\n        String keyName = file.getOriginalFilename();\n\n\n// Credentials for Aws  \n        AWSCredentials credentials = new BasicAWSCredentials(\"AKIA*************\", \"zr**********************\");\n\n        /****************** DocumentController.uploadfile(credentials); ***************************/\n\n\n        AmazonS3 s3client = new AmazonS3Client(credentials);\n        try {\n            System.out.println(\"Uploading a new object to S3 from a file\\n\");\n            //File file = new File(awsuploadfile);\n            s3client.putObject(new PutObjectRequest(\n                    bucketName, keyName, is, new ObjectMetadata()));\n\n\n            URL url = s3client.generatePresignedUrl(bucketName, keyName, Date.from(Instant.now().plus(5, ChronoUnit.MINUTES)));\n            // URL url=s3client.generatePresignedUrl(bucketName,keyName, Date.from(Instant.now().plus(5, ChronoUnit.)));\n            System.out.println(\"************************************\");\n            System.out.println(url);\n\n            return url;\n\n        } catch (AmazonServiceException ase) {\n            System.out.println(\"Caught an AmazonServiceException, which \" +\n                    \"means your request made it \" +\n                    \"to Amazon S3, but was rejected with an error response\" +\n                    \" for some reason.\");\n            System.out.println(\"Error Message:    \" + ase.getMessage());\n            System.out.println(\"HTTP Status Code: \" + ase.getStatusCode());\n            System.out.println(\"AWS Error Code:   \" + ase.getErrorCode());\n            System.out.println(\"Error Type:       \" + ase.getErrorType());\n            System.out.println(\"Request ID:       \" + ase.getRequestId());\n        } catch (AmazonClientException ace) {\n            System.out.println(\"Caught an AmazonClientException, which \" +\n                    \"means the client encountered \" +\n                    \"an internal error while trying to \" +\n                    \"communicate with S3, \" +\n                    \"such as not being able to access the network.\");\n            System.out.println(\"Error Message: \" + ace.getMessage());\n        }\n\n        return null;\n\n    }\n\n\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@RestController\n@RequestMapping(\"/api/v2\")\npublic class DocumentController {\n\n    private static String bucketName = \"pharmerz-chat\";\n    //   private static String keyName        = \"Pharmerz\"+ UUID.randomUUID();\n\n    @RequestMapping(value = \"/upload\", method = RequestMethod.POST, consumes = MediaType.MULTIPART_FORM_DATA)\n    public URL uploadFileHandler(@RequestParam(\"name\") String name,\n                                 @RequestParam(\"file\") MultipartFile file) throws IOException {\n\n/******* Printing all the possible parameter from @RequestParam *************/\n\n        System.out.println(\"*****************************\");\n\n        System.out.println(\"file.getOriginalFilename() \" + file.getOriginalFilename());\n        System.out.println(\"file.getContentType()\" + file.getContentType());\n        System.out.println(\"file.getInputStream() \" + file.getInputStream());\n        System.out.println(\"file.toString() \" + file.toString());\n        System.out.println(\"file.getSize() \" + file.getSize());\n        System.out.println(\"name \" + name);\n        System.out.println(\"file.getBytes() \" + file.getBytes());\n        System.out.println(\"file.hashCode() \" + file.hashCode());\n        System.out.println(\"file.getClass() \" + file.getClass());\n        System.out.println(\"file.isEmpty() \" + file.isEmpty());\n\n        /*************Parameters to b pass to s3 bucket put Object **************/\n        InputStream is = file.getInputStream();\n        String keyName = file.getOriginalFilename();\n\n\n// Credentials for Aws  \n        AWSCredentials credentials = new BasicAWSCredentials(\"AKIA*************\", \"zr**********************\");\n\n        /****************** DocumentController.uploadfile(credentials); ***************************/\n\n\n        AmazonS3 s3client = new AmazonS3Client(credentials);\n        try {\n            System.out.println(\"Uploading a new object to S3 from a file\\n\");\n            //File file = new File(awsuploadfile);\n            s3client.putObject(new PutObjectRequest(\n                    bucketName, keyName, is, new ObjectMetadata()));\n\n\n            URL url = s3client.generatePresignedUrl(bucketName, keyName, Date.from(Instant.now().plus(5, ChronoUnit.MINUTES)));\n            // URL url=s3client.generatePresignedUrl(bucketName,keyName, Date.from(Instant.now().plus(5, ChronoUnit.)));\n            System.out.println(\"************************************\");\n            System.out.println(url);\n\n            return url;\n\n        } catch (AmazonServiceException ase) {\n            System.out.println(\"Caught an AmazonServiceException, which \" +\n                    \"means your request made it \" +\n                    \"to Amazon S3, but was rejected with an error response\" +\n                    \" for some reason.\");\n            System.out.println(\"Error Message:    \" + ase.getMessage());\n            System.out.println(\"HTTP Status Code: \" + ase.getStatusCode());\n            System.out.println(\"AWS Error Code:   \" + ase.getErrorCode());\n            System.out.println(\"Error Type:       \" + ase.getErrorType());\n            System.out.println(\"Request ID:       \" + ase.getRequestId());\n        } catch (AmazonClientException ace) {\n            System.out.println(\"Caught an AmazonClientException, which \" +\n                    \"means the client encountered \" +\n                    \"an internal error while trying to \" +\n                    \"communicate with S3, \" +\n                    \"such as not being able to access the network.\");\n            System.out.println(\"Error Message: \" + ace.getMessage());\n        }\n\n        return null;\n\n    }\n\n\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550520160500,
        "id": "7642f512-b9ee-46e9-b7c8-3aad06debe41",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550520160500,
        "parent_id": "a980724d-5409-4754-a295-de09678bb5de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Front end Function",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Front end Function",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550520160500,
        "id": "7cc5f4f7-60b4-4b06-aa22-498275b72e5a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550520160500,
        "parent_id": "a980724d-5409-4754-a295-de09678bb5de",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var form = new FormData();\nform.append(\"file\", \"image.jpeg\");\n\nvar settings = {\n \"async\": true,\n \"crossDomain\": true,\n \"url\": \"http://url/\",\n \"method\": \"POST\",\n \"headers\": {\n   \"cache-control\": \"no-cache\"\n },\n \"processData\": false,\n \"contentType\": false,\n \"mimeType\": \"multipart/form-data\",\n \"data\": form\n}\n\n$.ajax(settings).done(function (response) {\n console.log(response);\n});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var form = new FormData();\nform.append(\"file\", \"image.jpeg\");\n\nvar settings = {\n \"async\": true,\n \"crossDomain\": true,\n \"url\": \"http://url/\",\n \"method\": \"POST\",\n \"headers\": {\n   \"cache-control\": \"no-cache\"\n },\n \"processData\": false,\n \"contentType\": false,\n \"mimeType\": \"multipart/form-data\",\n \"data\": form\n}\n\n$.ajax(settings).done(function (response) {\n console.log(response);\n});",
        "code_language": "Plain Text"
      }
    ],
    "title": "Upload file to s3 bucket",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}