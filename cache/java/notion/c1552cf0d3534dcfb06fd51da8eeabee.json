{
  "ID": "c1552cf0-d353-4dcf-b06f-d51da8eeabee",
  "Root": {
    "alive": true,
    "content": [
      "c9e51822-6ec2-4d6f-805e-682d406e5e68",
      "ef0f4845-575e-4d16-9b2f-7f273c4ca389",
      "861029e4-f789-4a24-8d1e-f7baff48fda3",
      "779ea4db-98b5-4e30-8b28-f62b9c7f5f3c",
      "d8213388-463f-4f12-b1c4-b560e7d57760",
      "4dd91c3f-7de0-407f-9f95-58d3cbde4ed0",
      "ad76c273-22b7-4f24-bdc0-1ad7978f854e",
      "972f98b9-cb31-4593-a386-3ceded45db32",
      "25544706-1dd2-4d4e-8d1d-9122029be1e6",
      "c0760e80-389b-4203-8470-1c32514fa8fc"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550519883012,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c1552cf0-d353-4dcf-b06f-d51da8eeabee",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551763342808,
    "parent_id": "d3a02775-800c-4e2c-b649-ee7cf3c68105",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using Other Scripting Languages in Java"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519883011,
        "id": "c9e51822-6ec2-4d6f-805e-682d406e5e68",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519883011,
        "parent_id": "c1552cf0-d353-4dcf-b06f-d51da8eeabee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Versions"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Versions"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519883011,
        "id": "ef0f4845-575e-4d16-9b2f-7f273c4ca389",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519883011,
        "parent_id": "c1552cf0-d353-4dcf-b06f-d51da8eeabee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "[{“Name”:“Java SE 6”,“GroupName”:null},{“Name”:“Java SE 7”,“GroupName”:null},{“Name”:“Java SE 8”,“GroupName”:null}]"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "[{“Name”:“Java SE 6”,“GroupName”:null},{“Name”:“Java SE 7”,“GroupName”:null},{“Name”:“Java SE 8”,“GroupName”:null}]"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519883011,
        "id": "861029e4-f789-4a24-8d1e-f7baff48fda3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519883011,
        "parent_id": "c1552cf0-d353-4dcf-b06f-d51da8eeabee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519883011,
        "id": "779ea4db-98b5-4e30-8b28-f62b9c7f5f3c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519883011,
        "parent_id": "c1552cf0-d353-4dcf-b06f-d51da8eeabee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Java in itself is an extremely powerful language, but its power can further be extended Thanks to JSR223 (Java Specification Request 223) introducing a script engine"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Java in itself is an extremely powerful language, but its power can further be extended Thanks to JSR223 (Java Specification Request 223) introducing a script engine"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519883011,
        "id": "d8213388-463f-4f12-b1c4-b560e7d57760",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519883011,
        "parent_id": "c1552cf0-d353-4dcf-b06f-d51da8eeabee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519883012,
        "id": "4dd91c3f-7de0-407f-9f95-58d3cbde4ed0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519883012,
        "parent_id": "c1552cf0-d353-4dcf-b06f-d51da8eeabee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The Java Scripting API enables external scripts to interact with Java"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The Java Scripting API enables external scripts to interact with Java"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519883012,
        "id": "ad76c273-22b7-4f24-bdc0-1ad7978f854e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519883012,
        "parent_id": "c1552cf0-d353-4dcf-b06f-d51da8eeabee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The Scripting API can enable interaction between the script and java. The Scripting Languages must have an implementation of Script Engine on the classpath."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The Scripting API can enable interaction between the script and java. The Scripting Languages must have an implementation of Script Engine on the classpath."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519883012,
        "id": "972f98b9-cb31-4593-a386-3ceded45db32",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519883012,
        "parent_id": "c1552cf0-d353-4dcf-b06f-d51da8eeabee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By Default JavaScript (also known as ECMAScript) is provided by nashorn by default. Every Script Engine has a script context where all the variables, functions, methods are stored in bindings. Sometimes you might want to use multiple contexts as they support redirecting the output to a buffered Writer and error to another."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By Default JavaScript (also known as ECMAScript) is provided by nashorn by default. Every Script Engine has a script context where all the variables, functions, methods are stored in bindings. Sometimes you might want to use multiple contexts as they support redirecting the output to a buffered Writer and error to another."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519883012,
        "id": "25544706-1dd2-4d4e-8d1d-9122029be1e6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519883012,
        "parent_id": "c1552cf0-d353-4dcf-b06f-d51da8eeabee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are many other script engine libraries like Jython and JRuby. As long as they are on the classpath you can eval code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are many other script engine libraries like Jython and JRuby. As long as they are on the classpath you can eval code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519883012,
        "id": "c0760e80-389b-4203-8470-1c32514fa8fc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519883012,
        "parent_id": "c1552cf0-d353-4dcf-b06f-d51da8eeabee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can use bindings to expose variables into the script. We need multiple bindings in some cases as exposing variables to the engine basically is exposing variables to only that engine, sometimes we require to expose certain variables like system environment and path that is the same for all engines of the same type. In that case, we require a binding which is a global scope. Exposing variables to that expose it to all script engines created by the same EngineFactory"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can use bindings to expose variables into the script. We need multiple bindings in some cases as exposing variables to the engine basically is exposing variables to only that engine, sometimes we require to expose certain variables like system environment and path that is the same for all engines of the same type. In that case, we require a binding which is a global scope. Exposing variables to that expose it to all script engines created by the same EngineFactory"
          }
        ]
      }
    ],
    "title": "Using Other Scripting Languages in Java",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}