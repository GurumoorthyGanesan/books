{
  "ID": "fa6b55d0-9e4f-4cd3-b75c-1d0c677685ee",
  "Root": {
    "alive": true,
    "content": [
      "25e0e3ee-e087-4851-a399-ac6d7a4acabd",
      "11a1c00c-c65a-4402-b107-7e017f187648",
      "6f972376-64df-4e08-a231-70ef4ccc4868",
      "1e6ef8b0-d37b-4052-96be-88b2c5c6f7c5",
      "66795e48-beea-4c37-82a4-ee3d512e8b51",
      "ffcda857-d6da-4842-b6ac-562e2f30f69a",
      "f9253000-9b2d-473e-aa99-27377a5bf0fe",
      "bd806da6-5203-4a38-8f4f-bb0cc880c2c4",
      "57dc6628-2977-4ae2-b459-528c277a0313",
      "7b334bbe-6bec-4799-95b4-cd14243b27f6",
      "f5bdca4e-9e93-40bf-ae26-f02008931e08",
      "8f07fb3f-e10f-4024-846d-35099685a29f",
      "54d76680-8d95-47a8-ae42-a6dcc78513db",
      "b03d81ec-4ef3-411d-8a24-0e8ce22971e9",
      "8b2a0620-ea29-41ce-8e50-089a753ee8b1",
      "a6929166-ca94-4eab-ac4e-aa834f0572c2",
      "1109f09a-7d9a-40a3-81f7-0f03a4dfd882"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460114233,
    "id": "fa6b55d0-9e4f-4cd3-b75c-1d0c677685ee",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460114233,
    "parent_id": "39a676e8-4916-4942-a1ec-5020702b7db9",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "060 Introduction"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460114225,
        "id": "25e0e3ee-e087-4851-a399-ac6d7a4acabd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460114225,
        "parent_id": "fa6b55d0-9e4f-4cd3-b75c-1d0c677685ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Exceptions are errors which occur when a program is executing. Consider the Java program below which divides two integers."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Exceptions are errors which occur when a program is executing. Consider the Java program below which divides two integers."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460114228,
        "id": "11a1c00c-c65a-4402-b107-7e017f187648",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460114228,
        "parent_id": "fa6b55d0-9e4f-4cd3-b75c-1d0c677685ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Division {\n    public static void main(String[] args) {\n \n        int a, b, result;\n \n        Scanner input = new Scanner(System.in);\n        System.out.println(\"Input two integers\");\n \n        a = input.nextInt();\n        b = input.nextInt();\n \n        result = a / b;\n \n        System.out.println(\"Result = \" + result);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Division {\n    public static void main(String[] args) {\n \n        int a, b, result;\n \n        Scanner input = new Scanner(System.in);\n        System.out.println(\"Input two integers\");\n \n        a = input.nextInt();\n        b = input.nextInt();\n \n        result = a / b;\n \n        System.out.println(\"Result = \" + result);\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460114228,
        "id": "6f972376-64df-4e08-a231-70ef4ccc4868",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460114228,
        "parent_id": "fa6b55d0-9e4f-4cd3-b75c-1d0c677685ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now we compile and execute the above code, and see the output for an attempted division by zero:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now we compile and execute the above code, and see the output for an attempted division by zero:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460114228,
        "id": "1e6ef8b0-d37b-4052-96be-88b2c5c6f7c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460114228,
        "parent_id": "fa6b55d0-9e4f-4cd3-b75c-1d0c677685ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Input two integers\n7 0\nException in thread \"main\" java.lang.ArithmeticException: / by zero \n    at Division.main(Disivion.java:14)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Input two integers\n7 0\nException in thread \"main\" java.lang.ArithmeticException: / by zero \n    at Division.main(Disivion.java:14)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460114228,
        "id": "66795e48-beea-4c37-82a4-ee3d512e8b51",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460114228,
        "parent_id": "fa6b55d0-9e4f-4cd3-b75c-1d0c677685ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Division by zero is an invalid operation that would produce a value that cannot be represented as an integer. Java deals with this by "
            ],
            [
              "throwing an ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "exception",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              ". In this case, the exception is an instance of the "
            ],
            [
              "ArithmeticException",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " class."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Division by zero is an invalid operation that would produce a value that cannot be represented as an integer. Java deals with this by "
          },
          {
            "Text": "throwing an ",
            "AttrFlags": 4
          },
          {
            "Text": "exception",
            "AttrFlags": 5
          },
          {
            "Text": ". In this case, the exception is an instance of the "
          },
          {
            "Text": "ArithmeticException",
            "AttrFlags": 4
          },
          {
            "Text": " class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460114230,
        "id": "ffcda857-d6da-4842-b6ac-562e2f30f69a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460114230,
        "parent_id": "fa6b55d0-9e4f-4cd3-b75c-1d0c677685ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " The example on "
            ],
            [
              "creating and reading stack traces",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/89/exceptions-and-exception-handling/1815/"
                ]
              ]
            ],
            [
              " explains what the output after the two numbers means."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note:",
            "AttrFlags": 1
          },
          {
            "Text": " The example on "
          },
          {
            "Text": "creating and reading stack traces",
            "Link": "http://stackoverflow.com/documentation/java/89/exceptions-and-exception-handling/1815/"
          },
          {
            "Text": " explains what the output after the two numbers means."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460114230,
        "id": "f9253000-9b2d-473e-aa99-27377a5bf0fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460114230,
        "parent_id": "fa6b55d0-9e4f-4cd3-b75c-1d0c677685ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The utility of an "
            ],
            [
              "exception",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " is the flow control that it allows. Without using exceptions, a typical solution to this problem may be to first check if "
            ],
            [
              "b == 0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The utility of an "
          },
          {
            "Text": "exception",
            "AttrFlags": 4
          },
          {
            "Text": " is the flow control that it allows. Without using exceptions, a typical solution to this problem may be to first check if "
          },
          {
            "Text": "b == 0",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460114230,
        "id": "bd806da6-5203-4a38-8f4f-bb0cc880c2c4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460114230,
        "parent_id": "fa6b55d0-9e4f-4cd3-b75c-1d0c677685ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Division {\n    public static void main(String[] args) {\n \n        int a, b, result;\n\n        Scanner input = new Scanner(System.in);\n        System.out.println(\"Input two integers\");\n \n        a = input.nextInt();\n        b = input.nextInt();\n \n        if (b == 0) {\n            System.out.println(\"You cannot divide by zero.\");\n            return;\n        }\n\n        result = a / b;\n \n        System.out.println(\"Result = \" + result);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Division {\n    public static void main(String[] args) {\n \n        int a, b, result;\n\n        Scanner input = new Scanner(System.in);\n        System.out.println(\"Input two integers\");\n \n        a = input.nextInt();\n        b = input.nextInt();\n \n        if (b == 0) {\n            System.out.println(\"You cannot divide by zero.\");\n            return;\n        }\n\n        result = a / b;\n \n        System.out.println(\"Result = \" + result);\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460114231,
        "id": "57dc6628-2977-4ae2-b459-528c277a0313",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460114231,
        "parent_id": "fa6b55d0-9e4f-4cd3-b75c-1d0c677685ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This prints the message "
            ],
            [
              "You cannot divide by zero.",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to the console and quits the program in a graceful way when the user tries to divide by zero. An equivalent way of dealing with this problem via "
            ],
            [
              "exception handling",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " would be to replace the "
            ],
            [
              "if",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " flow control with a "
            ],
            [
              "try-catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This prints the message "
          },
          {
            "Text": "You cannot divide by zero.",
            "AttrFlags": 2
          },
          {
            "Text": " to the console and quits the program in a graceful way when the user tries to divide by zero. An equivalent way of dealing with this problem via "
          },
          {
            "Text": "exception handling",
            "AttrFlags": 4
          },
          {
            "Text": " would be to replace the "
          },
          {
            "Text": "if",
            "AttrFlags": 2
          },
          {
            "Text": " flow control with a "
          },
          {
            "Text": "try-catch",
            "AttrFlags": 2
          },
          {
            "Text": " block:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460114231,
        "id": "7b334bbe-6bec-4799-95b4-cd14243b27f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460114231,
        "parent_id": "fa6b55d0-9e4f-4cd3-b75c-1d0c677685ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "...\n\na = input.nextInt();\nb = input.nextInt();\n \ntry {\n    result = a / b;\n}\ncatch (ArithmeticException e) {\n    System.out.println(\"An ArithmeticException occurred. Perhaps you tried to divide by zero.\");\n    return;\n}\n \n..."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "...\n\na = input.nextInt();\nb = input.nextInt();\n \ntry {\n    result = a / b;\n}\ncatch (ArithmeticException e) {\n    System.out.println(\"An ArithmeticException occurred. Perhaps you tried to divide by zero.\");\n    return;\n}\n \n...",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460114231,
        "id": "f5bdca4e-9e93-40bf-ae26-f02008931e08",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460114231,
        "parent_id": "fa6b55d0-9e4f-4cd3-b75c-1d0c677685ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A try catch block is executed as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A try catch block is executed as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460114232,
        "id": "8f07fb3f-e10f-4024-846d-35099685a29f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460114232,
        "parent_id": "fa6b55d0-9e4f-4cd3-b75c-1d0c677685ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Begin executing the code in the "
            ],
            [
              "try",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Begin executing the code in the "
          },
          {
            "Text": "try",
            "AttrFlags": 2
          },
          {
            "Text": " block."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460114232,
        "id": "54d76680-8d95-47a8-ae42-a6dcc78513db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460114232,
        "parent_id": "fa6b55d0-9e4f-4cd3-b75c-1d0c677685ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If an "
            ],
            [
              "exception",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " occurs in the try block, immediately abort and check to see if this exception is "
            ],
            [
              "caught",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " by the "
            ],
            [
              "catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block (in this case, when the Exception is an instance of "
            ],
            [
              "ArithmeticException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If an "
          },
          {
            "Text": "exception",
            "AttrFlags": 4
          },
          {
            "Text": " occurs in the try block, immediately abort and check to see if this exception is "
          },
          {
            "Text": "caught",
            "AttrFlags": 4
          },
          {
            "Text": " by the "
          },
          {
            "Text": "catch",
            "AttrFlags": 2
          },
          {
            "Text": " block (in this case, when the Exception is an instance of "
          },
          {
            "Text": "ArithmeticException",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460114232,
        "id": "b03d81ec-4ef3-411d-8a24-0e8ce22971e9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460114232,
        "parent_id": "fa6b55d0-9e4f-4cd3-b75c-1d0c677685ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the exception is "
            ],
            [
              "caught",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", it is assigned to the variable "
            ],
            [
              "e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and the "
            ],
            [
              "catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block is executed."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the exception is "
          },
          {
            "Text": "caught",
            "AttrFlags": 4
          },
          {
            "Text": ", it is assigned to the variable "
          },
          {
            "Text": "e",
            "AttrFlags": 2
          },
          {
            "Text": " and the "
          },
          {
            "Text": "catch",
            "AttrFlags": 2
          },
          {
            "Text": " block is executed."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460114233,
        "id": "8b2a0620-ea29-41ce-8e50-089a753ee8b1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460114233,
        "parent_id": "fa6b55d0-9e4f-4cd3-b75c-1d0c677685ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If either the "
            ],
            [
              "try",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block is completed (i.e. no uncaught exceptions occur during code execution) then continue to execute code below the "
            ],
            [
              "try-catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If either the "
          },
          {
            "Text": "try",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "catch",
            "AttrFlags": 2
          },
          {
            "Text": " block is completed (i.e. no uncaught exceptions occur during code execution) then continue to execute code below the "
          },
          {
            "Text": "try-catch",
            "AttrFlags": 2
          },
          {
            "Text": " block."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460114233,
        "id": "a6929166-ca94-4eab-ac4e-aa834f0572c2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460114233,
        "parent_id": "fa6b55d0-9e4f-4cd3-b75c-1d0c677685ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is generally considered good practice to use "
            ],
            [
              "exception handling",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " as part of the normal flow control of an application where behavior would otherwise be undefined or unexpected. For instance, instead of returning "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when a method fails, it is usually better practice to "
            ],
            [
              "throw an exception",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " so that the application making use of the method can define its own flow control for the situation via "
            ],
            [
              "exception handling",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " of the kind illustrated above. In some sense, this gets around the problem of having to return a particular "
            ],
            [
              "type",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", as any one of multiple kinds of "
            ],
            [
              "exceptions",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " may be "
            ],
            [
              "thrown",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " to indicate the specific problem that occurred."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is generally considered good practice to use "
          },
          {
            "Text": "exception handling",
            "AttrFlags": 4
          },
          {
            "Text": " as part of the normal flow control of an application where behavior would otherwise be undefined or unexpected. For instance, instead of returning "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": " when a method fails, it is usually better practice to "
          },
          {
            "Text": "throw an exception",
            "AttrFlags": 4
          },
          {
            "Text": " so that the application making use of the method can define its own flow control for the situation via "
          },
          {
            "Text": "exception handling",
            "AttrFlags": 4
          },
          {
            "Text": " of the kind illustrated above. In some sense, this gets around the problem of having to return a particular "
          },
          {
            "Text": "type",
            "AttrFlags": 4
          },
          {
            "Text": ", as any one of multiple kinds of "
          },
          {
            "Text": "exceptions",
            "AttrFlags": 4
          },
          {
            "Text": " may be "
          },
          {
            "Text": "thrown",
            "AttrFlags": 4
          },
          {
            "Text": " to indicate the specific problem that occurred."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460114233,
        "id": "1109f09a-7d9a-40a3-81f7-0f03a4dfd882",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460114233,
        "parent_id": "fa6b55d0-9e4f-4cd3-b75c-1d0c677685ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For more advice on how and how not to use exceptions, refer to http://stackoverflow.com/documentation/java/5381/java-pitfalls-exception-usage#t=20160818072550829097"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For more advice on how and how not to use exceptions, refer to http://stackoverflow.com/documentation/java/5381/java-pitfalls-exception-usage#t=20160818072550829097"
          }
        ]
      }
    ],
    "title": "060 Introduction"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}