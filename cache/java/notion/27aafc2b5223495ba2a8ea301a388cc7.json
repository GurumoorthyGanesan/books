{
  "ID": "27aafc2b-5223-495b-a2a8-ea301a388cc7",
  "Root": {
    "alive": true,
    "content": [
      "e2f2da05-c7c6-46a3-b5de-2d1678950c1b",
      "7346e762-4904-4b69-8f3b-ca3d2df12447",
      "5b8dbbc6-6090-4a94-ae9e-ffd58f540b54",
      "c1b01ae1-c0e3-42da-bda6-cfca5fe70b2c",
      "cc131c07-eff0-4198-a22f-b5d52d094af3",
      "e19c182f-e0e6-4e8d-872f-d9aecb503331",
      "e686fd90-d953-4403-a1a5-68cb38f2978e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460565031,
    "id": "27aafc2b-5223-495b-a2a8-ea301a388cc7",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460565031,
    "parent_id": "8576ab83-1126-4d17-b0cf-2a0ba47249c1",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "060 Using methods and static blocks"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460565026,
        "id": "e2f2da05-c7c6-46a3-b5de-2d1678950c1b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460565026,
        "parent_id": "27aafc2b-5223-495b-a2a8-ea301a388cc7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An enum can contain a method, just like any class. To see how this works, we’ll declare an enum like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An enum can contain a method, just like any class. To see how this works, we’ll declare an enum like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460565028,
        "id": "7346e762-4904-4b69-8f3b-ca3d2df12447",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460565028,
        "parent_id": "27aafc2b-5223-495b-a2a8-ea301a388cc7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public enum Direction {\n    NORTH, SOUTH, EAST, WEST;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public enum Direction {\n    NORTH, SOUTH, EAST, WEST;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460565028,
        "id": "5b8dbbc6-6090-4a94-ae9e-ffd58f540b54",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460565028,
        "parent_id": "27aafc2b-5223-495b-a2a8-ea301a388cc7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s have a method that returns the enum in the opposite direction:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s have a method that returns the enum in the opposite direction:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460565028,
        "id": "c1b01ae1-c0e3-42da-bda6-cfca5fe70b2c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460565028,
        "parent_id": "27aafc2b-5223-495b-a2a8-ea301a388cc7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public enum Direction {\n    NORTH, SOUTH, EAST, WEST;\n\n    public Direction getOpposite(){\n        switch (this){\n            case NORTH:\n                return SOUTH;               \n            case SOUTH:\n                return NORTH;                \n            case WEST:\n                return EAST; \n            case EAST:\n                return WEST;  \n            default: //This will never happen\n                return null;\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public enum Direction {\n    NORTH, SOUTH, EAST, WEST;\n\n    public Direction getOpposite(){\n        switch (this){\n            case NORTH:\n                return SOUTH;               \n            case SOUTH:\n                return NORTH;                \n            case WEST:\n                return EAST; \n            case EAST:\n                return WEST;  \n            default: //This will never happen\n                return null;\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460565028,
        "id": "cc131c07-eff0-4198-a22f-b5d52d094af3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460565028,
        "parent_id": "27aafc2b-5223-495b-a2a8-ea301a388cc7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This can be improved further through the use of fields and static initializer blocks:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This can be improved further through the use of fields and static initializer blocks:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460565029,
        "id": "e19c182f-e0e6-4e8d-872f-d9aecb503331",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460565029,
        "parent_id": "27aafc2b-5223-495b-a2a8-ea301a388cc7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public enum Direction {\n    NORTH, SOUTH, EAST, WEST;\n    \n    private Direction opposite;\n    \n    public Direction getOpposite(){\n        return opposite;\n    }\n    \n    static {\n        NORTH.opposite = SOUTH;\n        SOUTH.opposite = NORTH;\n        WEST.opposite = EAST;\n        EAST.opposite = WEST;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public enum Direction {\n    NORTH, SOUTH, EAST, WEST;\n    \n    private Direction opposite;\n    \n    public Direction getOpposite(){\n        return opposite;\n    }\n    \n    static {\n        NORTH.opposite = SOUTH;\n        SOUTH.opposite = NORTH;\n        WEST.opposite = EAST;\n        EAST.opposite = WEST;\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460565030,
        "id": "e686fd90-d953-4403-a1a5-68cb38f2978e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460565030,
        "parent_id": "27aafc2b-5223-495b-a2a8-ea301a388cc7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example, the opposite direction is stored in a private instance field "
            ],
            [
              "opposite",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is statically initialized the first time a "
            ],
            [
              "Direction",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is used. In this particular case (because "
            ],
            [
              "NORTH",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " references "
            ],
            [
              "SOUTH",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and conversely), we cannot use "
            ],
            [
              "Enums with constructors",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/155/enums/602/enums-with-constructors#t=201607220740460629821"
                ]
              ]
            ],
            [
              " here (Constructors "
            ],
            [
              "NORTH(SOUTH), SOUTH(NORTH), EAST(WEST), WEST(EAST)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " would be more elegant and would allow "
            ],
            [
              "opposite",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to be declared "
            ],
            [
              "final",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", but would be self-referential and therefore are not allowed)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example, the opposite direction is stored in a private instance field "
          },
          {
            "Text": "opposite",
            "AttrFlags": 2
          },
          {
            "Text": ", which is statically initialized the first time a "
          },
          {
            "Text": "Direction",
            "AttrFlags": 2
          },
          {
            "Text": " is used. In this particular case (because "
          },
          {
            "Text": "NORTH",
            "AttrFlags": 2
          },
          {
            "Text": " references "
          },
          {
            "Text": "SOUTH",
            "AttrFlags": 2
          },
          {
            "Text": " and conversely), we cannot use "
          },
          {
            "Text": "Enums with constructors",
            "Link": "http://stackoverflow.com/documentation/java/155/enums/602/enums-with-constructors#t=201607220740460629821"
          },
          {
            "Text": " here (Constructors "
          },
          {
            "Text": "NORTH(SOUTH), SOUTH(NORTH), EAST(WEST), WEST(EAST)",
            "AttrFlags": 2
          },
          {
            "Text": " would be more elegant and would allow "
          },
          {
            "Text": "opposite",
            "AttrFlags": 2
          },
          {
            "Text": " to be declared "
          },
          {
            "Text": "final",
            "AttrFlags": 2
          },
          {
            "Text": ", but would be self-referential and therefore are not allowed)."
          }
        ]
      }
    ],
    "title": "060 Using methods and static blocks"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}