{
  "ID": "056c7a00-90b5-4fcd-9d37-dd270c8c4639",
  "Root": {
    "alive": true,
    "content": [
      "f3afc1dd-8b5c-4f7c-a515-5c41bd99e42b",
      "27813e2c-37b8-46c7-bcd7-c153f2c28359",
      "399f2ff1-da8d-400b-8e8f-8f86851b078c",
      "9fc8a45b-9d8d-4e95-a508-c680140f3602"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460550101,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "056c7a00-90b5-4fcd-9d37-dd270c8c4639",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460550101,
    "parent_id": "f602a51a-866e-489c-b102-d755ada1334d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Return default value if Optional is empty"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460550100,
        "id": "f3afc1dd-8b5c-4f7c-a515-5c41bd99e42b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460550100,
        "parent_id": "056c7a00-90b5-4fcd-9d37-dd270c8c4639",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Don’t just use "
            ],
            [
              "Optional.get()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html#get--"
                ]
              ]
            ],
            [
              " since that may throw "
            ],
            [
              "NoSuchElementException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The "
            ],
            [
              "Optional.orElse(T)",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html#orElse-T-"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Optional.orElseGet(Supplier\u003c? extends T\u003e)",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html#orElseGet-java.util.function.Supplier-"
                ]
              ]
            ],
            [
              " methods provide a way to supply a default value in case the Optional is empty."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Don’t just use "
          },
          {
            "Text": "Optional.get()",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html#get--"
          },
          {
            "Text": " since that may throw "
          },
          {
            "Text": "NoSuchElementException",
            "AttrFlags": 2
          },
          {
            "Text": ". The "
          },
          {
            "Text": "Optional.orElse(T)",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html#orElse-T-"
          },
          {
            "Text": " and "
          },
          {
            "Text": "Optional.orElseGet(Supplier\u003c? extends T\u003e)",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html#orElseGet-java.util.function.Supplier-"
          },
          {
            "Text": " methods provide a way to supply a default value in case the Optional is empty."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460550100,
        "id": "27813e2c-37b8-46c7-bcd7-c153f2c28359",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460550100,
        "parent_id": "056c7a00-90b5-4fcd-9d37-dd270c8c4639",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "String value = \"something\";\n\nreturn Optional.ofNullable(value).orElse(\"defaultValue\");\n// returns \"something\"\n\nreturn Optional.ofNullable(value).orElseGet(() -\u003e getDefaultValue());\n// returns \"something\" (never calls the getDefaultValue() method)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "String value = \"something\";\n\nreturn Optional.ofNullable(value).orElse(\"defaultValue\");\n// returns \"something\"\n\nreturn Optional.ofNullable(value).orElseGet(() -\u003e getDefaultValue());\n// returns \"something\" (never calls the getDefaultValue() method)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460550100,
        "id": "399f2ff1-da8d-400b-8e8f-8f86851b078c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460550100,
        "parent_id": "056c7a00-90b5-4fcd-9d37-dd270c8c4639",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "String value = null;\n\nreturn Optional.ofNullable(value).orElse(\"defaultValue\");\n// returns \"defaultValue\"\n\nreturn Optional.ofNullable(value).orElseGet(() -\u003e getDefaultValue());\n// calls getDefaultValue() and returns its results"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "String value = null;\n\nreturn Optional.ofNullable(value).orElse(\"defaultValue\");\n// returns \"defaultValue\"\n\nreturn Optional.ofNullable(value).orElseGet(() -\u003e getDefaultValue());\n// calls getDefaultValue() and returns its results",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460550101,
        "id": "9fc8a45b-9d8d-4e95-a508-c680140f3602",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460550101,
        "parent_id": "056c7a00-90b5-4fcd-9d37-dd270c8c4639",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The crucial difference between the "
            ],
            [
              "orElse",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "orElseGet",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is that the latter is only evaluated when the Optional is empty while the argument supplied to the former one is evaluated even if the Optional is not empty. The "
            ],
            [
              "orElse",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " should therefore only be used for constants and never for supplying value based on any sort of computation."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The crucial difference between the "
          },
          {
            "Text": "orElse",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "orElseGet",
            "AttrFlags": 2
          },
          {
            "Text": " is that the latter is only evaluated when the Optional is empty while the argument supplied to the former one is evaluated even if the Optional is not empty. The "
          },
          {
            "Text": "orElse",
            "AttrFlags": 2
          },
          {
            "Text": " should therefore only be used for constants and never for supplying value based on any sort of computation."
          }
        ]
      }
    ],
    "title": "Return default value if Optional is empty",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}