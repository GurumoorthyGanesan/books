{
  "ID": "4474c729-e587-4d93-8c6d-90b705372ef8",
  "Root": {
    "alive": true,
    "content": [
      "52577c7b-fda2-468e-8ebd-dcbb7b779647",
      "d3f4ee8d-0b07-4430-8861-7a41099b5016",
      "94ec3ddd-d7ac-4383-8234-55bcc538e192",
      "689ad724-257a-4a33-a5f6-9addb1b679a1",
      "59259faa-8233-4044-9133-90a40acd6437",
      "5de650a9-915b-434a-a046-474dbb3f2c86",
      "56813d7d-4cca-4ab1-93b4-df0ac07a8bbe",
      "6476aa64-1433-458e-91b4-4343e3a247f1",
      "cf11d991-a710-4fe9-8488-6d46fae76ee6",
      "9c737ce2-9f4e-474d-b7d8-ee45adf1c5d1",
      "c842ab44-b07d-49da-9286-3ce5336ed031",
      "281d02ba-6b5d-415f-abf2-6faad32b262c",
      "185294eb-9cf0-4271-beed-2fd7224a6301",
      "bdfa99b1-0aca-417b-a186-74f1e9551279",
      "77027037-ab36-49b8-b70a-5b7f70f8e551"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460561016,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "4474c729-e587-4d93-8c6d-90b705372ef8",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551762274404,
    "parent_id": "8576ab83-1126-4d17-b0cf-2a0ba47249c1",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Enums with constructors"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460561013,
        "id": "52577c7b-fda2-468e-8ebd-dcbb7b779647",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460561013,
        "parent_id": "4474c729-e587-4d93-8c6d-90b705372ef8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " cannot have a public constructor; however, private constructors are acceptable (constructors for enums are "
            ],
            [
              "package-private",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/134/visibility-controlling-access-to-members-of-a-class/520/package-visibility#t=201609151811172109684"
                ]
              ]
            ],
            [
              " by default):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " cannot have a public constructor; however, private constructors are acceptable (constructors for enums are "
          },
          {
            "Text": "package-private",
            "Link": "http://stackoverflow.com/documentation/java/134/visibility-controlling-access-to-members-of-a-class/520/package-visibility#t=201609151811172109684"
          },
          {
            "Text": " by default):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460561013,
        "id": "d3f4ee8d-0b07-4430-8861-7a41099b5016",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460561013,
        "parent_id": "4474c729-e587-4d93-8c6d-90b705372ef8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public enum Coin {\n    PENNY(1), NICKEL(5), DIME(10), QUARTER(25); // usual names for US coins\n    // note that the above parentheses and the constructor arguments match\n    private int value;\n\n    Coin(int value) { \n        this.value = value;\n    }\n\n    public int getValue() {\n        return value;\n    }\n}\n\nint p = Coin.NICKEL.getValue(); // the int value will be 5"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public enum Coin {\n    PENNY(1), NICKEL(5), DIME(10), QUARTER(25); // usual names for US coins\n    // note that the above parentheses and the constructor arguments match\n    private int value;\n\n    Coin(int value) { \n        this.value = value;\n    }\n\n    public int getValue() {\n        return value;\n    }\n}\n\nint p = Coin.NICKEL.getValue(); // the int value will be 5",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460561014,
        "id": "94ec3ddd-d7ac-4383-8234-55bcc538e192",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460561014,
        "parent_id": "4474c729-e587-4d93-8c6d-90b705372ef8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is recommended that you keep all fields private and provide getter methods, as there are a finite number of instances for an enum."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is recommended that you keep all fields private and provide getter methods, as there are a finite number of instances for an enum."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460561014,
        "id": "689ad724-257a-4a33-a5f6-9addb1b679a1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460561014,
        "parent_id": "4474c729-e587-4d93-8c6d-90b705372ef8",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460561014,
        "id": "59259faa-8233-4044-9133-90a40acd6437",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460561014,
        "parent_id": "4474c729-e587-4d93-8c6d-90b705372ef8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you were to implement an "
            ],
            [
              "Enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as a "
            ],
            [
              "class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instead, it would look like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you were to implement an "
          },
          {
            "Text": "Enum",
            "AttrFlags": 2
          },
          {
            "Text": " as a "
          },
          {
            "Text": "class",
            "AttrFlags": 2
          },
          {
            "Text": " instead, it would look like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460561014,
        "id": "5de650a9-915b-434a-a046-474dbb3f2c86",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460561014,
        "parent_id": "4474c729-e587-4d93-8c6d-90b705372ef8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Coin\u003cT extends Coin\u003cT\u003e\u003e implements Comparable\u003cT\u003e, Serializable{\n    public static final Coin PENNY = new Coin(1);\n    public static final Coin NICKEL = new Coin(5);\n    public static final Coin DIME = new Coin(10);\n    public static final Coin QUARTER = new Coin(25);\n\n    private int value;\n\n    private Coin(int value){\n        this.value = value;\n    }\n\n    public int getValue() {\n        return value;\n    }\n}\n\nint p = Coin.NICKEL.getValue(); // the int value will be 5"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Coin\u003cT extends Coin\u003cT\u003e\u003e implements Comparable\u003cT\u003e, Serializable{\n    public static final Coin PENNY = new Coin(1);\n    public static final Coin NICKEL = new Coin(5);\n    public static final Coin DIME = new Coin(10);\n    public static final Coin QUARTER = new Coin(25);\n\n    private int value;\n\n    private Coin(int value){\n        this.value = value;\n    }\n\n    public int getValue() {\n        return value;\n    }\n}\n\nint p = Coin.NICKEL.getValue(); // the int value will be 5",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460561014,
        "id": "56813d7d-4cca-4ab1-93b4-df0ac07a8bbe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460561014,
        "parent_id": "4474c729-e587-4d93-8c6d-90b705372ef8",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460561014,
        "id": "6476aa64-1433-458e-91b4-4343e3a247f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460561014,
        "parent_id": "4474c729-e587-4d93-8c6d-90b705372ef8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Enum constants are technically mutable, so a setter could be added to change the internal structure of an enum constant. However, this is considered very bad practice and should be avoided."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Enum constants are technically mutable, so a setter could be added to change the internal structure of an enum constant. However, this is considered very bad practice and should be avoided."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460561014,
        "id": "cf11d991-a710-4fe9-8488-6d46fae76ee6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460561014,
        "parent_id": "4474c729-e587-4d93-8c6d-90b705372ef8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Best practice is to make Enum fields immutable, with "
            ],
            [
              "final",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Best practice is to make Enum fields immutable, with "
          },
          {
            "Text": "final",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460561014,
        "id": "9c737ce2-9f4e-474d-b7d8-ee45adf1c5d1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460561014,
        "parent_id": "4474c729-e587-4d93-8c6d-90b705372ef8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public enum Coin {\n    PENNY(1), NICKEL(5), DIME(10), QUARTER(25);\n\n    private final int value;\n\n    Coin(int value){ \n        this.value = value;\n    }\n\n    ...\n\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public enum Coin {\n    PENNY(1), NICKEL(5), DIME(10), QUARTER(25);\n\n    private final int value;\n\n    Coin(int value){ \n        this.value = value;\n    }\n\n    ...\n\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460561015,
        "id": "c842ab44-b07d-49da-9286-3ce5336ed031",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460561015,
        "parent_id": "4474c729-e587-4d93-8c6d-90b705372ef8",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460561015,
        "id": "281d02ba-6b5d-415f-abf2-6faad32b262c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460561015,
        "parent_id": "4474c729-e587-4d93-8c6d-90b705372ef8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You may define multiple constructors in the same enum. When you do, the arguments you pass in your enum declaration decide which constructor is called:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You may define multiple constructors in the same enum. When you do, the arguments you pass in your enum declaration decide which constructor is called:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460561015,
        "id": "185294eb-9cf0-4271-beed-2fd7224a6301",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460561015,
        "parent_id": "4474c729-e587-4d93-8c6d-90b705372ef8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public enum Coin {\n    PENNY(1, true), NICKEL(5, false), DIME(10), QUARTER(25);\n\n    private final int value;\n    private final boolean isCopperColored;\n\n    Coin(int value){\n        this(value, false);\n    }\n\n    Coin(int value, boolean isCopperColored){ \n        this.value = value;\n        this.isCopperColored = isCopperColored;\n    }\n\n    ...\n\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public enum Coin {\n    PENNY(1, true), NICKEL(5, false), DIME(10), QUARTER(25);\n\n    private final int value;\n    private final boolean isCopperColored;\n\n    Coin(int value){\n        this(value, false);\n    }\n\n    Coin(int value, boolean isCopperColored){ \n        this.value = value;\n        this.isCopperColored = isCopperColored;\n    }\n\n    ...\n\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460561015,
        "id": "bdfa99b1-0aca-417b-a186-74f1e9551279",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460561015,
        "parent_id": "4474c729-e587-4d93-8c6d-90b705372ef8",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460561016,
        "id": "77027037-ab36-49b8-b70a-5b7f70f8e551",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460561016,
        "parent_id": "4474c729-e587-4d93-8c6d-90b705372ef8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: All non-primitive enum fields should implement "
            ],
            [
              "Serializable",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html"
                ]
              ]
            ],
            [
              " because the "
            ],
            [
              "Enum",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/lang/Enum.html"
                ]
              ]
            ],
            [
              " class does."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: All non-primitive enum fields should implement "
          },
          {
            "Text": "Serializable",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html"
          },
          {
            "Text": " because the "
          },
          {
            "Text": "Enum",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/lang/Enum.html"
          },
          {
            "Text": " class does."
          }
        ]
      }
    ],
    "title": "Enums with constructors",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}