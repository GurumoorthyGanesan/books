{
  "ID": "338b3671-f6f8-41b3-95ce-0f56afd515c9",
  "Root": {
    "alive": true,
    "content": [
      "438c654e-0203-4de3-a0b4-7afa9fe6ebd5",
      "88b23def-632c-47b0-b99b-be333248ea2b",
      "75cd6f2b-937d-45c6-b82a-f55d60dc10a8",
      "a487472c-db51-477c-be6c-11505c7da8a9",
      "88f3ead1-f04d-404c-b8da-27e26ec7c115",
      "485ac48e-55b2-4743-9c22-a10c7f9e84bc",
      "7c35c692-f418-4274-9d50-6dced182e30b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460188398,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "338b3671-f6f8-41b3-95ce-0f56afd515c9",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551753734379,
    "parent_id": "bcd7d24d-a9b8-40ba-ac61-89bb802d73b5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Array Covariance"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460188394,
        "id": "438c654e-0203-4de3-a0b4-7afa9fe6ebd5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460188394,
        "parent_id": "338b3671-f6f8-41b3-95ce-0f56afd515c9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Object arrays are covariant, which means that just as "
            ],
            [
              "Integer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a subclass of "
            ],
            [
              "Number",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Integer[]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a subclass of "
            ],
            [
              "Number[]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This may seem intuitive, but can result in surprising behavior:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Object arrays are covariant, which means that just as "
          },
          {
            "Text": "Integer",
            "AttrFlags": 2
          },
          {
            "Text": " is a subclass of "
          },
          {
            "Text": "Number",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Integer[]",
            "AttrFlags": 2
          },
          {
            "Text": " is a subclass of "
          },
          {
            "Text": "Number[]",
            "AttrFlags": 2
          },
          {
            "Text": ". This may seem intuitive, but can result in surprising behavior:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460188397,
        "id": "88b23def-632c-47b0-b99b-be333248ea2b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460188397,
        "parent_id": "338b3671-f6f8-41b3-95ce-0f56afd515c9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Integer[] integerArray = {1, 2, 3};\nNumber[] numberArray = integerArray;  // valid\nNumber firstElement = numberArray[0]; // valid\nnumberArray[0] = 4L;                  // throws ArrayStoreException at runtime"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Integer[] integerArray = {1, 2, 3};\nNumber[] numberArray = integerArray;  // valid\nNumber firstElement = numberArray[0]; // valid\nnumberArray[0] = 4L;                  // throws ArrayStoreException at runtime",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460188397,
        "id": "75cd6f2b-937d-45c6-b82a-f55d60dc10a8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460188397,
        "parent_id": "338b3671-f6f8-41b3-95ce-0f56afd515c9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Although "
            ],
            [
              "Integer[]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a subclass of "
            ],
            [
              "Number[]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", it can only hold "
            ],
            [
              "Integer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s, and trying to assign a "
            ],
            [
              "Long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " element throws a runtime exception."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Although "
          },
          {
            "Text": "Integer[]",
            "AttrFlags": 2
          },
          {
            "Text": " is a subclass of "
          },
          {
            "Text": "Number[]",
            "AttrFlags": 2
          },
          {
            "Text": ", it can only hold "
          },
          {
            "Text": "Integer",
            "AttrFlags": 2
          },
          {
            "Text": "s, and trying to assign a "
          },
          {
            "Text": "Long",
            "AttrFlags": 2
          },
          {
            "Text": " element throws a runtime exception."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460188397,
        "id": "a487472c-db51-477c-be6c-11505c7da8a9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460188397,
        "parent_id": "338b3671-f6f8-41b3-95ce-0f56afd515c9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that this behavior is unique to arrays, and can be avoided by using a generic "
            ],
            [
              "List",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instead:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that this behavior is unique to arrays, and can be avoided by using a generic "
          },
          {
            "Text": "List",
            "AttrFlags": 2
          },
          {
            "Text": " instead:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460188397,
        "id": "88f3ead1-f04d-404c-b8da-27e26ec7c115",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460188397,
        "parent_id": "338b3671-f6f8-41b3-95ce-0f56afd515c9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "List\u003cInteger\u003e integerList = Arrays.asList(1, 2, 3);\n//List\u003cNumber\u003e numberList = integerList;  // compile error\nList\u003c? extends Number\u003e numberList = integerList;\nNumber firstElement = numberList.get(0);\n//numberList.set(0, 4L);                  // compile error"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "List\u003cInteger\u003e integerList = Arrays.asList(1, 2, 3);\n//List\u003cNumber\u003e numberList = integerList;  // compile error\nList\u003c? extends Number\u003e numberList = integerList;\nNumber firstElement = numberList.get(0);\n//numberList.set(0, 4L);                  // compile error",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460188398,
        "id": "485ac48e-55b2-4743-9c22-a10c7f9e84bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460188398,
        "parent_id": "338b3671-f6f8-41b3-95ce-0f56afd515c9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It’s not necessary for all of the array elements to share the same type, as long as they are a subclass of the array’s type:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It’s not necessary for all of the array elements to share the same type, as long as they are a subclass of the array’s type:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460188398,
        "id": "7c35c692-f418-4274-9d50-6dced182e30b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460188398,
        "parent_id": "338b3671-f6f8-41b3-95ce-0f56afd515c9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "interface I {}\n\nclass A implements I {}\nclass B implements I {}\nclass C implements I {}\n\nI[] array10 = new I[] { new A(), new B(), new C() }; // Create an array with new\n                                                     // operator and array initializer.\n\nI[] array11 = { new A(), new B(), new C() };         // Shortcut syntax with array\n                                                     // initializer.\n\nI[] array12 = new I[3];                              // { null, null, null }\n\nI[] array13 = new A[] { new A(), new A() };          // Works because A implements I.\n\nObject[] array14 = new Object[] { \"Hello, World!\", 3.14159, 42 }; // Create an array with\n                                                     // new operator and array initializer.\n\nObject[] array15 = { new A(), 64, \"My String\" };     // Shortcut syntax \n                                                     // with array initializer."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "interface I {}\n\nclass A implements I {}\nclass B implements I {}\nclass C implements I {}\n\nI[] array10 = new I[] { new A(), new B(), new C() }; // Create an array with new\n                                                     // operator and array initializer.\n\nI[] array11 = { new A(), new B(), new C() };         // Shortcut syntax with array\n                                                     // initializer.\n\nI[] array12 = new I[3];                              // { null, null, null }\n\nI[] array13 = new A[] { new A(), new A() };          // Works because A implements I.\n\nObject[] array14 = new Object[] { \"Hello, World!\", 3.14159, 42 }; // Create an array with\n                                                     // new operator and array initializer.\n\nObject[] array15 = { new A(), 64, \"My String\" };     // Shortcut syntax \n                                                     // with array initializer.",
        "code_language": "Plain Text"
      }
    ],
    "title": "Array Covariance",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}