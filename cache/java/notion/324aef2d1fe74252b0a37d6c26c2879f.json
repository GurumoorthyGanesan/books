{
  "ID": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
  "Root": {
    "alive": true,
    "content": [
      "ccff66c9-0923-4664-a37d-2a348bc916d0",
      "bde48088-03e8-4890-b634-b7a4fd9e26cf",
      "6101a47d-82d8-4247-9156-0fccb566bdbd",
      "846a9556-0824-4a15-a6c5-7c28ff82effb",
      "b38e078e-80ba-4693-a747-a261aaa27c28",
      "c2c15335-ac19-4872-9201-610c4e151a04",
      "dad763a3-c3ec-48de-988a-a54a413c416b",
      "512111fc-8aa5-444e-9216-60c7ce16ce5b",
      "59c357c4-730a-484b-85ee-6e078c71c8e7",
      "c08c75d9-9340-4349-8279-3f13cb63a9d7",
      "06a3ab08-d38b-47d2-afdc-e49ddfa836ea",
      "a9da7b3a-64f9-46c4-9cf0-e839946e0bb5",
      "b061ff4d-25b1-4191-9d18-6d41311e20f0",
      "7da97c98-c884-49e3-8f17-c7e4637b54cd",
      "24b5e937-048b-414a-8606-ebffb854f4ef",
      "df1cc6fd-c301-4f90-a825-87e3daaaf97c",
      "e0f7d525-10a7-40cc-953b-9b53d4fb700e",
      "f7dabbec-6605-4cb6-857b-3b9c15bcc349",
      "c03e3f33-e069-42e6-941d-bf472eb2af8c",
      "4ca07630-acf7-4d82-a5aa-6efd29ea16d2",
      "cecbd50a-a796-4b07-9d77-7aecbd07716a",
      "cdf6705f-37c6-4992-97c9-6ca5ed930ced",
      "420c824c-7311-4201-83c3-28d772175af3",
      "cfd269cd-524a-4be9-a7ed-1d38bc7f8a90"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460478155,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551763654837,
    "parent_id": "554c1de0-d05d-42a6-83c5-3aa4b3d0fc65",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using int and Integer interchangeably"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478147,
        "id": "ccff66c9-0923-4664-a37d-2a348bc916d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478147,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As you use generic types with utility classes, you may often find that number types aren’t very helpful when specified as the object types, as they aren’t equal to their primitive counterparts."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As you use generic types with utility classes, you may often find that number types aren’t very helpful when specified as the object types, as they aren’t equal to their primitive counterparts."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478150,
        "id": "bde48088-03e8-4890-b634-b7a4fd9e26cf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478150,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "List\u003cInteger\u003e ints = new ArrayList\u003cInteger\u003e();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "List\u003cInteger\u003e ints = new ArrayList\u003cInteger\u003e();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478150,
        "id": "6101a47d-82d8-4247-9156-0fccb566bdbd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478150,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "List\u003cInteger\u003e ints = new ArrayList\u003c\u003e();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "List\u003cInteger\u003e ints = new ArrayList\u003c\u003e();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478150,
        "id": "846a9556-0824-4a15-a6c5-7c28ff82effb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478150,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Fortunately, expressions that evaluate to "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be used in place of an "
            ],
            [
              "Integer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when it is needed."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Fortunately, expressions that evaluate to "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " can be used in place of an "
          },
          {
            "Text": "Integer",
            "AttrFlags": 2
          },
          {
            "Text": " when it is needed."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478150,
        "id": "b38e078e-80ba-4693-a747-a261aaa27c28",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478150,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "for (int i = 0; i \u003c 10; i++)\n    ints.add(i);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "for (int i = 0; i \u003c 10; i++)\n    ints.add(i);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478150,
        "id": "c2c15335-ac19-4872-9201-610c4e151a04",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478150,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "ints.add(i);",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement is equivalent to:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "ints.add(i);",
            "AttrFlags": 2
          },
          {
            "Text": " statement is equivalent to:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478150,
        "id": "dad763a3-c3ec-48de-988a-a54a413c416b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478150,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "ints.add(Integer.valueOf(i));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "ints.add(Integer.valueOf(i));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478151,
        "id": "512111fc-8aa5-444e-9216-60c7ce16ce5b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478151,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And retains properties from "
            ],
            [
              "Integer#valueOf",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " such as having the same "
            ],
            [
              "Integer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " objects cached by the JVM when it is within the number caching range."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And retains properties from "
          },
          {
            "Text": "Integer#valueOf",
            "AttrFlags": 2
          },
          {
            "Text": " such as having the same "
          },
          {
            "Text": "Integer",
            "AttrFlags": 2
          },
          {
            "Text": " objects cached by the JVM when it is within the number caching range."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478151,
        "id": "59c357c4-730a-484b-85ee-6e078c71c8e7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478151,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This also applies to:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This also applies to:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478151,
        "id": "c08c75d9-9340-4349-8279-3f13cb63a9d7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478151,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "byte",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Byte",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "byte",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Byte",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478151,
        "id": "06a3ab08-d38b-47d2-afdc-e49ddfa836ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478151,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "short",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Short",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "short",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Short",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478152,
        "id": "a9da7b3a-64f9-46c4-9cf0-e839946e0bb5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478152,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Float",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Float",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478152,
        "id": "b061ff4d-25b1-4191-9d18-6d41311e20f0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478152,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Double",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "double",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Double",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478152,
        "id": "7da97c98-c884-49e3-8f17-c7e4637b54cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478152,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Long",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "long",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Long",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478152,
        "id": "24b5e937-048b-414a-8606-ebffb854f4ef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478152,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Character",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Character",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478153,
        "id": "df1cc6fd-c301-4f90-a825-87e3daaaf97c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478153,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "boolean",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Boolean",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "boolean",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Boolean",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478153,
        "id": "e0f7d525-10a7-40cc-953b-9b53d4fb700e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478153,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Care must be taken, however, in ambiguous situations. Consider the following code:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Care must be taken, however, in ambiguous situations. Consider the following code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478153,
        "id": "f7dabbec-6605-4cb6-857b-3b9c15bcc349",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478153,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "List\u003cInteger\u003e ints = new ArrayList\u003cInteger\u003e();\nints.add(1);\nints.add(2);\nints.add(3);\nints.remove(1); // ints is now [1, 3]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "List\u003cInteger\u003e ints = new ArrayList\u003cInteger\u003e();\nints.add(1);\nints.add(2);\nints.add(3);\nints.remove(1); // ints is now [1, 3]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478153,
        "id": "c03e3f33-e069-42e6-941d-bf472eb2af8c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478153,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "java.util.List",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface contains both a "
            ],
            [
              "remove(int index)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " ("
            ],
            [
              "List",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface method) and a "
            ],
            [
              "remove(Object o)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (method inherited from "
            ],
            [
              "java.util.Collection",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "). In this case no boxing takes place and "
            ],
            [
              "remove(int index)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is called."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "java.util.List",
            "AttrFlags": 2
          },
          {
            "Text": " interface contains both a "
          },
          {
            "Text": "remove(int index)",
            "AttrFlags": 2
          },
          {
            "Text": " ("
          },
          {
            "Text": "List",
            "AttrFlags": 2
          },
          {
            "Text": " interface method) and a "
          },
          {
            "Text": "remove(Object o)",
            "AttrFlags": 2
          },
          {
            "Text": " (method inherited from "
          },
          {
            "Text": "java.util.Collection",
            "AttrFlags": 2
          },
          {
            "Text": "). In this case no boxing takes place and "
          },
          {
            "Text": "remove(int index)",
            "AttrFlags": 2
          },
          {
            "Text": " is called."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478153,
        "id": "4ca07630-acf7-4d82-a5aa-6efd29ea16d2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478153,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One more example of strange Java code behavior caused by autoboxing Integers with values in range from "
            ],
            [
              "-128",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "127",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One more example of strange Java code behavior caused by autoboxing Integers with values in range from "
          },
          {
            "Text": "-128",
            "AttrFlags": 2
          },
          {
            "Text": " to "
          },
          {
            "Text": "127",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478153,
        "id": "cecbd50a-a796-4b07-9d77-7aecbd07716a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478153,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Integer a = 127;\nInteger b = 127;\nInteger c = 128;\nInteger d = 128;\nSystem.out.println(a == b); // true\nSystem.out.println(c \u003c= d); // true\nSystem.out.println(c \u003e= d); // true\nSystem.out.println(c == d); // false"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Integer a = 127;\nInteger b = 127;\nInteger c = 128;\nInteger d = 128;\nSystem.out.println(a == b); // true\nSystem.out.println(c \u003c= d); // true\nSystem.out.println(c \u003e= d); // true\nSystem.out.println(c == d); // false",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478154,
        "id": "cdf6705f-37c6-4992-97c9-6ca5ed930ced",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478154,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This happens because "
            ],
            [
              "\u003e=",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator implicitly calls "
            ],
            [
              "intValue()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which returns "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " while "
            ],
            [
              "==",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " compares "
            ],
            [
              "references",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", not the "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " values."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This happens because "
          },
          {
            "Text": "\u003e=",
            "AttrFlags": 2
          },
          {
            "Text": " operator implicitly calls "
          },
          {
            "Text": "intValue()",
            "AttrFlags": 2
          },
          {
            "Text": " which returns "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " while "
          },
          {
            "Text": "==",
            "AttrFlags": 2
          },
          {
            "Text": " compares "
          },
          {
            "Text": "references",
            "AttrFlags": 1
          },
          {
            "Text": ", not the "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " values."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478154,
        "id": "420c824c-7311-4201-83c3-28d772175af3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478154,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By default, Java caches values in range "
            ],
            [
              "[-128, 127]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", so the operator "
            ],
            [
              "==",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " works because the "
            ],
            [
              "Integers",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in this range reference to the same objects if their values are same. Maximal value of the cacheable range can be defined with "
            ],
            [
              "-XX:AutoBoxCacheMax",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " JVM option. So, if you run the program with "
            ],
            [
              "-XX:AutoBoxCacheMax=1000",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the following code will print "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By default, Java caches values in range "
          },
          {
            "Text": "[-128, 127]",
            "AttrFlags": 2
          },
          {
            "Text": ", so the operator "
          },
          {
            "Text": "==",
            "AttrFlags": 2
          },
          {
            "Text": " works because the "
          },
          {
            "Text": "Integers",
            "AttrFlags": 2
          },
          {
            "Text": " in this range reference to the same objects if their values are same. Maximal value of the cacheable range can be defined with "
          },
          {
            "Text": "-XX:AutoBoxCacheMax",
            "AttrFlags": 2
          },
          {
            "Text": " JVM option. So, if you run the program with "
          },
          {
            "Text": "-XX:AutoBoxCacheMax=1000",
            "AttrFlags": 2
          },
          {
            "Text": ", the following code will print "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460478155,
        "id": "cfd269cd-524a-4be9-a7ed-1d38bc7f8a90",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460478155,
        "parent_id": "324aef2d-1fe7-4252-b0a3-7d6c26c2879f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Integer a = 1000;\nInteger b = 1000;\nSystem.out.println(a == b); // true"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Integer a = 1000;\nInteger b = 1000;\nSystem.out.println(a == b); // true",
        "code_language": "Plain Text"
      }
    ],
    "title": "Using int and Integer interchangeably",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}