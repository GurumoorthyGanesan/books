{
  "ID": "37998d2b-28fe-41c8-b556-14dd6a8c1354",
  "Root": {
    "alive": true,
    "content": [
      "7fab8605-1ca4-4ca6-916f-6c2654775f54",
      "351a65e2-6e42-42fc-8811-8138b60e1558",
      "fae603e1-b654-4342-8029-73581504aba6",
      "16017897-5aa7-4ae1-b594-ba6b526b8ac0",
      "f74520f0-0fd0-42c1-987f-92e0ed78d516"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550461203015,
    "id": "37998d2b-28fe-41c8-b556-14dd6a8c1354",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550461203015,
    "parent_id": "8a480f36-543e-421b-9c30-b81e4e4de51b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Encapsulation to reduce coupling"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461203012,
        "id": "7fab8605-1ca4-4ca6-916f-6c2654775f54",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461203012,
        "parent_id": "37998d2b-28fe-41c8-b556-14dd6a8c1354",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Encapsulation allows you to make internal changes to a class without affecting any code that calls the class. This reduces "
            ],
            [
              "coupling",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", or how much any given class relies on the implementation of another class."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Encapsulation allows you to make internal changes to a class without affecting any code that calls the class. This reduces "
          },
          {
            "Text": "coupling",
            "AttrFlags": 4
          },
          {
            "Text": ", or how much any given class relies on the implementation of another class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461203015,
        "id": "351a65e2-6e42-42fc-8811-8138b60e1558",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461203015,
        "parent_id": "37998d2b-28fe-41c8-b556-14dd6a8c1354",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example, let’s change the implementation of the Angle class from the previous example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example, let’s change the implementation of the Angle class from the previous example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461203015,
        "id": "fae603e1-b654-4342-8029-73581504aba6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461203015,
        "parent_id": "37998d2b-28fe-41c8-b556-14dd6a8c1354",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Angle {\n    \n    private double angleInDegrees;\n    \n    public static Angle angleFromDegrees(double degrees){\n        Angle a = new Angle();\n        a.angleInDegrees = degrees;\n        return a;\n    }\n    \n    public static Angle angleFromRadians(double radians){\n        Angle a = new Angle();\n        a.angleInDegrees = radians*180/Math.PI;\n        return a;\n    }\n    \n    public double getDegrees(){\n        return angleInDegrees;\n    }\n    \n    public double getRadians(){\n        return angleInDegrees*Math.PI / 180;\n    }\n    \n    public void setDegrees(double degrees){\n        this.angleInDegrees = degrees;\n    }\n    \n    public void setRadians(double radians){\n        this.angleInDegrees = radians*180/Math.PI;\n    }\n\n    private Angle(){}\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Angle {\n    \n    private double angleInDegrees;\n    \n    public static Angle angleFromDegrees(double degrees){\n        Angle a = new Angle();\n        a.angleInDegrees = degrees;\n        return a;\n    }\n    \n    public static Angle angleFromRadians(double radians){\n        Angle a = new Angle();\n        a.angleInDegrees = radians*180/Math.PI;\n        return a;\n    }\n    \n    public double getDegrees(){\n        return angleInDegrees;\n    }\n    \n    public double getRadians(){\n        return angleInDegrees*Math.PI / 180;\n    }\n    \n    public void setDegrees(double degrees){\n        this.angleInDegrees = degrees;\n    }\n    \n    public void setRadians(double radians){\n        this.angleInDegrees = radians*180/Math.PI;\n    }\n\n    private Angle(){}\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461203015,
        "id": "16017897-5aa7-4ae1-b594-ba6b526b8ac0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461203015,
        "parent_id": "37998d2b-28fe-41c8-b556-14dd6a8c1354",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The implementation of this class has changed so that it only stores one representation of the angle and calculates the other angle when needed."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The implementation of this class has changed so that it only stores one representation of the angle and calculates the other angle when needed."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461203015,
        "id": "f74520f0-0fd0-42c1-987f-92e0ed78d516",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461203015,
        "parent_id": "37998d2b-28fe-41c8-b556-14dd6a8c1354",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, "
            ],
            [
              "the implementation changed, but the interface didn’t",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". If a calling class relied on accessing the angleInRadians method, it would need to be changed to use the new version of "
            ],
            [
              "Angle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Calling classes shouldn’t care about the internal representation of a class."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, "
          },
          {
            "Text": "the implementation changed, but the interface didn’t",
            "AttrFlags": 1
          },
          {
            "Text": ". If a calling class relied on accessing the angleInRadians method, it would need to be changed to use the new version of "
          },
          {
            "Text": "Angle",
            "AttrFlags": 2
          },
          {
            "Text": ". Calling classes shouldn’t care about the internal representation of a class."
          }
        ]
      }
    ],
    "title": "020 Encapsulation to reduce coupling"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}