{
  "ID": "1750bcb4-52f9-48fd-8b8f-69aae690d9ee",
  "Root": {
    "alive": true,
    "content": [
      "3128813f-a5e7-4b5d-8ff7-374109f94a68",
      "89d86a49-863e-4699-aedf-b850e5d152bf",
      "778fc24a-042c-4213-9dba-1b65711c35bd",
      "ad5cfd9d-c640-4aa2-aea3-072b2113a3f1",
      "8671ed04-c38b-4cbb-9b53-e778d90e86ca",
      "1b50e116-3be1-474d-aa9c-1ebdfafdccdd",
      "1fa75b5b-8468-40fc-bf41-17567f5bf69a",
      "df2ab32b-15f5-4f01-824f-53bc93348ab0",
      "0417bcdc-9496-4057-b655-9222b6d729d3",
      "5f59054e-ddf7-4023-993d-41be28f96e00",
      "964e8952-7620-4afe-a0ca-1b92f11be189",
      "9f715559-9b10-4286-a63d-2cd42668d0a5"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460239311,
    "id": "1750bcb4-52f9-48fd-8b8f-69aae690d9ee",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460239311,
    "parent_id": "98fc7929-b076-4b4c-8088-3851bfc3fdbf",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "230 Parsing Strings to a Numerical Value"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460239305,
        "id": "3128813f-a5e7-4b5d-8ff7-374109f94a68",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460239305,
        "parent_id": "1750bcb4-52f9-48fd-8b8f-69aae690d9ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "String to a primitive numeric type or a numeric wrapper type:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "String to a primitive numeric type or a numeric wrapper type:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460239307,
        "id": "89d86a49-863e-4699-aedf-b850e5d152bf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460239307,
        "parent_id": "1750bcb4-52f9-48fd-8b8f-69aae690d9ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Each numeric wrapper class provides a "
            ],
            [
              "parseXxx",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method that converts a "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to the corresponding primitive type. The following code converts a "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to an "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " using the "
            ],
            [
              "Integer.parseInt",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Each numeric wrapper class provides a "
          },
          {
            "Text": "parseXxx",
            "AttrFlags": 2
          },
          {
            "Text": " method that converts a "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " to the corresponding primitive type. The following code converts a "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " to an "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " using the "
          },
          {
            "Text": "Integer.parseInt",
            "AttrFlags": 2
          },
          {
            "Text": " method:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460239308,
        "id": "778fc24a-042c-4213-9dba-1b65711c35bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460239308,
        "parent_id": "1750bcb4-52f9-48fd-8b8f-69aae690d9ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "String string = \"59\";\nint primitive = Integer.parseInteger(string);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "String string = \"59\";\nint primitive = Integer.parseInteger(string);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460239308,
        "id": "ad5cfd9d-c640-4aa2-aea3-072b2113a3f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460239308,
        "parent_id": "1750bcb4-52f9-48fd-8b8f-69aae690d9ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To convert to a "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to an instance of a numeric wrapper class you can either use an overload of the wrapper classes "
            ],
            [
              "valueOf",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To convert to a "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " to an instance of a numeric wrapper class you can either use an overload of the wrapper classes "
          },
          {
            "Text": "valueOf",
            "AttrFlags": 2
          },
          {
            "Text": " method:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460239308,
        "id": "8671ed04-c38b-4cbb-9b53-e778d90e86ca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460239308,
        "parent_id": "1750bcb4-52f9-48fd-8b8f-69aae690d9ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "String string = \"59\";\nInteger wrapper = Integer.valueOf(string);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "String string = \"59\";\nInteger wrapper = Integer.valueOf(string);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460239308,
        "id": "1b50e116-3be1-474d-aa9c-1ebdfafdccdd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460239308,
        "parent_id": "1750bcb4-52f9-48fd-8b8f-69aae690d9ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "or rely on auto boxing (Java 5 and later):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "or rely on auto boxing (Java 5 and later):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460239308,
        "id": "1fa75b5b-8468-40fc-bf41-17567f5bf69a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460239308,
        "parent_id": "1750bcb4-52f9-48fd-8b8f-69aae690d9ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "String string = \"59\";\nInteger wrapper = Integer.parseInteger(string);  // 'int' result is autoboxed"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "String string = \"59\";\nInteger wrapper = Integer.parseInteger(string);  // 'int' result is autoboxed",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460239309,
        "id": "df2ab32b-15f5-4f01-824f-53bc93348ab0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460239309,
        "parent_id": "1750bcb4-52f9-48fd-8b8f-69aae690d9ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The above pattern works for "
            ],
            [
              "byte",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "short",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and the corresponding wrapper classes ("
            ],
            [
              "Byte",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Short",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Integer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The above pattern works for "
          },
          {
            "Text": "byte",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "short",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "long",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "double",
            "AttrFlags": 2
          },
          {
            "Text": " and the corresponding wrapper classes ("
          },
          {
            "Text": "Byte",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Short",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Integer",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Long",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Float",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Double",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460239309,
        "id": "0417bcdc-9496-4057-b655-9222b6d729d3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460239309,
        "parent_id": "1750bcb4-52f9-48fd-8b8f-69aae690d9ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "String to Integer using radix:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "String to Integer using radix:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460239309,
        "id": "5f59054e-ddf7-4023-993d-41be28f96e00",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460239309,
        "parent_id": "1750bcb4-52f9-48fd-8b8f-69aae690d9ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "String integerAsString = \"0101\"; // binary representation\nint parseInt = Integer.parseInt(integerAsString,2);\nInteger valueOfInteger = Integer.valueOf(integerAsString,2);\nSystem.out.println(valueOfInteger); // prints 5 \nSystem.out.println(parseInt); // prints 5"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "String integerAsString = \"0101\"; // binary representation\nint parseInt = Integer.parseInt(integerAsString,2);\nInteger valueOfInteger = Integer.valueOf(integerAsString,2);\nSystem.out.println(valueOfInteger); // prints 5 \nSystem.out.println(parseInt); // prints 5",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460239309,
        "id": "964e8952-7620-4afe-a0ca-1b92f11be189",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460239309,
        "parent_id": "1750bcb4-52f9-48fd-8b8f-69aae690d9ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Exceptions",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Exceptions",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460239311,
        "id": "9f715559-9b10-4286-a63d-2cd42668d0a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460239311,
        "parent_id": "1750bcb4-52f9-48fd-8b8f-69aae690d9ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The unchecked "
            ],
            [
              "NumberFormatException",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/lang/NumberFormatException.html"
                ]
              ]
            ],
            [
              " exception will be thrown if a numeric "
            ],
            [
              "valueOf(String)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "parseXxx(...)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method is called for a string that is not an acceptable numeric representation, or that represents a value that is out of range."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The unchecked "
          },
          {
            "Text": "NumberFormatException",
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/lang/NumberFormatException.html"
          },
          {
            "Text": " exception will be thrown if a numeric "
          },
          {
            "Text": "valueOf(String)",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "parseXxx(...)",
            "AttrFlags": 2
          },
          {
            "Text": " method is called for a string that is not an acceptable numeric representation, or that represents a value that is out of range."
          }
        ]
      }
    ],
    "title": "230 Parsing Strings to a Numerical Value"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}