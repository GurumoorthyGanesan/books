{
  "ID": "2267c771-42d1-458b-b886-5d82453299d7",
  "Root": {
    "alive": true,
    "content": [
      "98239dd0-13f7-447d-9c1e-55db7b4a7051",
      "c5e2796c-2b01-4936-a9b0-f088bc8318c7",
      "1066d08e-a79b-4c06-bff2-3f364059d281",
      "f7f24044-bfa5-42e4-b492-33094d04dd45",
      "98bd0d7a-647b-4acf-83d3-72ce162467d4",
      "eff4d55e-5694-4e81-bd08-718fcf18eda8",
      "ea7e984d-bd18-471f-9c05-2534f0f38b7f",
      "668bc70b-5a30-4604-bad9-000450eef918",
      "30ba4761-ad77-4119-9f74-992f4a55883f",
      "120fe39d-1820-4f14-8aa4-0001cd819d1f",
      "d7c686ef-f471-4930-b21a-3bbc12e93c80",
      "cca24a65-34af-4aee-bc89-748634656402",
      "5f8c8435-b7bc-4645-97ce-bab786dfb349",
      "57e06bfe-8c4e-4270-9bad-ee09bab1991c",
      "e6e18bcc-f9e3-4892-af87-0aa63912e553",
      "0f7c10d4-9cac-400d-8726-fb24262be2b6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460146008,
    "id": "2267c771-42d1-458b-b886-5d82453299d7",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460146008,
    "parent_id": "b352327f-4045-48dc-891e-ceda03965ca0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Using Lambda Expressions to Sort a Collection"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460146002,
        "id": "98239dd0-13f7-447d-9c1e-55db7b4a7051",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460146002,
        "parent_id": "2267c771-42d1-458b-b886-5d82453299d7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sorting lists"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sorting lists"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460146006,
        "id": "c5e2796c-2b01-4936-a9b0-f088bc8318c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460146006,
        "parent_id": "2267c771-42d1-458b-b886-5d82453299d7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Prior to Java 8, it was necessary to implement the "
            ],
            [
              "java.util.Comparator",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html"
                ]
              ]
            ],
            [
              " interface with an anonymous (or named) class when sorting a list1:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Prior to Java 8, it was necessary to implement the "
          },
          {
            "Text": "java.util.Comparator",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html"
          },
          {
            "Text": " interface with an anonymous (or named) class when sorting a list1:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460146006,
        "id": "1066d08e-a79b-4c06-bff2-3f364059d281",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460146006,
        "parent_id": "2267c771-42d1-458b-b886-5d82453299d7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "List\u003cPerson\u003e people = ...\nCollections.sort(\n    people,\n    new Comparator\u003cPerson\u003e() {\n        public int compare(Person p1, Person p2){\n            return p1.getFirstName().compareTo(p2.getFirstName());\n        }\n    }\n);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "List\u003cPerson\u003e people = ...\nCollections.sort(\n    people,\n    new Comparator\u003cPerson\u003e() {\n        public int compare(Person p1, Person p2){\n            return p1.getFirstName().compareTo(p2.getFirstName());\n        }\n    }\n);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460146006,
        "id": "f7f24044-bfa5-42e4-b492-33094d04dd45",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460146006,
        "parent_id": "2267c771-42d1-458b-b886-5d82453299d7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Starting with Java 8, the anonymous class can be replaced with a lambda expression. Note that the types for the parameters "
            ],
            [
              "p1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "p2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be left out, as the compiler will infer them automatically:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Starting with Java 8, the anonymous class can be replaced with a lambda expression. Note that the types for the parameters "
          },
          {
            "Text": "p1",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "p2",
            "AttrFlags": 2
          },
          {
            "Text": " can be left out, as the compiler will infer them automatically:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460146006,
        "id": "98bd0d7a-647b-4acf-83d3-72ce162467d4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460146006,
        "parent_id": "2267c771-42d1-458b-b886-5d82453299d7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Collections.sort(\n    people, \n    (p1, p2) -\u003e p1.getFirstName().compareTo(p2.getFirstName())\n);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Collections.sort(\n    people, \n    (p1, p2) -\u003e p1.getFirstName().compareTo(p2.getFirstName())\n);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460146007,
        "id": "eff4d55e-5694-4e81-bd08-718fcf18eda8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460146007,
        "parent_id": "2267c771-42d1-458b-b886-5d82453299d7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The example can be simplified by using "
            ],
            [
              "Comparator.comparing",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#comparing-java.util.function.Function-"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "method references",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/91/lambda-expressions/5080/method-references"
                ]
              ]
            ],
            [
              " expressed using the "
            ],
            [
              "::",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (double colon) symbol."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The example can be simplified by using "
          },
          {
            "Text": "Comparator.comparing",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#comparing-java.util.function.Function-"
          },
          {
            "Text": " and "
          },
          {
            "Text": "method references",
            "Link": "http://stackoverflow.com/documentation/java/91/lambda-expressions/5080/method-references"
          },
          {
            "Text": " expressed using the "
          },
          {
            "Text": "::",
            "AttrFlags": 2
          },
          {
            "Text": " (double colon) symbol."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460146007,
        "id": "ea7e984d-bd18-471f-9c05-2534f0f38b7f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460146007,
        "parent_id": "2267c771-42d1-458b-b886-5d82453299d7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Collections.sort(\n    people,\n    Comparator.comparing(Person::getFirstName)\n);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Collections.sort(\n    people,\n    Comparator.comparing(Person::getFirstName)\n);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460146007,
        "id": "668bc70b-5a30-4604-bad9-000450eef918",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460146007,
        "parent_id": "2267c771-42d1-458b-b886-5d82453299d7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A static import allows us to express this more concisely, but it is debatable whether this improves overall readability:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A static import allows us to express this more concisely, but it is debatable whether this improves overall readability:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460146007,
        "id": "30ba4761-ad77-4119-9f74-992f4a55883f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460146007,
        "parent_id": "2267c771-42d1-458b-b886-5d82453299d7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import static java.util.Collections.sort;\nimport static java.util.Comparator.comparing;\n//...\nsort(people, comparing(Person::getFirstName));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import static java.util.Collections.sort;\nimport static java.util.Comparator.comparing;\n//...\nsort(people, comparing(Person::getFirstName));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460146007,
        "id": "120fe39d-1820-4f14-8aa4-0001cd819d1f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460146007,
        "parent_id": "2267c771-42d1-458b-b886-5d82453299d7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Comparators built this way can also be chained together. For example, after comparing people by their first name, if there are people with the same first name, the "
            ],
            [
              "thenComparing",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method with also compare by last name:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Comparators built this way can also be chained together. For example, after comparing people by their first name, if there are people with the same first name, the "
          },
          {
            "Text": "thenComparing",
            "AttrFlags": 2
          },
          {
            "Text": " method with also compare by last name:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460146007,
        "id": "d7c686ef-f471-4930-b21a-3bbc12e93c80",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460146007,
        "parent_id": "2267c771-42d1-458b-b886-5d82453299d7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "sort(people, comparing(Person::getFirstName).thenComparing(Person::getLastName));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "sort(people, comparing(Person::getFirstName).thenComparing(Person::getLastName));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460146007,
        "id": "cca24a65-34af-4aee-bc89-748634656402",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460146007,
        "parent_id": "2267c771-42d1-458b-b886-5d82453299d7",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460146008,
        "id": "5f8c8435-b7bc-4645-97ce-bab786dfb349",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460146008,
        "parent_id": "2267c771-42d1-458b-b886-5d82453299d7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "1 - Note that Collections.sort(…) only works on collections that are subtypes of "
            ],
            [
              "List",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The "
            ],
            [
              "Set",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Collection",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " APIs do not imply any ordering of the elements."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "1 - Note that Collections.sort(…) only works on collections that are subtypes of "
          },
          {
            "Text": "List",
            "AttrFlags": 2
          },
          {
            "Text": ". The "
          },
          {
            "Text": "Set",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Collection",
            "AttrFlags": 2
          },
          {
            "Text": " APIs do not imply any ordering of the elements."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460146008,
        "id": "57e06bfe-8c4e-4270-9bad-ee09bab1991c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460146008,
        "parent_id": "2267c771-42d1-458b-b886-5d82453299d7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sorting maps"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sorting maps"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460146008,
        "id": "e6e18bcc-f9e3-4892-af87-0aa63912e553",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460146008,
        "parent_id": "2267c771-42d1-458b-b886-5d82453299d7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can sort the entries of a "
            ],
            [
              "HashMap",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " by value in a similar fashion. (Note that a "
            ],
            [
              "LinkedHashMap",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " must be used as the target. The keys in an ordinary "
            ],
            [
              "HashMap",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are unordered.)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can sort the entries of a "
          },
          {
            "Text": "HashMap",
            "AttrFlags": 2
          },
          {
            "Text": " by value in a similar fashion. (Note that a "
          },
          {
            "Text": "LinkedHashMap",
            "AttrFlags": 2
          },
          {
            "Text": " must be used as the target. The keys in an ordinary "
          },
          {
            "Text": "HashMap",
            "AttrFlags": 2
          },
          {
            "Text": " are unordered.)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460146008,
        "id": "0f7c10d4-9cac-400d-8726-fb24262be2b6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460146008,
        "parent_id": "2267c771-42d1-458b-b886-5d82453299d7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Map\u003cString, Integer\u003e map = new HashMap();  // ... or any other Map class\n// populate the map\nmap = map.entrySet()\n    .stream()\n    .sorted(Map.Entry.\u003cString, Integer\u003ecomparingByValue())\n    .collect(Collectors.toMap(k -\u003e k.getKey(), v -\u003e v.getValue(),\n                              (k, v) -\u003e k, LinkedHashMap::new));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Map\u003cString, Integer\u003e map = new HashMap();  // ... or any other Map class\n// populate the map\nmap = map.entrySet()\n    .stream()\n    .sorted(Map.Entry.\u003cString, Integer\u003ecomparingByValue())\n    .collect(Collectors.toMap(k -\u003e k.getKey(), v -\u003e v.getValue(),\n                              (k, v) -\u003e k, LinkedHashMap::new));",
        "code_language": "Plain Text"
      }
    ],
    "title": "020 Using Lambda Expressions to Sort a Collection"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}