{
  "ID": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
  "Root": {
    "alive": true,
    "content": [
      "30f518e4-e858-4a9d-9e26-699f1ba06623",
      "916f816d-1e2a-4830-8b23-b1af42897dc7",
      "7be303a1-58b8-4bf2-aafb-cefc1a3e3aa3",
      "394c9da6-c7eb-46f7-aeb6-c1ab57a051f1",
      "f5d8fc96-3ab3-444e-a483-d67658d9c779",
      "e50755f9-8fe0-4530-9b74-72ade6cb3ad8",
      "275bf2b8-9f75-42bf-9036-6962dde21327",
      "897c2ff6-5c0f-4579-a4b2-2c7bfe523486",
      "17cd5231-ca8c-42e1-9ec2-3ab033e4e763",
      "65bba0d8-69af-464e-9cda-866ca3334caf",
      "f7a09c39-9e55-4080-b4e5-f5b983d28b41",
      "eb5f3f73-a2ec-4074-8984-4461635d8ba3",
      "659a04d3-e29f-46b6-8b1d-c447a8ea2841",
      "ca1e1e84-71a3-4e6f-9d1c-445046971f8a",
      "607c56ea-a31c-4e61-962b-7348bddd73af",
      "35f72a27-3c9d-41f2-99f8-be3d366ace89",
      "72aa7885-3c45-48b9-acf2-058838fc07f4",
      "eae638e9-1bcb-46ff-8a23-876eced63a64",
      "0709a71d-71de-4b6c-9e12-7637e263b5db",
      "9fcdaac2-db6e-4d8e-912a-730713903d74",
      "2ed45006-bca3-4014-bb2b-3b1b632679e3",
      "079b9c18-85de-4527-a5fb-db7aee114b29",
      "1598b29e-ddf6-4419-ab75-7a68ab81ca83",
      "db72c5d2-4256-4bf6-91f4-00a76ba33542",
      "a7e88be3-8360-41fc-960e-7812e024b431",
      "ec9974ca-7f54-4183-a70a-078d9cece9dd",
      "bb102939-5cb2-4944-9afc-c58856956f2f",
      "cfb5b281-044b-46bb-b5c7-c337bba567d2",
      "8350f42b-dae7-46d0-a089-4c9c8502f714",
      "510a1c42-8359-4f73-8a0f-c119ea5567e6",
      "9c7086bd-542b-4623-a383-dbaa255305c3",
      "d8f47c22-f6bc-472a-baa5-f4e3cb8f5e44",
      "5734ba97-be6e-4c34-8e5f-7ba70d4812a1",
      "13666aed-f28a-439f-981c-fd507f76551e",
      "8c59b467-ad46-4a51-8768-063ca5f0baca",
      "4de50d5e-5206-4782-9e57-3d58f8ae53a5",
      "1df8f932-4298-4cd7-9138-ceb3e2dd046c",
      "f96dd7a7-cdd3-4d30-9213-70ae70ac62ab",
      "507ea6dd-b9f3-47dd-9548-25f531d2182b",
      "ec240a44-e191-44f5-a782-8ec1704bcc8a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460809052,
    "id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460809052,
    "parent_id": "6c6c87a4-551e-4cdd-b523-66ee2c5d11cb",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "090 The Assignment Operators - and "
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809046,
        "id": "30f518e4-e858-4a9d-9e26-699f1ba06623",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809046,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The left hand operand for these operators must be a either a non-final variable or an element of an array. The right hand operand must be "
            ],
            [
              "assignment compatible",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " with the left hand operand. This means that either the types must be the same, or the right operand type must be convertible to the left operands type by a combination of boxing, unboxing or widening. (For complete details refer to "
            ],
            [
              "JLS 5.2",
              [
                [
                  "a",
                  "http://docs.oracle.com/javase/specs/jls/se8/html/jls-5.html#jls-5.2"
                ]
              ]
            ],
            [
              ".)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The left hand operand for these operators must be a either a non-final variable or an element of an array. The right hand operand must be "
          },
          {
            "Text": "assignment compatible",
            "AttrFlags": 4
          },
          {
            "Text": " with the left hand operand. This means that either the types must be the same, or the right operand type must be convertible to the left operands type by a combination of boxing, unboxing or widening. (For complete details refer to "
          },
          {
            "Text": "JLS 5.2",
            "Link": "http://docs.oracle.com/javase/specs/jls/se8/html/jls-5.html#jls-5.2"
          },
          {
            "Text": ".)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809047,
        "id": "916f816d-1e2a-4830-8b23-b1af42897dc7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809047,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The precise meaning of the “operation and assign” operators is specified by "
            ],
            [
              "JLS 15.26.2",
              [
                [
                  "a",
                  "http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.26.2"
                ]
              ]
            ],
            [
              " as:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The precise meaning of the “operation and assign” operators is specified by "
          },
          {
            "Text": "JLS 15.26.2",
            "Link": "http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.26.2"
          },
          {
            "Text": " as:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809047,
        "id": "7be303a1-58b8-4bf2-aafb-cefc1a3e3aa3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809047,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A compound assignment expression of the form E1 op= E2 is equivalent to E1 = (T) ((E1) op (E2)), where T is the type of E1, except that E1 is evaluated only once."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "A compound assignment expression of the form E1 op= E2 is equivalent to E1 = (T) ((E1) op (E2)), where T is the type of E1, except that E1 is evaluated only once."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809048,
        "id": "394c9da6-c7eb-46f7-aeb6-c1ab57a051f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809048,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that there is an implicit type-cast before the final assignment."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that there is an implicit type-cast before the final assignment."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809048,
        "id": "f5d8fc96-3ab3-444e-a483-d67658d9c779",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809048,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "1. ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "=",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "1. ",
            "AttrFlags": 1
          },
          {
            "Text": "=",
            "AttrFlags": 3
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809048,
        "id": "e50755f9-8fe0-4530-9b74-72ade6cb3ad8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809048,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The simple assignment operator: assigns the value of the right hand operand to the left hand operand."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The simple assignment operator: assigns the value of the right hand operand to the left hand operand."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809048,
        "id": "275bf2b8-9f75-42bf-9036-6962dde21327",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809048,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example: c = a + b will add the value of a + b to the value of c and assign it to c"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example: c = a + b will add the value of a + b to the value of c and assign it to c"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809048,
        "id": "897c2ff6-5c0f-4579-a4b2-2c7bfe523486",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809048,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "2. ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "+=",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "2. ",
            "AttrFlags": 1
          },
          {
            "Text": "+=",
            "AttrFlags": 3
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809048,
        "id": "17cd5231-ca8c-42e1-9ec2-3ab033e4e763",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809048,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The “add and assign” operator: adds the value of right hand operand to the value of the left hand operand and assigns the result to left hand operand. If the left hand operand has type "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", then this a “concatenate and assign” operator."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The “add and assign” operator: adds the value of right hand operand to the value of the left hand operand and assigns the result to left hand operand. If the left hand operand has type "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": ", then this a “concatenate and assign” operator."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809048,
        "id": "65bba0d8-69af-464e-9cda-866ca3334caf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809048,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example: c += a is roughly the same as c = c + a"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example: c += a is roughly the same as c = c + a"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809049,
        "id": "f7a09c39-9e55-4080-b4e5-f5b983d28b41",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809049,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "3. ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "-=",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "3. ",
            "AttrFlags": 1
          },
          {
            "Text": "-=",
            "AttrFlags": 3
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809049,
        "id": "eb5f3f73-a2ec-4074-8984-4461635d8ba3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809049,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The “subtract and assign” operator: subtracts the value of the right operand from the value of the left hand operand and assign the result to left hand operand."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The “subtract and assign” operator: subtracts the value of the right operand from the value of the left hand operand and assign the result to left hand operand."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809049,
        "id": "659a04d3-e29f-46b6-8b1d-c447a8ea2841",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809049,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example: c -= a is roughly the same as c = c - a"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example: c -= a is roughly the same as c = c - a"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809049,
        "id": "ca1e1e84-71a3-4e6f-9d1c-445046971f8a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809049,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "4. ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "*=",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "4. ",
            "AttrFlags": 1
          },
          {
            "Text": "*=",
            "AttrFlags": 3
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809049,
        "id": "607c56ea-a31c-4e61-962b-7348bddd73af",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809049,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The “multiply and assign” operator: multiplies the value of the right hand operand by the value of the left hand operand and assign the result to left hand operand. ."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The “multiply and assign” operator: multiplies the value of the right hand operand by the value of the left hand operand and assign the result to left hand operand. ."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809049,
        "id": "35f72a27-3c9d-41f2-99f8-be3d366ace89",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809049,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example: c *= a is roughly the same as c = c * a"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example: c *= a is roughly the same as c = c * a"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809049,
        "id": "72aa7885-3c45-48b9-acf2-058838fc07f4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809049,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "5. ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "/=",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "5. ",
            "AttrFlags": 1
          },
          {
            "Text": "/=",
            "AttrFlags": 3
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809049,
        "id": "eae638e9-1bcb-46ff-8a23-876eced63a64",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809049,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The “divide and assign” operator: divides the value of the right hand operand by the value of the left hand operand and assign the result to left hand operand."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The “divide and assign” operator: divides the value of the right hand operand by the value of the left hand operand and assign the result to left hand operand."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809050,
        "id": "0709a71d-71de-4b6c-9e12-7637e263b5db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809050,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example: c /*= a is roughly the same as c = c / a"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example: c /*= a is roughly the same as c = c / a"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809050,
        "id": "9fcdaac2-db6e-4d8e-912a-730713903d74",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809050,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "6. ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "%=",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "6. ",
            "AttrFlags": 1
          },
          {
            "Text": "%=",
            "AttrFlags": 3
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809050,
        "id": "2ed45006-bca3-4014-bb2b-3b1b632679e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809050,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The “modulus and assign” operator: calculates the modulus of the value of the right hand operand by the value of the left hand operand and assign the result to left hand operand."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The “modulus and assign” operator: calculates the modulus of the value of the right hand operand by the value of the left hand operand and assign the result to left hand operand."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809050,
        "id": "079b9c18-85de-4527-a5fb-db7aee114b29",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809050,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example: c %*= a is roughly the same as c = c % a"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example: c %*= a is roughly the same as c = c % a"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809050,
        "id": "1598b29e-ddf6-4419-ab75-7a68ab81ca83",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809050,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "7. ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "\u003c\u003c=",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "7. ",
            "AttrFlags": 1
          },
          {
            "Text": "\u003c\u003c=",
            "AttrFlags": 3
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809050,
        "id": "db72c5d2-4256-4bf6-91f4-00a76ba33542",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809050,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The “left shift and assign” operator."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The “left shift and assign” operator."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809050,
        "id": "a7e88be3-8360-41fc-960e-7812e024b431",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809050,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example: c \u003c\u003c= 2 is roughly the same as c = c \u003c\u003c 2"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example: c \u003c\u003c= 2 is roughly the same as c = c \u003c\u003c 2"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809050,
        "id": "ec9974ca-7f54-4183-a70a-078d9cece9dd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809050,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "8. ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "\u003e\u003e=",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "8. ",
            "AttrFlags": 1
          },
          {
            "Text": "\u003e\u003e=",
            "AttrFlags": 3
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809051,
        "id": "bb102939-5cb2-4944-9afc-c58856956f2f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809051,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The “arithmetic right shift and assign” operator."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The “arithmetic right shift and assign” operator."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809051,
        "id": "cfb5b281-044b-46bb-b5c7-c337bba567d2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809051,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example: c \u003e\u003e= 2 is roughly the same as c = c \u003e\u003e 2"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example: c \u003e\u003e= 2 is roughly the same as c = c \u003e\u003e 2"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809051,
        "id": "8350f42b-dae7-46d0-a089-4c9c8502f714",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809051,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "9. ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "\u003e\u003e\u003e=",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "9. ",
            "AttrFlags": 1
          },
          {
            "Text": "\u003e\u003e\u003e=",
            "AttrFlags": 3
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809051,
        "id": "510a1c42-8359-4f73-8a0f-c119ea5567e6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809051,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The “logical right shift and assign” operator."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The “logical right shift and assign” operator."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809051,
        "id": "9c7086bd-542b-4623-a383-dbaa255305c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809051,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example: c \u003e\u003e\u003e= 2 is roughly the same as c = c \u003e\u003e\u003e 2"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example: c \u003e\u003e\u003e= 2 is roughly the same as c = c \u003e\u003e\u003e 2"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809051,
        "id": "d8f47c22-f6bc-472a-baa5-f4e3cb8f5e44",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809051,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "10. ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "\u0026=",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "10. ",
            "AttrFlags": 1
          },
          {
            "Text": "\u0026=",
            "AttrFlags": 3
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809051,
        "id": "5734ba97-be6e-4c34-8e5f-7ba70d4812a1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809051,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The “bitwise and and assign” operator."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The “bitwise and and assign” operator."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809051,
        "id": "13666aed-f28a-439f-981c-fd507f76551e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809051,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example: c \u0026= 2 is roughly the same as c = c \u0026 2"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example: c \u0026= 2 is roughly the same as c = c \u0026 2"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809052,
        "id": "8c59b467-ad46-4a51-8768-063ca5f0baca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809052,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "11. ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "|=",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "11. ",
            "AttrFlags": 1
          },
          {
            "Text": "|=",
            "AttrFlags": 3
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809052,
        "id": "4de50d5e-5206-4782-9e57-3d58f8ae53a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809052,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The “bitwise or and assign” operator."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The “bitwise or and assign” operator."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809052,
        "id": "1df8f932-4298-4cd7-9138-ceb3e2dd046c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809052,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example: c |= 2 is roughly the same as c = c | 2"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example: c |= 2 is roughly the same as c = c | 2"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809052,
        "id": "f96dd7a7-cdd3-4d30-9213-70ae70ac62ab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809052,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "12. ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "^=",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "12. ",
            "AttrFlags": 1
          },
          {
            "Text": "^=",
            "AttrFlags": 3
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809052,
        "id": "507ea6dd-b9f3-47dd-9548-25f531d2182b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809052,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The “bitwise exclusive or and assign” operator."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The “bitwise exclusive or and assign” operator."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460809052,
        "id": "ec240a44-e191-44f5-a782-8ec1704bcc8a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460809052,
        "parent_id": "4b9f44cd-c8b9-4005-8cae-92a674e148ed",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example: c ^= 2 is roughly the same as c = c ^ 2"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example: c ^= 2 is roughly the same as c = c ^ 2"
          }
        ]
      }
    ],
    "title": "090 The Assignment Operators - and "
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}