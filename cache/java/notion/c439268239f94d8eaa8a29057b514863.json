{
  "ID": "c4392682-39f9-4d8e-aa8a-29057b514863",
  "Root": {
    "alive": true,
    "content": [
      "e0ceff4a-088a-47c5-b80c-62ce57873acf",
      "4b6ca1db-a324-4558-bdc5-bf77de0aa548",
      "e5c16e06-6fc9-424d-b6f7-a78552a0c35c",
      "eb995230-c444-4c93-8faf-6456a699a9ce",
      "e41108fa-3b7e-45f0-96d8-5b30ce9df344",
      "46fed90a-7131-4af0-97e6-00a9987a842e",
      "a2995137-6fc5-4f2f-9c2c-1d1038d0c342",
      "cb39de98-47e0-4dd1-a169-acc00b0a03e1",
      "05756c6b-81cb-4c62-a5d9-3262b9c3c248",
      "faa360de-3509-4901-8f4b-3c11ae53b80b",
      "68060768-4edf-414b-8d62-e4e82e268860",
      "d34fc8d5-9dfa-4209-bfa5-39c93b31f17e",
      "e8a5819f-c4c0-4cee-8766-b95da385a804",
      "9bfe912b-13ec-4381-9003-bce4e3c714ac",
      "fe95f253-f8c7-4188-afc1-07cffe40a861",
      "466ff9cf-4cc6-4af4-bf28-393c8bd3cdeb",
      "5945a6e7-a311-49b6-87f9-fc1561acbc29",
      "f3b35d1f-9efd-4504-8fbe-5b5bcce26aff",
      "845adf85-2df2-4a8f-b27a-5134e6f7657a",
      "0ca368ba-5db0-4867-ad60-ad664427fdf5",
      "efc812f3-19af-473f-b761-81d6c377c555",
      "3aa35b68-8b84-4925-9146-beff068f9b33",
      "f8413bc0-084f-4fc8-9c01-3f42038310fa",
      "5d2d8698-6d75-48a4-bbc3-64dd88c48580",
      "3a4d0527-efab-4314-b992-58e4da64d307",
      "ef8fd956-9a0e-40d2-8915-e13e23b50aa5",
      "77e6f5d6-8d12-4bf5-a960-911e5f834ed6",
      "f984f686-647f-441c-b5b4-16c9a02a81ea",
      "2163fb86-d75d-418b-8d07-68169c9067ef",
      "93635449-1ada-4a2b-b5bf-c7285595cafb",
      "33b923eb-8c5f-4f50-b08e-38f2c9dff868",
      "ee3d1a68-a35e-4f0e-8835-45127ef437b3",
      "2b68299b-d527-4f54-9247-5a58a26f81bb",
      "5ad4e7c4-8a10-42d9-9eb7-21309c456732",
      "ae9fcd5a-bf02-460c-bf6e-a5e67c381cd2",
      "89b00890-140b-4793-aec1-b87e10117c84",
      "483f4597-9de4-49af-8098-da29c0cc0004",
      "abbd1364-680c-4458-9512-0a59628feb4e",
      "b95c1e22-9a27-4122-b74e-313e997ee25a",
      "0e535805-ec06-4a69-af11-19d1c48be09c",
      "3d2af1b5-dffe-45b6-9262-e3bb2279206f",
      "b709c914-04aa-4422-892d-49ae97385544",
      "461eb847-5994-4f0d-91da-20987fb6cf16",
      "a98e49c9-134f-4a8c-824d-dd95c894c6db",
      "ee9ca68a-14f2-47aa-b094-10b4eb63b185",
      "c7d353f6-635d-49fe-a167-b64572aff39c",
      "304bfe6c-d0e0-4647-92dd-c153c6b11b92",
      "40456b3d-06d5-4b84-89d0-6e02363cc1e5",
      "4bc503c7-df41-4fe1-bac7-e18eee20c81a",
      "132ebd0f-418b-4e4f-a86c-cc51d8322854",
      "814bef32-7515-4eed-a475-c06367be1c57",
      "bf50c761-b661-4c89-9813-113a85457560",
      "d835aaba-3491-4eb0-926e-3469115eea98",
      "c30ad904-7cc2-4416-912c-745d2ed57897",
      "b794e193-2501-4723-9256-db3b45ab5279",
      "9b20350d-75e5-4b96-ad86-7b2d5aacb26c",
      "28d31d0b-6fae-40ea-8ade-a5e4c14d0d9d",
      "6e029216-cc49-4013-b409-d20ba0a9c6d1",
      "a855febd-3968-4e70-9dfd-265d8f3427db",
      "896bd24f-9771-4c33-adf8-603723172a84",
      "ad88f84e-0b50-4c50-9b9f-31547baad88a",
      "e545a289-d570-4f3e-8de4-7ec1cd786a18",
      "643c85aa-a9d3-4f3f-8c8f-cedc853e2ec2",
      "03f661fc-98ae-42ba-9b3f-c3744890fb80",
      "ef8a238d-ef6d-4812-8508-a5cb0298f2a7",
      "01fb0c35-7a6e-4675-a80f-2fad375901f1"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460806138,
    "id": "c4392682-39f9-4d8e-aa8a-29057b514863",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460806138,
    "parent_id": "6c6c87a4-551e-4cdd-b523-66ee2c5d11cb",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "060 The Arithmetic Operators - "
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806116,
        "id": "e0ceff4a-088a-47c5-b80c-62ce57873acf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806116,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The Java language provides 7 operators that perform arithmetic on integer and floating point values."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The Java language provides 7 operators that perform arithmetic on integer and floating point values."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806120,
        "id": "4b6ca1db-a324-4558-bdc5-bf77de0aa548",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806120,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are two "
            ],
            [
              "\\+",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operators:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are two "
          },
          {
            "Text": "\\+",
            "AttrFlags": 2
          },
          {
            "Text": " operators:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806120,
        "id": "e5c16e06-6fc9-424d-b6f7-a78552a0c35c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806120,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The binary addition operator adds one number to another one. (There is also a binary "
            ],
            [
              "\\+",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator that performs string concatenation. That is described in a separate example.)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The binary addition operator adds one number to another one. (There is also a binary "
          },
          {
            "Text": "\\+",
            "AttrFlags": 2
          },
          {
            "Text": " operator that performs string concatenation. That is described in a separate example.)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806121,
        "id": "eb995230-c444-4c93-8faf-6456a699a9ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806121,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The unary plus operator does nothing apart from triggering numeric promotion (see below)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The unary plus operator does nothing apart from triggering numeric promotion (see below)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806121,
        "id": "e41108fa-3b7e-45f0-96d8-5b30ce9df344",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806121,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are two "
            ],
            [
              "\\-",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operators:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are two "
          },
          {
            "Text": "\\-",
            "AttrFlags": 2
          },
          {
            "Text": " operators:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806121,
        "id": "46fed90a-7131-4af0-97e6-00a9987a842e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806121,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The binary subtraction operator subtracts one number from another one."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The binary subtraction operator subtracts one number from another one."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806121,
        "id": "a2995137-6fc5-4f2f-9c2c-1d1038d0c342",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806121,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The unary minus operator is equivalent to subtracting its operand from zero."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The unary minus operator is equivalent to subtracting its operand from zero."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806121,
        "id": "cb39de98-47e0-4dd1-a169-acc00b0a03e1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806121,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The binary multiply operator (*) multiplies one number by another."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The binary multiply operator (*) multiplies one number by another."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806122,
        "id": "05756c6b-81cb-4c62-a5d9-3262b9c3c248",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806122,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The binary divide operator (/) divides one number by another."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The binary divide operator (/) divides one number by another."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806122,
        "id": "faa360de-3509-4901-8f4b-3c11ae53b80b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806122,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The binary remainder1 operator (%) calculates the remainder when one number is divided by another."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The binary remainder1 operator (%) calculates the remainder when one number is divided by another."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806122,
        "id": "68060768-4edf-414b-8d62-e4e82e268860",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806122,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is often incorrectly referred to as the “modulus” operator. “Remainder” is the term that is used by the JLS. “Modulus” and “remainder” are not the same thing."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is often incorrectly referred to as the “modulus” operator. “Remainder” is the term that is used by the JLS. “Modulus” and “remainder” are not the same thing."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806122,
        "id": "d34fc8d5-9dfa-4209-bfa5-39c93b31f17e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806122,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Operand and result types, and numeric promotion"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Operand and result types, and numeric promotion"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806123,
        "id": "e8a5819f-c4c0-4cee-8766-b95da385a804",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806123,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The operators require numeric operands and produce numeric results. The operand types can be any primitive numeric type (i.e. "
            ],
            [
              "byte",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "short",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") or any numeric wrapper type define in "
            ],
            [
              "java.lang",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "; i.e. ("
            ],
            [
              "Byte",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Character",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Short",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Integer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "Double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The operators require numeric operands and produce numeric results. The operand types can be any primitive numeric type (i.e. "
          },
          {
            "Text": "byte",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "short",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "long",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "double",
            "AttrFlags": 2
          },
          {
            "Text": ") or any numeric wrapper type define in "
          },
          {
            "Text": "java.lang",
            "AttrFlags": 2
          },
          {
            "Text": "; i.e. ("
          },
          {
            "Text": "Byte",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Character",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Short",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Integer",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Long",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Float",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "Double",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806123,
        "id": "9bfe912b-13ec-4381-9003-bce4e3c714ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806123,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The result type is determined base on the types of the operand or operands, as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The result type is determined base on the types of the operand or operands, as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806123,
        "id": "fe95f253-f8c7-4188-afc1-07cffe40a861",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806123,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If either of the operands is a "
            ],
            [
              "double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "Double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", then the result type is "
            ],
            [
              "double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If either of the operands is a "
          },
          {
            "Text": "double",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "Double",
            "AttrFlags": 2
          },
          {
            "Text": ", then the result type is "
          },
          {
            "Text": "double",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806124,
        "id": "466ff9cf-4cc6-4af4-bf28-393c8bd3cdeb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806124,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Otherwise, if either of the operands is a "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "Float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", then the result type is "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Otherwise, if either of the operands is a "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "Float",
            "AttrFlags": 2
          },
          {
            "Text": ", then the result type is "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806124,
        "id": "5945a6e7-a311-49b6-87f9-fc1561acbc29",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806124,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Otherwise, if either of the operands is a "
            ],
            [
              "long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "Long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", then the result type is "
            ],
            [
              "long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Otherwise, if either of the operands is a "
          },
          {
            "Text": "long",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "Long",
            "AttrFlags": 2
          },
          {
            "Text": ", then the result type is "
          },
          {
            "Text": "long",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806125,
        "id": "f3b35d1f-9efd-4504-8fbe-5b5bcce26aff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806125,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Otherwise, the result type is "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This covers "
            ],
            [
              "byte",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "short",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operands as well as `int."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Otherwise, the result type is "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ". This covers "
          },
          {
            "Text": "byte",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "short",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": " operands as well as `int."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806125,
        "id": "845adf85-2df2-4a8f-b27a-5134e6f7657a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806125,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The result type of the operation determines how the arithmetic operation is performed, and how the operands are handled"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The result type of the operation determines how the arithmetic operation is performed, and how the operands are handled"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806125,
        "id": "0ca368ba-5db0-4867-ad60-ad664427fdf5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806125,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the result type is "
            ],
            [
              "double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the operands are promoted to "
            ],
            [
              "double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and the operation is performed using 64-bit (double precision binary) IEE 754 floating point arithmetic."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the result type is "
          },
          {
            "Text": "double",
            "AttrFlags": 2
          },
          {
            "Text": ", the operands are promoted to "
          },
          {
            "Text": "double",
            "AttrFlags": 2
          },
          {
            "Text": ", and the operation is performed using 64-bit (double precision binary) IEE 754 floating point arithmetic."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806126,
        "id": "efc812f3-19af-473f-b761-81d6c377c555",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806126,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the result type is "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the operands are promoted to "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and the operation is performed using 32-bit (single precision binary) IEE 754 floating point arithmetic."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the result type is "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": ", the operands are promoted to "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": ", and the operation is performed using 32-bit (single precision binary) IEE 754 floating point arithmetic."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806126,
        "id": "3aa35b68-8b84-4925-9146-beff068f9b33",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806126,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the result type is "
            ],
            [
              "long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the operands are promoted to "
            ],
            [
              "long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and the operation is performed using 64-bit signed twos-complement binary integer arithmetic."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the result type is "
          },
          {
            "Text": "long",
            "AttrFlags": 2
          },
          {
            "Text": ", the operands are promoted to "
          },
          {
            "Text": "long",
            "AttrFlags": 2
          },
          {
            "Text": ", and the operation is performed using 64-bit signed twos-complement binary integer arithmetic."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806126,
        "id": "f8413bc0-084f-4fc8-9c01-3f42038310fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806126,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the result type is "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the operands are promoted to "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and the operation is performed using 32-bit signed twos-complement binary integer arithmetic."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the result type is "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ", the operands are promoted to "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ", and the operation is performed using 32-bit signed twos-complement binary integer arithmetic."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806126,
        "id": "5d2d8698-6d75-48a4-bbc3-64dd88c48580",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806126,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Promotion is performed in two stages:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Promotion is performed in two stages:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806127,
        "id": "3a4d0527-efab-4314-b992-58e4da64d307",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806127,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the operand type is a wrapper type, the operand value is "
            ],
            [
              "unboxed",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " to a value of the corresponding primitive type."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the operand type is a wrapper type, the operand value is "
          },
          {
            "Text": "unboxed",
            "AttrFlags": 4
          },
          {
            "Text": " to a value of the corresponding primitive type."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806127,
        "id": "ef8fd956-9a0e-40d2-8915-e13e23b50aa5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806127,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If necessary, the primitive type is promoted to the required type:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If necessary, the primitive type is promoted to the required type:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806127,
        "id": "77e6f5d6-8d12-4bf5-a960-911e5f834ed6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806127,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "- Promotion of integers to `int` or `long` is loss-less.\n- Promotion of `float` to `double` is loss-less.\n- Promotion of an integer to a floating point value can lead to loss of precision.  The conversion is performed using IEE 768 \"round-to-nearest\" semantics."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "- Promotion of integers to `int` or `long` is loss-less.\n- Promotion of `float` to `double` is loss-less.\n- Promotion of an integer to a floating point value can lead to loss of precision.  The conversion is performed using IEE 768 \"round-to-nearest\" semantics.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806127,
        "id": "f984f686-647f-441c-b5b4-16c9a02a81ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806127,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The meaning of division"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "The meaning of division"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806127,
        "id": "2163fb86-d75d-418b-8d07-68169c9067ef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806127,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The / operator divides the left-hand operand "
            ],
            [
              "n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (the "
            ],
            [
              "dividend",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ") and the right-hand operand "
            ],
            [
              "d",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (the "
            ],
            [
              "divisor",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ") and produces the result "
            ],
            [
              "q",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (the "
            ],
            [
              "quotient",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The / operator divides the left-hand operand "
          },
          {
            "Text": "n",
            "AttrFlags": 2
          },
          {
            "Text": " (the "
          },
          {
            "Text": "dividend",
            "AttrFlags": 4
          },
          {
            "Text": ") and the right-hand operand "
          },
          {
            "Text": "d",
            "AttrFlags": 2
          },
          {
            "Text": " (the "
          },
          {
            "Text": "divisor",
            "AttrFlags": 4
          },
          {
            "Text": ") and produces the result "
          },
          {
            "Text": "q",
            "AttrFlags": 2
          },
          {
            "Text": " (the "
          },
          {
            "Text": "quotient",
            "AttrFlags": 4
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806129,
        "id": "93635449-1ada-4a2b-b5bf-c7285595cafb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806129,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Java integer division rounds towards zero. The "
            ],
            [
              "JLS Section 15.17.2",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.17.2"
                ]
              ]
            ],
            [
              " specifies the behavior of Java integer division as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Java integer division rounds towards zero. The "
          },
          {
            "Text": "JLS Section 15.17.2",
            "Link": "https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.17.2"
          },
          {
            "Text": " specifies the behavior of Java integer division as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806130,
        "id": "33b923eb-8c5f-4f50-b08e-38f2c9dff868",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806130,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The quotient produced for operands n and d is an integer value q whose magnitude is as large as possible while satisfying |d ⋅ q| ≤ |n|. Moreover, q is positive when |n| ≥ |d| and n and d have the same sign, but q is negative when |n| ≥ |d| and n and d have opposite signs."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "The quotient produced for operands n and d is an integer value q whose magnitude is as large as possible while satisfying |d ⋅ q| ≤ |n|. Moreover, q is positive when |n| ≥ |d| and n and d have the same sign, but q is negative when |n| ≥ |d| and n and d have opposite signs."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806130,
        "id": "ee3d1a68-a35e-4f0e-8835-45127ef437b3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806130,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are a couple of special cases:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are a couple of special cases:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806130,
        "id": "2b68299b-d527-4f54-9247-5a58a26f81bb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806130,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the "
            ],
            [
              "n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is "
            ],
            [
              "MIN_VALUE",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and the divisor is -1, then integer overflow occurs and the result is "
            ],
            [
              "MIN_VALUE",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". No exception is thrown in this case."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the "
          },
          {
            "Text": "n",
            "AttrFlags": 2
          },
          {
            "Text": " is "
          },
          {
            "Text": "MIN_VALUE",
            "AttrFlags": 2
          },
          {
            "Text": ", and the divisor is -1, then integer overflow occurs and the result is "
          },
          {
            "Text": "MIN_VALUE",
            "AttrFlags": 2
          },
          {
            "Text": ". No exception is thrown in this case."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806130,
        "id": "5ad4e7c4-8a10-42d9-9eb7-21309c456732",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806130,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If "
            ],
            [
              "d",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is 0, then `ArithmeticException is thrown."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If "
          },
          {
            "Text": "d",
            "AttrFlags": 2
          },
          {
            "Text": " is 0, then `ArithmeticException is thrown."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806131,
        "id": "ae9fcd5a-bf02-460c-bf6e-a5e67c381cd2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806131,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Java floating point division has more edge cases to consider. However the basic idea is that the result "
            ],
            [
              "q",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the value that is closest to satisfying "
            ],
            [
              "d . q = n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Java floating point division has more edge cases to consider. However the basic idea is that the result "
          },
          {
            "Text": "q",
            "AttrFlags": 2
          },
          {
            "Text": " is the value that is closest to satisfying "
          },
          {
            "Text": "d . q = n",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806131,
        "id": "89b00890-140b-4793-aec1-b87e10117c84",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806131,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Floating point division will never result in an exception. Instead, operations that divide by zero result in an INF and NaN values; see below."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Floating point division will never result in an exception. Instead, operations that divide by zero result in an INF and NaN values; see below."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806131,
        "id": "483f4597-9de4-49af-8098-da29c0cc0004",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806131,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The meaning of remainder"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "The meaning of remainder"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806131,
        "id": "abbd1364-680c-4458-9512-0a59628feb4e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806131,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Unlike C and C++, the remainder operator in Java works with both integer and floating point operations."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Unlike C and C++, the remainder operator in Java works with both integer and floating point operations."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806131,
        "id": "b95c1e22-9a27-4122-b74e-313e997ee25a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806131,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For integer cases, the result of "
            ],
            [
              "a % b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is defined to be the number "
            ],
            [
              "r",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " such that "
            ],
            [
              "(a / b) * b + r",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is equal to "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", where "
            ],
            [
              "/",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "\\*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "\\+",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are the appropriate Java integer operators. This applies in all cases except when "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is zero. That case, remainder results in an "
            ],
            [
              "ArithmeticException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For integer cases, the result of "
          },
          {
            "Text": "a % b",
            "AttrFlags": 2
          },
          {
            "Text": " is defined to be the number "
          },
          {
            "Text": "r",
            "AttrFlags": 2
          },
          {
            "Text": " such that "
          },
          {
            "Text": "(a / b) * b + r",
            "AttrFlags": 2
          },
          {
            "Text": " is equal to "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": ", where "
          },
          {
            "Text": "/",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "\\*",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "\\+",
            "AttrFlags": 2
          },
          {
            "Text": " are the appropriate Java integer operators. This applies in all cases except when "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": " is zero. That case, remainder results in an "
          },
          {
            "Text": "ArithmeticException",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806132,
        "id": "0e535805-ec06-4a69-af11-19d1c48be09c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806132,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It follows from the above definition that "
            ],
            [
              "a % b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be negative only if "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is negative, and it be positive only if "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is positive. Moreover, the magnitude of "
            ],
            [
              "a % b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is always less than the magnitude of "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It follows from the above definition that "
          },
          {
            "Text": "a % b",
            "AttrFlags": 2
          },
          {
            "Text": " can be negative only if "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " is negative, and it be positive only if "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " is positive. Moreover, the magnitude of "
          },
          {
            "Text": "a % b",
            "AttrFlags": 2
          },
          {
            "Text": " is always less than the magnitude of "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806132,
        "id": "3d2af1b5-dffe-45b6-9262-e3bb2279206f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806132,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Floating point remainder operation is a generalization of the integer case. The result of "
            ],
            [
              "a % b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the remainder "
            ],
            [
              "r",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is defined by the mathematical relation "
            ],
            [
              "r = a - (b ⋅ q)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " where:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Floating point remainder operation is a generalization of the integer case. The result of "
          },
          {
            "Text": "a % b",
            "AttrFlags": 2
          },
          {
            "Text": " is the remainder "
          },
          {
            "Text": "r",
            "AttrFlags": 2
          },
          {
            "Text": " is defined by the mathematical relation "
          },
          {
            "Text": "r = a - (b ⋅ q)",
            "AttrFlags": 2
          },
          {
            "Text": " where:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806133,
        "id": "b709c914-04aa-4422-892d-49ae97385544",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806133,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "q",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is an integer,"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "q",
            "AttrFlags": 2
          },
          {
            "Text": " is an integer,"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806133,
        "id": "461eb847-5994-4f0d-91da-20987fb6cf16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806133,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "it is negative only if "
            ],
            [
              "a / b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is negative an positive only if "
            ],
            [
              "a / b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is positive, and"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "it is negative only if "
          },
          {
            "Text": "a / b",
            "AttrFlags": 2
          },
          {
            "Text": " is negative an positive only if "
          },
          {
            "Text": "a / b",
            "AttrFlags": 2
          },
          {
            "Text": " is positive, and"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806133,
        "id": "a98e49c9-134f-4a8c-824d-dd95c894c6db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806133,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "its magnitude is as large as possible without exceeding the magnitude of the true mathematical quotient of "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "its magnitude is as large as possible without exceeding the magnitude of the true mathematical quotient of "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806133,
        "id": "ee9ca68a-14f2-47aa-b094-10b4eb63b185",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806133,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Floating point remainder can produce "
            ],
            [
              "INF",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "NaN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " values in edge-cases such as when "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is zero; see below. It will not throw an exception."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Floating point remainder can produce "
          },
          {
            "Text": "INF",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "NaN",
            "AttrFlags": 2
          },
          {
            "Text": " values in edge-cases such as when "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": " is zero; see below. It will not throw an exception."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806134,
        "id": "c7d353f6-635d-49fe-a167-b64572aff39c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806134,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Important note:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Important note:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806134,
        "id": "304bfe6c-d0e0-4647-92dd-c153c6b11b92",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806134,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The result of a floating-point remainder operation as computed by % is not the same as that produced by the remainder operation defined by IEEE 754. The IEEE 754 remainder may be computed using the Math.IEEEremainder library method."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "The result of a floating-point remainder operation as computed by % is not the same as that produced by the remainder operation defined by IEEE 754. The IEEE 754 remainder may be computed using the Math.IEEEremainder library method."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806134,
        "id": "40456b3d-06d5-4b84-89d0-6e02363cc1e5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806134,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Integer Overflow"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Integer Overflow"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806134,
        "id": "4bc503c7-df41-4fe1-bac7-e18eee20c81a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806134,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Java 32 and 64 bit integer values are signed and use twos-complement binary representation. For example, the range of numbers representable as (32 bit) "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " -231 through +231 - 1."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Java 32 and 64 bit integer values are signed and use twos-complement binary representation. For example, the range of numbers representable as (32 bit) "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " -231 through +231 - 1."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806134,
        "id": "132ebd0f-418b-4e4f-a86c-cc51d8322854",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806134,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When you add, subtract or multiple two N bit integers (N == 32 or 64), the result of the operation may be too large to represent as an N bit integer. In this case, the operation leads to "
            ],
            [
              "integer overflow",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", and the result can be computed as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When you add, subtract or multiple two N bit integers (N == 32 or 64), the result of the operation may be too large to represent as an N bit integer. In this case, the operation leads to "
          },
          {
            "Text": "integer overflow",
            "AttrFlags": 4
          },
          {
            "Text": ", and the result can be computed as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806134,
        "id": "814bef32-7515-4eed-a475-c06367be1c57",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806134,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The mathematical operation is performed to give a intermediate two’s-complement representation of the entire number. This representation will be larger than N bits."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The mathematical operation is performed to give a intermediate two’s-complement representation of the entire number. This representation will be larger than N bits."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806135,
        "id": "bf50c761-b661-4c89-9813-113a85457560",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806135,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The bottom 32 or 64 bits of the intermediate representation are used as the result."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The bottom 32 or 64 bits of the intermediate representation are used as the result."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806135,
        "id": "d835aaba-3491-4eb0-926e-3469115eea98",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806135,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It should be noted that integer overflow does not result in exceptions under any circumstances."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It should be noted that integer overflow does not result in exceptions under any circumstances."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806135,
        "id": "c30ad904-7cc2-4416-912c-745d2ed57897",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806135,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Floating point INF and NAN values"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Floating point INF and NAN values"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806135,
        "id": "b794e193-2501-4723-9256-db3b45ab5279",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806135,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Java uses IEE 754 floating point representations for "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". These representations have some special values for representing values that fall outside of the domain of Real numbers:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Java uses IEE 754 floating point representations for "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "double",
            "AttrFlags": 2
          },
          {
            "Text": ". These representations have some special values for representing values that fall outside of the domain of Real numbers:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806135,
        "id": "9b20350d-75e5-4b96-ad86-7b2d5aacb26c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806135,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The “infinite” or INF values denote numbers that are too large. The "
            ],
            [
              "+INF",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " value denote numbers that are too large and positive. The "
            ],
            [
              "-INF",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " value denote numbers that are too large and negative."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The “infinite” or INF values denote numbers that are too large. The "
          },
          {
            "Text": "+INF",
            "AttrFlags": 2
          },
          {
            "Text": " value denote numbers that are too large and positive. The "
          },
          {
            "Text": "-INF",
            "AttrFlags": 2
          },
          {
            "Text": " value denote numbers that are too large and negative."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806135,
        "id": "28d31d0b-6fae-40ea-8ade-a5e4c14d0d9d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806135,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The “indefinite” / “not a number” or NaN denote values resulting from meaningless operations."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The “indefinite” / “not a number” or NaN denote values resulting from meaningless operations."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806136,
        "id": "6e029216-cc49-4013-b409-d20ba0a9c6d1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806136,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The INF values are produced by floating operations that cause overflow, or by division by zero."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The INF values are produced by floating operations that cause overflow, or by division by zero."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806136,
        "id": "a855febd-3968-4e70-9dfd-265d8f3427db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806136,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The NaN values are produced by dividing zero by zero, or computing zero remainder zero."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The NaN values are produced by dividing zero by zero, or computing zero remainder zero."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806136,
        "id": "896bd24f-9771-4c33-adf8-603723172a84",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806136,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Surprisingly, it is possible perform arithmetic using INF and NaN operands without triggering exceptions. For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Surprisingly, it is possible perform arithmetic using INF and NaN operands without triggering exceptions. For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806136,
        "id": "ad88f84e-0b50-4c50-9b9f-31547baad88a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806136,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Adding +INF and a finite value gives +INF."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Adding +INF and a finite value gives +INF."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806136,
        "id": "e545a289-d570-4f3e-8de4-7ec1cd786a18",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806136,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Adding +INF and +INF gives +INF."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Adding +INF and +INF gives +INF."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806136,
        "id": "643c85aa-a9d3-4f3f-8c8f-cedc853e2ec2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806136,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Adding +INF and -INF gives NaN."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Adding +INF and -INF gives NaN."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806137,
        "id": "03f661fc-98ae-42ba-9b3f-c3744890fb80",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806137,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Dividing by INF gives either +0.0 or -0.0."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Dividing by INF gives either +0.0 or -0.0."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806137,
        "id": "ef8a238d-ef6d-4812-8508-a5cb0298f2a7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806137,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All operations with one or more NaN operands give NaN."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "All operations with one or more NaN operands give NaN."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460806137,
        "id": "01fb0c35-7a6e-4675-a80f-2fad375901f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460806137,
        "parent_id": "c4392682-39f9-4d8e-aa8a-29057b514863",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For full details, please refer to the relevant subsections of "
            ],
            [
              "JLS 15",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html"
                ]
              ]
            ],
            [
              ". Note that this is largely “academic”. For typical calculations, an "
            ],
            [
              "INF",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "NaN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " means that something has gone wrong; e.g. you have incomplete or incorrect input data, or the calculation has been programmed incorrectly."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For full details, please refer to the relevant subsections of "
          },
          {
            "Text": "JLS 15",
            "Link": "https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html"
          },
          {
            "Text": ". Note that this is largely “academic”. For typical calculations, an "
          },
          {
            "Text": "INF",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "NaN",
            "AttrFlags": 2
          },
          {
            "Text": " means that something has gone wrong; e.g. you have incomplete or incorrect input data, or the calculation has been programmed incorrectly."
          }
        ]
      }
    ],
    "title": "060 The Arithmetic Operators - "
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}