{
  "ID": "bcc24f70-468b-48ee-a283-c952796a912e",
  "Root": {
    "alive": true,
    "content": [
      "2309e087-31ab-4a57-85d1-129b3006b48e",
      "51345a0a-9d8b-4d1e-baf7-dc2c44a78ec6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460541225,
    "id": "bcc24f70-468b-48ee-a283-c952796a912e",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460541225,
    "parent_id": "c5f4838e-8ea8-4be5-9969-41936c9db840",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "030 Loading TrustStore and KeyStore from InputStream"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460541224,
        "id": "2309e087-31ab-4a57-85d1-129b3006b48e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460541224,
        "parent_id": "bcc24f70-468b-48ee-a283-c952796a912e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class TrustLoader {\n    \n    public static void main(String args[]) {\n        try {\n                //Gets the inputstream of a a trust store file under ssl/rpgrenadesClient.jks\n                //This path refers to the ssl folder in the jar file, in a jar file in the same directory\n                //as this jar file, or a different directory in the same directory as the jar file\n                InputStream stream = TrustLoader.class.getResourceAsStream(\"/ssl/rpgrenadesClient.jks\");\n                //Both trustStores and keyStores are represented by the KeyStore object\n                KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());\n                //The password for the trustStore\n                char[] trustStorePassword = \"password\".toCharArray();\n                //This loads the trust store into the object\n                trustStore.load(stream, trustStorePassword);\n                \n                //This is defining the SSLContext so the trust store will be used\n                //Getting default SSLContext to edit.\n                SSLContext context = SSLContext.getInstance(\"SSL\");\n                //TrustMangers hold trust stores, more than one can be added\n                TrustManagerFactory factory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n                //Adds the truststore to the factory\n                factory.init(trustStore);\n                //This is passed to the SSLContext init method\n                TrustManager[] managers = factory.getTrustManagers();\n                context.init(null, managers, null);\n                //Sets our new SSLContext to be used.\n                SSLContext.setDefault(context);\n            } catch (KeyStoreException | IOException | NoSuchAlgorithmException \n                    | CertificateException | KeyManagementException ex) {\n                //Handle error\n                ex.printStackTrace();\n            }\n        \n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class TrustLoader {\n    \n    public static void main(String args[]) {\n        try {\n                //Gets the inputstream of a a trust store file under ssl/rpgrenadesClient.jks\n                //This path refers to the ssl folder in the jar file, in a jar file in the same directory\n                //as this jar file, or a different directory in the same directory as the jar file\n                InputStream stream = TrustLoader.class.getResourceAsStream(\"/ssl/rpgrenadesClient.jks\");\n                //Both trustStores and keyStores are represented by the KeyStore object\n                KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());\n                //The password for the trustStore\n                char[] trustStorePassword = \"password\".toCharArray();\n                //This loads the trust store into the object\n                trustStore.load(stream, trustStorePassword);\n                \n                //This is defining the SSLContext so the trust store will be used\n                //Getting default SSLContext to edit.\n                SSLContext context = SSLContext.getInstance(\"SSL\");\n                //TrustMangers hold trust stores, more than one can be added\n                TrustManagerFactory factory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n                //Adds the truststore to the factory\n                factory.init(trustStore);\n                //This is passed to the SSLContext init method\n                TrustManager[] managers = factory.getTrustManagers();\n                context.init(null, managers, null);\n                //Sets our new SSLContext to be used.\n                SSLContext.setDefault(context);\n            } catch (KeyStoreException | IOException | NoSuchAlgorithmException \n                    | CertificateException | KeyManagementException ex) {\n                //Handle error\n                ex.printStackTrace();\n            }\n        \n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460541224,
        "id": "51345a0a-9d8b-4d1e-baf7-dc2c44a78ec6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460541224,
        "parent_id": "bcc24f70-468b-48ee-a283-c952796a912e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Intiating a KeyStore works the same, except replace any word "
            ],
            [
              "Trust",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in a object name with "
            ],
            [
              "Key",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Additionally, the "
            ],
            [
              "KeyManager[]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " array must be passed to the the first argument of "
            ],
            [
              "SSLContext.init",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". That is "
            ],
            [
              "SSLContext.init(keyMangers, trustMangers, null)",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Intiating a KeyStore works the same, except replace any word "
          },
          {
            "Text": "Trust",
            "AttrFlags": 2
          },
          {
            "Text": " in a object name with "
          },
          {
            "Text": "Key",
            "AttrFlags": 2
          },
          {
            "Text": ". Additionally, the "
          },
          {
            "Text": "KeyManager[]",
            "AttrFlags": 2
          },
          {
            "Text": " array must be passed to the the first argument of "
          },
          {
            "Text": "SSLContext.init",
            "AttrFlags": 2
          },
          {
            "Text": ". That is "
          },
          {
            "Text": "SSLContext.init(keyMangers, trustMangers, null)",
            "AttrFlags": 2
          }
        ]
      }
    ],
    "title": "030 Loading TrustStore and KeyStore from InputStream"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}