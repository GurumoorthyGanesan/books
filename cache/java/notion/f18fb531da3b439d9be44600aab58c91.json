{
  "ID": "f18fb531-da3b-439d-9be4-4600aab58c91",
  "Root": {
    "alive": true,
    "content": [
      "75b0f591-52f8-4b56-9665-c6c0ffb67f42",
      "a01ec3f8-ee28-4e81-951b-c9164913e64b",
      "be286b5e-1beb-4ce3-956f-186c0c9c2940",
      "40aba6b4-537d-464f-ba39-99c9ff65aef3",
      "ab07f079-0a22-4aa7-87f5-c2da497cf915",
      "a3ed6f05-d0ca-41e8-bee7-60279b364125",
      "181d2cdc-f6c6-490c-830d-3917150c8670",
      "dbaee2c0-7452-49fd-b81a-94751e558ba0",
      "d26437db-a969-4a67-b91f-459e3b785d8f",
      "0f768337-a81f-41cc-8e5e-9aa294fa5f2a",
      "d7a3dfd7-d1e9-470a-bdc4-ef4787192361",
      "3d8d047b-1935-489c-bc2d-b28599fed037",
      "322d5db9-dc01-4842-8af8-07989b22d417",
      "25586e2a-69b4-4335-bfad-1b45cab6302a",
      "472a4ff5-40fe-4590-ba44-1ea48fdb0583",
      "a9fdae32-5a71-4877-9faf-26fdfb6666c7",
      "3bc1e956-bd93-4e65-865a-a75e89b9dadd",
      "f0174f21-7217-48ef-868d-fe1138301147",
      "385459ab-0e79-4260-a07c-cbe11322cbc8",
      "3306959b-0733-4610-817a-300ac360eda6",
      "99c340ff-3c82-401d-9623-343a2e27c06f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460088206,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "f18fb531-da3b-439d-9be4-4600aab58c91",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550519340000,
    "parent_id": "aaf522ec-ec58-4c19-b129-bf870a37c471",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Abstract Classes"
        ]
      ]
    },
    "type": "page",
    "version": 12,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088198,
        "id": "75b0f591-52f8-4b56-9665-c6c0ffb67f42",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088198,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An abstract class is a class marked with the "
            ],
            [
              "abstract",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword. It, contrary to non-abstract class, may contain abstract - implementation-less - methods. It is, however, valid to create an abstract class without abstract methods."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An abstract class is a class marked with the "
          },
          {
            "Text": "abstract",
            "AttrFlags": 2
          },
          {
            "Text": " keyword. It, contrary to non-abstract class, may contain abstract - implementation-less - methods. It is, however, valid to create an abstract class without abstract methods."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088201,
        "id": "a01ec3f8-ee28-4e81-951b-c9164913e64b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088201,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An abstract class cannot be instantiated. It can be sub-classed (extended) as long as the sub-class is either also abstract, or implements all methods marked as abstract by super classes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An abstract class cannot be instantiated. It can be sub-classed (extended) as long as the sub-class is either also abstract, or implements all methods marked as abstract by super classes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088201,
        "id": "be286b5e-1beb-4ce3-956f-186c0c9c2940",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088201,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An example of an abstract class:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An example of an abstract class:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088201,
        "id": "40aba6b4-537d-464f-ba39-99c9ff65aef3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088201,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public abstract class Component {\n    private int x, y;\n    \n    public setPosition(int x, int y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    public abstract void render();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public abstract class Component {\n    private int x, y;\n    \n    public setPosition(int x, int y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    public abstract void render();\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088201,
        "id": "ab07f079-0a22-4aa7-87f5-c2da497cf915",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088201,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The class must be marked abstract, when it has at least one abstract method. An abstract method is a method that has no implementation. Other methods can be declared within an abstract class that have implementation in order to provide common code for any sub-classes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The class must be marked abstract, when it has at least one abstract method. An abstract method is a method that has no implementation. Other methods can be declared within an abstract class that have implementation in order to provide common code for any sub-classes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088201,
        "id": "a3ed6f05-d0ca-41e8-bee7-60279b364125",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088201,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Attempting to instantiate this class will provide a compile error:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Attempting to instantiate this class will provide a compile error:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088201,
        "id": "181d2cdc-f6c6-490c-830d-3917150c8670",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088201,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//error: Component is abstract; cannot be instantiated   \nComponent myComponent = new Component();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//error: Component is abstract; cannot be instantiated   \nComponent myComponent = new Component();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088202,
        "id": "dbaee2c0-7452-49fd-b81a-94751e558ba0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088202,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However a class that extends "
            ],
            [
              "Component",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and provides an implementation for all of its abstract methods and can be instantiated."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However a class that extends "
          },
          {
            "Text": "Component",
            "AttrFlags": 2
          },
          {
            "Text": ", and provides an implementation for all of its abstract methods and can be instantiated."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088202,
        "id": "d26437db-a969-4a67-b91f-459e3b785d8f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088202,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Button extends Component {\n\n    @Override\n    public void render() {\n        //render a button\n    }\n}\n\npublic class TextBox extends Component {\n\n    @Override\n    public void render() {\n        //render a textbox\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Button extends Component {\n\n    @Override\n    public void render() {\n        //render a button\n    }\n}\n\npublic class TextBox extends Component {\n\n    @Override\n    public void render() {\n        //render a textbox\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088202,
        "id": "0f768337-a81f-41cc-8e5e-9aa294fa5f2a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088202,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Instances of inheriting classes also can be cast as the parent class (normal inheritance) and they provide a polymorphic effect when the abstract method is called."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Instances of inheriting classes also can be cast as the parent class (normal inheritance) and they provide a polymorphic effect when the abstract method is called."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088202,
        "id": "d7a3dfd7-d1e9-470a-bdc4-ef4787192361",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088202,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Component myButton = new Button();\nComponent myTextBox = new TextBox();\n\nmyButton.render(); //renders a button\nmyTextBox.render(); //renders a text box"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Component myButton = new Button();\nComponent myTextBox = new TextBox();\n\nmyButton.render(); //renders a button\nmyTextBox.render(); //renders a text box",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088202,
        "id": "3d8d047b-1935-489c-bc2d-b28599fed037",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088202,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Abstract classes vs Interfaces",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Abstract classes vs Interfaces",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088202,
        "id": "322d5db9-dc01-4842-8af8-07989b22d417",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088202,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Abstract classes and interfaces both provide a way to define method signatures while requiring the extending/implementing class to provide the implementation."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Abstract classes and interfaces both provide a way to define method signatures while requiring the extending/implementing class to provide the implementation."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088202,
        "id": "25586e2a-69b4-4335-bfad-1b45cab6302a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088202,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are two key differences between abstract classes and interfaces:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are two key differences between abstract classes and interfaces:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088203,
        "id": "472a4ff5-40fe-4590-ba44-1ea48fdb0583",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088203,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A class may only extend a single class, but may implement many interfaces."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "A class may only extend a single class, but may implement many interfaces."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088203,
        "id": "a9fdae32-5a71-4877-9faf-26fdfb6666c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088203,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An abstract class can contain instance (non-"
            ],
            [
              "static",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") fields, but interfaces may only contain "
            ],
            [
              "static",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " fields."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "An abstract class can contain instance (non-"
          },
          {
            "Text": "static",
            "AttrFlags": 2
          },
          {
            "Text": ") fields, but interfaces may only contain "
          },
          {
            "Text": "static",
            "AttrFlags": 2
          },
          {
            "Text": " fields."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088203,
        "id": "3bc1e956-bd93-4e65-865a-a75e89b9dadd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088203,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Methods declared in interfaces could not contain implementations, so abstract classes were used when it was useful to provide additional methods which implementations called the abstract methods."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Methods declared in interfaces could not contain implementations, so abstract classes were used when it was useful to provide additional methods which implementations called the abstract methods."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088205,
        "id": "f0174f21-7217-48ef-868d-fe1138301147",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088205,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Java 8 allows interfaces to contain "
            ],
            [
              "default methods",
              [
                [
                  "a",
                  "https://stackoverflow.com/documentation/java/113/default-methods#t=201607191734172336331"
                ]
              ]
            ],
            [
              ", usually "
            ],
            [
              "implemented using the other methods of the interface",
              [
                [
                  "a",
                  "https://stackoverflow.com/documentation/java/113/default-methods/456/accessing-other-interface-methods-within-default-method#t=201607191734172336331"
                ]
              ]
            ],
            [
              ", making interfaces and abstract classes equally powerful in this regard."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Java 8 allows interfaces to contain "
          },
          {
            "Text": "default methods",
            "Link": "https://stackoverflow.com/documentation/java/113/default-methods#t=201607191734172336331"
          },
          {
            "Text": ", usually "
          },
          {
            "Text": "implemented using the other methods of the interface",
            "Link": "https://stackoverflow.com/documentation/java/113/default-methods/456/accessing-other-interface-methods-within-default-method#t=201607191734172336331"
          },
          {
            "Text": ", making interfaces and abstract classes equally powerful in this regard."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088205,
        "id": "385459ab-0e79-4260-a07c-cbe11322cbc8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088205,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Anonymous subclasses of Abstract Classes",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Anonymous subclasses of Abstract Classes",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088206,
        "id": "3306959b-0733-4610-817a-300ac360eda6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088206,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As a convenience java allows for instantiation of anonymous instances of subclasses of abstract classes, which provide implementations for the abstract methods upon creating the new object. Using the above example this could look like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As a convenience java allows for instantiation of anonymous instances of subclasses of abstract classes, which provide implementations for the abstract methods upon creating the new object. Using the above example this could look like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460088206,
        "id": "99c340ff-3c82-401d-9623-343a2e27c06f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460088206,
        "parent_id": "f18fb531-da3b-439d-9be4-4600aab58c91",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Component myAnonymousComponent = new Component() {\n    @Override\n    public void render() {\n        // render a quick 1-time use component\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Component myAnonymousComponent = new Component() {\n    @Override\n    public void render() {\n        // render a quick 1-time use component\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Abstract Classes",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}