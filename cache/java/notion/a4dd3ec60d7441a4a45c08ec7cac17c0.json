{
  "ID": "a4dd3ec6-0d74-41a4-a45c-08ec7cac17c0",
  "Root": {
    "alive": true,
    "content": [
      "309ddbd5-6176-435c-be05-25c5f5549eec",
      "c58923cb-ab4f-420e-974b-76ff5cb18531",
      "1da3f3dd-64e6-4968-9afe-e7182d8b9c9a",
      "e16fe3fc-e832-499c-98ec-e4ad04e03b08",
      "b859f156-bb40-4061-b03c-20ef495d4354",
      "96caa934-254d-4512-a11a-00f81c7b11b6",
      "47794255-2fc1-4789-8b6a-a7add424d1f2",
      "4843a0db-01ff-481f-8b88-a6082374938d",
      "4eee90d3-151d-4578-acbf-5591b8e9c14b",
      "cc5fe617-246e-4d2d-b871-61832f148dec"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460161104,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "a4dd3ec6-0d74-41a4-a45c-08ec7cac17c0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551765118244,
    "parent_id": "eaad0c1d-9ecf-4d2a-b640-d2df4debfaf8",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "The Diamond"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460161102,
        "id": "309ddbd5-6176-435c-be05-25c5f5549eec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460161102,
        "parent_id": "a4dd3ec6-0d74-41a4-a45c-08ec7cac17c0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Java 7 introduced the "
            ],
            [
              "Diamond",
              [
                [
                  "i"
                ],
                [
                  "a",
                  "http://docs.oracle.com/javase/7/docs/technotes/guides/language/type-inference-generic-instance-creation.html"
                ]
              ]
            ],
            [
              "1 to remove some boiler-plate around generic class instantiation. With Java 7+ you can write:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Java 7 introduced the "
          },
          {
            "Text": "Diamond",
            "AttrFlags": 4,
            "Link": "http://docs.oracle.com/javase/7/docs/technotes/guides/language/type-inference-generic-instance-creation.html"
          },
          {
            "Text": "1 to remove some boiler-plate around generic class instantiation. With Java 7+ you can write:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460161102,
        "id": "c58923cb-ab4f-420e-974b-76ff5cb18531",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460161102,
        "parent_id": "a4dd3ec6-0d74-41a4-a45c-08ec7cac17c0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "List\u003cString\u003e list = new LinkedList\u003c\u003e();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "List\u003cString\u003e list = new LinkedList\u003c\u003e();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460161102,
        "id": "1da3f3dd-64e6-4968-9afe-e7182d8b9c9a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460161102,
        "parent_id": "a4dd3ec6-0d74-41a4-a45c-08ec7cac17c0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Where you had to write in previous versions, this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Where you had to write in previous versions, this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460161102,
        "id": "e16fe3fc-e832-499c-98ec-e4ad04e03b08",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460161102,
        "parent_id": "a4dd3ec6-0d74-41a4-a45c-08ec7cac17c0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "List\u003cString\u003e list = new LinkedList\u003cString\u003e();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "List\u003cString\u003e list = new LinkedList\u003cString\u003e();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460161103,
        "id": "b859f156-bb40-4061-b03c-20ef495d4354",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460161103,
        "parent_id": "a4dd3ec6-0d74-41a4-a45c-08ec7cac17c0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One limitation is for "
            ],
            [
              "Anonymous Classes",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/3317/nested-and-inner-classes/18796/anonymous-inner-classes#t=201612181613574439584"
                ]
              ]
            ],
            [
              ", where you still must provide the type parameter in the instantiation:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One limitation is for "
          },
          {
            "Text": "Anonymous Classes",
            "Link": "http://stackoverflow.com/documentation/java/3317/nested-and-inner-classes/18796/anonymous-inner-classes#t=201612181613574439584"
          },
          {
            "Text": ", where you still must provide the type parameter in the instantiation:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460161103,
        "id": "96caa934-254d-4512-a11a-00f81c7b11b6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460161103,
        "parent_id": "a4dd3ec6-0d74-41a4-a45c-08ec7cac17c0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// This will compile:\n\nComparator\u003cString\u003e caseInsensitiveComparator = new Comparator\u003cString\u003e() {\n    @Override\n    public int compare(String s1, String s2) {\n        return s1.compareToIgnoreCase(s2);\n    }\n};\n\n// But this will not:\n\nComparator\u003cString\u003e caseInsensitiveComparator = new Comparator\u003c\u003e() {\n    @Override\n    public int compare(String s1, String s2) {\n        return s1.compareToIgnoreCase(s2);\n    }\n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// This will compile:\n\nComparator\u003cString\u003e caseInsensitiveComparator = new Comparator\u003cString\u003e() {\n    @Override\n    public int compare(String s1, String s2) {\n        return s1.compareToIgnoreCase(s2);\n    }\n};\n\n// But this will not:\n\nComparator\u003cString\u003e caseInsensitiveComparator = new Comparator\u003c\u003e() {\n    @Override\n    public int compare(String s1, String s2) {\n        return s1.compareToIgnoreCase(s2);\n    }\n};",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460161104,
        "id": "47794255-2fc1-4789-8b6a-a7add424d1f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460161104,
        "parent_id": "a4dd3ec6-0d74-41a4-a45c-08ec7cac17c0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Although using the diamond with "
            ],
            [
              "Anonymous Inner Classes",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/3317/nested-and-inner-classes/18796/anonymous-inner-classes#t=201612181613574439584"
                ]
              ]
            ],
            [
              " is not supported in Java 7 and 8, "
            ],
            [
              "it will be included as a new feature in Java 9",
              [
                [
                  "b"
                ],
                [
                  "a",
                  "https://bugs.openjdk.java.net/browse/JDK-8062373"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Although using the diamond with "
          },
          {
            "Text": "Anonymous Inner Classes",
            "Link": "http://stackoverflow.com/documentation/java/3317/nested-and-inner-classes/18796/anonymous-inner-classes#t=201612181613574439584"
          },
          {
            "Text": " is not supported in Java 7 and 8, "
          },
          {
            "Text": "it will be included as a new feature in Java 9",
            "AttrFlags": 1,
            "Link": "https://bugs.openjdk.java.net/browse/JDK-8062373"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460161104,
        "id": "4843a0db-01ff-481f-8b88-a6082374938d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460161104,
        "parent_id": "a4dd3ec6-0d74-41a4-a45c-08ec7cac17c0",
        "parent_table": "block",
        "type": "sub_header",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460161104,
        "id": "4eee90d3-151d-4578-acbf-5591b8e9c14b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460161104,
        "parent_id": "a4dd3ec6-0d74-41a4-a45c-08ec7cac17c0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Footnote:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Footnote:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460161104,
        "id": "cc5fe617-246e-4d2d-b871-61832f148dec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460161104,
        "parent_id": "a4dd3ec6-0d74-41a4-a45c-08ec7cac17c0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "1 - Some people call the "
            ],
            [
              "\u003c\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " usage the “diamond "
            ],
            [
              "operator",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "”. This is incorrect. The diamond does not behave as an operator, and is not described or listed anywhere in the JLS or the (official) Java Tutorials as an operator. Indeed, "
            ],
            [
              "\u003c\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not even a distinct Java token. Rather it is a "
            ],
            [
              "\\\u003c",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " token followed by a "
            ],
            [
              "\\\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " token, and it is legal (though bad style) to have whitespace or comments between the two. The JLS and the Tutorials consistently refer to "
            ],
            [
              "\u003c\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as “the diamond”, and that is therefore the correct term for it."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "1 - Some people call the "
          },
          {
            "Text": "\u003c\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " usage the “diamond "
          },
          {
            "Text": "operator",
            "AttrFlags": 4
          },
          {
            "Text": "”. This is incorrect. The diamond does not behave as an operator, and is not described or listed anywhere in the JLS or the (official) Java Tutorials as an operator. Indeed, "
          },
          {
            "Text": "\u003c\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " is not even a distinct Java token. Rather it is a "
          },
          {
            "Text": "\\\u003c",
            "AttrFlags": 2
          },
          {
            "Text": " token followed by a "
          },
          {
            "Text": "\\\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " token, and it is legal (though bad style) to have whitespace or comments between the two. The JLS and the Tutorials consistently refer to "
          },
          {
            "Text": "\u003c\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " as “the diamond”, and that is therefore the correct term for it."
          }
        ]
      }
    ],
    "title": "The Diamond",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}