{
  "ID": "485adf55-e82c-42a4-a97a-f3f9fee70816",
  "Root": {
    "alive": true,
    "content": [
      "c19c6f39-7bac-43d1-8c4f-cd6365149a1f",
      "dd6e1db0-e2ff-4b81-9d03-871f16da2754",
      "7b2e4a0d-d937-452f-a427-4af07689ed06",
      "bcff5b89-4ccc-4b6a-b89d-9a4611dcdb44"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460179015,
    "id": "485adf55-e82c-42a4-a97a-f3f9fee70816",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460179015,
    "parent_id": "89249b2d-411e-48a0-929e-d4742921cff2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "100 Locking"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460179012,
        "id": "c19c6f39-7bac-43d1-8c4f-cd6365149a1f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460179012,
        "parent_id": "485adf55-e82c-42a4-a97a-f3f9fee70816",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A file can be locked using the "
            ],
            [
              "FileChannel",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " API that can be acquired from Input Output "
            ],
            [
              "streams",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "readers",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A file can be locked using the "
          },
          {
            "Text": "FileChannel",
            "AttrFlags": 2
          },
          {
            "Text": " API that can be acquired from Input Output "
          },
          {
            "Text": "streams",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "readers",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460179015,
        "id": "dd6e1db0-e2ff-4b81-9d03-871f16da2754",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460179015,
        "parent_id": "485adf55-e82c-42a4-a97a-f3f9fee70816",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example with "
            ],
            [
              "streams",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example with "
          },
          {
            "Text": "streams",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460179015,
        "id": "7b2e4a0d-d937-452f-a427-4af07689ed06",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460179015,
        "parent_id": "485adf55-e82c-42a4-a97a-f3f9fee70816",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "// Open a file stream"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "// Open a file stream"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460179015,
        "id": "bcff5b89-4ccc-4b6a-b89d-9a4611dcdb44",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460179015,
        "parent_id": "485adf55-e82c-42a4-a97a-f3f9fee70816",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "FileInputStream ios = new FileInputStream(filename);\n\n// get underlying channel\nFileChannel channel = ios.getChannel();\n\n/*\n * try to lock the file. true means whether the lock is shared or not i.e. multiple processes can acquire a\n * shared lock (for reading only) Using false with readable channel only will generate an exception. You should\n * use a writable channel (taken from FileOutputStream) when using false. tryLock will always return immediately\n */\nFileLock lock = channel.tryLock(0, Long.MAX_VALUE, true);\n\nif (lock == null) {\n    System.out.println(\"Unable to acquire lock\");\n} else {\n    System.out.println(\"Lock acquired successfully\");\n}\n\n// you can also use blocking call which will block until a lock is acquired.\nchannel.lock();\n\n// Once you have completed desired operations of file. release the lock\nif (lock != null) {\n    lock.release();\n}\n\n// close the file stream afterwards\n// Example with reader\nRandomAccessFile randomAccessFile = new RandomAccessFile(filename,  \"rw\");\nFileChannel channel = randomAccessFile.getChannel();\n//repeat the same steps as above but now you can use shared as true or false as the channel is in read write mode"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "FileInputStream ios = new FileInputStream(filename);\n\n// get underlying channel\nFileChannel channel = ios.getChannel();\n\n/*\n * try to lock the file. true means whether the lock is shared or not i.e. multiple processes can acquire a\n * shared lock (for reading only) Using false with readable channel only will generate an exception. You should\n * use a writable channel (taken from FileOutputStream) when using false. tryLock will always return immediately\n */\nFileLock lock = channel.tryLock(0, Long.MAX_VALUE, true);\n\nif (lock == null) {\n    System.out.println(\"Unable to acquire lock\");\n} else {\n    System.out.println(\"Lock acquired successfully\");\n}\n\n// you can also use blocking call which will block until a lock is acquired.\nchannel.lock();\n\n// Once you have completed desired operations of file. release the lock\nif (lock != null) {\n    lock.release();\n}\n\n// close the file stream afterwards\n// Example with reader\nRandomAccessFile randomAccessFile = new RandomAccessFile(filename,  \"rw\");\nFileChannel channel = randomAccessFile.getChannel();\n//repeat the same steps as above but now you can use shared as true or false as the channel is in read write mode",
        "code_language": "Plain Text"
      }
    ],
    "title": "100 Locking"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}