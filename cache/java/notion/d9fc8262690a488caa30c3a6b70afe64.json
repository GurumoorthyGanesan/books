{
  "ID": "d9fc8262-690a-488c-aa30-c3a6b70afe64",
  "Root": {
    "alive": true,
    "content": [
      "47889c2d-381d-4445-a3cb-d68f3db72cd7",
      "294b3610-1702-4267-ad6f-ce86701c47e2",
      "b5237771-fd04-4801-aa20-b3807f0bdada",
      "17f68e7c-1824-41d5-b1fa-06742f57ffe6",
      "cad1d702-5796-42e8-bd2c-ec901dfc1b8c",
      "0f9ed236-de62-4b73-9d6e-e226241ad1cf",
      "45c006bf-7a89-4f69-9295-864e73ee4952",
      "4698b76d-0f39-4a5a-a38d-f3c59729545d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460195142,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d9fc8262-690a-488c-aa30-c3a6b70afe64",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551758799300,
    "parent_id": "bcd7d24d-a9b8-40ba-ac61-89bb802d73b5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Converting arrays between primitives and boxed types"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460195141,
        "id": "47889c2d-381d-4445-a3cb-d68f3db72cd7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460195141,
        "parent_id": "d9fc8262-690a-488c-aa30-c3a6b70afe64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sometimes conversion of "
            ],
            [
              "primitive",
              [
                [
                  "a",
                  "http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
                ]
              ]
            ],
            [
              " types to "
            ],
            [
              "boxed",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/tutorial/java/data/autoboxing.html"
                ]
              ]
            ],
            [
              " types is necessary."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sometimes conversion of "
          },
          {
            "Text": "primitive",
            "Link": "http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
          },
          {
            "Text": " types to "
          },
          {
            "Text": "boxed",
            "Link": "https://docs.oracle.com/javase/tutorial/java/data/autoboxing.html"
          },
          {
            "Text": " types is necessary."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460195141,
        "id": "294b3610-1702-4267-ad6f-ce86701c47e2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460195141,
        "parent_id": "d9fc8262-690a-488c-aa30-c3a6b70afe64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To convert the array, it’s possible to use streams (in Java 8 and above):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To convert the array, it’s possible to use streams (in Java 8 and above):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460195141,
        "id": "b5237771-fd04-4801-aa20-b3807f0bdada",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460195141,
        "parent_id": "d9fc8262-690a-488c-aa30-c3a6b70afe64",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int[] primitiveArray = {1, 2, 3, 4};\nInteger[] boxedArray = \n    Arrays.stream(primitiveArray).boxed().toArray(Integer[]::new);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int[] primitiveArray = {1, 2, 3, 4};\nInteger[] boxedArray = \n    Arrays.stream(primitiveArray).boxed().toArray(Integer[]::new);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460195141,
        "id": "17f68e7c-1824-41d5-b1fa-06742f57ffe6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460195141,
        "parent_id": "d9fc8262-690a-488c-aa30-c3a6b70afe64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With lower versions it can be by iterating the primitive array and explicitly copying it to the boxed array:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With lower versions it can be by iterating the primitive array and explicitly copying it to the boxed array:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460195141,
        "id": "cad1d702-5796-42e8-bd2c-ec901dfc1b8c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460195141,
        "parent_id": "d9fc8262-690a-488c-aa30-c3a6b70afe64",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int[] primitiveArray = {1, 2, 3, 4};\nInteger[] boxedArray = new Integer[primitiveArray.length];\nfor (int i = 0; i \u003c primitiveArray.length; ++i) {\n    boxedArray[i] = primitiveArray[i]; // Each element is autoboxed here\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int[] primitiveArray = {1, 2, 3, 4};\nInteger[] boxedArray = new Integer[primitiveArray.length];\nfor (int i = 0; i \u003c primitiveArray.length; ++i) {\n    boxedArray[i] = primitiveArray[i]; // Each element is autoboxed here\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460195142,
        "id": "0f9ed236-de62-4b73-9d6e-e226241ad1cf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460195142,
        "parent_id": "d9fc8262-690a-488c-aa30-c3a6b70afe64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Similarly, a boxed array can be converted to an array of its primitive counterpart:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Similarly, a boxed array can be converted to an array of its primitive counterpart:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460195142,
        "id": "45c006bf-7a89-4f69-9295-864e73ee4952",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460195142,
        "parent_id": "d9fc8262-690a-488c-aa30-c3a6b70afe64",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Integer[] boxedArray = {1, 2, 3, 4};\nint[] primitiveArray = \n    Arrays.stream(boxedArray).mapToInt(Integer::intValue).toArray();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Integer[] boxedArray = {1, 2, 3, 4};\nint[] primitiveArray = \n    Arrays.stream(boxedArray).mapToInt(Integer::intValue).toArray();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460195142,
        "id": "4698b76d-0f39-4a5a-a38d-f3c59729545d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460195142,
        "parent_id": "d9fc8262-690a-488c-aa30-c3a6b70afe64",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Integer[] boxedArray = {1, 2, 3, 4};\nint[] primitiveArray = new int[boxedArray.length];\nfor (int i = 0; i \u003c boxedArray.length; ++i) {\n    primitiveArray[i] = boxedArray[i]; // Each element is outboxed here\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Integer[] boxedArray = {1, 2, 3, 4};\nint[] primitiveArray = new int[boxedArray.length];\nfor (int i = 0; i \u003c boxedArray.length; ++i) {\n    primitiveArray[i] = boxedArray[i]; // Each element is outboxed here\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Converting arrays between primitives and boxed types",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}