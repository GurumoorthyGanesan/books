{
  "ID": "118ff56f-9f95-4ce8-89c1-ad2d1b0b75c5",
  "Root": {
    "alive": true,
    "content": [
      "60854b8b-ffa1-4cb4-a616-8a8ce2f941d7",
      "dd455721-2e4f-4f80-9b63-26aff117ae71",
      "241d9c91-70df-44cc-87ed-c4d667b90088",
      "c1ca4059-dc72-4f4b-82f6-083ac047a218",
      "33ea75cd-f764-442d-843d-9b65fe104379",
      "58e11dc3-691e-4e48-92fb-d1c2d820b175",
      "e05b4c3b-225b-49b1-9373-78b902737114",
      "9188d416-12a6-45f1-8ecb-7d516b408ceb",
      "cd5666aa-c782-429d-937b-863ea1c77935",
      "006c4b62-c742-4e7d-8979-047d9e9e1b66"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550463234096,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "118ff56f-9f95-4ce8-89c1-ad2d1b0b75c5",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550463234096,
    "parent_id": "a72a1c9e-c899-4602-bb27-12024eba3c19",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Adding Getters and Setters"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463234090,
        "id": "60854b8b-ffa1-4cb4-a616-8a8ce2f941d7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463234090,
        "parent_id": "118ff56f-9f95-4ce8-89c1-ad2d1b0b75c5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Encapsulation is a basic concept in OOP. It is about wrapping data and code as a single unit. In this case, it is a good practice to declare the variables as "
            ],
            [
              "private",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and then access them through "
            ],
            [
              "Getters",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Setters",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to view and/or modify them."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Encapsulation is a basic concept in OOP. It is about wrapping data and code as a single unit. In this case, it is a good practice to declare the variables as "
          },
          {
            "Text": "private",
            "AttrFlags": 2
          },
          {
            "Text": " and then access them through "
          },
          {
            "Text": "Getters",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Setters",
            "AttrFlags": 2
          },
          {
            "Text": " to view and/or modify them."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463234092,
        "id": "dd455721-2e4f-4f80-9b63-26aff117ae71",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463234092,
        "parent_id": "118ff56f-9f95-4ce8-89c1-ad2d1b0b75c5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Sample {\n  private String  name;\n  private int age;\n\n  public int getAge() {\n    return age;\n  }\n\n  public void setAge(int age) {\n    this.age = age;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Sample {\n  private String  name;\n  private int age;\n\n  public int getAge() {\n    return age;\n  }\n\n  public void setAge(int age) {\n    this.age = age;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463234093,
        "id": "241d9c91-70df-44cc-87ed-c4d667b90088",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463234093,
        "parent_id": "118ff56f-9f95-4ce8-89c1-ad2d1b0b75c5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These private variables cannot be accessed directly from outside the class. Hence they are protected from unauthorized access. But if you want to view or modify them, you can use Getters and Setters."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These private variables cannot be accessed directly from outside the class. Hence they are protected from unauthorized access. But if you want to view or modify them, you can use Getters and Setters."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463234093,
        "id": "c1ca4059-dc72-4f4b-82f6-083ac047a218",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463234093,
        "parent_id": "118ff56f-9f95-4ce8-89c1-ad2d1b0b75c5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "getXxx()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method will return the current value of the variable "
            ],
            [
              "xxx",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", while you can set the value of the variable "
            ],
            [
              "xxx",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " using "
            ],
            [
              "setXxx()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "getXxx()",
            "AttrFlags": 2
          },
          {
            "Text": " method will return the current value of the variable "
          },
          {
            "Text": "xxx",
            "AttrFlags": 2
          },
          {
            "Text": ", while you can set the value of the variable "
          },
          {
            "Text": "xxx",
            "AttrFlags": 2
          },
          {
            "Text": " using "
          },
          {
            "Text": "setXxx()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463234093,
        "id": "33ea75cd-f764-442d-843d-9b65fe104379",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463234093,
        "parent_id": "118ff56f-9f95-4ce8-89c1-ad2d1b0b75c5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The naming convention of the methods are (in example variable is called "
            ],
            [
              "variableName",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The naming convention of the methods are (in example variable is called "
          },
          {
            "Text": "variableName",
            "AttrFlags": 2
          },
          {
            "Text": "):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463234094,
        "id": "58e11dc3-691e-4e48-92fb-d1c2d820b175",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463234094,
        "parent_id": "118ff56f-9f95-4ce8-89c1-ad2d1b0b75c5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All non "
            ],
            [
              "boolean",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variables"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "All non "
          },
          {
            "Text": "boolean",
            "AttrFlags": 2
          },
          {
            "Text": " variables"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463234094,
        "id": "e05b4c3b-225b-49b1-9373-78b902737114",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463234094,
        "parent_id": "118ff56f-9f95-4ce8-89c1-ad2d1b0b75c5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "getVariableName()   //Getter, The variable name should start with uppercase\nsetVariableName(..) //Setter, The variable name should start with uppercase"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "getVariableName()   //Getter, The variable name should start with uppercase\nsetVariableName(..) //Setter, The variable name should start with uppercase",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463234094,
        "id": "9188d416-12a6-45f1-8ecb-7d516b408ceb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463234094,
        "parent_id": "118ff56f-9f95-4ce8-89c1-ad2d1b0b75c5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "boolean",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variables"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "boolean",
            "AttrFlags": 2
          },
          {
            "Text": " variables"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463234094,
        "id": "cd5666aa-c782-429d-937b-863ea1c77935",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463234094,
        "parent_id": "118ff56f-9f95-4ce8-89c1-ad2d1b0b75c5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "isVariableName()     //Getter, The variable name should start with uppercase\nsetVariableName(...) //Setter, The variable name should start with uppercase"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "isVariableName()     //Getter, The variable name should start with uppercase\nsetVariableName(...) //Setter, The variable name should start with uppercase",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463234096,
        "id": "006c4b62-c742-4e7d-8979-047d9e9e1b66",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463234096,
        "parent_id": "118ff56f-9f95-4ce8-89c1-ad2d1b0b75c5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Public Getters and Setters are part of the "
            ],
            [
              "Property",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html"
                ]
              ]
            ],
            [
              " definition of a Java Bean."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Public Getters and Setters are part of the "
          },
          {
            "Text": "Property",
            "Link": "https://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html"
          },
          {
            "Text": " definition of a Java Bean."
          }
        ]
      }
    ],
    "title": "Adding Getters and Setters",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}