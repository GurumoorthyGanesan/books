{
  "ID": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
  "Root": {
    "alive": true,
    "content": [
      "a9996ec8-21e3-4dd5-a5ed-5c80f62733bb",
      "ff8c5b31-3349-4eae-a279-4dde68ed72a5",
      "487b0f72-ca24-40a8-8cf1-b41eea6d175d",
      "4ec24776-0ccb-4faf-b452-ce8fb38c7769",
      "5a1eedf8-91c7-4564-a026-d2d131fc105b",
      "3c24bca0-fbf1-4278-be22-cc541768765a",
      "9c8f1a00-57b4-4643-9cca-6ca2ec676cf4",
      "78d249b1-96ae-45f7-a6ea-7b8817297d15",
      "908b62f6-dfa9-4059-b88d-c588770c66ae",
      "2ad3702e-7124-4ff2-b841-f6fc06faf5ac",
      "82161d56-5735-40be-91d2-23a9d9e0c6d7",
      "6b19de5e-d800-453d-83eb-ecd859631394",
      "42c81ca4-af30-4b42-a367-1b503d6d112f",
      "50e5c07e-a766-4c2a-a0a0-b527fecd5dc8",
      "18a8e348-fb66-4e6c-878b-77992c2d81f7",
      "52babb64-1674-4982-847f-2e02a7723cca",
      "3e6d2067-4ce4-4679-88a4-af9f4dca14c7",
      "8318e54c-1105-4315-b866-d01442b51905",
      "65797c42-ae30-40ce-afb9-63b738483558",
      "b220a658-8366-4066-a4b1-26ee3191f82a",
      "46bfbb11-af55-4e0f-a704-e9e1d4e9c383",
      "a0dfb39e-4a53-41d1-9545-3cc63e1420bc",
      "16b06970-b7db-4d32-9aa0-20956c4a608a",
      "d6b37890-eedb-4feb-a801-9817f9d43ba2",
      "9415b1dd-c6cc-4ee1-9489-702190a7654e",
      "4c3aefa7-423f-46fc-a95a-cf1f84687fb3",
      "9b29c85c-a00e-461d-922f-d3d075b094d5",
      "ce80a491-e81e-4787-9991-5f75b11709df",
      "8f7ec76e-6d0a-4321-90c0-035c52afc744",
      "07fdb6fe-3670-4a39-a7b1-ddbee141fb66"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460115171,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551746552210,
    "parent_id": "39a676e8-4916-4942-a1ec-5020702b7db9",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "The Java Exception Hierarchy - Unchecked and Checked Exceptions"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115164,
        "id": "a9996ec8-21e3-4dd5-a5ed-5c80f62733bb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115164,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All Java exceptions are instances of classes in the Exception class hierarchy. This can be represented as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All Java exceptions are instances of classes in the Exception class hierarchy. This can be represented as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115166,
        "id": "ff8c5b31-3349-4eae-a279-4dde68ed72a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115166,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "java.lang.Throwable",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/lang/Throwable.html"
                ]
              ]
            ],
            [
              " - This is the base class for all exception classes. Its methods and constructors implement a range of functionality common to all exceptions."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "java.lang.Throwable",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/lang/Throwable.html"
          },
          {
            "Text": " - This is the base class for all exception classes. Its methods and constructors implement a range of functionality common to all exceptions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115166,
        "id": "487b0f72-ca24-40a8-8cf1-b41eea6d175d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115166,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "- [`java.lang.Exception`][2] - This is the superclass of all normal exceptions.\n    - various standard and custom exception classes.\n    - [`java.lang.RuntimeException`][3] - This the superclass of all normal exceptions that are *unchecked exceptions*.\n      - various standard and custom runtime exception classes.\n- [`java.lang.Error`][4] - This is the superclass of all \"fatal error\" exceptions."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "- [`java.lang.Exception`][2] - This is the superclass of all normal exceptions.\n    - various standard and custom exception classes.\n    - [`java.lang.RuntimeException`][3] - This the superclass of all normal exceptions that are *unchecked exceptions*.\n      - various standard and custom runtime exception classes.\n- [`java.lang.Error`][4] - This is the superclass of all \"fatal error\" exceptions.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115166,
        "id": "4ec24776-0ccb-4faf-b452-ce8fb38c7769",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115166,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Notes:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Notes:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115167,
        "id": "5a1eedf8-91c7-4564-a026-d2d131fc105b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115167,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The distinction between "
            ],
            [
              "checked",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "unchecked",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " exceptions is described below."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The distinction between "
          },
          {
            "Text": "checked",
            "AttrFlags": 4
          },
          {
            "Text": " and "
          },
          {
            "Text": "unchecked",
            "AttrFlags": 4
          },
          {
            "Text": " exceptions is described below."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115167,
        "id": "3c24bca0-fbf1-4278-be22-cc541768765a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115167,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "Throwable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Exception",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "RuntimeException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class should be treated as "
            ],
            [
              "abstract",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "; see http://stackoverflow.com/documentation/java/5381/java-pitfalls-exception-usage/18023/pitfall-throwing-throwable-exception-error-or-runtimeexception#t=201610240803173325134."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "Throwable",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Exception",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "RuntimeException",
            "AttrFlags": 2
          },
          {
            "Text": " class should be treated as "
          },
          {
            "Text": "abstract",
            "AttrFlags": 2
          },
          {
            "Text": "; see http://stackoverflow.com/documentation/java/5381/java-pitfalls-exception-usage/18023/pitfall-throwing-throwable-exception-error-or-runtimeexception#t=201610240803173325134."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115167,
        "id": "9c8f1a00-57b4-4643-9cca-6ca2ec676cf4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115167,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "Error",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " exceptions are thrown by the JVM in situations where it would be unsafe or unwise for an application to attempt to recover."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "Error",
            "AttrFlags": 2
          },
          {
            "Text": " exceptions are thrown by the JVM in situations where it would be unsafe or unwise for an application to attempt to recover."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115168,
        "id": "78d249b1-96ae-45f7-a6ea-7b8817297d15",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115168,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It would be unwise to declare custom subtypes of "
            ],
            [
              "Throwable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Java tools and libraries may assume that "
            ],
            [
              "Error",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Exception",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are the only direct subtypes of "
            ],
            [
              "Throwable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and misbehave if that assumption is incorrect."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "It would be unwise to declare custom subtypes of "
          },
          {
            "Text": "Throwable",
            "AttrFlags": 2
          },
          {
            "Text": ". Java tools and libraries may assume that "
          },
          {
            "Text": "Error",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Exception",
            "AttrFlags": 2
          },
          {
            "Text": " are the only direct subtypes of "
          },
          {
            "Text": "Throwable",
            "AttrFlags": 2
          },
          {
            "Text": ", and misbehave if that assumption is incorrect."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115168,
        "id": "908b62f6-dfa9-4059-b88d-c588770c66ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115168,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Checked versus Unchecked Exceptions"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Checked versus Unchecked Exceptions"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115168,
        "id": "2ad3702e-7124-4ff2-b841-f6fc06faf5ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115168,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One of the criticisms of exception support in some programming languages is that is difficult to know which exceptions a given method or procedure might throw. Given that an unhandled exception is liable to cause a program to crash, this can make exceptions a source of fragility."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One of the criticisms of exception support in some programming languages is that is difficult to know which exceptions a given method or procedure might throw. Given that an unhandled exception is liable to cause a program to crash, this can make exceptions a source of fragility."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115168,
        "id": "82161d56-5735-40be-91d2-23a9d9e0c6d7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115168,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The Java language addresses this concern with the checked exception mechanism. First, Java classifies exceptions into two categories:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The Java language addresses this concern with the checked exception mechanism. First, Java classifies exceptions into two categories:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115168,
        "id": "6b19de5e-d800-453d-83eb-ecd859631394",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115168,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Checked exceptions typically represent anticipated events that an application should be able to deal with. For instance, "
            ],
            [
              "IOException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and its subtypes represent error conditions that can occur in I/O operations. Examples include, file opens failing because a file or directory does not exist, network reads and writes failing because a network connection has been broken and so on."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Checked exceptions typically represent anticipated events that an application should be able to deal with. For instance, "
          },
          {
            "Text": "IOException",
            "AttrFlags": 2
          },
          {
            "Text": " and its subtypes represent error conditions that can occur in I/O operations. Examples include, file opens failing because a file or directory does not exist, network reads and writes failing because a network connection has been broken and so on."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115168,
        "id": "42c81ca4-af30-4b42-a367-1b503d6d112f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115168,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Unchecked exceptions typically represent unanticipated events that an application cannot deal with. These are typically the result of a bug in the application."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Unchecked exceptions typically represent unanticipated events that an application cannot deal with. These are typically the result of a bug in the application."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115168,
        "id": "50e5c07e-a766-4c2a-a0a0-b527fecd5dc8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115168,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "(In the following, “thrown” refers to any exception thrown explicitly (by a "
            ],
            [
              "throw",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement), or implicitly (in a failed dereference, type cast and so on). Similarly, “propagated” refers to an exception that was thrown in a nested call, and not caught within that call. The sample code below will illustrate this.)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "(In the following, “thrown” refers to any exception thrown explicitly (by a "
          },
          {
            "Text": "throw",
            "AttrFlags": 2
          },
          {
            "Text": " statement), or implicitly (in a failed dereference, type cast and so on). Similarly, “propagated” refers to an exception that was thrown in a nested call, and not caught within that call. The sample code below will illustrate this.)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115169,
        "id": "18a8e348-fb66-4e6c-878b-77992c2d81f7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115169,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The second part of the checked exception mechanism is that there are restrictions on methods where a checked exception may occur:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The second part of the checked exception mechanism is that there are restrictions on methods where a checked exception may occur:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115169,
        "id": "52babb64-1674-4982-847f-2e02a7723cca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115169,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When a checked exception is thrown or propagated in a method, it "
            ],
            [
              "must",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " either be caught by the method, or listed in the method’s "
            ],
            [
              "throws",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " clause. (The significance of the "
            ],
            [
              "throws",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " clause is described in "
            ],
            [
              "this example",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/89/exceptions-and-exception-handling/25209/"
                ]
              ]
            ],
            [
              ".)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "When a checked exception is thrown or propagated in a method, it "
          },
          {
            "Text": "must",
            "AttrFlags": 4
          },
          {
            "Text": " either be caught by the method, or listed in the method’s "
          },
          {
            "Text": "throws",
            "AttrFlags": 2
          },
          {
            "Text": " clause. (The significance of the "
          },
          {
            "Text": "throws",
            "AttrFlags": 2
          },
          {
            "Text": " clause is described in "
          },
          {
            "Text": "this example",
            "Link": "http://stackoverflow.com/documentation/java/89/exceptions-and-exception-handling/25209/"
          },
          {
            "Text": ".)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115169,
        "id": "3e6d2067-4ce4-4679-88a4-af9f4dca14c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115169,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When a checked exception is thrown or propagated in an initializer block, it must be caught the the block."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "When a checked exception is thrown or propagated in an initializer block, it must be caught the the block."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115170,
        "id": "8318e54c-1105-4315-b866-d01442b51905",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115170,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A checked exception cannot be propagated by a method call in a field initialization expression. (There is no way to catch such an exception.)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "A checked exception cannot be propagated by a method call in a field initialization expression. (There is no way to catch such an exception.)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115170,
        "id": "65797c42-ae30-40ce-afb9-63b738483558",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115170,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In short, a checked exception must be either handled, or declared."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In short, a checked exception must be either handled, or declared."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115170,
        "id": "b220a658-8366-4066-a4b1-26ee3191f82a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115170,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These restrictions do not apply to unchecked exceptions. This includes all cases where an exception is thrown implicitly, since all such cases throw unchecked exceptions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These restrictions do not apply to unchecked exceptions. This includes all cases where an exception is thrown implicitly, since all such cases throw unchecked exceptions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115170,
        "id": "46bfbb11-af55-4e0f-a704-e9e1d4e9c383",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115170,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Checked exception examples"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Checked exception examples"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115170,
        "id": "a0dfb39e-4a53-41d1-9545-3cc63e1420bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115170,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These code snippets are intended to illustrate the checked exception restrictions. In each case, we show a version of the code with a compilation error, and a second version with the error corrected."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These code snippets are intended to illustrate the checked exception restrictions. In each case, we show a version of the code with a compilation error, and a second version with the error corrected."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115170,
        "id": "16b06970-b7db-4d32-9aa0-20956c4a608a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115170,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// This declares a custom checked exception.\npublic class MyException extends Exception {\n    // constructors omitted.\n}\n\n// This declares a custom unchecked exception.\npublic class MyException2 extends RuntimeException {\n    // constructors omitted.\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// This declares a custom checked exception.\npublic class MyException extends Exception {\n    // constructors omitted.\n}\n\n// This declares a custom unchecked exception.\npublic class MyException2 extends RuntimeException {\n    // constructors omitted.\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115170,
        "id": "d6b37890-eedb-4feb-a801-9817f9d43ba2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115170,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The first example shows how explicitly thrown checked exceptions can be declared as “thrown” if they should not be handled in the method."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The first example shows how explicitly thrown checked exceptions can be declared as “thrown” if they should not be handled in the method."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115170,
        "id": "9415b1dd-c6cc-4ee1-9489-702190a7654e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115170,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// INCORRECT\npublic void methodThrowingCheckedException(boolean flag) {\n    int i = 1 / 0;                // Compiles OK, throws ArithmeticException\n    if (flag) {\n        throw new MyException();  // Compilation error\n    } else {\n        throw new MyException2(); // Compiles OK\n    }\n}\n\n// CORRECTED\npublic void methodThrowingCheckedException(boolean flag) throws MyException {\n    int i = 1 / 0;                // Compiles OK, throws ArithmeticException\n    if (flag) {\n        throw new MyException();  // Compilation error\n    } else {\n        throw new MyException2(); // Compiles OK\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// INCORRECT\npublic void methodThrowingCheckedException(boolean flag) {\n    int i = 1 / 0;                // Compiles OK, throws ArithmeticException\n    if (flag) {\n        throw new MyException();  // Compilation error\n    } else {\n        throw new MyException2(); // Compiles OK\n    }\n}\n\n// CORRECTED\npublic void methodThrowingCheckedException(boolean flag) throws MyException {\n    int i = 1 / 0;                // Compiles OK, throws ArithmeticException\n    if (flag) {\n        throw new MyException();  // Compilation error\n    } else {\n        throw new MyException2(); // Compiles OK\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115170,
        "id": "4c3aefa7-423f-46fc-a95a-cf1f84687fb3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115170,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The second example shows how a propagated checked exception can be dealt with."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The second example shows how a propagated checked exception can be dealt with."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115170,
        "id": "9b29c85c-a00e-461d-922f-d3d075b094d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115170,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// INCORRECT \npublic void methodWithPropagatedCheckedException() {\n    InputStream is = new FileInputStream(\"someFile.txt\");  // Compilation error\n    // FileInputStream throws IOException or a subclass if the file cannot \n    // be opened.  IOException is a checked exception.\n    ...\n}\n\n// CORRECTED (Version A) \npublic void methodWithPropagatedCheckedException() throws IOException {\n    InputStream is = new FileInputStream(\"someFile.txt\"); \n    ...\n}\n\n// CORRECTED (Version B) \npublic void methodWithPropagatedCheckedException() {\n    try {\n        InputStream is = new FileInputStream(\"someFile.txt\"); \n        ...\n    } catch (IOException ex) {\n        System.out.println(\"Cannot open file: \" + ex.getMessage());\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// INCORRECT \npublic void methodWithPropagatedCheckedException() {\n    InputStream is = new FileInputStream(\"someFile.txt\");  // Compilation error\n    // FileInputStream throws IOException or a subclass if the file cannot \n    // be opened.  IOException is a checked exception.\n    ...\n}\n\n// CORRECTED (Version A) \npublic void methodWithPropagatedCheckedException() throws IOException {\n    InputStream is = new FileInputStream(\"someFile.txt\"); \n    ...\n}\n\n// CORRECTED (Version B) \npublic void methodWithPropagatedCheckedException() {\n    try {\n        InputStream is = new FileInputStream(\"someFile.txt\"); \n        ...\n    } catch (IOException ex) {\n        System.out.println(\"Cannot open file: \" + ex.getMessage());\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115170,
        "id": "ce80a491-e81e-4787-9991-5f75b11709df",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115170,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The final example shows how to deal with a checked exception in a static field initializer."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The final example shows how to deal with a checked exception in a static field initializer."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115171,
        "id": "8f7ec76e-6d0a-4321-90c0-035c52afc744",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115171,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// INCORRECT\npublic class Test {\n    private static final InputStream is = \n            new FileInputStream(\"someFile.txt\");  // Compilation error\n}\n\n// CORRECTED\npublic class Test {\n    private static final InputStream is;\n    static {\n        InputStream tmp = null;\n        try {\n            tmp = new FileInputStream(\"someFile.txt\");\n        } catch (IOException ex) {\n            System.out.println(\"Cannot open file: \" + ex.getMessage());\n        }\n        is = tmp;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// INCORRECT\npublic class Test {\n    private static final InputStream is = \n            new FileInputStream(\"someFile.txt\");  // Compilation error\n}\n\n// CORRECTED\npublic class Test {\n    private static final InputStream is;\n    static {\n        InputStream tmp = null;\n        try {\n            tmp = new FileInputStream(\"someFile.txt\");\n        } catch (IOException ex) {\n            System.out.println(\"Cannot open file: \" + ex.getMessage());\n        }\n        is = tmp;\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460115171,
        "id": "07fdb6fe-3670-4a39-a7b1-ddbee141fb66",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460115171,
        "parent_id": "da8de6d3-a3ba-47a1-949b-040d01c9b421",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that in this last case, we also have to deal with the problems that "
            ],
            [
              "is",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " cannot be assigned to more than once, and yet also has to be assigned to, even in the case of an exception."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that in this last case, we also have to deal with the problems that "
          },
          {
            "Text": "is",
            "AttrFlags": 2
          },
          {
            "Text": " cannot be assigned to more than once, and yet also has to be assigned to, even in the case of an exception."
          }
        ]
      }
    ],
    "title": "The Java Exception Hierarchy - Unchecked and Checked Exceptions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}