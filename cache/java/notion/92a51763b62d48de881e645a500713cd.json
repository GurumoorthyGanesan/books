{
  "ID": "92a51763-b62d-48de-881e-645a500713cd",
  "Root": {
    "alive": true,
    "content": [
      "76a97aee-b12b-4516-a19c-104180b02438",
      "df4432c7-ce13-4543-9991-7e69c872be32",
      "3301672d-c475-4f2d-bc25-dbcabe481e25",
      "1a078ab9-fdb3-493b-acdf-51816cc73916",
      "82dab634-f438-4828-8b63-acfe197443e4",
      "6484e34a-86e0-4083-9c2e-acf31e2b0ec0",
      "c068b59b-0549-4a1c-bf3f-e2c066442b90",
      "9882d964-b1e2-401a-a7a8-fe359b4c538a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460193128,
    "id": "92a51763-b62d-48de-881e-645a500713cd",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460193128,
    "parent_id": "85c1bbdb-fd02-46ef-97a5-fd455d99d394",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "000 Interfaces"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193111,
        "id": "76a97aee-b12b-4516-a19c-104180b02438",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193111,
        "parent_id": "92a51763-b62d-48de-881e-645a500713cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193127,
        "id": "df4432c7-ce13-4543-9991-7e69c872be32",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193127,
        "parent_id": "92a51763-b62d-48de-881e-645a500713cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An "
            ],
            [
              "interface",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " is a reference type, similar to a class, which can be declared by using "
            ],
            [
              "interface",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An "
          },
          {
            "Text": "interface",
            "AttrFlags": 4
          },
          {
            "Text": " is a reference type, similar to a class, which can be declared by using "
          },
          {
            "Text": "interface",
            "AttrFlags": 2
          },
          {
            "Text": " keyword."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193127,
        "id": "3301672d-c475-4f2d-bc25-dbcabe481e25",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193127,
        "parent_id": "92a51763-b62d-48de-881e-645a500713cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Interfaces can contain only constants, method signatures, default methods, static methods, and nested types. Method bodies exist only for default methods and static methods. Like abstract classes, Interfaces cannot be instantiated—they can only be implemented by classes or extended by other interfaces."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Interfaces can contain only constants, method signatures, default methods, static methods, and nested types. Method bodies exist only for default methods and static methods. Like abstract classes, Interfaces cannot be instantiated—they can only be implemented by classes or extended by other interfaces."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193127,
        "id": "1a078ab9-fdb3-493b-acdf-51816cc73916",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193127,
        "parent_id": "92a51763-b62d-48de-881e-645a500713cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Interface is a common way to achieve full abstraction in Java."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Interface is a common way to achieve full abstraction in Java."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193127,
        "id": "82dab634-f438-4828-8b63-acfe197443e4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193127,
        "parent_id": "92a51763-b62d-48de-881e-645a500713cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Syntax"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Syntax"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193128,
        "id": "6484e34a-86e0-4083-9c2e-acf31e2b0ec0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193128,
        "parent_id": "92a51763-b62d-48de-881e-645a500713cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "public interface Foo { void foo(); /* any other methods */ }"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "public interface Foo { void foo(); /* any other methods */ }"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193128,
        "id": "c068b59b-0549-4a1c-bf3f-e2c066442b90",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193128,
        "parent_id": "92a51763-b62d-48de-881e-645a500713cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "public interface Foo1 extends Foo { void bar(); /* any other methods */ }"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "public interface Foo1 extends Foo { void bar(); /* any other methods */ }"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193128,
        "id": "9882d964-b1e2-401a-a7a8-fe359b4c538a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193128,
        "parent_id": "92a51763-b62d-48de-881e-645a500713cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "public class Foo2 implements Foo, Foo1 { /* implementation of Foo and Foo1 */ }"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "public class Foo2 implements Foo, Foo1 { /* implementation of Foo and Foo1 */ }"
          }
        ]
      }
    ],
    "title": "000 Interfaces"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}