{
  "ID": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
  "Root": {
    "alive": true,
    "content": [
      "7f33f204-7f89-4b0e-8d2a-fbea663ffc5a",
      "b72fddfa-88b3-4560-8e3f-fcfecfb092d6",
      "4325c763-38d0-4122-8ec2-626b0fd520ab",
      "69656823-7216-4051-b5ea-06d4a026930a",
      "49a57099-f3b3-4c05-9385-e7d6ad826071",
      "232b5050-caba-47bd-bb83-e85b734ccb06",
      "b078438a-c1ee-4764-9c17-e054fe93a771",
      "83f3330a-7389-46fe-9666-553edfd2c280",
      "e8f8e468-3923-4238-b780-69907fb5aa55",
      "769a2de1-dc13-4b5a-94a5-484bf7c85cab",
      "56067786-0c24-4145-a4e9-4c0fa0567a06",
      "33d323f8-919b-46dc-952f-edf4d4c65103",
      "5911fa54-5298-4230-bd4d-b833262fb8d5",
      "cf3e7be3-56fd-4964-b9d3-c59516ec0aeb",
      "12b367bb-9069-4dcf-ad04-87002ec17e7a",
      "d6d4a01a-b281-4e55-a9cc-f3ab20f28e94",
      "e2465bea-bf58-420c-8dbe-a6ed1eda6ec5",
      "fee4dbb6-e211-4a62-93a8-46d8c6289687",
      "7ff5d16b-71c6-4020-a615-5929025f7d4b",
      "47138b0a-4919-4e2b-88c4-78e09aefab26",
      "4078b3dc-fc53-4620-8522-3f8a2050f3f6",
      "002d3d65-72da-4c95-9130-ddce56adb77a",
      "d909f33b-cb55-4a76-9303-f448d65a7b7b",
      "f45b0dd3-45b6-4ee5-8870-3ae373b83a4e",
      "b8deb246-2dc8-415e-b6da-37bd21ae4446",
      "87df8e35-1a1a-4e53-81dc-4e0577e9fd4f",
      "cfc45b5e-f4ff-4a91-957f-52db6213b313",
      "20a5d915-8dd9-4cf2-ad68-bc12f68d5ddb",
      "01d20a89-569b-40fd-bcb9-9cc4003b94e9",
      "7c64752e-486b-4f0d-84b7-8aa3ee0db70f",
      "d5476817-d315-4f15-886b-d2fdafde121e",
      "fb47a48f-40cc-428b-9ac6-ac0522af9485",
      "b2ad5280-4f2c-4bd4-8b33-6eb983627a75",
      "c8b95989-a446-485e-85ad-3cb60cd00153",
      "db3b210c-5c51-4732-8496-8b2f7d2ec0ac",
      "b6282255-6959-4bd2-87f4-83354c780047",
      "d3fe8bfa-745e-446a-b89b-50f359a50be1"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460559921,
    "id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460559921,
    "parent_id": "8576ab83-1126-4d17-b0cf-2a0ba47249c1",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 Declaring and using a basic enum"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559917,
        "id": "7f33f204-7f89-4b0e-8d2a-fbea663ffc5a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559917,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Enum",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/tutorial/java/javaOO/enum.html"
                ]
              ]
            ],
            [
              " can be considered to be syntax sugar for a sealed class that is instantiated only a number of times known at compile-time to define a set of constants."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Enum",
            "Link": "https://docs.oracle.com/javase/tutorial/java/javaOO/enum.html"
          },
          {
            "Text": " can be considered to be syntax sugar for a sealed class that is instantiated only a number of times known at compile-time to define a set of constants."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559917,
        "id": "b72fddfa-88b3-4560-8e3f-fcfecfb092d6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559917,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A simple enum to list the different seasons would be declared as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A simple enum to list the different seasons would be declared as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559918,
        "id": "4325c763-38d0-4122-8ec2-626b0fd520ab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559918,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public enum Season {\n    WINTER,\n    SPRING,\n    SUMMER,\n    FALL\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public enum Season {\n    WINTER,\n    SPRING,\n    SUMMER,\n    FALL\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559918,
        "id": "69656823-7216-4051-b5ea-06d4a026930a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559918,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "While the enum constants don’t necessarily need to be in all-caps, it is Java convention that names of constants are entirely uppercase, with words separated by underscores."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "While the enum constants don’t necessarily need to be in all-caps, it is Java convention that names of constants are entirely uppercase, with words separated by underscores."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559918,
        "id": "49a57099-f3b3-4c05-9385-e7d6ad826071",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559918,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559918,
        "id": "232b5050-caba-47bd-bb83-e85b734ccb06",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559918,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can declare an Enum in its own file:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can declare an Enum in its own file:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559918,
        "id": "b078438a-c1ee-4764-9c17-e054fe93a771",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559918,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "/**\n * This enum is declared in the Season.java file.\n*/\npublic enum Season {\n    WINTER,\n    SPRING,\n    SUMMER,\n    FALL\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "/**\n * This enum is declared in the Season.java file.\n*/\npublic enum Season {\n    WINTER,\n    SPRING,\n    SUMMER,\n    FALL\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559918,
        "id": "83f3330a-7389-46fe-9666-553edfd2c280",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559918,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But you can also declare it inside another class:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But you can also declare it inside another class:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559918,
        "id": "e8f8e468-3923-4238-b780-69907fb5aa55",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559918,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Day {\n\n   private Season season;\n\n   public String getSeason() {\n       return season.name();\n   }\n\n   public void setSeason(String season) {\n       this.season = Season.valueOf(season);\n   }\n\n   /**\n    * This enum is declared inside the Day.java file and \n    * cannot be accessed outside because it's declared as private.\n    */\n   private enum Season {\n       WINTER,\n       SPRING,\n       SUMMER,\n       FALL\n   }\n\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Day {\n\n   private Season season;\n\n   public String getSeason() {\n       return season.name();\n   }\n\n   public void setSeason(String season) {\n       this.season = Season.valueOf(season);\n   }\n\n   /**\n    * This enum is declared inside the Day.java file and \n    * cannot be accessed outside because it's declared as private.\n    */\n   private enum Season {\n       WINTER,\n       SPRING,\n       SUMMER,\n       FALL\n   }\n\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559918,
        "id": "769a2de1-dc13-4b5a-94a5-484bf7c85cab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559918,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finally, you cannot declare an Enum inside a method body or constructor:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finally, you cannot declare an Enum inside a method body or constructor:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559918,
        "id": "56067786-0c24-4145-a4e9-4c0fa0567a06",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559918,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Day {\n\n    /**\n     * Constructor\n    */\n    public Day() {\n        // Illegal. Compilation error\n        enum Season {\n            WINTER,\n            SPRING,\n            SUMMER,\n            FALL\n        }\n    }\n\n    public void aSimpleMethod() {\n        // Legal. You can declare a primitive (or an Object) inside a method. Compile!\n        int primitiveInt = 42;\n\n        // Illegal. Compilation error.\n        enum Season {\n            WINTER,\n            SPRING,\n            SUMMER,\n            FALL\n        }\n\n        Season season = Season.SPRING;\n    }\n    \n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Day {\n\n    /**\n     * Constructor\n    */\n    public Day() {\n        // Illegal. Compilation error\n        enum Season {\n            WINTER,\n            SPRING,\n            SUMMER,\n            FALL\n        }\n    }\n\n    public void aSimpleMethod() {\n        // Legal. You can declare a primitive (or an Object) inside a method. Compile!\n        int primitiveInt = 42;\n\n        // Illegal. Compilation error.\n        enum Season {\n            WINTER,\n            SPRING,\n            SUMMER,\n            FALL\n        }\n\n        Season season = Season.SPRING;\n    }\n    \n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559918,
        "id": "33d323f8-919b-46dc-952f-edf4d4c65103",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559918,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559918,
        "id": "5911fa54-5298-4230-bd4d-b833262fb8d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559918,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Duplicate enum constants are not allowed:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Duplicate enum constants are not allowed:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559919,
        "id": "cf3e7be3-56fd-4964-b9d3-c59516ec0aeb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559919,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public enum Season {\n    WINTER,\n    WINTER, //Compile Time Error : Duplicate Constants\n    SPRING,\n    SUMMER,\n    FALL\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public enum Season {\n    WINTER,\n    WINTER, //Compile Time Error : Duplicate Constants\n    SPRING,\n    SUMMER,\n    FALL\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559919,
        "id": "12b367bb-9069-4dcf-ad04-87002ec17e7a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559919,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559919,
        "id": "d6d4a01a-b281-4e55-a9cc-f3ab20f28e94",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559919,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Every constant of enum is "
            ],
            [
              "public",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              ", ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "static",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "final",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " by default. As every constant is "
            ],
            [
              "static",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", they can be accessed directly using the enum name."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Every constant of enum is "
          },
          {
            "Text": "public",
            "AttrFlags": 3
          },
          {
            "Text": ", ",
            "AttrFlags": 1
          },
          {
            "Text": "static",
            "AttrFlags": 3
          },
          {
            "Text": " and "
          },
          {
            "Text": "final",
            "AttrFlags": 3
          },
          {
            "Text": " by default. As every constant is "
          },
          {
            "Text": "static",
            "AttrFlags": 2
          },
          {
            "Text": ", they can be accessed directly using the enum name."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559919,
        "id": "e2465bea-bf58-420c-8dbe-a6ed1eda6ec5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559919,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Enum constants can be passed around as method parameters:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Enum constants can be passed around as method parameters:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559919,
        "id": "fee4dbb6-e211-4a62-93a8-46d8c6289687",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559919,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public static void display(Season s) {\n    System.out.println(s.name());  // name() is a built-in method that gets the exact name of the enum constant\n}\n\ndisplay(Season.WINTER);  // Prints out \"WINTER\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public static void display(Season s) {\n    System.out.println(s.name());  // name() is a built-in method that gets the exact name of the enum constant\n}\n\ndisplay(Season.WINTER);  // Prints out \"WINTER\"",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559919,
        "id": "7ff5d16b-71c6-4020-a615-5929025f7d4b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559919,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can get an array of the enum constants using the "
            ],
            [
              "values()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method. The values are guaranteed to be in declaration order in the returned array:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can get an array of the enum constants using the "
          },
          {
            "Text": "values()",
            "AttrFlags": 2
          },
          {
            "Text": " method. The values are guaranteed to be in declaration order in the returned array:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559919,
        "id": "47138b0a-4919-4e2b-88c4-78e09aefab26",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559919,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Season[] seasons = Season.values();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Season[] seasons = Season.values();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559919,
        "id": "4078b3dc-fc53-4620-8522-3f8a2050f3f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559919,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: this method allocates a new array of values each time it is called.",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: this method allocates a new array of values each time it is called.",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559919,
        "id": "002d3d65-72da-4c95-9130-ddce56adb77a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559919,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559920,
        "id": "d909f33b-cb55-4a76-9303-f448d65a7b7b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559920,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To iterate over the enum constants:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To iterate over the enum constants:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559920,
        "id": "f45b0dd3-45b6-4ee5-8870-3ae373b83a4e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559920,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public static void enumIterate() {\n    for (Season s : Season.values()) {\n        System.out.println(s.name());\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public static void enumIterate() {\n    for (Season s : Season.values()) {\n        System.out.println(s.name());\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559920,
        "id": "b8deb246-2dc8-415e-b6da-37bd21ae4446",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559920,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can use enums in a "
            ],
            [
              "switch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can use enums in a "
          },
          {
            "Text": "switch",
            "AttrFlags": 2
          },
          {
            "Text": " statement:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559920,
        "id": "87df8e35-1a1a-4e53-81dc-4e0577e9fd4f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559920,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public static void enumSwitchExample(Season s) {\n    switch(s) {\n        case WINTER:\n            System.out.println(\"It's pretty cold\");\n            break;\n        case SPRING:\n            System.out.println(\"It's warming up\");\n            break;\n        case SUMMER:\n            System.out.println(\"It's pretty hot\");\n            break;\n        case FALL:\n            System.out.println(\"It's cooling down\");\n            break;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public static void enumSwitchExample(Season s) {\n    switch(s) {\n        case WINTER:\n            System.out.println(\"It's pretty cold\");\n            break;\n        case SPRING:\n            System.out.println(\"It's warming up\");\n            break;\n        case SUMMER:\n            System.out.println(\"It's pretty hot\");\n            break;\n        case FALL:\n            System.out.println(\"It's cooling down\");\n            break;\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559920,
        "id": "cfc45b5e-f4ff-4a91-957f-52db6213b313",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559920,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can also compare enum constants using "
            ],
            [
              "==",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can also compare enum constants using "
          },
          {
            "Text": "==",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559920,
        "id": "20a5d915-8dd9-4cf2-ad68-bc12f68d5ddb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559920,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Season.FALL == Season.WINTER    // false\nSeason.SPRING == Season.SPRING  // true"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Season.FALL == Season.WINTER    // false\nSeason.SPRING == Season.SPRING  // true",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559920,
        "id": "01d20a89-569b-40fd-bcb9-9cc4003b94e9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559920,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559920,
        "id": "7c64752e-486b-4f0d-84b7-8aa3ee0db70f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559920,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another way to compare enum constants is by using "
            ],
            [
              "equals()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as below, which is considered bad practice as you can easily fall into pitfalls as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another way to compare enum constants is by using "
          },
          {
            "Text": "equals()",
            "AttrFlags": 2
          },
          {
            "Text": " as below, which is considered bad practice as you can easily fall into pitfalls as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559920,
        "id": "d5476817-d315-4f15-886b-d2fdafde121e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559920,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Season.FALL.equals(Season.FALL); // true\nSeason.FALL.equals(Season.WINTER); // false\nSeason.FALL.equals(\"FALL\"); // false and no compiler error"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Season.FALL.equals(Season.FALL); // true\nSeason.FALL.equals(Season.WINTER); // false\nSeason.FALL.equals(\"FALL\"); // false and no compiler error",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559921,
        "id": "fb47a48f-40cc-428b-9ac6-ac0522af9485",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559921,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Furthermore, although the set of instances in the "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " cannot be changed at run-time, the instances themselves are not inherently immutable because like any other class, an "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can contain mutable fields as is demonstrated below."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Furthermore, although the set of instances in the "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " cannot be changed at run-time, the instances themselves are not inherently immutable because like any other class, an "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " can contain mutable fields as is demonstrated below."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559921,
        "id": "b2ad5280-4f2c-4bd4-8b33-6eb983627a75",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559921,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public enum MutableExample {\n    A,\n    B;\n\n    private int count = 0;\n\n    public void increment() {\n        count++;\n    }\n\n    public void print() {\n        System.out.println(\"The count of \" + name() + \" is \" + count);\n    }\n}\n\n// Usage:\nMutableExample.A.print();       // Outputs 0\nMutableExample.A.increment();\nMutableExample.A.print();       // Outputs 1 -- we've changed a field   \nMutableExample.B.print();       // Outputs 0 -- another instance remains unchanged"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public enum MutableExample {\n    A,\n    B;\n\n    private int count = 0;\n\n    public void increment() {\n        count++;\n    }\n\n    public void print() {\n        System.out.println(\"The count of \" + name() + \" is \" + count);\n    }\n}\n\n// Usage:\nMutableExample.A.print();       // Outputs 0\nMutableExample.A.increment();\nMutableExample.A.print();       // Outputs 1 -- we've changed a field   \nMutableExample.B.print();       // Outputs 0 -- another instance remains unchanged",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559921,
        "id": "c8b95989-a446-485e-85ad-3cb60cd00153",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559921,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, a good practice is to make "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instances immutable, i.e. when they either don’t have any additional fields or all such fields are marked as "
            ],
            [
              "final",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and are immutable themselves. This will ensure that for a lifetime of the application an "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " won’t leak any memory and that it is safe to use its instances across all threads."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, a good practice is to make "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " instances immutable, i.e. when they either don’t have any additional fields or all such fields are marked as "
          },
          {
            "Text": "final",
            "AttrFlags": 2
          },
          {
            "Text": " and are immutable themselves. This will ensure that for a lifetime of the application an "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " won’t leak any memory and that it is safe to use its instances across all threads."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559921,
        "id": "db3b210c-5c51-4732-8496-8b2f7d2ec0ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559921,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559921,
        "id": "b6282255-6959-4bd2-87f4-83354c780047",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559921,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Enums implicitly implement "
            ],
            [
              "Serializable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Comparable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " because the "
            ],
            [
              "Enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class does:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Enums implicitly implement "
          },
          {
            "Text": "Serializable",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Comparable",
            "AttrFlags": 2
          },
          {
            "Text": " because the "
          },
          {
            "Text": "Enum",
            "AttrFlags": 2
          },
          {
            "Text": " class does:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460559921,
        "id": "d3fe8bfa-745e-446a-b89b-50f359a50be1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460559921,
        "parent_id": "fcc9ee0a-ba91-42fd-854b-1cd3443c9a97",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public abstract class Enum\u003cE extends Enum\u003cE\u003e\u003e\nextends Object\nimplements Comparable\u003cE\u003e, Serializable"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public abstract class Enum\u003cE extends Enum\u003cE\u003e\u003e\nextends Object\nimplements Comparable\u003cE\u003e, Serializable",
        "code_language": "Plain Text"
      }
    ],
    "title": "010 Declaring and using a basic enum"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}