{
  "ID": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
  "Root": {
    "alive": true,
    "content": [
      "44bd7b78-3bad-49c8-a044-7fb659c58bbf",
      "5545da0e-4256-4476-8f0b-5986d1c90f4f",
      "b94ee760-c459-4814-abcf-f163c9e0691a",
      "3963e47e-842f-4e7d-8d37-52d7df1f65c0",
      "faffffc7-fc59-477f-a7d2-f38ed807a96f",
      "940738ca-474e-4ac2-af8e-a5d8782d9f09",
      "e5ee7d1a-4cb5-4c16-8677-ee70ad580218",
      "58a24d76-f9e1-4959-9fe9-d5ed8c52c291",
      "19d1ad7a-7952-4c70-b74c-ed87b26f27b8",
      "4fb4329c-fac2-47fc-ae6d-e689a161afe3",
      "828e0d1f-ed68-4670-a1b6-97c1c1c09371",
      "8b3381b7-bad1-41e2-9a11-9dfa723eb272",
      "fe63fb5f-ba8e-4475-a36e-0f23fc3112d0",
      "54a1679d-56c6-4cd4-88f8-8f52d9110a66",
      "c53c22b9-e480-4011-81b5-e5b77828596d",
      "78fde5ea-2edb-421d-a735-7a0e7927b6b6",
      "fae8cbcf-c3fa-4ab6-93b4-4d250b6ca794",
      "bd57d28b-a316-41f2-a253-5e07485bc353"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460117282,
    "id": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460117282,
    "parent_id": "39a676e8-4916-4942-a1ec-5020702b7db9",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "090 Throwing an exception"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460117278,
        "id": "44bd7b78-3bad-49c8-a044-7fb659c58bbf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460117278,
        "parent_id": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following example shows the basics of throwing an exception:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following example shows the basics of throwing an exception:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460117279,
        "id": "5545da0e-4256-4476-8f0b-5986d1c90f4f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460117279,
        "parent_id": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public void checkNumber(int number) throws IllegalArgumentException {\n    if (number \u003c 0) {\n        throw new IllegalArgumentException(\"Number must be positive: \" + number);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public void checkNumber(int number) throws IllegalArgumentException {\n    if (number \u003c 0) {\n        throw new IllegalArgumentException(\"Number must be positive: \" + number);\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460117279,
        "id": "b94ee760-c459-4814-abcf-f163c9e0691a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460117279,
        "parent_id": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The exception is thrown on the 3rd line. This statement can be broken down into two parts:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The exception is thrown on the 3rd line. This statement can be broken down into two parts:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460117279,
        "id": "3963e47e-842f-4e7d-8d37-52d7df1f65c0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460117279,
        "parent_id": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "new IllegalArgumentException(...)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is creating an instance of the "
            ],
            [
              "IllegalArgumentException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class, with a message that describes the error that exception is reporting."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "new IllegalArgumentException(...)",
            "AttrFlags": 2
          },
          {
            "Text": " is creating an instance of the "
          },
          {
            "Text": "IllegalArgumentException",
            "AttrFlags": 2
          },
          {
            "Text": " class, with a message that describes the error that exception is reporting."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460117280,
        "id": "faffffc7-fc59-477f-a7d2-f38ed807a96f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460117280,
        "parent_id": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "throw ...",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is then throwing the exception object."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "throw ...",
            "AttrFlags": 2
          },
          {
            "Text": " is then throwing the exception object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460117280,
        "id": "940738ca-474e-4ac2-af8e-a5d8782d9f09",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460117280,
        "parent_id": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When the exception is thrown, it causes the enclosing statements to "
            ],
            [
              "terminate abnormally",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " until the exception is "
            ],
            [
              "handled",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". This is described in other examples."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When the exception is thrown, it causes the enclosing statements to "
          },
          {
            "Text": "terminate abnormally",
            "AttrFlags": 4
          },
          {
            "Text": " until the exception is "
          },
          {
            "Text": "handled",
            "AttrFlags": 4
          },
          {
            "Text": ". This is described in other examples."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460117280,
        "id": "e5ee7d1a-4cb5-4c16-8677-ee70ad580218",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460117280,
        "parent_id": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is good practice to both create and throw the exception object in a single statement, as shown above. It is also good practice to include a meaningful error message in the exception to help the programmer to understand the cause of the problem. However, this is not necessarily the message that you should be showing to the end user. (For a start, Java has no direct support for internationalizing exception messages.)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is good practice to both create and throw the exception object in a single statement, as shown above. It is also good practice to include a meaningful error message in the exception to help the programmer to understand the cause of the problem. However, this is not necessarily the message that you should be showing to the end user. (For a start, Java has no direct support for internationalizing exception messages.)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460117280,
        "id": "58a24d76-f9e1-4959-9fe9-d5ed8c52c291",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460117280,
        "parent_id": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are a couple more points to be made:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are a couple more points to be made:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460117280,
        "id": "19d1ad7a-7952-4c70-b74c-ed87b26f27b8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460117280,
        "parent_id": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We have declared the "
            ],
            [
              "checkNumber",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as "
            ],
            [
              "throws IllegalArgumentException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This was not strictly necessary, since "
            ],
            [
              "IllegalArgumentException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a checked exception; see http://stackoverflow.com/documentation/java/89/exceptions/3058/types-of-exceptions-unchecked-and-checked-exceptions#t=201610240630113832437. However, it is good practice to do this, and also to include the exceptions thrown a method’s javadoc comments."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "We have declared the "
          },
          {
            "Text": "checkNumber",
            "AttrFlags": 2
          },
          {
            "Text": " as "
          },
          {
            "Text": "throws IllegalArgumentException",
            "AttrFlags": 2
          },
          {
            "Text": ". This was not strictly necessary, since "
          },
          {
            "Text": "IllegalArgumentException",
            "AttrFlags": 2
          },
          {
            "Text": " is a checked exception; see http://stackoverflow.com/documentation/java/89/exceptions/3058/types-of-exceptions-unchecked-and-checked-exceptions#t=201610240630113832437. However, it is good practice to do this, and also to include the exceptions thrown a method’s javadoc comments."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460117281,
        "id": "4fb4329c-fac2-47fc-ae6d-e689a161afe3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460117281,
        "parent_id": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Code immediately after a "
            ],
            [
              "throw",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement is "
            ],
            [
              "unreachable",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". Hence if we wrote this:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Code immediately after a "
          },
          {
            "Text": "throw",
            "AttrFlags": 2
          },
          {
            "Text": " statement is "
          },
          {
            "Text": "unreachable",
            "AttrFlags": 4
          },
          {
            "Text": ". Hence if we wrote this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460117281,
        "id": "828e0d1f-ed68-4670-a1b6-97c1c1c09371",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460117281,
        "parent_id": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "throw new IllegalArgumentException(\"it is bad\");\nreturn;\n\nthe compiler would report a compilation error for the `return` statement."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "throw new IllegalArgumentException(\"it is bad\");\nreturn;\n\nthe compiler would report a compilation error for the `return` statement.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460117281,
        "id": "8b3381b7-bad1-41e2-9a11-9dfa723eb272",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460117281,
        "parent_id": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Exception chaining"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Exception chaining"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460117281,
        "id": "fe63fb5f-ba8e-4475-a36e-0f23fc3112d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460117281,
        "parent_id": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Many standard exceptions have a constructor with a second "
            ],
            [
              "cause",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " argument in addition to the conventional "
            ],
            [
              "message",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " argument. The "
            ],
            [
              "cause",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " allows you to chain exceptions. Here is an example."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Many standard exceptions have a constructor with a second "
          },
          {
            "Text": "cause",
            "AttrFlags": 2
          },
          {
            "Text": " argument in addition to the conventional "
          },
          {
            "Text": "message",
            "AttrFlags": 2
          },
          {
            "Text": " argument. The "
          },
          {
            "Text": "cause",
            "AttrFlags": 2
          },
          {
            "Text": " allows you to chain exceptions. Here is an example."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460117281,
        "id": "54a1679d-56c6-4cd4-88f8-8f52d9110a66",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460117281,
        "parent_id": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "First we define an unchecked exception that our application is going throw when it encounters a non-recoverable error. Note that we have included a constructor that accepts a "
            ],
            [
              "cause",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " argument."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "First we define an unchecked exception that our application is going throw when it encounters a non-recoverable error. Note that we have included a constructor that accepts a "
          },
          {
            "Text": "cause",
            "AttrFlags": 2
          },
          {
            "Text": " argument."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460117281,
        "id": "c53c22b9-e480-4011-81b5-e5b77828596d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460117281,
        "parent_id": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class AppErrorException extends RuntimeException {\n    public AppErrorException() {\n        super();\n    }\n\n    public AppErrorException(String message) {\n        super(message);\n    }\n\n    public AppErrorException(String message, Throwable cause) {\n        super(message, cause);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class AppErrorException extends RuntimeException {\n    public AppErrorException() {\n        super();\n    }\n\n    public AppErrorException(String message) {\n        super(message);\n    }\n\n    public AppErrorException(String message, Throwable cause) {\n        super(message, cause);\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460117281,
        "id": "78fde5ea-2edb-421d-a735-7a0e7927b6b6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460117281,
        "parent_id": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Next, here is some code that illustrates exception chaining."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Next, here is some code that illustrates exception chaining."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460117282,
        "id": "fae8cbcf-c3fa-4ab6-93b4-4d250b6ca794",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460117282,
        "parent_id": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public String readFirstLine(String file) throws AppErrorException {\n    try (Reader r = new BufferedReader(new FileReader(file))) {\n        String line = r.readLine();\n        if (line != null) {\n            return line;\n        } else {\n            throw new AppErrorException(\"File is empty: \" + file);\n        }\n    } catch (IOException ex) {\n        throw new AppErrorException(\"Cannot read file: \" + file, ex);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public String readFirstLine(String file) throws AppErrorException {\n    try (Reader r = new BufferedReader(new FileReader(file))) {\n        String line = r.readLine();\n        if (line != null) {\n            return line;\n        } else {\n            throw new AppErrorException(\"File is empty: \" + file);\n        }\n    } catch (IOException ex) {\n        throw new AppErrorException(\"Cannot read file: \" + file, ex);\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460117282,
        "id": "bd57d28b-a316-41f2-a253-5e07485bc353",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460117282,
        "parent_id": "ff5f1237-6dab-4168-b640-48336e5ea8f8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "throw",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " within the "
            ],
            [
              "try",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block detects a problem and reports it via an exception with a simple message. By contrast, the "
            ],
            [
              "throw",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " within the "
            ],
            [
              "catch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block is handling the "
            ],
            [
              "IOException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " by wrapping it in a new (checked) exception. However, it is not throwing away the original exception. By passing the "
            ],
            [
              "IOException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as the "
            ],
            [
              "cause",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", we record it so that it can be printed in the stacktrace, as explained in http://stackoverflow.com/documentation/java/89/exceptions-and-exception-handling/1815/creating-and-reading-stacktraces#t=20161028160848944857."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "throw",
            "AttrFlags": 2
          },
          {
            "Text": " within the "
          },
          {
            "Text": "try",
            "AttrFlags": 2
          },
          {
            "Text": " block detects a problem and reports it via an exception with a simple message. By contrast, the "
          },
          {
            "Text": "throw",
            "AttrFlags": 2
          },
          {
            "Text": " within the "
          },
          {
            "Text": "catch",
            "AttrFlags": 2
          },
          {
            "Text": " block is handling the "
          },
          {
            "Text": "IOException",
            "AttrFlags": 2
          },
          {
            "Text": " by wrapping it in a new (checked) exception. However, it is not throwing away the original exception. By passing the "
          },
          {
            "Text": "IOException",
            "AttrFlags": 2
          },
          {
            "Text": " as the "
          },
          {
            "Text": "cause",
            "AttrFlags": 2
          },
          {
            "Text": ", we record it so that it can be printed in the stacktrace, as explained in http://stackoverflow.com/documentation/java/89/exceptions-and-exception-handling/1815/creating-and-reading-stacktraces#t=20161028160848944857."
          }
        ]
      }
    ],
    "title": "090 Throwing an exception"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}