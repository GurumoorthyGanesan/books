{
  "ID": "27491cd3-6313-4c8a-96ab-0e8c389511ab",
  "Root": {
    "alive": true,
    "content": [
      "0bfe981f-a988-4fd2-8c80-76a5db2c877e",
      "230f2628-66ca-4e86-b9d3-b120b530f144",
      "16ddea1f-928d-4914-b8c5-4de0b05e76e9",
      "e64a00ea-2db4-4efb-8ab1-72f971ec0501",
      "fadd43e2-ce6d-4d77-81c2-ae9d97005615",
      "26c627f5-b5c9-42d9-9aec-e09d9dc84873"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460511085,
    "id": "27491cd3-6313-4c8a-96ab-0e8c389511ab",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460511085,
    "parent_id": "452a4215-c66d-493c-80d3-4980568bf1fa",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "060 clone method"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460511081,
        "id": "0bfe981f-a988-4fd2-8c80-76a5db2c877e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460511081,
        "parent_id": "27491cd3-6313-4c8a-96ab-0e8c389511ab",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "clone()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method is used to create and return a copy of an object. This method arguable should be avoided as it is problematic and a copy constructor or some other approach for copying should be used in favour of "
            ],
            [
              "clone()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "clone()",
            "AttrFlags": 2
          },
          {
            "Text": " method is used to create and return a copy of an object. This method arguable should be avoided as it is problematic and a copy constructor or some other approach for copying should be used in favour of "
          },
          {
            "Text": "clone()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460511084,
        "id": "230f2628-66ca-4e86-b9d3-b120b530f144",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460511084,
        "parent_id": "27491cd3-6313-4c8a-96ab-0e8c389511ab",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For the method to be used all classes calling the method must implement the "
            ],
            [
              "Cloneable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For the method to be used all classes calling the method must implement the "
          },
          {
            "Text": "Cloneable",
            "AttrFlags": 2
          },
          {
            "Text": " interface."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460511084,
        "id": "16ddea1f-928d-4914-b8c5-4de0b05e76e9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460511084,
        "parent_id": "27491cd3-6313-4c8a-96ab-0e8c389511ab",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "Cloneable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface itself is just a tag interface used to change the behaviour of the "
            ],
            [
              "native",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "clone()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method which checks if the calling objects class implements "
            ],
            [
              "Cloneable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". If the caller does not implement this interface a "
            ],
            [
              "CloneNotSupportedException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be thrown."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "Cloneable",
            "AttrFlags": 2
          },
          {
            "Text": " interface itself is just a tag interface used to change the behaviour of the "
          },
          {
            "Text": "native",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "clone()",
            "AttrFlags": 2
          },
          {
            "Text": " method which checks if the calling objects class implements "
          },
          {
            "Text": "Cloneable",
            "AttrFlags": 2
          },
          {
            "Text": ". If the caller does not implement this interface a "
          },
          {
            "Text": "CloneNotSupportedException",
            "AttrFlags": 2
          },
          {
            "Text": " will be thrown."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460511084,
        "id": "e64a00ea-2db4-4efb-8ab1-72f971ec0501",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460511084,
        "parent_id": "27491cd3-6313-4c8a-96ab-0e8c389511ab",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "Object",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class itself does not implement this interface so a "
            ],
            [
              "CloneNotSupportedException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be thrown if the calling object is of class "
            ],
            [
              "Object",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "Object",
            "AttrFlags": 2
          },
          {
            "Text": " class itself does not implement this interface so a "
          },
          {
            "Text": "CloneNotSupportedException",
            "AttrFlags": 2
          },
          {
            "Text": " will be thrown if the calling object is of class "
          },
          {
            "Text": "Object",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460511084,
        "id": "fadd43e2-ce6d-4d77-81c2-ae9d97005615",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460511084,
        "parent_id": "27491cd3-6313-4c8a-96ab-0e8c389511ab",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For a clone to be correct it should be independent of the object it is being cloned from, therefore it may be necessary to modify the object before it gets returned. This means to essentially create a “deep copy” by also copying any of the "
            ],
            [
              "mutable",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " objects that make up the internal structure of the object being cloned. If this is not implemented correctly the cloned object will not be independent and have the same references to the mutable objects as the object that it was cloned from. This would result in inconsistent behaviour as any changes to those in one would affect the other."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For a clone to be correct it should be independent of the object it is being cloned from, therefore it may be necessary to modify the object before it gets returned. This means to essentially create a “deep copy” by also copying any of the "
          },
          {
            "Text": "mutable",
            "AttrFlags": 4
          },
          {
            "Text": " objects that make up the internal structure of the object being cloned. If this is not implemented correctly the cloned object will not be independent and have the same references to the mutable objects as the object that it was cloned from. This would result in inconsistent behaviour as any changes to those in one would affect the other."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460511085,
        "id": "26c627f5-b5c9-42d9-9aec-e09d9dc84873",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460511085,
        "parent_id": "27491cd3-6313-4c8a-96ab-0e8c389511ab",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Foo implements Cloneable {\n    int w;\n    String x;\n    float[] y;\n    Date z;\n    \n    public Foo clone() {\n        try {\n            Foo result = new Foo();\n            // copy primitives by value\n            result.w = this.w;\n            // immutable objects like String can be copied by reference\n            result.x = this.x;\n            \n            // The fields y and z refer to a mutable objects; clone them recursively.\n            if (this.y != null) {\n              result.y = this.y.clone();\n            }\n            if (this.z != null) {\n              result.z = this.z.clone();\n            }\n            \n            // Done, return the new object\n            return result;\n            \n        } catch (CloneNotSupportedException e) {\n            // in case any of the cloned mutable fields do not implement Cloneable\n            throw new AssertionError(e);\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Foo implements Cloneable {\n    int w;\n    String x;\n    float[] y;\n    Date z;\n    \n    public Foo clone() {\n        try {\n            Foo result = new Foo();\n            // copy primitives by value\n            result.w = this.w;\n            // immutable objects like String can be copied by reference\n            result.x = this.x;\n            \n            // The fields y and z refer to a mutable objects; clone them recursively.\n            if (this.y != null) {\n              result.y = this.y.clone();\n            }\n            if (this.z != null) {\n              result.z = this.z.clone();\n            }\n            \n            // Done, return the new object\n            return result;\n            \n        } catch (CloneNotSupportedException e) {\n            // in case any of the cloned mutable fields do not implement Cloneable\n            throw new AssertionError(e);\n        }\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "060 clone method"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}