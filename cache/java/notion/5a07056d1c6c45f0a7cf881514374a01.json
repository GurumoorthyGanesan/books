{
  "ID": "5a07056d-1c6c-45f0-a7cf-881514374a01",
  "Root": {
    "alive": true,
    "content": [
      "1ee27208-1e60-48fe-84ef-e345ddd85985",
      "76945352-26f3-4a01-8f78-b63a8f3cddbf",
      "9f4c1cba-653c-4348-9827-88b065fde50d",
      "811aeaf9-8073-464c-b66e-7b64006aaace",
      "d8c4288d-c9b2-4f57-8268-1def35756d58",
      "d9ebe2b2-cad3-43fa-aecd-2a0c5ff1b4b4",
      "7d4f5893-195f-46f4-ad3f-d7d9d4bd37c6",
      "92256278-e323-4cc5-a477-86f75e376bbc",
      "93690edb-98ab-4b04-83ab-af145bd4bd6c",
      "ac016f75-4216-4e2c-97f7-6b7bc75766e9",
      "8d604170-228b-4ca7-957a-68de2d90a2a5",
      "2e8e1bb0-deaf-4662-a30a-215e8a254645"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550461154137,
    "id": "5a07056d-1c6c-45f0-a7cf-881514374a01",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550461154137,
    "parent_id": "c1a139ac-088d-487a-93c4-a161e63d7a0f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 Method Overriding"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461154133,
        "id": "1ee27208-1e60-48fe-84ef-e345ddd85985",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461154133,
        "parent_id": "5a07056d-1c6c-45f0-a7cf-881514374a01",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Method overriding is the ability of subtypes to redefine (override) the behavior of their supertypes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Method overriding is the ability of subtypes to redefine (override) the behavior of their supertypes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461154135,
        "id": "76945352-26f3-4a01-8f78-b63a8f3cddbf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461154135,
        "parent_id": "5a07056d-1c6c-45f0-a7cf-881514374a01",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Java, this translates to subclasses overriding the methods defined in the super class. In Java, all non-primitive variables are actually "
            ],
            [
              "references",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which are akin to pointers to the location of the actual object in memory. The "
            ],
            [
              "references",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " only have one type, which is the type they were declared with. However, they can point to an object of either their declared type or any of its subtypes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Java, this translates to subclasses overriding the methods defined in the super class. In Java, all non-primitive variables are actually "
          },
          {
            "Text": "references",
            "AttrFlags": 2
          },
          {
            "Text": ", which are akin to pointers to the location of the actual object in memory. The "
          },
          {
            "Text": "references",
            "AttrFlags": 2
          },
          {
            "Text": " only have one type, which is the type they were declared with. However, they can point to an object of either their declared type or any of its subtypes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461154135,
        "id": "9f4c1cba-653c-4348-9827-88b065fde50d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461154135,
        "parent_id": "5a07056d-1c6c-45f0-a7cf-881514374a01",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When a method is called on a "
            ],
            [
              "reference",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the corresponding "
            ],
            [
              "method of the actual object being pointed to is invoked",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When a method is called on a "
          },
          {
            "Text": "reference",
            "AttrFlags": 2
          },
          {
            "Text": ", the corresponding "
          },
          {
            "Text": "method of the actual object being pointed to is invoked",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461154136,
        "id": "811aeaf9-8073-464c-b66e-7b64006aaace",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461154136,
        "parent_id": "5a07056d-1c6c-45f0-a7cf-881514374a01",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class SuperType {\n    public void sayHello(){\n        System.out.println(\"Hello from SuperType\");\n    }\n\n    public void sayBye(){\n        System.out.println(\"Bye from SuperType\");\n    }\n}\n\nclass SubType extends SuperType {\n    // override the superclass method\n    public void sayHello(){\n        System.out.println(\"Hello from SubType\");\n    }\n}\n\nclass Test {\n    public static void main(String... args){\n        SuperType superType = new SuperType();\n        superType.sayHello(); // -\u003e Hello from SuperType\n\n        // make the reference point to an object of the subclass\n        superType = new SubType();\n        // behaviour is governed by the object, not by the reference\n        superType.sayHello(); // -\u003e Hello from SubType\n\n        // non-overridden method is simply inherited\n        superType.sayBye(); // -\u003e Bye from SuperType\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class SuperType {\n    public void sayHello(){\n        System.out.println(\"Hello from SuperType\");\n    }\n\n    public void sayBye(){\n        System.out.println(\"Bye from SuperType\");\n    }\n}\n\nclass SubType extends SuperType {\n    // override the superclass method\n    public void sayHello(){\n        System.out.println(\"Hello from SubType\");\n    }\n}\n\nclass Test {\n    public static void main(String... args){\n        SuperType superType = new SuperType();\n        superType.sayHello(); // -\u003e Hello from SuperType\n\n        // make the reference point to an object of the subclass\n        superType = new SubType();\n        // behaviour is governed by the object, not by the reference\n        superType.sayHello(); // -\u003e Hello from SubType\n\n        // non-overridden method is simply inherited\n        superType.sayBye(); // -\u003e Bye from SuperType\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461154136,
        "id": "d8c4288d-c9b2-4f57-8268-1def35756d58",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461154136,
        "parent_id": "5a07056d-1c6c-45f0-a7cf-881514374a01",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Rules to keep in mind",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Rules to keep in mind",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461154136,
        "id": "d9ebe2b2-cad3-43fa-aecd-2a0c5ff1b4b4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461154136,
        "parent_id": "5a07056d-1c6c-45f0-a7cf-881514374a01",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To override a method in the subclass, the overriding method (i.e.Â the one in the subclass) "
            ],
            [
              "MUST HAVE",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To override a method in the subclass, the overriding method (i.e.Â the one in the subclass) "
          },
          {
            "Text": "MUST HAVE",
            "AttrFlags": 1
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461154136,
        "id": "7d4f5893-195f-46f4-ad3f-d7d9d4bd37c6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461154136,
        "parent_id": "5a07056d-1c6c-45f0-a7cf-881514374a01",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "same name"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "same name"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461154137,
        "id": "92256278-e323-4cc5-a477-86f75e376bbc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461154137,
        "parent_id": "5a07056d-1c6c-45f0-a7cf-881514374a01",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "same return type in case of primitives (a subclass is allowed for classes, this is also known as covariant return types)."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "same return type in case of primitives (a subclass is allowed for classes, this is also known as covariant return types)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461154137,
        "id": "93690edb-98ab-4b04-83ab-af145bd4bd6c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461154137,
        "parent_id": "5a07056d-1c6c-45f0-a7cf-881514374a01",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "same type and order of parameters"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "same type and order of parameters"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461154137,
        "id": "ac016f75-4216-4e2c-97f7-6b7bc75766e9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461154137,
        "parent_id": "5a07056d-1c6c-45f0-a7cf-881514374a01",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "it may throw only those exceptions that are declared in the throws clause of the superclassâs method or exceptions that are subclasses of the declared exceptions. It may also choose NOT to throw any exception. The names of the parameter types do not matter. For example, void methodX(int i) is same as void methodX(int k)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "it may throw only those exceptions that are declared in the throws clause of the superclassâs method or exceptions that are subclasses of the declared exceptions. It may also choose NOT to throw any exception. The names of the parameter types do not matter. For example, void methodX(int i) is same as void methodX(int k)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461154137,
        "id": "8d604170-228b-4ca7-957a-68de2d90a2a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461154137,
        "parent_id": "5a07056d-1c6c-45f0-a7cf-881514374a01",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We are unable to Override final or Static methods. Only thing that we can do change only method body."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "We are unable to Override final or Static methods. Only thing that we can do change only method body."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461154137,
        "id": "2e8e1bb0-deaf-4662-a30a-215e8a254645",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461154137,
        "parent_id": "5a07056d-1c6c-45f0-a7cf-881514374a01",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code_language": "Plain Text"
      }
    ],
    "title": "010 Method Overriding"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}