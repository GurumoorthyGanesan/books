{
  "ID": "3aa0ca04-23f6-43ee-81a1-07741677477a",
  "Root": {
    "alive": true,
    "content": [
      "51ad70f4-dcdf-490a-acb4-6268196f8c63",
      "19276d70-b8c1-4d14-b675-917b70c13779",
      "8f2abffe-bc90-4f75-9a3c-426092134a78",
      "87280aaf-ee4c-4fab-af59-0e9ad38ee5ba",
      "11766775-a844-4ba1-8632-da417e7afe40",
      "550c05ce-3e3b-49b5-bd02-59c4a998f3e7",
      "c78d7645-1c48-4484-b68d-917af67101c7",
      "7f6c5c64-4e28-4d99-bb1e-606719a2e4ff",
      "ca0eba44-2e28-483b-9d99-f2453a6e474b",
      "5c8163d0-5bc5-4f7f-9a96-9fd7cb18aba9",
      "00313035-9ee7-451c-ba2b-abbed8fd048f",
      "332a4297-cfa5-4e69-b334-976be1e7c43d",
      "e731d20f-8da8-4a69-80e5-d172cec0311d",
      "c8e13256-61e7-4f73-8a96-7b33e09a07c8",
      "1e2c522b-69b8-4fda-b226-f9f73477f95d",
      "1d7e5bc3-1898-4547-ba59-23fb7cd27784",
      "abeb3a09-df06-4d4d-8794-2eed93f9f926",
      "2857a3ab-2a3b-499c-b9fe-9533e5e18e74",
      "d59b89dd-e989-49ab-b927-d391f2aeb8f6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460193094,
    "id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460193094,
    "parent_id": "bcd7d24d-a9b8-40ba-ac61-89bb802d73b5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "110 How do you change the size of an array"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193090,
        "id": "51ad70f4-dcdf-490a-acb4-6268196f8c63",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193090,
        "parent_id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The simple answer is that you cannot do this. Once an array has been created, its size cannot be changed. Instead, an array can only be “resized” by creating a new array with the appropriate size and copying the elements from the existing array to the new one."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The simple answer is that you cannot do this. Once an array has been created, its size cannot be changed. Instead, an array can only be “resized” by creating a new array with the appropriate size and copying the elements from the existing array to the new one."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193091,
        "id": "19276d70-b8c1-4d14-b675-917b70c13779",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193091,
        "parent_id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "String[] listOfCities = new String[3];   // array created with size 3.\nlistOfCities[0] = \"New York\";\nlistOfCities[1] = \"London\";\nlistOfCities[2] = \"Berlin\";"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "String[] listOfCities = new String[3];   // array created with size 3.\nlistOfCities[0] = \"New York\";\nlistOfCities[1] = \"London\";\nlistOfCities[2] = \"Berlin\";",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193091,
        "id": "8f2abffe-bc90-4f75-9a3c-426092134a78",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193091,
        "parent_id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Suppose (for example) that a new element needs to be added to the "
            ],
            [
              "listOfCities",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " array defined as above. To do this, you will need to:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Suppose (for example) that a new element needs to be added to the "
          },
          {
            "Text": "listOfCities",
            "AttrFlags": 2
          },
          {
            "Text": " array defined as above. To do this, you will need to:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193091,
        "id": "87280aaf-ee4c-4fab-af59-0e9ad38ee5ba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193091,
        "parent_id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "create a new array with size 4,"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "create a new array with size 4,"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193092,
        "id": "11766775-a844-4ba1-8632-da417e7afe40",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193092,
        "parent_id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "copy the existing 3 elements of the old array to the new array at offsets 0, 1 and 2, and"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "copy the existing 3 elements of the old array to the new array at offsets 0, 1 and 2, and"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193092,
        "id": "550c05ce-3e3b-49b5-bd02-59c4a998f3e7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193092,
        "parent_id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "add the new element to the new array at offset 3."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "add the new element to the new array at offset 3."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193092,
        "id": "c78d7645-1c48-4484-b68d-917af67101c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193092,
        "parent_id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are various ways to do the above. Prior to Java 6, the most concise way was:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are various ways to do the above. Prior to Java 6, the most concise way was:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193092,
        "id": "7f6c5c64-4e28-4d99-bb1e-606719a2e4ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193092,
        "parent_id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "String[] newArray = new String[listOfCities.length + 1];\nSystem.arraycopy(listOfCities, 0, newArray, 0, listOfCities.length);\nnewArray[listOfCities.length] = \"Sydney\";"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "String[] newArray = new String[listOfCities.length + 1];\nSystem.arraycopy(listOfCities, 0, newArray, 0, listOfCities.length);\nnewArray[listOfCities.length] = \"Sydney\";",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193092,
        "id": "ca0eba44-2e28-483b-9d99-f2453a6e474b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193092,
        "parent_id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "From Java 6 onwards, the "
            ],
            [
              "Arrays.copyOf",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Arrays.copyOfRange",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " methods can do this more simply:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "From Java 6 onwards, the "
          },
          {
            "Text": "Arrays.copyOf",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Arrays.copyOfRange",
            "AttrFlags": 2
          },
          {
            "Text": " methods can do this more simply:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193092,
        "id": "5c8163d0-5bc5-4f7f-9a96-9fd7cb18aba9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193092,
        "parent_id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "String[] newArray = Arrays.copyOf(listOfCities, listOfCities.length + 1);\nnewArray[listOfCities.length] = \"Sydney\";"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "String[] newArray = Arrays.copyOf(listOfCities, listOfCities.length + 1);\nnewArray[listOfCities.length] = \"Sydney\";",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193093,
        "id": "00313035-9ee7-451c-ba2b-abbed8fd048f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193093,
        "parent_id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For other ways to copy an array, refer to the following example. Bear in mind that you need an array copy with a different length to the original when resizing."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For other ways to copy an array, refer to the following example. Bear in mind that you need an array copy with a different length to the original when resizing."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193093,
        "id": "332a4297-cfa5-4e69-b334-976be1e7c43d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193093,
        "parent_id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://stackoverflow.com/documentation/java/99/arrays/3435/copying-arrays#t=201610061130055885276"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "http://stackoverflow.com/documentation/java/99/arrays/3435/copying-arrays#t=201610061130055885276"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193093,
        "id": "e731d20f-8da8-4a69-80e5-d172cec0311d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193093,
        "parent_id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A better alternatives to array resizing"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "A better alternatives to array resizing"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193093,
        "id": "c8e13256-61e7-4f73-8a96-7b33e09a07c8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193093,
        "parent_id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There two major drawbacks with resizing an array as described above:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There two major drawbacks with resizing an array as described above:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193093,
        "id": "1e2c522b-69b8-4fda-b226-f9f73477f95d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193093,
        "parent_id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is inefficient. Making an array bigger (or smaller) involves copying many or all of the existing array elements, and allocating a new array object. The larger the array, the more expensive it gets."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is inefficient. Making an array bigger (or smaller) involves copying many or all of the existing array elements, and allocating a new array object. The larger the array, the more expensive it gets."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193093,
        "id": "1d7e5bc3-1898-4547-ba59-23fb7cd27784",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193093,
        "parent_id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You need to be able to update any “live” variables that contain references to the old array."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "You need to be able to update any “live” variables that contain references to the old array."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193093,
        "id": "abeb3a09-df06-4d4d-8794-2eed93f9f926",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193093,
        "parent_id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One alternative is to create the array with a large enough size to start with. This is only viable if you can determine that size accurately "
            ],
            [
              "before allocating the array",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". If you cannot do that, then the problem of resizing the array arises again."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One alternative is to create the array with a large enough size to start with. This is only viable if you can determine that size accurately "
          },
          {
            "Text": "before allocating the array",
            "AttrFlags": 4
          },
          {
            "Text": ". If you cannot do that, then the problem of resizing the array arises again."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193094,
        "id": "2857a3ab-2a3b-499c-b9fe-9533e5e18e74",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193094,
        "parent_id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The other alternative is to use a data structure class provided by the Java SE class library or a third-party library. For example, the Java SE “collections” framework provides a number of implementations of the "
            ],
            [
              "List",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Set",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Map",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " APIs with different runtime properties. The "
            ],
            [
              "ArrayList",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class is closest to performance characteristics of a plain array (e.g. O(N) lookup, O(1) get and set, O(N) random insertion and deletion) while providing more efficient resizing without the reference update problem."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The other alternative is to use a data structure class provided by the Java SE class library or a third-party library. For example, the Java SE “collections” framework provides a number of implementations of the "
          },
          {
            "Text": "List",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Set",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Map",
            "AttrFlags": 2
          },
          {
            "Text": " APIs with different runtime properties. The "
          },
          {
            "Text": "ArrayList",
            "AttrFlags": 2
          },
          {
            "Text": " class is closest to performance characteristics of a plain array (e.g. O(N) lookup, O(1) get and set, O(N) random insertion and deletion) while providing more efficient resizing without the reference update problem."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460193094,
        "id": "d59b89dd-e989-49ab-b927-d391f2aeb8f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460193094,
        "parent_id": "3aa0ca04-23f6-43ee-81a1-07741677477a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "(The resize efficiency for "
            ],
            [
              "ArrayList",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " comes from its strategy of doubling the size of the backing array on each resize. For a typical use-case, this means that you only resize occasionally. When you amortize over the lifetime of the list, the resize cost per insert is "
            ],
            [
              "O(1)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". It may be possible to use the same strategy when resizing a plain array.)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "(The resize efficiency for "
          },
          {
            "Text": "ArrayList",
            "AttrFlags": 2
          },
          {
            "Text": " comes from its strategy of doubling the size of the backing array on each resize. For a typical use-case, this means that you only resize occasionally. When you amortize over the lifetime of the list, the resize cost per insert is "
          },
          {
            "Text": "O(1)",
            "AttrFlags": 2
          },
          {
            "Text": ". It may be possible to use the same strategy when resizing a plain array.)"
          }
        ]
      }
    ],
    "title": "110 How do you change the size of an array"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}