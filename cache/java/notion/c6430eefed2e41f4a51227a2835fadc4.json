{
  "ID": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
  "Root": {
    "alive": true,
    "content": [
      "16ee5b15-ad35-470d-87c8-a77193f2b788",
      "72f575c1-d3fa-4b60-96be-2714e6082ccb",
      "ca1d5c7e-f02b-4d9b-a478-942616ab953e",
      "7b18fa87-7a9b-408d-8e71-3da8b74f4031",
      "6d8e38f4-df82-4bbe-8160-e9304198363a",
      "e9ec8efb-e184-4433-977f-6e9c1250c83d",
      "b1e43f6b-645d-4a35-913c-19614156aa6a",
      "cfe00dab-986c-4ff0-a1ce-fbe53f53644a",
      "8d72aba4-641e-4dd9-9b8d-7cfdef8d84ac",
      "0971e2a2-8215-4a7a-821d-db031b1e3ece",
      "78bacbc4-25a4-4430-9e9d-cd2bf49c38b1",
      "9198d84e-f3c0-4200-b653-9572074977da",
      "f5eca250-15d1-43de-97da-cfce1af4e060",
      "0d87ab1c-d780-418b-b10f-d875f9d9b4a3",
      "6895ae71-a443-4f4c-9477-82f13b749f60",
      "d73c6a0e-ab95-40f7-9f3c-f37027d8f0c8",
      "b23946d9-544f-4a93-8b0f-8e6b82be084c",
      "660e901b-9be8-43f9-b445-929768d89b52"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460170198,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551754383147,
    "parent_id": "89249b2d-411e-48a0-929e-d4742921cff2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Migrating from java.io.File to Java 7 NIO java.nio.file.Path"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460170192,
        "id": "16ee5b15-ad35-470d-87c8-a77193f2b788",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460170192,
        "parent_id": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These examples assume that you already know what Java 7’s NIO is in general, and you are used to writing code using "
            ],
            [
              "java.io.File",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Use these examples as a means to quickly find more NIO-centric documentation for migrating."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These examples assume that you already know what Java 7’s NIO is in general, and you are used to writing code using "
          },
          {
            "Text": "java.io.File",
            "AttrFlags": 2
          },
          {
            "Text": ". Use these examples as a means to quickly find more NIO-centric documentation for migrating."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460170194,
        "id": "72f575c1-d3fa-4b60-96be-2714e6082ccb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460170194,
        "parent_id": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There is much more to Java 7’s NIO such as "
            ],
            [
              "memory-mapped files",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/nio/channels/FileChannel.html"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "opening a ZIP or JAR file using FileSystem",
              [
                [
                  "a",
                  "http://docs.oracle.com/javase/7/docs/technotes/guides/io/fsp/zipfilesystemprovider.html"
                ]
              ]
            ],
            [
              ". These examples will only cover a limited number of basic use cases."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There is much more to Java 7’s NIO such as "
          },
          {
            "Text": "memory-mapped files",
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/nio/channels/FileChannel.html"
          },
          {
            "Text": " or "
          },
          {
            "Text": "opening a ZIP or JAR file using FileSystem",
            "Link": "http://docs.oracle.com/javase/7/docs/technotes/guides/io/fsp/zipfilesystemprovider.html"
          },
          {
            "Text": ". These examples will only cover a limited number of basic use cases."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460170196,
        "id": "ca1d5c7e-f02b-4d9b-a478-942616ab953e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460170196,
        "parent_id": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As a basic rule, if you are used to perform a file system read/write operation using a "
            ],
            [
              "java.io.File",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/io/File.html"
                ]
              ]
            ],
            [
              " instance method, you will find it as a static method within "
            ],
            [
              "java.nio.file.Files",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As a basic rule, if you are used to perform a file system read/write operation using a "
          },
          {
            "Text": "java.io.File",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/io/File.html"
          },
          {
            "Text": " instance method, you will find it as a static method within "
          },
          {
            "Text": "java.nio.file.Files",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460170196,
        "id": "7b18fa87-7a9b-408d-8e71-3da8b74f4031",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460170196,
        "parent_id": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Point to a path"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Point to a path"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460170196,
        "id": "6d8e38f4-df82-4bbe-8160-e9304198363a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460170196,
        "parent_id": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// -\u003e IO\nFile file = new File(\"io.txt\");\n\n// -\u003e NIO\nPath path = Paths.get(\"nio.txt\");"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// -\u003e IO\nFile file = new File(\"io.txt\");\n\n// -\u003e NIO\nPath path = Paths.get(\"nio.txt\");",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460170196,
        "id": "e9ec8efb-e184-4433-977f-6e9c1250c83d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460170196,
        "parent_id": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Paths relative to another path"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Paths relative to another path"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460170196,
        "id": "b1e43f6b-645d-4a35-913c-19614156aa6a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460170196,
        "parent_id": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Forward slashes can be used in place of backslashes even on a Windows operating system\n// -\u003e IO\nFile folder = new File(\"C:/\");\nFile fileInFolder = new File(folder, \"io.txt\");\n\n// -\u003e NIO\nPath directory = Paths.get(\"C:/\");\nPath pathInDirectory = directory.resolve(\"nio.txt\");"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Forward slashes can be used in place of backslashes even on a Windows operating system\n// -\u003e IO\nFile folder = new File(\"C:/\");\nFile fileInFolder = new File(folder, \"io.txt\");\n\n// -\u003e NIO\nPath directory = Paths.get(\"C:/\");\nPath pathInDirectory = directory.resolve(\"nio.txt\");",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460170196,
        "id": "cfe00dab-986c-4ff0-a1ce-fbe53f53644a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460170196,
        "parent_id": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Converting File from/to Path for use with libraries"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Converting File from/to Path for use with libraries"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460170197,
        "id": "8d72aba4-641e-4dd9-9b8d-7cfdef8d84ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460170197,
        "parent_id": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// -\u003e IO to NIO\nPath pathFromFile = new File(\"io.txt\").toPath();\n\n// -\u003e NIO to IO\nFile fileFromPath = Paths.get(\"nio.txt\").toFile();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// -\u003e IO to NIO\nPath pathFromFile = new File(\"io.txt\").toPath();\n\n// -\u003e NIO to IO\nFile fileFromPath = Paths.get(\"nio.txt\").toFile();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460170197,
        "id": "0971e2a2-8215-4a7a-821d-db031b1e3ece",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460170197,
        "parent_id": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Check if the file exists and delete it if it does"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Check if the file exists and delete it if it does"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460170197,
        "id": "78bacbc4-25a4-4430-9e9d-cd2bf49c38b1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460170197,
        "parent_id": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// -\u003e IO\nif (file.exists()) {\n    boolean deleted = file.delete();\n    if (!deleted) {\n        throw new IOException(\"Unable to delete file\");\n    }\n}\n\n// -\u003e NIO\nFiles.deleteIfExists(path);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// -\u003e IO\nif (file.exists()) {\n    boolean deleted = file.delete();\n    if (!deleted) {\n        throw new IOException(\"Unable to delete file\");\n    }\n}\n\n// -\u003e NIO\nFiles.deleteIfExists(path);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460170197,
        "id": "9198d84e-f3c0-4200-b653-9572074977da",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460170197,
        "parent_id": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Write to a file via an OutputStream"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Write to a file via an OutputStream"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460170198,
        "id": "f5eca250-15d1-43de-97da-cfce1af4e060",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460170198,
        "parent_id": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are several ways to write and read from a file using NIO for different performance and memory constraints, readability and use cases, such as "
            ],
            [
              "FileChannel",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://stackoverflow.com/questions/7366266/best-way-to-write-string-to-file-using-java-nio"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Files.write(Path path, byte\\[\\] bytes, OpenOption... options)",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#write(java.nio.file.Path,%20byte%5B%5D,%20java.nio.file.OpenOption...)"
                ]
              ]
            ],
            [
              "… In this example, only "
            ],
            [
              "OutputStream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is covered, but you are strongly encouraged to learn about memory-mapped files and the various static methods available in "
            ],
            [
              "java.nio.file.Files",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are several ways to write and read from a file using NIO for different performance and memory constraints, readability and use cases, such as "
          },
          {
            "Text": "FileChannel",
            "AttrFlags": 2,
            "Link": "http://stackoverflow.com/questions/7366266/best-way-to-write-string-to-file-using-java-nio"
          },
          {
            "Text": ", "
          },
          {
            "Text": "Files.write(Path path, byte\\[\\] bytes, OpenOption... options)",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#write(java.nio.file.Path,%20byte%5B%5D,%20java.nio.file.OpenOption...)"
          },
          {
            "Text": "… In this example, only "
          },
          {
            "Text": "OutputStream",
            "AttrFlags": 2
          },
          {
            "Text": " is covered, but you are strongly encouraged to learn about memory-mapped files and the various static methods available in "
          },
          {
            "Text": "java.nio.file.Files",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460170198,
        "id": "0d87ab1c-d780-418b-b10f-d875f9d9b4a3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460170198,
        "parent_id": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "List\u003cString\u003e lines = Arrays.asList(\n        String.valueOf(Calendar.getInstance().getTimeInMillis()),\n        \"line one\",\n        \"line two\");\n\n// -\u003e IO\nif (file.exists()) {\n    // Note: Not atomic\n    throw new IOException(\"File already exists\");\n}\ntry (FileOutputStream outputStream = new FileOutputStream(file)) {\n    for (String line : lines) {\n        outputStream.write((line + System.lineSeparator()).getBytes(StandardCharsets.UTF_8));\n    }\n}\n\n// -\u003e NIO\ntry (OutputStream outputStream = Files.newOutputStream(path, StandardOpenOption.CREATE_NEW)) {\n    for (String line : lines) {\n        outputStream.write((line + System.lineSeparator()).getBytes(StandardCharsets.UTF_8));\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "List\u003cString\u003e lines = Arrays.asList(\n        String.valueOf(Calendar.getInstance().getTimeInMillis()),\n        \"line one\",\n        \"line two\");\n\n// -\u003e IO\nif (file.exists()) {\n    // Note: Not atomic\n    throw new IOException(\"File already exists\");\n}\ntry (FileOutputStream outputStream = new FileOutputStream(file)) {\n    for (String line : lines) {\n        outputStream.write((line + System.lineSeparator()).getBytes(StandardCharsets.UTF_8));\n    }\n}\n\n// -\u003e NIO\ntry (OutputStream outputStream = Files.newOutputStream(path, StandardOpenOption.CREATE_NEW)) {\n    for (String line : lines) {\n        outputStream.write((line + System.lineSeparator()).getBytes(StandardCharsets.UTF_8));\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460170198,
        "id": "6895ae71-a443-4f4c-9477-82f13b749f60",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460170198,
        "parent_id": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Iterating on each file within a folder"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Iterating on each file within a folder"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460170198,
        "id": "d73c6a0e-ab95-40f7-9f3c-f37027d8f0c8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460170198,
        "parent_id": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// -\u003e IO\nfor (File selectedFile : folder.listFiles()) {\n    // Note: Depending on the number of files in the directory folder.listFiles() may take a long time to return\n    System.out.println((selectedFile.isDirectory() ? \"d\" : \"f\") + \" \" + selectedFile.getAbsolutePath());\n}\n\n// -\u003e NIO\nFiles.walkFileTree(directory, EnumSet.noneOf(FileVisitOption.class), 1, new SimpleFileVisitor\u003cPath\u003e() {\n    @Override\n    public FileVisitResult preVisitDirectory(Path selectedPath, BasicFileAttributes attrs) throws IOException {\n        System.out.println(\"d \" + selectedPath.toAbsolutePath());\n        return FileVisitResult.CONTINUE;\n    }\n\n    @Override\n    public FileVisitResult visitFile(Path selectedPath, BasicFileAttributes attrs) throws IOException {\n        System.out.println(\"f \" + selectedPath.toAbsolutePath());\n        return FileVisitResult.CONTINUE;\n    }\n});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// -\u003e IO\nfor (File selectedFile : folder.listFiles()) {\n    // Note: Depending on the number of files in the directory folder.listFiles() may take a long time to return\n    System.out.println((selectedFile.isDirectory() ? \"d\" : \"f\") + \" \" + selectedFile.getAbsolutePath());\n}\n\n// -\u003e NIO\nFiles.walkFileTree(directory, EnumSet.noneOf(FileVisitOption.class), 1, new SimpleFileVisitor\u003cPath\u003e() {\n    @Override\n    public FileVisitResult preVisitDirectory(Path selectedPath, BasicFileAttributes attrs) throws IOException {\n        System.out.println(\"d \" + selectedPath.toAbsolutePath());\n        return FileVisitResult.CONTINUE;\n    }\n\n    @Override\n    public FileVisitResult visitFile(Path selectedPath, BasicFileAttributes attrs) throws IOException {\n        System.out.println(\"f \" + selectedPath.toAbsolutePath());\n        return FileVisitResult.CONTINUE;\n    }\n});",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460170198,
        "id": "b23946d9-544f-4a93-8b0f-8e6b82be084c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460170198,
        "parent_id": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Recursive folder iteration"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Recursive folder iteration"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460170198,
        "id": "660e901b-9be8-43f9-b445-929768d89b52",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460170198,
        "parent_id": "c6430eef-ed2e-41f4-a512-27a2835fadc4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// -\u003e IO\nrecurseFolder(folder);\n\n// -\u003e NIO\n// Note: Symbolic links are NOT followed unless explicitly passed as an argument to Files.walkFileTree\nFiles.walkFileTree(directory, new SimpleFileVisitor\u003cPath\u003e() {\n    @Override\n    public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs) throws IOException {\n        System.out.println(\"d \" + selectedPath.toAbsolutePath());\n        return FileVisitResult.CONTINUE;\n    }\n\n    @Override\n    public FileVisitResult visitFile(Path selectedPath, BasicFileAttributes attrs) throws IOException {\n        System.out.println(\"f \" + selectedPath.toAbsolutePath());\n        return FileVisitResult.CONTINUE;\n    }\n});\n\n\nprivate static void recurseFolder(File folder) {\n    for (File selectedFile : folder.listFiles()) {\n        System.out.println((selectedFile.isDirectory() ? \"d\" : \"f\") + \" \" + selectedFile.getAbsolutePath());\n        if (selectedFile.isDirectory()) {\n            // Note: Symbolic links are followed\n            recurseFolder(selectedFile);\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// -\u003e IO\nrecurseFolder(folder);\n\n// -\u003e NIO\n// Note: Symbolic links are NOT followed unless explicitly passed as an argument to Files.walkFileTree\nFiles.walkFileTree(directory, new SimpleFileVisitor\u003cPath\u003e() {\n    @Override\n    public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs) throws IOException {\n        System.out.println(\"d \" + selectedPath.toAbsolutePath());\n        return FileVisitResult.CONTINUE;\n    }\n\n    @Override\n    public FileVisitResult visitFile(Path selectedPath, BasicFileAttributes attrs) throws IOException {\n        System.out.println(\"f \" + selectedPath.toAbsolutePath());\n        return FileVisitResult.CONTINUE;\n    }\n});\n\n\nprivate static void recurseFolder(File folder) {\n    for (File selectedFile : folder.listFiles()) {\n        System.out.println((selectedFile.isDirectory() ? \"d\" : \"f\") + \" \" + selectedFile.getAbsolutePath());\n        if (selectedFile.isDirectory()) {\n            // Note: Symbolic links are followed\n            recurseFolder(selectedFile);\n        }\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Migrating from java.io.File to Java 7 NIO java.nio.file.Path",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}