{
  "ID": "beb4716e-db4c-45e6-9085-9229d4001c2d",
  "Root": {
    "alive": true,
    "content": [
      "9999cc9d-c5f7-4f66-ad3d-98e213dc3fe0",
      "469b6d43-92a8-42bf-8635-29ad3e8c7884",
      "70dea45d-f3fa-42c0-b44b-02c3c2263666",
      "84f60b91-9bde-4569-9b1a-8bf8ae66c829",
      "09edf6d3-d57a-4300-b2cd-c6ec35a02ad4",
      "50167524-4fdd-4ccc-a6be-fc9d52ed2052",
      "e0d60e08-9300-4661-8dae-f172ecc26622",
      "64048287-6ba8-4759-ba8d-b5ea15efbc91"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460531019,
    "id": "beb4716e-db4c-45e6-9085-9229d4001c2d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460531019,
    "parent_id": "596cd51e-237c-46bd-a4df-28e4d338582d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "030 Primitive Types Cheatsheet"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460531012,
        "id": "9999cc9d-c5f7-4f66-ad3d-98e213dc3fe0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460531012,
        "parent_id": "beb4716e-db4c-45e6-9085-9229d4001c2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Table showing size and values range of all primitive types:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Table showing size and values range of all primitive types:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460531015,
        "id": "469b6d43-92a8-42bf-8635-29ad3e8c7884",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460531015,
        "parent_id": "beb4716e-db4c-45e6-9085-9229d4001c2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "data type | numeric representation | range of values | default value |\n—— | —— | —– | —– |\nboolean | n/a | false and true | false |\nbyte | 8-bit signed | -27 to 27 - 1 | 0 | | | -128 to +127 |\nshort | 16-bit signed | -215 to 215 - 1 | 0 | | | -32,768 to +32,767\nint | 32-bit signed | -231 to 231 - 1 | 0 | | | -2,147,483,648 to +2,147,483,647 |\nlong | 64-bit signed | -263 to 263 - 1 | 0L | | | -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 |\nfloat | 32-bit floating point | 1.401298464e-45 to 3.402823466e+38 (positive or negative) | 0.0F |\ndouble | 64-bit floating point | 4.94065645841246544e-324d to 1.79769313486231570e+308d (positive or negative) | 0.0D |\nchar | 16-bit unsigned | 0 to 216 - 1 | 0 | | | 0 to 65,535 |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "data type | numeric representation | range of values | default value |\n—— | —— | —– | —– |\nboolean | n/a | false and true | false |\nbyte | 8-bit signed | -27 to 27 - 1 | 0 | | | -128 to +127 |\nshort | 16-bit signed | -215 to 215 - 1 | 0 | | | -32,768 to +32,767\nint | 32-bit signed | -231 to 231 - 1 | 0 | | | -2,147,483,648 to +2,147,483,647 |\nlong | 64-bit signed | -263 to 263 - 1 | 0L | | | -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 |\nfloat | 32-bit floating point | 1.401298464e-45 to 3.402823466e+38 (positive or negative) | 0.0F |\ndouble | 64-bit floating point | 4.94065645841246544e-324d to 1.79769313486231570e+308d (positive or negative) | 0.0D |\nchar | 16-bit unsigned | 0 to 216 - 1 | 0 | | | 0 to 65,535 |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460531015,
        "id": "70dea45d-f3fa-42c0-b44b-02c3c2263666",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460531015,
        "parent_id": "beb4716e-db4c-45e6-9085-9229d4001c2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Notes:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Notes:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460531016,
        "id": "84f60b91-9bde-4569-9b1a-8bf8ae66c829",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460531016,
        "parent_id": "beb4716e-db4c-45e6-9085-9229d4001c2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The Java Language Specification mandates that signed integral types ("
            ],
            [
              "byte",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " through "
            ],
            [
              "long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") use binary twos-complement representation, and the floating point types use standard IEE 754 binary floating point representations."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The Java Language Specification mandates that signed integral types ("
          },
          {
            "Text": "byte",
            "AttrFlags": 2
          },
          {
            "Text": " through "
          },
          {
            "Text": "long",
            "AttrFlags": 2
          },
          {
            "Text": ") use binary twos-complement representation, and the floating point types use standard IEE 754 binary floating point representations."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460531016,
        "id": "09edf6d3-d57a-4300-b2cd-c6ec35a02ad4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460531016,
        "parent_id": "beb4716e-db4c-45e6-9085-9229d4001c2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Java 8 and later provide methods to perform unsigned arithmetic operations on "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". While these methods allow a program to "
            ],
            [
              "treat",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " values of the respective types as unsigned, the types remain signed types."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Java 8 and later provide methods to perform unsigned arithmetic operations on "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "long",
            "AttrFlags": 2
          },
          {
            "Text": ". While these methods allow a program to "
          },
          {
            "Text": "treat",
            "AttrFlags": 4
          },
          {
            "Text": " values of the respective types as unsigned, the types remain signed types."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460531017,
        "id": "50167524-4fdd-4ccc-a6be-fc9d52ed2052",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460531017,
        "parent_id": "beb4716e-db4c-45e6-9085-9229d4001c2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The smallest floating point shown above are "
            ],
            [
              "subnormal",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "; i.e. they have less precision than a "
            ],
            [
              "normal",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " value. The smallest normal numbers are 1.175494351e−38 and 2.2250738585072014e−308"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The smallest floating point shown above are "
          },
          {
            "Text": "subnormal",
            "AttrFlags": 4
          },
          {
            "Text": "; i.e. they have less precision than a "
          },
          {
            "Text": "normal",
            "AttrFlags": 4
          },
          {
            "Text": " value. The smallest normal numbers are 1.175494351e−38 and 2.2250738585072014e−308"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460531017,
        "id": "e0d60e08-9300-4661-8dae-f172ecc26622",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460531017,
        "parent_id": "beb4716e-db4c-45e6-9085-9229d4001c2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " conventionally represents a Unicode / UTF-16 "
            ],
            [
              "code unit",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "A "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": " conventionally represents a Unicode / UTF-16 "
          },
          {
            "Text": "code unit",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460531019,
        "id": "64048287-6ba8-4759-ba8d-b5ea15efbc91",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460531019,
        "parent_id": "beb4716e-db4c-45e6-9085-9229d4001c2d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Although a "
            ],
            [
              "boolean",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " contains just one bit of information, its size in memory varies depending on the Java Virtual Machine implementation (see "
            ],
            [
              "boolean type",
              [
                [
                  "a",
                  "http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-2.html#jvms-2.3.4"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Although a "
          },
          {
            "Text": "boolean",
            "AttrFlags": 2
          },
          {
            "Text": " contains just one bit of information, its size in memory varies depending on the Java Virtual Machine implementation (see "
          },
          {
            "Text": "boolean type",
            "Link": "http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-2.html#jvms-2.3.4"
          },
          {
            "Text": ")."
          }
        ]
      }
    ],
    "title": "030 Primitive Types Cheatsheet"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}