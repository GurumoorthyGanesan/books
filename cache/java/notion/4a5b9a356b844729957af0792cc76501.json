{
  "ID": "4a5b9a35-6b84-4729-957a-f0792cc76501",
  "Root": {
    "alive": true,
    "content": [
      "f972e1ab-63bd-4beb-8f3b-c28c83f42daa",
      "35bcd360-ad5c-44fe-bf6a-05b3a5caf360",
      "139b8971-a71e-4a0b-b572-f7eb274f1346"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460544074,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "4a5b9a35-6b84-4729-957a-f0792cc76501",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551746492571,
    "parent_id": "c5f4838e-8ea8-4be5-9969-41936c9db840",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Temporarily disable SSL verification for testing purposes"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460544072,
        "id": "f972e1ab-63bd-4beb-8f3b-c28c83f42daa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460544072,
        "parent_id": "4a5b9a35-6b84-4729-957a-f0792cc76501",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sometimes in a development or testing environment, the SSL certificate chain might not have been fully established (yet)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sometimes in a development or testing environment, the SSL certificate chain might not have been fully established (yet)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460544074,
        "id": "35bcd360-ad5c-44fe-bf6a-05b3a5caf360",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460544074,
        "parent_id": "4a5b9a35-6b84-4729-957a-f0792cc76501",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To continue developing and testing, you can turn off SSL verification programmatically by installing an “all-trusting” trust manager:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To continue developing and testing, you can turn off SSL verification programmatically by installing an “all-trusting” trust manager:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460544074,
        "id": "139b8971-a71e-4a0b-b572-f7eb274f1346",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460544074,
        "parent_id": "4a5b9a35-6b84-4729-957a-f0792cc76501",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "try {\n   // Create a trust manager that does not validate certificate chains\n   TrustManager[] trustAllCerts = new TrustManager[] {\n      new X509TrustManager() {\n       public X509Certificate[] getAcceptedIssuers() {\n           return null;\n       }\n       public void checkClientTrusted(X509Certificate[] certs, String authType) {\n       }\n       public void checkServerTrusted(X509Certificate[] certs, String authType) {\n       }\n      }\n   };\n\n   // Install the all-trusting trust manager\n   SSLContext sc = SSLContext.getInstance(\"SSL\");\n   sc.init(null, trustAllCerts, new java.security.SecureRandom());\n   HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());\n\n   // Create all-trusting host name verifier\n   HostnameVerifier allHostsValid = new HostnameVerifier() {\n       public boolean verify(String hostname, SSLSession session) {\n           return true;\n       }\n   };\n\n   // Install the all-trusting host verifier\n   HttpsURLConnection.setDefaultHostnameVerifier(allHostsValid);\n} catch (NoSuchAlgorithmException | KeyManagementException e) {\n    e.printStackTrace();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "try {\n   // Create a trust manager that does not validate certificate chains\n   TrustManager[] trustAllCerts = new TrustManager[] {\n      new X509TrustManager() {\n       public X509Certificate[] getAcceptedIssuers() {\n           return null;\n       }\n       public void checkClientTrusted(X509Certificate[] certs, String authType) {\n       }\n       public void checkServerTrusted(X509Certificate[] certs, String authType) {\n       }\n      }\n   };\n\n   // Install the all-trusting trust manager\n   SSLContext sc = SSLContext.getInstance(\"SSL\");\n   sc.init(null, trustAllCerts, new java.security.SecureRandom());\n   HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());\n\n   // Create all-trusting host name verifier\n   HostnameVerifier allHostsValid = new HostnameVerifier() {\n       public boolean verify(String hostname, SSLSession session) {\n           return true;\n       }\n   };\n\n   // Install the all-trusting host verifier\n   HttpsURLConnection.setDefaultHostnameVerifier(allHostsValid);\n} catch (NoSuchAlgorithmException | KeyManagementException e) {\n    e.printStackTrace();\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Temporarily disable SSL verification for testing purposes",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}