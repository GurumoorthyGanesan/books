{
  "ID": "8a9380a2-12c8-497b-9617-1b5014b302cd",
  "Root": {
    "alive": true,
    "content": [
      "3fb1168e-333c-47d4-9453-ae5799fbef0b",
      "028ba7e7-e08e-4cf8-9f8d-55091e83619b",
      "4cb5340e-69bd-4fd9-a5ca-a73c14a2a46a",
      "0b44faa1-e80e-4c05-a85b-a53d39a8ce43",
      "96dc797b-456c-40f6-b4f6-423f039ed63e",
      "859feca0-63c8-448c-92a1-b60e8139275b",
      "6e2e8ab5-c6b1-4edc-9867-12cd1a20251c",
      "f6d45680-215b-4233-9a2f-05d6d337af35",
      "ec83c2e7-5fc5-4329-b980-f87c67585165",
      "3bfcb57d-db53-49c0-b506-aafd86df8ae4",
      "27dd45d1-a4d6-4d69-893a-3cd3635262e4",
      "e747e1fb-bec3-4a2b-a965-3704a5af33d5",
      "f62f9455-f514-449e-a2c7-221d6ca8fa7f",
      "86b66734-6c96-4f4c-bf4e-468dc70a4de8",
      "20bb3d25-4829-4c18-8cf6-cfdf7e293ff6",
      "d5357e25-065c-47e4-bb7d-9596aff71b09",
      "dc71b8e2-f33b-4cee-a2b0-e6d073777cc0",
      "4e5ec1b9-52d1-46a0-a9c2-c32b505dba3a",
      "c05bd303-6578-4f8d-95ed-4300bf029122",
      "2ae37897-4856-4ccc-9057-04a05def2f83"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550463253360,
    "id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550463253360,
    "parent_id": "4d46b70c-bbcb-46ae-82ed-5387aeebf3e3",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 How to edit jar files with ASM"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253354,
        "id": "3fb1168e-333c-47d4-9453-ae5799fbef0b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253354,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Firstly the classes from the jar need to be loaded. We’ll use three methods for this process:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Firstly the classes from the jar need to be loaded. We’ll use three methods for this process:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253357,
        "id": "028ba7e7-e08e-4cf8-9f8d-55091e83619b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253357,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "loadClasses(File)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "loadClasses(File)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253358,
        "id": "4cb5340e-69bd-4fd9-a5ca-a73c14a2a46a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253358,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "readJar(JarFile, JarEntry, Map)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "readJar(JarFile, JarEntry, Map)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253358,
        "id": "0b44faa1-e80e-4c05-a85b-a53d39a8ce43",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253358,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "getNode(byte[])"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "getNode(byte[])"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253358,
        "id": "96dc797b-456c-40f6-b4f6-423f039ed63e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253358,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Map\u003cString, ClassNode\u003e loadClasses(File jarFile) throws IOException {\nMap\u003cString, ClassNode\u003e classes = new HashMap\u003cString, ClassNode\u003e();\nJarFile jar = new JarFile(jarFile);\nStream\u003cJarEntry\u003e str = jar.stream();\nstr.forEach(z -\u003e readJar(jar, z, classes));\njar.close();\nreturn classes;\n}\n\nMap\u003cString, ClassNode\u003e readJar(JarFile jar, JarEntry entry, Map\u003cString, ClassNode\u003e classes) {\nString name = entry.getName();\ntry (InputStream jis = jar.getInputStream(entry)){\n    if (name.endsWith(\".class\")) {\n        byte[] bytes = IOUtils.toByteArray(jis);\n        String cafebabe = String.format(\"%02X%02X%02X%02X\", bytes[0], bytes[1], bytes[2], bytes[3]);\n        if (!cafebabe.toLowerCase().equals(\"cafebabe\")) {\n            // This class doesn't have a valid magic\n            return classes;\n        }\n        try {\n            ClassNode cn = getNode(bytes);\n            classes.put(cn.name, cn);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n} catch (IOException e) {\n    e.printStackTrace();\n}\nreturn classes;\n}\n\nClassNode getNode(byte[] bytes) {\nClassReader cr = new ClassReader(bytes);\nClassNode cn = new ClassNode();\ntry {\n    cr.accept(cn, ClassReader.EXPAND_FRAMES);\n} catch (Exception e) {\n    e.printStackTrace();\n}\ncr = null;\nreturn cn;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Map\u003cString, ClassNode\u003e loadClasses(File jarFile) throws IOException {\nMap\u003cString, ClassNode\u003e classes = new HashMap\u003cString, ClassNode\u003e();\nJarFile jar = new JarFile(jarFile);\nStream\u003cJarEntry\u003e str = jar.stream();\nstr.forEach(z -\u003e readJar(jar, z, classes));\njar.close();\nreturn classes;\n}\n\nMap\u003cString, ClassNode\u003e readJar(JarFile jar, JarEntry entry, Map\u003cString, ClassNode\u003e classes) {\nString name = entry.getName();\ntry (InputStream jis = jar.getInputStream(entry)){\n    if (name.endsWith(\".class\")) {\n        byte[] bytes = IOUtils.toByteArray(jis);\n        String cafebabe = String.format(\"%02X%02X%02X%02X\", bytes[0], bytes[1], bytes[2], bytes[3]);\n        if (!cafebabe.toLowerCase().equals(\"cafebabe\")) {\n            // This class doesn't have a valid magic\n            return classes;\n        }\n        try {\n            ClassNode cn = getNode(bytes);\n            classes.put(cn.name, cn);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n} catch (IOException e) {\n    e.printStackTrace();\n}\nreturn classes;\n}\n\nClassNode getNode(byte[] bytes) {\nClassReader cr = new ClassReader(bytes);\nClassNode cn = new ClassNode();\ntry {\n    cr.accept(cn, ClassReader.EXPAND_FRAMES);\n} catch (Exception e) {\n    e.printStackTrace();\n}\ncr = null;\nreturn cn;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253358,
        "id": "859feca0-63c8-448c-92a1-b60e8139275b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253358,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With these methods loading and changing a jar file becomes a simple matter of changing ClassNodes in a map. In this example we will replace all Strings in the jar with capitalized ones using the Tree API."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With these methods loading and changing a jar file becomes a simple matter of changing ClassNodes in a map. In this example we will replace all Strings in the jar with capitalized ones using the Tree API."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253358,
        "id": "6e2e8ab5-c6b1-4edc-9867-12cd1a20251c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253358,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "File jarFile = new File(\"sample.jar\");\nMap\u003cString, ClassNode\u003e nodes = loadClasses(jarFile);\n// Iterate ClassNodes\nfor (ClassNode cn : nodes.values()){\n    // Iterate methods in class\n    for (MethodNode mn : cn.methods){\n        // Iterate instructions in method\n        for (AbstractInsnNode ain : mn.instructions.toArray()){\n            // If the instruction is loading a constant value \n            if (ain.getOpcode() == Opcodes.LDC){\n                // Cast current instruction to Ldc\n                // If the constant is a string then capitalize it.\n                LdcInsnNode ldc = (LdcInsnNode) ain;\n                if (ldc.cst instanceof String){\n                    ldc.cst = ldc.cst.toString().toUpperCase();\n                }\n            }\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "File jarFile = new File(\"sample.jar\");\nMap\u003cString, ClassNode\u003e nodes = loadClasses(jarFile);\n// Iterate ClassNodes\nfor (ClassNode cn : nodes.values()){\n    // Iterate methods in class\n    for (MethodNode mn : cn.methods){\n        // Iterate instructions in method\n        for (AbstractInsnNode ain : mn.instructions.toArray()){\n            // If the instruction is loading a constant value \n            if (ain.getOpcode() == Opcodes.LDC){\n                // Cast current instruction to Ldc\n                // If the constant is a string then capitalize it.\n                LdcInsnNode ldc = (LdcInsnNode) ain;\n                if (ldc.cst instanceof String){\n                    ldc.cst = ldc.cst.toString().toUpperCase();\n                }\n            }\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253358,
        "id": "f6d45680-215b-4233-9a2f-05d6d337af35",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253358,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now that all of the ClassNode’s strings have been modified we need to save the changes. In order to save the changes and have a working output a few things have to be done:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now that all of the ClassNode’s strings have been modified we need to save the changes. In order to save the changes and have a working output a few things have to be done:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253358,
        "id": "ec83c2e7-5fc5-4329-b980-f87c67585165",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253358,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Export ClassNodes to bytes"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Export ClassNodes to bytes"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253359,
        "id": "3bfcb57d-db53-49c0-b506-aafd86df8ae4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253359,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Load non-class jar entries "
            ],
            [
              "(Ex: Manifest.mf / other binary resources in jar)",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " as bytes"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Load non-class jar entries "
          },
          {
            "Text": "(Ex: Manifest.mf / other binary resources in jar)",
            "AttrFlags": 4
          },
          {
            "Text": " as bytes"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253359,
        "id": "27dd45d1-a4d6-4d69-893a-3cd3635262e4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253359,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Save all bytes to a new jar"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Save all bytes to a new jar"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253359,
        "id": "e747e1fb-bec3-4a2b-a965-3704a5af33d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253359,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "From the last portion above, we’ll create three methods."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "From the last portion above, we’ll create three methods."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253359,
        "id": "f62f9455-f514-449e-a2c7-221d6ca8fa7f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253359,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "processNodes(Map\u003cString, ClassNode\u003e nodes)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "processNodes(Map\u003cString, ClassNode\u003e nodes)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253359,
        "id": "86b66734-6c96-4f4c-bf4e-468dc70a4de8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253359,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "loadNonClasses(File jarFile)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "loadNonClasses(File jarFile)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253359,
        "id": "20bb3d25-4829-4c18-8cf6-cfdf7e293ff6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253359,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "saveAsJar(Map\u003cString, byte[]\u003e outBytes, String fileName)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "saveAsJar(Map\u003cString, byte[]\u003e outBytes, String fileName)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253359,
        "id": "d5357e25-065c-47e4-bb7d-9596aff71b09",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253359,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Usage:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Usage:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253360,
        "id": "dc71b8e2-f33b-4cee-a2b0-e6d073777cc0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253360,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Map\u003cString, byte[]\u003e out = process(nodes, new HashMap\u003cString, MappedClass\u003e());\nout.putAll(loadNonClassEntries(jarFile));\nsaveAsJar(out, \"sample-edit.jar\");"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Map\u003cString, byte[]\u003e out = process(nodes, new HashMap\u003cString, MappedClass\u003e());\nout.putAll(loadNonClassEntries(jarFile));\nsaveAsJar(out, \"sample-edit.jar\");",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253360,
        "id": "4e5ec1b9-52d1-46a0-a9c2-c32b505dba3a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253360,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The methods used:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The methods used:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253360,
        "id": "c05bd303-6578-4f8d-95ed-4300bf029122",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253360,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "static Map\u003cString, byte[]\u003e processNodes(Map\u003cString, ClassNode\u003e nodes, Map\u003cString, MappedClass\u003e mappings) {\n    Map\u003cString, byte[]\u003e out = new HashMap\u003cString, byte[]\u003e();\n    // Iterate nodes and add them to the map of \u003cClass names , Class bytes\u003e\n    // Using Compute_Frames ensures that stack-frames will be re-calculated automatically\n    for (ClassNode cn : nodes.values()) {\n        ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_FRAMES);\n        out.put(mappings.containsKey(cn.name) ? mappings.get(cn.name).getNewName() : cn.name, cw.toByteArray());\n    }\n    return out;\n}\n\nstatic Map\u003cString, byte[]\u003e loadNonClasses(File jarFile) throws IOException {\n    Map\u003cString, byte[]\u003e entries = new HashMap\u003cString, byte[]\u003e();\n    ZipInputStream jis = new ZipInputStream(new FileInputStream(jarFile));\n    ZipEntry entry;\n    // Iterate all entries\n    while ((entry = jis.getNextEntry()) != null) {\n        try {\n            String name = entry.getName();\n            if (!name.endsWith(\".class\") \u0026\u0026 !entry.isDirectory()) {\n                // Apache Commons - byte[] toByteArray(InputStream input)\n                //\n                // Add each entry to the map \u003cEntry name , Entry bytes\u003e\n                byte[] bytes = IOUtils.toByteArray(jis);\n                entries.put(name, bytes);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            jis.closeEntry();\n        }\n    }\n    jis.close();\n    return entries;\n}\n\nstatic void saveAsJar(Map\u003cString, byte[]\u003e outBytes, String fileName) {\n    try {\n        // Create jar output stream\n        JarOutputStream out = new JarOutputStream(new FileOutputStream(fileName));\n        // For each entry in the map, save the bytes\n        for (String entry : outBytes.keySet()) {\n            // Appent class names to class entries\n            String ext = entry.contains(\".\") ? \"\" : \".class\";\n            out.putNextEntry(new ZipEntry(entry + ext));\n            out.write(outBytes.get(entry));\n            out.closeEntry();\n        }\n        out.close();\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "static Map\u003cString, byte[]\u003e processNodes(Map\u003cString, ClassNode\u003e nodes, Map\u003cString, MappedClass\u003e mappings) {\n    Map\u003cString, byte[]\u003e out = new HashMap\u003cString, byte[]\u003e();\n    // Iterate nodes and add them to the map of \u003cClass names , Class bytes\u003e\n    // Using Compute_Frames ensures that stack-frames will be re-calculated automatically\n    for (ClassNode cn : nodes.values()) {\n        ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_FRAMES);\n        out.put(mappings.containsKey(cn.name) ? mappings.get(cn.name).getNewName() : cn.name, cw.toByteArray());\n    }\n    return out;\n}\n\nstatic Map\u003cString, byte[]\u003e loadNonClasses(File jarFile) throws IOException {\n    Map\u003cString, byte[]\u003e entries = new HashMap\u003cString, byte[]\u003e();\n    ZipInputStream jis = new ZipInputStream(new FileInputStream(jarFile));\n    ZipEntry entry;\n    // Iterate all entries\n    while ((entry = jis.getNextEntry()) != null) {\n        try {\n            String name = entry.getName();\n            if (!name.endsWith(\".class\") \u0026\u0026 !entry.isDirectory()) {\n                // Apache Commons - byte[] toByteArray(InputStream input)\n                //\n                // Add each entry to the map \u003cEntry name , Entry bytes\u003e\n                byte[] bytes = IOUtils.toByteArray(jis);\n                entries.put(name, bytes);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            jis.closeEntry();\n        }\n    }\n    jis.close();\n    return entries;\n}\n\nstatic void saveAsJar(Map\u003cString, byte[]\u003e outBytes, String fileName) {\n    try {\n        // Create jar output stream\n        JarOutputStream out = new JarOutputStream(new FileOutputStream(fileName));\n        // For each entry in the map, save the bytes\n        for (String entry : outBytes.keySet()) {\n            // Appent class names to class entries\n            String ext = entry.contains(\".\") ? \"\" : \".class\";\n            out.putNextEntry(new ZipEntry(entry + ext));\n            out.write(outBytes.get(entry));\n            out.closeEntry();\n        }\n        out.close();\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463253360,
        "id": "2ae37897-4856-4ccc-9057-04a05def2f83",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463253360,
        "parent_id": "8a9380a2-12c8-497b-9617-1b5014b302cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "That’s it. All the changes will be saved to “sample-edit.jar”."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "That’s it. All the changes will be saved to “sample-edit.jar”."
          }
        ]
      }
    ],
    "title": "020 How to edit jar files with ASM"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}