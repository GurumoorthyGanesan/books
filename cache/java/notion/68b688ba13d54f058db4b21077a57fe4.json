{
  "ID": "68b688ba-13d5-4f05-8db4-b21077a57fe4",
  "Root": {
    "alive": true,
    "content": [
      "0092aa92-ec71-41c5-a5d0-d6f4389491af",
      "bfa78075-183a-439b-bd6a-69852abd7a70",
      "5c257b07-1cc9-478d-8f36-b94a00d47157",
      "6acda8e3-1fed-45bc-98c3-b756177a5543",
      "60d12c08-b8df-403c-b78e-ab937bb0486c",
      "fdeb8c36-da98-4ee7-b00b-81d337f01a1a",
      "d4187e1f-769a-4053-a2b8-b45d38f3a76b",
      "4e723976-2c89-4b34-a68c-6b2bb67fe8cd",
      "3397cfba-dae3-47f2-b450-37a08c528510",
      "f8665270-54ef-4875-aa0d-79aa3d0a4151"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550518366912,
    "id": "68b688ba-13d5-4f05-8db4-b21077a57fe4",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550518366912,
    "parent_id": "68d3f97c-3d71-48d3-955c-6eb7411e2d26",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Pitfall - Ignoring or squashing exceptions"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518366907,
        "id": "0092aa92-ec71-41c5-a5d0-d6f4389491af",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518366907,
        "parent_id": "68b688ba-13d5-4f05-8db4-b21077a57fe4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example is about deliberately ignoring or “squashing” exceptions. Or to be more precise, it is about how to catch and handle an exception in a way that ignores it. However, before we describe how to do this, we should first point out that squashing exceptions is generally not the correct way to deal with them."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example is about deliberately ignoring or “squashing” exceptions. Or to be more precise, it is about how to catch and handle an exception in a way that ignores it. However, before we describe how to do this, we should first point out that squashing exceptions is generally not the correct way to deal with them."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518366910,
        "id": "bfa78075-183a-439b-bd6a-69852abd7a70",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518366910,
        "parent_id": "68b688ba-13d5-4f05-8db4-b21077a57fe4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Exceptions are usually thrown (by something) to notify other parts of the program that some significant (i.e. “exceptional”) event has occurred. Generally (though not always) an exception means that something has gone wrong. If you code your program to squash the exception, there is a fair chance that the problem will reappear in another form. To make things worse, when you squash the exception, you are throwing away the information in the exception object and its associated stack trace. That is likely to make it harder to figure out what the original source of the problem was."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Exceptions are usually thrown (by something) to notify other parts of the program that some significant (i.e. “exceptional”) event has occurred. Generally (though not always) an exception means that something has gone wrong. If you code your program to squash the exception, there is a fair chance that the problem will reappear in another form. To make things worse, when you squash the exception, you are throwing away the information in the exception object and its associated stack trace. That is likely to make it harder to figure out what the original source of the problem was."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518366911,
        "id": "5c257b07-1cc9-478d-8f36-b94a00d47157",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518366911,
        "parent_id": "68b688ba-13d5-4f05-8db4-b21077a57fe4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In practice, exception squashing frequently happens when you use an IDE’s auto-correction feature to “fix” a compilation error caused by an unhandled exception. For example, you might see code like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In practice, exception squashing frequently happens when you use an IDE’s auto-correction feature to “fix” a compilation error caused by an unhandled exception. For example, you might see code like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518366911,
        "id": "6acda8e3-1fed-45bc-98c3-b756177a5543",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518366911,
        "parent_id": "68b688ba-13d5-4f05-8db4-b21077a57fe4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "try {\n    inputStream = new FileInputStream(\"someFile\");\n} catch (IOException e) {\n    /* add exception handling code here */\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "try {\n    inputStream = new FileInputStream(\"someFile\");\n} catch (IOException e) {\n    /* add exception handling code here */\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518366911,
        "id": "60d12c08-b8df-403c-b78e-ab937bb0486c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518366911,
        "parent_id": "68b688ba-13d5-4f05-8db4-b21077a57fe4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Clearly, the programmer has accepted the IDE’s suggestion to make the compilation error go away, but the suggestion was inappropriate. (If the file open has failed, the program should most likely do something about it. With the above “correction”, the program is liable to fail later; e.g. with a "
            ],
            [
              "NullPointerException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " because "
            ],
            [
              "inputStream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is now "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ".)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Clearly, the programmer has accepted the IDE’s suggestion to make the compilation error go away, but the suggestion was inappropriate. (If the file open has failed, the program should most likely do something about it. With the above “correction”, the program is liable to fail later; e.g. with a "
          },
          {
            "Text": "NullPointerException",
            "AttrFlags": 2
          },
          {
            "Text": " because "
          },
          {
            "Text": "inputStream",
            "AttrFlags": 2
          },
          {
            "Text": " is now "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": ".)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518366911,
        "id": "fdeb8c36-da98-4ee7-b00b-81d337f01a1a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518366911,
        "parent_id": "68b688ba-13d5-4f05-8db4-b21077a57fe4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Having said that, here is an example of deliberately squashing an exception. (For the purposes of argument, assume that we have determined that an interrupt while showing the selfie is harmless.) The comment tells the reader that we squashed the exception deliberately, and why we did that."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Having said that, here is an example of deliberately squashing an exception. (For the purposes of argument, assume that we have determined that an interrupt while showing the selfie is harmless.) The comment tells the reader that we squashed the exception deliberately, and why we did that."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518366911,
        "id": "d4187e1f-769a-4053-a2b8-b45d38f3a76b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518366911,
        "parent_id": "68b688ba-13d5-4f05-8db4-b21077a57fe4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "try {\n    selfie.show();\n} catch (InterruptedException e) {\n    // It doesn't matter if showing the selfie is interrupted.\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "try {\n    selfie.show();\n} catch (InterruptedException e) {\n    // It doesn't matter if showing the selfie is interrupted.\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518366912,
        "id": "4e723976-2c89-4b34-a68c-6b2bb67fe8cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518366912,
        "parent_id": "68b688ba-13d5-4f05-8db4-b21077a57fe4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another conventional way to highlight that we are "
            ],
            [
              "deliberately",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " squashing an exception without saying why is to indicate this with the exception variable’s name, like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another conventional way to highlight that we are "
          },
          {
            "Text": "deliberately",
            "AttrFlags": 4
          },
          {
            "Text": " squashing an exception without saying why is to indicate this with the exception variable’s name, like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518366912,
        "id": "3397cfba-dae3-47f2-b450-37a08c528510",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518366912,
        "parent_id": "68b688ba-13d5-4f05-8db4-b21077a57fe4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "try { \n    selfie.show(); \n} catch (InterruptedException ignored) {  }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "try { \n    selfie.show(); \n} catch (InterruptedException ignored) {  }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518366912,
        "id": "f8665270-54ef-4875-aa0d-79aa3d0a4151",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518366912,
        "parent_id": "68b688ba-13d5-4f05-8db4-b21077a57fe4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Some IDEs (like IntelliJ IDEA) won’t display a warning about the empty catch block if the variable name is set to "
            ],
            [
              "ignored",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Some IDEs (like IntelliJ IDEA) won’t display a warning about the empty catch block if the variable name is set to "
          },
          {
            "Text": "ignored",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "020 Pitfall - Ignoring or squashing exceptions"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}