{
  "ID": "56df9045-feb7-46cf-b9b4-378d655f059d",
  "Root": {
    "alive": true,
    "content": [
      "d9663475-aab6-4518-8f18-3a8049c771dd",
      "e1a60c0b-02d5-44b2-ab49-48170a8bb24e",
      "15a6ce04-f969-4fa9-8bd8-a2d3609c40b2",
      "6c252e5a-d7c9-4114-95b3-241a9d40d70d",
      "8e1b5875-5834-415f-8078-ed06429093c5",
      "bee33663-5605-4e9c-8183-0d978a6b1b89",
      "77186755-78a5-47bb-9353-95b401009a21",
      "85281b02-e0ba-43dc-a7c9-e8e2130bc7db",
      "b2ada40b-0fca-4b12-99df-57622c41a14a",
      "3265e8e1-152e-47e3-993d-047217a98d19",
      "bff1a69f-73d5-4462-9c5b-42cd334d5e0e",
      "4d639f12-4512-402f-84c2-eb73b881c42b",
      "425174e8-cf71-469e-b1ac-c9c7507b6aef",
      "a7528b36-df38-4a0c-9ee5-d111fe6b399d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550519526548,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "56df9045-feb7-46cf-b9b4-378d655f059d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551747860740,
    "parent_id": "1f0e916b-e994-4a2f-91b1-8a6715f5100b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Escape sequences in literals"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519526538,
        "id": "d9663475-aab6-4518-8f18-3a8049c771dd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519526538,
        "parent_id": "56df9045-feb7-46cf-b9b4-378d655f059d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "String and character literals provide an escape mechanism that allows express character codes that would otherwise not be allowed in the literal. An escape sequence consists of a backslash character ("
            ],
            [
              "\\\\",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") followed by one ore more other characters. The same sequences are valid in both character an string literals."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "String and character literals provide an escape mechanism that allows express character codes that would otherwise not be allowed in the literal. An escape sequence consists of a backslash character ("
          },
          {
            "Text": "\\\\",
            "AttrFlags": 2
          },
          {
            "Text": ") followed by one ore more other characters. The same sequences are valid in both character an string literals."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519526541,
        "id": "e1a60c0b-02d5-44b2-ab49-48170a8bb24e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519526541,
        "parent_id": "56df9045-feb7-46cf-b9b4-378d655f059d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The complete set of escape sequences is as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The complete set of escape sequences is as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519526542,
        "id": "15a6ce04-f969-4fa9-8bd8-a2d3609c40b2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519526542,
        "parent_id": "56df9045-feb7-46cf-b9b4-378d655f059d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Escape sequence | Meaning |\n—— | —— |"
            ],
            [
              "\\\\",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Denotes an backslash ("
            ],
            [
              "\\\\",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") character |"
            ],
            [
              "\\'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Denotes a single-quote ("
            ],
            [
              "\\'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") character |"
            ],
            [
              "\\\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Denotes a double-quote ("
            ],
            [
              "\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") character |"
            ],
            [
              "\\n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Denotes a line feed ("
            ],
            [
              "LF",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") character |"
            ],
            [
              "\\r",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Denotes a carriage return ("
            ],
            [
              "CR",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") character |"
            ],
            [
              "\\t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Denotes a horizontal tab ("
            ],
            [
              "HT",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") character |"
            ],
            [
              "\\f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Denotes a form feed ("
            ],
            [
              "FF",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") character |"
            ],
            [
              "\\b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Denotes a backspace ("
            ],
            [
              "BS",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") character |"
            ],
            [
              "\\\u003coctal\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Denotes a character code in the range 0 to 255. |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Escape sequence | Meaning |\n—— | —— |"
          },
          {
            "Text": "\\\\",
            "AttrFlags": 2
          },
          {
            "Text": " | Denotes an backslash ("
          },
          {
            "Text": "\\\\",
            "AttrFlags": 2
          },
          {
            "Text": ") character |"
          },
          {
            "Text": "\\'",
            "AttrFlags": 2
          },
          {
            "Text": " | Denotes a single-quote ("
          },
          {
            "Text": "\\'",
            "AttrFlags": 2
          },
          {
            "Text": ") character |"
          },
          {
            "Text": "\\\"",
            "AttrFlags": 2
          },
          {
            "Text": " | Denotes a double-quote ("
          },
          {
            "Text": "\"",
            "AttrFlags": 2
          },
          {
            "Text": ") character |"
          },
          {
            "Text": "\\n",
            "AttrFlags": 2
          },
          {
            "Text": " | Denotes a line feed ("
          },
          {
            "Text": "LF",
            "AttrFlags": 2
          },
          {
            "Text": ") character |"
          },
          {
            "Text": "\\r",
            "AttrFlags": 2
          },
          {
            "Text": " | Denotes a carriage return ("
          },
          {
            "Text": "CR",
            "AttrFlags": 2
          },
          {
            "Text": ") character |"
          },
          {
            "Text": "\\t",
            "AttrFlags": 2
          },
          {
            "Text": " | Denotes a horizontal tab ("
          },
          {
            "Text": "HT",
            "AttrFlags": 2
          },
          {
            "Text": ") character |"
          },
          {
            "Text": "\\f",
            "AttrFlags": 2
          },
          {
            "Text": " | Denotes a form feed ("
          },
          {
            "Text": "FF",
            "AttrFlags": 2
          },
          {
            "Text": ") character |"
          },
          {
            "Text": "\\b",
            "AttrFlags": 2
          },
          {
            "Text": " | Denotes a backspace ("
          },
          {
            "Text": "BS",
            "AttrFlags": 2
          },
          {
            "Text": ") character |"
          },
          {
            "Text": "\\\u003coctal\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " | Denotes a character code in the range 0 to 255. |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519526542,
        "id": "6c252e5a-d7c9-4114-95b3-241a9d40d70d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519526542,
        "parent_id": "56df9045-feb7-46cf-b9b4-378d655f059d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "\u003coctal\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the above consists of one, two or three octal digits (‘0’ through ‘7’) which represent a number between 0 and 255 (decimal)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "\u003coctal\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " in the above consists of one, two or three octal digits (‘0’ through ‘7’) which represent a number between 0 and 255 (decimal)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519526543,
        "id": "8e1b5875-5834-415f-8078-ed06429093c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519526543,
        "parent_id": "56df9045-feb7-46cf-b9b4-378d655f059d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that a backslash followed by any other character is an invalid escape sequence. Invalid escape sequences are treated as compilation errors by the JLS."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that a backslash followed by any other character is an invalid escape sequence. Invalid escape sequences are treated as compilation errors by the JLS."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519526543,
        "id": "bee33663-5605-4e9c-8183-0d978a6b1b89",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519526543,
        "parent_id": "56df9045-feb7-46cf-b9b4-378d655f059d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Reference:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Reference:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519526545,
        "id": "77186755-78a5-47bb-9353-95b401009a21",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519526545,
        "parent_id": "56df9045-feb7-46cf-b9b4-378d655f059d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "JLS 3.10.6. Escape Sequences for Character and String Literals",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/specs/jls/se8/html/jls-3.html#jls-3.10.6"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "JLS 3.10.6. Escape Sequences for Character and String Literals",
            "Link": "https://docs.oracle.com/javase/specs/jls/se8/html/jls-3.html#jls-3.10.6"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519526545,
        "id": "85281b02-e0ba-43dc-a7c9-e8e2130bc7db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519526545,
        "parent_id": "56df9045-feb7-46cf-b9b4-378d655f059d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Unicode escapes"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Unicode escapes"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519526546,
        "id": "b2ada40b-0fca-4b12-99df-57622c41a14a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519526546,
        "parent_id": "56df9045-feb7-46cf-b9b4-378d655f059d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In addition to the string and character escape sequences described above, Java has a more general Unicode escaping mechanism, as defined in "
            ],
            [
              "JLS 3.3. Unicode Escapes",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/specs/jls/se8/html/jls-3.html#jls-3.3"
                ]
              ]
            ],
            [
              ". A Unicode escape has the following syntax:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In addition to the string and character escape sequences described above, Java has a more general Unicode escaping mechanism, as defined in "
          },
          {
            "Text": "JLS 3.3. Unicode Escapes",
            "Link": "https://docs.oracle.com/javase/specs/jls/se8/html/jls-3.html#jls-3.3"
          },
          {
            "Text": ". A Unicode escape has the following syntax:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519526546,
        "id": "3265e8e1-152e-47e3-993d-047217a98d19",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519526546,
        "parent_id": "56df9045-feb7-46cf-b9b4-378d655f059d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "'\\' 'u' \u003chex-digit\u003e \u003chex-digit\u003e \u003chex-digit\u003e \u003chex-digit\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "'\\' 'u' \u003chex-digit\u003e \u003chex-digit\u003e \u003chex-digit\u003e \u003chex-digit\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519526548,
        "id": "bff1a69f-73d5-4462-9c5b-42cd334d5e0e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519526548,
        "parent_id": "56df9045-feb7-46cf-b9b4-378d655f059d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "where "
            ],
            [
              "\u003chex-digit\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is one of "
            ],
            [
              "'0'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'1'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'2'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'3'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'4'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'5'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'6'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'7'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'8'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'9'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'a'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'b'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'c'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'d'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'e'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'f'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'A'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'B'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'C'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'D'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'E'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "'F'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "where "
          },
          {
            "Text": "\u003chex-digit\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " is one of "
          },
          {
            "Text": "'0'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'1'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'2'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'3'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'4'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'5'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'6'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'7'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'8'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'9'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'a'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'b'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'c'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'d'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'e'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'f'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'A'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'B'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'C'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'D'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'E'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "'F'",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519526548,
        "id": "4d639f12-4512-402f-84c2-eb73b881c42b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519526548,
        "parent_id": "56df9045-feb7-46cf-b9b4-378d655f059d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A Unicode escape is mapped by the Java compiler to a character (strictly speaking a 16-bit Unicode "
            ],
            [
              "code unit",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "), and can be used anywhere in the source code where the mapped character is valid. It is commonly used in character and string literals when you need to represent a non-ASCII character in a literal."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A Unicode escape is mapped by the Java compiler to a character (strictly speaking a 16-bit Unicode "
          },
          {
            "Text": "code unit",
            "AttrFlags": 4
          },
          {
            "Text": "), and can be used anywhere in the source code where the mapped character is valid. It is commonly used in character and string literals when you need to represent a non-ASCII character in a literal."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519526548,
        "id": "425174e8-cf71-469e-b1ac-c9c7507b6aef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519526548,
        "parent_id": "56df9045-feb7-46cf-b9b4-378d655f059d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Escaping in regexes"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Escaping in regexes"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519526548,
        "id": "a7528b36-df38-4a0c-9ee5-d111fe6b399d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519526548,
        "parent_id": "56df9045-feb7-46cf-b9b4-378d655f059d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "TBD"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "TBD"
          }
        ]
      }
    ],
    "title": "Escape sequences in literals",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}