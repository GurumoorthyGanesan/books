{
  "ID": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
  "Root": {
    "alive": true,
    "content": [
      "c766718c-7288-40e3-a2ab-3f881eb8bdee",
      "bc7bd1c5-e4aa-41c4-9d47-ee1d46ba3edd",
      "75a83d6b-b362-4433-b4ac-399be9dc36cf",
      "c480ce9c-5946-4e4f-87ce-b6408d9c324d",
      "a1c88495-0943-4786-bd1b-4713acbe42b6",
      "0866a920-5873-49db-b0a0-8f6afba56365",
      "a8819d3e-6c1e-490e-8ba1-26fe7349c2cd",
      "011966eb-1197-404f-a792-f08928884f98",
      "6359ad0c-4ec2-4fff-bfcd-e43a9f76af14",
      "077c286f-494d-455a-9f86-12727b963aee",
      "55e12242-c8e8-4590-963d-0fca12fe2a34",
      "7a45d643-e59b-473b-b5c2-de3c16c0c3a2",
      "149324a0-6008-42b2-9514-e72dae3b2ad6",
      "f76691b7-b8b6-4c6c-af00-abd3811a8641",
      "30d1d90b-c8f3-4776-b28b-e0af79d8ccd6",
      "e67b17ba-5fe0-4c8e-8f86-5601339b3570",
      "26f19a4b-af4a-48c4-8003-9b99e2ceaba6",
      "6ce70bed-6ce0-4e88-8b78-9366e8de9081",
      "a2b588f8-7660-4ec8-8b0e-f71266fba545",
      "ccac572c-5707-465a-9cb6-88ff3aeed4ac",
      "92bcdb52-ce0a-45f0-954d-bcb41ebaa66c",
      "cef4c161-0469-47a7-819e-af9ea5b0ed8b",
      "90d94c93-83a2-4835-8d0b-72875eac36fb",
      "1eed6fe8-6729-4806-a95f-3168e3daf908",
      "94edfac2-2a13-4e69-92fb-0d2650cd81ac",
      "e5a4bdf2-fdd0-4ee2-acee-2239bb20f672",
      "8e8a4836-f167-4780-86d2-6cdca491c794",
      "559a270c-c8cf-4ca4-b136-978afabd144f",
      "29654210-e366-4cc0-b99c-d0154524e6a2",
      "1c2accd0-1957-4fea-ad6c-05cf0c71df46",
      "94bf92c0-dd7d-4ea8-b0b6-4bcc3458db2c",
      "8054b733-33f3-4294-823e-fc195f2c1f33",
      "fd7046f5-2136-4a34-a948-720a50a278f6",
      "e901c1fd-02c9-45d7-af72-d45f60da246b",
      "435f34b0-6934-49e2-b1dc-642853438710",
      "f614912e-3c04-446d-82d0-a026ec917e62",
      "ff49abc7-4f57-4550-9ddb-d94620265149",
      "7e8449f2-731f-4c81-aeb7-addbafe5031f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550519516555,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551766336256,
    "parent_id": "87ac3ba4-bd8c-44a0-86ea-f0715687a44c",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Expression Basics"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516536,
        "id": "c766718c-7288-40e3-a2ab-3f881eb8bdee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516536,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Expressions in Java are the primary construct for doing calculations. Here are some examples:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Expressions in Java are the primary construct for doing calculations. Here are some examples:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516539,
        "id": "bc7bd1c5-e4aa-41c4-9d47-ee1d46ba3edd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516539,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "1                 // A simple literal is an expression\n1 + 2             // A simple expression that adds two numbers\n(i + j) / k       // An expression with multiple operations\n(flag) ? c : d    // An expression using the \"conditional\" operator\n(String) s        // A type-cast is an expression\nobj.test()        // A method call is an expression\nnew Object()      // Creation of an object is an expression\nnew int[]         // Creation of an object is an expression"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "1                 // A simple literal is an expression\n1 + 2             // A simple expression that adds two numbers\n(i + j) / k       // An expression with multiple operations\n(flag) ? c : d    // An expression using the \"conditional\" operator\n(String) s        // A type-cast is an expression\nobj.test()        // A method call is an expression\nnew Object()      // Creation of an object is an expression\nnew int[]         // Creation of an object is an expression",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516539,
        "id": "75a83d6b-b362-4433-b4ac-399be9dc36cf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516539,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In general, an expression consists of the following forms:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In general, an expression consists of the following forms:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516540,
        "id": "c480ce9c-5946-4e4f-87ce-b6408d9c324d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516540,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Expression names which consist of:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Expression names which consist of:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516540,
        "id": "a1c88495-0943-4786-bd1b-4713acbe42b6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516540,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "- Simple identifiers; e.g. `someIdentifier`\n- Qualified identifiers; e.g. `MyClass.someField`"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "- Simple identifiers; e.g. `someIdentifier`\n- Qualified identifiers; e.g. `MyClass.someField`",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516540,
        "id": "0866a920-5873-49db-b0a0-8f6afba56365",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516540,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Primaries which consist of:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Primaries which consist of:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516540,
        "id": "a8819d3e-6c1e-490e-8ba1-26fe7349c2cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516540,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "- Literals; e.g. `1`, `1.0`, `'X'`, `\"hello\"`, `false` and `null`\n- Class literal expressions; e.g. `MyClass.class`\n- `this` and `\u003cTypeName\u003e . this`\n- Parenthesized expressions; e.g. `( a + b )`\n- Class instance creation expressions; e.g. `new MyClass(1, 2, 3)`\n- Array instance creation expressions; e.g. `new int[3]`\n- Field access expressions; e.g. `obj.someField` or `this.someField`\n- Array access expressions; e.g. `vector[21]`\n- Method invocations; e.g. `obj.doIt(1, 2, 3)`\n- Method references (Java 8 and later); e.g. `MyClass::doIt`"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "- Literals; e.g. `1`, `1.0`, `'X'`, `\"hello\"`, `false` and `null`\n- Class literal expressions; e.g. `MyClass.class`\n- `this` and `\u003cTypeName\u003e . this`\n- Parenthesized expressions; e.g. `( a + b )`\n- Class instance creation expressions; e.g. `new MyClass(1, 2, 3)`\n- Array instance creation expressions; e.g. `new int[3]`\n- Field access expressions; e.g. `obj.someField` or `this.someField`\n- Array access expressions; e.g. `vector[21]`\n- Method invocations; e.g. `obj.doIt(1, 2, 3)`\n- Method references (Java 8 and later); e.g. `MyClass::doIt`",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516541,
        "id": "011966eb-1197-404f-a792-f08928884f98",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516541,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Unary operator expressions; e.g. "
            ],
            [
              "!a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "i++",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Unary operator expressions; e.g. "
          },
          {
            "Text": "!a",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "i++",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516541,
        "id": "6359ad0c-4ec2-4fff-bfcd-e43a9f76af14",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516541,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Binary operator expressions; e.g. "
            ],
            [
              "a + b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "obj == null",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Binary operator expressions; e.g. "
          },
          {
            "Text": "a + b",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "obj == null",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516541,
        "id": "077c286f-494d-455a-9f86-12727b963aee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516541,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Ternary operator expressions; e.g. "
            ],
            [
              "(obj == null) ? 1 : obj.getCount()",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Ternary operator expressions; e.g. "
          },
          {
            "Text": "(obj == null) ? 1 : obj.getCount()",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516541,
        "id": "55e12242-c8e8-4590-963d-0fca12fe2a34",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516541,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Lambda expressions (Java 8 and later); e.g. "
            ],
            [
              "obj -\u003e obj.getCount()",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Lambda expressions (Java 8 and later); e.g. "
          },
          {
            "Text": "obj -\u003e obj.getCount()",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516542,
        "id": "7a45d643-e59b-473b-b5c2-de3c16c0c3a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516542,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The details of the different forms of expressions may be found in other Topics."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The details of the different forms of expressions may be found in other Topics."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516544,
        "id": "149324a0-6008-42b2-9514-e72dae3b2ad6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516544,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "Operators",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/176/operators"
                ]
              ]
            ],
            [
              " topic covers unary, binary and ternary operator expressions."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "Operators",
            "Link": "http://stackoverflow.com/documentation/java/176/operators"
          },
          {
            "Text": " topic covers unary, binary and ternary operator expressions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516546,
        "id": "f76691b7-b8b6-4c6c-af00-abd3811a8641",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516546,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "Lambda expressions",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/91/lambda-expressions#t=20161216024035664514"
                ]
              ]
            ],
            [
              " topic covers lambda expressions and method reference expressions."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "Lambda expressions",
            "Link": "http://stackoverflow.com/documentation/java/91/lambda-expressions#t=20161216024035664514"
          },
          {
            "Text": " topic covers lambda expressions and method reference expressions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516547,
        "id": "30d1d90b-c8f3-4776-b28b-e0af79d8ccd6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516547,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "Classes and Objects",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/114/classes-and-objects#t=201612160817408962117"
                ]
              ]
            ],
            [
              " topic covers class instance creation expressions."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "Classes and Objects",
            "Link": "http://stackoverflow.com/documentation/java/114/classes-and-objects#t=201612160817408962117"
          },
          {
            "Text": " topic covers class instance creation expressions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516548,
        "id": "e67b17ba-5fe0-4c8e-8f86-5601339b3570",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516548,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "Arrays",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/99/arrays#t=201612160241346240996"
                ]
              ]
            ],
            [
              " topic covers array access expressions and array instance creation expressions."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "Arrays",
            "Link": "http://stackoverflow.com/documentation/java/99/arrays#t=201612160241346240996"
          },
          {
            "Text": " topic covers array access expressions and array instance creation expressions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516549,
        "id": "26f19a4b-af4a-48c4-8003-9b99e2ceaba6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516549,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "Literals",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/8250/literals#t=201612190020004937953"
                ]
              ]
            ],
            [
              " topic covers the different kinds of literals expressions."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "Literals",
            "Link": "http://stackoverflow.com/documentation/java/8250/literals#t=201612190020004937953"
          },
          {
            "Text": " topic covers the different kinds of literals expressions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516549,
        "id": "6ce70bed-6ce0-4e88-8b78-9366e8de9081",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516549,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The Type of an Expression"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "The Type of an Expression"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516549,
        "id": "a2b588f8-7660-4ec8-8b0e-f71266fba545",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516549,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In most cases, an expression has a static type that can be determined at compile time by examining and its subexpressions. These are referred to as "
            ],
            [
              "stand-alone",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " expressions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In most cases, an expression has a static type that can be determined at compile time by examining and its subexpressions. These are referred to as "
          },
          {
            "Text": "stand-alone",
            "AttrFlags": 4
          },
          {
            "Text": " expressions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516550,
        "id": "ccac572c-5707-465a-9cb6-88ff3aeed4ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516550,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, (in Java 8 and later) the following kinds of expressions may be "
            ],
            [
              "poly expressions",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, (in Java 8 and later) the following kinds of expressions may be "
          },
          {
            "Text": "poly expressions",
            "AttrFlags": 4
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516550,
        "id": "92bcdb52-ce0a-45f0-954d-bcb41ebaa66c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516550,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parenthesized expressions"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parenthesized expressions"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516550,
        "id": "cef4c161-0469-47a7-819e-af9ea5b0ed8b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516550,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Class instance creation expressions"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Class instance creation expressions"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516550,
        "id": "90d94c93-83a2-4835-8d0b-72875eac36fb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516550,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Method invocation expressions"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Method invocation expressions"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516551,
        "id": "1eed6fe8-6729-4806-a95f-3168e3daf908",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516551,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Method reference expressions"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Method reference expressions"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516551,
        "id": "94edfac2-2a13-4e69-92fb-0d2650cd81ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516551,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Conditional expressions"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Conditional expressions"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516551,
        "id": "e5a4bdf2-fdd0-4ee2-acee-2239bb20f672",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516551,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Lambda expressions"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Lambda expressions"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516551,
        "id": "8e8a4836-f167-4780-86d2-6cdca491c794",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516551,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When an expression is a poly expression, its type may be influenced by the expression’s "
            ],
            [
              "target type",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "; i.e. what it is being used for."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When an expression is a poly expression, its type may be influenced by the expression’s "
          },
          {
            "Text": "target type",
            "AttrFlags": 4
          },
          {
            "Text": "; i.e. what it is being used for."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516551,
        "id": "559a270c-c8cf-4ca4-b136-978afabd144f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516551,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The value of an Expression"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "The value of an Expression"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516552,
        "id": "29654210-e366-4cc0-b99c-d0154524e6a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516552,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The value of an expression is assignment compatible with its type. The exception to this is when "
            ],
            [
              "heap pollution",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " has occurred; e.g. because “unsafe conversion” warnings have been (inappropriately) suppressed or ignored."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The value of an expression is assignment compatible with its type. The exception to this is when "
          },
          {
            "Text": "heap pollution",
            "AttrFlags": 4
          },
          {
            "Text": " has occurred; e.g. because “unsafe conversion” warnings have been (inappropriately) suppressed or ignored."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516552,
        "id": "1c2accd0-1957-4fea-ad6c-05cf0c71df46",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516552,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Expression Statements"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Expression Statements"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516552,
        "id": "94bf92c0-dd7d-4ea8-b0b6-4bcc3458db2c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516552,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Unlike many other languages, Java does not generally allow expressions to be used as statements. For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Unlike many other languages, Java does not generally allow expressions to be used as statements. For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516552,
        "id": "8054b733-33f3-4294-823e-fc195f2c1f33",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516552,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public void compute(int i, int j) {\n    i + j;   // ERROR\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public void compute(int i, int j) {\n    i + j;   // ERROR\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516552,
        "id": "fd7046f5-2136-4a34-a948-720a50a278f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516552,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Since the result of evaluating an expression like cannot be use, and since it cannot affect the execution of the program in any other way, the Java designers took the position that such usage is either a mistake, or misguided."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Since the result of evaluating an expression like cannot be use, and since it cannot affect the execution of the program in any other way, the Java designers took the position that such usage is either a mistake, or misguided."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516552,
        "id": "e901c1fd-02c9-45d7-af72-d45f60da246b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516552,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, this does not apply to all expressions. A subset of expressions are (in fact) legal as statements. The set comprises:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, this does not apply to all expressions. A subset of expressions are (in fact) legal as statements. The set comprises:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516554,
        "id": "435f34b0-6934-49e2-b1dc-642853438710",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516554,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Assignment expression, including "
            ],
            [
              "operation-and-becomes",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " assignments."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Assignment expression, including "
          },
          {
            "Text": "operation-and-becomes",
            "AttrFlags": 4
          },
          {
            "Text": " assignments."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516554,
        "id": "f614912e-3c04-446d-82d0-a026ec917e62",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516554,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Pre and post increment and decrement expressions."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Pre and post increment and decrement expressions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516555,
        "id": "ff49abc7-4f57-4550-9ddb-d94620265149",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516555,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Method calls ("
            ],
            [
              "void",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or non-"
            ],
            [
              "void",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Method calls ("
          },
          {
            "Text": "void",
            "AttrFlags": 2
          },
          {
            "Text": " or non-"
          },
          {
            "Text": "void",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519516555,
        "id": "7e8449f2-731f-4c81-aeb7-addbafe5031f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519516555,
        "parent_id": "e4447817-34ab-4f78-85f5-d80ad5ca085f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Class instance creation expressions."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Class instance creation expressions."
          }
        ]
      }
    ],
    "title": "Expression Basics",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}