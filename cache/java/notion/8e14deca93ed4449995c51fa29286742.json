{
  "ID": "8e14deca-93ed-4449-995c-51fa29286742",
  "Root": {
    "alive": true,
    "content": [
      "909ad4e2-3c8f-4d02-a88e-63efa1bf10fe",
      "5345bd97-ca89-442a-a10b-a1319f2fd161",
      "52870b11-3f3f-46c4-81ab-a61b3d302443",
      "92bf575a-6397-435b-953c-058b5ac7f56b",
      "788632e9-562d-46ae-902f-d2e84190b736",
      "031b8f66-bc34-4e06-8960-584f2cefa45e",
      "1c123c21-6070-46bc-a4c6-8aaa353f3cfc",
      "909c9604-28e0-4717-b6a2-5fde56a235b6",
      "ad4d2d58-2617-4a76-aae0-ee58e3417b0c",
      "35b1c7cb-e4f0-4f12-8e06-abe44918417b",
      "42cc1bcf-ca57-48bf-a092-f1d211a85c16",
      "fb381e1b-636e-45b5-8655-15667297b4e2",
      "d8bb40f0-f353-4d9a-a94d-0feb1909f89d",
      "132857fd-eeac-471b-b92b-139eef70fbbf",
      "91fd0c29-60f7-46dc-aef4-e61a42d8459e",
      "b531228a-e291-4911-ae92-85e149971458",
      "393d798f-f4ae-4cda-9e48-ff0a2b0c6111",
      "ea83274a-b2fb-4b18-bc67-5c27bc74e47b",
      "c2c10d9c-f132-494b-a660-f47884d31aca",
      "5270189b-c899-4adb-b6c0-6bd5e9801f1e",
      "e86aa757-38d8-4ad1-993e-85b47f87954d",
      "402fb5f1-e592-462a-b0bd-bc61673c5bac",
      "da0e9376-b8f3-4b38-8fd8-83b9f5f10e01",
      "96452a41-c074-4451-9b41-8135b03f3ec7"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550517999725,
    "id": "8e14deca-93ed-4449-995c-51fa29286742",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550517999725,
    "parent_id": "6dd2e1bb-5fba-432d-9aaf-05e0509441e8",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 final"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999715,
        "id": "909ad4e2-3c8f-4d02-a88e-63efa1bf10fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999715,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "final",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in Java can refer to variables, methods and classes. There are three simple rules:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "final",
            "AttrFlags": 2
          },
          {
            "Text": " in Java can refer to variables, methods and classes. There are three simple rules:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999720,
        "id": "5345bd97-ca89-442a-a10b-a1319f2fd161",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999720,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "final variable cannot be reassigned"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "final variable cannot be reassigned"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999720,
        "id": "52870b11-3f3f-46c4-81ab-a61b3d302443",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999720,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "final method cannot be overriden"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "final method cannot be overriden"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999720,
        "id": "92bf575a-6397-435b-953c-058b5ac7f56b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999720,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "final class cannot be extended"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "final class cannot be extended"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999720,
        "id": "788632e9-562d-46ae-902f-d2e84190b736",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999720,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Usages",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Usages",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999721,
        "id": "031b8f66-bc34-4e06-8960-584f2cefa45e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999721,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Good Programming Practice",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Good Programming Practice",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999721,
        "id": "1c123c21-6070-46bc-a4c6-8aaa353f3cfc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999721,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Some developer consider it good practice to mark a variable final when you can. If you have a variable that should not be changed, you should mark it final."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Some developer consider it good practice to mark a variable final when you can. If you have a variable that should not be changed, you should mark it final."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999721,
        "id": "909c9604-28e0-4717-b6a2-5fde56a235b6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999721,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An important use of "
            ],
            [
              "final",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword if for method parameters. If you want to emphasize that a method doesn’t change its input parameters, mark the properties as final."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An important use of "
          },
          {
            "Text": "final",
            "AttrFlags": 2
          },
          {
            "Text": " keyword if for method parameters. If you want to emphasize that a method doesn’t change its input parameters, mark the properties as final."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999722,
        "id": "ad4d2d58-2617-4a76-aae0-ee58e3417b0c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999722,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public int sumup(final List\u003cInteger\u003e ints);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public int sumup(final List\u003cInteger\u003e ints);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999722,
        "id": "35b1c7cb-e4f0-4f12-8e06-abe44918417b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999722,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This emphasizes that the "
            ],
            [
              "sumup",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method is not going to change the "
            ],
            [
              "ints",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This emphasizes that the "
          },
          {
            "Text": "sumup",
            "AttrFlags": 2
          },
          {
            "Text": " method is not going to change the "
          },
          {
            "Text": "ints",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999722,
        "id": "42cc1bcf-ca57-48bf-a092-f1d211a85c16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999722,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Inner class Access",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Inner class Access",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999722,
        "id": "fb381e1b-636e-45b5-8655-15667297b4e2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999722,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If your anonymous inner class wants to access a variable, the variable should be marked "
            ],
            [
              "final",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If your anonymous inner class wants to access a variable, the variable should be marked "
          },
          {
            "Text": "final",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999722,
        "id": "d8bb40f0-f353-4d9a-a94d-0feb1909f89d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999722,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public IPrintName printName(){\n  String name;\n  return new IPrintName(){\n      @Override\n      public void printName(){\n          System.out.println(name);\n      }\n  };\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public IPrintName printName(){\n  String name;\n  return new IPrintName(){\n      @Override\n      public void printName(){\n          System.out.println(name);\n      }\n  };\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999723,
        "id": "132857fd-eeac-471b-b92b-139eef70fbbf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999723,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This class doesn’t compile, as the variable "
            ],
            [
              "name",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", is not final."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This class doesn’t compile, as the variable "
          },
          {
            "Text": "name",
            "AttrFlags": 2
          },
          {
            "Text": ", is not final."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999723,
        "id": "91fd0c29-60f7-46dc-aef4-e61a42d8459e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999723,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Effectively final variables are an exception. These are local variables that are written to only once and could therefore be made final. Effectively final variables can be accessed from anonymus classes too."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Effectively final variables are an exception. These are local variables that are written to only once and could therefore be made final. Effectively final variables can be accessed from anonymus classes too."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999723,
        "id": "b531228a-e291-4911-ae92-85e149971458",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999723,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "final static",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " variable",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "final static",
            "AttrFlags": 3
          },
          {
            "Text": " variable",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999724,
        "id": "393d798f-f4ae-4cda-9e48-ff0a2b0c6111",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999724,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Even though the code below is completely legal when "
            ],
            [
              "final",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variable "
            ],
            [
              "foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not "
            ],
            [
              "static",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", in case of "
            ],
            [
              "static",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " it will not compile:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Even though the code below is completely legal when "
          },
          {
            "Text": "final",
            "AttrFlags": 2
          },
          {
            "Text": " variable "
          },
          {
            "Text": "foo",
            "AttrFlags": 2
          },
          {
            "Text": " is not "
          },
          {
            "Text": "static",
            "AttrFlags": 2
          },
          {
            "Text": ", in case of "
          },
          {
            "Text": "static",
            "AttrFlags": 2
          },
          {
            "Text": " it will not compile:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999724,
        "id": "ea83274a-b2fb-4b18-bc67-5c27bc74e47b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999724,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class TestFinal {\n    private final static List foo;\n\n    public Test() {\n        foo = new ArrayList();\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class TestFinal {\n    private final static List foo;\n\n    public Test() {\n        foo = new ArrayList();\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999724,
        "id": "c2c10d9c-f132-494b-a660-f47884d31aca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999724,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The reason is, let’s repeat again, "
            ],
            [
              "final variable cannot be reassigned",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". Since "
            ],
            [
              "foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is static, it is shared among all instances of class "
            ],
            [
              "TestFinal",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". When a new instance of a class "
            ],
            [
              "TestFinal",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is created, its constructor is invoked and therefore foo gets reassigned which compiler does not allow. A correct way to initialize variable "
            ],
            [
              "foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in this case is either:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The reason is, let’s repeat again, "
          },
          {
            "Text": "final variable cannot be reassigned",
            "AttrFlags": 4
          },
          {
            "Text": ". Since "
          },
          {
            "Text": "foo",
            "AttrFlags": 2
          },
          {
            "Text": " is static, it is shared among all instances of class "
          },
          {
            "Text": "TestFinal",
            "AttrFlags": 2
          },
          {
            "Text": ". When a new instance of a class "
          },
          {
            "Text": "TestFinal",
            "AttrFlags": 2
          },
          {
            "Text": " is created, its constructor is invoked and therefore foo gets reassigned which compiler does not allow. A correct way to initialize variable "
          },
          {
            "Text": "foo",
            "AttrFlags": 2
          },
          {
            "Text": " in this case is either:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999724,
        "id": "5270189b-c899-4adb-b6c0-6bd5e9801f1e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999724,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class TestFinal {\n    private static final List foo = new ArrayList();\n    //..\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class TestFinal {\n    private static final List foo = new ArrayList();\n    //..\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999724,
        "id": "e86aa757-38d8-4ad1-993e-85b47f87954d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999724,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "or by using a static initializer:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "or by using a static initializer:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999724,
        "id": "402fb5f1-e592-462a-b0bd-bc61673c5bac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999724,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class TestFinal {\n    private static final List foo;\n    static {\n        foo = new ArrayList();\n    }\n    //..\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class TestFinal {\n    private static final List foo;\n    static {\n        foo = new ArrayList();\n    }\n    //..\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999725,
        "id": "da0e9376-b8f3-4b38-8fd8-83b9f5f10e01",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999725,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "final",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " methods are useful when base class implements some important functionality that derived class is not supposed to change it. They are also faster than non-final methods, because there is no concept of virtual table involved."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "final",
            "AttrFlags": 2
          },
          {
            "Text": " methods are useful when base class implements some important functionality that derived class is not supposed to change it. They are also faster than non-final methods, because there is no concept of virtual table involved."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517999725,
        "id": "96452a41-c074-4451-9b41-8135b03f3ec7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517999725,
        "parent_id": "8e14deca-93ed-4449-995c-51fa29286742",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All wrapper classes in Java are final, such as "
            ],
            [
              "Integer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " etc. Creators of these classes didn’t want that anyone can e.g. extend Integer into his own class and change the basic behavior of Integer class. One of the requirements to make a class immutable is that subclasses may not override methods. The simplest way to do this is to declare the class as "
            ],
            [
              "final",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All wrapper classes in Java are final, such as "
          },
          {
            "Text": "Integer",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Long",
            "AttrFlags": 2
          },
          {
            "Text": " etc. Creators of these classes didn’t want that anyone can e.g. extend Integer into his own class and change the basic behavior of Integer class. One of the requirements to make a class immutable is that subclasses may not override methods. The simplest way to do this is to declare the class as "
          },
          {
            "Text": "final",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "010 final"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}