{
  "ID": "a003d68e-aafe-4b0c-83cd-a5a90cc2c084",
  "Root": {
    "alive": true,
    "content": [
      "255cd6fa-2c67-48f2-9a16-a1770316dd4f",
      "523c4d3b-8f58-44f6-ba03-7208a89d777b",
      "fc23d5cd-ab9e-4749-bfe0-4a8eccc32bbc",
      "dcecd6d3-4efa-4f66-b176-31eb3c2fdbe3",
      "0f7abd8b-b0ac-4766-91c1-ce5b86fa4f03",
      "b9fabfe5-bb8b-445d-98a2-b8b9ffaa8a92",
      "9c1a9529-9933-44a5-a152-c0c8eb6814d6",
      "d5df83db-2e85-4fc5-932f-8be9bd4c0a79",
      "eced90b2-ab40-4a5b-8c50-adb31c3df66f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550518370121,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "a003d68e-aafe-4b0c-83cd-a5a90cc2c084",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551742128849,
    "parent_id": "68d3f97c-3d71-48d3-955c-6eb7411e2d26",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Pitfall - Using exceptions for normal flowcontrol"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370110,
        "id": "255cd6fa-2c67-48f2-9a16-a1770316dd4f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370110,
        "parent_id": "a003d68e-aafe-4b0c-83cd-a5a90cc2c084",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There is a mantra that some Java experts are wont to recite:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There is a mantra that some Java experts are wont to recite:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370117,
        "id": "523c4d3b-8f58-44f6-ba03-7208a89d777b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370117,
        "parent_id": "a003d68e-aafe-4b0c-83cd-a5a90cc2c084",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "“Exceptions should only be used for exceptional cases.”"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "“Exceptions should only be used for exceptional cases.”"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370118,
        "id": "fc23d5cd-ab9e-4749-bfe0-4a8eccc32bbc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370118,
        "parent_id": "a003d68e-aafe-4b0c-83cd-a5a90cc2c084",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "(For example: http://programmers.stackexchange.com/questions/184654 )"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "(For example: http://programmers.stackexchange.com/questions/184654 )"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370118,
        "id": "dcecd6d3-4efa-4f66-b176-31eb3c2fdbe3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370118,
        "parent_id": "a003d68e-aafe-4b0c-83cd-a5a90cc2c084",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The essence of this is that is it is a bad idea (in Java) to use exceptions and exception handling to implement normal flow control. For example, compare these two ways of dealing with a parameter that could be null."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The essence of this is that is it is a bad idea (in Java) to use exceptions and exception handling to implement normal flow control. For example, compare these two ways of dealing with a parameter that could be null."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370119,
        "id": "0f7abd8b-b0ac-4766-91c1-ce5b86fa4f03",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370119,
        "parent_id": "a003d68e-aafe-4b0c-83cd-a5a90cc2c084",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public String truncateWordOrNull(String word, int maxLength) {\n    if (word == null) {\n        return \"\";\n    } else {\n        return word.substring(0, Math.min(word.length(), maxLength));\n    }\n}\n\npublic String truncateWordOrNull(String word, int maxLength) {\n    try {\n        return word.substring(0, Math.min(word.length(), maxLength));\n    } catch (NullPointerException ex) {\n        return \"\";\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public String truncateWordOrNull(String word, int maxLength) {\n    if (word == null) {\n        return \"\";\n    } else {\n        return word.substring(0, Math.min(word.length(), maxLength));\n    }\n}\n\npublic String truncateWordOrNull(String word, int maxLength) {\n    try {\n        return word.substring(0, Math.min(word.length(), maxLength));\n    } catch (NullPointerException ex) {\n        return \"\";\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370120,
        "id": "b9fabfe5-bb8b-445d-98a2-b8b9ffaa8a92",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370120,
        "parent_id": "a003d68e-aafe-4b0c-83cd-a5a90cc2c084",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example, we are (by design) treating the case where "
            ],
            [
              "word",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as if it is an empty word. The two versions deal with "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " either using conventional "
            ],
            [
              "if … else",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " and or "
            ],
            [
              "try … catch",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". How should we decide which version is better?"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example, we are (by design) treating the case where "
          },
          {
            "Text": "word",
            "AttrFlags": 2
          },
          {
            "Text": " is "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": " as if it is an empty word. The two versions deal with "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": " either using conventional "
          },
          {
            "Text": "if … else",
            "AttrFlags": 4
          },
          {
            "Text": " and or "
          },
          {
            "Text": "try … catch",
            "AttrFlags": 4
          },
          {
            "Text": ". How should we decide which version is better?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370120,
        "id": "9c1a9529-9933-44a5-a152-c0c8eb6814d6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370120,
        "parent_id": "a003d68e-aafe-4b0c-83cd-a5a90cc2c084",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The first criterion is readability. While readability is hard to quantify objectively, most programmers would agree that the essential meaning of the first version is easier to discern. Indeed, in order to truly understand the second form, you need to understand that a "
            ],
            [
              "NullPointerException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " cannot be thrown by the "
            ],
            [
              "Math.min",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "String.substring",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " methods."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The first criterion is readability. While readability is hard to quantify objectively, most programmers would agree that the essential meaning of the first version is easier to discern. Indeed, in order to truly understand the second form, you need to understand that a "
          },
          {
            "Text": "NullPointerException",
            "AttrFlags": 2
          },
          {
            "Text": " cannot be thrown by the "
          },
          {
            "Text": "Math.min",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "String.substring",
            "AttrFlags": 2
          },
          {
            "Text": " methods."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370120,
        "id": "d5df83db-2e85-4fc5-932f-8be9bd4c0a79",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370120,
        "parent_id": "a003d68e-aafe-4b0c-83cd-a5a90cc2c084",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The second criterion is efficiency. In releases of Java prior to Java 8, the second version is significantly (orders of magnitude) slower than the first version. In particular, the construction of an exception object entails capturing and recording the stackframes, just in case the stacktrace is required."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The second criterion is efficiency. In releases of Java prior to Java 8, the second version is significantly (orders of magnitude) slower than the first version. In particular, the construction of an exception object entails capturing and recording the stackframes, just in case the stacktrace is required."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370120,
        "id": "eced90b2-ab40-4a5b-8c50-adb31c3df66f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370120,
        "parent_id": "a003d68e-aafe-4b0c-83cd-a5a90cc2c084",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "On the other hand, there are many situations where using exceptions is more readable, more efficient and (sometimes) more correct than using conditional code to deal with “exceptional” events. Indeed, there are rare situations where it is necessary to use them for “non-exceptional” events; i.e. events that occur relatively frequently. For the latter, it is worth looking at ways to reduce the overheads of creating exception objects."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "On the other hand, there are many situations where using exceptions is more readable, more efficient and (sometimes) more correct than using conditional code to deal with “exceptional” events. Indeed, there are rare situations where it is necessary to use them for “non-exceptional” events; i.e. events that occur relatively frequently. For the latter, it is worth looking at ways to reduce the overheads of creating exception objects."
          }
        ]
      }
    ],
    "title": "Pitfall - Using exceptions for normal flowcontrol",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}