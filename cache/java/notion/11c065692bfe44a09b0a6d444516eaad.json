{
  "ID": "11c06569-2bfe-44a0-9b0a-6d444516eaad",
  "Root": {
    "alive": true,
    "content": [
      "ab7109d4-a635-4108-95ec-8e00b57e3047",
      "3a180ea5-cfdd-42b8-8612-eb578507198c",
      "7b2a95eb-ac6e-48e9-a044-1f907e0004d5"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460566118,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "11c06569-2bfe-44a0-9b0a-6d444516eaad",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551767047061,
    "parent_id": "8576ab83-1126-4d17-b0cf-2a0ba47249c1",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Zero instance enum"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460566114,
        "id": "ab7109d4-a635-4108-95ec-8e00b57e3047",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460566114,
        "parent_id": "11c06569-2bfe-44a0-9b0a-6d444516eaad",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "enum Util {\n    /* No instances */;\n\n    public static int clamp(int min, int max, int i) {\n        return Math.min(Math.max(i, min), max);\n    }\n\n    // other utility methods...\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "enum Util {\n    /* No instances */;\n\n    public static int clamp(int min, int max, int i) {\n        return Math.min(Math.max(i, min), max);\n    }\n\n    // other utility methods...\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460566118,
        "id": "3a180ea5-cfdd-42b8-8612-eb578507198c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460566118,
        "parent_id": "11c06569-2bfe-44a0-9b0a-6d444516eaad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Just as "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "can be used for singletons",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/155/enums/5741/implement-singleton-pattern-with-a-single-element-enum"
                ]
              ]
            ],
            [
              " (1 instance classes), it can be used for utility classes (0 instance classes). Just make sure to terminate the (empty) list of enum constants with a "
            ],
            [
              ";",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Just as "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "can be used for singletons",
            "Link": "http://stackoverflow.com/documentation/java/155/enums/5741/implement-singleton-pattern-with-a-single-element-enum"
          },
          {
            "Text": " (1 instance classes), it can be used for utility classes (0 instance classes). Just make sure to terminate the (empty) list of enum constants with a "
          },
          {
            "Text": ";",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460566118,
        "id": "7b2a95eb-ac6e-48e9-a044-1f907e0004d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460566118,
        "parent_id": "11c06569-2bfe-44a0-9b0a-6d444516eaad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "See the question http://stackoverflow.com/questions/25137490/zero-instance-enum-vs-private-constructors-for-preventing-instantiation for a discussion on pro’s and con’s compared to private constructors."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "See the question http://stackoverflow.com/questions/25137490/zero-instance-enum-vs-private-constructors-for-preventing-instantiation for a discussion on pro’s and con’s compared to private constructors."
          }
        ]
      }
    ],
    "title": "Zero instance enum",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}