{
  "ID": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
  "Root": {
    "alive": true,
    "content": [
      "2486ba42-a856-4848-8e5a-cdc18d7af294",
      "060f2da2-712c-49b7-9cc4-3a7a277aae2a",
      "ce20c9d6-cd20-45fe-aeb5-6925bdb4a62e",
      "338c2863-ae0d-4cc9-a86f-5b50dce06dbc",
      "bfb44b94-9834-4c76-9b34-7e5765481ff8",
      "b97ac976-650c-4e3b-b57a-bd0b76368dcd",
      "b0a012bd-cd6b-4605-8c18-d3584f6b6256",
      "4a0cb2aa-079f-49f5-9ec0-f97000c6102b",
      "9bf20627-d5bd-4f8d-ba9f-624488c63e95",
      "fb40846c-f704-4630-be27-c5d11d2e9f01",
      "3cd2559a-a743-459a-8c7f-cbefd49e7af3",
      "4d78917d-92e8-439b-b6de-09d922740ac0",
      "181dc17f-93e8-4076-85a6-9e190339ea16",
      "57677a5c-6495-49c2-a947-89d5e9847840",
      "18c102d6-c888-4645-a8fd-84e53574239e",
      "9c01623d-670b-4e31-8d12-04cd1199af41",
      "7b755c4e-eea3-443f-a69a-99f79848c169",
      "23a3b4dd-cb8a-4176-a643-011b0ec71365",
      "dfc27bde-394c-4cb1-85bb-d5e402267a39",
      "174a6c10-fca1-4f61-90af-5cf1d9303419",
      "922716d9-8962-4ae1-b071-d9bc71a7a2da",
      "52ca2caa-1658-4cfd-885b-f2cf16dd4bae",
      "9a584859-d3cf-40a7-8453-96238f1acc18",
      "0f72e372-7442-4182-bcb6-18c6518b6139",
      "16d49117-ee84-4bbc-897e-02a93ebbcead",
      "b884fceb-1713-4b52-aa97-a72fb888c50d",
      "dba9c4ab-5578-40aa-8302-8ac0e76903ef",
      "7f6ef29a-1a96-42ab-ae6e-a5326819d9fc",
      "c49711f4-61c8-48cc-adde-e525bdffbb1a",
      "f090a4f8-ea93-4f21-8c7a-a0badf348525",
      "388515d6-f171-4af5-aec0-b14e1c6c022d",
      "260ff88b-79b8-4813-8baa-e1b6c690688a",
      "dfaa1022-dc94-4ece-a0b8-78335e98ec21",
      "b1bc2a12-ee56-4ef2-9f6d-0022e4f20d4b",
      "8ed0ddab-0621-4f58-9947-85a5f4eddd8f",
      "f49dd508-34a6-4780-be03-60f6d83461f0",
      "837e6a61-f927-4c4c-a4b7-f42060887056",
      "d604cf74-ee44-4cee-964b-0965ce64bef3",
      "61c4818d-fdfe-42ed-b855-f7dcaffaeb9a",
      "e363e2c0-845c-4ec6-bf7f-378219f9b602",
      "6589c125-8404-43b6-9a33-89b56882d6d2",
      "b01519ac-ef92-4738-a1d7-f3bcf075a83f",
      "79e16018-afce-4cc5-8abf-66581b82a2b1",
      "608e04bf-3f8f-49b3-8ba8-6b0ae4854ef3",
      "6481f237-ffa4-4ff1-95c4-4fc0608c5df2",
      "e39f69b8-4235-4548-a85e-503996f9ff07",
      "bba2b2f0-fe83-4a1c-808c-088a45a42d73",
      "70862cf2-3727-42e4-9c13-cfd600aa4db4"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460116211,
    "id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460116211,
    "parent_id": "39a676e8-4916-4942-a1ec-5020702b7db9",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "080 Creating and reading stacktraces"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116203,
        "id": "2486ba42-a856-4848-8e5a-cdc18d7af294",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116203,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When an exception object is created (i.e. when you "
            ],
            [
              "new",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " it), the "
            ],
            [
              "Throwable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " constructor captures information about the context in which the exception was created. Later on, this information can be output in the form of a stacktrace, which can be used to help diagnose the problem that caused the exception in the first place."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When an exception object is created (i.e. when you "
          },
          {
            "Text": "new",
            "AttrFlags": 2
          },
          {
            "Text": " it), the "
          },
          {
            "Text": "Throwable",
            "AttrFlags": 2
          },
          {
            "Text": " constructor captures information about the context in which the exception was created. Later on, this information can be output in the form of a stacktrace, which can be used to help diagnose the problem that caused the exception in the first place."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116204,
        "id": "060f2da2-712c-49b7-9cc4-3a7a277aae2a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116204,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Printing a stacktrace"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Printing a stacktrace"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116204,
        "id": "ce20c9d6-cd20-45fe-aeb5-6925bdb4a62e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116204,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Printing a stacktrace is simply a matter of calling the "
            ],
            [
              "printStackTrace()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method. For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Printing a stacktrace is simply a matter of calling the "
          },
          {
            "Text": "printStackTrace()",
            "AttrFlags": 2
          },
          {
            "Text": " method. For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116204,
        "id": "338c2863-ae0d-4cc9-a86f-5b50dce06dbc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116204,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "try {\n    int a = 0;\n    int b = 0;\n    int c = a / b;\n} catch (ArithmeticException ex) {\n    // This prints the stacktrace to standard output\n    ex.printStackTrace();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "try {\n    int a = 0;\n    int b = 0;\n    int c = a / b;\n} catch (ArithmeticException ex) {\n    // This prints the stacktrace to standard output\n    ex.printStackTrace();\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116204,
        "id": "bfb44b94-9834-4c76-9b34-7e5765481ff8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116204,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "printStackTrace()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method without arguments will print to the application’s standard output; i.e. the current "
            ],
            [
              "System.out",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". There are also "
            ],
            [
              "printStackTrace(PrintStream)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "printStackTrace(PrintWriter)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " overloads that print to a specified "
            ],
            [
              "Stream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "Writer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "printStackTrace()",
            "AttrFlags": 2
          },
          {
            "Text": " method without arguments will print to the application’s standard output; i.e. the current "
          },
          {
            "Text": "System.out",
            "AttrFlags": 2
          },
          {
            "Text": ". There are also "
          },
          {
            "Text": "printStackTrace(PrintStream)",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "printStackTrace(PrintWriter)",
            "AttrFlags": 2
          },
          {
            "Text": " overloads that print to a specified "
          },
          {
            "Text": "Stream",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "Writer",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116204,
        "id": "b97ac976-650c-4e3b-b57a-bd0b76368dcd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116204,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Notes:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Notes:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116205,
        "id": "b0a012bd-cd6b-4605-8c18-d3584f6b6256",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116205,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The stacktrace does not include the details of the exception itself. You can use the "
            ],
            [
              "toString()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method to get those details; e.g."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The stacktrace does not include the details of the exception itself. You can use the "
          },
          {
            "Text": "toString()",
            "AttrFlags": 2
          },
          {
            "Text": " method to get those details; e.g."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116205,
        "id": "4a0cb2aa-079f-49f5-9ec0-f97000c6102b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116205,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Print exception and stacktrace\nSystem.out.println(ex);\nex.printStackTrace();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Print exception and stacktrace\nSystem.out.println(ex);\nex.printStackTrace();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116205,
        "id": "9bf20627-d5bd-4f8d-ba9f-624488c63e95",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116205,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Stacktrace printing should be used sparingly; see http://stackoverflow.com/documentation/java/5381/java-pitfalls-exception-usage/19955/pitfall-excessive-or-inappropriate-stacktraces#t=201610200112090788291 . It is often better to use a logging framework, and pass the exception object to be logged."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Stacktrace printing should be used sparingly; see http://stackoverflow.com/documentation/java/5381/java-pitfalls-exception-usage/19955/pitfall-excessive-or-inappropriate-stacktraces#t=201610200112090788291 . It is often better to use a logging framework, and pass the exception object to be logged."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116205,
        "id": "fb40846c-f704-4630-be27-c5d11d2e9f01",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116205,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Understanding a stacktrace"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Understanding a stacktrace"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116205,
        "id": "3cd2559a-a743-459a-8c7f-cbefd49e7af3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116205,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consider the following simple program consisting of two classes in two files. (We have shown the filenames and added line numbers for illustration purposes.)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consider the following simple program consisting of two classes in two files. (We have shown the filenames and added line numbers for illustration purposes.)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116205,
        "id": "4d78917d-92e8-439b-b6de-09d922740ac0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116205,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "File: \"Main.java\"\n1   public class Main {\n2       public static void main(String[] args) {\n3           new Test().foo();\n4       }\n5   }\n\nFile: \"Test.java\"\n1   class Test {\n2       public void foo() {\n3           bar();\n4       }\n5   \n6       public int bar() {\n7           int a = 1;\n8           int b = 0;\n9           return a / b;\n10      }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "File: \"Main.java\"\n1   public class Main {\n2       public static void main(String[] args) {\n3           new Test().foo();\n4       }\n5   }\n\nFile: \"Test.java\"\n1   class Test {\n2       public void foo() {\n3           bar();\n4       }\n5   \n6       public int bar() {\n7           int a = 1;\n8           int b = 0;\n9           return a / b;\n10      }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116205,
        "id": "181dc17f-93e8-4076-85a6-9e190339ea16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116205,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When these files are compiled and run, we will get the following output."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When these files are compiled and run, we will get the following output."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116205,
        "id": "57677a5c-6495-49c2-a947-89d5e9847840",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116205,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n        at Test.bar(Test.java:9)\n        at Test.foo(Test.java:3)\n        at Main.main(Main.java:3)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n        at Test.bar(Test.java:9)\n        at Test.foo(Test.java:3)\n        at Main.main(Main.java:3)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116206,
        "id": "18c102d6-c888-4645-a8fd-84e53574239e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116206,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let us read this one line at a time to figure out what it is telling us."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let us read this one line at a time to figure out what it is telling us."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116206,
        "id": "9c01623d-670b-4e31-8d12-04cd1199af41",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116206,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Line #1 tells us that the thread called “main” has terminated due to an uncaught exception. The full name of the exception is "
            ],
            [
              "java.lang.ArithmeticException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and the exception message is “/ by zero”."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Line #1 tells us that the thread called “main” has terminated due to an uncaught exception. The full name of the exception is "
          },
          {
            "Text": "java.lang.ArithmeticException",
            "AttrFlags": 2
          },
          {
            "Text": ", and the exception message is “/ by zero”."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116206,
        "id": "7b755c4e-eea3-443f-a69a-99f79848c169",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116206,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If we look up the javadocs for this exception, it says:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If we look up the javadocs for this exception, it says:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116206,
        "id": "23a3b4dd-cb8a-4176-a643-011b0ec71365",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116206,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Thrown when an exceptional arithmetic condition has occurred. For example, an integer “divide by zero” throws an instance of this class."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Thrown when an exceptional arithmetic condition has occurred. For example, an integer “divide by zero” throws an instance of this class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116206,
        "id": "dfc27bde-394c-4cb1-85bb-d5e402267a39",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116206,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Indeed, the message “/ by zero” is a strong hint that the cause of the exception is that some code has attempted to divide something by zero. But what?"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Indeed, the message “/ by zero” is a strong hint that the cause of the exception is that some code has attempted to divide something by zero. But what?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116206,
        "id": "174a6c10-fca1-4f61-90af-5cf1d9303419",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116206,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The remaining 3 lines are the stack trace. Each line represents a method (or constructor) call on the call stack, and each one tells us three things:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The remaining 3 lines are the stack trace. Each line represents a method (or constructor) call on the call stack, and each one tells us three things:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116206,
        "id": "922716d9-8962-4ae1-b071-d9bc71a7a2da",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116206,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the name of the class and method that was being executed,"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "the name of the class and method that was being executed,"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116207,
        "id": "52ca2caa-1658-4cfd-885b-f2cf16dd4bae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116207,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the source code filename,"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "the source code filename,"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116207,
        "id": "9a584859-d3cf-40a7-8453-96238f1acc18",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116207,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the source code line number of the statement that was being executed"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "the source code line number of the statement that was being executed"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116207,
        "id": "0f72e372-7442-4182-bcb6-18c6518b6139",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116207,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These lines of a stacktrace are listed with the frame for the current call at the top. The top frame in our example above is in the "
            ],
            [
              "Test.bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method, and at line 9 of the Test.java file. That is the following line:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These lines of a stacktrace are listed with the frame for the current call at the top. The top frame in our example above is in the "
          },
          {
            "Text": "Test.bar",
            "AttrFlags": 2
          },
          {
            "Text": " method, and at line 9 of the Test.java file. That is the following line:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116207,
        "id": "16d49117-ee84-4bbc-897e-02a93ebbcead",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116207,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "return a / b;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "return a / b;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116207,
        "id": "b884fceb-1713-4b52-aa97-a72fb888c50d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116207,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If we look a couple of lines earlier in the file to where "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is initialized, it is apparent that "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will have the value zero. We can say without any doubt that this is the cause of the exception."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If we look a couple of lines earlier in the file to where "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": " is initialized, it is apparent that "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": " will have the value zero. We can say without any doubt that this is the cause of the exception."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116207,
        "id": "dba9c4ab-5578-40aa-8302-8ac0e76903ef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116207,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If we needed to go further, we can see from the stacktrace that "
            ],
            [
              "bar()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " was called from "
            ],
            [
              "foo()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " at line 3 of Test.java, and that "
            ],
            [
              "foo()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " was in turn called from "
            ],
            [
              "Main.main()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If we needed to go further, we can see from the stacktrace that "
          },
          {
            "Text": "bar()",
            "AttrFlags": 2
          },
          {
            "Text": " was called from "
          },
          {
            "Text": "foo()",
            "AttrFlags": 2
          },
          {
            "Text": " at line 3 of Test.java, and that "
          },
          {
            "Text": "foo()",
            "AttrFlags": 2
          },
          {
            "Text": " was in turn called from "
          },
          {
            "Text": "Main.main()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116208,
        "id": "7f6ef29a-1a96-42ab-ae6e-a5326819d9fc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116208,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: The class and method names in the stack frames are the internal names for the classes and methods. You will need to recognize the following unusual cases:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: The class and method names in the stack frames are the internal names for the classes and methods. You will need to recognize the following unusual cases:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116208,
        "id": "c49711f4-61c8-48cc-adde-e525bdffbb1a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116208,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A nested or inner class will look like “OuterClass$InnerClass”."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "A nested or inner class will look like “OuterClass$InnerClass”."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116208,
        "id": "f090a4f8-ea93-4f21-8c7a-a0badf348525",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116208,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An anonymous inner class will look like “OuterClass$1”, “OuterClass$2”, etcetera."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "An anonymous inner class will look like “OuterClass$1”, “OuterClass$2”, etcetera."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116208,
        "id": "388515d6-f171-4af5-aec0-b14e1c6c022d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116208,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When code in a constructor, instance field initializer or an instance initializer block is being executed, the method name will be “”."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "When code in a constructor, instance field initializer or an instance initializer block is being executed, the method name will be “”."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116208,
        "id": "260ff88b-79b8-4813-8baa-e1b6c690688a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116208,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When code in a static field initializer or static initializer block is being executed, the method name will be “”."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "When code in a static field initializer or static initializer block is being executed, the method name will be “”."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116208,
        "id": "dfaa1022-dc94-4ece-a0b8-78335e98ec21",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116208,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "(In some versions of Java, the stacktrace formatting code will detect and elide repeated stackframe sequences, as can occur when an application fails due to excessive recursion.)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "(In some versions of Java, the stacktrace formatting code will detect and elide repeated stackframe sequences, as can occur when an application fails due to excessive recursion.)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116208,
        "id": "b1bc2a12-ee56-4ef2-9f6d-0022e4f20d4b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116209,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Exception chaining and nested stacktraces"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Exception chaining and nested stacktraces"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116209,
        "id": "8ed0ddab-0621-4f58-9947-85a5f4eddd8f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116209,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Exception chaining happens when a piece of code catches an exception, and then creates and throws a new one, passing the first exception as the cause. Here is an example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Exception chaining happens when a piece of code catches an exception, and then creates and throws a new one, passing the first exception as the cause. Here is an example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116209,
        "id": "f49dd508-34a6-4780-be03-60f6d83461f0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116209,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "File: Test,java\n1   public class Test {\n2      int foo() {\n3           return 0 / 0;\n4      }\n5\n6       public Test() {\n7           try {\n8               foo();\n9           } catch (ArithmeticException ex) {\n10              throw new RuntimeException(\"A bad thing happened\", ex);\n11          }\n12      }\n13\n14      public static void main(String[] args) {\n15          new Test();\n16      }\n17  }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "File: Test,java\n1   public class Test {\n2      int foo() {\n3           return 0 / 0;\n4      }\n5\n6       public Test() {\n7           try {\n8               foo();\n9           } catch (ArithmeticException ex) {\n10              throw new RuntimeException(\"A bad thing happened\", ex);\n11          }\n12      }\n13\n14      public static void main(String[] args) {\n15          new Test();\n16      }\n17  }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116209,
        "id": "837e6a61-f927-4c4c-a4b7-f42060887056",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116209,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When the above class is compiled and run, we get the following stacktrace:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When the above class is compiled and run, we get the following stacktrace:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116209,
        "id": "d604cf74-ee44-4cee-964b-0965ce64bef3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116209,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Exception in thread \"main\" java.lang.RuntimeException: A bad thing happened\n        at Test.\u003cinit\u003e(Test.java:10)\n        at Test.main(Test.java:15)\nCaused by: java.lang.ArithmeticException: / by zero\n        at Test.foo(Test.java:3)\n        at Test.\u003cinit\u003e(Test.java:8)\n        ... 1 more"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Exception in thread \"main\" java.lang.RuntimeException: A bad thing happened\n        at Test.\u003cinit\u003e(Test.java:10)\n        at Test.main(Test.java:15)\nCaused by: java.lang.ArithmeticException: / by zero\n        at Test.foo(Test.java:3)\n        at Test.\u003cinit\u003e(Test.java:8)\n        ... 1 more",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116209,
        "id": "61c4818d-fdfe-42ed-b855-f7dcaffaeb9a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116209,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The stacktrace starts with the class name, method and call stack for the exception that (in this case) caused the application to crash. This is followed by a “Caused by:” line that reports the "
            ],
            [
              "cause",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " exception. The class name and message are reported, followed by the cause exception’s stack frames. The trace ends with an “… N more” which indicates that the last N frames are the same as for the previous exception."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The stacktrace starts with the class name, method and call stack for the exception that (in this case) caused the application to crash. This is followed by a “Caused by:” line that reports the "
          },
          {
            "Text": "cause",
            "AttrFlags": 2
          },
          {
            "Text": " exception. The class name and message are reported, followed by the cause exception’s stack frames. The trace ends with an “… N more” which indicates that the last N frames are the same as for the previous exception."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116209,
        "id": "e363e2c0-845c-4ec6-bf7f-378219f9b602",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116209,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The “Caused by:” is only included in the output when the primary exception’s "
            ],
            [
              "cause",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "). Exceptions can be chained indefinitely, and in that case the stacktrace can have multiple “Caused by:” traces."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The “Caused by:” is only included in the output when the primary exception’s "
          },
          {
            "Text": "cause",
            "AttrFlags": 2
          },
          {
            "Text": " is not "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": "). Exceptions can be chained indefinitely, and in that case the stacktrace can have multiple “Caused by:” traces."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116209,
        "id": "6589c125-8404-43b6-9a33-89b56882d6d2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116209,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: the "
            ],
            [
              "cause",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " mechanism was only exposed in the "
            ],
            [
              "Throwable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " API in Java 1.4.0. Prior to that, exception chaining needed to be implemented by the application using a custom exception field to represent the cause, and a custom "
            ],
            [
              "printStackTrace",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: the "
          },
          {
            "Text": "cause",
            "AttrFlags": 2
          },
          {
            "Text": " mechanism was only exposed in the "
          },
          {
            "Text": "Throwable",
            "AttrFlags": 2
          },
          {
            "Text": " API in Java 1.4.0. Prior to that, exception chaining needed to be implemented by the application using a custom exception field to represent the cause, and a custom "
          },
          {
            "Text": "printStackTrace",
            "AttrFlags": 2
          },
          {
            "Text": " method."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116209,
        "id": "b01519ac-ef92-4738-a1d7-f3bcf075a83f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116209,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Capturing a stacktrace as a String"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Capturing a stacktrace as a String"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116210,
        "id": "79e16018-afce-4cc5-8abf-66581b82a2b1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116210,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sometimes, an application needs to be able to capture a stacktrace as a Java "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", so that it can be used for other purposes. The general approach for doing this is to create a temporary "
            ],
            [
              "OutputStream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "Writer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that writes to an in-memory buffer and pass that to the "
            ],
            [
              "printStackTrace(...)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sometimes, an application needs to be able to capture a stacktrace as a Java "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": ", so that it can be used for other purposes. The general approach for doing this is to create a temporary "
          },
          {
            "Text": "OutputStream",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "Writer",
            "AttrFlags": 2
          },
          {
            "Text": " that writes to an in-memory buffer and pass that to the "
          },
          {
            "Text": "printStackTrace(...)",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116211,
        "id": "608e04bf-3f8f-49b3-8ba8-6b0ae4854ef3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116211,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "Apache Commons",
              [
                [
                  "a",
                  "http://commons.apache.org/proper/commons-lang/javadocs/api-2.6/org/apache/commons/lang/exception/ExceptionUtils.html#getStackTrace(java.lang.Throwable)"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Guava",
              [
                [
                  "a",
                  "http://google.github.io/guava/releases/snapshot/api/docs/com/google/common/base/Throwables.html#getStackTraceAsString(java.lang.Throwable)"
                ]
              ]
            ],
            [
              " libraries provide utility methods for capturing a stacktrace as a String:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "Apache Commons",
            "Link": "http://commons.apache.org/proper/commons-lang/javadocs/api-2.6/org/apache/commons/lang/exception/ExceptionUtils.html#getStackTrace(java.lang.Throwable)"
          },
          {
            "Text": " and "
          },
          {
            "Text": "Guava",
            "Link": "http://google.github.io/guava/releases/snapshot/api/docs/com/google/common/base/Throwables.html#getStackTraceAsString(java.lang.Throwable)"
          },
          {
            "Text": " libraries provide utility methods for capturing a stacktrace as a String:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116211,
        "id": "6481f237-ffa4-4ff1-95c4-4fc0608c5df2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116211,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "org.apache.commons.lang.exception.ExceptionUtils.getStackTrace(Throwable)\n\ncom.google.common.base.Throwables.getStackTraceAsString(Throwable)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "org.apache.commons.lang.exception.ExceptionUtils.getStackTrace(Throwable)\n\ncom.google.common.base.Throwables.getStackTraceAsString(Throwable)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116211,
        "id": "e39f69b8-4235-4548-a85e-503996f9ff07",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116211,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you cannot use third party libraries in your code base, then the following method with do the task:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you cannot use third party libraries in your code base, then the following method with do the task:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116211,
        "id": "bba2b2f0-fe83-4a1c-808c-088a45a42d73",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116211,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "/**\n  * Returns the string representation of the stack trace.\n  *\n  * @param throwable the throwable\n  * @return the string.\n  */\n public static String stackTraceToString(Throwable throwable) {\n     StringWriter stringWriter = new StringWriter();\n     throwable.printStackTrace(new PrintWriter(stringWriter));\n     return stringWriter.toString();\n }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "/**\n  * Returns the string representation of the stack trace.\n  *\n  * @param throwable the throwable\n  * @return the string.\n  */\n public static String stackTraceToString(Throwable throwable) {\n     StringWriter stringWriter = new StringWriter();\n     throwable.printStackTrace(new PrintWriter(stringWriter));\n     return stringWriter.toString();\n }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460116211,
        "id": "70862cf2-3727-42e4-9c13-cfd600aa4db4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460116211,
        "parent_id": "309a6c52-997a-4192-8fbe-50a13d8e55fb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that if your intention is to analyze the stacktrace, it is simpler to use "
            ],
            [
              "getStackTrace()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "getCause()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " than to attempt to parse a stacktrace."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that if your intention is to analyze the stacktrace, it is simpler to use "
          },
          {
            "Text": "getStackTrace()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "getCause()",
            "AttrFlags": 2
          },
          {
            "Text": " than to attempt to parse a stacktrace."
          }
        ]
      }
    ],
    "title": "080 Creating and reading stacktraces"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}