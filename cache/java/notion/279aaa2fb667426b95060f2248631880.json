{
  "ID": "279aaa2f-b667-426b-9506-0f2248631880",
  "Root": {
    "alive": true,
    "content": [
      "d47cbe6b-c4a1-4995-9a87-3c912cdc0f7f",
      "3ecbe308-26f8-4842-a55d-915c0b509556",
      "25878bd5-f876-4d60-8636-13d576addaa4",
      "d968c39b-00e7-45e3-a20a-59ef7a637486",
      "91a6aa82-8eb0-4bed-934b-74e675800b37",
      "0456e69a-542e-4cac-a7dd-7dbf8f0a2e45",
      "a48d790a-33fc-4322-9aaf-f43ca4245a02",
      "4c6097b7-2667-410c-bb6f-e3ef2d96035f",
      "c3d14fa2-b810-4ebc-8f46-579f843643d4",
      "03298c36-7388-4463-9759-81b5215a105d",
      "8163d72a-98aa-4286-bbbf-2e6a36393690",
      "4224e02a-8385-4013-9f5d-a238fbfc45ed",
      "881d9b1e-13ed-47e7-b3ce-4c66e551c7cc",
      "801d11b6-8787-4322-acd3-ba1e4d6c0ff4",
      "e3afe4d1-58cf-4c46-bbcc-d90d1e288561",
      "fddb2dbb-03ae-44a5-b33d-a409f7049757",
      "7ee7e3ce-9afe-4f79-9239-cd12b0b36358",
      "50587ab1-a32a-4073-bb25-d6c7f3bba0db",
      "fc150bb1-3b98-4739-b99e-c47e56c4a38f",
      "ec920c95-b247-4a21-8edf-fa3e30e46543",
      "51402e9c-305f-43d1-be9c-9f4bbbc65f75",
      "a948c5ea-76a9-40a7-a5ca-dd34a1f60429",
      "f66d6488-a5af-43d4-8bfe-7b7cf47af813"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550461117177,
    "id": "279aaa2f-b667-426b-9506-0f2248631880",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550461117177,
    "parent_id": "2e3af3b7-fb1a-45ea-9c61-94dcd8ba030d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "030 Versioning and serialVersionUID"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117171,
        "id": "d47cbe6b-c4a1-4995-9a87-3c912cdc0f7f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117171,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When you implement "
            ],
            [
              "java.io.Serializable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface to make a class serializable, the compiler looks for a "
            ],
            [
              "static final",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " field named "
            ],
            [
              "serialVersionUID",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " of type "
            ],
            [
              "long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". If the class doesn’t have this field declared explicitly then the compiler will create one such field and assign it with a value which comes out of a implementation dependent computation of "
            ],
            [
              "serialVersionUID",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This computation depends upon various aspects of the class and it follows the "
            ],
            [
              "Object Serialization Specifications",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/platform/serialization/spec/serialTOC.html"
                ]
              ]
            ],
            [
              " given by Sun. But, the value is not guaranteed to be the same across all compiler implementations."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When you implement "
          },
          {
            "Text": "java.io.Serializable",
            "AttrFlags": 2
          },
          {
            "Text": " interface to make a class serializable, the compiler looks for a "
          },
          {
            "Text": "static final",
            "AttrFlags": 2
          },
          {
            "Text": " field named "
          },
          {
            "Text": "serialVersionUID",
            "AttrFlags": 2
          },
          {
            "Text": " of type "
          },
          {
            "Text": "long",
            "AttrFlags": 2
          },
          {
            "Text": ". If the class doesn’t have this field declared explicitly then the compiler will create one such field and assign it with a value which comes out of a implementation dependent computation of "
          },
          {
            "Text": "serialVersionUID",
            "AttrFlags": 2
          },
          {
            "Text": ". This computation depends upon various aspects of the class and it follows the "
          },
          {
            "Text": "Object Serialization Specifications",
            "Link": "https://docs.oracle.com/javase/7/docs/platform/serialization/spec/serialTOC.html"
          },
          {
            "Text": " given by Sun. But, the value is not guaranteed to be the same across all compiler implementations."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117172,
        "id": "3ecbe308-26f8-4842-a55d-915c0b509556",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117172,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This value is used for checking the compatibility of the classes with respect to serialization and this is done while de-serializing a saved object. The Serialization Runtime verifies that "
            ],
            [
              "serialVersionUID",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " read from the de-serialized data and the "
            ],
            [
              "serialVersionUID",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " declared in the class are exactly the same. If that is not the case, it throws an "
            ],
            [
              "InvalidClassException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This value is used for checking the compatibility of the classes with respect to serialization and this is done while de-serializing a saved object. The Serialization Runtime verifies that "
          },
          {
            "Text": "serialVersionUID",
            "AttrFlags": 2
          },
          {
            "Text": " read from the de-serialized data and the "
          },
          {
            "Text": "serialVersionUID",
            "AttrFlags": 2
          },
          {
            "Text": " declared in the class are exactly the same. If that is not the case, it throws an "
          },
          {
            "Text": "InvalidClassException",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117173,
        "id": "25878bd5-f876-4d60-8636-13d576addaa4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117173,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It’s highly recommended that you explicitly declare and initialize the static, final field of type long and named ‘serialVersionUID’ in all your classes you want to make Serializable instead of relying on the default computation of the value for this field even if you are not gonna use versioning. "
            ],
            [
              "‘serialVersionUID’ computation is extremely sensitive and may vary from one compiler implementation to another and hence you may turn up getting the ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "InvalidClassException",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " even for the same class just because you used different compiler implementations on the sender and the receiver ends of the serialization process.",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It’s highly recommended that you explicitly declare and initialize the static, final field of type long and named ‘serialVersionUID’ in all your classes you want to make Serializable instead of relying on the default computation of the value for this field even if you are not gonna use versioning. "
          },
          {
            "Text": "‘serialVersionUID’ computation is extremely sensitive and may vary from one compiler implementation to another and hence you may turn up getting the ",
            "AttrFlags": 1
          },
          {
            "Text": "InvalidClassException",
            "AttrFlags": 3
          },
          {
            "Text": " even for the same class just because you used different compiler implementations on the sender and the receiver ends of the serialization process.",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117173,
        "id": "d968c39b-00e7-45e3-a20a-59ef7a637486",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117173,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Example implements Serializable {          \n    static final long serialVersionUID = 1L /*or some other value*/;\n    //...\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Example implements Serializable {          \n    static final long serialVersionUID = 1L /*or some other value*/;\n    //...\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117173,
        "id": "91a6aa82-8eb0-4bed-934b-74e675800b37",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117173,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As long as "
            ],
            [
              "serialVersionUID",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the same, Java Serialization can handle different versions of a class. Compatible and incompatible changes are;"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As long as "
          },
          {
            "Text": "serialVersionUID",
            "AttrFlags": 2
          },
          {
            "Text": " is the same, Java Serialization can handle different versions of a class. Compatible and incompatible changes are;"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117173,
        "id": "0456e69a-542e-4cac-a7dd-7dbf8f0a2e45",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117173,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Compatible Changes"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Compatible Changes"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117174,
        "id": "a48d790a-33fc-4322-9aaf-f43ca4245a02",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117174,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Adding fields :",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " When the class being reconstituted has a field that does not occur in the stream, that field in the object will be initialized to the default value for its type. If class-specific initialization is needed, the class may provide a readObject method that can initialize the field to nondefault values."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Adding fields :",
            "AttrFlags": 1
          },
          {
            "Text": " When the class being reconstituted has a field that does not occur in the stream, that field in the object will be initialized to the default value for its type. If class-specific initialization is needed, the class may provide a readObject method that can initialize the field to nondefault values."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117174,
        "id": "4c6097b7-2667-410c-bb6f-e3ef2d96035f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117174,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Adding classes :",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " The stream will contain the type hierarchy of each object in the stream. Comparing this hierarchy in the stream with the current class can detect additional classes. Since there is no information in the stream from which to initialize the object, the class’s fields will be initialized to the default values."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Adding classes :",
            "AttrFlags": 1
          },
          {
            "Text": " The stream will contain the type hierarchy of each object in the stream. Comparing this hierarchy in the stream with the current class can detect additional classes. Since there is no information in the stream from which to initialize the object, the class’s fields will be initialized to the default values."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117174,
        "id": "c3d14fa2-b810-4ebc-8f46-579f843643d4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117174,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Removing classes :",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Comparing the class hierarchy in the stream with that of the current class can detect that a class has been deleted. In this case, the fields and objects corresponding to that class are read from the stream. Primitive fields are discarded, but the objects referenced by the deleted class are created, since they may be referred to later in the stream. They will be garbage-collected when the stream is garbage-collected or reset."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Removing classes :",
            "AttrFlags": 1
          },
          {
            "Text": " Comparing the class hierarchy in the stream with that of the current class can detect that a class has been deleted. In this case, the fields and objects corresponding to that class are read from the stream. Primitive fields are discarded, but the objects referenced by the deleted class are created, since they may be referred to later in the stream. They will be garbage-collected when the stream is garbage-collected or reset."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117175,
        "id": "03298c36-7388-4463-9759-81b5215a105d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117175,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Adding writeObject/readObject methods :",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " If the version reading the stream has these methods then readObject is expected, as usual, to read the required data written to the stream by the default serialization. It should call defaultReadObject first before reading any optional data. The writeObject method is expected as usual to call defaultWriteObject to write the required data and then may write optional data."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Adding writeObject/readObject methods :",
            "AttrFlags": 1
          },
          {
            "Text": " If the version reading the stream has these methods then readObject is expected, as usual, to read the required data written to the stream by the default serialization. It should call defaultReadObject first before reading any optional data. The writeObject method is expected as usual to call defaultWriteObject to write the required data and then may write optional data."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117175,
        "id": "8163d72a-98aa-4286-bbbf-2e6a36393690",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117175,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Adding java.io.Serializable :",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " This is equivalent to adding types. There will be no values in the stream for this class so its fields will be initialized to default values. The support for subclassing nonserializable classes requires that the class’s supertype have a no-arg constructor and the class itself will be initialized to default values. If the no-arg constructor is not available, the InvalidClassException is thrown."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Adding java.io.Serializable :",
            "AttrFlags": 1
          },
          {
            "Text": " This is equivalent to adding types. There will be no values in the stream for this class so its fields will be initialized to default values. The support for subclassing nonserializable classes requires that the class’s supertype have a no-arg constructor and the class itself will be initialized to default values. If the no-arg constructor is not available, the InvalidClassException is thrown."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117175,
        "id": "4224e02a-8385-4013-9f5d-a238fbfc45ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117175,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Changing the access to a field :",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " The access modifiers public, package, protected, and private have no effect on the ability of serialization to assign values to the fields."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Changing the access to a field :",
            "AttrFlags": 1
          },
          {
            "Text": " The access modifiers public, package, protected, and private have no effect on the ability of serialization to assign values to the fields."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117175,
        "id": "881d9b1e-13ed-47e7-b3ce-4c66e551c7cc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117175,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Changing a field from static to nonstatic or transient to nontransient :",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " When relying on default serialization to compute the serializable fields, this change is equivalent to adding a field to the class. The new field will be written to the stream but earlier classes will ignore the value since serialization will not assign values to static or transient fields."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Changing a field from static to nonstatic or transient to nontransient :",
            "AttrFlags": 1
          },
          {
            "Text": " When relying on default serialization to compute the serializable fields, this change is equivalent to adding a field to the class. The new field will be written to the stream but earlier classes will ignore the value since serialization will not assign values to static or transient fields."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117175,
        "id": "801d11b6-8787-4322-acd3-ba1e4d6c0ff4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117175,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Incompatible Changes"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Incompatible Changes"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117176,
        "id": "e3afe4d1-58cf-4c46-bbcc-d90d1e288561",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117176,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Deleting fields :",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " If a field is deleted in a class, the stream written will not contain its value. When the stream is read by an earlier class, the value of the field will be set to the default value because no value is available in the stream. However, this default value may adversely impair the ability of the earlier version to fulfill its contract."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Deleting fields :",
            "AttrFlags": 1
          },
          {
            "Text": " If a field is deleted in a class, the stream written will not contain its value. When the stream is read by an earlier class, the value of the field will be set to the default value because no value is available in the stream. However, this default value may adversely impair the ability of the earlier version to fulfill its contract."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117176,
        "id": "fddb2dbb-03ae-44a5-b33d-a409f7049757",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117176,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Moving classes up or down the hierarchy :",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " This cannot be allowed since the data in the stream appears in the wrong sequence."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Moving classes up or down the hierarchy :",
            "AttrFlags": 1
          },
          {
            "Text": " This cannot be allowed since the data in the stream appears in the wrong sequence."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117176,
        "id": "7ee7e3ce-9afe-4f79-9239-cd12b0b36358",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117176,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Changing a nonstatic field to static or a nontransient field to transient :",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " When relying on default serialization, this change is equivalent to deleting a field from the class. This version of the class will not write that data to the stream, so it will not be available to be read by earlier versions of the class. As when deleting a field, the field of the earlier version will be initialized to the default value, which can cause the class to fail in unexpected ways."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Changing a nonstatic field to static or a nontransient field to transient :",
            "AttrFlags": 1
          },
          {
            "Text": " When relying on default serialization, this change is equivalent to deleting a field from the class. This version of the class will not write that data to the stream, so it will not be available to be read by earlier versions of the class. As when deleting a field, the field of the earlier version will be initialized to the default value, which can cause the class to fail in unexpected ways."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117176,
        "id": "50587ab1-a32a-4073-bb25-d6c7f3bba0db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117176,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Changing the declared type of a primitive field :",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Each version of the class writes the data with its declared type. Earlier versions of the class attempting to read the field will fail because the type of the data in the stream does not match the type of the field."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Changing the declared type of a primitive field :",
            "AttrFlags": 1
          },
          {
            "Text": " Each version of the class writes the data with its declared type. Earlier versions of the class attempting to read the field will fail because the type of the data in the stream does not match the type of the field."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117176,
        "id": "fc150bb1-3b98-4739-b99e-c47e56c4a38f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117176,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Changing the writeObject or readObject method so that it no longer writes or reads the default field data or changing it so that it attempts to write it or read it when the previous version did not. The default field data must consistently either appear or not appear in the stream."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Changing the writeObject or readObject method so that it no longer writes or reads the default field data or changing it so that it attempts to write it or read it when the previous version did not. The default field data must consistently either appear or not appear in the stream."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117177,
        "id": "ec920c95-b247-4a21-8edf-fa3e30e46543",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117177,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Changing a class from Serializable to Externalizable or vice versa is an incompatible change since the stream will contain data that is incompatible with the implementation of the available class."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Changing a class from Serializable to Externalizable or vice versa is an incompatible change since the stream will contain data that is incompatible with the implementation of the available class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117177,
        "id": "51402e9c-305f-43d1-be9c-9f4bbbc65f75",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117177,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Changing a class from a non-enum type to an enum type or vice versa since the stream will contain data that is incompatible with the implementation of the available class."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Changing a class from a non-enum type to an enum type or vice versa since the stream will contain data that is incompatible with the implementation of the available class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117177,
        "id": "a948c5ea-76a9-40a7-a5ca-dd34a1f60429",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117177,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Removing either Serializable or Externalizable is an incompatible change since when written it will no longer supply the fields needed by older versions of the class."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Removing either Serializable or Externalizable is an incompatible change since when written it will no longer supply the fields needed by older versions of the class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461117177,
        "id": "f66d6488-a5af-43d4-8bfe-7b7cf47af813",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461117177,
        "parent_id": "279aaa2f-b667-426b-9506-0f2248631880",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Adding the writeReplace or readResolve method to a class is incompatible if the behavior would produce an object that is incompatible with any older version of the class."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Adding the writeReplace or readResolve method to a class is incompatible if the behavior would produce an object that is incompatible with any older version of the class."
          }
        ]
      }
    ],
    "title": "030 Versioning and serialVersionUID"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}