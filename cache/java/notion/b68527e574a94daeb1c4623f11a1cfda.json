{
  "ID": "b68527e5-74a9-4dae-b1c4-623f11a1cfda",
  "Root": {
    "alive": true,
    "content": [
      "8635724e-8931-4c36-adfd-b7af27b739a8",
      "d25e397c-cba8-4691-b6b7-9c5d95b13365",
      "a7080acf-15d5-4207-bb74-5381ad50d0f8",
      "1dba7527-261d-47dd-8bce-e9ab16bd36c1",
      "6962c89e-0a35-4d98-a330-f775edfbec9a",
      "ce116bff-fe09-47cc-8ad1-6d9f702fdb2f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550463262338,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "b68527e5-74a9-4dae-b1c4-623f11a1cfda",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551747644926,
    "parent_id": "99f725fb-1166-4771-8bc9-95eaef31fd78",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Parsing and navigating a document using the DOM API"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463262335,
        "id": "8635724e-8931-4c36-adfd-b7af27b739a8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463262335,
        "parent_id": "b68527e5-74a9-4dae-b1c4-623f11a1cfda",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Considering the following document :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Considering the following document :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463262337,
        "id": "d25e397c-cba8-4691-b6b7-9c5d95b13365",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463262337,
        "parent_id": "b68527e5-74a9-4dae-b1c4-623f11a1cfda",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003c?xml version='1.0' encoding='UTF-8' ?\u003e\n\u003clibrary\u003e\n   \u003cbook id='1'\u003eEffective Java\u003c/book\u003e\n   \u003cbook id='2'\u003eJava Concurrency In Practice\u003c/book\u003e\n\u003c/library\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003c?xml version='1.0' encoding='UTF-8' ?\u003e\n\u003clibrary\u003e\n   \u003cbook id='1'\u003eEffective Java\u003c/book\u003e\n   \u003cbook id='2'\u003eJava Concurrency In Practice\u003c/book\u003e\n\u003c/library\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463262337,
        "id": "a7080acf-15d5-4207-bb74-5381ad50d0f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463262337,
        "parent_id": "b68527e5-74a9-4dae-b1c4-623f11a1cfda",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One can use the following code to build a DOM tree out of a "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One can use the following code to build a DOM tree out of a "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463262337,
        "id": "1dba7527-261d-47dd-8bce-e9ab16bd36c1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463262337,
        "parent_id": "b68527e5-74a9-4dae-b1c4-623f11a1cfda",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import org.w3c.dom.Document;\nimport org.w3c.dom.Node;\nimport org.w3c.dom.NodeList;\nimport org.xml.sax.InputSource;\n\nimport javax.xml.parsers.DocumentBuilder;\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport java.io.StringReader;\n\npublic class DOMDemo {\n\npublic static void main(String[] args) throws Exception {\n    String xmlDocument = \"\u003c?xml version='1.0' encoding='UTF-8' ?\u003e\"\n            + \"\u003clibrary\u003e\"\n            + \"\u003cbook id='1'\u003eEffective Java\u003c/book\u003e\"\n            + \"\u003cbook id='2'\u003eJava Concurrency In Practice\u003c/book\u003e\"\n            + \"\u003c/library\u003e\";\n\n    DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();\n    // This is useless here, because the XML does not have namespaces, but this option is usefull to know in cas\n    documentBuilderFactory.setNamespaceAware(true);\n    DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();\n    // There are various options here, to read from an InputStream, from a file, ...\n    Document document = documentBuilder.parse(new InputSource(new StringReader(xmlDocument)));\n\n    // Root of the document\n    System.out.println(\"Root of the XML Document: \" + document.getDocumentElement().getLocalName());\n\n    // Iterate the contents\n    NodeList firstLevelChildren = document.getDocumentElement().getChildNodes();\n    for (int i = 0; i \u003c firstLevelChildren.getLength(); i++) {\n        Node item = firstLevelChildren.item(i);\n        System.out.println(\"First level child found, XML tag name is: \" + item.getLocalName());\n        System.out.println(\"\\tid attribute of this tag is : \" + item.getAttributes().getNamedItem(\"id\").getTextContent());\n    }\n\n    // Another way would have been\n    NodeList allBooks = document.getDocumentElement().getElementsByTagName(\"book\");\n}\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import org.w3c.dom.Document;\nimport org.w3c.dom.Node;\nimport org.w3c.dom.NodeList;\nimport org.xml.sax.InputSource;\n\nimport javax.xml.parsers.DocumentBuilder;\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport java.io.StringReader;\n\npublic class DOMDemo {\n\npublic static void main(String[] args) throws Exception {\n    String xmlDocument = \"\u003c?xml version='1.0' encoding='UTF-8' ?\u003e\"\n            + \"\u003clibrary\u003e\"\n            + \"\u003cbook id='1'\u003eEffective Java\u003c/book\u003e\"\n            + \"\u003cbook id='2'\u003eJava Concurrency In Practice\u003c/book\u003e\"\n            + \"\u003c/library\u003e\";\n\n    DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();\n    // This is useless here, because the XML does not have namespaces, but this option is usefull to know in cas\n    documentBuilderFactory.setNamespaceAware(true);\n    DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();\n    // There are various options here, to read from an InputStream, from a file, ...\n    Document document = documentBuilder.parse(new InputSource(new StringReader(xmlDocument)));\n\n    // Root of the document\n    System.out.println(\"Root of the XML Document: \" + document.getDocumentElement().getLocalName());\n\n    // Iterate the contents\n    NodeList firstLevelChildren = document.getDocumentElement().getChildNodes();\n    for (int i = 0; i \u003c firstLevelChildren.getLength(); i++) {\n        Node item = firstLevelChildren.item(i);\n        System.out.println(\"First level child found, XML tag name is: \" + item.getLocalName());\n        System.out.println(\"\\tid attribute of this tag is : \" + item.getAttributes().getNamedItem(\"id\").getTextContent());\n    }\n\n    // Another way would have been\n    NodeList allBooks = document.getDocumentElement().getElementsByTagName(\"book\");\n}\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463262337,
        "id": "6962c89e-0a35-4d98-a330-f775edfbec9a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463262337,
        "parent_id": "b68527e5-74a9-4dae-b1c4-623f11a1cfda",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The code yields the following :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The code yields the following :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463262338,
        "id": "ce116bff-fe09-47cc-8ad1-6d9f702fdb2f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463262338,
        "parent_id": "b68527e5-74a9-4dae-b1c4-623f11a1cfda",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Root of the XML Document: library\nFirst level child found, XML tag name is: book\nid attribute of this tag is : 1\nFirst level child found, XML tag name is: book\nid attribute of this tag is : 2"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Root of the XML Document: library\nFirst level child found, XML tag name is: book\nid attribute of this tag is : 1\nFirst level child found, XML tag name is: book\nid attribute of this tag is : 2",
        "code_language": "Plain Text"
      }
    ],
    "title": "Parsing and navigating a document using the DOM API",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}