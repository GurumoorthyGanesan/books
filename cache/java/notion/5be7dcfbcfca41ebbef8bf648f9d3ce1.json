{
  "ID": "5be7dcfb-cfca-41eb-bef8-bf648f9d3ce1",
  "Root": {
    "alive": true,
    "content": [
      "caf8daa9-94bc-4324-8c86-6a92b88a6bd0",
      "03b9da9d-e324-4506-a236-e8e5df3103c4",
      "924e28cd-479d-4957-9028-f16e2e50c3c3",
      "42812485-3c59-4fa3-8482-bec4a018b8c4",
      "19ba8fca-ca4b-4d78-a7e8-0b318492a2c0",
      "bb303556-2d6b-4743-8a3b-aa0e16e41f59",
      "a24e75f2-9b80-469e-9f46-9bf52005bd1f",
      "5774cb33-08d5-4dc4-98ca-2ab8c6f0c1ba"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460148131,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "5be7dcfb-cfca-41eb-bef8-bf648f9d3ce1",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551764017005,
    "parent_id": "b352327f-4045-48dc-891e-ceda03965ca0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Implementing multiple interfaces"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460148129,
        "id": "caf8daa9-94bc-4324-8c86-6a92b88a6bd0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460148129,
        "parent_id": "5be7dcfb-cfca-41eb-bef8-bf648f9d3ce1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sometimes you may want to have a lambda expression implementing more than one interface. This is mostly useful with marker interfaces (such as "
            ],
            [
              "java.io.Serializable",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/io/Serializable.html"
                ]
              ]
            ],
            [
              ") since they don’t add abstract methods."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sometimes you may want to have a lambda expression implementing more than one interface. This is mostly useful with marker interfaces (such as "
          },
          {
            "Text": "java.io.Serializable",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/io/Serializable.html"
          },
          {
            "Text": ") since they don’t add abstract methods."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460148130,
        "id": "03b9da9d-e324-4506-a236-e8e5df3103c4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460148130,
        "parent_id": "5be7dcfb-cfca-41eb-bef8-bf648f9d3ce1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example, you want to create a "
            ],
            [
              "TreeSet",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/util/TreeSet.html"
                ]
              ]
            ],
            [
              " with a custom "
            ],
            [
              "Comparator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and then serialize it and send it over the network. The trivial approach:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example, you want to create a "
          },
          {
            "Text": "TreeSet",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/util/TreeSet.html"
          },
          {
            "Text": " with a custom "
          },
          {
            "Text": "Comparator",
            "AttrFlags": 2
          },
          {
            "Text": " and then serialize it and send it over the network. The trivial approach:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460148130,
        "id": "924e28cd-479d-4957-9028-f16e2e50c3c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460148130,
        "parent_id": "5be7dcfb-cfca-41eb-bef8-bf648f9d3ce1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "TreeSet\u003cLong\u003e ts = new TreeSet\u003c\u003e((x, y) -\u003e Long.compare(y, x));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "TreeSet\u003cLong\u003e ts = new TreeSet\u003c\u003e((x, y) -\u003e Long.compare(y, x));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460148131,
        "id": "42812485-3c59-4fa3-8482-bec4a018b8c4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460148131,
        "parent_id": "5be7dcfb-cfca-41eb-bef8-bf648f9d3ce1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "doesn’t work since the lambda for the comparator does not implement "
            ],
            [
              "Serializable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". You can fix this by using intersection types and explicitly specifying that this lambda needs to be serializable:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "doesn’t work since the lambda for the comparator does not implement "
          },
          {
            "Text": "Serializable",
            "AttrFlags": 2
          },
          {
            "Text": ". You can fix this by using intersection types and explicitly specifying that this lambda needs to be serializable:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460148131,
        "id": "19ba8fca-ca4b-4d78-a7e8-0b318492a2c0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460148131,
        "parent_id": "5be7dcfb-cfca-41eb-bef8-bf648f9d3ce1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "TreeSet\u003cLong\u003e ts = new TreeSet\u003c\u003e(\n    (Comparator\u003cLong\u003e \u0026 Serializable) (x, y) -\u003e Long.compare(y, x));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "TreeSet\u003cLong\u003e ts = new TreeSet\u003c\u003e(\n    (Comparator\u003cLong\u003e \u0026 Serializable) (x, y) -\u003e Long.compare(y, x));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460148131,
        "id": "bb303556-2d6b-4743-8a3b-aa0e16e41f59",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460148131,
        "parent_id": "5be7dcfb-cfca-41eb-bef8-bf648f9d3ce1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you’re frequently using intersection types (for example, if you’re using a framework such as "
            ],
            [
              "Apache Spark",
              [
                [
                  "a",
                  "http://spark.apache.org/"
                ]
              ]
            ],
            [
              " where almost everything has to be serializable), you can create empty interfaces and use them in your code instead:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you’re frequently using intersection types (for example, if you’re using a framework such as "
          },
          {
            "Text": "Apache Spark",
            "Link": "http://spark.apache.org/"
          },
          {
            "Text": " where almost everything has to be serializable), you can create empty interfaces and use them in your code instead:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460148131,
        "id": "a24e75f2-9b80-469e-9f46-9bf52005bd1f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460148131,
        "parent_id": "5be7dcfb-cfca-41eb-bef8-bf648f9d3ce1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public interface SerializableComparator extends Comparator\u003cLong\u003e, Serializable {}\n\npublic class CustomTreeSet {\n  public CustomTreeSet(SerializableComparator comparator) {}\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public interface SerializableComparator extends Comparator\u003cLong\u003e, Serializable {}\n\npublic class CustomTreeSet {\n  public CustomTreeSet(SerializableComparator comparator) {}\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460148131,
        "id": "5774cb33-08d5-4dc4-98ca-2ab8c6f0c1ba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460148131,
        "parent_id": "5be7dcfb-cfca-41eb-bef8-bf648f9d3ce1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This way you’re guaranteed that the passed comparator will be serializable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This way you’re guaranteed that the passed comparator will be serializable."
          }
        ]
      }
    ],
    "title": "Implementing multiple interfaces",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}