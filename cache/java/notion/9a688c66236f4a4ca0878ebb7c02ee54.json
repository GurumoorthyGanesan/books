{
  "ID": "9a688c66-236f-4a4c-a087-8ebb7c02ee54",
  "Root": {
    "alive": true,
    "content": [
      "430e270e-4e27-4d02-88b3-03f7d7385a96",
      "519288b1-0ca7-4119-a120-e5240e9607d4",
      "9d8493d7-42da-4029-888d-d7012f63ea83",
      "87c93fa8-0069-4c43-a848-95cdd9603db0",
      "0b24aac1-960a-4d55-9172-e8a73d3a1cfb"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460163068,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "9a688c66-236f-4a4c-a087-8ebb7c02ee54",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551756306010,
    "parent_id": "eaad0c1d-9ecf-4d2a-b640-d2df4debfaf8",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Requiring multiple upper bounds extends A B"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460163065,
        "id": "430e270e-4e27-4d02-88b3-03f7d7385a96",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460163065,
        "parent_id": "9a688c66-236f-4a4c-a087-8ebb7c02ee54",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can require a generic type to extend multiple upper bounds."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can require a generic type to extend multiple upper bounds."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460163068,
        "id": "519288b1-0ca7-4119-a120-e5240e9607d4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460163068,
        "parent_id": "9a688c66-236f-4a4c-a087-8ebb7c02ee54",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example: we want to sort a list of numbers but "
            ],
            [
              "Number",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " doesn’t implement "
            ],
            [
              "Comparable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example: we want to sort a list of numbers but "
          },
          {
            "Text": "Number",
            "AttrFlags": 2
          },
          {
            "Text": " doesn’t implement "
          },
          {
            "Text": "Comparable",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460163068,
        "id": "9d8493d7-42da-4029-888d-d7012f63ea83",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460163068,
        "parent_id": "9a688c66-236f-4a4c-a087-8ebb7c02ee54",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public \u003cT extends Number \u0026 Comparable\u003cT\u003e\u003e void sortNumbers( List\u003cT\u003e n ) {\n  Collections.sort( n );\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public \u003cT extends Number \u0026 Comparable\u003cT\u003e\u003e void sortNumbers( List\u003cT\u003e n ) {\n  Collections.sort( n );\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460163068,
        "id": "87c93fa8-0069-4c43-a848-95cdd9603db0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460163068,
        "parent_id": "9a688c66-236f-4a4c-a087-8ebb7c02ee54",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " must extend "
            ],
            [
              "Number",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "and",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " implement "
            ],
            [
              "Comparable\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which should fit all “normal” built-in number implementations like "
            ],
            [
              "Integer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "BigDecimal",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " but doesn’t fit the more exotic ones like "
            ],
            [
              "Striped64",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": " must extend "
          },
          {
            "Text": "Number",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "and",
            "AttrFlags": 4
          },
          {
            "Text": " implement "
          },
          {
            "Text": "Comparable\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " which should fit all “normal” built-in number implementations like "
          },
          {
            "Text": "Integer",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "BigDecimal",
            "AttrFlags": 2
          },
          {
            "Text": " but doesn’t fit the more exotic ones like "
          },
          {
            "Text": "Striped64",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460163068,
        "id": "0b24aac1-960a-4d55-9172-e8a73d3a1cfb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460163068,
        "parent_id": "9a688c66-236f-4a4c-a087-8ebb7c02ee54",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Since multiple inheritance is not allowed, you can use at most one class as a bound and it must be the first listed. For example, "
            ],
            [
              "\u003cT extends Comparable\u003cT\u003e \u0026 Number\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not allowed because Comparable is an interface, and not a class."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Since multiple inheritance is not allowed, you can use at most one class as a bound and it must be the first listed. For example, "
          },
          {
            "Text": "\u003cT extends Comparable\u003cT\u003e \u0026 Number\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " is not allowed because Comparable is an interface, and not a class."
          }
        ]
      }
    ],
    "title": "Requiring multiple upper bounds extends A B",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}