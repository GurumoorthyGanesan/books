{
  "ID": "7f217fb3-4116-4e68-9460-644098556d40",
  "Root": {
    "alive": true,
    "content": [
      "2c2083f9-d56f-4b04-90fb-e8a9ec41d33e",
      "e9328f70-fe34-410f-a81b-137565850a61",
      "b8984b65-2ad5-4ebf-a757-127163688ac8",
      "b4495338-d2ae-49e5-af80-887b03aa8396"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550518483048,
    "id": "7f217fb3-4116-4e68-9460-644098556d40",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550518483048,
    "parent_id": "4ddf910d-8ecc-4478-a0f4-9af6dd01edd1",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "000 Splitting a string into fixed length parts"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518483044,
        "id": "2c2083f9-d56f-4b04-90fb-e8a9ec41d33e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518483044,
        "parent_id": "7f217fb3-4116-4e68-9460-644098556d40",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518483047,
        "id": "e9328f70-fe34-410f-a81b-137565850a61",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518483047,
        "parent_id": "7f217fb3-4116-4e68-9460-644098556d40",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The goal here is to not lose content, so the regex must not consume (match) any input. Rather it must match "
            ],
            [
              "between",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " the last character of the previous target input and the first character of the next target input. eg for 8-character substrings, we need to break the input up (ie match) at the places marked below:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The goal here is to not lose content, so the regex must not consume (match) any input. Rather it must match "
          },
          {
            "Text": "between",
            "AttrFlags": 4
          },
          {
            "Text": " the last character of the previous target input and the first character of the next target input. eg for 8-character substrings, we need to break the input up (ie match) at the places marked below:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518483047,
        "id": "b8984b65-2ad5-4ebf-a757-127163688ac8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518483047,
        "parent_id": "7f217fb3-4116-4e68-9460-644098556d40",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "a b c d e f g h i j k l m n o p q r s t u v w x y z\n               ^               ^               ^"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "a b c d e f g h i j k l m n o p q r s t u v w x y z\n               ^               ^               ^",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518483047,
        "id": "b4495338-d2ae-49e5-af80-887b03aa8396",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518483047,
        "parent_id": "7f217fb3-4116-4e68-9460-644098556d40",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Ignore the spaces in the input which were required to show "
            ],
            [
              "between",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " character positions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Ignore the spaces in the input which were required to show "
          },
          {
            "Text": "between",
            "AttrFlags": 4
          },
          {
            "Text": " character positions."
          }
        ]
      }
    ],
    "title": "000 Splitting a string into fixed length parts"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}