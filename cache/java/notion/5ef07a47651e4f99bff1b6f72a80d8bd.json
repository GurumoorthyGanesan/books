{
  "ID": "5ef07a47-651e-4f99-bff1-b6f72a80d8bd",
  "Root": {
    "alive": true,
    "content": [
      "c6f60cea-28c3-4600-8e9c-8098e01779a0",
      "d1a5068b-615e-4b05-ba82-67c0eb1e4f3c",
      "1ede392b-2bef-48f5-8d92-b5b77115b6c6",
      "5bd450ac-c7df-4759-981c-3430674c066b",
      "f9e9933a-7258-4e4a-a6b0-80f5c60757e3",
      "3f7279c6-8a57-4d7c-9615-09c7bd2f9a09",
      "70ba2d98-b3f4-45bf-820e-410a8f569292",
      "77085530-154e-4172-9a2d-bcc9d32246c6",
      "2d2b745b-cfdf-40f9-b106-8dd3abe0799c",
      "1f93ffde-a23a-4ed1-8113-2af0ab6d39e7",
      "87bc501f-69f4-4b04-8372-13c01e8455bc",
      "91462bf7-86dc-47be-8bf6-e38a681d8cdd",
      "1ba7bf20-9d2e-48b6-bbfa-b332e4761410",
      "b2a41f85-e321-43ad-9282-e12c900a04e9",
      "9a65780a-3508-4130-bc6e-a79fbc469c02",
      "160c8cf3-56a3-40fd-bf43-d2f54122bd6d",
      "f674512c-e07e-4916-b07c-a55999939fc7"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460502437,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "5ef07a47-651e-4f99-bff1-b6f72a80d8bd",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551755333526,
    "parent_id": "3bdee82f-cd88-45a7-8656-12de08206f33",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Wait for completion of all tasks in ExecutorService"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460502431,
        "id": "c6f60cea-28c3-4600-8e9c-8098e01779a0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460502431,
        "parent_id": "5ef07a47-651e-4f99-bff1-b6f72a80d8bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s have a look at various options to wait for completion of tasks submitted to "
            ],
            [
              "Executor",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executor.html"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s have a look at various options to wait for completion of tasks submitted to "
          },
          {
            "Text": "Executor",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executor.html"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460502433,
        "id": "d1a5068b-615e-4b05-ba82-67c0eb1e4f3c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460502433,
        "parent_id": "5ef07a47-651e-4f99-bff1-b6f72a80d8bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "ExecutorService",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "invokeAll()",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "ExecutorService",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html"
          },
          {
            "Text": " "
          },
          {
            "Text": "invokeAll()",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460502433,
        "id": "1ede392b-2bef-48f5-8d92-b5b77115b6c6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460502433,
        "parent_id": "5ef07a47-651e-4f99-bff1-b6f72a80d8bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Executes the given tasks, returning a list of Futures holding their status and results when everything is completed."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Executes the given tasks, returning a list of Futures holding their status and results when everything is completed."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460502433,
        "id": "5bd450ac-c7df-4759-981c-3430674c066b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460502433,
        "parent_id": "5ef07a47-651e-4f99-bff1-b6f72a80d8bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460502433,
        "id": "f9e9933a-7258-4e4a-a6b0-80f5c60757e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460502433,
        "parent_id": "5ef07a47-651e-4f99-bff1-b6f72a80d8bd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import java.util.concurrent.*;\nimport java.util.*;\n\npublic class InvokeAllDemo{\n    public InvokeAllDemo(){\n        System.out.println(\"creating service\");\n        ExecutorService service = Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());\n        \n        List\u003cMyCallable\u003e futureList = new ArrayList\u003cMyCallable\u003e();\n        for (int i = 0; i \u003c 10; i++){\n            MyCallable myCallable = new MyCallable((long)i);\n            futureList.add(myCallable);\n        }\n        System.out.println(\"Start\");\n        try{\n            List\u003cFuture\u003cLong\u003e\u003e futures = service.invokeAll(futureList);  \n        } catch(Exception err){\n            err.printStackTrace();\n        }\n        System.out.println(\"Completed\");\n        service.shutdown();\n    }\n    public static void main(String args[]){\n        InvokeAllDemo demo = new InvokeAllDemo();\n    }\n    class MyCallable implements Callable\u003cLong\u003e{\n        Long id = 0L;\n        public MyCallable(Long val){\n            this.id = val;\n        }\n        public Long call(){\n            // Add your business logic\n            return id;\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import java.util.concurrent.*;\nimport java.util.*;\n\npublic class InvokeAllDemo{\n    public InvokeAllDemo(){\n        System.out.println(\"creating service\");\n        ExecutorService service = Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());\n        \n        List\u003cMyCallable\u003e futureList = new ArrayList\u003cMyCallable\u003e();\n        for (int i = 0; i \u003c 10; i++){\n            MyCallable myCallable = new MyCallable((long)i);\n            futureList.add(myCallable);\n        }\n        System.out.println(\"Start\");\n        try{\n            List\u003cFuture\u003cLong\u003e\u003e futures = service.invokeAll(futureList);  \n        } catch(Exception err){\n            err.printStackTrace();\n        }\n        System.out.println(\"Completed\");\n        service.shutdown();\n    }\n    public static void main(String args[]){\n        InvokeAllDemo demo = new InvokeAllDemo();\n    }\n    class MyCallable implements Callable\u003cLong\u003e{\n        Long id = 0L;\n        public MyCallable(Long val){\n            this.id = val;\n        }\n        public Long call(){\n            // Add your business logic\n            return id;\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460502434,
        "id": "3f7279c6-8a57-4d7c-9615-09c7bd2f9a09",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460502434,
        "parent_id": "5ef07a47-651e-4f99-bff1-b6f72a80d8bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "CountDownLatch",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CountDownLatch.html"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "CountDownLatch",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CountDownLatch.html"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460502434,
        "id": "70ba2d98-b3f4-45bf-820e-410a8f569292",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460502434,
        "parent_id": "5ef07a47-651e-4f99-bff1-b6f72a80d8bd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003e  A synchronization aid that allows one or more threads to wait until a set of operations being performed in other threads completes.\n\n\u003e A **CountDownLatch** is initialized with a given count. The await methods block until the current count reaches zero due to invocations of the `countDown()` method, after which all waiting threads are released and any subsequent invocations of await return immediately. This is a one-shot phenomenon -- the count cannot be reset. If you need a version that resets the count, consider using a **CyclicBarrier**."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003e  A synchronization aid that allows one or more threads to wait until a set of operations being performed in other threads completes.\n\n\u003e A **CountDownLatch** is initialized with a given count. The await methods block until the current count reaches zero due to invocations of the `countDown()` method, after which all waiting threads are released and any subsequent invocations of await return immediately. This is a one-shot phenomenon -- the count cannot be reset. If you need a version that resets the count, consider using a **CyclicBarrier**.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460502435,
        "id": "77085530-154e-4172-9a2d-bcc9d32246c6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460502435,
        "parent_id": "5ef07a47-651e-4f99-bff1-b6f72a80d8bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "ForkJoinPool",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinPool.html"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "newWorkStealingPool()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in "
            ],
            [
              "Executors",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "ForkJoinPool",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinPool.html"
          },
          {
            "Text": " or "
          },
          {
            "Text": "newWorkStealingPool()",
            "AttrFlags": 2
          },
          {
            "Text": " in "
          },
          {
            "Text": "Executors",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460502435,
        "id": "2d2b745b-cfdf-40f9-b106-8dd3abe0799c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460502435,
        "parent_id": "5ef07a47-651e-4f99-bff1-b6f72a80d8bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Iterate through all "
            ],
            [
              "Future",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " objects created after submitting to "
            ],
            [
              "ExecutorService",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Iterate through all "
          },
          {
            "Text": "Future",
            "AttrFlags": 2
          },
          {
            "Text": " objects created after submitting to "
          },
          {
            "Text": "ExecutorService",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460502436,
        "id": "1f93ffde-a23a-4ed1-8113-2af0ab6d39e7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460502436,
        "parent_id": "5ef07a47-651e-4f99-bff1-b6f72a80d8bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Recommended way of shutdown from oracle documentation page of "
            ],
            [
              "ExecutorService",
              [
                [
                  "a",
                  "http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Recommended way of shutdown from oracle documentation page of "
          },
          {
            "Text": "ExecutorService",
            "Link": "http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460502436,
        "id": "87bc501f-69f4-4b04-8372-13c01e8455bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460502436,
        "parent_id": "5ef07a47-651e-4f99-bff1-b6f72a80d8bd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    try {\n      // Wait a while for existing tasks to terminate\n      if (!pool.awaitTermination(60, TimeUnit.SECONDS)) {\n        pool.shutdownNow(); // Cancel currently executing tasks\n        // Wait a while for tasks to respond to being cancelled\n        if (!pool.awaitTermination(60, TimeUnit.SECONDS))\n            System.err.println(\"Pool did not terminate\");\n      }\n    } catch (InterruptedException ie) {\n      // (Re-)Cancel if current thread also interrupted\n      pool.shutdownNow();\n      // Preserve interrupt status\n      Thread.currentThread().interrupt();\n    }\n\n`shutdown():`  Initiates an orderly shutdown in which previously submitted tasks are executed, but no new tasks will be accepted."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    try {\n      // Wait a while for existing tasks to terminate\n      if (!pool.awaitTermination(60, TimeUnit.SECONDS)) {\n        pool.shutdownNow(); // Cancel currently executing tasks\n        // Wait a while for tasks to respond to being cancelled\n        if (!pool.awaitTermination(60, TimeUnit.SECONDS))\n            System.err.println(\"Pool did not terminate\");\n      }\n    } catch (InterruptedException ie) {\n      // (Re-)Cancel if current thread also interrupted\n      pool.shutdownNow();\n      // Preserve interrupt status\n      Thread.currentThread().interrupt();\n    }\n\n`shutdown():`  Initiates an orderly shutdown in which previously submitted tasks are executed, but no new tasks will be accepted.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460502436,
        "id": "91462bf7-86dc-47be-8bf6-e38a681d8cdd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460502436,
        "parent_id": "5ef07a47-651e-4f99-bff1-b6f72a80d8bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "shutdownNow():",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "Attempts to stop all actively executing tasks, halts the processing of waiting tasks, and returns a list of the tasks that were awaiting execution."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "shutdownNow():",
            "AttrFlags": 2
          },
          {
            "Text": "Attempts to stop all actively executing tasks, halts the processing of waiting tasks, and returns a list of the tasks that were awaiting execution."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460502437,
        "id": "1ba7bf20-9d2e-48b6-bbfa-b332e4761410",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460502437,
        "parent_id": "5ef07a47-651e-4f99-bff1-b6f72a80d8bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In above example, if your tasks are taking more time to complete, you can change if condition to while condition"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In above example, if your tasks are taking more time to complete, you can change if condition to while condition"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460502437,
        "id": "b2a41f85-e321-43ad-9282-e12c900a04e9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460502437,
        "parent_id": "5ef07a47-651e-4f99-bff1-b6f72a80d8bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Replace"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Replace"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460502437,
        "id": "9a65780a-3508-4130-bc6e-a79fbc469c02",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460502437,
        "parent_id": "5ef07a47-651e-4f99-bff1-b6f72a80d8bd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if (!pool.awaitTermination(60, TimeUnit.SECONDS))"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if (!pool.awaitTermination(60, TimeUnit.SECONDS))",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460502437,
        "id": "160c8cf3-56a3-40fd-bf43-d2f54122bd6d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460502437,
        "parent_id": "5ef07a47-651e-4f99-bff1-b6f72a80d8bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "with"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "with"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460502437,
        "id": "f674512c-e07e-4916-b07c-a55999939fc7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460502437,
        "parent_id": "5ef07a47-651e-4f99-bff1-b6f72a80d8bd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "while(!pool.awaitTermination(60, TimeUnit.SECONDS)) {\n  Thread.sleep(60000);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "while(!pool.awaitTermination(60, TimeUnit.SECONDS)) {\n  Thread.sleep(60000);\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Wait for completion of all tasks in ExecutorService",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}