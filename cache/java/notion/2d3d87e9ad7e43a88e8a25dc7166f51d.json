{
  "ID": "2d3d87e9-ad7e-43a8-8e8a-25dc7166f51d",
  "Root": {
    "alive": true,
    "content": [
      "b0069ed4-7630-41de-9410-d52f9d022804",
      "39994102-a49c-4fb9-8f08-c6ad33a3a6d9",
      "c5016347-eae0-4fb2-92af-3e70bb88998b",
      "87b00d0c-dfe2-46dd-a5b8-3334f35fb380",
      "fafe73a6-957d-4c65-a37c-418069370256",
      "1b6d5027-ff86-4cc2-a6de-b646d2831782",
      "ff7c06e6-a642-4370-be75-e617502427ed",
      "9d80e025-25f8-4cbe-83fe-8092fb2adb56",
      "b4b1dd00-1bcf-4e9e-9bef-96e5d4232d2c",
      "9f20fd5a-3f3b-4cf7-816c-7df7550b541a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460535055,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "2d3d87e9-ad7e-43a8-8e8a-25dc7166f51d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551761688331,
    "parent_id": "596cd51e-237c-46bd-a4df-28e4d338582d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "The int primitive"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460535052,
        "id": "b0069ed4-7630-41de-9410-d52f9d022804",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460535052,
        "parent_id": "2d3d87e9-ad7e-43a8-8e8a-25dc7166f51d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A primitive data type such as "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " holds values directly into the variable that is using it, meanwhile a variable that was declared using "
            ],
            [
              "Integer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " holds a reference to the value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A primitive data type such as "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " holds values directly into the variable that is using it, meanwhile a variable that was declared using "
          },
          {
            "Text": "Integer",
            "AttrFlags": 2
          },
          {
            "Text": " holds a reference to the value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460535054,
        "id": "39994102-a49c-4fb9-8f08-c6ad33a3a6d9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460535054,
        "parent_id": "2d3d87e9-ad7e-43a8-8e8a-25dc7166f51d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "According to "
            ],
            [
              "java API",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/"
                ]
              ]
            ],
            [
              ": “The Integer class wraps a value of the primitive type int in an object. An object of type Integer contains a single field whose type is int.”"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "According to "
          },
          {
            "Text": "java API",
            "Link": "https://docs.oracle.com/javase/7/docs/api/"
          },
          {
            "Text": ": “The Integer class wraps a value of the primitive type int in an object. An object of type Integer contains a single field whose type is int.”"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460535054,
        "id": "c5016347-eae0-4fb2-92af-3e70bb88998b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460535054,
        "parent_id": "2d3d87e9-ad7e-43a8-8e8a-25dc7166f51d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By default, "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a 32-bit signed integer. It can store a minimum value of -231, and a maximum value of 231 - 1."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By default, "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " is a 32-bit signed integer. It can store a minimum value of -231, and a maximum value of 231 - 1."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460535054,
        "id": "87b00d0c-dfe2-46dd-a5b8-3334f35fb380",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460535054,
        "parent_id": "2d3d87e9-ad7e-43a8-8e8a-25dc7166f51d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int example = -42;\nint myInt = 284;\nint anotherInt = 73;\n\nint addedInts = myInt + anotherInt; // 284 + 73 = 357\nint subtractedInts = myInt - anotherInt; // 284 - 73 = 211"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int example = -42;\nint myInt = 284;\nint anotherInt = 73;\n\nint addedInts = myInt + anotherInt; // 284 + 73 = 357\nint subtractedInts = myInt - anotherInt; // 284 - 73 = 211",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460535055,
        "id": "fafe73a6-957d-4c65-a37c-418069370256",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460535055,
        "parent_id": "2d3d87e9-ad7e-43a8-8e8a-25dc7166f51d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you need to store a number outside of this range, "
            ],
            [
              "long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " should be used instead. Exceeding the value range of "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " leads to an integer overflow, causing the value exceeding the range to be added to the opposite site of the range (positive becomes negative and vise versa). The value is "
            ],
            [
              "((value - MIN_VALUE) % RANGE) + MIN_VALUE",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", or "
            ],
            [
              "((value + 2147483648) % 4294967296) - 2147483648",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you need to store a number outside of this range, "
          },
          {
            "Text": "long",
            "AttrFlags": 2
          },
          {
            "Text": " should be used instead. Exceeding the value range of "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " leads to an integer overflow, causing the value exceeding the range to be added to the opposite site of the range (positive becomes negative and vise versa). The value is "
          },
          {
            "Text": "((value - MIN_VALUE) % RANGE) + MIN_VALUE",
            "AttrFlags": 2
          },
          {
            "Text": ", or "
          },
          {
            "Text": "((value + 2147483648) % 4294967296) - 2147483648",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460535055,
        "id": "1b6d5027-ff86-4cc2-a6de-b646d2831782",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460535055,
        "parent_id": "2d3d87e9-ad7e-43a8-8e8a-25dc7166f51d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int demo = 2147483647; //maximum positive integer\nSystem.out.println(demo); //prints 2147483647\ndemo = demo + 1; //leads to an integer overflow\nSystem.out.println(demo); // prints -2147483648"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int demo = 2147483647; //maximum positive integer\nSystem.out.println(demo); //prints 2147483647\ndemo = demo + 1; //leads to an integer overflow\nSystem.out.println(demo); // prints -2147483648",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460535055,
        "id": "ff7c06e6-a642-4370-be75-e617502427ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460535055,
        "parent_id": "2d3d87e9-ad7e-43a8-8e8a-25dc7166f51d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The maximum and minimum values of "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be found at:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The maximum and minimum values of "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " can be found at:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460535055,
        "id": "9d80e025-25f8-4cbe-83fe-8092fb2adb56",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460535055,
        "parent_id": "2d3d87e9-ad7e-43a8-8e8a-25dc7166f51d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int high = Integer.MAX_VALUE;    // high == 2147483647\nint low = Integer.MIN_VALUE;     // low == -2147483648"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int high = Integer.MAX_VALUE;    // high == 2147483647\nint low = Integer.MIN_VALUE;     // low == -2147483648",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460535055,
        "id": "b4b1dd00-1bcf-4e9e-9bef-96e5d4232d2c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460535055,
        "parent_id": "2d3d87e9-ad7e-43a8-8e8a-25dc7166f51d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The default value of an "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is "
            ],
            [
              "0",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The default value of an "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " is "
          },
          {
            "Text": "0",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460535055,
        "id": "9f20fd5a-3f3b-4cf7-816c-7df7550b541a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460535055,
        "parent_id": "2d3d87e9-ad7e-43a8-8e8a-25dc7166f51d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int defaultInt;    // defaultInt == 0"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int defaultInt;    // defaultInt == 0",
        "code_language": "Plain Text"
      }
    ],
    "title": "The int primitive",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}