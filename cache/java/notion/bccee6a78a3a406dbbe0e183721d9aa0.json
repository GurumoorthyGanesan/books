{
  "ID": "bccee6a7-8a3a-406d-bbe0-e183721d9aa0",
  "Root": {
    "alive": true,
    "content": [
      "bf8e73c4-2d04-4ca6-b7d7-0d36669c3d8a",
      "2cd97856-baf6-41c2-ac60-b7fc1f7cfb93",
      "bb229f8c-a8df-40c3-b501-6aad0787bff5",
      "051a9118-b64d-450a-8f6f-0c7276115cf0",
      "faa6e990-b833-4fd3-9dfb-b3e8a2b8c8e8",
      "a05f757b-97bd-44ce-863e-159e2a8eda36",
      "dc57d0bd-2560-4ad6-ab57-32fc83ea1c05",
      "72d65262-41ff-4611-9340-7adb01f5fcc4",
      "b5b4d451-62d3-4523-b48b-1df5f89ffb45",
      "5a192567-1296-4164-832c-6bacb37847ff",
      "d07ee838-72e9-4eb3-9911-88de3a67df82",
      "9562ec9f-af44-48cd-ade8-3ec1c0f056dc",
      "f854c2f7-607b-478f-ab88-fdab0457107d",
      "a7e5117d-6eab-45f1-b9c1-59ae463877bd",
      "649d5cdc-ac97-451b-8924-8802181a8eb1",
      "2f44a829-1ef6-46ad-9e14-ff79925bf315",
      "68723e9a-149b-4b19-8a4b-64a165418e22"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550461115022,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "bccee6a7-8a3a-406d-bbe0-e183721d9aa0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550461115022,
    "parent_id": "2e3af3b7-fb1a-45ea-9c61-94dcd8ba030d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Basic Serialization in Java"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461115014,
        "id": "bf8e73c4-2d04-4ca6-b7d7-0d36669c3d8a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461115014,
        "parent_id": "bccee6a7-8a3a-406d-bbe0-e183721d9aa0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "What is Serialization",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "What is Serialization",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461115017,
        "id": "2cd97856-baf6-41c2-ac60-b7fc1f7cfb93",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461115017,
        "parent_id": "bccee6a7-8a3a-406d-bbe0-e183721d9aa0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Serialization is the process of converting an object’s state (including its references) to a sequence of bytes, as well as the process of rebuilding those bytes into a live object at some future time. Serialization is used when you want to persist the object. It is also used by Java RMI to pass objects between JVMs, either as arguments in a method invocation from a client to a server or as return values from a method invocation, or as exceptions thrown by remote methods. In general, serialization is used when we want the object to exist beyond the lifetime of the JVM."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Serialization is the process of converting an object’s state (including its references) to a sequence of bytes, as well as the process of rebuilding those bytes into a live object at some future time. Serialization is used when you want to persist the object. It is also used by Java RMI to pass objects between JVMs, either as arguments in a method invocation from a client to a server or as return values from a method invocation, or as exceptions thrown by remote methods. In general, serialization is used when we want the object to exist beyond the lifetime of the JVM."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461115018,
        "id": "bb229f8c-a8df-40c3-b501-6aad0787bff5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461115018,
        "parent_id": "bccee6a7-8a3a-406d-bbe0-e183721d9aa0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "java.io.Serializable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a marker interface (has no body). It is just used to “mark” Java classes as serializable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "java.io.Serializable",
            "AttrFlags": 2
          },
          {
            "Text": " is a marker interface (has no body). It is just used to “mark” Java classes as serializable."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461115018,
        "id": "051a9118-b64d-450a-8f6f-0c7276115cf0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461115018,
        "parent_id": "bccee6a7-8a3a-406d-bbe0-e183721d9aa0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The serialization runtime associates with each serializable class a version number, called a "
            ],
            [
              "serialVersionUID",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is used during "
            ],
            [
              "de",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "-serialization to verify that the sender and receiver of a serialized object have loaded classes for that object that are compatible with respect to serialization. If the receiver has loaded a class for the object that has a different "
            ],
            [
              "serialVersionUID",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " than that of the corresponding sender’s class, then deserialization will result in an "
            ],
            [
              "InvalidClassException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". A serializable class can declare its own "
            ],
            [
              "serialVersionUID",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " explicitly by declaring a field named "
            ],
            [
              "serialVersionUID",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that must be "
            ],
            [
              "static, final,",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and of type "
            ],
            [
              "long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The serialization runtime associates with each serializable class a version number, called a "
          },
          {
            "Text": "serialVersionUID",
            "AttrFlags": 2
          },
          {
            "Text": ", which is used during "
          },
          {
            "Text": "de",
            "AttrFlags": 4
          },
          {
            "Text": "-serialization to verify that the sender and receiver of a serialized object have loaded classes for that object that are compatible with respect to serialization. If the receiver has loaded a class for the object that has a different "
          },
          {
            "Text": "serialVersionUID",
            "AttrFlags": 2
          },
          {
            "Text": " than that of the corresponding sender’s class, then deserialization will result in an "
          },
          {
            "Text": "InvalidClassException",
            "AttrFlags": 2
          },
          {
            "Text": ". A serializable class can declare its own "
          },
          {
            "Text": "serialVersionUID",
            "AttrFlags": 2
          },
          {
            "Text": " explicitly by declaring a field named "
          },
          {
            "Text": "serialVersionUID",
            "AttrFlags": 2
          },
          {
            "Text": " that must be "
          },
          {
            "Text": "static, final,",
            "AttrFlags": 2
          },
          {
            "Text": " and of type "
          },
          {
            "Text": "long",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461115018,
        "id": "faa6e990-b833-4fd3-9dfb-b3e8a2b8c8e8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461115018,
        "parent_id": "bccee6a7-8a3a-406d-bbe0-e183721d9aa0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "ANY-ACCESS-MODIFIER static final long serialVersionUID = 1L;",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "ANY-ACCESS-MODIFIER static final long serialVersionUID = 1L;",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461115018,
        "id": "a05f757b-97bd-44ce-863e-159e2a8eda36",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461115018,
        "parent_id": "bccee6a7-8a3a-406d-bbe0-e183721d9aa0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "How to make a class eligible for serialization",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "How to make a class eligible for serialization",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461115019,
        "id": "dc57d0bd-2560-4ad6-ab57-32fc83ea1c05",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461115019,
        "parent_id": "bccee6a7-8a3a-406d-bbe0-e183721d9aa0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To persist an object the respective class must implement the "
            ],
            [
              "java.io.Serializable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To persist an object the respective class must implement the "
          },
          {
            "Text": "java.io.Serializable",
            "AttrFlags": 2
          },
          {
            "Text": " interface."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461115019,
        "id": "72d65262-41ff-4611-9340-7adb01f5fcc4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461115019,
        "parent_id": "bccee6a7-8a3a-406d-bbe0-e183721d9aa0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import java.io.Serializable;\n\npublic class SerialClass implements Serializable {\n\n    private static final long serialVersionUID = 1L;  \n    private Date currentTime;\n    \n    public SerialClass() {\n        currentTime = Calendar.getInstance().getTime();\n    }\n\n    public Date getCurrentTime() {\n        return currentTime;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import java.io.Serializable;\n\npublic class SerialClass implements Serializable {\n\n    private static final long serialVersionUID = 1L;  \n    private Date currentTime;\n    \n    public SerialClass() {\n        currentTime = Calendar.getInstance().getTime();\n    }\n\n    public Date getCurrentTime() {\n        return currentTime;\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461115019,
        "id": "b5b4d451-62d3-4523-b48b-1df5f89ffb45",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461115019,
        "parent_id": "bccee6a7-8a3a-406d-bbe0-e183721d9aa0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "How to write an object into a file",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "How to write an object into a file",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461115019,
        "id": "5a192567-1296-4164-832c-6bacb37847ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461115019,
        "parent_id": "bccee6a7-8a3a-406d-bbe0-e183721d9aa0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now we need to write this object to a file system. We use "
            ],
            [
              "java.io.ObjectOutputStream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for this purpose."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now we need to write this object to a file system. We use "
          },
          {
            "Text": "java.io.ObjectOutputStream",
            "AttrFlags": 2
          },
          {
            "Text": " for this purpose."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461115019,
        "id": "d07ee838-72e9-4eb3-9911-88de3a67df82",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461115019,
        "parent_id": "bccee6a7-8a3a-406d-bbe0-e183721d9aa0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import java.io.FileOutputStream;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\n\npublic class PersistSerialClass {\n\n    public static void main(String [] args) {\n        String filename = \"time.ser\";            \n        SerialClass time = new SerialClass(); //We will write this object to file system.\n        try {\n            ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(filename));\n            out.writeObject(time); //Write byte stream to file system.\n            out.close();\n        } catch(IOException ex){\n            ex.printStackTrace();\n        }\n     }\n }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import java.io.FileOutputStream;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\n\npublic class PersistSerialClass {\n\n    public static void main(String [] args) {\n        String filename = \"time.ser\";            \n        SerialClass time = new SerialClass(); //We will write this object to file system.\n        try {\n            ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(filename));\n            out.writeObject(time); //Write byte stream to file system.\n            out.close();\n        } catch(IOException ex){\n            ex.printStackTrace();\n        }\n     }\n }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461115019,
        "id": "9562ec9f-af44-48cd-ade8-3ec1c0f056dc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461115019,
        "parent_id": "bccee6a7-8a3a-406d-bbe0-e183721d9aa0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "How to recreate an object from its serialized state",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "How to recreate an object from its serialized state",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461115019,
        "id": "f854c2f7-607b-478f-ab88-fdab0457107d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461115019,
        "parent_id": "bccee6a7-8a3a-406d-bbe0-e183721d9aa0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The stored object can be read from file system at later time using "
            ],
            [
              "java.io.ObjectInputStream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as shown below:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The stored object can be read from file system at later time using "
          },
          {
            "Text": "java.io.ObjectInputStream",
            "AttrFlags": 2
          },
          {
            "Text": " as shown below:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461115020,
        "id": "a7e5117d-6eab-45f1-b9c1-59ae463877bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461115020,
        "parent_id": "bccee6a7-8a3a-406d-bbe0-e183721d9aa0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import java.io.FileInputStream;\nimport java.io.ObjectInputStream;\nimport java.io.IOException;\nimport java.io.java.lang.ClassNotFoundException;\n\n public class ReadSerialClass {\n\n    public static void main(String [] args) {\n        String filename = \"time.ser\";    \n        SerialClass time = null;\n\n        try {\n            ObjectInputStream in = new ObjectInputStream(new FileInputStream(filename));\n            time = (SerialClass)in.readObject();\n            in.close();\n        } catch(IOException ex){\n            ex.printStackTrace();\n        } catch(ClassNotFoundException cnfe){\n            cnfe.printStackTrace();\n        }\n        // print out restored time\n        System.out.println(\"Restored time: \" + time.getTime());\n     }\n }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import java.io.FileInputStream;\nimport java.io.ObjectInputStream;\nimport java.io.IOException;\nimport java.io.java.lang.ClassNotFoundException;\n\n public class ReadSerialClass {\n\n    public static void main(String [] args) {\n        String filename = \"time.ser\";    \n        SerialClass time = null;\n\n        try {\n            ObjectInputStream in = new ObjectInputStream(new FileInputStream(filename));\n            time = (SerialClass)in.readObject();\n            in.close();\n        } catch(IOException ex){\n            ex.printStackTrace();\n        } catch(ClassNotFoundException cnfe){\n            cnfe.printStackTrace();\n        }\n        // print out restored time\n        System.out.println(\"Restored time: \" + time.getTime());\n     }\n }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461115021,
        "id": "649d5cdc-ac97-451b-8924-8802181a8eb1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461115021,
        "parent_id": "bccee6a7-8a3a-406d-bbe0-e183721d9aa0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The serialized class is in binary form. The deserialization can be problematic if the class definition changes: see the "
            ],
            [
              "Versioning of Serialized Objects chapter of the Java Serialization Specification",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/platform/serialization/spec/version.html"
                ]
              ]
            ],
            [
              " for details."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The serialized class is in binary form. The deserialization can be problematic if the class definition changes: see the "
          },
          {
            "Text": "Versioning of Serialized Objects chapter of the Java Serialization Specification",
            "Link": "https://docs.oracle.com/javase/8/docs/platform/serialization/spec/version.html"
          },
          {
            "Text": " for details."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461115022,
        "id": "2f44a829-1ef6-46ad-9e14-ff79925bf315",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461115022,
        "parent_id": "bccee6a7-8a3a-406d-bbe0-e183721d9aa0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Serializing an object serializes the entire object graph of which it is the root, and operates correctly in the presence of cyclic graphs. A "
            ],
            [
              "reset()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method is provided to force the "
            ],
            [
              "ObjectOutputStream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to forget about objects that have already been serialized."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Serializing an object serializes the entire object graph of which it is the root, and operates correctly in the presence of cyclic graphs. A "
          },
          {
            "Text": "reset()",
            "AttrFlags": 2
          },
          {
            "Text": " method is provided to force the "
          },
          {
            "Text": "ObjectOutputStream",
            "AttrFlags": 2
          },
          {
            "Text": " to forget about objects that have already been serialized."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461115022,
        "id": "68723e9a-149b-4b19-8a4b-64a165418e22",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461115022,
        "parent_id": "bccee6a7-8a3a-406d-bbe0-e183721d9aa0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Transient-fields - Serialization",
              [
                [
                  "a",
                  "http://stackoverflow.com/questions/910374/why-does-java-have-transient-fields"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Transient-fields - Serialization",
            "Link": "http://stackoverflow.com/questions/910374/why-does-java-have-transient-fields"
          }
        ]
      }
    ],
    "title": "Basic Serialization in Java",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}