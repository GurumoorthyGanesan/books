{
  "ID": "82233e3e-16b6-48c8-982e-31980828e242",
  "Root": {
    "alive": true,
    "content": [
      "d659ba77-d96e-425e-a70e-475c52dbfef4",
      "3d23c1ed-3bba-4149-bc11-cc4548fa847d",
      "425c3170-0055-4783-b60b-ca63cfe54075"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550517964881,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "82233e3e-16b6-48c8-982e-31980828e242",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550517964881,
    "parent_id": "6287dcec-432f-4b11-b339-a8c57ab92cb4",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Parsing single XPath Expression multiple times in an XML"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517964873,
        "id": "d659ba77-d96e-425e-a70e-475c52dbfef4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517964873,
        "parent_id": "82233e3e-16b6-48c8-982e-31980828e242",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this case, you want to have the expression compiled before the evaluations, so that each call to "
            ],
            [
              "evaluate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " does not "
            ],
            [
              "compile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " the same expression. The simple syntax would be:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this case, you want to have the expression compiled before the evaluations, so that each call to "
          },
          {
            "Text": "evaluate",
            "AttrFlags": 2
          },
          {
            "Text": " does not "
          },
          {
            "Text": "compile",
            "AttrFlags": 2
          },
          {
            "Text": " the same expression. The simple syntax would be:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517964881,
        "id": "3d23c1ed-3bba-4149-bc11-cc4548fa847d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517964881,
        "parent_id": "82233e3e-16b6-48c8-982e-31980828e242",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "XPath xPath = XPathFactory.newInstance().newXPath(); //Make new XPath\nXPathExpression exp = xPath.compile(\"/documentation/tags/tag[@name='Java']//example\");\nDocumentBuilder builder = DocumentBuilderFactory.newInstance();\nDocument doc = builder.parse(new File(\"path/to/xml.xml\")); //Specify XML file path\n\nNodeList javaExampleNodes = (NodeList) exp.evaluate(doc, XPathConstants.NODESET); //Evaluate the XPath from the already-compiled expression\n\nNodeList javaExampleNodes2 = (NodeList) exp.evaluate(doc, XPathConstants.NODESET); //Do it again"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "XPath xPath = XPathFactory.newInstance().newXPath(); //Make new XPath\nXPathExpression exp = xPath.compile(\"/documentation/tags/tag[@name='Java']//example\");\nDocumentBuilder builder = DocumentBuilderFactory.newInstance();\nDocument doc = builder.parse(new File(\"path/to/xml.xml\")); //Specify XML file path\n\nNodeList javaExampleNodes = (NodeList) exp.evaluate(doc, XPathConstants.NODESET); //Evaluate the XPath from the already-compiled expression\n\nNodeList javaExampleNodes2 = (NodeList) exp.evaluate(doc, XPathConstants.NODESET); //Do it again",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517964881,
        "id": "425c3170-0055-4783-b60b-ca63cfe54075",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517964881,
        "parent_id": "82233e3e-16b6-48c8-982e-31980828e242",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Overall, two calls to "
            ],
            [
              "XPathExpression.evaluate()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be much more efficient than two calls to "
            ],
            [
              "XPath.evaluate()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Overall, two calls to "
          },
          {
            "Text": "XPathExpression.evaluate()",
            "AttrFlags": 2
          },
          {
            "Text": " will be much more efficient than two calls to "
          },
          {
            "Text": "XPath.evaluate()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Parsing single XPath Expression multiple times in an XML",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}