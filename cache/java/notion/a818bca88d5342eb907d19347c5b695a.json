{
  "ID": "a818bca8-8d53-42eb-907d-19347c5b695a",
  "Root": {
    "alive": true,
    "content": [
      "1f73b661-6746-4ad9-b0ad-367ad20d6cb8",
      "604e7ba2-8dd8-4a59-a2f0-d336276d0e55",
      "4c808a86-4b2b-4a3c-ac26-109f1739d781",
      "448338a2-c7f5-4cc9-86c2-7e10881d0da5",
      "17532cf0-12ed-408b-8839-509abace3a16",
      "54d7e3de-59e3-4464-99f8-1b48f9fba060",
      "00078f64-d000-4fe3-9c5f-e3a3b8909dd9",
      "6bd708d9-7a13-42c5-9957-1e2aea813ba3",
      "4448e534-7b73-419a-a3c4-2fc1f8202339",
      "ba99ebb4-e802-43e4-a297-ca2ff1f0b860",
      "19e2b93e-5b2c-4a12-b878-b38e91695dea",
      "ccc6efa0-6eeb-4908-9740-b9012c68a110",
      "7333fd30-800a-4fef-9d59-48aa38585586",
      "a80cc507-b225-465b-b7ab-b4701ba0bbf6",
      "e63e697a-d681-45eb-aff5-50ce96cdb52a",
      "778ad75e-614b-4ee3-b606-8631aa294218",
      "d04f5f20-036d-4ef8-9da3-51417ca771bb",
      "320a1427-4636-40e3-8ebd-42eb3239b61e",
      "b1c891bf-8318-4792-b0e8-3bf7fee999bd",
      "6a1f55d5-d433-43c3-919c-e16aef78b152",
      "597620a1-58d5-4de3-a375-0e5fb0264a40",
      "8b3dba44-8428-4aa2-b251-047e0e870aca",
      "e448a344-33a4-41bc-bf83-60342788a101",
      "c0108828-ba2b-4a74-9821-8fc4d9dbf1c4",
      "46e3172f-6d1e-4d2e-953f-d810eedbf1aa",
      "ddcca722-70f1-46e9-b2d8-1e3b9c9b7eb4"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460093065,
    "id": "a818bca8-8d53-42eb-907d-19347c5b695a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550519340000,
    "parent_id": "aaf522ec-ec58-4c19-b129-bf870a37c471",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "080 Abstract class and Interface usage Is-a relation vs Has-a capability"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093055,
        "id": "1f73b661-6746-4ad9-b0ad-367ad20d6cb8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093055,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When to use abstract classes: To implement the same or different behaviour among multiple related objects"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When to use abstract classes: To implement the same or different behaviour among multiple related objects"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093058,
        "id": "604e7ba2-8dd8-4a59-a2f0-d336276d0e55",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093058,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When to use interfaces: to implement a contract by multiple unrelated objects"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When to use interfaces: to implement a contract by multiple unrelated objects"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093058,
        "id": "4c808a86-4b2b-4a3c-ac26-109f1739d781",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093058,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Abstract classes create “is a” relations while interfaces provide “has a” capability.",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Abstract classes create “is a” relations while interfaces provide “has a” capability.",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093058,
        "id": "448338a2-c7f5-4cc9-86c2-7e10881d0da5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093058,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This can be seen in the code below:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This can be seen in the code below:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093058,
        "id": "17532cf0-12ed-408b-8839-509abace3a16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093058,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class InterfaceAndAbstractClassDemo{\n    public static void main(String args[]){\n        \n        Dog dog = new Dog(\"Jack\",16);\n        Cat cat = new Cat(\"Joe\",20);\n            \n        System.out.println(\"Dog:\"+dog);\n        System.out.println(\"Cat:\"+cat);\n        \n        dog.remember();\n        dog.protectOwner();\n        Learn dl = dog;\n        dl.learn();\n                \n        cat.remember();\n        cat.protectOwner();\n        \n        Climb c = cat;\n        c.climb();\n        \n        Man man = new Man(\"Ravindra\",40);\n        System.out.println(man);\n        \n        Climb cm = man;\n        cm.climb();\n        Think t = man;\n        t.think();\n        Learn l = man;\n        l.learn();\n        Apply a = man;\n        a.apply();\n    }\n}\n\nabstract class Animal{\n    String name;\n    int lifeExpentency;\n    public Animal(String name,int lifeExpentency ){\n        this.name = name;\n        this.lifeExpentency=lifeExpentency;\n    }\n    public abstract void remember();\n    public abstract void protectOwner();\n    \n    public String toString(){\n        return this.getClass().getSimpleName()+\":\"+name+\":\"+lifeExpentency;\n    }\n}\nclass Dog extends Animal implements Learn{\n    \n    public Dog(String name,int age){\n        super(name,age);\n    }\n    public void remember(){\n        System.out.println(this.getClass().getSimpleName()+\" can remember for 5 minutes\");\n    }\n    public void protectOwner(){\n        System.out.println(this.getClass().getSimpleName()+ \" will protect owner\");\n    }\n    public void learn(){\n        System.out.println(this.getClass().getSimpleName()+ \" can learn:\");\n    }\n}\nclass Cat extends Animal implements Climb {\n    public Cat(String name,int age){\n        super(name,age);\n    }\n    public void remember(){\n        System.out.println(this.getClass().getSimpleName() + \" can remember for 16 hours\");\n    }\n    public void protectOwner(){\n        System.out.println(this.getClass().getSimpleName()+ \" won't protect owner\");\n    }\n    public void climb(){\n        System.out.println(this.getClass().getSimpleName()+ \" can climb\");\n    }\n}\ninterface Climb{\n    void climb();\n}\ninterface Think {\n    void think();\n}\n\ninterface Learn {\n    void learn();\n}\ninterface Apply{\n    void apply();\n}\n\nclass Man implements Think,Learn,Apply,Climb{\n    String name;\n    int age;\n\n    public Man(String name,int age){\n        this.name = name;\n        this.age = age;\n    }\n    public void think(){\n        System.out.println(\"I can think:\"+this.getClass().getSimpleName());\n    }\n    public void learn(){\n        System.out.println(\"I can learn:\"+this.getClass().getSimpleName());\n    }\n    public void apply(){\n        System.out.println(\"I can apply:\"+this.getClass().getSimpleName());\n    }\n    public void climb(){\n        System.out.println(\"I can climb:\"+this.getClass().getSimpleName());\n    }\n    public String toString(){\n        return \"Man :\"+name+\":Age:\"+age;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class InterfaceAndAbstractClassDemo{\n    public static void main(String args[]){\n        \n        Dog dog = new Dog(\"Jack\",16);\n        Cat cat = new Cat(\"Joe\",20);\n            \n        System.out.println(\"Dog:\"+dog);\n        System.out.println(\"Cat:\"+cat);\n        \n        dog.remember();\n        dog.protectOwner();\n        Learn dl = dog;\n        dl.learn();\n                \n        cat.remember();\n        cat.protectOwner();\n        \n        Climb c = cat;\n        c.climb();\n        \n        Man man = new Man(\"Ravindra\",40);\n        System.out.println(man);\n        \n        Climb cm = man;\n        cm.climb();\n        Think t = man;\n        t.think();\n        Learn l = man;\n        l.learn();\n        Apply a = man;\n        a.apply();\n    }\n}\n\nabstract class Animal{\n    String name;\n    int lifeExpentency;\n    public Animal(String name,int lifeExpentency ){\n        this.name = name;\n        this.lifeExpentency=lifeExpentency;\n    }\n    public abstract void remember();\n    public abstract void protectOwner();\n    \n    public String toString(){\n        return this.getClass().getSimpleName()+\":\"+name+\":\"+lifeExpentency;\n    }\n}\nclass Dog extends Animal implements Learn{\n    \n    public Dog(String name,int age){\n        super(name,age);\n    }\n    public void remember(){\n        System.out.println(this.getClass().getSimpleName()+\" can remember for 5 minutes\");\n    }\n    public void protectOwner(){\n        System.out.println(this.getClass().getSimpleName()+ \" will protect owner\");\n    }\n    public void learn(){\n        System.out.println(this.getClass().getSimpleName()+ \" can learn:\");\n    }\n}\nclass Cat extends Animal implements Climb {\n    public Cat(String name,int age){\n        super(name,age);\n    }\n    public void remember(){\n        System.out.println(this.getClass().getSimpleName() + \" can remember for 16 hours\");\n    }\n    public void protectOwner(){\n        System.out.println(this.getClass().getSimpleName()+ \" won't protect owner\");\n    }\n    public void climb(){\n        System.out.println(this.getClass().getSimpleName()+ \" can climb\");\n    }\n}\ninterface Climb{\n    void climb();\n}\ninterface Think {\n    void think();\n}\n\ninterface Learn {\n    void learn();\n}\ninterface Apply{\n    void apply();\n}\n\nclass Man implements Think,Learn,Apply,Climb{\n    String name;\n    int age;\n\n    public Man(String name,int age){\n        this.name = name;\n        this.age = age;\n    }\n    public void think(){\n        System.out.println(\"I can think:\"+this.getClass().getSimpleName());\n    }\n    public void learn(){\n        System.out.println(\"I can learn:\"+this.getClass().getSimpleName());\n    }\n    public void apply(){\n        System.out.println(\"I can apply:\"+this.getClass().getSimpleName());\n    }\n    public void climb(){\n        System.out.println(\"I can climb:\"+this.getClass().getSimpleName());\n    }\n    public String toString(){\n        return \"Man :\"+name+\":Age:\"+age;\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093058,
        "id": "54d7e3de-59e3-4464-99f8-1b48f9fba060",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093058,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093058,
        "id": "00078f64-d000-4fe3-9c5f-e3a3b8909dd9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093058,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Dog:Dog:Jack:16\nCat:Cat:Joe:20\nDog can remember for 5 minutes\nDog will protect owner\nDog can learn:\nCat can remember for 16 hours\nCat won't protect owner\nCat can climb\nMan :Ravindra:Age:40\nI can climb:Man\nI can think:Man\nI can learn:Man\nI can apply:Man"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Dog:Dog:Jack:16\nCat:Cat:Joe:20\nDog can remember for 5 minutes\nDog will protect owner\nDog can learn:\nCat can remember for 16 hours\nCat won't protect owner\nCat can climb\nMan :Ravindra:Age:40\nI can climb:Man\nI can think:Man\nI can learn:Man\nI can apply:Man",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093059,
        "id": "6bd708d9-7a13-42c5-9957-1e2aea813ba3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093059,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Key notes:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Key notes:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093059,
        "id": "4448e534-7b73-419a-a3c4-2fc1f8202339",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093059,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Animal",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is an abstract class with shared attributes: "
            ],
            [
              "name",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "lifeExpectancy",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and abstract methods: "
            ],
            [
              "remember()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "protectOwner()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "Dog",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Cat",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are "
            ],
            [
              "Animals",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that have implemented the "
            ],
            [
              "remember()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "protectOwner()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " methods."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Animal",
            "AttrFlags": 2
          },
          {
            "Text": " is an abstract class with shared attributes: "
          },
          {
            "Text": "name",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "lifeExpectancy",
            "AttrFlags": 2
          },
          {
            "Text": " and abstract methods: "
          },
          {
            "Text": "remember()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "protectOwner()",
            "AttrFlags": 2
          },
          {
            "Text": ". "
          },
          {
            "Text": "Dog",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Cat",
            "AttrFlags": 2
          },
          {
            "Text": " are "
          },
          {
            "Text": "Animals",
            "AttrFlags": 2
          },
          {
            "Text": " that have implemented the "
          },
          {
            "Text": "remember()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "protectOwner()",
            "AttrFlags": 2
          },
          {
            "Text": " methods."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093060,
        "id": "ba99ebb4-e802-43e4-a297-ca2ff1f0b860",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093060,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Cat",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can "
            ],
            [
              "climb()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " but "
            ],
            [
              "Dog",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " cannot. "
            ],
            [
              "Dog",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can "
            ],
            [
              "think()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " but "
            ],
            [
              "Cat",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " cannot. These specific capabilities are added to "
            ],
            [
              "Cat",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Dog",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " by implementation."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Cat",
            "AttrFlags": 2
          },
          {
            "Text": " can "
          },
          {
            "Text": "climb()",
            "AttrFlags": 2
          },
          {
            "Text": " but "
          },
          {
            "Text": "Dog",
            "AttrFlags": 2
          },
          {
            "Text": " cannot. "
          },
          {
            "Text": "Dog",
            "AttrFlags": 2
          },
          {
            "Text": " can "
          },
          {
            "Text": "think()",
            "AttrFlags": 2
          },
          {
            "Text": " but "
          },
          {
            "Text": "Cat",
            "AttrFlags": 2
          },
          {
            "Text": " cannot. These specific capabilities are added to "
          },
          {
            "Text": "Cat",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Dog",
            "AttrFlags": 2
          },
          {
            "Text": " by implementation."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093060,
        "id": "19e2b93e-5b2c-4a12-b878-b38e91695dea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093060,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Man",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not an "
            ],
            [
              "Animal",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " but he can "
            ],
            [
              "Think",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " , "
            ],
            [
              "Learn",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Apply",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and "
            ],
            [
              "Climb",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Man",
            "AttrFlags": 2
          },
          {
            "Text": " is not an "
          },
          {
            "Text": "Animal",
            "AttrFlags": 2
          },
          {
            "Text": " but he can "
          },
          {
            "Text": "Think",
            "AttrFlags": 2
          },
          {
            "Text": " , "
          },
          {
            "Text": "Learn",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Apply",
            "AttrFlags": 2
          },
          {
            "Text": ", and "
          },
          {
            "Text": "Climb",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093060,
        "id": "ccc6efa0-6eeb-4908-9740-b9012c68a110",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093060,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Cat",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not a "
            ],
            [
              "Man",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " but it can "
            ],
            [
              "Climb",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Cat",
            "AttrFlags": 2
          },
          {
            "Text": " is not a "
          },
          {
            "Text": "Man",
            "AttrFlags": 2
          },
          {
            "Text": " but it can "
          },
          {
            "Text": "Climb",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093061,
        "id": "7333fd30-800a-4fef-9d59-48aa38585586",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093061,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Dog",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not a "
            ],
            [
              "Man",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " but it can "
            ],
            [
              "Learn",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Dog",
            "AttrFlags": 2
          },
          {
            "Text": " is not a "
          },
          {
            "Text": "Man",
            "AttrFlags": 2
          },
          {
            "Text": " but it can "
          },
          {
            "Text": "Learn",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093061,
        "id": "a80cc507-b225-465b-b7ab-b4701ba0bbf6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093061,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Man",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is neither a "
            ],
            [
              "Cat",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " nor a "
            ],
            [
              "Dog",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " but can have some of the capabilities of the latter two without extending "
            ],
            [
              "Animal",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Cat",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", or "
            ],
            [
              "Dog",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This is done with Interfaces."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Man",
            "AttrFlags": 2
          },
          {
            "Text": " is neither a "
          },
          {
            "Text": "Cat",
            "AttrFlags": 2
          },
          {
            "Text": " nor a "
          },
          {
            "Text": "Dog",
            "AttrFlags": 2
          },
          {
            "Text": " but can have some of the capabilities of the latter two without extending "
          },
          {
            "Text": "Animal",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Cat",
            "AttrFlags": 2
          },
          {
            "Text": ", or "
          },
          {
            "Text": "Dog",
            "AttrFlags": 2
          },
          {
            "Text": ". This is done with Interfaces."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093061,
        "id": "e63e697a-d681-45eb-aff5-50ce96cdb52a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093061,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Even though "
            ],
            [
              "Animal",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is an abstract class, it has a constructor, unlike an interface."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Even though "
          },
          {
            "Text": "Animal",
            "AttrFlags": 2
          },
          {
            "Text": " is an abstract class, it has a constructor, unlike an interface."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093061,
        "id": "778ad75e-614b-4ee3-b606-8631aa294218",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093061,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "TL;DR:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "TL;DR:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093061,
        "id": "d04f5f20-036d-4ef8-9da3-51417ca771bb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093061,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Unrelated classes can have capabilities through interfaces, but related classes change the behaviour through extension of base classes.",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Unrelated classes can have capabilities through interfaces, but related classes change the behaviour through extension of base classes.",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093063,
        "id": "320a1427-4636-40e3-8ebd-42eb3239b61e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093063,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Refer to the Java documentation "
            ],
            [
              "page",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/tutorial/java/IandI/abstract.html"
                ]
              ]
            ],
            [
              " to understand which one to use in a specific use case."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Refer to the Java documentation "
          },
          {
            "Text": "page",
            "Link": "https://docs.oracle.com/javase/tutorial/java/IandI/abstract.html"
          },
          {
            "Text": " to understand which one to use in a specific use case."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093063,
        "id": "b1c891bf-8318-4792-b0e8-3bf7fee999bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093063,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consider using abstract classes",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " if…"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consider using abstract classes",
            "AttrFlags": 1
          },
          {
            "Text": " if…"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093063,
        "id": "6a1f55d5-d433-43c3-919c-e16aef78b152",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093063,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You want to share code among several closely related classes."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "You want to share code among several closely related classes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093064,
        "id": "597620a1-58d5-4de3-a375-0e5fb0264a40",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093064,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You expect that classes that extend your abstract class have many common methods or fields, or require access modifiers other than public (such as protected and private)."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "You expect that classes that extend your abstract class have many common methods or fields, or require access modifiers other than public (such as protected and private)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093064,
        "id": "8b3dba44-8428-4aa2-b251-047e0e870aca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093064,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You want to declare non-static or non-final fields."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "You want to declare non-static or non-final fields."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093064,
        "id": "e448a344-33a4-41bc-bf83-60342788a101",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093064,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consider using interfaces",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " if…"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consider using interfaces",
            "AttrFlags": 1
          },
          {
            "Text": " if…"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093064,
        "id": "c0108828-ba2b-4a74-9821-8fc4d9dbf1c4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093064,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You expect that unrelated classes would implement your interface. For example, many unrelated objects can implement the "
            ],
            [
              "Serializable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "You expect that unrelated classes would implement your interface. For example, many unrelated objects can implement the "
          },
          {
            "Text": "Serializable",
            "AttrFlags": 2
          },
          {
            "Text": " interface."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093064,
        "id": "46e3172f-6d1e-4d2e-953f-d810eedbf1aa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093064,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You want to specify the behaviour of a particular data type but are not concerned about who implements its behaviour."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "You want to specify the behaviour of a particular data type but are not concerned about who implements its behaviour."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460093065,
        "id": "ddcca722-70f1-46e9-b2d8-1e3b9c9b7eb4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460093065,
        "parent_id": "a818bca8-8d53-42eb-907d-19347c5b695a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You want to take advantage of multiple inheritance of type."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "You want to take advantage of multiple inheritance of type."
          }
        ]
      }
    ],
    "title": "080 Abstract class and Interface usage Is-a relation vs Has-a capability"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}