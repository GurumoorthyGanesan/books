{
  "ID": "0ff4aa39-dfa1-4d89-a6a9-c9ad17e2ed0e",
  "Root": {
    "alive": true,
    "content": [
      "c490f3bd-87e4-422b-8901-c6cde8301d55",
      "e76f551f-bc38-4834-add4-de5d767eb6d3",
      "239c7243-6c6e-43f6-8f61-a2e54a4ab9c5",
      "851f5bdb-6f5c-4113-919b-2f1f0f32e0c5",
      "099af7da-e8db-40a8-8b79-e7c69f8ecf8e",
      "b492f9a3-b49c-4040-98de-13b7f3467771"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550461527331,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "0ff4aa39-dfa1-4d89-a6a9-c9ad17e2ed0e",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551747966409,
    "parent_id": "326ffb78-894f-49b9-bcf3-6b69c4bcd7d0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Lambda Expressions"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461527328,
        "id": "c490f3bd-87e4-422b-8901-c6cde8301d55",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461527328,
        "parent_id": "0ff4aa39-dfa1-4d89-a6a9-c9ad17e2ed0e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Runnable r = () -\u003e System.out.println(\"Hello World\");\n\nSupplier\u003cString\u003e c = () -\u003e \"Hello World\";\n\n// Collection::contains is a simple unary method and its behavior is\n// clear from the context. A method reference is preferred here.\nappendFilter(goodStrings::contains);\n\n// A lambda expression is easier to understand than just tempMap::put in this case\ntrackTemperature((time, temp) -\u003e tempMap.put(time, temp));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Runnable r = () -\u003e System.out.println(\"Hello World\");\n\nSupplier\u003cString\u003e c = () -\u003e \"Hello World\";\n\n// Collection::contains is a simple unary method and its behavior is\n// clear from the context. A method reference is preferred here.\nappendFilter(goodStrings::contains);\n\n// A lambda expression is easier to understand than just tempMap::put in this case\ntrackTemperature((time, temp) -\u003e tempMap.put(time, temp));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461527331,
        "id": "e76f551f-bc38-4834-add4-de5d767eb6d3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461527331,
        "parent_id": "0ff4aa39-dfa1-4d89-a6a9-c9ad17e2ed0e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Expression lambdas are preferred over single-line block lambdas."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Expression lambdas are preferred over single-line block lambdas."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461527331,
        "id": "239c7243-6c6e-43f6-8f61-a2e54a4ab9c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461527331,
        "parent_id": "0ff4aa39-dfa1-4d89-a6a9-c9ad17e2ed0e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Method references should generally be preferred over lambda expressions."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Method references should generally be preferred over lambda expressions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461527331,
        "id": "851f5bdb-6f5c-4113-919b-2f1f0f32e0c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461527331,
        "parent_id": "0ff4aa39-dfa1-4d89-a6a9-c9ad17e2ed0e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For bound instance method references, or methods with arity greater than one, a lambda expression may be easier to understand and therefore preferred. Especially if the behavior of the method is not clear from the context."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "For bound instance method references, or methods with arity greater than one, a lambda expression may be easier to understand and therefore preferred. Especially if the behavior of the method is not clear from the context."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461527331,
        "id": "099af7da-e8db-40a8-8b79-e7c69f8ecf8e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461527331,
        "parent_id": "0ff4aa39-dfa1-4d89-a6a9-c9ad17e2ed0e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The parameter types should be omitted unless they improve readability."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The parameter types should be omitted unless they improve readability."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461527331,
        "id": "b492f9a3-b49c-4040-98de-13b7f3467771",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461527331,
        "parent_id": "0ff4aa39-dfa1-4d89-a6a9-c9ad17e2ed0e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If a lambda expression stretches over more than a few lines, consider creating a method."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If a lambda expression stretches over more than a few lines, consider creating a method."
          }
        ]
      }
    ],
    "title": "Lambda Expressions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}