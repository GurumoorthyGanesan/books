{
  "ID": "e1173134-418e-4ed8-bcfd-5cfe43508063",
  "Root": {
    "alive": true,
    "content": [
      "2a4bfd0f-ef9f-4d29-9507-3c73da290a08",
      "0844a444-cc22-4c84-80c6-bd1690c117b7",
      "f9b9f16c-e71c-4df1-b2d8-cf4a96f27d5f",
      "15bdf94b-be4c-4787-a7fc-d11ab91e64d2",
      "df3e222a-0d8b-4db6-b300-447e7062fa7e",
      "bbc59606-f041-4643-bfe4-42c3c91f3cdb",
      "edcdc5d7-6357-4a18-b523-ac745d8eca02",
      "ef0c1a03-d32d-4469-bf36-3c090edb3d64",
      "b6765de8-5427-4ec1-87a0-94dbcac90cdb",
      "f4898040-c119-4d08-883a-b6f07ea5b30d",
      "98c1212d-b08c-4a49-8b61-03a1065847bd",
      "6a9036fe-eb6f-49c5-9e5d-328ea0333804"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550518010491,
    "id": "e1173134-418e-4ed8-bcfd-5cfe43508063",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550518010491,
    "parent_id": "65b3b4cb-dbb9-4dfb-9c83-9429dfa4e76a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "190 Pitfall incorrect use of wait notify"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518010486,
        "id": "2a4bfd0f-ef9f-4d29-9507-3c73da290a08",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518010486,
        "parent_id": "e1173134-418e-4ed8-bcfd-5cfe43508063",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The methods "
            ],
            [
              "object.wait()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "object.notify()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "object.notifyAll()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are meant to be used in a very specific way. (see http://stackoverflow.com/documentation/java/5409/wait-notify#t=20160811161648303307 )"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The methods "
          },
          {
            "Text": "object.wait()",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "object.notify()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "object.notifyAll()",
            "AttrFlags": 2
          },
          {
            "Text": " are meant to be used in a very specific way. (see http://stackoverflow.com/documentation/java/5409/wait-notify#t=20160811161648303307 )"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518010488,
        "id": "0844a444-cc22-4c84-80c6-bd1690c117b7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518010488,
        "parent_id": "e1173134-418e-4ed8-bcfd-5cfe43508063",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The “Lost Notification” problem"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "The “Lost Notification” problem"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518010489,
        "id": "f9b9f16c-e71c-4df1-b2d8-cf4a96f27d5f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518010489,
        "parent_id": "e1173134-418e-4ed8-bcfd-5cfe43508063",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One common beginner mistake is to unconditionally call "
            ],
            [
              "object.wait()",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One common beginner mistake is to unconditionally call "
          },
          {
            "Text": "object.wait()",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518010489,
        "id": "15bdf94b-be4c-4787-a7fc-d11ab91e64d2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518010489,
        "parent_id": "e1173134-418e-4ed8-bcfd-5cfe43508063",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "private final Object lock = new Object();\n\npublic void myConsumer() {\n    synchronized (lock) {\n        lock.wait();     // DON'T DO THIS!!\n    }\n    doSomething();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "private final Object lock = new Object();\n\npublic void myConsumer() {\n    synchronized (lock) {\n        lock.wait();     // DON'T DO THIS!!\n    }\n    doSomething();\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518010489,
        "id": "df3e222a-0d8b-4db6-b300-447e7062fa7e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518010489,
        "parent_id": "e1173134-418e-4ed8-bcfd-5cfe43508063",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The reason this is wrong is that it depends on some other thread to call "
            ],
            [
              "lock.notify()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "lock.notifyAll()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", but nothing guarantees that the other thread did not make that call "
            ],
            [
              "before",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " the consumer thread called "
            ],
            [
              "lock.wait()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The reason this is wrong is that it depends on some other thread to call "
          },
          {
            "Text": "lock.notify()",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "lock.notifyAll()",
            "AttrFlags": 2
          },
          {
            "Text": ", but nothing guarantees that the other thread did not make that call "
          },
          {
            "Text": "before",
            "AttrFlags": 4
          },
          {
            "Text": " the consumer thread called "
          },
          {
            "Text": "lock.wait()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518010489,
        "id": "bbc59606-f041-4643-bfe4-42c3c91f3cdb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518010489,
        "parent_id": "e1173134-418e-4ed8-bcfd-5cfe43508063",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "lock.notify()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "lock.notifyAll()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " do not do anything at all if some other thread is not "
            ],
            [
              "already",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " waiting for the notification. The thread that calls "
            ],
            [
              "myConsumer()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in this example will hang forever if it is too late to catch the notification."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "lock.notify()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "lock.notifyAll()",
            "AttrFlags": 2
          },
          {
            "Text": " do not do anything at all if some other thread is not "
          },
          {
            "Text": "already",
            "AttrFlags": 4
          },
          {
            "Text": " waiting for the notification. The thread that calls "
          },
          {
            "Text": "myConsumer()",
            "AttrFlags": 2
          },
          {
            "Text": " in this example will hang forever if it is too late to catch the notification."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518010490,
        "id": "edcdc5d7-6357-4a18-b523-ac745d8eca02",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518010490,
        "parent_id": "e1173134-418e-4ed8-bcfd-5cfe43508063",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The “Illegal Monitor State” bug"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "The “Illegal Monitor State” bug"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518010490,
        "id": "ef0c1a03-d32d-4469-bf36-3c090edb3d64",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518010490,
        "parent_id": "e1173134-418e-4ed8-bcfd-5cfe43508063",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you call "
            ],
            [
              "wait()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "notify()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " on an object without holding the lock, then the JVM will throw "
            ],
            [
              "IllegalMonitorStateException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you call "
          },
          {
            "Text": "wait()",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "notify()",
            "AttrFlags": 2
          },
          {
            "Text": " on an object without holding the lock, then the JVM will throw "
          },
          {
            "Text": "IllegalMonitorStateException",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518010490,
        "id": "b6765de8-5427-4ec1-87a0-94dbcac90cdb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518010490,
        "parent_id": "e1173134-418e-4ed8-bcfd-5cfe43508063",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public void myConsumer() {\n    lock.wait();      // throws exception\n    consume();\n}\n\npublic void myProducer() {\n    produce();\n    lock.notify();    // throws exception\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public void myConsumer() {\n    lock.wait();      // throws exception\n    consume();\n}\n\npublic void myProducer() {\n    produce();\n    lock.notify();    // throws exception\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518010490,
        "id": "f4898040-c119-4d08-883a-b6f07ea5b30d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518010490,
        "parent_id": "e1173134-418e-4ed8-bcfd-5cfe43508063",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "(The design for "
            ],
            [
              "wait()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " / "
            ],
            [
              "notify()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " requires that the lock is held because this is necessary to avoid systemic race conditions. If it was possible to call "
            ],
            [
              "wait()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "notify()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " without locking, then it would be impossible to implement the primary use-case for these primitives: waiting for a condition to occur.)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "(The design for "
          },
          {
            "Text": "wait()",
            "AttrFlags": 2
          },
          {
            "Text": " / "
          },
          {
            "Text": "notify()",
            "AttrFlags": 2
          },
          {
            "Text": " requires that the lock is held because this is necessary to avoid systemic race conditions. If it was possible to call "
          },
          {
            "Text": "wait()",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "notify()",
            "AttrFlags": 2
          },
          {
            "Text": " without locking, then it would be impossible to implement the primary use-case for these primitives: waiting for a condition to occur.)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518010490,
        "id": "98c1212d-b08c-4a49-8b61-03a1065847bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518010490,
        "parent_id": "e1173134-418e-4ed8-bcfd-5cfe43508063",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Wait / notify is too low-level"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Wait / notify is too low-level"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518010491,
        "id": "6a9036fe-eb6f-49c5-9e5d-328ea0333804",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518010491,
        "parent_id": "e1173134-418e-4ed8-bcfd-5cfe43508063",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "best",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " way to avoid problems with "
            ],
            [
              "wait()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "notify()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is to not use them. Most synchronization problems can be solved by using the higher-level synchronization objects (queues, barriers, semaphores, etc.) that are available in the "
            ],
            [
              "java.utils.concurrent",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " package."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "best",
            "AttrFlags": 4
          },
          {
            "Text": " way to avoid problems with "
          },
          {
            "Text": "wait()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "notify()",
            "AttrFlags": 2
          },
          {
            "Text": " is to not use them. Most synchronization problems can be solved by using the higher-level synchronization objects (queues, barriers, semaphores, etc.) that are available in the "
          },
          {
            "Text": "java.utils.concurrent",
            "AttrFlags": 2
          },
          {
            "Text": " package."
          }
        ]
      }
    ],
    "title": "190 Pitfall incorrect use of wait notify"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}