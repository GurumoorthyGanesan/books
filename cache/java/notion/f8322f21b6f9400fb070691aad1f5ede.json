{
  "ID": "f8322f21-b6f9-400f-b070-691aad1f5ede",
  "Root": {
    "alive": true,
    "content": [
      "32c1cc29-68e0-4a10-9b2f-55e723c762e8",
      "c6af0807-fb85-445a-96b6-8f4cafa9ce86",
      "62a95e2d-28b4-4391-a715-7bc8ff904aca",
      "9b67b716-e098-460f-bb2a-89f401e370bb",
      "eccf19a7-4cb0-45f8-9107-ffe734c19e3b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460573010,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "f8322f21-b6f9-400f-b070-691aad1f5ede",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551763873489,
    "parent_id": "8576ab83-1126-4d17-b0cf-2a0ba47249c1",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Enum with properties fields"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460573007,
        "id": "32c1cc29-68e0-4a10-9b2f-55e723c762e8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460573007,
        "parent_id": "f8322f21-b6f9-400f-b070-691aad1f5ede",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In case we want to use "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with more information and not just as constant values, and we want to be able to compare two enums."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In case we want to use "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " with more information and not just as constant values, and we want to be able to compare two enums."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460573010,
        "id": "c6af0807-fb85-445a-96b6-8f4cafa9ce86",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460573010,
        "parent_id": "f8322f21-b6f9-400f-b070-691aad1f5ede",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consider the following example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consider the following example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460573010,
        "id": "62a95e2d-28b4-4391-a715-7bc8ff904aca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460573010,
        "parent_id": "f8322f21-b6f9-400f-b070-691aad1f5ede",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public enum Coin {\n    PENNY(1), NICKEL(5), DIME(10), QUARTER(25);\n\n    private final int value;\n\n    Coin(int value){\n        this.value = value;\n    }\n\n    public boolean isGreaterThan(Coin other){\n        return this.value \u003e other.value;\n    }\n\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public enum Coin {\n    PENNY(1), NICKEL(5), DIME(10), QUARTER(25);\n\n    private final int value;\n\n    Coin(int value){\n        this.value = value;\n    }\n\n    public boolean isGreaterThan(Coin other){\n        return this.value \u003e other.value;\n    }\n\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460573010,
        "id": "9b67b716-e098-460f-bb2a-89f401e370bb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460573010,
        "parent_id": "f8322f21-b6f9-400f-b070-691aad1f5ede",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here we defined an "
            ],
            [
              "Enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " called "
            ],
            [
              "Coin",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which represent its value. With the method "
            ],
            [
              "isGreaterThan",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " we can compare two "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here we defined an "
          },
          {
            "Text": "Enum",
            "AttrFlags": 2
          },
          {
            "Text": " called "
          },
          {
            "Text": "Coin",
            "AttrFlags": 2
          },
          {
            "Text": " which represent its value. With the method "
          },
          {
            "Text": "isGreaterThan",
            "AttrFlags": 2
          },
          {
            "Text": " we can compare two "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": "s:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460573010,
        "id": "eccf19a7-4cb0-45f8-9107-ffe734c19e3b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460573010,
        "parent_id": "f8322f21-b6f9-400f-b070-691aad1f5ede",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Coin penny = Coin.PENNY;\nCoin dime = Coin.DIME;\n\nSystem.out.println(penny.isGreaterThan(dime)); // prints: false\nSystem.out.println(dime.isGreaterThan(penny)); // prints: true"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Coin penny = Coin.PENNY;\nCoin dime = Coin.DIME;\n\nSystem.out.println(penny.isGreaterThan(dime)); // prints: false\nSystem.out.println(dime.isGreaterThan(penny)); // prints: true",
        "code_language": "Plain Text"
      }
    ],
    "title": "Enum with properties fields",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}