{
  "ID": "4a14daac-0e22-4c9f-bff3-f0e73ac240d2",
  "Root": {
    "alive": true,
    "content": [
      "27b28ae3-445c-4bba-85c4-1c4b25a13dc8",
      "56dd4668-97fd-49f8-afa4-fd250c2d3a71",
      "c8da51d0-7727-4ea8-bed6-77b5cdbbe9a4",
      "8307c72a-0ee0-4e35-86ed-39605077a305"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550461557369,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "4a14daac-0e22-4c9f-bff3-f0e73ac240d2",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551746025714,
    "parent_id": "9e1981fd-3dd3-4f41-8ad4-fec88463b6b0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Object Cloning"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461557363,
        "id": "27b28ae3-445c-4bba-85c4-1c4b25a13dc8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461557363,
        "parent_id": "4a14daac-0e22-4c9f-bff3-f0e73ac240d2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461557367,
        "id": "56dd4668-97fd-49f8-afa4-fd250c2d3a71",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461557367,
        "parent_id": "4a14daac-0e22-4c9f-bff3-f0e73ac240d2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Cloning can be tricky, especially when the object’s fields hold other objects. There are situations where you want to perform a "
            ],
            [
              "deep copy",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Object_copying#Deep_copy"
                ]
              ]
            ],
            [
              ", instead of only copying the field values (i.e. references to the other objects)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Cloning can be tricky, especially when the object’s fields hold other objects. There are situations where you want to perform a "
          },
          {
            "Text": "deep copy",
            "Link": "https://en.wikipedia.org/wiki/Object_copying#Deep_copy"
          },
          {
            "Text": ", instead of only copying the field values (i.e. references to the other objects)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461557368,
        "id": "c8da51d0-7727-4ea8-bed6-77b5cdbbe9a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461557368,
        "parent_id": "4a14daac-0e22-4c9f-bff3-f0e73ac240d2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The bottom line is "
            ],
            [
              "clone is broken",
              [
                [
                  "a",
                  "http://www.artima.com/intv/bloch13.html"
                ]
              ]
            ],
            [
              ", and you should think twice before implementing the "
            ],
            [
              "Cloneable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface and overriding the "
            ],
            [
              "clone",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method. The "
            ],
            [
              "clone",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method is declared in the "
            ],
            [
              "Object",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class and not in the "
            ],
            [
              "Cloneable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface, so "
            ],
            [
              "Cloneable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " fails to function as an interface because it lacks a public "
            ],
            [
              "clone",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method. The result is the contract for using "
            ],
            [
              "clone",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is thinly documented and weakly enforced. For example, a class that overrides "
            ],
            [
              "clone",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " sometimes relies on all its parent classes also overriding "
            ],
            [
              "clone",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". They are not enforced to do so, and if they do not your code may throw exceptions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The bottom line is "
          },
          {
            "Text": "clone is broken",
            "Link": "http://www.artima.com/intv/bloch13.html"
          },
          {
            "Text": ", and you should think twice before implementing the "
          },
          {
            "Text": "Cloneable",
            "AttrFlags": 2
          },
          {
            "Text": " interface and overriding the "
          },
          {
            "Text": "clone",
            "AttrFlags": 2
          },
          {
            "Text": " method. The "
          },
          {
            "Text": "clone",
            "AttrFlags": 2
          },
          {
            "Text": " method is declared in the "
          },
          {
            "Text": "Object",
            "AttrFlags": 2
          },
          {
            "Text": " class and not in the "
          },
          {
            "Text": "Cloneable",
            "AttrFlags": 2
          },
          {
            "Text": " interface, so "
          },
          {
            "Text": "Cloneable",
            "AttrFlags": 2
          },
          {
            "Text": " fails to function as an interface because it lacks a public "
          },
          {
            "Text": "clone",
            "AttrFlags": 2
          },
          {
            "Text": " method. The result is the contract for using "
          },
          {
            "Text": "clone",
            "AttrFlags": 2
          },
          {
            "Text": " is thinly documented and weakly enforced. For example, a class that overrides "
          },
          {
            "Text": "clone",
            "AttrFlags": 2
          },
          {
            "Text": " sometimes relies on all its parent classes also overriding "
          },
          {
            "Text": "clone",
            "AttrFlags": 2
          },
          {
            "Text": ". They are not enforced to do so, and if they do not your code may throw exceptions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461557368,
        "id": "8307c72a-0ee0-4e35-86ed-39605077a305",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461557368,
        "parent_id": "4a14daac-0e22-4c9f-bff3-f0e73ac240d2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A much better solution for providing cloning functionality is to provide a "
            ],
            [
              "copy constructor",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "copy factory",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". Refer to "
            ],
            [
              "Joshua Bloch’s Effective Java",
              [
                [
                  "a",
                  "https://amzn.com/B00B8V09HY"
                ]
              ]
            ],
            [
              " Item 11: Override clone judiciously."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A much better solution for providing cloning functionality is to provide a "
          },
          {
            "Text": "copy constructor",
            "AttrFlags": 4
          },
          {
            "Text": " or "
          },
          {
            "Text": "copy factory",
            "AttrFlags": 4
          },
          {
            "Text": ". Refer to "
          },
          {
            "Text": "Joshua Bloch’s Effective Java",
            "Link": "https://amzn.com/B00B8V09HY"
          },
          {
            "Text": " Item 11: Override clone judiciously."
          }
        ]
      }
    ],
    "title": "Object Cloning",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}