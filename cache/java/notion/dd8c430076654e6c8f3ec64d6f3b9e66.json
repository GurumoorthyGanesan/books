{
  "ID": "dd8c4300-7665-4e6c-8f3e-c64d6f3b9e66",
  "Root": {
    "alive": true,
    "content": [
      "15a4f75c-cbcd-4d77-a9ac-84feb5507109",
      "d0ac467d-4320-4c49-8364-33e9273ad532",
      "c6db8e9c-36cd-4a58-80cb-1dc0cae2bdaf",
      "376654cc-31de-4bff-baed-e754ab3621d1",
      "18ee6eb6-e0a7-4415-8371-c3de24d68616",
      "2e9c7ba7-7a37-458b-85f1-b0c3f47fefe7",
      "01fcff2c-720e-4f53-9c8d-1e4883e496f8",
      "034b4a66-abe5-4368-9acb-0cfb7d9e86d5",
      "cf5920d2-6ca3-46e7-8c50-787756cd7775"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460792460,
    "id": "dd8c4300-7665-4e6c-8f3e-c64d6f3b9e66",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460792460,
    "parent_id": "168082aa-5571-487a-900c-cbc49e8a374b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Removing elements using an iterator"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460792456,
        "id": "15a4f75c-cbcd-4d77-a9ac-84feb5507109",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460792456,
        "parent_id": "dd8c4300-7665-4e6c-8f3e-c64d6f3b9e66",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "Iterator.remove()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method is an optional method that removes the element returned by the previous call to "
            ],
            [
              "Iterator.next()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". For example, the following code populates a list of strings and then removes all of the empty strings."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "Iterator.remove()",
            "AttrFlags": 2
          },
          {
            "Text": " method is an optional method that removes the element returned by the previous call to "
          },
          {
            "Text": "Iterator.next()",
            "AttrFlags": 2
          },
          {
            "Text": ". For example, the following code populates a list of strings and then removes all of the empty strings."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460792459,
        "id": "d0ac467d-4320-4c49-8364-33e9273ad532",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460792459,
        "parent_id": "dd8c4300-7665-4e6c-8f3e-c64d6f3b9e66",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "List\u003cString\u003e names = new ArrayList\u003c\u003e();\nnames.add(\"name 1\");\nnames.add(\"name 2\");\nnames.add(\"\");\nnames.add(\"name 3\");\nnames.add(\"\");\nSystem.out.println(\"Old Size : \" + names.size());\nIterator\u003cString\u003e it = names.iterator();\nwhile (it.hasNext()) {\n  String el = it.next();\n  if (el.equals(\"\")) {\n    it.remove();\n  }\n}\nSystem.out.println(\"New Size : \" + names.size());"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "List\u003cString\u003e names = new ArrayList\u003c\u003e();\nnames.add(\"name 1\");\nnames.add(\"name 2\");\nnames.add(\"\");\nnames.add(\"name 3\");\nnames.add(\"\");\nSystem.out.println(\"Old Size : \" + names.size());\nIterator\u003cString\u003e it = names.iterator();\nwhile (it.hasNext()) {\n  String el = it.next();\n  if (el.equals(\"\")) {\n    it.remove();\n  }\n}\nSystem.out.println(\"New Size : \" + names.size());",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460792459,
        "id": "c6db8e9c-36cd-4a58-80cb-1dc0cae2bdaf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460792459,
        "parent_id": "dd8c4300-7665-4e6c-8f3e-c64d6f3b9e66",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460792459,
        "id": "376654cc-31de-4bff-baed-e754ab3621d1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460792459,
        "parent_id": "dd8c4300-7665-4e6c-8f3e-c64d6f3b9e66",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Old Size : 5\nNew Size : 3"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Old Size : 5\nNew Size : 3",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460792459,
        "id": "18ee6eb6-e0a7-4415-8371-c3de24d68616",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460792459,
        "parent_id": "dd8c4300-7665-4e6c-8f3e-c64d6f3b9e66",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that is the code above is the safe way to remove elements while iterating a typical collection. If instead, you attempt to do remove elements from a collection like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that is the code above is the safe way to remove elements while iterating a typical collection. If instead, you attempt to do remove elements from a collection like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460792459,
        "id": "2e9c7ba7-7a37-458b-85f1-b0c3f47fefe7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460792459,
        "parent_id": "dd8c4300-7665-4e6c-8f3e-c64d6f3b9e66",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "for (String el: names) {\n    if (el.equals(\"\")) {\n        names.remove(el); // WRONG!\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "for (String el: names) {\n    if (el.equals(\"\")) {\n        names.remove(el); // WRONG!\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460792459,
        "id": "01fcff2c-720e-4f53-9c8d-1e4883e496f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460792459,
        "parent_id": "dd8c4300-7665-4e6c-8f3e-c64d6f3b9e66",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "a typical collection (such as "
            ],
            [
              "ArrayList",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") which provides iterators with "
            ],
            [
              "fail fast",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " iterator semantics will throw a "
            ],
            [
              "ConcurrentModificationException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "a typical collection (such as "
          },
          {
            "Text": "ArrayList",
            "AttrFlags": 2
          },
          {
            "Text": ") which provides iterators with "
          },
          {
            "Text": "fail fast",
            "AttrFlags": 4
          },
          {
            "Text": " iterator semantics will throw a "
          },
          {
            "Text": "ConcurrentModificationException",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460792460,
        "id": "034b4a66-abe5-4368-9acb-0cfb7d9e86d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460792460,
        "parent_id": "dd8c4300-7665-4e6c-8f3e-c64d6f3b9e66",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "remove()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method can only called (once) following a "
            ],
            [
              "next()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " call. If it is called before calling "
            ],
            [
              "next()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or if it is called twice following a "
            ],
            [
              "next()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " call, then the "
            ],
            [
              "remove()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " call will throw an "
            ],
            [
              "IllegalStateException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "remove()",
            "AttrFlags": 2
          },
          {
            "Text": " method can only called (once) following a "
          },
          {
            "Text": "next()",
            "AttrFlags": 2
          },
          {
            "Text": " call. If it is called before calling "
          },
          {
            "Text": "next()",
            "AttrFlags": 2
          },
          {
            "Text": " or if it is called twice following a "
          },
          {
            "Text": "next()",
            "AttrFlags": 2
          },
          {
            "Text": " call, then the "
          },
          {
            "Text": "remove()",
            "AttrFlags": 2
          },
          {
            "Text": " call will throw an "
          },
          {
            "Text": "IllegalStateException",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460792460,
        "id": "cf5920d2-6ca3-46e7-8c50-787756cd7775",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460792460,
        "parent_id": "dd8c4300-7665-4e6c-8f3e-c64d6f3b9e66",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "remove",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operation is described as an "
            ],
            [
              "optional",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " operation; i.e. not all iterators will allow it. Examples where it is not supported include iterators for immutable collections, read-only views of collections, or fixed sized collections. If "
            ],
            [
              "remove()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is called when the iterator does not support removal, it will throw an "
            ],
            [
              "UnsupportedOperationException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "remove",
            "AttrFlags": 2
          },
          {
            "Text": " operation is described as an "
          },
          {
            "Text": "optional",
            "AttrFlags": 4
          },
          {
            "Text": " operation; i.e. not all iterators will allow it. Examples where it is not supported include iterators for immutable collections, read-only views of collections, or fixed sized collections. If "
          },
          {
            "Text": "remove()",
            "AttrFlags": 2
          },
          {
            "Text": " is called when the iterator does not support removal, it will throw an "
          },
          {
            "Text": "UnsupportedOperationException",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "020 Removing elements using an iterator"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}