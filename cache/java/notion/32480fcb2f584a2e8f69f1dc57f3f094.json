{
  "ID": "32480fcb-2f58-4a2e-8f69-f1dc57f3f094",
  "Root": {
    "alive": true,
    "content": [
      "e8a68f01-ef71-495f-ae15-ae785076348e",
      "3fba242f-728f-45e4-ab3f-981a1deaf89f",
      "4e74f991-89d8-424b-8a86-038d320623fa",
      "5d2b9fc4-d717-4c00-9a39-1748a2ab917a",
      "eb60d700-4015-4d1c-8b09-03b3834f2e9b",
      "18c7076d-c0b4-45b3-82d4-ac734af8bbc0",
      "8b33deb3-d6b0-4be3-a16b-d936ad733318",
      "1d866304-f8a8-4c6a-8afc-1cbd9de62a19",
      "e74f39e3-2b0d-4a07-b580-2401fa53ae33",
      "d0b24575-634e-4172-b1dd-e6b735d537fa",
      "65f83134-b7d2-4b43-88b7-fda5af8a4640"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550518370428,
    "id": "32480fcb-2f58-4a2e-8f69-f1dc57f3f094",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550518370428,
    "parent_id": "68d3f97c-3d71-48d3-955c-6eb7411e2d26",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "050 Pitfall - Catching InterruptedException"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370423,
        "id": "e8a68f01-ef71-495f-ae15-ae785076348e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370423,
        "parent_id": "32480fcb-2f58-4a2e-8f69-f1dc57f3f094",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As already pointed out in other pitfalls, catching all exceptions by using"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As already pointed out in other pitfalls, catching all exceptions by using"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370426,
        "id": "3fba242f-728f-45e4-ab3f-981a1deaf89f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370426,
        "parent_id": "32480fcb-2f58-4a2e-8f69-f1dc57f3f094",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "try {\n    // Some code\n} catch (Exception) {\n    // Some error handling\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "try {\n    // Some code\n} catch (Exception) {\n    // Some error handling\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370426,
        "id": "4e74f991-89d8-424b-8a86-038d320623fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370426,
        "parent_id": "32480fcb-2f58-4a2e-8f69-f1dc57f3f094",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Comes with a lot of different problems. But one perticular problem is that it can lead to deadlocks as it breaks the interrupt system when writing multi-threaded applications."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Comes with a lot of different problems. But one perticular problem is that it can lead to deadlocks as it breaks the interrupt system when writing multi-threaded applications."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370427,
        "id": "5d2b9fc4-d717-4c00-9a39-1748a2ab917a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370427,
        "parent_id": "32480fcb-2f58-4a2e-8f69-f1dc57f3f094",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you start a thread you usually also need to be able to stop it abruptly for various reasons."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you start a thread you usually also need to be able to stop it abruptly for various reasons."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370427,
        "id": "eb60d700-4015-4d1c-8b09-03b3834f2e9b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370427,
        "parent_id": "32480fcb-2f58-4a2e-8f69-f1dc57f3f094",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Thread t = new Thread(new Runnable() {\n    public void run() {\n         while (true) {\n             //Do something indefinetely\n         }\n    }\n}\n\nt.start();\n\n//Do something else\n\n// The thread should be canceld if it is still active. \n// A Better way to solve this is with a shared variable that is tested \n// regularily by the thread for a clean exit, but for this example we try to \n// forcibly interrupt this thread.\nif (t.isAlive()) {\n   t.interrupt();\n   t.join();\n}\n\n//Continue with program"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Thread t = new Thread(new Runnable() {\n    public void run() {\n         while (true) {\n             //Do something indefinetely\n         }\n    }\n}\n\nt.start();\n\n//Do something else\n\n// The thread should be canceld if it is still active. \n// A Better way to solve this is with a shared variable that is tested \n// regularily by the thread for a clean exit, but for this example we try to \n// forcibly interrupt this thread.\nif (t.isAlive()) {\n   t.interrupt();\n   t.join();\n}\n\n//Continue with program",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370427,
        "id": "18c7076d-c0b4-45b3-82d4-ac734af8bbc0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370427,
        "parent_id": "32480fcb-2f58-4a2e-8f69-f1dc57f3f094",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "t.interrupt()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will raise an InterruptedException in that thread, than is intended to shut down the thread. But what if the Thread needs to clean up some resources before its completely stopped? For this it can catch the InterruptedException and do some cleanup."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "t.interrupt()",
            "AttrFlags": 2
          },
          {
            "Text": " will raise an InterruptedException in that thread, than is intended to shut down the thread. But what if the Thread needs to clean up some resources before its completely stopped? For this it can catch the InterruptedException and do some cleanup."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370427,
        "id": "8b33deb3-d6b0-4be3-a16b-d936ad733318",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370427,
        "parent_id": "32480fcb-2f58-4a2e-8f69-f1dc57f3f094",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Thread t = new Thread(new Runnable() {\n   public void run() {\n       try {\n           while (true) {\n               //Do something indefinetely\n           }\n       } catch (InterruptedException ex) {\n           //Do some quick cleanup\n\n           // In this case a simple return would do. \n           // But if you are not 100% sure that the thread ends after \n           // catching the InterruptedException you will need to raise another \n           // one for the layers surrounding this code.                \n           Thread.currentThread().interrupt(); \n       }\n   }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Thread t = new Thread(new Runnable() {\n   public void run() {\n       try {\n           while (true) {\n               //Do something indefinetely\n           }\n       } catch (InterruptedException ex) {\n           //Do some quick cleanup\n\n           // In this case a simple return would do. \n           // But if you are not 100% sure that the thread ends after \n           // catching the InterruptedException you will need to raise another \n           // one for the layers surrounding this code.                \n           Thread.currentThread().interrupt(); \n       }\n   }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370427,
        "id": "1d866304-f8a8-4c6a-8afc-1cbd9de62a19",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370427,
        "parent_id": "32480fcb-2f58-4a2e-8f69-f1dc57f3f094",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But if you have a catch-all expression in your code, the InterruptedException will be caught by it as well and the interruption will not continue. Which in this case could lead to a deadlock as the parent thread waits indefinitely for this thead to stop with "
            ],
            [
              "t.join()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But if you have a catch-all expression in your code, the InterruptedException will be caught by it as well and the interruption will not continue. Which in this case could lead to a deadlock as the parent thread waits indefinitely for this thead to stop with "
          },
          {
            "Text": "t.join()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370427,
        "id": "e74f39e3-2b0d-4a07-b580-2401fa53ae33",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370427,
        "parent_id": "32480fcb-2f58-4a2e-8f69-f1dc57f3f094",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Thread t = new Thread(new Runnable() {\n   public void run() {\n       try {\n           while (true) {\n               try {\n                   //Do something indefinetely\n               }\n               catch (Exception ex) {\n                   ex.printStackTrace();\n               }\n           }\n       } catch (InterruptedException ex) {\n           // Dead code as the interrupt exception was already caught in\n           // the inner try-catch           \n           Thread.currentThread().interrupt(); \n       }\n   }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Thread t = new Thread(new Runnable() {\n   public void run() {\n       try {\n           while (true) {\n               try {\n                   //Do something indefinetely\n               }\n               catch (Exception ex) {\n                   ex.printStackTrace();\n               }\n           }\n       } catch (InterruptedException ex) {\n           // Dead code as the interrupt exception was already caught in\n           // the inner try-catch           \n           Thread.currentThread().interrupt(); \n       }\n   }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370427,
        "id": "d0b24575-634e-4172-b1dd-e6b735d537fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370427,
        "parent_id": "32480fcb-2f58-4a2e-8f69-f1dc57f3f094",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So it is better to catch Exceptions individually, but if you insist on using a catch-all, at least catch the InterruptedException individually beforehand."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So it is better to catch Exceptions individually, but if you insist on using a catch-all, at least catch the InterruptedException individually beforehand."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518370427,
        "id": "65f83134-b7d2-4b43-88b7-fda5af8a4640",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518370427,
        "parent_id": "32480fcb-2f58-4a2e-8f69-f1dc57f3f094",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Thread t = new Thread(new Runnable() {\n    public void run() {\n        try {\n            while (true) {\n                try {\n                    //Do something indefinetely\n                } catch (InterruptedException ex) {\n                    throw ex; //Send it up in the chain\n                } catch (Exception ex) {\n                    ex.printStackTrace();\n                }\n            }\n        } catch (InterruptedException ex) {\n            // Some quick cleanup code \n    \n            Thread.currentThread().interrupt(); \n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Thread t = new Thread(new Runnable() {\n    public void run() {\n        try {\n            while (true) {\n                try {\n                    //Do something indefinetely\n                } catch (InterruptedException ex) {\n                    throw ex; //Send it up in the chain\n                } catch (Exception ex) {\n                    ex.printStackTrace();\n                }\n            }\n        } catch (InterruptedException ex) {\n            // Some quick cleanup code \n    \n            Thread.currentThread().interrupt(); \n        }\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "050 Pitfall - Catching InterruptedException"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}