{
  "ID": "3f4b6799-5fdf-452d-901b-d29a957e1598",
  "Root": {
    "alive": true,
    "content": [
      "d915ca3f-11ad-44c3-b89a-165fb9ce4eaf",
      "c2a02ac6-8851-4403-9e83-f6d25a4f96ab",
      "be516a78-9eeb-48ff-ae8a-264bcc6fbe77",
      "73d7a0f0-3b54-4ffe-9e9c-46044cf9d524",
      "ed5c824e-9a49-4b2e-b1c6-74b130b9e546",
      "06694407-e0fa-4093-af65-bd4d90c67909",
      "f36117f5-9c05-454e-883c-7c56d9b27836"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550461136109,
    "id": "3f4b6799-5fdf-452d-901b-d29a957e1598",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550461136109,
    "parent_id": "c5846508-be18-4fc1-871b-a4ccbf7a323f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "030 Generating cryptographically secure pseudorandom numbers"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461136105,
        "id": "d915ca3f-11ad-44c3-b89a-165fb9ce4eaf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461136105,
        "parent_id": "3f4b6799-5fdf-452d-901b-d29a957e1598",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Random",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "ThreadLocalRandom",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are good enough for everyday use, but they have a big problem: They are based on a "
            ],
            [
              "linear congruential generator",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Linear_congruential_generator"
                ]
              ]
            ],
            [
              ", an algorithm whose output can be predicted rather easily. Thus, these two classes are "
            ],
            [
              "not",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " suitable for cryptographic uses (such as key generation)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Random",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "ThreadLocalRandom",
            "AttrFlags": 2
          },
          {
            "Text": " are good enough for everyday use, but they have a big problem: They are based on a "
          },
          {
            "Text": "linear congruential generator",
            "Link": "https://en.wikipedia.org/wiki/Linear_congruential_generator"
          },
          {
            "Text": ", an algorithm whose output can be predicted rather easily. Thus, these two classes are "
          },
          {
            "Text": "not",
            "AttrFlags": 1
          },
          {
            "Text": " suitable for cryptographic uses (such as key generation)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461136106,
        "id": "c2a02ac6-8851-4403-9e83-f6d25a4f96ab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461136106,
        "parent_id": "3f4b6799-5fdf-452d-901b-d29a957e1598",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One can use "
            ],
            [
              "java.security.SecureRandom",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in situations where a PRNG with an output that is very hard to predict is required. Predicting the random numbers created by instances of this class is hard enough to label the class as "
            ],
            [
              "cryptographically secure",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One can use "
          },
          {
            "Text": "java.security.SecureRandom",
            "AttrFlags": 2
          },
          {
            "Text": " in situations where a PRNG with an output that is very hard to predict is required. Predicting the random numbers created by instances of this class is hard enough to label the class as "
          },
          {
            "Text": "cryptographically secure",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461136106,
        "id": "be516a78-9eeb-48ff-ae8a-264bcc6fbe77",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461136106,
        "parent_id": "3f4b6799-5fdf-452d-901b-d29a957e1598",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import java.security.SecureRandom;\nimport java.util.Arrays;\n\npublic class Foo {\n    public static void main(String[] args) {\n        SecureRandom rng = new SecureRandom();\n        byte[] randomBytes = new byte[64];\n        rng.nextBytes(randomBytes); // Fills randomBytes with random bytes (duh)\n        System.out.println(Arrays.toString(randomBytes));\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import java.security.SecureRandom;\nimport java.util.Arrays;\n\npublic class Foo {\n    public static void main(String[] args) {\n        SecureRandom rng = new SecureRandom();\n        byte[] randomBytes = new byte[64];\n        rng.nextBytes(randomBytes); // Fills randomBytes with random bytes (duh)\n        System.out.println(Arrays.toString(randomBytes));\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461136107,
        "id": "73d7a0f0-3b54-4ffe-9e9c-46044cf9d524",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461136107,
        "parent_id": "3f4b6799-5fdf-452d-901b-d29a957e1598",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Besides being cryptographically secure, "
            ],
            [
              "SecureRandom",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has a gigantic period of 2160, compared to "
            ],
            [
              "Random",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s period of 248. It has one drawback of being considerably slower than "
            ],
            [
              "Random",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and other linear PRNGs such as "
            ],
            [
              "Mersenne Twister",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Mersenne_Twister"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Xorshift",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Xorshift"
                ]
              ]
            ],
            [
              ", however."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Besides being cryptographically secure, "
          },
          {
            "Text": "SecureRandom",
            "AttrFlags": 2
          },
          {
            "Text": " has a gigantic period of 2160, compared to "
          },
          {
            "Text": "Random",
            "AttrFlags": 2
          },
          {
            "Text": "s period of 248. It has one drawback of being considerably slower than "
          },
          {
            "Text": "Random",
            "AttrFlags": 2
          },
          {
            "Text": " and other linear PRNGs such as "
          },
          {
            "Text": "Mersenne Twister",
            "Link": "https://en.wikipedia.org/wiki/Mersenne_Twister"
          },
          {
            "Text": " and "
          },
          {
            "Text": "Xorshift",
            "Link": "https://en.wikipedia.org/wiki/Xorshift"
          },
          {
            "Text": ", however."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461136107,
        "id": "ed5c824e-9a49-4b2e-b1c6-74b130b9e546",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461136107,
        "parent_id": "3f4b6799-5fdf-452d-901b-d29a957e1598",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that SecureRandom implementation is both platform and provider dependent. The default "
            ],
            [
              "SecureRandom",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (given by "
            ],
            [
              "SUN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " provider in "
            ],
            [
              "sun.security.provider.SecureRandom",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that SecureRandom implementation is both platform and provider dependent. The default "
          },
          {
            "Text": "SecureRandom",
            "AttrFlags": 2
          },
          {
            "Text": " (given by "
          },
          {
            "Text": "SUN",
            "AttrFlags": 2
          },
          {
            "Text": " provider in "
          },
          {
            "Text": "sun.security.provider.SecureRandom",
            "AttrFlags": 2
          },
          {
            "Text": "):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461136108,
        "id": "06694407-e0fa-4093-af65-bd4d90c67909",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461136108,
        "parent_id": "3f4b6799-5fdf-452d-901b-d29a957e1598",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "on Unix-like systems, seeded with data from "
            ],
            [
              "/dev/random",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and/or "
            ],
            [
              "/dev/urandom",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "on Unix-like systems, seeded with data from "
          },
          {
            "Text": "/dev/random",
            "AttrFlags": 2
          },
          {
            "Text": " and/or "
          },
          {
            "Text": "/dev/urandom",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461136109,
        "id": "f36117f5-9c05-454e-883c-7c56d9b27836",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461136109,
        "parent_id": "3f4b6799-5fdf-452d-901b-d29a957e1598",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "on Windows, seeded with calls to "
            ],
            [
              "CryptGenRandom()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in "
            ],
            [
              "CryptoAPI",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Microsoft_CryptoAPI"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "on Windows, seeded with calls to "
          },
          {
            "Text": "CryptGenRandom()",
            "AttrFlags": 2
          },
          {
            "Text": " in "
          },
          {
            "Text": "CryptoAPI",
            "Link": "https://en.wikipedia.org/wiki/Microsoft_CryptoAPI"
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "030 Generating cryptographically secure pseudorandom numbers"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}