{
  "ID": "694aa96c-2e6f-4d79-b404-c066d8cc750f",
  "Root": {
    "alive": true,
    "content": [
      "bfa57194-4b7c-4f35-afb6-fd34ca87d0bc",
      "006dedeb-de0e-47b2-b685-70fa0db00404",
      "c910e24c-6956-4cee-abb1-a334be8bf113",
      "d1e9be78-3e4e-4240-bfa9-34b7a346d721",
      "075b288c-6fe8-4d35-980c-44ee054b7e98",
      "d350f31a-08f1-4368-8f2d-35e41c427586",
      "7827265c-8a3c-4338-beaf-2f3230323e62",
      "110093df-12ba-4ce5-88df-b53d9a63458a",
      "df7276d4-eb88-401b-8745-90dfa0282bf7",
      "f2492c87-3191-432f-8a62-8f7bf16488be",
      "c1fe4b70-bcf6-4d82-b4aa-05dea2b19f04",
      "30d2318e-7f50-4b52-b446-dddf6d50ccb4",
      "f3772625-0311-4b65-9c18-b52c2e582322"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460533214,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "694aa96c-2e6f-4d79-b404-c066d8cc750f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551752422425,
    "parent_id": "596cd51e-237c-46bd-a4df-28e4d338582d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "The float primitive"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460533211,
        "id": "bfa57194-4b7c-4f35-afb6-fd34ca87d0bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460533211,
        "parent_id": "694aa96c-2e6f-4d79-b404-c066d8cc750f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a single-precision 32-bit IEEE 754 floating point number. By default, decimals are interpreted as doubles. To create a "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", simply append an "
            ],
            [
              "f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to the decimal literal."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": " is a single-precision 32-bit IEEE 754 floating point number. By default, decimals are interpreted as doubles. To create a "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": ", simply append an "
          },
          {
            "Text": "f",
            "AttrFlags": 2
          },
          {
            "Text": " to the decimal literal."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460533211,
        "id": "006dedeb-de0e-47b2-b685-70fa0db00404",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460533211,
        "parent_id": "694aa96c-2e6f-4d79-b404-c066d8cc750f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "double doubleExample = 0.5;      // without 'f' after digits = double\nfloat floatExample = 0.5f;       // with 'f' after digits    = float\n\nfloat myFloat = 92.7f;           // this is a float...\nfloat positiveFloat = 89.3f;     // it can be positive,\nfloat negativeFloat = -89.3f;    // or negative\nfloat integerFloat = 43.0f;      // it can be a whole number (not an int)\nfloat underZeroFloat = 0.0549f;  // it can be a fractional value less than 0"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "double doubleExample = 0.5;      // without 'f' after digits = double\nfloat floatExample = 0.5f;       // with 'f' after digits    = float\n\nfloat myFloat = 92.7f;           // this is a float...\nfloat positiveFloat = 89.3f;     // it can be positive,\nfloat negativeFloat = -89.3f;    // or negative\nfloat integerFloat = 43.0f;      // it can be a whole number (not an int)\nfloat underZeroFloat = 0.0549f;  // it can be a fractional value less than 0",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460533211,
        "id": "c910e24c-6956-4cee-abb1-a334be8bf113",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460533211,
        "parent_id": "694aa96c-2e6f-4d79-b404-c066d8cc750f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Floats handle the five common arithmetical operations: addition, subtraction, multiplication, division, and modulus."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Floats handle the five common arithmetical operations: addition, subtraction, multiplication, division, and modulus."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460533212,
        "id": "d1e9be78-3e4e-4240-bfa9-34b7a346d721",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460533212,
        "parent_id": "694aa96c-2e6f-4d79-b404-c066d8cc750f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: The following may vary slightly as a result of floating point errors. Some results have been rounded for clarity and readability purposes (i.e. the printed result of the addition example was actually 34.600002).",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: The following may vary slightly as a result of floating point errors. Some results have been rounded for clarity and readability purposes (i.e. the printed result of the addition example was actually 34.600002).",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460533212,
        "id": "075b288c-6fe8-4d35-980c-44ee054b7e98",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460533212,
        "parent_id": "694aa96c-2e6f-4d79-b404-c066d8cc750f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// addition\nfloat result = 37.2f + -2.6f;  // result: 34.6\n\n// subtraction\nfloat result = 45.1f - 10.3f;    // result: 34.8\n\n// multiplication\nfloat result = 26.3f * 1.7f;   // result: 44.71\n\n// division\nfloat result = 37.1f / 4.8f;   // result: 7.729166\n\n// modulus\nfloat result = 37.1f % 4.8f;   // result: 3.4999971"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// addition\nfloat result = 37.2f + -2.6f;  // result: 34.6\n\n// subtraction\nfloat result = 45.1f - 10.3f;    // result: 34.8\n\n// multiplication\nfloat result = 26.3f * 1.7f;   // result: 44.71\n\n// division\nfloat result = 37.1f / 4.8f;   // result: 7.729166\n\n// modulus\nfloat result = 37.1f % 4.8f;   // result: 3.4999971",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460533212,
        "id": "d350f31a-08f1-4368-8f2d-35e41c427586",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460533212,
        "parent_id": "694aa96c-2e6f-4d79-b404-c066d8cc750f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Because of the way floating point numbers are stored (i.e. in binary form), many numbers don’t have an exact representation."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Because of the way floating point numbers are stored (i.e. in binary form), many numbers don’t have an exact representation."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460533212,
        "id": "7827265c-8a3c-4338-beaf-2f3230323e62",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460533212,
        "parent_id": "694aa96c-2e6f-4d79-b404-c066d8cc750f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "float notExact = 3.1415926f;\nSystem.out.println(notExact); // 3.1415925"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "float notExact = 3.1415926f;\nSystem.out.println(notExact); // 3.1415925",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460533212,
        "id": "110093df-12ba-4ce5-88df-b53d9a63458a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460533212,
        "parent_id": "694aa96c-2e6f-4d79-b404-c066d8cc750f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "While using "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is fine for most applications, neither "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " nor "
            ],
            [
              "double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " should be used to store exact representations of decimal numbers (like monetary amounts), or numbers where higher precision is required. Instead, the "
            ],
            [
              "BigDecimal",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class should be used."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "While using "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": " is fine for most applications, neither "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": " nor "
          },
          {
            "Text": "double",
            "AttrFlags": 2
          },
          {
            "Text": " should be used to store exact representations of decimal numbers (like monetary amounts), or numbers where higher precision is required. Instead, the "
          },
          {
            "Text": "BigDecimal",
            "AttrFlags": 2
          },
          {
            "Text": " class should be used."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460533212,
        "id": "df7276d4-eb88-401b-8745-90dfa0282bf7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460533212,
        "parent_id": "694aa96c-2e6f-4d79-b404-c066d8cc750f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The default value of a "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is "
            ],
            [
              "0.0f",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The default value of a "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": " is "
          },
          {
            "Text": "0.0f",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460533213,
        "id": "f2492c87-3191-432f-8a62-8f7bf16488be",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460533213,
        "parent_id": "694aa96c-2e6f-4d79-b404-c066d8cc750f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "float defaultFloat;    // defaultFloat == 0.0f"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "float defaultFloat;    // defaultFloat == 0.0f",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460533213,
        "id": "c1fe4b70-bcf6-4d82-b4aa-05dea2b19f04",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460533213,
        "parent_id": "694aa96c-2e6f-4d79-b404-c066d8cc750f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is precise to roughly an error of 1 in 10 million."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": " is precise to roughly an error of 1 in 10 million."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460533214,
        "id": "30d2318e-7f50-4b52-b446-dddf6d50ccb4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460533214,
        "parent_id": "694aa96c-2e6f-4d79-b404-c066d8cc750f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "Float.POSITIVE_INFINITY",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Float.NEGATIVE_INFINITY",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Float.NaN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " values. "
            ],
            [
              "NaN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " stands for results of operations that cannot be determined, such as dividing 2 infinite values. Furthermore "
            ],
            [
              "0f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "-0f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are different, but "
            ],
            [
              "==",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " yields true:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note:",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "Float.POSITIVE_INFINITY",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Float.NEGATIVE_INFINITY",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Float.NaN",
            "AttrFlags": 2
          },
          {
            "Text": " are "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": " values. "
          },
          {
            "Text": "NaN",
            "AttrFlags": 2
          },
          {
            "Text": " stands for results of operations that cannot be determined, such as dividing 2 infinite values. Furthermore "
          },
          {
            "Text": "0f",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "-0f",
            "AttrFlags": 2
          },
          {
            "Text": " are different, but "
          },
          {
            "Text": "==",
            "AttrFlags": 2
          },
          {
            "Text": " yields true:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460533214,
        "id": "f3772625-0311-4b65-9c18-b52c2e582322",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460533214,
        "parent_id": "694aa96c-2e6f-4d79-b404-c066d8cc750f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "float f1 = 0f;\nfloat f2 = -0f;\nSystem.out.println(f1 == f2); // true\nSystem.out.println(1f / f1); // Infinity\nSystem.out.println(1f / f2); // -Infinity\nSystem.out.println(Float.POSITIVE_INFINITY / Float.POSITIVE_INFINITY); // NaN"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "float f1 = 0f;\nfloat f2 = -0f;\nSystem.out.println(f1 == f2); // true\nSystem.out.println(1f / f1); // Infinity\nSystem.out.println(1f / f2); // -Infinity\nSystem.out.println(Float.POSITIVE_INFINITY / Float.POSITIVE_INFINITY); // NaN",
        "code_language": "Plain Text"
      }
    ],
    "title": "The float primitive",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}