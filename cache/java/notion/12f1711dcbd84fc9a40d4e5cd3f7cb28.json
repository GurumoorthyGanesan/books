{
  "ID": "12f1711d-cbd8-4fc9-a40d-4e5cd3f7cb28",
  "Root": {
    "alive": true,
    "content": [
      "df33a3ee-92d4-48b9-85c0-8f00b1dfbf7c",
      "137333e8-3c18-4c96-9246-3d90269362d3",
      "8ceac50a-fa17-4de9-a8dd-6dee1933921a",
      "ad6fe7aa-a7c9-45f2-ba46-49194a95cf1b",
      "5b4a11d2-71c5-4e31-82e6-69c58285f84b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550517963715,
    "id": "12f1711d-cbd8-4fc9-a40d-4e5cd3f7cb28",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550517963715,
    "parent_id": "6287dcec-432f-4b11-b339-a8c57ab92cb4",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Parsing multiple XPath Expressions in a single XML"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517963713,
        "id": "df33a3ee-92d4-48b9-85c0-8f00b1dfbf7c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517963713,
        "parent_id": "12f1711d-cbd8-4fc9-a40d-4e5cd3f7cb28",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using the same example as "
            ],
            [
              "Evaluating a NodeList in an XML document",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", here is how you would make multiple XPath calls efficiently:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using the same example as "
          },
          {
            "Text": "Evaluating a NodeList in an XML document",
            "AttrFlags": 1
          },
          {
            "Text": ", here is how you would make multiple XPath calls efficiently:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517963714,
        "id": "137333e8-3c18-4c96-9246-3d90269362d3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517963714,
        "parent_id": "12f1711d-cbd8-4fc9-a40d-4e5cd3f7cb28",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Given the following XML document:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Given the following XML document:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517963714,
        "id": "8ceac50a-fa17-4de9-a8dd-6dee1933921a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517963714,
        "parent_id": "12f1711d-cbd8-4fc9-a40d-4e5cd3f7cb28",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003cdocumentation\u003e\n    \u003ctags\u003e\n        \u003ctag name=\"Java\"\u003e\n            \u003ctopic name=\"Regular expressions\"\u003e\n                \u003cexample\u003eMatching groups\u003c/example\u003e\n                \u003cexample\u003eEscaping metacharacters\u003c/example\u003e\n            \u003c/topic\u003e\n            \u003ctopic name=\"Arrays\"\u003e\n                \u003cexample\u003eLooping over arrays\u003c/example\u003e\n                \u003cexample\u003eConverting an array to a list\u003c/example\u003e\n            \u003c/topic\u003e\n        \u003c/tag\u003e\n        \u003ctag name=\"Android\"\u003e\n            \u003ctopic name=\"Building Android projects\"\u003e\n                \u003cexample\u003eBuilding an Android application using Gradle\u003c/example\u003e\n                \u003cexample\u003eBuilding an Android application using Maven\u003c/example\u003e\n            \u003c/topic\u003e\n            \u003ctopic name=\"Layout resources\"\u003e\n                \u003cexample\u003eIncluding layout resources\u003c/example\u003e\n                \u003cexample\u003eSupporting multiple device screens\u003c/example\u003e\n            \u003c/topic\u003e\n        \u003c/tag\u003e\n    \u003c/tags\u003e\n\u003c/documentation\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003cdocumentation\u003e\n    \u003ctags\u003e\n        \u003ctag name=\"Java\"\u003e\n            \u003ctopic name=\"Regular expressions\"\u003e\n                \u003cexample\u003eMatching groups\u003c/example\u003e\n                \u003cexample\u003eEscaping metacharacters\u003c/example\u003e\n            \u003c/topic\u003e\n            \u003ctopic name=\"Arrays\"\u003e\n                \u003cexample\u003eLooping over arrays\u003c/example\u003e\n                \u003cexample\u003eConverting an array to a list\u003c/example\u003e\n            \u003c/topic\u003e\n        \u003c/tag\u003e\n        \u003ctag name=\"Android\"\u003e\n            \u003ctopic name=\"Building Android projects\"\u003e\n                \u003cexample\u003eBuilding an Android application using Gradle\u003c/example\u003e\n                \u003cexample\u003eBuilding an Android application using Maven\u003c/example\u003e\n            \u003c/topic\u003e\n            \u003ctopic name=\"Layout resources\"\u003e\n                \u003cexample\u003eIncluding layout resources\u003c/example\u003e\n                \u003cexample\u003eSupporting multiple device screens\u003c/example\u003e\n            \u003c/topic\u003e\n        \u003c/tag\u003e\n    \u003c/tags\u003e\n\u003c/documentation\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517963715,
        "id": "ad6fe7aa-a7c9-45f2-ba46-49194a95cf1b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517963715,
        "parent_id": "12f1711d-cbd8-4fc9-a40d-4e5cd3f7cb28",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is how you would use XPath to evaluate multiple expressions in one document:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is how you would use XPath to evaluate multiple expressions in one document:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517963715,
        "id": "5b4a11d2-71c5-4e31-82e6-69c58285f84b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517963715,
        "parent_id": "12f1711d-cbd8-4fc9-a40d-4e5cd3f7cb28",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "XPath xPath = XPathFactory.newInstance().newXPath(); //Make new XPath\nDocumentBuilder builder = DocumentBuilderFactory.newInstance();\nDocument doc = builder.parse(new File(\"path/to/xml.xml\")); //Specify XML file path\n\nNodeList javaExampleNodes = (NodeList) xPath.evaluate(\"/documentation/tags/tag[@name='Java']//example\", doc, XPathConstants.NODESET); //Evaluate the XPath\nxPath.reset(); //Resets the xPath so it can be used again\nNodeList androidExampleNodes = (NodeList) xPath.evaluate(\"/documentation/tags/tag[@name='Android']//example\", doc, XPathConstants.NODESET); //Evaluate the XPath\n\n..."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "XPath xPath = XPathFactory.newInstance().newXPath(); //Make new XPath\nDocumentBuilder builder = DocumentBuilderFactory.newInstance();\nDocument doc = builder.parse(new File(\"path/to/xml.xml\")); //Specify XML file path\n\nNodeList javaExampleNodes = (NodeList) xPath.evaluate(\"/documentation/tags/tag[@name='Java']//example\", doc, XPathConstants.NODESET); //Evaluate the XPath\nxPath.reset(); //Resets the xPath so it can be used again\nNodeList androidExampleNodes = (NodeList) xPath.evaluate(\"/documentation/tags/tag[@name='Android']//example\", doc, XPathConstants.NODESET); //Evaluate the XPath\n\n...",
        "code_language": "Plain Text"
      }
    ],
    "title": "020 Parsing multiple XPath Expressions in a single XML"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}