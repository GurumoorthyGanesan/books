{
  "ID": "1a877926-fdc5-4b34-844b-63547d8bd444",
  "Root": {
    "alive": true,
    "content": [
      "f352a665-9dfb-40a5-95c3-937bcd69806d",
      "248e05ef-6dab-42c2-b5a1-ceb67696f853",
      "9a785200-1749-4dac-9eeb-2a1b74ee4218",
      "0ad49025-b75a-417a-8ffb-dcada1c546ea",
      "7989e8ad-bccd-49b7-990f-90a6526dc0e5",
      "422c1666-bfe9-42e1-a5ce-13856c7bf7b4",
      "4ab26b21-45d6-4432-a37f-b2255ab9d92e",
      "f6f8e5aa-b4a4-4edc-a02a-e26429fba44c",
      "560fcb1a-7e01-4b7e-8110-91b89d7db291",
      "aec1de60-0313-4456-bd39-c115474e6dbe"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460181242,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1a877926-fdc5-4b34-844b-63547d8bd444",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551763376204,
    "parent_id": "89249b2d-411e-48a0-929e-d4742921cff2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Reading a file using Channel and Buffer"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460181237,
        "id": "f352a665-9dfb-40a5-95c3-937bcd69806d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460181237,
        "parent_id": "1a877926-fdc5-4b34-844b-63547d8bd444",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Channel",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " uses a "
            ],
            [
              "Buffer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to read/write data. A buffer is a fixed sized container where we can write a block of data at once. "
            ],
            [
              "Channel",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a quite faster than stream-based I/O."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Channel",
            "AttrFlags": 2
          },
          {
            "Text": " uses a "
          },
          {
            "Text": "Buffer",
            "AttrFlags": 2
          },
          {
            "Text": " to read/write data. A buffer is a fixed sized container where we can write a block of data at once. "
          },
          {
            "Text": "Channel",
            "AttrFlags": 2
          },
          {
            "Text": " is a quite faster than stream-based I/O."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460181240,
        "id": "248e05ef-6dab-42c2-b5a1-ceb67696f853",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460181240,
        "parent_id": "1a877926-fdc5-4b34-844b-63547d8bd444",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To read data from a file using "
            ],
            [
              "Channel",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " we need to have the following steps-"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To read data from a file using "
          },
          {
            "Text": "Channel",
            "AttrFlags": 2
          },
          {
            "Text": " we need to have the following steps-"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460181241,
        "id": "9a785200-1749-4dac-9eeb-2a1b74ee4218",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460181241,
        "parent_id": "1a877926-fdc5-4b34-844b-63547d8bd444",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We need an instance of "
            ],
            [
              "FileInputStream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "FileInputStream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "has a method named "
            ],
            [
              "getChannel()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which returns a Channel."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "We need an instance of "
          },
          {
            "Text": "FileInputStream",
            "AttrFlags": 2
          },
          {
            "Text": ". "
          },
          {
            "Text": "FileInputStream",
            "AttrFlags": 2
          },
          {
            "Text": "has a method named "
          },
          {
            "Text": "getChannel()",
            "AttrFlags": 2
          },
          {
            "Text": " which returns a Channel."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460181241,
        "id": "0ad49025-b75a-417a-8ffb-dcada1c546ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460181241,
        "parent_id": "1a877926-fdc5-4b34-844b-63547d8bd444",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Call the "
            ],
            [
              "getChannel()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method of FileInputStream and acquire Channel."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Call the "
          },
          {
            "Text": "getChannel()",
            "AttrFlags": 2
          },
          {
            "Text": " method of FileInputStream and acquire Channel."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460181241,
        "id": "7989e8ad-bccd-49b7-990f-90a6526dc0e5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460181241,
        "parent_id": "1a877926-fdc5-4b34-844b-63547d8bd444",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Create a ByteBuffer. ByteBuffer is a fixed size container of bytes."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Create a ByteBuffer. ByteBuffer is a fixed size container of bytes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460181241,
        "id": "422c1666-bfe9-42e1-a5ce-13856c7bf7b4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460181241,
        "parent_id": "1a877926-fdc5-4b34-844b-63547d8bd444",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Channel has a read method and we have to provide a ByteBuffer as an argument to this read method. ByteBuffer has two modes - read-only mood and write-only mood. We can change the mode using "
            ],
            [
              "flip()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method call. Buffer has a position, limit, and capacity. Once a buffer is created with a fixed size, its limit and capacity are the same as the size and the position starts from zero. While a buffer is written with data, its position gradually increases. Changing mode means, changing the position. To read data from the beginning of a buffer, we have to set the position to zero. flip() method change the position"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Channel has a read method and we have to provide a ByteBuffer as an argument to this read method. ByteBuffer has two modes - read-only mood and write-only mood. We can change the mode using "
          },
          {
            "Text": "flip()",
            "AttrFlags": 2
          },
          {
            "Text": " method call. Buffer has a position, limit, and capacity. Once a buffer is created with a fixed size, its limit and capacity are the same as the size and the position starts from zero. While a buffer is written with data, its position gradually increases. Changing mode means, changing the position. To read data from the beginning of a buffer, we have to set the position to zero. flip() method change the position"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460181242,
        "id": "4ab26b21-45d6-4432-a37f-b2255ab9d92e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460181242,
        "parent_id": "1a877926-fdc5-4b34-844b-63547d8bd444",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When we call the read method of the "
            ],
            [
              "Channel",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", it fills up the buffer using data."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "When we call the read method of the "
          },
          {
            "Text": "Channel",
            "AttrFlags": 2
          },
          {
            "Text": ", it fills up the buffer using data."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460181242,
        "id": "f6f8e5aa-b4a4-4edc-a02a-e26429fba44c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460181242,
        "parent_id": "1a877926-fdc5-4b34-844b-63547d8bd444",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If we need to read the data from the "
            ],
            [
              "ByteBuffer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", we need to flip the buffer to change its mode to write-only to read-only mode and then keep reading data from the buffer."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If we need to read the data from the "
          },
          {
            "Text": "ByteBuffer",
            "AttrFlags": 2
          },
          {
            "Text": ", we need to flip the buffer to change its mode to write-only to read-only mode and then keep reading data from the buffer."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460181242,
        "id": "560fcb1a-7e01-4b7e-8110-91b89d7db291",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460181242,
        "parent_id": "1a877926-fdc5-4b34-844b-63547d8bd444",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When there is no longer data to read, the "
            ],
            [
              "read()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method of channel returns 0 or -1."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "When there is no longer data to read, the "
          },
          {
            "Text": "read()",
            "AttrFlags": 2
          },
          {
            "Text": " method of channel returns 0 or -1."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460181242,
        "id": "aec1de60-0313-4456-bd39-c115474e6dbe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460181242,
        "parent_id": "1a877926-fdc5-4b34-844b-63547d8bd444",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.nio.ByteBuffer;\nimport java.nio.channels.FileChannel;\n\npublic class FileChannelRead {\n \npublic static void main(String[] args) {\n  \n   File inputFile = new File(\"hello.txt\");\n  \n   if (!inputFile.exists()) {\n    System.out.println(\"The input file doesn't exit.\");\n    return;\n   }\n\n  try {\n   FileInputStream fis = new FileInputStream(inputFile);\n   FileChannel fileChannel = fis.getChannel();\n   ByteBuffer buffer = ByteBuffer.allocate(1024);\n\n   while (fileChannel.read(buffer) \u003e 0) {\n    buffer.flip();\n    while (buffer.hasRemaining()) {\n     byte b = buffer.get();\n     System.out.print((char) b);\n    }\n    buffer.clear();\n   }\n\n   fileChannel.close();\n  } catch (IOException e) {\n   e.printStackTrace();\n  }\n }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.nio.ByteBuffer;\nimport java.nio.channels.FileChannel;\n\npublic class FileChannelRead {\n \npublic static void main(String[] args) {\n  \n   File inputFile = new File(\"hello.txt\");\n  \n   if (!inputFile.exists()) {\n    System.out.println(\"The input file doesn't exit.\");\n    return;\n   }\n\n  try {\n   FileInputStream fis = new FileInputStream(inputFile);\n   FileChannel fileChannel = fis.getChannel();\n   ByteBuffer buffer = ByteBuffer.allocate(1024);\n\n   while (fileChannel.read(buffer) \u003e 0) {\n    buffer.flip();\n    while (buffer.hasRemaining()) {\n     byte b = buffer.get();\n     System.out.print((char) b);\n    }\n    buffer.clear();\n   }\n\n   fileChannel.close();\n  } catch (IOException e) {\n   e.printStackTrace();\n  }\n }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Reading a file using Channel and Buffer",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}