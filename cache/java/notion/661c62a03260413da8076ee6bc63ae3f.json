{
  "ID": "661c62a0-3260-413d-a807-6ee6bc63ae3f",
  "Root": {
    "alive": true,
    "content": [
      "7ce0f44a-7125-4fca-90cd-831cee5c20f8",
      "38cc8819-c8ff-491e-a60b-9561c9966803",
      "15d7621f-7ea8-4a39-adc3-807390df5ccf",
      "f56ea419-2a67-4132-9b74-8d1e4f3d61f7",
      "4853ba32-4c5b-4ec4-8c42-b1ad770df0ec",
      "cba81610-c12e-4a82-860b-3ed01d5adf5c",
      "07d60824-c481-4f4e-978c-dced97ffd965",
      "7a5d16ae-51f4-4142-abeb-a47aa919b85b",
      "ab0e9e30-ef32-40e9-8726-32dddca3138e",
      "241180dc-a1ce-4b09-b4c1-4b25cf9a3a77",
      "42ddb735-7c47-4322-afb4-50181bfcf9ad",
      "9da87854-ef7b-4335-8bdb-4fc27d96e78c",
      "0be40bad-2996-4a9c-a820-d38e84fcf684",
      "1b2c6aa9-9c3d-4b10-a129-613ae2810a0d",
      "7004d37c-3a88-40ca-83ce-a724e9fcda01"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550461458335,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "661c62a0-3260-413d-a807-6ee6bc63ae3f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551747512073,
    "parent_id": "fd5ee180-90d8-419e-bf30-b0b1c5331eae",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Logging complex messages efficiently"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461458330,
        "id": "7ce0f44a-7125-4fca-90cd-831cee5c20f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461458330,
        "parent_id": "661c62a0-3260-413d-a807-6ee6bc63ae3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s look at a sample of logging which you can see in many programs:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s look at a sample of logging which you can see in many programs:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461458333,
        "id": "38cc8819-c8ff-491e-a60b-9561c9966803",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461458333,
        "parent_id": "661c62a0-3260-413d-a807-6ee6bc63ae3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class LoggingComplex {\n    \n    private static final Logger logger = \n        Logger.getLogger(LoggingComplex.class.getName());\n\n    private int total = 50, orders = 20;\n    private String username = \"Bob\";"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class LoggingComplex {\n    \n    private static final Logger logger = \n        Logger.getLogger(LoggingComplex.class.getName());\n\n    private int total = 50, orders = 20;\n    private String username = \"Bob\";",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461458333,
        "id": "15d7621f-7ea8-4a39-adc3-807390df5ccf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461458333,
        "parent_id": "661c62a0-3260-413d-a807-6ee6bc63ae3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public void takeOrder() {\n    // (...) making some stuff\n    logger.fine(String.format(\"User %s ordered %d things (%d in total)\", \n                              username, orders, total));\n    // (...) some other stuff\n}\n\n// some other methods and calculations\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public void takeOrder() {\n    // (...) making some stuff\n    logger.fine(String.format(\"User %s ordered %d things (%d in total)\", \n                              username, orders, total));\n    // (...) some other stuff\n}\n\n// some other methods and calculations\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461458333,
        "id": "f56ea419-2a67-4132-9b74-8d1e4f3d61f7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461458333,
        "parent_id": "661c62a0-3260-413d-a807-6ee6bc63ae3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The above example looks perfectly fine, but many programmers forgets that Java VM is stack machine. This means that all method’s parameters are calculated "
            ],
            [
              "before",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " executing the method."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The above example looks perfectly fine, but many programmers forgets that Java VM is stack machine. This means that all method’s parameters are calculated "
          },
          {
            "Text": "before",
            "AttrFlags": 1
          },
          {
            "Text": " executing the method."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461458334,
        "id": "4853ba32-4c5b-4ec4-8c42-b1ad770df0ec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461458334,
        "parent_id": "661c62a0-3260-413d-a807-6ee6bc63ae3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This fact is crucial for logging in Java, especially for logging something in low levels like "
            ],
            [
              "FINE",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "FINER",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "FINEST",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which are disabled by default. Let’s look at Java bytecode for the "
            ],
            [
              "takeOrder()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This fact is crucial for logging in Java, especially for logging something in low levels like "
          },
          {
            "Text": "FINE",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "FINER",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "FINEST",
            "AttrFlags": 2
          },
          {
            "Text": " which are disabled by default. Let’s look at Java bytecode for the "
          },
          {
            "Text": "takeOrder()",
            "AttrFlags": 2
          },
          {
            "Text": " method."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461458334,
        "id": "cba81610-c12e-4a82-860b-3ed01d5adf5c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461458334,
        "parent_id": "661c62a0-3260-413d-a807-6ee6bc63ae3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The result for "
            ],
            [
              "javap -c LoggingComplex.class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is something like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The result for "
          },
          {
            "Text": "javap -c LoggingComplex.class",
            "AttrFlags": 2
          },
          {
            "Text": " is something like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461458334,
        "id": "07d60824-c481-4f4e-978c-dced97ffd965",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461458334,
        "parent_id": "661c62a0-3260-413d-a807-6ee6bc63ae3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public void takeOrder();\n    Code:\n       0: getstatic     #27 // Field logger:Ljava/util/logging/Logger;\n       3: ldc           #45 // String User %s ordered %d things (%d in total)\n       5: iconst_3\n       6: anewarray     #3  // class java/lang/Object\n       9: dup\n      10: iconst_0\n      11: aload_0\n      12: getfield      #40 // Field username:Ljava/lang/String;\n      15: aastore\n      16: dup\n      17: iconst_1\n      18: aload_0\n      19: getfield      #36 // Field orders:I\n      22: invokestatic  #47 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n      25: aastore\n      26: dup\n      27: iconst_2\n      28: aload_0\n      29: getfield      #34 // Field total:I\n      32: invokestatic  #47 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n      35: aastore\n      36: invokestatic  #53 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n      39: invokevirtual #59 // Method java/util/logging/Logger.fine:(Ljava/lang/String;)V\n      42: return"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public void takeOrder();\n    Code:\n       0: getstatic     #27 // Field logger:Ljava/util/logging/Logger;\n       3: ldc           #45 // String User %s ordered %d things (%d in total)\n       5: iconst_3\n       6: anewarray     #3  // class java/lang/Object\n       9: dup\n      10: iconst_0\n      11: aload_0\n      12: getfield      #40 // Field username:Ljava/lang/String;\n      15: aastore\n      16: dup\n      17: iconst_1\n      18: aload_0\n      19: getfield      #36 // Field orders:I\n      22: invokestatic  #47 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n      25: aastore\n      26: dup\n      27: iconst_2\n      28: aload_0\n      29: getfield      #34 // Field total:I\n      32: invokestatic  #47 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n      35: aastore\n      36: invokestatic  #53 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n      39: invokevirtual #59 // Method java/util/logging/Logger.fine:(Ljava/lang/String;)V\n      42: return",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461458334,
        "id": "7a5d16ae-51f4-4142-abeb-a47aa919b85b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461458334,
        "parent_id": "661c62a0-3260-413d-a807-6ee6bc63ae3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Line 39 runs the actual logging. All of the previous work (loading variables, creating new objects, concatenating Strings in "
            ],
            [
              "format",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method) can be for nothing if logging level is set higher then "
            ],
            [
              "FINE",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (and by default it is). Such logging can be very inefficient, consuming unnecessary memory and processor resources."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Line 39 runs the actual logging. All of the previous work (loading variables, creating new objects, concatenating Strings in "
          },
          {
            "Text": "format",
            "AttrFlags": 2
          },
          {
            "Text": " method) can be for nothing if logging level is set higher then "
          },
          {
            "Text": "FINE",
            "AttrFlags": 2
          },
          {
            "Text": " (and by default it is). Such logging can be very inefficient, consuming unnecessary memory and processor resources."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461458334,
        "id": "ab0e9e30-ef32-40e9-8726-32dddca3138e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461458334,
        "parent_id": "661c62a0-3260-413d-a807-6ee6bc63ae3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "That’s why you should ask if the level you want to use is enabled.",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "That’s why you should ask if the level you want to use is enabled.",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461458334,
        "id": "241180dc-a1ce-4b09-b4c1-4b25cf9a3a77",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461458334,
        "parent_id": "661c62a0-3260-413d-a807-6ee6bc63ae3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The right way should be:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The right way should be:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461458334,
        "id": "42ddb735-7c47-4322-afb4-50181bfcf9ad",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461458334,
        "parent_id": "661c62a0-3260-413d-a807-6ee6bc63ae3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public void takeOrder() {\n    // making some stuff\n    if (logger.isLoggable(Level.FINE)) {\n        // no action taken when there's no need for it\n        logger.fine(String.format(\"User %s ordered %d things (%d in total)\",\n                                  username, orders, total));\n    }\n    // some other stuff\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public void takeOrder() {\n    // making some stuff\n    if (logger.isLoggable(Level.FINE)) {\n        // no action taken when there's no need for it\n        logger.fine(String.format(\"User %s ordered %d things (%d in total)\",\n                                  username, orders, total));\n    }\n    // some other stuff\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461458334,
        "id": "9da87854-ef7b-4335-8bdb-4fc27d96e78c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461458334,
        "parent_id": "661c62a0-3260-413d-a807-6ee6bc63ae3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Since Java 8:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Since Java 8:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461458335,
        "id": "0be40bad-2996-4a9c-a820-d38e84fcf684",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461458335,
        "parent_id": "661c62a0-3260-413d-a807-6ee6bc63ae3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The Logger class has additional methods that take a "
            ],
            [
              "Supplier\u003cString\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as parameter, which can simply be provided by a lambda:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The Logger class has additional methods that take a "
          },
          {
            "Text": "Supplier\u003cString\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " as parameter, which can simply be provided by a lambda:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461458335,
        "id": "1b2c6aa9-9c3d-4b10-a129-613ae2810a0d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461458335,
        "parent_id": "661c62a0-3260-413d-a807-6ee6bc63ae3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public void takeOrder() {\n    // making some stuff\n    logger.fine(() -\u003e String.format(\"User %s ordered %d things (%d in total)\",\n            username, orders, total));\n    // some other stuff\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public void takeOrder() {\n    // making some stuff\n    logger.fine(() -\u003e String.format(\"User %s ordered %d things (%d in total)\",\n            username, orders, total));\n    // some other stuff\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461458335,
        "id": "7004d37c-3a88-40ca-83ce-a724e9fcda01",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461458335,
        "parent_id": "661c62a0-3260-413d-a807-6ee6bc63ae3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The Suppliers "
            ],
            [
              "get()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "method - in this case the lambda - is only called when the corresponding level is enabled and so the "
            ],
            [
              "if",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "construction is not needed anymore."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The Suppliers "
          },
          {
            "Text": "get()",
            "AttrFlags": 2
          },
          {
            "Text": "method - in this case the lambda - is only called when the corresponding level is enabled and so the "
          },
          {
            "Text": "if",
            "AttrFlags": 2
          },
          {
            "Text": "construction is not needed anymore."
          }
        ]
      }
    ],
    "title": "Logging complex messages efficiently",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}