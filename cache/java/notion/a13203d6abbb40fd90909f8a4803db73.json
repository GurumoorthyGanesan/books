{
  "ID": "a13203d6-abbb-40fd-9090-9f8a4803db73",
  "Root": {
    "alive": true,
    "content": [
      "d7466d5e-4c9d-4d4e-940c-bd8694c03776",
      "121b02de-158b-4380-ba7c-48e09c537e90",
      "a4fef9ca-4310-4056-b595-ece8ff4afe38"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550461536865,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "a13203d6-abbb-40fd-9090-9f8a4803db73",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550461536865,
    "parent_id": "0bf58cac-010f-4b78-ae8d-b08f7e1fc917",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Java Memory Management"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461536862,
        "id": "d7466d5e-4c9d-4d4e-940c-bd8694c03776",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461536862,
        "parent_id": "a13203d6-abbb-40fd-9090-9f8a4803db73",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461536863,
        "id": "121b02de-158b-4380-ba7c-48e09c537e90",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461536863,
        "parent_id": "a13203d6-abbb-40fd-9090-9f8a4803db73",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Java, objects are allocated in the heap, and heap memory is reclaimed by automatic garbage collection. An application program cannot explicitly delete a Java object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Java, objects are allocated in the heap, and heap memory is reclaimed by automatic garbage collection. An application program cannot explicitly delete a Java object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461536864,
        "id": "a4fef9ca-4310-4056-b595-ece8ff4afe38",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461536864,
        "parent_id": "a13203d6-abbb-40fd-9090-9f8a4803db73",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The basic principles of Java garbage collection are described in the "
            ],
            [
              "Garbage collection",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/2804/java-memory-management/9473/garbage-collection#t=201610151259592490802"
                ]
              ]
            ],
            [
              " example. Other examples describe finalization, how to trigger the garbage collector by hand, and the problem of storage leaks."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The basic principles of Java garbage collection are described in the "
          },
          {
            "Text": "Garbage collection",
            "Link": "http://stackoverflow.com/documentation/java/2804/java-memory-management/9473/garbage-collection#t=201610151259592490802"
          },
          {
            "Text": " example. Other examples describe finalization, how to trigger the garbage collector by hand, and the problem of storage leaks."
          }
        ]
      }
    ],
    "title": "Java Memory Management",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}