{
  "ID": "70a2b362-5c41-41bd-820b-17858088c8b3",
  "Root": {
    "alive": true,
    "content": [
      "8a77f5e8-2a25-4d7e-b6aa-9772c61b6ccc",
      "b301a79c-0a33-48d6-af5a-56a876573e95",
      "6c46f275-fd60-4f6b-88dc-4e597d763b55",
      "af6d8050-e712-43de-949a-d9bc9907f1f5",
      "5baeb48a-27ba-4844-ac5a-36b86ad71fc9",
      "e138aa59-4cce-4e96-af4c-8fe89c5fdb7f",
      "557b230d-0f83-4306-b2d0-cd6b6c6250f3",
      "958c70e3-7fde-4e08-a58a-4eb04eb63f1e",
      "71efe33b-cb33-4b90-b71b-d11df36b0174",
      "2a77b1a4-fe89-41f5-b11c-ffeccd59b8b2",
      "c767e82b-db96-453f-9f6b-97eaa2c59670",
      "3c0d71fd-67aa-4d27-8ac7-a1af3c05c19f",
      "211ff077-c40c-4bbe-b460-47fd0998bf54",
      "745b6967-a4ac-4d66-ba7b-1c1b06373c72",
      "aa07417c-41d2-4e47-bc65-196101c5ecf9",
      "b2f32bc3-3539-4428-bda0-fb00851fb73c",
      "5b7200b9-6fd3-4f4d-99f2-9e436eda7db4",
      "a2f3aee0-f778-4bf8-9584-0786f6e7a455",
      "af1c5d63-0c88-40db-a231-1c04c97646ab"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550519857626,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "70a2b362-5c41-41bd-820b-17858088c8b3",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551754961194,
    "parent_id": "0d3bab31-f450-4049-a25a-91b606ec1407",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "TreeMapTreeSet of a custom Java type"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519857620,
        "id": "8a77f5e8-2a25-4d7e-b6aa-9772c61b6ccc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519857620,
        "parent_id": "70a2b362-5c41-41bd-820b-17858088c8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Since "
            ],
            [
              "TreeMap",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s and "
            ],
            [
              "TreeSet",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s maintain keys/elements according to their "
            ],
            [
              "natural ordering",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/tutorial/collections/interfaces/order.html"
                ]
              ]
            ],
            [
              ". Therefor "
            ],
            [
              "TreeMap",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keys and "
            ],
            [
              "TreeSet",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " elements have to comparable to one another."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Since "
          },
          {
            "Text": "TreeMap",
            "AttrFlags": 2
          },
          {
            "Text": "s and "
          },
          {
            "Text": "TreeSet",
            "AttrFlags": 2
          },
          {
            "Text": "s maintain keys/elements according to their "
          },
          {
            "Text": "natural ordering",
            "Link": "https://docs.oracle.com/javase/tutorial/collections/interfaces/order.html"
          },
          {
            "Text": ". Therefor "
          },
          {
            "Text": "TreeMap",
            "AttrFlags": 2
          },
          {
            "Text": " keys and "
          },
          {
            "Text": "TreeSet",
            "AttrFlags": 2
          },
          {
            "Text": " elements have to comparable to one another."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519857621,
        "id": "b301a79c-0a33-48d6-af5a-56a876573e95",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519857621,
        "parent_id": "70a2b362-5c41-41bd-820b-17858088c8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Say we have a custom "
            ],
            [
              "Person",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Say we have a custom "
          },
          {
            "Text": "Person",
            "AttrFlags": 2
          },
          {
            "Text": " class:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519857621,
        "id": "6c46f275-fd60-4f6b-88dc-4e597d763b55",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519857621,
        "parent_id": "70a2b362-5c41-41bd-820b-17858088c8b3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Person  {\n\n    private int id;\n    private String firstName, lastName;\n    private Date birthday;\n\n    //... Constuctors, getters, setters and various methods\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Person  {\n\n    private int id;\n    private String firstName, lastName;\n    private Date birthday;\n\n    //... Constuctors, getters, setters and various methods\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519857621,
        "id": "af6d8050-e712-43de-949a-d9bc9907f1f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519857621,
        "parent_id": "70a2b362-5c41-41bd-820b-17858088c8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If we store it as-is in a "
            ],
            [
              "TreeSet",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (or a Key in a TreeMap):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If we store it as-is in a "
          },
          {
            "Text": "TreeSet",
            "AttrFlags": 2
          },
          {
            "Text": " (or a Key in a TreeMap):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519857621,
        "id": "5baeb48a-27ba-4844-ac5a-36b86ad71fc9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519857621,
        "parent_id": "70a2b362-5c41-41bd-820b-17858088c8b3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "TreeSet\u003cPerson2\u003e set = ...      \nset.add(new Person(1,\"first\",\"last\",Date.from(Instant.now())));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "TreeSet\u003cPerson2\u003e set = ...      \nset.add(new Person(1,\"first\",\"last\",Date.from(Instant.now())));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519857621,
        "id": "e138aa59-4cce-4e96-af4c-8fe89c5fdb7f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519857621,
        "parent_id": "70a2b362-5c41-41bd-820b-17858088c8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Then we’d run into an Exception such as this one:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Then we’d run into an Exception such as this one:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519857622,
        "id": "557b230d-0f83-4306-b2d0-cd6b6c6250f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519857622,
        "parent_id": "70a2b362-5c41-41bd-820b-17858088c8b3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Exception in thread \"main\" java.lang.ClassCastException: Person cannot be cast to java.lang.Comparable\n    at java.util.TreeMap.compare(TreeMap.java:1294)\n    at java.util.TreeMap.put(TreeMap.java:538)\n    at java.util.TreeSet.add(TreeSet.java:255)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Exception in thread \"main\" java.lang.ClassCastException: Person cannot be cast to java.lang.Comparable\n    at java.util.TreeMap.compare(TreeMap.java:1294)\n    at java.util.TreeMap.put(TreeMap.java:538)\n    at java.util.TreeSet.add(TreeSet.java:255)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519857622,
        "id": "958c70e3-7fde-4e08-a58a-4eb04eb63f1e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519857622,
        "parent_id": "70a2b362-5c41-41bd-820b-17858088c8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To fix that, let’s assume that we want to order "
            ],
            [
              "Person",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instances based on the order of their ids ("
            ],
            [
              "private int id",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "). We could do it in one of two ways:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To fix that, let’s assume that we want to order "
          },
          {
            "Text": "Person",
            "AttrFlags": 2
          },
          {
            "Text": " instances based on the order of their ids ("
          },
          {
            "Text": "private int id",
            "AttrFlags": 2
          },
          {
            "Text": "). We could do it in one of two ways:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519857623,
        "id": "71efe33b-cb33-4b90-b71b-d11df36b0174",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519857623,
        "parent_id": "70a2b362-5c41-41bd-820b-17858088c8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One solution is to modify "
            ],
            [
              "Person",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " so it would implement the "
            ],
            [
              "Comparable interface",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "One solution is to modify "
          },
          {
            "Text": "Person",
            "AttrFlags": 2
          },
          {
            "Text": " so it would implement the "
          },
          {
            "Text": "Comparable interface",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519857623,
        "id": "2a77b1a4-fe89-41f5-b11c-ffeccd59b8b2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519857623,
        "parent_id": "70a2b362-5c41-41bd-820b-17858088c8b3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Person implements Comparable\u003cPerson\u003e {\n    private int id;\n    private String firstName, lastName;\n    private Date birthday;\n\n    //... Constuctors, getters, setters and various methods\n\n    @Override\n    public int compareTo(Person o) {\n        return Integer.compare(this.id, o.id); //Compare by id\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Person implements Comparable\u003cPerson\u003e {\n    private int id;\n    private String firstName, lastName;\n    private Date birthday;\n\n    //... Constuctors, getters, setters and various methods\n\n    @Override\n    public int compareTo(Person o) {\n        return Integer.compare(this.id, o.id); //Compare by id\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519857624,
        "id": "c767e82b-db96-453f-9f6b-97eaa2c59670",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519857624,
        "parent_id": "70a2b362-5c41-41bd-820b-17858088c8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another solution is to provide the "
            ],
            [
              "TreeSet",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with a "
            ],
            [
              "Comparator",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another solution is to provide the "
          },
          {
            "Text": "TreeSet",
            "AttrFlags": 2
          },
          {
            "Text": " with a "
          },
          {
            "Text": "Comparator",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519857624,
        "id": "3c0d71fd-67aa-4d27-8ac7-a1af3c05c19f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519857624,
        "parent_id": "70a2b362-5c41-41bd-820b-17858088c8b3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "TreeSet\u003cPerson\u003e treeSet = new TreeSet\u003c\u003e((personA, personB) -\u003e Integer.compare(personA.getId(), personB.getId()));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "TreeSet\u003cPerson\u003e treeSet = new TreeSet\u003c\u003e((personA, personB) -\u003e Integer.compare(personA.getId(), personB.getId()));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519857624,
        "id": "211ff077-c40c-4bbe-b460-47fd0998bf54",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519857624,
        "parent_id": "70a2b362-5c41-41bd-820b-17858088c8b3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "TreeSet\u003cPerson\u003e treeSet = new TreeSet\u003c\u003e(new Comparator\u003cPerson\u003e(){\n    @Override\n    public int compare(Person personA, Person personB) {\n        return Integer.compare(personA.getId(), personB.getId());\n    }\n});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "TreeSet\u003cPerson\u003e treeSet = new TreeSet\u003c\u003e(new Comparator\u003cPerson\u003e(){\n    @Override\n    public int compare(Person personA, Person personB) {\n        return Integer.compare(personA.getId(), personB.getId());\n    }\n});",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519857624,
        "id": "745b6967-a4ac-4d66-ba7b-1c1b06373c72",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519857624,
        "parent_id": "70a2b362-5c41-41bd-820b-17858088c8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, there are two caveats to both approaches:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, there are two caveats to both approaches:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519857625,
        "id": "aa07417c-41d2-4e47-bc65-196101c5ecf9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519857625,
        "parent_id": "70a2b362-5c41-41bd-820b-17858088c8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It’s "
            ],
            [
              "very important",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " not to modify any fields used for ordering once an instance has been inserted into a "
            ],
            [
              "TreeSet",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "/"
            ],
            [
              "TreeMap",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". In the above example, if we change the "
            ],
            [
              "id",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " of a person that’s already inserted into the collection, we might run into unexpected behavior."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "It’s "
          },
          {
            "Text": "very important",
            "AttrFlags": 1
          },
          {
            "Text": " not to modify any fields used for ordering once an instance has been inserted into a "
          },
          {
            "Text": "TreeSet",
            "AttrFlags": 2
          },
          {
            "Text": "/"
          },
          {
            "Text": "TreeMap",
            "AttrFlags": 2
          },
          {
            "Text": ". In the above example, if we change the "
          },
          {
            "Text": "id",
            "AttrFlags": 2
          },
          {
            "Text": " of a person that’s already inserted into the collection, we might run into unexpected behavior."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519857626,
        "id": "b2f32bc3-3539-4428-bda0-fb00851fb73c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519857626,
        "parent_id": "70a2b362-5c41-41bd-820b-17858088c8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It’s important to implement the comparison properly and consistently. As per the "
            ],
            [
              "Javadoc",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "It’s important to implement the comparison properly and consistently. As per the "
          },
          {
            "Text": "Javadoc",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519857626,
        "id": "5b7200b9-6fd3-4f4d-99f2-9e436eda7db4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519857626,
        "parent_id": "70a2b362-5c41-41bd-820b-17858088c8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The implementor must ensure sgn(x.compareTo(y)) == -sgn(y.compareTo(x)) for all x and y. (This implies that x.compareTo(y) must throw an exception iff y.compareTo(x) throws an exception.)"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "The implementor must ensure sgn(x.compareTo(y)) == -sgn(y.compareTo(x)) for all x and y. (This implies that x.compareTo(y) must throw an exception iff y.compareTo(x) throws an exception.)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519857626,
        "id": "a2f3aee0-f778-4bf8-9584-0786f6e7a455",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519857626,
        "parent_id": "70a2b362-5c41-41bd-820b-17858088c8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The implementor must also ensure that the relation is transitive: \u003e "
            ],
            [
              "(x.compareTo(y)\u003e0 \u0026\u0026 y.compareTo(z)\u003e0)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " implies "
            ],
            [
              "x.compareTo(z)\u003e0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The implementor must also ensure that the relation is transitive: \u003e "
          },
          {
            "Text": "(x.compareTo(y)\u003e0 \u0026\u0026 y.compareTo(z)\u003e0)",
            "AttrFlags": 2
          },
          {
            "Text": " implies "
          },
          {
            "Text": "x.compareTo(z)\u003e0",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519857626,
        "id": "af1c5d63-0c88-40db-a231-1c04c97646ab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519857626,
        "parent_id": "70a2b362-5c41-41bd-820b-17858088c8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finally, the implementor must ensure that "
            ],
            [
              "x.compareTo(y)==0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " implies \u003e that "
            ],
            [
              "sgn(x.compareTo(z)) == sgn(y.compareTo(z))",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", for all z."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finally, the implementor must ensure that "
          },
          {
            "Text": "x.compareTo(y)==0",
            "AttrFlags": 2
          },
          {
            "Text": " implies \u003e that "
          },
          {
            "Text": "sgn(x.compareTo(z)) == sgn(y.compareTo(z))",
            "AttrFlags": 2
          },
          {
            "Text": ", for all z."
          }
        ]
      }
    ],
    "title": "TreeMapTreeSet of a custom Java type",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}