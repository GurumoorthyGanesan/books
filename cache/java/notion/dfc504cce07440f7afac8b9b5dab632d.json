{
  "ID": "dfc504cc-e074-40f7-afac-8b9b5dab632d",
  "Root": {
    "alive": true,
    "content": [
      "930f6731-f5cf-4a97-a419-d64b2d2af705",
      "cab80b17-fe88-437d-a0b4-5c342b30c0ec",
      "876800d8-d67d-4ad6-a803-6d424bdf50ed",
      "cc5f4bf9-d2f4-415c-ba6e-98fa26464128",
      "dd5a940e-e2b2-4fa8-b172-fc23394c28ae",
      "c7f31e34-438a-458a-b751-a4d51f4973ee",
      "b1715f25-dfe9-48cb-b94a-3692b6197d06",
      "aba8ae64-158c-45ae-9350-f0d82f347ead",
      "ecbb8601-865b-4238-ad2d-235a765caee0",
      "914a6df7-6d4b-4567-9937-d84152e93c6c",
      "47a4bea2-5c5e-4821-b96a-c188797fda40"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550463261346,
    "id": "dfc504cc-e074-40f7-afac-8b9b5dab632d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550463261346,
    "parent_id": "99f725fb-1166-4771-8bc9-95eaef31fd78",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 Parsing a document using the StAX API"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463261341,
        "id": "930f6731-f5cf-4a97-a419-d64b2d2af705",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463261341,
        "parent_id": "dfc504cc-e074-40f7-afac-8b9b5dab632d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Considering the following document :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Considering the following document :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463261344,
        "id": "cab80b17-fe88-437d-a0b4-5c342b30c0ec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463261344,
        "parent_id": "dfc504cc-e074-40f7-afac-8b9b5dab632d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003c?xml version='1.0' encoding='UTF-8' ?\u003e\n\u003clibrary\u003e\n   \u003cbook id='1'\u003eEffective Java\u003c/book\u003e\n   \u003cbook id='2'\u003eJava Concurrency In Practice\u003c/book\u003e\n   \u003cnotABook id='3'\u003eThis is not a book element\u003c/notABook\u003e\n\u003c/library\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003c?xml version='1.0' encoding='UTF-8' ?\u003e\n\u003clibrary\u003e\n   \u003cbook id='1'\u003eEffective Java\u003c/book\u003e\n   \u003cbook id='2'\u003eJava Concurrency In Practice\u003c/book\u003e\n   \u003cnotABook id='3'\u003eThis is not a book element\u003c/notABook\u003e\n\u003c/library\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463261344,
        "id": "876800d8-d67d-4ad6-a803-6d424bdf50ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463261344,
        "parent_id": "dfc504cc-e074-40f7-afac-8b9b5dab632d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One can use the following code to parse it and build a map of book titles by book id."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One can use the following code to parse it and build a map of book titles by book id."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463261344,
        "id": "cc5f4bf9-d2f4-415c-ba6e-98fa26464128",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463261344,
        "parent_id": "dfc504cc-e074-40f7-afac-8b9b5dab632d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import javax.xml.stream.XMLInputFactory;\nimport javax.xml.stream.XMLStreamConstants;\nimport javax.xml.stream.XMLStreamReader;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class StaxDemo {\n\npublic static void main(String[] args) throws Exception {\n    String xmlDocument = \"\u003c?xml version='1.0' encoding='UTF-8' ?\u003e\"\n            + \"\u003clibrary\u003e\"\n                + \"\u003cbook id='1'\u003eEffective Java\u003c/book\u003e\"\n                + \"\u003cbook id='2'\u003eJava Concurrency In Practice\u003c/book\u003e\"\n                + \"\u003cnotABook id='3'\u003eThis is not a book element \u003c/notABook\u003e\"\n            + \"\u003c/library\u003e\";\n\n    XMLInputFactory xmlInputFactory = XMLInputFactory.newFactory();\n    // Various flavors are possible, e.g. from an InputStream, a Source, ...\n    XMLStreamReader xmlStreamReader = xmlInputFactory.createXMLStreamReader(new StringReader(xmlDocument));\n\n    Map\u003cInteger, String\u003e bookTitlesById = new HashMap\u003c\u003e();\n\n    // We go through each event using a loop\n    while (xmlStreamReader.hasNext()) {\n        switch (xmlStreamReader.getEventType()) {\n            case XMLStreamConstants.START_ELEMENT:\n                System.out.println(\"Found start of element: \" + xmlStreamReader.getLocalName());\n                // Check if we are at the start of a \u003cbook\u003e element\n                if (\"book\".equals(xmlStreamReader.getLocalName())) {\n                    int bookId = Integer.parseInt(xmlStreamReader.getAttributeValue(\"\", \"id\"));\n                    String bookTitle = xmlStreamReader.getElementText();\n                    bookTitlesById.put(bookId, bookTitle);\n                }\n                break;\n            // A bunch of other things are possible : comments, processing instructions, Whitespace...\n            default:\n                break;\n        }\n        xmlStreamReader.next();\n    }\n\n    System.out.println(bookTitlesById);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import javax.xml.stream.XMLInputFactory;\nimport javax.xml.stream.XMLStreamConstants;\nimport javax.xml.stream.XMLStreamReader;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class StaxDemo {\n\npublic static void main(String[] args) throws Exception {\n    String xmlDocument = \"\u003c?xml version='1.0' encoding='UTF-8' ?\u003e\"\n            + \"\u003clibrary\u003e\"\n                + \"\u003cbook id='1'\u003eEffective Java\u003c/book\u003e\"\n                + \"\u003cbook id='2'\u003eJava Concurrency In Practice\u003c/book\u003e\"\n                + \"\u003cnotABook id='3'\u003eThis is not a book element \u003c/notABook\u003e\"\n            + \"\u003c/library\u003e\";\n\n    XMLInputFactory xmlInputFactory = XMLInputFactory.newFactory();\n    // Various flavors are possible, e.g. from an InputStream, a Source, ...\n    XMLStreamReader xmlStreamReader = xmlInputFactory.createXMLStreamReader(new StringReader(xmlDocument));\n\n    Map\u003cInteger, String\u003e bookTitlesById = new HashMap\u003c\u003e();\n\n    // We go through each event using a loop\n    while (xmlStreamReader.hasNext()) {\n        switch (xmlStreamReader.getEventType()) {\n            case XMLStreamConstants.START_ELEMENT:\n                System.out.println(\"Found start of element: \" + xmlStreamReader.getLocalName());\n                // Check if we are at the start of a \u003cbook\u003e element\n                if (\"book\".equals(xmlStreamReader.getLocalName())) {\n                    int bookId = Integer.parseInt(xmlStreamReader.getAttributeValue(\"\", \"id\"));\n                    String bookTitle = xmlStreamReader.getElementText();\n                    bookTitlesById.put(bookId, bookTitle);\n                }\n                break;\n            // A bunch of other things are possible : comments, processing instructions, Whitespace...\n            default:\n                break;\n        }\n        xmlStreamReader.next();\n    }\n\n    System.out.println(bookTitlesById);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463261344,
        "id": "dd5a940e-e2b2-4fa8-b172-fc23394c28ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463261344,
        "parent_id": "dfc504cc-e074-40f7-afac-8b9b5dab632d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This outputs :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This outputs :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463261345,
        "id": "c7f31e34-438a-458a-b751-a4d51f4973ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463261345,
        "parent_id": "dfc504cc-e074-40f7-afac-8b9b5dab632d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Found start of element: library\nFound start of element: book\nFound start of element: book\nFound start of element: notABook\n{1=Effective Java, 2=Java Concurrency In Practice}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Found start of element: library\nFound start of element: book\nFound start of element: book\nFound start of element: notABook\n{1=Effective Java, 2=Java Concurrency In Practice}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463261345,
        "id": "b1715f25-dfe9-48cb-b94a-3692b6197d06",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463261345,
        "parent_id": "dfc504cc-e074-40f7-afac-8b9b5dab632d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this sample, one must be carreful of a few things :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this sample, one must be carreful of a few things :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463261345,
        "id": "aba8ae64-158c-45ae-9350-f0d82f347ead",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463261345,
        "parent_id": "dfc504cc-e074-40f7-afac-8b9b5dab632d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "THe use of "
            ],
            [
              "xmlStreamReader.getAttributeValue",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " works because we have checked first that the parser is in the "
            ],
            [
              "START_ELEMENT",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " state. In evey other states (except "
            ],
            [
              "ATTRIBUTES",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "), the parser is mandated to throw "
            ],
            [
              "IllegalStateException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", because attributes can only appear at the beginning of elements."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "THe use of "
          },
          {
            "Text": "xmlStreamReader.getAttributeValue",
            "AttrFlags": 2
          },
          {
            "Text": " works because we have checked first that the parser is in the "
          },
          {
            "Text": "START_ELEMENT",
            "AttrFlags": 2
          },
          {
            "Text": " state. In evey other states (except "
          },
          {
            "Text": "ATTRIBUTES",
            "AttrFlags": 2
          },
          {
            "Text": "), the parser is mandated to throw "
          },
          {
            "Text": "IllegalStateException",
            "AttrFlags": 2
          },
          {
            "Text": ", because attributes can only appear at the beginning of elements."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463261346,
        "id": "ecbb8601-865b-4238-ad2d-235a765caee0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463261346,
        "parent_id": "dfc504cc-e074-40f7-afac-8b9b5dab632d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "same goes for "
            ],
            [
              "xmlStreamReader.getTextContent()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", it works because we are at a "
            ],
            [
              "START_ELEMENT",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and we know in this document that the "
            ],
            [
              "\u003cbook\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " element has no non-text child nodes."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "same goes for "
          },
          {
            "Text": "xmlStreamReader.getTextContent()",
            "AttrFlags": 2
          },
          {
            "Text": ", it works because we are at a "
          },
          {
            "Text": "START_ELEMENT",
            "AttrFlags": 2
          },
          {
            "Text": " and we know in this document that the "
          },
          {
            "Text": "\u003cbook\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " element has no non-text child nodes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463261346,
        "id": "914a6df7-6d4b-4567-9937-d84152e93c6c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463261346,
        "parent_id": "dfc504cc-e074-40f7-afac-8b9b5dab632d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For more complex documents parsing (deeper, nested elements, …), it is a good practice to “delegate” the parser to sub-methods or other objets, e.g. have a "
            ],
            [
              "BookParser",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class or method, and have it deal with every element from the START_ELEMENT to the END_ELEMENT of the book XML tag."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For more complex documents parsing (deeper, nested elements, …), it is a good practice to “delegate” the parser to sub-methods or other objets, e.g. have a "
          },
          {
            "Text": "BookParser",
            "AttrFlags": 2
          },
          {
            "Text": " class or method, and have it deal with every element from the START_ELEMENT to the END_ELEMENT of the book XML tag."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463261346,
        "id": "47a4bea2-5c5e-4821-b96a-c188797fda40",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463261346,
        "parent_id": "dfc504cc-e074-40f7-afac-8b9b5dab632d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One can also use a "
            ],
            [
              "Stack",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object to keep around important datas up and down the tree."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One can also use a "
          },
          {
            "Text": "Stack",
            "AttrFlags": 2
          },
          {
            "Text": " object to keep around important datas up and down the tree."
          }
        ]
      }
    ],
    "title": "010 Parsing a document using the StAX API"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}