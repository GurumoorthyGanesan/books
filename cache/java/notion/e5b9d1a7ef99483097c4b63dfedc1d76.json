{
  "ID": "e5b9d1a7-ef99-4830-97c4-b63dfedc1d76",
  "Root": {
    "alive": true,
    "content": [
      "16bdb518-73e7-4326-bf49-d8ed9700e6fe",
      "9c0e8454-d973-4d5c-8e4a-51c1caaa35f2",
      "579e1413-820b-492b-a14c-728275ac4c87",
      "da4bf4c7-8539-472e-b157-fad6e78c1011",
      "ec310efd-54d3-4e63-8d78-5cbec960c66a",
      "75f69794-50d4-421f-98aa-f291cddf4bfc",
      "d1bd6634-a9ab-4ad7-9c4c-881f4ad4c3ce",
      "f6fa970f-5cd3-400c-9077-93ac4e28d9b5",
      "416d1dd2-07d5-40bc-b3d9-4a4bdaabd8b2",
      "3c36a869-172c-4fdc-86ae-97ed4c231faa",
      "a6b0335a-0f25-4f76-9b83-b8664d30bffb",
      "f1dad583-3ed9-482c-857f-f8d6b470b303"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460132524,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e5b9d1a7-ef99-4830-97c4-b63dfedc1d76",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551743914356,
    "parent_id": "7416eb9a-1bd0-49c2-bd47-b63df006e231",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Creating your own Iterable structure for use with Iterator or for-each loop."
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460132519,
        "id": "16bdb518-73e7-4326-bf49-d8ed9700e6fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460132519,
        "parent_id": "e5b9d1a7-ef99-4830-97c4-b63dfedc1d76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To ensure that our collection can be iterated using iterator or for-each loop, we have to take care of following steps:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To ensure that our collection can be iterated using iterator or for-each loop, we have to take care of following steps:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460132522,
        "id": "9c0e8454-d973-4d5c-8e4a-51c1caaa35f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460132522,
        "parent_id": "e5b9d1a7-ef99-4830-97c4-b63dfedc1d76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The stuff we want to iterate upon has to be "
            ],
            [
              "Iterable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and expose "
            ],
            [
              "iterator()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The stuff we want to iterate upon has to be "
          },
          {
            "Text": "Iterable",
            "AttrFlags": 2
          },
          {
            "Text": " and expose "
          },
          {
            "Text": "iterator()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460132522,
        "id": "579e1413-820b-492b-a14c-728275ac4c87",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460132522,
        "parent_id": "e5b9d1a7-ef99-4830-97c4-b63dfedc1d76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Design a "
            ],
            [
              "java.util.Iterator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " by overriding "
            ],
            [
              "hasNext()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "next()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "remove()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Design a "
          },
          {
            "Text": "java.util.Iterator",
            "AttrFlags": 2
          },
          {
            "Text": " by overriding "
          },
          {
            "Text": "hasNext()",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "next()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "remove()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460132523,
        "id": "da4bf4c7-8539-472e-b157-fad6e78c1011",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460132523,
        "parent_id": "e5b9d1a7-ef99-4830-97c4-b63dfedc1d76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "I have added a simple generic linked list implementation below that uses above entities to make the linked list iterable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "I have added a simple generic linked list implementation below that uses above entities to make the linked list iterable."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460132523,
        "id": "ec310efd-54d3-4e63-8d78-5cbec960c66a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460132523,
        "parent_id": "e5b9d1a7-ef99-4830-97c4-b63dfedc1d76",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "package org.algorithms.linkedlist;\n \nimport java.util.Iterator;\nimport java.util.NoSuchElementException;\n \n \npublic class LinkedList\u003cT\u003e implements Iterable\u003cT\u003e {\n \n    Node\u003cT\u003e head, current;\n \n    private static class Node\u003cT\u003e {\n        T data;\n        Node\u003cT\u003e next;\n \n        Node(T data) {\n            this.data = data;\n        }\n    }\n \n    public LinkedList(T data) {\n        head = new Node\u003c\u003e(data);\n    }\n \n    public Iterator\u003cT\u003e iterator() {\n        return new LinkedListIterator();\n    }\n \n    private class LinkedListIterator implements Iterator\u003cT\u003e {\n \n        Node\u003cT\u003e node = head;\n \n        @Override\n        public boolean hasNext() {\n            return node != null;\n        }\n \n        @Override\n        public T next() {\n            if (!hasNext())\n                throw new NoSuchElementException();\n            Node\u003cT\u003e prevNode = node;\n            node = node.next;\n            return prevNode.data;\n        }\n \n        @Override\n        public void remove() {\n            throw new UnsupportedOperationException(\"Removal logic not implemented.\");\n        }\n    }\n \n    public void add(T data) {\n        Node current = head;\n        while (current.next != null)\n            current = current.next;\n        current.next = new Node\u003c\u003e(data);\n    }\n \n}\n \nclass App {\n    public static void main(String[] args) {\n \n        LinkedList\u003cInteger\u003e list = new LinkedList\u003c\u003e(1);\n        list.add(2);\n        list.add(4);\n        list.add(3);\n \n        //Test #1\n        System.out.println(\"using Iterator:\");\n        Iterator\u003cInteger\u003e itr = list.iterator();\n        while (itr.hasNext()) {\n            Integer i = itr.next();\n            System.out.print(i + \" \");\n        }\n \n        //Test #2\n        System.out.println(\"\\n\\nusing for-each:\");\n        for (Integer data : list) {\n            System.out.print(data + \" \");\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "package org.algorithms.linkedlist;\n \nimport java.util.Iterator;\nimport java.util.NoSuchElementException;\n \n \npublic class LinkedList\u003cT\u003e implements Iterable\u003cT\u003e {\n \n    Node\u003cT\u003e head, current;\n \n    private static class Node\u003cT\u003e {\n        T data;\n        Node\u003cT\u003e next;\n \n        Node(T data) {\n            this.data = data;\n        }\n    }\n \n    public LinkedList(T data) {\n        head = new Node\u003c\u003e(data);\n    }\n \n    public Iterator\u003cT\u003e iterator() {\n        return new LinkedListIterator();\n    }\n \n    private class LinkedListIterator implements Iterator\u003cT\u003e {\n \n        Node\u003cT\u003e node = head;\n \n        @Override\n        public boolean hasNext() {\n            return node != null;\n        }\n \n        @Override\n        public T next() {\n            if (!hasNext())\n                throw new NoSuchElementException();\n            Node\u003cT\u003e prevNode = node;\n            node = node.next;\n            return prevNode.data;\n        }\n \n        @Override\n        public void remove() {\n            throw new UnsupportedOperationException(\"Removal logic not implemented.\");\n        }\n    }\n \n    public void add(T data) {\n        Node current = head;\n        while (current.next != null)\n            current = current.next;\n        current.next = new Node\u003c\u003e(data);\n    }\n \n}\n \nclass App {\n    public static void main(String[] args) {\n \n        LinkedList\u003cInteger\u003e list = new LinkedList\u003c\u003e(1);\n        list.add(2);\n        list.add(4);\n        list.add(3);\n \n        //Test #1\n        System.out.println(\"using Iterator:\");\n        Iterator\u003cInteger\u003e itr = list.iterator();\n        while (itr.hasNext()) {\n            Integer i = itr.next();\n            System.out.print(i + \" \");\n        }\n \n        //Test #2\n        System.out.println(\"\\n\\nusing for-each:\");\n        for (Integer data : list) {\n            System.out.print(data + \" \");\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460132523,
        "id": "75f69794-50d4-421f-98aa-f291cddf4bfc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460132523,
        "parent_id": "e5b9d1a7-ef99-4830-97c4-b63dfedc1d76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460132523,
        "id": "d1bd6634-a9ab-4ad7-9c4c-881f4ad4c3ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460132523,
        "parent_id": "e5b9d1a7-ef99-4830-97c4-b63dfedc1d76",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "using Iterator:\n1 2 4 3\nusing for-each:\n1 2 4 3"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "using Iterator:\n1 2 4 3\nusing for-each:\n1 2 4 3",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460132523,
        "id": "f6fa970f-5cd3-400c-9077-93ac4e28d9b5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460132523,
        "parent_id": "e5b9d1a7-ef99-4830-97c4-b63dfedc1d76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This will run in Java 7+. You can make it run on Java 5 and Java 6 also by substituting:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This will run in Java 7+. You can make it run on Java 5 and Java 6 also by substituting:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460132523,
        "id": "416d1dd2-07d5-40bc-b3d9-4a4bdaabd8b2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460132523,
        "parent_id": "e5b9d1a7-ef99-4830-97c4-b63dfedc1d76",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "LinkedList\u003cInteger\u003e list = new LinkedList\u003c\u003e(1);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "LinkedList\u003cInteger\u003e list = new LinkedList\u003c\u003e(1);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460132523,
        "id": "3c36a869-172c-4fdc-86ae-97ed4c231faa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460132523,
        "parent_id": "e5b9d1a7-ef99-4830-97c4-b63dfedc1d76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "with"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "with"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460132523,
        "id": "a6b0335a-0f25-4f76-9b83-b8664d30bffb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460132523,
        "parent_id": "e5b9d1a7-ef99-4830-97c4-b63dfedc1d76",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "LinkedList\u003cInteger\u003e list = new LinkedList\u003cInteger\u003e(1);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "LinkedList\u003cInteger\u003e list = new LinkedList\u003cInteger\u003e(1);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460132524,
        "id": "f1dad583-3ed9-482c-857f-f8d6b470b303",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460132524,
        "parent_id": "e5b9d1a7-ef99-4830-97c4-b63dfedc1d76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "or just any other version by incorporating the compatible changes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "or just any other version by incorporating the compatible changes."
          }
        ]
      }
    ],
    "title": "Creating your own Iterable structure for use with Iterator or for-each loop.",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}