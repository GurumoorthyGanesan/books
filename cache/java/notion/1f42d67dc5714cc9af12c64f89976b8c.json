{
  "ID": "1f42d67d-c571-4cc9-af12-c64f89976b8c",
  "Root": {
    "alive": true,
    "content": [
      "c9d3c21e-af0c-4ea2-b1c0-b7195e2100cd",
      "4190b87c-de7f-415e-9848-afcaae759b1b",
      "d8bea49c-519c-4c5b-8b87-34e07a39ce16",
      "b6d705c1-f497-4215-846f-3e37706e24f7",
      "8fefa961-ddd1-4bc5-af61-e9f778336262",
      "a2200b6b-3540-4b3b-ad44-a56a038484c2",
      "2bac9a40-5af4-4b34-9cf0-3fb79f91b46f",
      "cfdcd4f4-fe49-4ee9-b7d9-35d3d4477ba5",
      "95fbf8c2-42e7-4dd6-b050-bcb11f7adb62",
      "d70dcdad-6c16-4c57-ae9d-00a2162f926f",
      "1a3554e9-8a03-42ef-876e-ebd7c534acb7",
      "74b2abfe-d71a-4696-82c3-2050c01d1a54",
      "b8fcc9d8-174e-4334-8dfc-ffcaec3f98bf",
      "83fcbb54-b48a-45c1-a949-cfaa752340ad",
      "1ea2396f-4324-49a5-86cd-4f94cfa42d5d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550518426627,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1f42d67d-c571-4cc9-af12-c64f89976b8c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551748761433,
    "parent_id": "28d11fe4-92df-4393-8cbb-b9dadc487955",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Pitfall - Calling System.gc is inefficient"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518426610,
        "id": "c9d3c21e-af0c-4ea2-b1c0-b7195e2100cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518426610,
        "parent_id": "1f42d67d-c571-4cc9-af12-c64f89976b8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is (almost always) a bad idea to call "
            ],
            [
              "System.gc()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is (almost always) a bad idea to call "
          },
          {
            "Text": "System.gc()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518426611,
        "id": "4190b87c-de7f-415e-9848-afcaae759b1b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518426611,
        "parent_id": "1f42d67d-c571-4cc9-af12-c64f89976b8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The javadoc for the "
            ],
            [
              "gc()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method specifies the following:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The javadoc for the "
          },
          {
            "Text": "gc()",
            "AttrFlags": 2
          },
          {
            "Text": " method specifies the following:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518426622,
        "id": "d8bea49c-519c-4c5b-8b87-34e07a39ce16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518426622,
        "parent_id": "1f42d67d-c571-4cc9-af12-c64f89976b8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "“Calling the gc method suggests that the Java Virtual Machine expend effort toward recycling unused objects in order to make the memory they currently occupy available for quick reuse. When control returns from the method call, the Java Virtual Machine has made a best effort to reclaim space from all discarded objects.”"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "“Calling the gc method suggests that the Java Virtual Machine expend effort toward recycling unused objects in order to make the memory they currently occupy available for quick reuse. When control returns from the method call, the Java Virtual Machine has made a best effort to reclaim space from all discarded objects.”"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518426622,
        "id": "b6d705c1-f497-4215-846f-3e37706e24f7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518426622,
        "parent_id": "1f42d67d-c571-4cc9-af12-c64f89976b8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are a couple of important points that can be drawn from this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are a couple of important points that can be drawn from this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518426624,
        "id": "8fefa961-ddd1-4bc5-af61-e9f778336262",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518426624,
        "parent_id": "1f42d67d-c571-4cc9-af12-c64f89976b8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The use of the word “suggests” rather than (say) “tells” means that the JVM is free to ignore the suggestion. The default JVM behavior (recent releases) is to follow the suggestion, but this can be overridden by setting "
            ],
            [
              "-XX:+DisableExplicitGC",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when when launching the JVM."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The use of the word “suggests” rather than (say) “tells” means that the JVM is free to ignore the suggestion. The default JVM behavior (recent releases) is to follow the suggestion, but this can be overridden by setting "
          },
          {
            "Text": "-XX:+DisableExplicitGC",
            "AttrFlags": 2
          },
          {
            "Text": " when when launching the JVM."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518426625,
        "id": "a2200b6b-3540-4b3b-ad44-a56a038484c2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518426625,
        "parent_id": "1f42d67d-c571-4cc9-af12-c64f89976b8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The phrase “a best effort to reclaim space from all discarded objects” implies that calling "
            ],
            [
              "gc",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will trigger a “full” garbage collection."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The phrase “a best effort to reclaim space from all discarded objects” implies that calling "
          },
          {
            "Text": "gc",
            "AttrFlags": 2
          },
          {
            "Text": " will trigger a “full” garbage collection."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518426625,
        "id": "2bac9a40-5af4-4b34-9cf0-3fb79f91b46f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518426625,
        "parent_id": "1f42d67d-c571-4cc9-af12-c64f89976b8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So why is calling "
            ],
            [
              "System.gc()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " a bad idea?"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So why is calling "
          },
          {
            "Text": "System.gc()",
            "AttrFlags": 2
          },
          {
            "Text": " a bad idea?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518426625,
        "id": "cfdcd4f4-fe49-4ee9-b7d9-35d3d4477ba5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518426625,
        "parent_id": "1f42d67d-c571-4cc9-af12-c64f89976b8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "First, running a full garbage collection is expensive. A full GC involves visiting and “marking” every object that is still reachable; i.e. every object that is not garbage. If you trigger this when there isn’t much garbage to be collected, then the GC does a lot of work for relatively little benefit."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "First, running a full garbage collection is expensive. A full GC involves visiting and “marking” every object that is still reachable; i.e. every object that is not garbage. If you trigger this when there isn’t much garbage to be collected, then the GC does a lot of work for relatively little benefit."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518426625,
        "id": "95fbf8c2-42e7-4dd6-b050-bcb11f7adb62",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518426625,
        "parent_id": "1f42d67d-c571-4cc9-af12-c64f89976b8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Second, a full garbage collection is liable to disturb the “locality” properties of the objects that are not collected. Objects that are allocated by the same thread at roughly the same time tend to be allocated close together in memory. This is good. Objects that are allocated at the same time are likely to be related; i.e. reference each other. If your application uses those references, then the chances are that memory access will be faster because of various memory and page caching effects. Unfortunately, a full garbage collection tend to move objects around so that objects that were once close are now further apart."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Second, a full garbage collection is liable to disturb the “locality” properties of the objects that are not collected. Objects that are allocated by the same thread at roughly the same time tend to be allocated close together in memory. This is good. Objects that are allocated at the same time are likely to be related; i.e. reference each other. If your application uses those references, then the chances are that memory access will be faster because of various memory and page caching effects. Unfortunately, a full garbage collection tend to move objects around so that objects that were once close are now further apart."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518426625,
        "id": "d70dcdad-6c16-4c57-ae9d-00a2162f926f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518426625,
        "parent_id": "1f42d67d-c571-4cc9-af12-c64f89976b8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Third, running a full garbage collection is liable to make your application pause until the collection is complete. While this is happening, your application will be non-responsive."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Third, running a full garbage collection is liable to make your application pause until the collection is complete. While this is happening, your application will be non-responsive."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518426625,
        "id": "1a3554e9-8a03-42ef-876e-ebd7c534acb7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518426625,
        "parent_id": "1f42d67d-c571-4cc9-af12-c64f89976b8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In fact, the best strategy is to let the JVM decide when to run the GC, and what kind of collection to run. If you don’t interfere, the JVM will choose a time and collection type that optimizes throughput or minimizes GC pause times."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In fact, the best strategy is to let the JVM decide when to run the GC, and what kind of collection to run. If you don’t interfere, the JVM will choose a time and collection type that optimizes throughput or minimizes GC pause times."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518426626,
        "id": "74b2abfe-d71a-4696-82c3-2050c01d1a54",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518426626,
        "parent_id": "1f42d67d-c571-4cc9-af12-c64f89976b8c",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518426626,
        "id": "b8fcc9d8-174e-4334-8dfc-ffcaec3f98bf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518426626,
        "parent_id": "1f42d67d-c571-4cc9-af12-c64f89976b8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "At the beginning we said “… (almost always) a bad idea …”. In fact there are a couple of scenarios where it "
            ],
            [
              "might",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " be a good idea:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "At the beginning we said “… (almost always) a bad idea …”. In fact there are a couple of scenarios where it "
          },
          {
            "Text": "might",
            "AttrFlags": 4
          },
          {
            "Text": " be a good idea:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518426626,
        "id": "83fcbb54-b48a-45c1-a949-cfaa752340ad",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518426626,
        "parent_id": "1f42d67d-c571-4cc9-af12-c64f89976b8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you are implementing a unit test for some code that is garbage collection sensitive (e.g. something involving finalizers or weak / soft / phantom references) then calling "
            ],
            [
              "System.gc()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " may be necessary."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you are implementing a unit test for some code that is garbage collection sensitive (e.g. something involving finalizers or weak / soft / phantom references) then calling "
          },
          {
            "Text": "System.gc()",
            "AttrFlags": 2
          },
          {
            "Text": " may be necessary."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518426627,
        "id": "1ea2396f-4324-49a5-86cd-4f94cfa42d5d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518426627,
        "parent_id": "1f42d67d-c571-4cc9-af12-c64f89976b8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In some interactive applications, there can be particular points in time where the user won’t care if there is a garbage collection pause. One example is a game where there are natural pauses in the “play”; e.g. when loading a new level."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "In some interactive applications, there can be particular points in time where the user won’t care if there is a garbage collection pause. One example is a game where there are natural pauses in the “play”; e.g. when loading a new level."
          }
        ]
      }
    ],
    "title": "Pitfall - Calling System.gc is inefficient",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}