{
  "ID": "b00ce8bc-993c-40d1-95ec-83a3231d7426",
  "Root": {
    "alive": true,
    "content": [
      "13389108-8e1d-483a-94c0-e31b76693ef9",
      "67305ed0-60a8-4913-bfc3-844bde322a8f",
      "e1d73037-a793-4678-90ad-57edc71128fa",
      "1d413db3-23d6-4279-bd25-7f47e0e7a37d",
      "f26d1b03-c6d1-4559-be39-74a43ac8684d",
      "dcd645c5-30aa-4b56-a953-289fd7c7821e",
      "a2daeeee-036a-482c-9ddb-908cb4d7348e",
      "4ab93092-bc8f-4b2a-a8c5-11b80d530643",
      "5ed8378c-0748-4267-b7d2-9f3289de3219",
      "0e88d774-f1cb-41ac-b4a7-f3c805a870c6",
      "ccbff7e2-1caa-4198-bf09-c4db8a19a0fc",
      "2acc0a7e-5d79-4cf5-90d0-49812a791090",
      "ad72025a-8c5f-4ecb-a178-9a8e34bb54bc",
      "3584e478-2545-4986-b11e-28374ca75a09",
      "e58f44c5-f3ce-4be8-86c6-d65b44c6b1ce",
      "9cea6729-2824-4572-bfe4-609d953d546c",
      "b7c3d50b-67be-4a50-ab7c-491bafb23094"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460482525,
    "id": "b00ce8bc-993c-40d1-95ec-83a3231d7426",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460482525,
    "parent_id": "554c1de0-d05d-42a6-83c5-3aa4b3d0fc65",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "050 Different Cases When Integer and int can be used interchangeably"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460482521,
        "id": "13389108-8e1d-483a-94c0-e31b76693ef9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460482521,
        "parent_id": "b00ce8bc-993c-40d1-95ec-83a3231d7426",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Case 1:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " While using in the place of method arguments."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Case 1:",
            "AttrFlags": 1
          },
          {
            "Text": " While using in the place of method arguments."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460482522,
        "id": "67305ed0-60a8-4913-bfc3-844bde322a8f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460482522,
        "parent_id": "b00ce8bc-993c-40d1-95ec-83a3231d7426",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If a method requires an object of wrapper class as argument.Then interchangeably the argument can be passed a variable of the respective primitive type and vice versa."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If a method requires an object of wrapper class as argument.Then interchangeably the argument can be passed a variable of the respective primitive type and vice versa."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460482522,
        "id": "e1d73037-a793-4678-90ad-57edc71128fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460482522,
        "parent_id": "b00ce8bc-993c-40d1-95ec-83a3231d7426",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460482522,
        "id": "1d413db3-23d6-4279-bd25-7f47e0e7a37d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460482522,
        "parent_id": "b00ce8bc-993c-40d1-95ec-83a3231d7426",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int i;\nInteger j;\nvoid ex_method(Integer i)//Is a valid statement\nvoid ex_method1(int j)//Is a valid statement"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int i;\nInteger j;\nvoid ex_method(Integer i)//Is a valid statement\nvoid ex_method1(int j)//Is a valid statement",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460482522,
        "id": "f26d1b03-c6d1-4559-be39-74a43ac8684d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460482522,
        "parent_id": "b00ce8bc-993c-40d1-95ec-83a3231d7426",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Case 2:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " While passing return values:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Case 2:",
            "AttrFlags": 1
          },
          {
            "Text": " While passing return values:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460482523,
        "id": "dcd645c5-30aa-4b56-a953-289fd7c7821e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460482523,
        "parent_id": "b00ce8bc-993c-40d1-95ec-83a3231d7426",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When a method returns a primitive type variable then an object of corresponding wrapper class can be passed as the return value interchangeably and vice versa."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When a method returns a primitive type variable then an object of corresponding wrapper class can be passed as the return value interchangeably and vice versa."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460482523,
        "id": "a2daeeee-036a-482c-9ddb-908cb4d7348e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460482523,
        "parent_id": "b00ce8bc-993c-40d1-95ec-83a3231d7426",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460482523,
        "id": "4ab93092-bc8f-4b2a-a8c5-11b80d530643",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460482523,
        "parent_id": "b00ce8bc-993c-40d1-95ec-83a3231d7426",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int i;\nInteger j;\nint ex_method()\n{...\nreturn j;}//Is a valid statement\nInteger ex_method1()\n{...\nreturn i;//Is a valid statement\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int i;\nInteger j;\nint ex_method()\n{...\nreturn j;}//Is a valid statement\nInteger ex_method1()\n{...\nreturn i;//Is a valid statement\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460482523,
        "id": "5ed8378c-0748-4267-b7d2-9f3289de3219",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460482523,
        "parent_id": "b00ce8bc-993c-40d1-95ec-83a3231d7426",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Case 3:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " While performing operations."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Case 3:",
            "AttrFlags": 1
          },
          {
            "Text": " While performing operations."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460482523,
        "id": "0e88d774-f1cb-41ac-b4a7-f3c805a870c6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460482523,
        "parent_id": "b00ce8bc-993c-40d1-95ec-83a3231d7426",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Whenever performing operations on numbers the primitive type variable and object of respective wrapper class can be used interchangeably."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Whenever performing operations on numbers the primitive type variable and object of respective wrapper class can be used interchangeably."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460482524,
        "id": "ccbff7e2-1caa-4198-bf09-c4db8a19a0fc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460482524,
        "parent_id": "b00ce8bc-993c-40d1-95ec-83a3231d7426",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int i=5;\nInteger j=new Integer(7);\nint k=i+j;//Is a valid statement\nInteger m=i+j;//Is also a valid statement"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int i=5;\nInteger j=new Integer(7);\nint k=i+j;//Is a valid statement\nInteger m=i+j;//Is also a valid statement",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460482524,
        "id": "2acc0a7e-5d79-4cf5-90d0-49812a791090",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460482524,
        "parent_id": "b00ce8bc-993c-40d1-95ec-83a3231d7426",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Pitfall",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ":Remember to initialize or assign a value to an object of the wrapper class."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Pitfall",
            "AttrFlags": 1
          },
          {
            "Text": ":Remember to initialize or assign a value to an object of the wrapper class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460482524,
        "id": "ad72025a-8c5f-4ecb-a178-9a8e34bb54bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460482524,
        "parent_id": "b00ce8bc-993c-40d1-95ec-83a3231d7426",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "While using wrapper class object and primitive variable interchangeably never forget or miss to initialize or assign a value to the wrapper class object else it may lead to null pointer exception at runtime."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "While using wrapper class object and primitive variable interchangeably never forget or miss to initialize or assign a value to the wrapper class object else it may lead to null pointer exception at runtime."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460482524,
        "id": "3584e478-2545-4986-b11e-28374ca75a09",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460482524,
        "parent_id": "b00ce8bc-993c-40d1-95ec-83a3231d7426",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460482524,
        "id": "e58f44c5-f3ce-4be8-86c6-d65b44c6b1ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460482524,
        "parent_id": "b00ce8bc-993c-40d1-95ec-83a3231d7426",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Test{\n    Integer i;\n    int j;\n    public void met()\n    {j=i;//Null pointer exception\n    SOP(j);\n    SOP(i);}   \n    public static void main(String[] args)\n    {Test t=new Test();\n    t.go();//Null pointer exception\n    }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Test{\n    Integer i;\n    int j;\n    public void met()\n    {j=i;//Null pointer exception\n    SOP(j);\n    SOP(i);}   \n    public static void main(String[] args)\n    {Test t=new Test();\n    t.go();//Null pointer exception\n    }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460482524,
        "id": "9cea6729-2824-4572-bfe4-609d953d546c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460482524,
        "parent_id": "b00ce8bc-993c-40d1-95ec-83a3231d7426",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the above example, the value of the object is unassigned and uninitialized and thus at runtime the program will run into null pointer exception.So as clear from the above example the value of object should never be left uninitialized and unassigned."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the above example, the value of the object is unassigned and uninitialized and thus at runtime the program will run into null pointer exception.So as clear from the above example the value of object should never be left uninitialized and unassigned."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460482524,
        "id": "b7c3d50b-67be-4a50-ab7c-491bafb23094",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460482524,
        "parent_id": "b00ce8bc-993c-40d1-95ec-83a3231d7426",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code_language": "Plain Text"
      }
    ],
    "title": "050 Different Cases When Integer and int can be used interchangeably"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}