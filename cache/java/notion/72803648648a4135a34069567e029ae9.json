{
  "ID": "72803648-648a-4135-a340-69567e029ae9",
  "Root": {
    "alive": true,
    "content": [
      "506874d8-39ae-4ff9-91d6-93fe75b6aae6",
      "1add192f-fd98-481f-8c7e-5169cee986f1",
      "05d12bf2-a427-45d6-8938-ee19174ec1cc",
      "6ad07347-83a4-49f9-a2d7-3e44954da27c",
      "e31b41b8-b061-4dc5-ba1d-e983102731df",
      "6241fba8-f2db-48e6-8590-d8067a99234d",
      "79f50687-740a-4bd4-b828-e9cc4a6eea6c",
      "102ee6fe-98d4-4ab0-88a8-e688c5200593",
      "7b21c7c9-abe9-4cfb-8778-400d2ff60b23",
      "be0b3a10-c229-4e70-b91c-d95d41fdd02c",
      "9ce8fccc-937d-495e-b00b-f31f19ff8df1",
      "be86adec-cf2c-463c-8986-7eb472db0a25",
      "cb084fac-9a60-4bfa-971b-cd849d2d84e8",
      "98c7f453-5e0f-49e3-bb82-418fe32e3076",
      "3cb593d3-a583-41e4-a899-2b468f14d54f",
      "4f42b833-c1b0-40b9-b5fc-5426a10bfe77",
      "92bd9344-7d27-4293-ab8c-0ce59397be2e",
      "3d579b56-0e98-44e6-aca9-20075ba4d2d8",
      "fe0182a9-5f7a-4b05-8217-b4927ba6c89e",
      "c77cc65e-b927-4380-8739-4e943cacb983",
      "027ef4d2-c8f8-4a05-8262-416ede5a6fc2",
      "20da1e12-b931-4c63-947f-2bca0ab839b4",
      "1ad943ee-2cba-45d0-b740-dc06dbed13c7",
      "99fa5cf0-8542-49e2-b837-1304d1f1865d",
      "4ba0a1e9-b15e-4c68-8c84-1f8c2952d51c",
      "c94e3f96-41be-459b-8e90-9c90cfe9151a",
      "65bb5d98-a464-4f1b-b685-560b70c6957f",
      "874b2aa8-573a-40f3-914f-ef261e38cdd3",
      "81d8e192-49f6-460c-bb8f-14d2d245a7b0",
      "970af104-ce8a-448e-aa1b-42bf51ed9a9c",
      "c6786ef5-9cdd-4377-9396-f6bb4bea1dbb",
      "abf3abff-748a-41b6-990a-a821c5f13af0",
      "e203e46b-8458-435d-bab2-c3ae2078eb9f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460749246,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "72803648-648a-4135-a340-69567e029ae9",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551753551460,
    "parent_id": "b9a3cb65-69d9-4784-9938-41825e12a7f1",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Comparing Date objects"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749231,
        "id": "506874d8-39ae-4ff9-91d6-93fe75b6aae6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749231,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Calendar, Date, and LocalDate"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Calendar, Date, and LocalDate"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749231,
        "id": "1add192f-fd98-481f-8c7e-5169cee986f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749231,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "before, after, compareTo and equals methods"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "before, after, compareTo and equals methods"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749232,
        "id": "05d12bf2-a427-45d6-8938-ee19174ec1cc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749232,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//Use of Calendar and Date objects    \nfinal Date today = new Date();\nfinal Calendar calendar = Calendar.getInstance();\ncalendar.set(1990, Calendar.NOVEMBER, 1, 0, 0, 0);\nDate birthdate = calendar.getTime();\n\nfinal Calendar calendar2 = Calendar.getInstance();\ncalendar2.set(1990, Calendar.NOVEMBER, 1, 0, 0, 0);\nDate samebirthdate = calendar2.getTime();\n\n//Before example\nSystem.out.printf(\"Is %1$tF before %2$tF? %3$b%n\", today, birthdate, Boolean.valueOf(today.before(birthdate)));\nSystem.out.printf(\"Is %1$tF before %1$tF? %3$b%n\", today, today, Boolean.valueOf(today.before(today)));\nSystem.out.printf(\"Is %2$tF before %1$tF? %3$b%n\", today, birthdate, Boolean.valueOf(birthdate.before(today)));\n\n//After example\nSystem.out.printf(\"Is %1$tF after %2$tF? %3$b%n\", today, birthdate, Boolean.valueOf(today.after(birthdate)));\nSystem.out.printf(\"Is %1$tF after %1$tF? %3$b%n\", today, birthdate, Boolean.valueOf(today.after(today)));\nSystem.out.printf(\"Is %2$tF after %1$tF? %3$b%n\", today, birthdate, Boolean.valueOf(birthdate.after(today)));\n\n//Compare example\nSystem.out.printf(\"Compare %1$tF to %2$tF: %3$d%n\", today, birthdate, Integer.valueOf(today.compareTo(birthdate)));\nSystem.out.printf(\"Compare %1$tF to %1$tF: %3$d%n\", today, birthdate, Integer.valueOf(today.compareTo(today)));\nSystem.out.printf(\"Compare %2$tF to %1$tF: %3$d%n\", today, birthdate, Integer.valueOf(birthdate.compareTo(today)));\n\n//Equal example\nSystem.out.printf(\"Is %1$tF equal to %2$tF? %3$b%n\", today, birthdate, Boolean.valueOf(today.equals(birthdate)));\nSystem.out.printf(\"Is %1$tF equal to %2$tF? %3$b%n\", birthdate, samebirthdate,\n            Boolean.valueOf(birthdate.equals(samebirthdate)));\nSystem.out.printf(\n            \"Because birthdate.getTime() -\u003e %1$d is different from samebirthdate.getTime() -\u003e %2$d, there are millisecondes!%n\",\n            Long.valueOf(birthdate.getTime()), Long.valueOf(samebirthdate.getTime()));\n\n//Clear ms from calendars\ncalendar.clear(Calendar.MILLISECOND);\ncalendar2.clear(Calendar.MILLISECOND);\nbirthdate = calendar.getTime();\nsamebirthdate = calendar2.getTime();\n\nSystem.out.printf(\"Is %1$tF equal to %2$tF after clearing ms? %3$b%n\", birthdate, samebirthdate,\n            Boolean.valueOf(birthdate.equals(samebirthdate)));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//Use of Calendar and Date objects    \nfinal Date today = new Date();\nfinal Calendar calendar = Calendar.getInstance();\ncalendar.set(1990, Calendar.NOVEMBER, 1, 0, 0, 0);\nDate birthdate = calendar.getTime();\n\nfinal Calendar calendar2 = Calendar.getInstance();\ncalendar2.set(1990, Calendar.NOVEMBER, 1, 0, 0, 0);\nDate samebirthdate = calendar2.getTime();\n\n//Before example\nSystem.out.printf(\"Is %1$tF before %2$tF? %3$b%n\", today, birthdate, Boolean.valueOf(today.before(birthdate)));\nSystem.out.printf(\"Is %1$tF before %1$tF? %3$b%n\", today, today, Boolean.valueOf(today.before(today)));\nSystem.out.printf(\"Is %2$tF before %1$tF? %3$b%n\", today, birthdate, Boolean.valueOf(birthdate.before(today)));\n\n//After example\nSystem.out.printf(\"Is %1$tF after %2$tF? %3$b%n\", today, birthdate, Boolean.valueOf(today.after(birthdate)));\nSystem.out.printf(\"Is %1$tF after %1$tF? %3$b%n\", today, birthdate, Boolean.valueOf(today.after(today)));\nSystem.out.printf(\"Is %2$tF after %1$tF? %3$b%n\", today, birthdate, Boolean.valueOf(birthdate.after(today)));\n\n//Compare example\nSystem.out.printf(\"Compare %1$tF to %2$tF: %3$d%n\", today, birthdate, Integer.valueOf(today.compareTo(birthdate)));\nSystem.out.printf(\"Compare %1$tF to %1$tF: %3$d%n\", today, birthdate, Integer.valueOf(today.compareTo(today)));\nSystem.out.printf(\"Compare %2$tF to %1$tF: %3$d%n\", today, birthdate, Integer.valueOf(birthdate.compareTo(today)));\n\n//Equal example\nSystem.out.printf(\"Is %1$tF equal to %2$tF? %3$b%n\", today, birthdate, Boolean.valueOf(today.equals(birthdate)));\nSystem.out.printf(\"Is %1$tF equal to %2$tF? %3$b%n\", birthdate, samebirthdate,\n            Boolean.valueOf(birthdate.equals(samebirthdate)));\nSystem.out.printf(\n            \"Because birthdate.getTime() -\u003e %1$d is different from samebirthdate.getTime() -\u003e %2$d, there are millisecondes!%n\",\n            Long.valueOf(birthdate.getTime()), Long.valueOf(samebirthdate.getTime()));\n\n//Clear ms from calendars\ncalendar.clear(Calendar.MILLISECOND);\ncalendar2.clear(Calendar.MILLISECOND);\nbirthdate = calendar.getTime();\nsamebirthdate = calendar2.getTime();\n\nSystem.out.printf(\"Is %1$tF equal to %2$tF after clearing ms? %3$b%n\", birthdate, samebirthdate,\n            Boolean.valueOf(birthdate.equals(samebirthdate)));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749232,
        "id": "6ad07347-83a4-49f9-a2d7-3e44954da27c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749232,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "isBefore, isAfter, compareTo and equals methods"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "isBefore, isAfter, compareTo and equals methods"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749232,
        "id": "e31b41b8-b061-4dc5-ba1d-e983102731df",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749232,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//Use of LocalDate\nfinal LocalDate now = LocalDate.now();\nfinal LocalDate birthdate2 = LocalDate.of(2012, 6, 30);\nfinal LocalDate birthdate3 = LocalDate.of(2012, 6, 30);\n\n//Hours, minutes, second and nanoOfsecond can also be configured with an other class LocalDateTime\n//LocalDateTime.of(year, month, dayOfMonth, hour, minute, second, nanoOfSecond);\n\n//isBefore example\nSystem.out.printf(\"Is %1$tF before %2$tF? %3$b%n\", now, birthdate2, Boolean.valueOf(now.isBefore(birthdate2)));\nSystem.out.printf(\"Is %1$tF before %1$tF? %3$b%n\", now, birthdate2, Boolean.valueOf(now.isBefore(now)));\nSystem.out.printf(\"Is %2$tF before %1$tF? %3$b%n\", now, birthdate2, Boolean.valueOf(birthdate2.isBefore(now)));\n\n//isAfter example\nSystem.out.printf(\"Is %1$tF after %2$tF? %3$b%n\", now, birthdate2, Boolean.valueOf(now.isAfter(birthdate2)));\nSystem.out.printf(\"Is %1$tF after %1$tF? %3$b%n\", now, birthdate2, Boolean.valueOf(now.isAfter(now)));\nSystem.out.printf(\"Is %2$tF after %1$tF? %3$b%n\", now, birthdate2, Boolean.valueOf(birthdate2.isAfter(now)));\n\n//compareTo example\nSystem.out.printf(\"Compare %1$tF to %2$tF %3$d%n\", now, birthdate2, Integer.valueOf(now.compareTo(birthdate2)));\nSystem.out.printf(\"Compare %1$tF to %1$tF %3$d%n\", now, birthdate2, Integer.valueOf(now.compareTo(now)));\nSystem.out.printf(\"Compare %2$tF to %1$tF %3$d%n\", now, birthdate2, Integer.valueOf(birthdate2.compareTo(now)));\n\n//equals example\nSystem.out.printf(\"Is %1$tF equal to %2$tF? %3$b%n\", now, birthdate2, Boolean.valueOf(now.equals(birthdate2)));\nSystem.out.printf(\"Is %1$tF to %2$tF? %3$b%n\", birthdate2, birthdate3, Boolean.valueOf(birthdate2.equals(birthdate3)));\n\n//isEqual example\nSystem.out.printf(\"Is %1$tF equal to %2$tF? %3$b%n\", now, birthdate2, Boolean.valueOf(now.isEqual(birthdate2)));\nSystem.out.printf(\"Is %1$tF to %2$tF? %3$b%n\", birthdate2, birthdate3, Boolean.valueOf(birthdate2.isEqual(birthdate3)));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//Use of LocalDate\nfinal LocalDate now = LocalDate.now();\nfinal LocalDate birthdate2 = LocalDate.of(2012, 6, 30);\nfinal LocalDate birthdate3 = LocalDate.of(2012, 6, 30);\n\n//Hours, minutes, second and nanoOfsecond can also be configured with an other class LocalDateTime\n//LocalDateTime.of(year, month, dayOfMonth, hour, minute, second, nanoOfSecond);\n\n//isBefore example\nSystem.out.printf(\"Is %1$tF before %2$tF? %3$b%n\", now, birthdate2, Boolean.valueOf(now.isBefore(birthdate2)));\nSystem.out.printf(\"Is %1$tF before %1$tF? %3$b%n\", now, birthdate2, Boolean.valueOf(now.isBefore(now)));\nSystem.out.printf(\"Is %2$tF before %1$tF? %3$b%n\", now, birthdate2, Boolean.valueOf(birthdate2.isBefore(now)));\n\n//isAfter example\nSystem.out.printf(\"Is %1$tF after %2$tF? %3$b%n\", now, birthdate2, Boolean.valueOf(now.isAfter(birthdate2)));\nSystem.out.printf(\"Is %1$tF after %1$tF? %3$b%n\", now, birthdate2, Boolean.valueOf(now.isAfter(now)));\nSystem.out.printf(\"Is %2$tF after %1$tF? %3$b%n\", now, birthdate2, Boolean.valueOf(birthdate2.isAfter(now)));\n\n//compareTo example\nSystem.out.printf(\"Compare %1$tF to %2$tF %3$d%n\", now, birthdate2, Integer.valueOf(now.compareTo(birthdate2)));\nSystem.out.printf(\"Compare %1$tF to %1$tF %3$d%n\", now, birthdate2, Integer.valueOf(now.compareTo(now)));\nSystem.out.printf(\"Compare %2$tF to %1$tF %3$d%n\", now, birthdate2, Integer.valueOf(birthdate2.compareTo(now)));\n\n//equals example\nSystem.out.printf(\"Is %1$tF equal to %2$tF? %3$b%n\", now, birthdate2, Boolean.valueOf(now.equals(birthdate2)));\nSystem.out.printf(\"Is %1$tF to %2$tF? %3$b%n\", birthdate2, birthdate3, Boolean.valueOf(birthdate2.equals(birthdate3)));\n\n//isEqual example\nSystem.out.printf(\"Is %1$tF equal to %2$tF? %3$b%n\", now, birthdate2, Boolean.valueOf(now.isEqual(birthdate2)));\nSystem.out.printf(\"Is %1$tF to %2$tF? %3$b%n\", birthdate2, birthdate3, Boolean.valueOf(birthdate2.isEqual(birthdate3)));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749232,
        "id": "6241fba8-f2db-48e6-8590-d8067a99234d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749232,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Date comparison before Java 8"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Date comparison before Java 8"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749234,
        "id": "79f50687-740a-4bd4-b828-e9cc4a6eea6c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749234,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Before Java 8, dates could be compared using "
            ],
            [
              "java.util.Calendar",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/util/Calendar.html"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "java.util.Date",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/util/Date.html"
                ]
              ]
            ],
            [
              " classes. Date class offers 4 methods to compare dates :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Before Java 8, dates could be compared using "
          },
          {
            "Text": "java.util.Calendar",
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/util/Calendar.html"
          },
          {
            "Text": " and "
          },
          {
            "Text": "java.util.Date",
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/util/Date.html"
          },
          {
            "Text": " classes. Date class offers 4 methods to compare dates :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749235,
        "id": "102ee6fe-98d4-4ab0-88a8-e688c5200593",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749235,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "after(Date when)",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/util/Date.html#after(java.util.Date)"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "after(Date when)",
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/util/Date.html#after(java.util.Date)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749236,
        "id": "7b21c7c9-abe9-4cfb-8778-400d2ff60b23",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749236,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "before(Date when)",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/util/Date.html#before(java.util.Date)"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "before(Date when)",
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/util/Date.html#before(java.util.Date)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749236,
        "id": "be0b3a10-c229-4e70-b91c-d95d41fdd02c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749236,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "compareTo(Date anotherDate)",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/util/Date.html#compareTo(java.util.Date)"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "compareTo(Date anotherDate)",
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/util/Date.html#compareTo(java.util.Date)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749237,
        "id": "9ce8fccc-937d-495e-b00b-f31f19ff8df1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749237,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "equals(Object obj)",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/util/Date.html#equals(java.lang.Object)"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "equals(Object obj)",
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/util/Date.html#equals(java.lang.Object)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749237,
        "id": "be86adec-cf2c-463c-8986-7eb472db0a25",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749237,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "after",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "before",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "compareTo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "equals",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " methods compare the values returned by "
            ],
            [
              "getTime()",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/util/Date.html#getTime()"
                ]
              ]
            ],
            [
              " method for each date."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "after",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "before",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "compareTo",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "equals",
            "AttrFlags": 2
          },
          {
            "Text": " methods compare the values returned by "
          },
          {
            "Text": "getTime()",
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/util/Date.html#getTime()"
          },
          {
            "Text": " method for each date."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749238,
        "id": "cb084fac-9a60-4bfa-971b-cd849d2d84e8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749238,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "compareTo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method returns positive integer."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "compareTo",
            "AttrFlags": 2
          },
          {
            "Text": " method returns positive integer."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749238,
        "id": "98c7f453-5e0f-49e3-bb82-418fe32e3076",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749238,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Value greater than 0 : when the Date is after the Date argument"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Value greater than 0 : when the Date is after the Date argument"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749238,
        "id": "3cb593d3-a583-41e4-a899-2b468f14d54f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749238,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Value greater than 0 : when the Date is before the Date argument"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Value greater than 0 : when the Date is before the Date argument"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749238,
        "id": "4f42b833-c1b0-40b9-b5fc-5426a10bfe77",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749238,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Value equals to 0 : when the Date is equal to the Date argument"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Value equals to 0 : when the Date is equal to the Date argument"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749238,
        "id": "92bd9344-7d27-4293-ab8c-0ce59397be2e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749238,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "equals",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " results can be surprising as shown in the example because values, like milliseconds, are not initialize with the same value if not explicitly given."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "equals",
            "AttrFlags": 2
          },
          {
            "Text": " results can be surprising as shown in the example because values, like milliseconds, are not initialize with the same value if not explicitly given."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749238,
        "id": "3d579b56-0e98-44e6-aca9-20075ba4d2d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749238,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Since Java 8"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Since Java 8"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749239,
        "id": "fe0182a9-5f7a-4b05-8217-b4927ba6c89e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749239,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With Java 8 a new Object to work with Date is available "
            ],
            [
              "java.time.LocalDate",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "LocalDate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " implements "
            ],
            [
              "ChronoLocalDate",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html"
                ]
              ]
            ],
            [
              ", the abstract representation of a date where the Chronology, or calendar system, is pluggable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With Java 8 a new Object to work with Date is available "
          },
          {
            "Text": "java.time.LocalDate",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html"
          },
          {
            "Text": ". "
          },
          {
            "Text": "LocalDate",
            "AttrFlags": 2
          },
          {
            "Text": " implements "
          },
          {
            "Text": "ChronoLocalDate",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html"
          },
          {
            "Text": ", the abstract representation of a date where the Chronology, or calendar system, is pluggable."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749240,
        "id": "c77cc65e-b927-4380-8739-4e943cacb983",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749240,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To have the date time precision the Object "
            ],
            [
              "java.time.LocalDateTime",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html"
                ]
              ]
            ],
            [
              " has to be used. "
            ],
            [
              "LocalDate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "LocalDateTime",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " use the same methods name for comparing."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To have the date time precision the Object "
          },
          {
            "Text": "java.time.LocalDateTime",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html"
          },
          {
            "Text": " has to be used. "
          },
          {
            "Text": "LocalDate",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "LocalDateTime",
            "AttrFlags": 2
          },
          {
            "Text": " use the same methods name for comparing."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749240,
        "id": "027ef4d2-c8f8-4a05-8262-416ede5a6fc2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749240,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Comparing dates using a "
            ],
            [
              "LocalDate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is different from using "
            ],
            [
              "ChronoLocalDate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " because the chronology, or calendar system are not taken in account the first one."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Comparing dates using a "
          },
          {
            "Text": "LocalDate",
            "AttrFlags": 2
          },
          {
            "Text": " is different from using "
          },
          {
            "Text": "ChronoLocalDate",
            "AttrFlags": 2
          },
          {
            "Text": " because the chronology, or calendar system are not taken in account the first one."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749241,
        "id": "20da1e12-b931-4c63-947f-2bca0ab839b4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749241,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Because most application should use "
            ],
            [
              "LocalDate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "ChronoLocalDate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not included in examples. Further reading "
            ],
            [
              "here",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Because most application should use "
          },
          {
            "Text": "LocalDate",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "ChronoLocalDate",
            "AttrFlags": 2
          },
          {
            "Text": " is not included in examples. Further reading "
          },
          {
            "Text": "here",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749241,
        "id": "1ad943ee-2cba-45d0-b740-dc06dbed13c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749241,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Most applications should declare method signatures, fields and variables as LocalDate, not this[ChronoLocalDate] interface."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Most applications should declare method signatures, fields and variables as LocalDate, not this[ChronoLocalDate] interface."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749241,
        "id": "99fa5cf0-8542-49e2-b837-1304d1f1865d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749241,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "LocalDate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has 5 methods to compare dates :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "LocalDate",
            "AttrFlags": 2
          },
          {
            "Text": " has 5 methods to compare dates :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749242,
        "id": "4ba0a1e9-b15e-4c68-8c84-1f8c2952d51c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749242,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "isAfter(ChronoLocalDate other)",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#isAfter-java.time.chrono.ChronoLocalDate-"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "isAfter(ChronoLocalDate other)",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#isAfter-java.time.chrono.ChronoLocalDate-"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749243,
        "id": "c94e3f96-41be-459b-8e90-9c90cfe9151a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749243,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "isBefore(ChronoLocalDate other)",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#isBefore-java.time.chrono.ChronoLocalDate-"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "isBefore(ChronoLocalDate other)",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#isBefore-java.time.chrono.ChronoLocalDate-"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749244,
        "id": "65bb5d98-a464-4f1b-b685-560b70c6957f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749244,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "isEqual(ChronoLocalDate other)",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#isEqual-java.time.chrono.ChronoLocalDate-"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "isEqual(ChronoLocalDate other)",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#isEqual-java.time.chrono.ChronoLocalDate-"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749245,
        "id": "874b2aa8-573a-40f3-914f-ef261e38cdd3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749245,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "compareTo(ChronoLocalDate other)",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#compareTo-java.time.chrono.ChronoLocalDate-"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "compareTo(ChronoLocalDate other)",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#compareTo-java.time.chrono.ChronoLocalDate-"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749245,
        "id": "81d8e192-49f6-460c-bb8f-14d2d245a7b0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749245,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "equals(Object obj)",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#equals-java.lang.Object-"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "equals(Object obj)",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#equals-java.lang.Object-"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749246,
        "id": "970af104-ce8a-448e-aa1b-42bf51ed9a9c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749246,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In case of "
            ],
            [
              "LocalDate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " parameter, "
            ],
            [
              "isAfter",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "isBefore",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "isEqual",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "equals",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "compareTo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " now use this method:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In case of "
          },
          {
            "Text": "LocalDate",
            "AttrFlags": 2
          },
          {
            "Text": " parameter, "
          },
          {
            "Text": "isAfter",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "isBefore",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "isEqual",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "equals",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "compareTo",
            "AttrFlags": 2
          },
          {
            "Text": " now use this method:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749246,
        "id": "c6786ef5-9cdd-4377-9396-f6bb4bea1dbb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749246,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int compareTo0(LocalDate otherDate) {\n    int cmp = (year - otherDate.year);\n    if (cmp == 0) {\n        cmp = (month - otherDate.month);\n        if (cmp == 0) {\n            cmp = (day - otherDate.day);\n        }\n    }\n    return cmp;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int compareTo0(LocalDate otherDate) {\n    int cmp = (year - otherDate.year);\n    if (cmp == 0) {\n        cmp = (month - otherDate.month);\n        if (cmp == 0) {\n            cmp = (day - otherDate.day);\n        }\n    }\n    return cmp;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749246,
        "id": "abf3abff-748a-41b6-990a-a821c5f13af0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749246,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "equals",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method check if the parameter reference equals the date first whereas "
            ],
            [
              "isEqual",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " directly calls "
            ],
            [
              "compareTo0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "equals",
            "AttrFlags": 2
          },
          {
            "Text": " method check if the parameter reference equals the date first whereas "
          },
          {
            "Text": "isEqual",
            "AttrFlags": 2
          },
          {
            "Text": " directly calls "
          },
          {
            "Text": "compareTo0",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460749246,
        "id": "e203e46b-8458-435d-bab2-c3ae2078eb9f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460749246,
        "parent_id": "72803648-648a-4135-a340-69567e029ae9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In case of an other class instance of "
            ],
            [
              "ChronoLocalDate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " the dates are compared using the "
            ],
            [
              "Epoch Day",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The Epoch Day count is a simple incrementing count of days where day 0 is 1970-01-01 (ISO)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In case of an other class instance of "
          },
          {
            "Text": "ChronoLocalDate",
            "AttrFlags": 2
          },
          {
            "Text": " the dates are compared using the "
          },
          {
            "Text": "Epoch Day",
            "AttrFlags": 2
          },
          {
            "Text": ". The Epoch Day count is a simple incrementing count of days where day 0 is 1970-01-01 (ISO)."
          }
        ]
      }
    ],
    "title": "Comparing Date objects",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}