{
  "ID": "0fedebc6-e782-42f9-846a-b577edb29fc1",
  "Root": {
    "alive": true,
    "content": [
      "ffe0ed0f-183f-4ac9-a822-418460b7dfc6",
      "19bd0fa1-d277-4395-9332-da88d31baac9",
      "8e93a81e-4436-4282-b91b-c11448fd5edf",
      "be4ae6cd-08c9-4621-a969-135df3677cdb",
      "613be166-816a-4545-931c-46b9d336086a",
      "0a2c1ab0-c92a-4dd9-a148-216d7ccd5c7f",
      "95597f76-f629-423e-ba61-a39fb3ff36ff",
      "c0e1163d-9804-40ed-b8b4-4ec0d5266512",
      "3de0e883-b998-4def-997b-765be3e0ba4e",
      "e5c64420-6402-4616-aeae-7e210dd65b4d",
      "6c37bb1f-ed82-4eb0-98ef-b8357e267ee3",
      "7d44a66d-3e57-4f6e-9250-835bad015c5d",
      "8d3cf02f-f2fd-4d8a-8cde-68791a54e5ad"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550517991588,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "0fedebc6-e782-42f9-846a-b577edb29fc1",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551759492490,
    "parent_id": "65b3b4cb-dbb9-4dfb-9c83-9429dfa4e76a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Pitfall using to compare strings"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517991581,
        "id": "ffe0ed0f-183f-4ac9-a822-418460b7dfc6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517991581,
        "parent_id": "0fedebc6-e782-42f9-846a-b577edb29fc1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A common mistake for Java beginners is to use the "
            ],
            [
              "==",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator to test if two strings are equal. For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A common mistake for Java beginners is to use the "
          },
          {
            "Text": "==",
            "AttrFlags": 2
          },
          {
            "Text": " operator to test if two strings are equal. For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517991584,
        "id": "19bd0fa1-d277-4395-9332-da88d31baac9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517991584,
        "parent_id": "0fedebc6-e782-42f9-846a-b577edb29fc1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Hello {\n    public static void main(String[] args) {\n        if (args.length \u003e 0) {\n            if (args[0] == \"hello\") {\n                System.out.println(\"Hello back to you\");\n            } else {\n                System.out.println(\"Are you feeling grumpy today?\");\n            }\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Hello {\n    public static void main(String[] args) {\n        if (args.length \u003e 0) {\n            if (args[0] == \"hello\") {\n                System.out.println(\"Hello back to you\");\n            } else {\n                System.out.println(\"Are you feeling grumpy today?\");\n            }\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517991584,
        "id": "8e93a81e-4436-4282-b91b-c11448fd5edf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517991584,
        "parent_id": "0fedebc6-e782-42f9-846a-b577edb29fc1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The above program is supposed to test the first command line argument and print different messages when it and isn’t the word “hello”. But the problem is that it won’t work. That program will output “Are you feeling grumpy today?” no matter what the first command line argument is."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The above program is supposed to test the first command line argument and print different messages when it and isn’t the word “hello”. But the problem is that it won’t work. That program will output “Are you feeling grumpy today?” no matter what the first command line argument is."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517991584,
        "id": "be4ae6cd-08c9-4621-a969-135df3677cdb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517991584,
        "parent_id": "0fedebc6-e782-42f9-846a-b577edb29fc1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this particular case the "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " “hello” is put in the string pool while the "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " args[0] resides on the heap. This means there are two objects representing the same literal, each with its reference. Since "
            ],
            [
              "==",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " tests for references, not actual equality, the comparison will yield a false most of the times. This doesn’t mean that it will always do so."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this particular case the "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " “hello” is put in the string pool while the "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " args[0] resides on the heap. This means there are two objects representing the same literal, each with its reference. Since "
          },
          {
            "Text": "==",
            "AttrFlags": 2
          },
          {
            "Text": " tests for references, not actual equality, the comparison will yield a false most of the times. This doesn’t mean that it will always do so."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517991585,
        "id": "613be166-816a-4545-931c-46b9d336086a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517991585,
        "parent_id": "0fedebc6-e782-42f9-846a-b577edb29fc1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When you use "
            ],
            [
              "==",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to test strings, what you are actually testing is if two "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " objects are the same Java object. Unfortunately, that is not what string equality means in Java. In fact, the correct way to test strings is to use the "
            ],
            [
              "equals(Object)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method. For a pair of strings, we usually want to test if they consist of the same characters in the same order."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When you use "
          },
          {
            "Text": "==",
            "AttrFlags": 2
          },
          {
            "Text": " to test strings, what you are actually testing is if two "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " objects are the same Java object. Unfortunately, that is not what string equality means in Java. In fact, the correct way to test strings is to use the "
          },
          {
            "Text": "equals(Object)",
            "AttrFlags": 2
          },
          {
            "Text": " method. For a pair of strings, we usually want to test if they consist of the same characters in the same order."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517991585,
        "id": "0a2c1ab0-c92a-4dd9-a148-216d7ccd5c7f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517991585,
        "parent_id": "0fedebc6-e782-42f9-846a-b577edb29fc1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Hello2 {\n    public static void main(String[] args) {\n        if (args.length \u003e 0) {\n            if (args[0].equals(\"hello\")) {\n                System.out.println(\"Hello back to you\");\n            } else {\n                System.out.println(\"Are you feeling grumpy today?\");\n            }\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Hello2 {\n    public static void main(String[] args) {\n        if (args.length \u003e 0) {\n            if (args[0].equals(\"hello\")) {\n                System.out.println(\"Hello back to you\");\n            } else {\n                System.out.println(\"Are you feeling grumpy today?\");\n            }\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517991585,
        "id": "95597f76-f629-423e-ba61-a39fb3ff36ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517991585,
        "parent_id": "0fedebc6-e782-42f9-846a-b577edb29fc1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But it actually gets worse. The problem is that "
            ],
            [
              "==",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "will",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " give the expected answer in some circumstances. For example"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But it actually gets worse. The problem is that "
          },
          {
            "Text": "==",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "will",
            "AttrFlags": 4
          },
          {
            "Text": " give the expected answer in some circumstances. For example"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517991585,
        "id": "c0e1163d-9804-40ed-b8b4-4ec0d5266512",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517991585,
        "parent_id": "0fedebc6-e782-42f9-846a-b577edb29fc1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Test1 {\n    public static void main(String[] args) {\n        String s1 = \"hello\";\n        String s2 = \"hello\";\n        if (s1 == s2) {\n            System.out.println(\"same\");\n        } else {\n            System.out.println(\"different\");\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Test1 {\n    public static void main(String[] args) {\n        String s1 = \"hello\";\n        String s2 = \"hello\";\n        if (s1 == s2) {\n            System.out.println(\"same\");\n        } else {\n            System.out.println(\"different\");\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517991587,
        "id": "3de0e883-b998-4def-997b-765be3e0ba4e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517991587,
        "parent_id": "0fedebc6-e782-42f9-846a-b577edb29fc1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Interestingly, this will print “same”, even though we are testing the strings the wrong way. Why is that? Because the "
            ],
            [
              "Java Language Specification (Section 3.10.5: String Literals)",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/specs/jls/se8/html/jls-3.html#jls-3.10.5"
                ]
              ]
            ],
            [
              " stipulates that any two string \u003e\u003eliterals\u003c\u003c consisting of the same characters will actually be represented by the same Java object. Hence, the "
            ],
            [
              "==",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " test will give true for equal literals. (The string literals are “interned” and added to a shared “string pool” when your code is loaded, but that is actually an implementation detail.)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Interestingly, this will print “same”, even though we are testing the strings the wrong way. Why is that? Because the "
          },
          {
            "Text": "Java Language Specification (Section 3.10.5: String Literals)",
            "Link": "https://docs.oracle.com/javase/specs/jls/se8/html/jls-3.html#jls-3.10.5"
          },
          {
            "Text": " stipulates that any two string \u003e\u003eliterals\u003c\u003c consisting of the same characters will actually be represented by the same Java object. Hence, the "
          },
          {
            "Text": "==",
            "AttrFlags": 2
          },
          {
            "Text": " test will give true for equal literals. (The string literals are “interned” and added to a shared “string pool” when your code is loaded, but that is actually an implementation detail.)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517991587,
        "id": "e5c64420-6402-4616-aeae-7e210dd65b4d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517991587,
        "parent_id": "0fedebc6-e782-42f9-846a-b577edb29fc1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To add to the confusion, the Java Language Specification also stipulates that when you have a compile-time constant expression that concatenates two string literals, that is equivalent to a single literal. Thus:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To add to the confusion, the Java Language Specification also stipulates that when you have a compile-time constant expression that concatenates two string literals, that is equivalent to a single literal. Thus:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517991587,
        "id": "6c37bb1f-ed82-4eb0-98ef-b8357e267ee3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517991587,
        "parent_id": "0fedebc6-e782-42f9-846a-b577edb29fc1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Test1 {\npublic static void main(String[] args) {\n    String s1 = \"hello\";\n    String s2 = \"hel\" + \"lo\";\n    String s3 = \" mum\";\n    if (s1 == s2) {\n        System.out.println(\"1. same\");\n    } else {\n        System.out.println(\"1. different\");\n    }\n    if (s1 + s3 == \"hello mum\") {\n        System.out.println(\"2. same\");\n    } else {\n        System.out.println(\"2. different\");\n    }\n}\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Test1 {\npublic static void main(String[] args) {\n    String s1 = \"hello\";\n    String s2 = \"hel\" + \"lo\";\n    String s3 = \" mum\";\n    if (s1 == s2) {\n        System.out.println(\"1. same\");\n    } else {\n        System.out.println(\"1. different\");\n    }\n    if (s1 + s3 == \"hello mum\") {\n        System.out.println(\"2. same\");\n    } else {\n        System.out.println(\"2. different\");\n    }\n}\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517991588,
        "id": "7d44a66d-3e57-4f6e-9250-835bad015c5d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517991588,
        "parent_id": "0fedebc6-e782-42f9-846a-b577edb29fc1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This will output “1. same” and “2. different”. In the first case, the "
            ],
            [
              "\\+",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " expression is evaluated at compile time and we compare one "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object with itself. In the second case, it is evaluated at run time and we compare two different "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " objects"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This will output “1. same” and “2. different”. In the first case, the "
          },
          {
            "Text": "\\+",
            "AttrFlags": 2
          },
          {
            "Text": " expression is evaluated at compile time and we compare one "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " object with itself. In the second case, it is evaluated at run time and we compare two different "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " objects"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517991588,
        "id": "8d3cf02f-f2fd-4d8a-8cde-68791a54e5ad",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517991588,
        "parent_id": "0fedebc6-e782-42f9-846a-b577edb29fc1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In summary, using "
            ],
            [
              "==",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to test strings in Java is almost always incorrect, but it is not guaranteed to give the wrong answer."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In summary, using "
          },
          {
            "Text": "==",
            "AttrFlags": 2
          },
          {
            "Text": " to test strings in Java is almost always incorrect, but it is not guaranteed to give the wrong answer."
          }
        ]
      }
    ],
    "title": "Pitfall using to compare strings",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}