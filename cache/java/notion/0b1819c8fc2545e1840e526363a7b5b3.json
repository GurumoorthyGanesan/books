{
  "ID": "0b1819c8-fc25-45e1-840e-526363a7b5b3",
  "Root": {
    "alive": true,
    "content": [
      "636594bc-9083-4e8c-a65d-da21666013fc",
      "e2046644-de91-407a-84b3-584034ad258b",
      "26a2804d-2525-4874-bed4-30a0f58f6aba",
      "940b869b-87cf-4d47-a3e2-0acc0f17f1aa",
      "9075d230-1fca-446c-bc9e-03ccc8259b43",
      "440aa06f-e143-4be2-940b-6159ba08a1e2",
      "1dfb7c19-1346-479c-b9cb-260ddfdbe684",
      "b56950e3-add3-4e84-82ab-51e065368f93",
      "4ac70d46-d02a-444a-9d68-45b75da8572f",
      "365bb173-7167-4f90-b4ef-f346ed3b26c8"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460166011,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "0b1819c8-fc25-45e1-840e-526363a7b5b3",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551741819476,
    "parent_id": "eaad0c1d-9ecf-4d2a-b640-d2df4debfaf8",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Obtain class that satisfies generic parameter at runtime"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460166004,
        "id": "636594bc-9083-4e8c-a65d-da21666013fc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460166004,
        "parent_id": "0b1819c8-fc25-45e1-840e-526363a7b5b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Many unbound generic parameters, like those used in a static method, cannot be recovered at runtime (see "
            ],
            [
              "Other Threads",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " on "
            ],
            [
              "Erasure",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "). However there is a common strategy employed for accessing the type satisfying a generic parameter on a class at runtime. This allows for generic code that depends on access to type "
            ],
            [
              "without",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " having to thread type information through every call."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Many unbound generic parameters, like those used in a static method, cannot be recovered at runtime (see "
          },
          {
            "Text": "Other Threads",
            "AttrFlags": 4
          },
          {
            "Text": " on "
          },
          {
            "Text": "Erasure",
            "AttrFlags": 4
          },
          {
            "Text": "). However there is a common strategy employed for accessing the type satisfying a generic parameter on a class at runtime. This allows for generic code that depends on access to type "
          },
          {
            "Text": "without",
            "AttrFlags": 4
          },
          {
            "Text": " having to thread type information through every call."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460166007,
        "id": "e2046644-de91-407a-84b3-584034ad258b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460166007,
        "parent_id": "0b1819c8-fc25-45e1-840e-526363a7b5b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Background",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Background",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460166008,
        "id": "26a2804d-2525-4874-bed4-30a0f58f6aba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460166008,
        "parent_id": "0b1819c8-fc25-45e1-840e-526363a7b5b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Generic parameterization on a class can be inspected by creating an anonymous inner class. This class will capture the type information. In general this mechanism is referred to as "
            ],
            [
              "super type tokens",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", which are detailed in "
            ],
            [
              "Neal Gafter’s blog post",
              [
                [
                  "a",
                  "http://gafter.blogspot.com/2006/12/super-type-tokens.html"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Generic parameterization on a class can be inspected by creating an anonymous inner class. This class will capture the type information. In general this mechanism is referred to as "
          },
          {
            "Text": "super type tokens",
            "AttrFlags": 1
          },
          {
            "Text": ", which are detailed in "
          },
          {
            "Text": "Neal Gafter’s blog post",
            "Link": "http://gafter.blogspot.com/2006/12/super-type-tokens.html"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460166009,
        "id": "940b869b-87cf-4d47-a3e2-0acc0f17f1aa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460166009,
        "parent_id": "0b1819c8-fc25-45e1-840e-526363a7b5b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Implementations",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Implementations",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460166009,
        "id": "9075d230-1fca-446c-bc9e-03ccc8259b43",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460166009,
        "parent_id": "0b1819c8-fc25-45e1-840e-526363a7b5b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Three common implementations in Java are:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Three common implementations in Java are:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460166010,
        "id": "440aa06f-e143-4be2-940b-6159ba08a1e2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460166010,
        "parent_id": "0b1819c8-fc25-45e1-840e-526363a7b5b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Guava’s TypeToken",
              [
                [
                  "a",
                  "https://github.com/google/guava/wiki/ReflectionExplained"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Guava’s TypeToken",
            "Link": "https://github.com/google/guava/wiki/ReflectionExplained"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460166010,
        "id": "1dfb7c19-1346-479c-b9cb-260ddfdbe684",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460166010,
        "parent_id": "0b1819c8-fc25-45e1-840e-526363a7b5b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Spring’s ParameterizedTypeReference",
              [
                [
                  "a",
                  "http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/core/ParameterizedTypeReference.html"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Spring’s ParameterizedTypeReference",
            "Link": "http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/core/ParameterizedTypeReference.html"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460166011,
        "id": "b56950e3-add3-4e84-82ab-51e065368f93",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460166011,
        "parent_id": "0b1819c8-fc25-45e1-840e-526363a7b5b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Jackson’s TypeReference",
              [
                [
                  "a",
                  "http://fasterxml.github.io/jackson-core/javadoc/2.0.0/com/fasterxml/jackson/core/type/TypeReference.html"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Jackson’s TypeReference",
            "Link": "http://fasterxml.github.io/jackson-core/javadoc/2.0.0/com/fasterxml/jackson/core/type/TypeReference.html"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460166011,
        "id": "4ac70d46-d02a-444a-9d68-45b75da8572f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460166011,
        "parent_id": "0b1819c8-fc25-45e1-840e-526363a7b5b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example usage",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example usage",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460166011,
        "id": "365bb173-7167-4f90-b4ef-f346ed3b26c8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460166011,
        "parent_id": "0b1819c8-fc25-45e1-840e-526363a7b5b3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class DataService\u003cMODEL_TYPE\u003e {\n     private final DataDao dataDao = new DataDao();\n     private final Class\u003cMODEL_TYPE\u003e type = (Class\u003cMODEL_TYPE\u003e) new TypeToken\u003cMODEL_TYPE\u003e\n                                                                (getClass()){}.getRawType();\n     public List\u003cMODEL_TYPE\u003e getAll() {\n         return dataDao.getAllOfType(type);\n    }\n}\n\n// the subclass definitively binds the parameterization to User\n// for all instances of this class, so that information can be \n// recovered at runtime\npublic class UserService extends DataService\u003cUser\u003e {}\n\npublic class Main {\n    public static void main(String[] args) {\n          UserService service = new UserService();\n          List\u003cUser\u003e users = service.getAll();\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class DataService\u003cMODEL_TYPE\u003e {\n     private final DataDao dataDao = new DataDao();\n     private final Class\u003cMODEL_TYPE\u003e type = (Class\u003cMODEL_TYPE\u003e) new TypeToken\u003cMODEL_TYPE\u003e\n                                                                (getClass()){}.getRawType();\n     public List\u003cMODEL_TYPE\u003e getAll() {\n         return dataDao.getAllOfType(type);\n    }\n}\n\n// the subclass definitively binds the parameterization to User\n// for all instances of this class, so that information can be \n// recovered at runtime\npublic class UserService extends DataService\u003cUser\u003e {}\n\npublic class Main {\n    public static void main(String[] args) {\n          UserService service = new UserService();\n          List\u003cUser\u003e users = service.getAll();\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Obtain class that satisfies generic parameter at runtime",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}