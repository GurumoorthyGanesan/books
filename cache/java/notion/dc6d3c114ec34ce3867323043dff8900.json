{
  "ID": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
  "Root": {
    "alive": true,
    "content": [
      "8b5e7b63-11aa-4e4c-8246-3a0a37482e70",
      "4a9ba471-bd4b-445b-81e9-dc8dfe33babd",
      "4c1ede30-8f57-45ee-886c-65c78110c635",
      "37569004-cbda-45db-8e44-418332b00da6",
      "19cbbfeb-dddb-458b-916b-4331700a1855",
      "3864aa79-6a96-49ea-acbd-c4fb9117a6ac",
      "3c83359d-3954-4f02-8f78-03d75defc819",
      "b02281b6-d7d6-436f-8d46-039fd77d0233",
      "1aabf842-39f9-461d-9175-cfa82e319bfb",
      "fa3e3f46-e329-4a20-bb2d-9d0453a52866",
      "f154df58-5871-496a-98ec-b16a21ea5602",
      "212204de-cb27-4f42-80b9-55fa57ae5be8",
      "80939fd0-4f1e-418d-9726-3ac5a5a94244",
      "4f6c0951-53f9-4b81-aa31-14a0cc37c5bd",
      "68a323e3-b023-4ecc-a82f-b078371e5d78",
      "a0475fd8-8f98-481a-9722-f773b13b22b0",
      "0099cd69-2559-499e-a263-83f77f29f857",
      "5c85a01d-fe8f-4365-85d6-7b81c728a446",
      "7ae2ab6e-4a64-46c4-9043-a80929efe4be",
      "86bf3249-a126-4957-bea9-e003b19dcb27",
      "1fa8e314-c5a5-46cc-acb7-cd63e3b59905",
      "3e53b67b-d1ee-4392-9653-207e9a699084",
      "29f24821-8ec5-4877-be33-5ca6bb086dd3",
      "c22b2819-c07a-45e8-be02-6831d333e0ce",
      "a0e72235-9758-44f8-97e7-035401e2dcd7",
      "75c15448-3d25-4696-a936-300f49620f36",
      "8956d7ec-8405-4f4d-8acf-910c5f38671c",
      "f1e4aac3-7a82-49bc-8d2f-d6e0a4d63134",
      "debdf58e-37c2-442f-8ba2-24539609e0a5",
      "845f2e96-dc8f-4f32-8663-84f72963ddc6",
      "8341cee7-8611-4cb0-878f-f7d2f5b133e9",
      "476feeb1-28ae-4f18-9b61-6b77a6d9efad",
      "36a92fd7-c282-4dc6-aca0-b704f3b77423"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550461539106,
    "id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550461539106,
    "parent_id": "0bf58cac-010f-4b78-ae8d-b08f7e1fc917",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Garbage collection"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539096,
        "id": "8b5e7b63-11aa-4e4c-8246-3a0a37482e70",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539096,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The C++ approach - new and delete"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "The C++ approach - new and delete"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539099,
        "id": "4a9ba471-bd4b-445b-81e9-dc8dfe33babd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539099,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In a language like C++, the application program is responsible for managing the memory used by dynamically allocated memory. When an object is created in the C++ heap using the "
            ],
            [
              "new",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator, there needs to be a corresponding use of the "
            ],
            [
              "delete",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator to dispose of the object:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In a language like C++, the application program is responsible for managing the memory used by dynamically allocated memory. When an object is created in the C++ heap using the "
          },
          {
            "Text": "new",
            "AttrFlags": 2
          },
          {
            "Text": " operator, there needs to be a corresponding use of the "
          },
          {
            "Text": "delete",
            "AttrFlags": 2
          },
          {
            "Text": " operator to dispose of the object:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539100,
        "id": "4c1ede30-8f57-45ee-886c-65c78110c635",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539100,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If program forgets to "
            ],
            [
              "delete",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " an object and just “forgets” about it, the associated memory is lost to the application. The term for this situation is a "
            ],
            [
              "memory leak",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", and it too much memory leaks an application is liable to use more and more memory, and eventually crash."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If program forgets to "
          },
          {
            "Text": "delete",
            "AttrFlags": 2
          },
          {
            "Text": " an object and just “forgets” about it, the associated memory is lost to the application. The term for this situation is a "
          },
          {
            "Text": "memory leak",
            "AttrFlags": 4
          },
          {
            "Text": ", and it too much memory leaks an application is liable to use more and more memory, and eventually crash."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539100,
        "id": "37569004-cbda-45db-8e44-418332b00da6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539100,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "On the other hand, if an application attempts to "
            ],
            [
              "delete",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " the same object twice, or use an object after it has been deleted, then the application is liable to crash due to problems with memory corruption"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "On the other hand, if an application attempts to "
          },
          {
            "Text": "delete",
            "AttrFlags": 2
          },
          {
            "Text": " the same object twice, or use an object after it has been deleted, then the application is liable to crash due to problems with memory corruption"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539100,
        "id": "19cbbfeb-dddb-458b-916b-4331700a1855",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539100,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In a complicated C++ program, implementing memory management using "
            ],
            [
              "new",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "delete",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be time consuming. Indeed, memory management is a common source of bugs."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In a complicated C++ program, implementing memory management using "
          },
          {
            "Text": "new",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "delete",
            "AttrFlags": 2
          },
          {
            "Text": " can be time consuming. Indeed, memory management is a common source of bugs."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539100,
        "id": "3864aa79-6a96-49ea-acbd-c4fb9117a6ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539100,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The Java approach - garbage collection"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "The Java approach - garbage collection"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539101,
        "id": "3c83359d-3954-4f02-8f78-03d75defc819",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539101,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Java takes a different approach. Instead of an explicit "
            ],
            [
              "delete",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator, Java provides an automatic mechanism known as garbage collection to reclaim the memory used by objects that are no longer needed. The Java runtime system takes responsibility for finding the objects to be disposed of. This task is performed by a component called a "
            ],
            [
              "garbage collector",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", or GC for short."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Java takes a different approach. Instead of an explicit "
          },
          {
            "Text": "delete",
            "AttrFlags": 2
          },
          {
            "Text": " operator, Java provides an automatic mechanism known as garbage collection to reclaim the memory used by objects that are no longer needed. The Java runtime system takes responsibility for finding the objects to be disposed of. This task is performed by a component called a "
          },
          {
            "Text": "garbage collector",
            "AttrFlags": 4
          },
          {
            "Text": ", or GC for short."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539101,
        "id": "b02281b6-d7d6-436f-8d46-039fd77d0233",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539101,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "At any time during the execution of a Java program, we can divide the set of all existing objects into two distinct subsets1:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "At any time during the execution of a Java program, we can divide the set of all existing objects into two distinct subsets1:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539101,
        "id": "1aabf842-39f9-461d-9175-cfa82e319bfb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539101,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Reachable objects are defined by the JLS as follows:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Reachable objects are defined by the JLS as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539101,
        "id": "fa3e3f46-e329-4a20-bb2d-9d0453a52866",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539101,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003e A reachable object is any object that can be accessed in any potential continuing computation from any live thread.\n\nIn practice, this means that there is a chain of references starting from an in-scope local variable or a `static` variable by which some code might be able to reach the object."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003e A reachable object is any object that can be accessed in any potential continuing computation from any live thread.\n\nIn practice, this means that there is a chain of references starting from an in-scope local variable or a `static` variable by which some code might be able to reach the object.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539101,
        "id": "f154df58-5871-496a-98ec-b16a21ea5602",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539101,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Unreachable objects are objects that "
            ],
            [
              "cannot possibly",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " be reached as above."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Unreachable objects are objects that "
          },
          {
            "Text": "cannot possibly",
            "AttrFlags": 4
          },
          {
            "Text": " be reached as above."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539101,
        "id": "212204de-cb27-4f42-80b9-55fa57ae5be8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539101,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Any objects that are unreachable are "
            ],
            [
              "eligible",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " for garbage collection. This does not mean that they "
            ],
            [
              "will",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " be garbage collected. In fact:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Any objects that are unreachable are "
          },
          {
            "Text": "eligible",
            "AttrFlags": 4
          },
          {
            "Text": " for garbage collection. This does not mean that they "
          },
          {
            "Text": "will",
            "AttrFlags": 4
          },
          {
            "Text": " be garbage collected. In fact:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539102,
        "id": "80939fd0-4f1e-418d-9726-3ac5a5a94244",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539102,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An unreachable object "
            ],
            [
              "does not",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " get collected immediately on becoming unreachable1."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "An unreachable object "
          },
          {
            "Text": "does not",
            "AttrFlags": 4
          },
          {
            "Text": " get collected immediately on becoming unreachable1."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539102,
        "id": "4f6c0951-53f9-4b81-aa31-14a0cc37c5bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539102,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An unreachable object "
            ],
            [
              "may not ever",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " be garbage collected."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "An unreachable object "
          },
          {
            "Text": "may not ever",
            "AttrFlags": 4
          },
          {
            "Text": " be garbage collected."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539102,
        "id": "68a323e3-b023-4ecc-a82f-b078371e5d78",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539102,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The Java language Specification gives a lot of latitude to a JVM implementation to decide when to collect unreachable objects. It also (in practice) gives permission for a JVM implementation to be conservative in how it detects unreachable objects."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The Java language Specification gives a lot of latitude to a JVM implementation to decide when to collect unreachable objects. It also (in practice) gives permission for a JVM implementation to be conservative in how it detects unreachable objects."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539102,
        "id": "a0475fd8-8f98-481a-9722-f773b13b22b0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539102,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The one thing that the JLS guarantees is that no "
            ],
            [
              "reachable",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " objects will ever be garbage collected."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The one thing that the JLS guarantees is that no "
          },
          {
            "Text": "reachable",
            "AttrFlags": 4
          },
          {
            "Text": " objects will ever be garbage collected."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539102,
        "id": "0099cd69-2559-499e-a263-83f77f29f857",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539102,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "What happens when an object becomes unreachable"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "What happens when an object becomes unreachable"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539103,
        "id": "5c85a01d-fe8f-4365-85d6-7b81c728a446",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539103,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "First of all, nothing specifically happens when an object "
            ],
            [
              "becomes",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " unreachable. Things only happen when the garbage collector runs "
            ],
            [
              "and",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " it detects that the object is unreachable. Furthermore, it is common for a GC run to not detect all unreachable objects."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "First of all, nothing specifically happens when an object "
          },
          {
            "Text": "becomes",
            "AttrFlags": 4
          },
          {
            "Text": " unreachable. Things only happen when the garbage collector runs "
          },
          {
            "Text": "and",
            "AttrFlags": 4
          },
          {
            "Text": " it detects that the object is unreachable. Furthermore, it is common for a GC run to not detect all unreachable objects."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539103,
        "id": "7ae2ab6e-4a64-46c4-9043-a80929efe4be",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539103,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When the GC detects an unreachable object, the following events can occur."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When the GC detects an unreachable object, the following events can occur."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539103,
        "id": "86bf3249-a126-4957-bea9-e003b19dcb27",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539103,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If there are any "
            ],
            [
              "Reference",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " objects that refer to the object, those references will be cleared before the object is deleted."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If there are any "
          },
          {
            "Text": "Reference",
            "AttrFlags": 2
          },
          {
            "Text": " objects that refer to the object, those references will be cleared before the object is deleted."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539103,
        "id": "1fa8e314-c5a5-46cc-acb7-cd63e3b59905",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539103,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the object is "
            ],
            [
              "finalizable",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", then it will be finalized. This happens before the object is deleted."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the object is "
          },
          {
            "Text": "finalizable",
            "AttrFlags": 4
          },
          {
            "Text": ", then it will be finalized. This happens before the object is deleted."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539104,
        "id": "3e53b67b-d1ee-4392-9653-207e9a699084",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539104,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The object can be deleted, and the memory it occupies can be reclaimed."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The object can be deleted, and the memory it occupies can be reclaimed."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539104,
        "id": "29f24821-8ec5-4877-be33-5ca6bb086dd3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539104,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that there is a clear sequence in which the above events "
            ],
            [
              "can",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " occur, but nothing requires the garbage collector to perform the final deletion of any specific object in any specific time-frame."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that there is a clear sequence in which the above events "
          },
          {
            "Text": "can",
            "AttrFlags": 4
          },
          {
            "Text": " occur, but nothing requires the garbage collector to perform the final deletion of any specific object in any specific time-frame."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539104,
        "id": "c22b2819-c07a-45e8-be02-6831d333e0ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539104,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Examples of reachable and unreachable objects"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Examples of reachable and unreachable objects"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539104,
        "id": "a0e72235-9758-44f8-97e7-035401e2dcd7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539104,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consider the following example classes:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consider the following example classes:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539104,
        "id": "75c15448-3d25-4696-a936-300f49620f36",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539104,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// A node in simple \"open\" linked-list.\npublic class Node {\n    private static int counter = 0;\n\n    public int nodeNumber = ++counter;\n    public Node next;\n}\n\npublic class ListTest {\n    public static void main(String[] args) {\n        test();                    // M1\n        System.out.prinln(\"Done\"); // M2\n    }\n    \n    private static void test() {\n        Node n1 = new Node();      // T1\n        Node n2 = new Node();      // T2\n        Node n3 = new Node();      // T3\n        n1.next = n2;              // T4\n        n2 = null;                 // T5\n        n3 = null;                 // T6\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// A node in simple \"open\" linked-list.\npublic class Node {\n    private static int counter = 0;\n\n    public int nodeNumber = ++counter;\n    public Node next;\n}\n\npublic class ListTest {\n    public static void main(String[] args) {\n        test();                    // M1\n        System.out.prinln(\"Done\"); // M2\n    }\n    \n    private static void test() {\n        Node n1 = new Node();      // T1\n        Node n2 = new Node();      // T2\n        Node n3 = new Node();      // T3\n        n1.next = n2;              // T4\n        n2 = null;                 // T5\n        n3 = null;                 // T6\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539104,
        "id": "8956d7ec-8405-4f4d-8acf-910c5f38671c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539104,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let us examine what happens when "
            ],
            [
              "test()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is called. Statements T1, T2 and T3 create "
            ],
            [
              "Node",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " objects, and the objects are all reachable via the "
            ],
            [
              "n1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "n2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "n3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variables respectively. Statement T4 assigns the reference to the 2nd "
            ],
            [
              "Node",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object to the "
            ],
            [
              "next",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " field of the first one. When that is done, the 2nd "
            ],
            [
              "Node",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is reachable via two paths:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let us examine what happens when "
          },
          {
            "Text": "test()",
            "AttrFlags": 2
          },
          {
            "Text": " is called. Statements T1, T2 and T3 create "
          },
          {
            "Text": "Node",
            "AttrFlags": 2
          },
          {
            "Text": " objects, and the objects are all reachable via the "
          },
          {
            "Text": "n1",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "n2",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "n3",
            "AttrFlags": 2
          },
          {
            "Text": " variables respectively. Statement T4 assigns the reference to the 2nd "
          },
          {
            "Text": "Node",
            "AttrFlags": 2
          },
          {
            "Text": " object to the "
          },
          {
            "Text": "next",
            "AttrFlags": 2
          },
          {
            "Text": " field of the first one. When that is done, the 2nd "
          },
          {
            "Text": "Node",
            "AttrFlags": 2
          },
          {
            "Text": " is reachable via two paths:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539104,
        "id": "f1e4aac3-7a82-49bc-8d2f-d6e0a4d63134",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539104,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "n2 -\u003e Node2\nn1 -\u003e Node1, Node1.next -\u003e Node2"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "n2 -\u003e Node2\nn1 -\u003e Node1, Node1.next -\u003e Node2",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539105,
        "id": "debdf58e-37c2-442f-8ba2-24539609e0a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539105,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In statement T5, we assign "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "n2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This breaks the first of the reachability chains for "
            ],
            [
              "Node2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", but the second one remains unbroken, so "
            ],
            [
              "Node2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is still reachable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In statement T5, we assign "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": " to "
          },
          {
            "Text": "n2",
            "AttrFlags": 2
          },
          {
            "Text": ". This breaks the first of the reachability chains for "
          },
          {
            "Text": "Node2",
            "AttrFlags": 2
          },
          {
            "Text": ", but the second one remains unbroken, so "
          },
          {
            "Text": "Node2",
            "AttrFlags": 2
          },
          {
            "Text": " is still reachable."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539105,
        "id": "845f2e96-dc8f-4f32-8663-84f72963ddc6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539105,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In statement T6, we assign "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "n3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This breaks the only reachability chain for "
            ],
            [
              "Node3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which makes "
            ],
            [
              "Node3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " unreachable. However, "
            ],
            [
              "Node1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Node2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are both still reachable via the "
            ],
            [
              "n1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In statement T6, we assign "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": " to "
          },
          {
            "Text": "n3",
            "AttrFlags": 2
          },
          {
            "Text": ". This breaks the only reachability chain for "
          },
          {
            "Text": "Node3",
            "AttrFlags": 2
          },
          {
            "Text": ", which makes "
          },
          {
            "Text": "Node3",
            "AttrFlags": 2
          },
          {
            "Text": " unreachable. However, "
          },
          {
            "Text": "Node1",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Node2",
            "AttrFlags": 2
          },
          {
            "Text": " are both still reachable via the "
          },
          {
            "Text": "n1",
            "AttrFlags": 2
          },
          {
            "Text": " variable."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539105,
        "id": "8341cee7-8611-4cb0-878f-f7d2f5b133e9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539105,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finally, when the "
            ],
            [
              "test()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method returns, its local variables "
            ],
            [
              "n1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "n2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "n3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " go out of scope, and therefore cannot be accessed by anything. This breaks the remaining reachability chains for "
            ],
            [
              "Node1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Node2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and all of the "
            ],
            [
              "Node",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " objects are nor unreachable and "
            ],
            [
              "eligible",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " for garbage collection."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finally, when the "
          },
          {
            "Text": "test()",
            "AttrFlags": 2
          },
          {
            "Text": " method returns, its local variables "
          },
          {
            "Text": "n1",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "n2",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "n3",
            "AttrFlags": 2
          },
          {
            "Text": " go out of scope, and therefore cannot be accessed by anything. This breaks the remaining reachability chains for "
          },
          {
            "Text": "Node1",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Node2",
            "AttrFlags": 2
          },
          {
            "Text": ", and all of the "
          },
          {
            "Text": "Node",
            "AttrFlags": 2
          },
          {
            "Text": " objects are nor unreachable and "
          },
          {
            "Text": "eligible",
            "AttrFlags": 4
          },
          {
            "Text": " for garbage collection."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539106,
        "id": "476feeb1-28ae-4f18-9b61-6b77a6d9efad",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539106,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461539106,
        "id": "36a92fd7-c282-4dc6-aca0-b704f3b77423",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461539106,
        "parent_id": "dc6d3c11-4ec3-4ce3-8673-23043dff8900",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "1 - This is a simplification that ignores finalization, and "
            ],
            [
              "Reference",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " classes. 2 - Hypothetically, a Java implementation could do this, but the performance cost of doing this makes it impractical."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "1 - This is a simplification that ignores finalization, and "
          },
          {
            "Text": "Reference",
            "AttrFlags": 2
          },
          {
            "Text": " classes. 2 - Hypothetically, a Java implementation could do this, but the performance cost of doing this makes it impractical."
          }
        ]
      }
    ],
    "title": "020 Garbage collection"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}