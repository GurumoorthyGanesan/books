{
  "ID": "81d74413-527c-4d14-8b50-13a493449fd8",
  "Root": {
    "alive": true,
    "content": [
      "46c1aa75-c21a-4b87-91e8-d139953eb742",
      "4b84c1e1-0a4d-4be6-966e-f968373a78e1",
      "898c0299-4b60-419c-8c9e-a9a3f0c28c44",
      "3b3d938f-bb26-451f-817f-882eaa5171ed",
      "9b6e5f04-3013-4a93-b247-8bef4334c50f",
      "2ea1b734-f0ac-4eb2-9c51-387d5fc09ce1",
      "3e3a675b-c83f-4daa-81e2-8c74a4321544",
      "f657c933-b163-4d17-a4ed-bb555f457a38"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460124543,
    "id": "81d74413-527c-4d14-8b50-13a493449fd8",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460124543,
    "parent_id": "3e5f6441-fbb7-4864-8927-1c1c812bd8c7",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "260 Generating random Strings using Streams"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460124541,
        "id": "46c1aa75-c21a-4b87-91e8-d139953eb742",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460124541,
        "parent_id": "81d74413-527c-4d14-8b50-13a493449fd8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is sometimes useful to create random "
            ],
            [
              "Strings",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", maybe as Session-ID for a web-service or an initial password after registration for an application. This can be easily achieved using "
            ],
            [
              "Stream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is sometimes useful to create random "
          },
          {
            "Text": "Strings",
            "AttrFlags": 2
          },
          {
            "Text": ", maybe as Session-ID for a web-service or an initial password after registration for an application. This can be easily achieved using "
          },
          {
            "Text": "Stream",
            "AttrFlags": 2
          },
          {
            "Text": "s."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460124542,
        "id": "4b84c1e1-0a4d-4be6-966e-f968373a78e1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460124542,
        "parent_id": "81d74413-527c-4d14-8b50-13a493449fd8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "First we need to initialize a random number generator. To enhance security for the generated "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s, it is a good idea to use "
            ],
            [
              "SecureRandom",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "First we need to initialize a random number generator. To enhance security for the generated "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": "s, it is a good idea to use "
          },
          {
            "Text": "SecureRandom",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460124542,
        "id": "898c0299-4b60-419c-8c9e-a9a3f0c28c44",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460124542,
        "parent_id": "81d74413-527c-4d14-8b50-13a493449fd8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": Creating a "
            ],
            [
              "SecureRandom",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is quite expensive, so it is best practice to only do this once and call one of its "
            ],
            [
              "setSeed()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " methods from time to time to reseed it."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note",
            "AttrFlags": 1
          },
          {
            "Text": ": Creating a "
          },
          {
            "Text": "SecureRandom",
            "AttrFlags": 2
          },
          {
            "Text": " is quite expensive, so it is best practice to only do this once and call one of its "
          },
          {
            "Text": "setSeed()",
            "AttrFlags": 2
          },
          {
            "Text": " methods from time to time to reseed it."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460124542,
        "id": "3b3d938f-bb26-451f-817f-882eaa5171ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460124542,
        "parent_id": "81d74413-527c-4d14-8b50-13a493449fd8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "private static final SecureRandom rng = new SecureRandom(SecureRandom.generateSeed(20)); \n//20 Bytes as a seed is rather arbitrary, it is the number used in the JavaDoc example"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "private static final SecureRandom rng = new SecureRandom(SecureRandom.generateSeed(20)); \n//20 Bytes as a seed is rather arbitrary, it is the number used in the JavaDoc example",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460124542,
        "id": "9b6e5f04-3013-4a93-b247-8bef4334c50f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460124542,
        "parent_id": "81d74413-527c-4d14-8b50-13a493449fd8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When creating random "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s, we usually want them to use only certain characters (e.g. only letters and digits). Therefore we can create a method returning a "
            ],
            [
              "boolean",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which can later be used to filter the "
            ],
            [
              "Stream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When creating random "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": "s, we usually want them to use only certain characters (e.g. only letters and digits). Therefore we can create a method returning a "
          },
          {
            "Text": "boolean",
            "AttrFlags": 2
          },
          {
            "Text": " which can later be used to filter the "
          },
          {
            "Text": "Stream",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460124542,
        "id": "2ea1b734-f0ac-4eb2-9c51-387d5fc09ce1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460124542,
        "parent_id": "81d74413-527c-4d14-8b50-13a493449fd8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//returns true for all chars in 0-9, a-z and A-Z\nboolean useThisCharacter(char c){\n    //check for range to avoid using all unicode Letter (e.g. some chinese symbols)\n    return c \u003e= '0' \u0026\u0026 c \u003c= 'z' \u0026\u0026 Character.isLetterOrDigit(c);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//returns true for all chars in 0-9, a-z and A-Z\nboolean useThisCharacter(char c){\n    //check for range to avoid using all unicode Letter (e.g. some chinese symbols)\n    return c \u003e= '0' \u0026\u0026 c \u003c= 'z' \u0026\u0026 Character.isLetterOrDigit(c);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460124543,
        "id": "3e3a675b-c83f-4daa-81e2-8c74a4321544",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460124543,
        "parent_id": "81d74413-527c-4d14-8b50-13a493449fd8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Next we can utilize the RNG to generate a random String of specific length containing the charset which pass our "
            ],
            [
              "useThisCharacter",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " check."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Next we can utilize the RNG to generate a random String of specific length containing the charset which pass our "
          },
          {
            "Text": "useThisCharacter",
            "AttrFlags": 2
          },
          {
            "Text": " check."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460124543,
        "id": "f657c933-b163-4d17-a4ed-bb555f457a38",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460124543,
        "parent_id": "81d74413-527c-4d14-8b50-13a493449fd8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public String generateRandomString(long length){\n    //Since there is no native CharStream, we use an IntStream instead\n    //and convert it to a Stream\u003cCharacter\u003e using mapToObj.\n    //We need to specify the boundaries for the int values to ensure they can safely be cast to char\n    Stream\u003cCharacter\u003e randomCharStream = rng.ints(Character.MIN_CODE_POINT, Character.MAX_CODE_POINT).mapToObj(i -\u003e (char)i).filter(c -\u003e this::useThisCharacter).limit(length);\n\n    //now we can use this Stream to build a String utilizing the collect method.\n    String randomString = randomCharStream.collect(StringBuilder::new, StringBuilder::append, StringBuilder::append).toString();\n    return randomString;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public String generateRandomString(long length){\n    //Since there is no native CharStream, we use an IntStream instead\n    //and convert it to a Stream\u003cCharacter\u003e using mapToObj.\n    //We need to specify the boundaries for the int values to ensure they can safely be cast to char\n    Stream\u003cCharacter\u003e randomCharStream = rng.ints(Character.MIN_CODE_POINT, Character.MAX_CODE_POINT).mapToObj(i -\u003e (char)i).filter(c -\u003e this::useThisCharacter).limit(length);\n\n    //now we can use this Stream to build a String utilizing the collect method.\n    String randomString = randomCharStream.collect(StringBuilder::new, StringBuilder::append, StringBuilder::append).toString();\n    return randomString;\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "260 Generating random Strings using Streams"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}