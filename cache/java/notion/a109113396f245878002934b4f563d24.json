{
  "ID": "a1091133-96f2-4587-8002-934b4f563d24",
  "Root": {
    "alive": true,
    "content": [
      "8e8dfa0c-7871-4f7a-ab63-032d40a677f6",
      "11edca31-cddb-488c-9e54-d4c77bf6791a",
      "6c9167bc-e99b-4f87-9b08-6d3651977d43",
      "40957134-7b55-4f9c-836b-c5d28da3b55c",
      "16d9ab3b-98ad-4cb7-a33d-d7aa8f1a2203",
      "9cd97b12-e07f-4c58-8adc-7da47267a5a8",
      "921af202-c1fb-4a9d-9f89-d7d533649abc",
      "f0d35f9f-9b70-4b35-b061-8da8413faca2",
      "c0a65e84-e8bc-44c5-831b-90ec4b922898",
      "1469819c-fc0f-4522-89a6-ec181c536c35",
      "248403cf-b25b-4d4e-b14b-ce35217e5186",
      "7522a44f-036a-4311-be6c-66c0c56ded9f",
      "a968ff4b-b402-4005-a960-6ef3d85abeaa"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460154283,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "a1091133-96f2-4587-8002-934b4f563d24",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551754655943,
    "parent_id": "b352327f-4045-48dc-891e-ceda03965ca0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "return only returns from the lambda not the outer method"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460154280,
        "id": "8e8dfa0c-7871-4f7a-ab63-032d40a677f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460154280,
        "parent_id": "a1091133-96f2-4587-8002-934b4f563d24",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "return",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method only returns from the lambda, not the outer method."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "return",
            "AttrFlags": 2
          },
          {
            "Text": " method only returns from the lambda, not the outer method."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460154281,
        "id": "11edca31-cddb-488c-9e54-d4c77bf6791a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460154281,
        "parent_id": "a1091133-96f2-4587-8002-934b4f563d24",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Beware that this is "
            ],
            [
              "different",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " from Scala and Kotlin!"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Beware that this is "
          },
          {
            "Text": "different",
            "AttrFlags": 4
          },
          {
            "Text": " from Scala and Kotlin!"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460154281,
        "id": "6c9167bc-e99b-4f87-9b08-6d3651977d43",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460154281,
        "parent_id": "a1091133-96f2-4587-8002-934b4f563d24",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void threeTimes(IntConsumer r) {\n  for (int i = 0; i \u003c 3; i++) {\n    r.accept(i);\n  }\n}\n\nvoid demo() {\n  threeTimes(i -\u003e {\n    System.out.println(i);\n    return; // Return from lambda to threeTimes only!\n  });\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void threeTimes(IntConsumer r) {\n  for (int i = 0; i \u003c 3; i++) {\n    r.accept(i);\n  }\n}\n\nvoid demo() {\n  threeTimes(i -\u003e {\n    System.out.println(i);\n    return; // Return from lambda to threeTimes only!\n  });\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460154281,
        "id": "40957134-7b55-4f9c-836b-c5d28da3b55c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460154281,
        "parent_id": "a1091133-96f2-4587-8002-934b4f563d24",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This can lead to unexpected behavior when attempting to write own language constructs, as in builtin constructs such as "
            ],
            [
              "for",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " loops "
            ],
            [
              "return",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " behaves differently:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This can lead to unexpected behavior when attempting to write own language constructs, as in builtin constructs such as "
          },
          {
            "Text": "for",
            "AttrFlags": 2
          },
          {
            "Text": " loops "
          },
          {
            "Text": "return",
            "AttrFlags": 2
          },
          {
            "Text": " behaves differently:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460154281,
        "id": "16d9ab3b-98ad-4cb7-a33d-d7aa8f1a2203",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460154281,
        "parent_id": "a1091133-96f2-4587-8002-934b4f563d24",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void demo2() {\n  for (int i = 0; i \u003c 3; i++) {\n    System.out.println(i);\n    return; // Return from 'demo2' entirely\n  }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void demo2() {\n  for (int i = 0; i \u003c 3; i++) {\n    System.out.println(i);\n    return; // Return from 'demo2' entirely\n  }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460154282,
        "id": "9cd97b12-e07f-4c58-8adc-7da47267a5a8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460154282,
        "parent_id": "a1091133-96f2-4587-8002-934b4f563d24",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Scala and Kotlin, "
            ],
            [
              "demo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "demo2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " would both only print "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". But this is "
            ],
            [
              "not",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " more consistent. The Java approach is consistent with refactoring and the use of classes - the "
            ],
            [
              "return",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the code at the top, and the code below behaves the same:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Scala and Kotlin, "
          },
          {
            "Text": "demo",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "demo2",
            "AttrFlags": 2
          },
          {
            "Text": " would both only print "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": ". But this is "
          },
          {
            "Text": "not",
            "AttrFlags": 4
          },
          {
            "Text": " more consistent. The Java approach is consistent with refactoring and the use of classes - the "
          },
          {
            "Text": "return",
            "AttrFlags": 2
          },
          {
            "Text": " in the code at the top, and the code below behaves the same:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460154282,
        "id": "921af202-c1fb-4a9d-9f89-d7d533649abc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460154282,
        "parent_id": "a1091133-96f2-4587-8002-934b4f563d24",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void demo3() {\n  threeTimes(new MyIntConsumer());\n}\n\nclass MyIntConsumer implements IntConsumer {\n  public void accept(int i) {\n    System.out.println(i);\n    return;\n  }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void demo3() {\n  threeTimes(new MyIntConsumer());\n}\n\nclass MyIntConsumer implements IntConsumer {\n  public void accept(int i) {\n    System.out.println(i);\n    return;\n  }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460154282,
        "id": "f0d35f9f-9b70-4b35-b061-8da8413faca2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460154282,
        "parent_id": "a1091133-96f2-4587-8002-934b4f563d24",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Therefore, the Java "
            ],
            [
              "return",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is more consistent with class methods and refactoring, but less with the "
            ],
            [
              "for",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "while",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " builtins, these remain special."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Therefore, the Java "
          },
          {
            "Text": "return",
            "AttrFlags": 2
          },
          {
            "Text": " is more consistent with class methods and refactoring, but less with the "
          },
          {
            "Text": "for",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "while",
            "AttrFlags": 2
          },
          {
            "Text": " builtins, these remain special."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460154282,
        "id": "c0a65e84-e8bc-44c5-831b-90ec4b922898",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460154282,
        "parent_id": "a1091133-96f2-4587-8002-934b4f563d24",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Because of this, the following two are equivalent in Java:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Because of this, the following two are equivalent in Java:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460154282,
        "id": "1469819c-fc0f-4522-89a6-ec181c536c35",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460154282,
        "parent_id": "a1091133-96f2-4587-8002-934b4f563d24",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "IntStream.range(1, 4)\n    .map(x -\u003e x * x)\n    .forEach(System.out::println);\nIntStream.range(1, 4)\n    .map(x -\u003e { return x * x; })\n    .forEach(System.out::println);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "IntStream.range(1, 4)\n    .map(x -\u003e x * x)\n    .forEach(System.out::println);\nIntStream.range(1, 4)\n    .map(x -\u003e { return x * x; })\n    .forEach(System.out::println);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460154282,
        "id": "248403cf-b25b-4d4e-b14b-ce35217e5186",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460154282,
        "parent_id": "a1091133-96f2-4587-8002-934b4f563d24",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Furthermore, the use of try-with-resources is safe in Java:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Furthermore, the use of try-with-resources is safe in Java:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460154282,
        "id": "7522a44f-036a-4311-be6c-66c0c56ded9f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460154282,
        "parent_id": "a1091133-96f2-4587-8002-934b4f563d24",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Resource implements AutoCloseable {\n  public void close() { System.out.println(\"close()\"); }\n}\n\nvoid executeAround(Consumer\u003cResource\u003e f) {\n  try (Resource r = new Resource()) {\n    System.out.print(\"before \");\n    f.accept(r);\n    System.out.print(\"after \");\n  }\n}\n\nvoid demo4() {\n  executeAround(r -\u003e {\n    System.out.print(\"accept() \");\n    return; // Does not return from demo4, but frees the resource.\n  });\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Resource implements AutoCloseable {\n  public void close() { System.out.println(\"close()\"); }\n}\n\nvoid executeAround(Consumer\u003cResource\u003e f) {\n  try (Resource r = new Resource()) {\n    System.out.print(\"before \");\n    f.accept(r);\n    System.out.print(\"after \");\n  }\n}\n\nvoid demo4() {\n  executeAround(r -\u003e {\n    System.out.print(\"accept() \");\n    return; // Does not return from demo4, but frees the resource.\n  });\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460154282,
        "id": "a968ff4b-b402-4005-a960-6ef3d85abeaa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460154282,
        "parent_id": "a1091133-96f2-4587-8002-934b4f563d24",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "will print "
            ],
            [
              "before accept() after close()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". In the Scala and Kotlin semantics, the try-with-resources would not be closed, but it would print "
            ],
            [
              "before accept()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " only."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "will print "
          },
          {
            "Text": "before accept() after close()",
            "AttrFlags": 2
          },
          {
            "Text": ". In the Scala and Kotlin semantics, the try-with-resources would not be closed, but it would print "
          },
          {
            "Text": "before accept()",
            "AttrFlags": 2
          },
          {
            "Text": " only."
          }
        ]
      }
    ],
    "title": "return only returns from the lambda not the outer method",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}