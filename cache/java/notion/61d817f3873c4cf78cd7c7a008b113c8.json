{
  "ID": "61d817f3-873c-4cf7-8cd7-c7a008b113c8",
  "Root": {
    "alive": true,
    "content": [
      "f6f9c1bb-ec31-400c-aab1-cbc5b5eeccd4",
      "aeb2d9b9-aa6e-437d-8359-9c5e26049e39",
      "a6e02c23-8a04-4aad-bcc4-efdc4c70feb2",
      "870b9e5c-3ece-4c29-b90f-3a1a95b3c8a7",
      "b76fd0e7-5fb2-4917-a7b6-b9d2509075b5",
      "ef20ead5-102d-4f29-b8d5-e1bd668b10a1",
      "e337d178-fa69-4ab6-9a34-6b45a96eea83",
      "7ff3f17d-a1b5-497a-b469-01e0668c9429",
      "b1c6e795-1138-486f-9719-055475145b1f",
      "10a806f9-e189-42a0-a1fa-c529b448686c",
      "c2417fba-bcc9-4ad3-bbfc-6fd6e292ae35",
      "be532a7a-e462-4adc-8663-07af705c5437",
      "601af677-1fcb-4e91-8a08-46cf655c8740",
      "242d86ff-c47d-4039-b2ee-825645936975",
      "0cc14d75-9648-40ae-85cb-311f1752c335",
      "54d5d58c-1a51-4f20-bd6e-856417446c92"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460810025,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "61d817f3-873c-4cf7-8cd7-c7a008b113c8",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551744506569,
    "parent_id": "6c6c87a4-551e-4cdd-b523-66ee2c5d11cb",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "The conditional-and and conditional-or Operators and"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460810018,
        "id": "f6f9c1bb-ec31-400c-aab1-cbc5b5eeccd4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460810018,
        "parent_id": "61d817f3-873c-4cf7-8cd7-c7a008b113c8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Java provides a conditional-and and a conditional-or operator, that both take one or two operands of type "
            ],
            [
              "boolean",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and produce a "
            ],
            [
              "boolean",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " result. These are:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Java provides a conditional-and and a conditional-or operator, that both take one or two operands of type "
          },
          {
            "Text": "boolean",
            "AttrFlags": 2
          },
          {
            "Text": " and produce a "
          },
          {
            "Text": "boolean",
            "AttrFlags": 2
          },
          {
            "Text": " result. These are:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460810022,
        "id": "aeb2d9b9-aa6e-437d-8359-9c5e26049e39",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460810022,
        "parent_id": "61d817f3-873c-4cf7-8cd7-c7a008b113c8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "\u0026\u0026",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " - the conditional-AND operator,"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "\u0026\u0026",
            "AttrFlags": 2
          },
          {
            "Text": " - the conditional-AND operator,"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460810022,
        "id": "a6e02c23-8a04-4aad-bcc4-efdc4c70feb2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460810022,
        "parent_id": "61d817f3-873c-4cf7-8cd7-c7a008b113c8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "||",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " - the conditional-OR operators. The evaluation of "
            ],
            [
              "\u003cleft-expr\u003e \u0026\u0026 \u003cright-expr\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is equivalent to the following pseudo-code:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "||",
            "AttrFlags": 2
          },
          {
            "Text": " - the conditional-OR operators. The evaluation of "
          },
          {
            "Text": "\u003cleft-expr\u003e \u0026\u0026 \u003cright-expr\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " is equivalent to the following pseudo-code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460810022,
        "id": "870b9e5c-3ece-4c29-b90f-3a1a95b3c8a7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460810022,
        "parent_id": "61d817f3-873c-4cf7-8cd7-c7a008b113c8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "{\n       boolean L = evaluate(\u003cleft-expr\u003e);\n       if (L) {\n           return evaluate(\u003cright-expr\u003e);\n       } else {\n           // short-circuit the evaluation of the 2nd operand expression\n           return false;\n       }\n    }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "{\n       boolean L = evaluate(\u003cleft-expr\u003e);\n       if (L) {\n           return evaluate(\u003cright-expr\u003e);\n       } else {\n           // short-circuit the evaluation of the 2nd operand expression\n           return false;\n       }\n    }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460810022,
        "id": "b76fd0e7-5fb2-4917-a7b6-b9d2509075b5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460810022,
        "parent_id": "61d817f3-873c-4cf7-8cd7-c7a008b113c8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The evaluation of "
            ],
            [
              "\u003cleft-expr\u003e || \u003cright-expr\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is equivalent to the following pseudo-code:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The evaluation of "
          },
          {
            "Text": "\u003cleft-expr\u003e || \u003cright-expr\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " is equivalent to the following pseudo-code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460810022,
        "id": "ef20ead5-102d-4f29-b8d5-e1bd668b10a1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460810022,
        "parent_id": "61d817f3-873c-4cf7-8cd7-c7a008b113c8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "{\n       boolean L = evaluate(\u003cleft-expr\u003e);\n       if (!L) {\n           return evaluate(\u003cright-expr\u003e);\n       } else {\n           // short-circuit the evaluation of the 2nd operand expression\n           return true;\n       }\n    }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "{\n       boolean L = evaluate(\u003cleft-expr\u003e);\n       if (!L) {\n           return evaluate(\u003cright-expr\u003e);\n       } else {\n           // short-circuit the evaluation of the 2nd operand expression\n           return true;\n       }\n    }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460810023,
        "id": "e337d178-fa69-4ab6-9a34-6b45a96eea83",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460810023,
        "parent_id": "61d817f3-873c-4cf7-8cd7-c7a008b113c8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As the pseudo-code above illustrates, the behavior of the short-circuit operators are equivalent to using "
            ],
            [
              "if",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " / "
            ],
            [
              "else",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statements."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As the pseudo-code above illustrates, the behavior of the short-circuit operators are equivalent to using "
          },
          {
            "Text": "if",
            "AttrFlags": 2
          },
          {
            "Text": " / "
          },
          {
            "Text": "else",
            "AttrFlags": 2
          },
          {
            "Text": " statements."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460810023,
        "id": "7ff3f17d-a1b5-497a-b469-01e0668c9429",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460810023,
        "parent_id": "61d817f3-873c-4cf7-8cd7-c7a008b113c8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example - using \u0026\u0026 as a guard in an expression"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example - using \u0026\u0026 as a guard in an expression"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460810023,
        "id": "b1c6e795-1138-486f-9719-055475145b1f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460810023,
        "parent_id": "61d817f3-873c-4cf7-8cd7-c7a008b113c8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following example shows the most common usage pattern for the "
            ],
            [
              "\u0026\u0026",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator. Compare these two versions of a method to test if a supplied "
            ],
            [
              "Integer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is zero."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following example shows the most common usage pattern for the "
          },
          {
            "Text": "\u0026\u0026",
            "AttrFlags": 2
          },
          {
            "Text": " operator. Compare these two versions of a method to test if a supplied "
          },
          {
            "Text": "Integer",
            "AttrFlags": 2
          },
          {
            "Text": " is zero."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460810023,
        "id": "10a806f9-e189-42a0-a1fa-c529b448686c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460810023,
        "parent_id": "61d817f3-873c-4cf7-8cd7-c7a008b113c8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public boolean isZero(Integer value) {\n    return value == 0;\n}\n\npublic boolean isZero(Integer value) {\n    return value != null \u0026\u0026 value == 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public boolean isZero(Integer value) {\n    return value == 0;\n}\n\npublic boolean isZero(Integer value) {\n    return value != null \u0026\u0026 value == 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460810023,
        "id": "c2417fba-bcc9-4ad3-bbfc-6fd6e292ae35",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460810023,
        "parent_id": "61d817f3-873c-4cf7-8cd7-c7a008b113c8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The first version works in most cases, but if the "
            ],
            [
              "value",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " argument is "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", then a "
            ],
            [
              "NullPointerException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be thrown."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The first version works in most cases, but if the "
          },
          {
            "Text": "value",
            "AttrFlags": 2
          },
          {
            "Text": " argument is "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": ", then a "
          },
          {
            "Text": "NullPointerException",
            "AttrFlags": 2
          },
          {
            "Text": " will be thrown."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460810024,
        "id": "be532a7a-e462-4adc-8663-07af705c5437",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460810024,
        "parent_id": "61d817f3-873c-4cf7-8cd7-c7a008b113c8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the second version we have added a “guard” test. The "
            ],
            [
              "value != null \u0026\u0026 value == 0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " expression is evaluated by first performing the "
            ],
            [
              "value != null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " test. If the "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " test succeeds (i.e. it evaluates to "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") then the "
            ],
            [
              "value == 0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " expression is evaluated. If the "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " test fails, then the evaluation of "
            ],
            [
              "value == 0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is skipped (short-circuited), and we "
            ],
            [
              "don’t",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " get a "
            ],
            [
              "NullPointerException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the second version we have added a “guard” test. The "
          },
          {
            "Text": "value != null \u0026\u0026 value == 0",
            "AttrFlags": 2
          },
          {
            "Text": " expression is evaluated by first performing the "
          },
          {
            "Text": "value != null",
            "AttrFlags": 2
          },
          {
            "Text": " test. If the "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": " test succeeds (i.e. it evaluates to "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": ") then the "
          },
          {
            "Text": "value == 0",
            "AttrFlags": 2
          },
          {
            "Text": " expression is evaluated. If the "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": " test fails, then the evaluation of "
          },
          {
            "Text": "value == 0",
            "AttrFlags": 2
          },
          {
            "Text": " is skipped (short-circuited), and we "
          },
          {
            "Text": "don’t",
            "AttrFlags": 4
          },
          {
            "Text": " get a "
          },
          {
            "Text": "NullPointerException",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460810024,
        "id": "601af677-1fcb-4e91-8a08-46cf655c8740",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460810024,
        "parent_id": "61d817f3-873c-4cf7-8cd7-c7a008b113c8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example - using \u0026\u0026 to avoid a costly calculation"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example - using \u0026\u0026 to avoid a costly calculation"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460810025,
        "id": "242d86ff-c47d-4039-b2ee-825645936975",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460810025,
        "parent_id": "61d817f3-873c-4cf7-8cd7-c7a008b113c8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following example shows how "
            ],
            [
              "\u0026\u0026",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be used to avoid a relatively costly calculation:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following example shows how "
          },
          {
            "Text": "\u0026\u0026",
            "AttrFlags": 2
          },
          {
            "Text": " can be used to avoid a relatively costly calculation:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460810025,
        "id": "0cc14d75-9648-40ae-85cb-311f1752c335",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460810025,
        "parent_id": "61d817f3-873c-4cf7-8cd7-c7a008b113c8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public boolean verify(int value, boolean needPrime) {\n    return !needPrime | isPrime(value);\n}\n\npublic boolean verify(int value, boolean needPrime) {\n    return !needPrime || isPrime(value);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public boolean verify(int value, boolean needPrime) {\n    return !needPrime | isPrime(value);\n}\n\npublic boolean verify(int value, boolean needPrime) {\n    return !needPrime || isPrime(value);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460810025,
        "id": "54d5d58c-1a51-4f20-bd6e-856417446c92",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460810025,
        "parent_id": "61d817f3-873c-4cf7-8cd7-c7a008b113c8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the first version, both operands of the "
            ],
            [
              "|",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will always be evaluated, so the (expensive) "
            ],
            [
              "isPrime",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method will be called unnecessarily. The second version avoids the unnecessary call by using "
            ],
            [
              "||",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instead of "
            ],
            [
              "|",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the first version, both operands of the "
          },
          {
            "Text": "|",
            "AttrFlags": 2
          },
          {
            "Text": " will always be evaluated, so the (expensive) "
          },
          {
            "Text": "isPrime",
            "AttrFlags": 2
          },
          {
            "Text": " method will be called unnecessarily. The second version avoids the unnecessary call by using "
          },
          {
            "Text": "||",
            "AttrFlags": 2
          },
          {
            "Text": " instead of "
          },
          {
            "Text": "|",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "The conditional-and and conditional-or Operators and",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}