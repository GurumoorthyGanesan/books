{
  "ID": "c66ae660-3755-4fd3-bf26-c7dbc679b1f1",
  "Root": {
    "alive": true,
    "content": [
      "d8af518c-7f6a-46ef-9a9c-1654992bb376",
      "afd58391-74c1-43cc-a0d6-a8e6b7c4f11f",
      "591a39da-e0a8-48a7-964d-196d1a341988",
      "8bfda365-98e2-4904-a5fe-7b7b0cd9b60b",
      "8e5e74c9-9da7-4d7e-a5a8-0283578472f8",
      "25212709-3b43-42bc-be1b-6a00d5b48b94",
      "62aefb45-0373-4959-a7a6-0410a5c91f19",
      "1fe67354-88be-4c0d-b577-fa978d25472e",
      "8269fff3-d86b-49fe-9786-76baec6462d6",
      "c44f742b-ee36-4ee6-a52e-3c8d3cbfbd57",
      "f37d7cc1-3503-4aa7-bb9e-f1e197ae89c6",
      "01e865e0-3b60-4fdc-a099-eb750f36725a",
      "8bd0bda6-788e-43f4-8291-0bead0c54554",
      "bf5b65eb-f45d-4892-9b65-9ad68fca0de4",
      "84115556-275a-463e-b3be-ad25f9244b12"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550519528573,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c66ae660-3755-4fd3-bf26-c7dbc679b1f1",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551758025597,
    "parent_id": "1f0e916b-e994-4a2f-91b1-8a6715f5100b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "String literals"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519528565,
        "id": "d8af518c-7f6a-46ef-9a9c-1654992bb376",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519528565,
        "parent_id": "c66ae660-3755-4fd3-bf26-c7dbc679b1f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "String literals provide the most convenient way to represent string values in Java source code. A String literal consists of:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "String literals provide the most convenient way to represent string values in Java source code. A String literal consists of:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519528568,
        "id": "afd58391-74c1-43cc-a0d6-a8e6b7c4f11f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519528568,
        "parent_id": "c66ae660-3755-4fd3-bf26-c7dbc679b1f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An opening double-quote ("
            ],
            [
              "\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") character."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "An opening double-quote ("
          },
          {
            "Text": "\"",
            "AttrFlags": 2
          },
          {
            "Text": ") character."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519528570,
        "id": "591a39da-e0a8-48a7-964d-196d1a341988",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519528570,
        "parent_id": "c66ae660-3755-4fd3-bf26-c7dbc679b1f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Zero or more other characters that are neither a double-quote or a line-break character. (A backslash ("
            ],
            [
              "\\\\",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") character alters the meaning of subsequent characters; see "
            ],
            [
              "Escape sequences in literals",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/8250/literals/26505/escape-sequences-in-literals#t=20161220000946886904"
                ]
              ]
            ],
            [
              ".)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Zero or more other characters that are neither a double-quote or a line-break character. (A backslash ("
          },
          {
            "Text": "\\\\",
            "AttrFlags": 2
          },
          {
            "Text": ") character alters the meaning of subsequent characters; see "
          },
          {
            "Text": "Escape sequences in literals",
            "Link": "http://stackoverflow.com/documentation/java/8250/literals/26505/escape-sequences-in-literals#t=20161220000946886904"
          },
          {
            "Text": ".)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519528570,
        "id": "8bfda365-98e2-4904-a5fe-7b7b0cd9b60b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519528570,
        "parent_id": "c66ae660-3755-4fd3-bf26-c7dbc679b1f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A closing double-quote character."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "A closing double-quote character."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519528570,
        "id": "8e5e74c9-9da7-4d7e-a5a8-0283578472f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519528570,
        "parent_id": "c66ae660-3755-4fd3-bf26-c7dbc679b1f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519528570,
        "id": "25212709-3b43-42bc-be1b-6a00d5b48b94",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519528570,
        "parent_id": "c66ae660-3755-4fd3-bf26-c7dbc679b1f1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\"Hello world\"   // A literal denoting an 11 character String\n\"\"              // A literal denoting an empty (zero length) String\n\"\\\"\"            // A literal denoting a String consisting of one \n                //     double quote character\n\"1\\t2\\t3\\n\"     // Another literal with escape sequences"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\"Hello world\"   // A literal denoting an 11 character String\n\"\"              // A literal denoting an empty (zero length) String\n\"\\\"\"            // A literal denoting a String consisting of one \n                //     double quote character\n\"1\\t2\\t3\\n\"     // Another literal with escape sequences",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519528571,
        "id": "62aefb45-0373-4959-a7a6-0410a5c91f19",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519528571,
        "parent_id": "c66ae660-3755-4fd3-bf26-c7dbc679b1f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that a single string literal may not span multiple source code lines. It is a compilation error for a line-break (or the end of the source file) to occur before a literal’s closing double-quote. For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that a single string literal may not span multiple source code lines. It is a compilation error for a line-break (or the end of the source file) to occur before a literal’s closing double-quote. For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519528571,
        "id": "1fe67354-88be-4c0d-b577-fa978d25472e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519528571,
        "parent_id": "c66ae660-3755-4fd3-bf26-c7dbc679b1f1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\"Jello world    // Compilation error (at the end of the line!)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\"Jello world    // Compilation error (at the end of the line!)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519528571,
        "id": "8269fff3-d86b-49fe-9786-76baec6462d6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519528571,
        "parent_id": "c66ae660-3755-4fd3-bf26-c7dbc679b1f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Long strings"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Long strings"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519528571,
        "id": "c44f742b-ee36-4ee6-a52e-3c8d3cbfbd57",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519528571,
        "parent_id": "c66ae660-3755-4fd3-bf26-c7dbc679b1f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you need a string that is too long to fit on a line, the conventional way to express it is to split it into multiple literals and use the concatenation operator ("
            ],
            [
              "\\+",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") to join the pieces. For example"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you need a string that is too long to fit on a line, the conventional way to express it is to split it into multiple literals and use the concatenation operator ("
          },
          {
            "Text": "\\+",
            "AttrFlags": 2
          },
          {
            "Text": ") to join the pieces. For example"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519528571,
        "id": "f37d7cc1-3503-4aa7-bb9e-f1e197ae89c6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519528571,
        "parent_id": "c66ae660-3755-4fd3-bf26-c7dbc679b1f1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "String typingPractice = \"The quick brown fox \" +\n                        \"jumped over \" +\n                        \"the lazy dog\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "String typingPractice = \"The quick brown fox \" +\n                        \"jumped over \" +\n                        \"the lazy dog\"",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519528572,
        "id": "01e865e0-3b60-4fdc-a099-eb750f36725a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519528572,
        "parent_id": "c66ae660-3755-4fd3-bf26-c7dbc679b1f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An expression like the above consisting of string literals and "
            ],
            [
              "\\+",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " satisfies the requirements to be a "
            ],
            [
              "Constant Expression",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/8167/expressions/26261/constant-expressions#t=201612261246273998187"
                ]
              ]
            ],
            [
              ". That means that the expression will be evaluated by the compiler and represented at runtime by a single "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An expression like the above consisting of string literals and "
          },
          {
            "Text": "\\+",
            "AttrFlags": 2
          },
          {
            "Text": " satisfies the requirements to be a "
          },
          {
            "Text": "Constant Expression",
            "Link": "http://stackoverflow.com/documentation/java/8167/expressions/26261/constant-expressions#t=201612261246273998187"
          },
          {
            "Text": ". That means that the expression will be evaluated by the compiler and represented at runtime by a single "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519528572,
        "id": "8bd0bda6-788e-43f4-8291-0bead0c54554",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519528572,
        "parent_id": "c66ae660-3755-4fd3-bf26-c7dbc679b1f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Interning of string literals"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Interning of string literals"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519528572,
        "id": "bf5b65eb-f45d-4892-9b65-9ad68fca0de4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519528572,
        "parent_id": "c66ae660-3755-4fd3-bf26-c7dbc679b1f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When class file containing string literals is loaded by the JVM, the corresponding "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " objects are "
            ],
            [
              "interned",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " by the runtime system. This means that a string literal used in multiple classes occupies no more space than if it was used in one class."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When class file containing string literals is loaded by the JVM, the corresponding "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " objects are "
          },
          {
            "Text": "interned",
            "AttrFlags": 4
          },
          {
            "Text": " by the runtime system. This means that a string literal used in multiple classes occupies no more space than if it was used in one class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519528573,
        "id": "84115556-275a-463e-b3be-ad25f9244b12",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519528573,
        "parent_id": "c66ae660-3755-4fd3-bf26-c7dbc679b1f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For more information on interning and the string pool, refer to the "
            ],
            [
              "String pool and heap storage",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/109/strings/10577/string-pool-and-heap-storage#t=201612200451213663069"
                ]
              ]
            ],
            [
              " example in the Strings topic."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For more information on interning and the string pool, refer to the "
          },
          {
            "Text": "String pool and heap storage",
            "Link": "http://stackoverflow.com/documentation/java/109/strings/10577/string-pool-and-heap-storage#t=201612200451213663069"
          },
          {
            "Text": " example in the Strings topic."
          }
        ]
      }
    ],
    "title": "String literals",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}