{
  "ID": "9c5549de-40f7-4a36-ba8d-9f830d39f5fc",
  "Root": {
    "alive": true,
    "content": [
      "860013bf-412e-41c8-8dda-f761b1f81a6a",
      "34ae5598-f6bb-4d81-8562-0a1775f87cd2",
      "e567fcdd-ac02-49e6-9441-3eff8a9763bc",
      "7f22da62-66e1-43cf-9635-4d3cfb12a4af",
      "62727a80-606d-423c-9b9c-ea37024434a6",
      "a7d492cc-f13b-4d94-af03-bc33509c115d",
      "a372ea94-8402-4ed8-90a6-02e56ec21000",
      "87b8766a-bfdd-4a6b-8c56-df8760e1e44e",
      "d607eff7-b0f9-4a0a-889a-a132ac066c52",
      "b22a9ce4-d8d9-4c3a-a9ac-c9b3f37e87f3",
      "422600ea-e7bd-45ae-a8e8-79f8a25bc817"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550519858467,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "9c5549de-40f7-4a36-ba8d-9f830d39f5fc",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551744886071,
    "parent_id": "0d3bab31-f450-4049-a25a-91b606ec1407",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "TreeMap and TreeSet Thread Safety"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519858458,
        "id": "860013bf-412e-41c8-8dda-f761b1f81a6a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519858458,
        "parent_id": "9c5549de-40f7-4a36-ba8d-9f830d39f5fc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "TreeMap",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "TreeSet",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are "
            ],
            [
              "not",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " thread-safe collections, so care must be taken to ensure when used in multi-threaded programs."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "TreeMap",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "TreeSet",
            "AttrFlags": 2
          },
          {
            "Text": " are "
          },
          {
            "Text": "not",
            "AttrFlags": 1
          },
          {
            "Text": " thread-safe collections, so care must be taken to ensure when used in multi-threaded programs."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519858461,
        "id": "34ae5598-f6bb-4d81-8562-0a1775f87cd2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519858461,
        "parent_id": "9c5549de-40f7-4a36-ba8d-9f830d39f5fc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Both "
            ],
            [
              "TreeMap",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "TreeSet",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are safe when read, even concurrently, by multiple threads. So if they have been created and populated by a single thread (say, at the start of the program), and only then read, but not modified by multiple threads, there’s no reason for synchronization or locking."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Both "
          },
          {
            "Text": "TreeMap",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "TreeSet",
            "AttrFlags": 2
          },
          {
            "Text": " are safe when read, even concurrently, by multiple threads. So if they have been created and populated by a single thread (say, at the start of the program), and only then read, but not modified by multiple threads, there’s no reason for synchronization or locking."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519858463,
        "id": "e567fcdd-ac02-49e6-9441-3eff8a9763bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519858463,
        "parent_id": "9c5549de-40f7-4a36-ba8d-9f830d39f5fc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, if read and modified concurrently, or modified concurrently by more than one thread, the collection might throw a "
            ],
            [
              "ConcurrentModificationException",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/ConcurrentModificationException.html"
                ]
              ]
            ],
            [
              " or behave unexpectedly. In these cases, it’s imperative to synchronize/lock access to the collection using one of the following approaches:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, if read and modified concurrently, or modified concurrently by more than one thread, the collection might throw a "
          },
          {
            "Text": "ConcurrentModificationException",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/ConcurrentModificationException.html"
          },
          {
            "Text": " or behave unexpectedly. In these cases, it’s imperative to synchronize/lock access to the collection using one of the following approaches:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519858464,
        "id": "7f22da62-66e1-43cf-9635-4d3cfb12a4af",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519858464,
        "parent_id": "9c5549de-40f7-4a36-ba8d-9f830d39f5fc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using "
            ],
            [
              "Collections.synchronizedSorted..",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using "
          },
          {
            "Text": "Collections.synchronizedSorted..",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519858464,
        "id": "62727a80-606d-423c-9b9c-ea37024434a6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519858464,
        "parent_id": "9c5549de-40f7-4a36-ba8d-9f830d39f5fc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "SortedSet\u003cInteger\u003e set = Collections.synchronizedSortedSet(new TreeSet\u003cInteger\u003e());\nSortedMap\u003cInteger,String\u003e map = Collections.synchronizedSortedMap(new TreeMap\u003cInteger,String\u003e());"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "SortedSet\u003cInteger\u003e set = Collections.synchronizedSortedSet(new TreeSet\u003cInteger\u003e());\nSortedMap\u003cInteger,String\u003e map = Collections.synchronizedSortedMap(new TreeMap\u003cInteger,String\u003e());",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519858465,
        "id": "a7d492cc-f13b-4d94-af03-bc33509c115d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519858465,
        "parent_id": "9c5549de-40f7-4a36-ba8d-9f830d39f5fc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This will provide a "
            ],
            [
              "SortedSet",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/SortedSet.html"
                ]
              ]
            ],
            [
              "/"
            ],
            [
              "SortedMap",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html"
                ]
              ]
            ],
            [
              " implementation backed by the actual collection, and synchronized on some mutex object. Note that this will synchronize all read and write access to the collection on a single lock, so even concurrent reads would not be possible."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This will provide a "
          },
          {
            "Text": "SortedSet",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/SortedSet.html"
          },
          {
            "Text": "/"
          },
          {
            "Text": "SortedMap",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html"
          },
          {
            "Text": " implementation backed by the actual collection, and synchronized on some mutex object. Note that this will synchronize all read and write access to the collection on a single lock, so even concurrent reads would not be possible."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519858465,
        "id": "a372ea94-8402-4ed8-90a6-02e56ec21000",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519858465,
        "parent_id": "9c5549de-40f7-4a36-ba8d-9f830d39f5fc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By manually synchronizing on some object, like the collection itself:"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "By manually synchronizing on some object, like the collection itself:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519858465,
        "id": "87b8766a-bfdd-4a6b-8c56-df8760e1e44e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519858465,
        "parent_id": "9c5549de-40f7-4a36-ba8d-9f830d39f5fc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "TreeSet\u003cInteger\u003e set = new TreeSet\u003c\u003e(); \n...\n\n//Thread 1\nsynchronized (set) {\n set.add(4);\n}\n...\n\n//Thread 2\nsynchronized (set) {\n set.remove(5);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "TreeSet\u003cInteger\u003e set = new TreeSet\u003c\u003e(); \n...\n\n//Thread 1\nsynchronized (set) {\n set.add(4);\n}\n...\n\n//Thread 2\nsynchronized (set) {\n set.remove(5);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519858466,
        "id": "d607eff7-b0f9-4a0a-889a-a132ac066c52",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519858466,
        "parent_id": "9c5549de-40f7-4a36-ba8d-9f830d39f5fc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By using a lock, such as a "
            ],
            [
              "ReentrantReadWriteLock",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/locks/ReentrantReadWriteLock.html"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "By using a lock, such as a "
          },
          {
            "Text": "ReentrantReadWriteLock",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/locks/ReentrantReadWriteLock.html"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519858466,
        "id": "b22a9ce4-d8d9-4c3a-a9ac-c9b3f37e87f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519858466,
        "parent_id": "9c5549de-40f7-4a36-ba8d-9f830d39f5fc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "TreeSet\u003cInteger\u003e set = new TreeSet\u003c\u003e(); \nReentrantReadWriteLock lock = new ReentrantReadWriteLock();\n...\n\n//Thread 1\nlock.writeLock().lock();\nset.add(4);\nlock.writeLock().unlock();\n...  \n\n//Thread 2\nlock.readLock().lock();\nset.contains(5);\nlock.readLock().unlock();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "TreeSet\u003cInteger\u003e set = new TreeSet\u003c\u003e(); \nReentrantReadWriteLock lock = new ReentrantReadWriteLock();\n...\n\n//Thread 1\nlock.writeLock().lock();\nset.add(4);\nlock.writeLock().unlock();\n...  \n\n//Thread 2\nlock.readLock().lock();\nset.contains(5);\nlock.readLock().unlock();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550519858467,
        "id": "422600ea-e7bd-45ae-a8e8-79f8a25bc817",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550519858467,
        "parent_id": "9c5549de-40f7-4a36-ba8d-9f830d39f5fc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As opposed to the previous synchronization methods, using a "
            ],
            [
              "ReadWriteLock",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/locks/ReadWriteLock.html"
                ]
              ]
            ],
            [
              " allows multiple threads to read from the map concurrently."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As opposed to the previous synchronization methods, using a "
          },
          {
            "Text": "ReadWriteLock",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/locks/ReadWriteLock.html"
          },
          {
            "Text": " allows multiple threads to read from the map concurrently."
          }
        ]
      }
    ],
    "title": "TreeMap and TreeSet Thread Safety",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}