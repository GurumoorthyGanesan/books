{
  "ID": "13b4c87a-ed57-48b5-903d-d35a5dd53738",
  "Root": {
    "alive": true,
    "content": [
      "fdea6399-1504-4e2c-9ba9-59ee22801a05",
      "0b59da2a-5c34-447b-a8ee-3bb7ebd7efc3",
      "1204715d-c7ab-42f4-888d-6ef00a9845a1"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460125085,
    "id": "13b4c87a-ed57-48b5-903d-d35a5dd53738",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460125085,
    "parent_id": "3e5f6441-fbb7-4864-8927-1c1c812bd8c7",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "270 Collect Results of a Stream into an Array"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460125082,
        "id": "fdea6399-1504-4e2c-9ba9-59ee22801a05",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460125082,
        "parent_id": "13b4c87a-ed57-48b5-903d-d35a5dd53738",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Analog to get a collection for a "
            ],
            [
              "Stream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " by "
            ],
            [
              "collect()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " an array can be obtained by the "
            ],
            [
              "Stream.toArray()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Analog to get a collection for a "
          },
          {
            "Text": "Stream",
            "AttrFlags": 2
          },
          {
            "Text": " by "
          },
          {
            "Text": "collect()",
            "AttrFlags": 2
          },
          {
            "Text": " an array can be obtained by the "
          },
          {
            "Text": "Stream.toArray()",
            "AttrFlags": 2
          },
          {
            "Text": " method:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460125085,
        "id": "0b59da2a-5c34-447b-a8ee-3bb7ebd7efc3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460125085,
        "parent_id": "13b4c87a-ed57-48b5-903d-d35a5dd53738",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "List\u003cString\u003e fruits = Arrays.asList(\"apple\", \"banana\", \"pear\", \"kiwi\", \"orange\");\n\nString[] filteredFruits = fruits.stream()\n    .filter(s -\u003e s.contains(\"a\"))\n    .toArray(String[]::new);     \n\n// prints: [apple, banana, pear, orange]\nSystem.out.println(Arrays.toString(filteredFruits));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "List\u003cString\u003e fruits = Arrays.asList(\"apple\", \"banana\", \"pear\", \"kiwi\", \"orange\");\n\nString[] filteredFruits = fruits.stream()\n    .filter(s -\u003e s.contains(\"a\"))\n    .toArray(String[]::new);     \n\n// prints: [apple, banana, pear, orange]\nSystem.out.println(Arrays.toString(filteredFruits));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460125085,
        "id": "1204715d-c7ab-42f4-888d-6ef00a9845a1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460125085,
        "parent_id": "13b4c87a-ed57-48b5-903d-d35a5dd53738",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "String[]::new",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a special kind of method reference: a constructor reference."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "String[]::new",
            "AttrFlags": 2
          },
          {
            "Text": " is a special kind of method reference: a constructor reference."
          }
        ]
      }
    ],
    "title": "270 Collect Results of a Stream into an Array"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}