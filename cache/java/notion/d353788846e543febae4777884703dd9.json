{
  "ID": "d3537888-46e5-43fe-bae4-777884703dd9",
  "Root": {
    "alive": true,
    "content": [
      "082bc923-f24c-407a-9fda-48d7184d5ba0",
      "ad363bc2-8c87-4541-b176-def647d3ed8b",
      "f804d3dd-0c20-450e-a902-e62ab9a69efc",
      "16175d05-32fb-47b2-9d97-23a16d9a6dc2",
      "775c64d7-7b6d-4a71-a9eb-df5b2acdb888",
      "3684933f-b5e4-433f-aeb6-c5d560608207",
      "cad81e2f-af9c-477f-9514-f1a6debbbf91",
      "6a24656c-b9eb-4c85-ab5f-8ef43100cdda"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460832049,
    "id": "d3537888-46e5-43fe-bae4-777884703dd9",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460832049,
    "parent_id": "174a8fd0-08c4-4f2e-91b0-7a7a30744772",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Property files caveat trailing whitespace"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460832044,
        "id": "082bc923-f24c-407a-9fda-48d7184d5ba0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460832044,
        "parent_id": "d3537888-46e5-43fe-bae4-777884703dd9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Take a close look at these two property files which are seemingly completely identical:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Take a close look at these two property files which are seemingly completely identical:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460832048,
        "id": "ad363bc2-8c87-4541-b176-def647d3ed8b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460832048,
        "parent_id": "d3537888-46e5-43fe-bae4-777884703dd9",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "http://i.stack.imgur.com/PogHE.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "http://i.stack.imgur.com/PogHE.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.sohttp:%2F%2Fi.stack.imgur.com%2FPogHE.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460832048,
        "id": "f804d3dd-0c20-450e-a902-e62ab9a69efc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460832048,
        "parent_id": "d3537888-46e5-43fe-bae4-777884703dd9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "except they are really not identical:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "except they are really not identical:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460832048,
        "id": "16175d05-32fb-47b2-9d97-23a16d9a6dc2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460832048,
        "parent_id": "d3537888-46e5-43fe-bae4-777884703dd9",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "http://i.stack.imgur.com/RV40f.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "http://i.stack.imgur.com/RV40f.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.sohttp:%2F%2Fi.stack.imgur.com%2FRV40f.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460832048,
        "id": "775c64d7-7b6d-4a71-a9eb-df5b2acdb888",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460832048,
        "parent_id": "d3537888-46e5-43fe-bae4-777884703dd9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "(screenshots are from Notepad++)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "(screenshots are from Notepad++)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460832049,
        "id": "3684933f-b5e4-433f-aeb6-c5d560608207",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460832049,
        "parent_id": "d3537888-46e5-43fe-bae4-777884703dd9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Since trailing whitespace is preserved the value of "
            ],
            [
              "lastName",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " would be "
            ],
            [
              "\"Smith\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the first case and "
            ],
            [
              "\"Smith \"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the second case."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Since trailing whitespace is preserved the value of "
          },
          {
            "Text": "lastName",
            "AttrFlags": 2
          },
          {
            "Text": " would be "
          },
          {
            "Text": "\"Smith\"",
            "AttrFlags": 2
          },
          {
            "Text": " in the first case and "
          },
          {
            "Text": "\"Smith \"",
            "AttrFlags": 2
          },
          {
            "Text": " in the second case."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460832049,
        "id": "cad81e2f-af9c-477f-9514-f1a6debbbf91",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460832049,
        "parent_id": "d3537888-46e5-43fe-bae4-777884703dd9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Very rarely this is what users expect and one and can only speculate why this is the default behavior of "
            ],
            [
              "Properties",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class. It is however easy to create an enhanced version of "
            ],
            [
              "Properties",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that fixes this problem. The following class, "
            ],
            [
              "TrimmedProperties",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", does just that. It is a drop-in replacement for standard Properties class."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Very rarely this is what users expect and one and can only speculate why this is the default behavior of "
          },
          {
            "Text": "Properties",
            "AttrFlags": 2
          },
          {
            "Text": " class. It is however easy to create an enhanced version of "
          },
          {
            "Text": "Properties",
            "AttrFlags": 2
          },
          {
            "Text": " that fixes this problem. The following class, "
          },
          {
            "Text": "TrimmedProperties",
            "AttrFlags": 1
          },
          {
            "Text": ", does just that. It is a drop-in replacement for standard Properties class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460832049,
        "id": "6a24656c-b9eb-4c85-ab5f-8ef43100cdda",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460832049,
        "parent_id": "d3537888-46e5-43fe-bae4-777884703dd9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import java.io.FileInputStream;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.Reader;\nimport java.util.Map.Entry;\nimport java.util.Properties;\n\n/**\n * Properties class where values are trimmed for trailing whitespace if the\n * properties are loaded from a file.\n *\n * \u003cp\u003e\n * In the standard {@link java.util.Properties Properties} class trailing\n * whitespace is always preserved. When loading properties from a file such\n * trailing whitespace is almost always \u003ci\u003eunintentional\u003c/i\u003e. This class fixes\n * this problem. The trimming of trailing whitespace only takes place if the\n * source of input is a file and only where the input is line oriented (meaning\n * that for example loading from XML file is \u003ci\u003enot\u003c/i\u003e changed by this class).\n * For this reason this class is almost in all cases a safe drop-in replacement\n * for the standard \u003ctt\u003eProperties\u003c/tt\u003e\n * class.\n *\n * \u003cp\u003e\n * Whitespace is defined here as any of space (U+0020) or tab (U+0009).\n * * \n */\npublic class TrimmedProperties extends Properties {\n\n    /**\n     * Reads a property list (key and element pairs) from the input byte stream.\n     * \n     * \u003cp\u003eBehaves exactly as {@link java.util.Properties#load(java.io.InputStream) }\n     * with the exception that trailing whitespace is trimmed from property values\n     * if \u003ctt\u003einStream\u003c/tt\u003e is an instance of \u003ctt\u003eFileInputStream\u003c/tt\u003e.\n     * \n     * @see java.util.Properties#load(java.io.InputStream) \n     * @param inStream the input stream.\n     * @throws IOException if an error occurred when reading from the input stream.\n     */\n    @Override\n    public void load(InputStream inStream) throws IOException {\n        if (inStream instanceof FileInputStream) {\n            // First read into temporary props using the standard way\n            Properties tempProps = new Properties();\n            tempProps.load(inStream);\n            // Now trim and put into target\n            trimAndLoad(tempProps);\n        } else {\n            super.load(inStream);\n        }\n    }\n\n    /**\n     * Reads a property list (key and element pairs) from the input character stream in a simple line-oriented format. \n     * \n     * \u003cp\u003eBehaves exactly as {@link java.util.Properties#load(java.io.Reader)}\n     * with the exception that trailing whitespace is trimmed on property values\n     * if \u003ctt\u003ereader\u003c/tt\u003e is an instance of \u003ctt\u003eFileReader\u003c/tt\u003e.\n     * \n     * @see java.util.Properties#load(java.io.Reader) }\n     * @param reader the input character stream.\n     * @throws IOException if an error occurred when reading from the input stream.\n     */\n    @Override\n    public void load(Reader reader) throws IOException {\n        if (reader instanceof FileReader) {\n            // First read into temporary props using the standard way\n            Properties tempProps = new Properties();\n            tempProps.load(reader);\n            // Now trim and put into target\n            trimAndLoad(tempProps);\n        } else {\n            super.load(reader);\n        }\n    }\n\n    private void trimAndLoad(Properties p) {\n        for (Entry\u003cObject, Object\u003e entry : p.entrySet()) {\n            if (entry.getValue() instanceof String) {\n                put(entry.getKey(), trimTrailing((String) entry.getValue()));\n            } else {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n\n    /**\n     * Trims trailing space or tabs from a string.\n     *\n     * @param str\n     * @return\n     */\n    public static String trimTrailing(String str) {\n        if (str != null) {\n            // read str from tail until char is no longer whitespace\n            for (int i = str.length() - 1; i \u003e= 0; i--) {\n                if ((str.charAt(i) != ' ') \u0026\u0026 (str.charAt(i) != '\\t')) {\n                    return str.substring(0, i + 1);\n                }\n            }\n        }\n        return str;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import java.io.FileInputStream;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.Reader;\nimport java.util.Map.Entry;\nimport java.util.Properties;\n\n/**\n * Properties class where values are trimmed for trailing whitespace if the\n * properties are loaded from a file.\n *\n * \u003cp\u003e\n * In the standard {@link java.util.Properties Properties} class trailing\n * whitespace is always preserved. When loading properties from a file such\n * trailing whitespace is almost always \u003ci\u003eunintentional\u003c/i\u003e. This class fixes\n * this problem. The trimming of trailing whitespace only takes place if the\n * source of input is a file and only where the input is line oriented (meaning\n * that for example loading from XML file is \u003ci\u003enot\u003c/i\u003e changed by this class).\n * For this reason this class is almost in all cases a safe drop-in replacement\n * for the standard \u003ctt\u003eProperties\u003c/tt\u003e\n * class.\n *\n * \u003cp\u003e\n * Whitespace is defined here as any of space (U+0020) or tab (U+0009).\n * * \n */\npublic class TrimmedProperties extends Properties {\n\n    /**\n     * Reads a property list (key and element pairs) from the input byte stream.\n     * \n     * \u003cp\u003eBehaves exactly as {@link java.util.Properties#load(java.io.InputStream) }\n     * with the exception that trailing whitespace is trimmed from property values\n     * if \u003ctt\u003einStream\u003c/tt\u003e is an instance of \u003ctt\u003eFileInputStream\u003c/tt\u003e.\n     * \n     * @see java.util.Properties#load(java.io.InputStream) \n     * @param inStream the input stream.\n     * @throws IOException if an error occurred when reading from the input stream.\n     */\n    @Override\n    public void load(InputStream inStream) throws IOException {\n        if (inStream instanceof FileInputStream) {\n            // First read into temporary props using the standard way\n            Properties tempProps = new Properties();\n            tempProps.load(inStream);\n            // Now trim and put into target\n            trimAndLoad(tempProps);\n        } else {\n            super.load(inStream);\n        }\n    }\n\n    /**\n     * Reads a property list (key and element pairs) from the input character stream in a simple line-oriented format. \n     * \n     * \u003cp\u003eBehaves exactly as {@link java.util.Properties#load(java.io.Reader)}\n     * with the exception that trailing whitespace is trimmed on property values\n     * if \u003ctt\u003ereader\u003c/tt\u003e is an instance of \u003ctt\u003eFileReader\u003c/tt\u003e.\n     * \n     * @see java.util.Properties#load(java.io.Reader) }\n     * @param reader the input character stream.\n     * @throws IOException if an error occurred when reading from the input stream.\n     */\n    @Override\n    public void load(Reader reader) throws IOException {\n        if (reader instanceof FileReader) {\n            // First read into temporary props using the standard way\n            Properties tempProps = new Properties();\n            tempProps.load(reader);\n            // Now trim and put into target\n            trimAndLoad(tempProps);\n        } else {\n            super.load(reader);\n        }\n    }\n\n    private void trimAndLoad(Properties p) {\n        for (Entry\u003cObject, Object\u003e entry : p.entrySet()) {\n            if (entry.getValue() instanceof String) {\n                put(entry.getKey(), trimTrailing((String) entry.getValue()));\n            } else {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n\n    /**\n     * Trims trailing space or tabs from a string.\n     *\n     * @param str\n     * @return\n     */\n    public static String trimTrailing(String str) {\n        if (str != null) {\n            // read str from tail until char is no longer whitespace\n            for (int i = str.length() - 1; i \u003e= 0; i--) {\n                if ((str.charAt(i) != ' ') \u0026\u0026 (str.charAt(i) != '\\t')) {\n                    return str.substring(0, i + 1);\n                }\n            }\n        }\n        return str;\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "020 Property files caveat trailing whitespace"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}