{
  "ID": "0ec14741-5888-49f6-bcb1-f3dcb3b3d7ec",
  "Root": {
    "alive": true,
    "content": [
      "7836b00a-bd7b-4740-a0a2-8f1cb737f821",
      "3577594a-3ce9-4401-ab6c-e80fe88bab4e",
      "4e43fee7-1eef-4083-b0e5-c9338a5828b6",
      "18ece1ad-0474-42da-899f-855ea4aab8d7"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460562136,
    "id": "0ec14741-5888-49f6-bcb1-f3dcb3b3d7ec",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460562136,
    "parent_id": "8576ab83-1126-4d17-b0cf-2a0ba47249c1",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "030 Enums with Abstract Methods"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460562132,
        "id": "7836b00a-bd7b-4740-a0a2-8f1cb737f821",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460562132,
        "parent_id": "0ec14741-5888-49f6-bcb1-f3dcb3b3d7ec",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Enums can define abstract methods, which each "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " member is required to implement."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Enums can define abstract methods, which each "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " member is required to implement."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460562135,
        "id": "3577594a-3ce9-4401-ab6c-e80fe88bab4e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460562135,
        "parent_id": "0ec14741-5888-49f6-bcb1-f3dcb3b3d7ec",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "enum Action {\n    DODGE {\n        public boolean execute(Player player) {\n            return player.isAttacking();\n        }\n    },\n    ATTACK {\n        public boolean execute(Player player) {\n            return player.hasWeapon();\n        }\n    },\n    JUMP {\n        public boolean execute(Player player) {\n            return player.getCoordinates().equals(new Coordinates(0, 0));\n        }\n    };\n\n    public abstract boolean execute(Player player);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "enum Action {\n    DODGE {\n        public boolean execute(Player player) {\n            return player.isAttacking();\n        }\n    },\n    ATTACK {\n        public boolean execute(Player player) {\n            return player.hasWeapon();\n        }\n    },\n    JUMP {\n        public boolean execute(Player player) {\n            return player.getCoordinates().equals(new Coordinates(0, 0));\n        }\n    };\n\n    public abstract boolean execute(Player player);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460562136,
        "id": "4e43fee7-1eef-4083-b0e5-c9338a5828b6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460562136,
        "parent_id": "0ec14741-5888-49f6-bcb1-f3dcb3b3d7ec",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This allows for each enum member to define its own behaviour for a given operation, without having to switch on types in a method in the top-level definition."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This allows for each enum member to define its own behaviour for a given operation, without having to switch on types in a method in the top-level definition."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460562136,
        "id": "18ece1ad-0474-42da-899f-855ea4aab8d7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460562136,
        "parent_id": "0ec14741-5888-49f6-bcb1-f3dcb3b3d7ec",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that this pattern is a short form of what is typically achieved using polymorphism and/or implementing interfaces."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that this pattern is a short form of what is typically achieved using polymorphism and/or implementing interfaces."
          }
        ]
      }
    ],
    "title": "030 Enums with Abstract Methods"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}