{
  "ID": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
  "Root": {
    "alive": true,
    "content": [
      "55d7e2c7-a7cf-4b19-9ac6-a61eb3b3df28",
      "eaf15f6a-7a81-46f3-a237-161f631cce8c",
      "dc953daa-09da-4c36-bd07-3fea7acbf17e",
      "d0f3b31c-a3bf-4f37-b09a-4a66a466d8b3",
      "3d9b2fa4-103e-4485-b6ba-b24690fc0cec",
      "8175c4f6-2cb5-419d-b66c-45f910de6aae",
      "e4dbf654-bc78-42d8-984a-36dc2d699b8d",
      "37982b99-1905-4f6a-97e0-b852cf799693",
      "8151d1fa-bd14-4f40-a543-29858c2c81ab",
      "1727885f-8555-445a-8892-4513698e7bf5",
      "f14d964e-1e87-468d-9135-cf410d690527",
      "2d91772c-d998-44d3-b6bb-5803a1b3218e",
      "ca94f4e8-aa7a-4422-a900-e686f979badd",
      "4b84a9ac-8de5-40d2-8975-37a90f6cc4f3",
      "b07fcfe6-35a0-4c18-b322-8fbb95d9f1ee",
      "f4f22144-2e39-47ab-bf49-86512fa55af7",
      "741428fc-9134-4542-8939-ace21b008ba9",
      "8dac4fef-f524-4c12-acb9-717e6f3998b3",
      "69e675ee-d1cb-49e2-a38e-9c99a18a85d0",
      "86be2984-0958-4098-a17c-15d00dc78f06",
      "51fb0f57-de27-4985-9909-c2abb9f9ec8e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460192180,
    "id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460192180,
    "parent_id": "bcd7d24d-a9b8-40ba-ac61-89bb802d73b5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "100 Sorting arrays"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192177,
        "id": "55d7e2c7-a7cf-4b19-9ac6-a61eb3b3df28",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192177,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sorting arrays can be easily done with the "
            ],
            [
              "Arrays",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html"
                ]
              ]
            ],
            [
              " api."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sorting arrays can be easily done with the "
          },
          {
            "Text": "Arrays",
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html"
          },
          {
            "Text": " api."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192178,
        "id": "eaf15f6a-7a81-46f3-a237-161f631cce8c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192178,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import java.util.Arrays;\n\n// creating an array with integers\nint[] array = {7, 4, 2, 1, 19};\n// this is the sorting part just one function ready to be used\nArrays.sort(array);\n// prints [1, 2, 4, 7, 19]\nSystem.out.println(Arrays.toString(array));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import java.util.Arrays;\n\n// creating an array with integers\nint[] array = {7, 4, 2, 1, 19};\n// this is the sorting part just one function ready to be used\nArrays.sort(array);\n// prints [1, 2, 4, 7, 19]\nSystem.out.println(Arrays.toString(array));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192178,
        "id": "dc953daa-09da-4c36-bd07-3fea7acbf17e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192178,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192178,
        "id": "d0f3b31c-a3bf-4f37-b09a-4a66a466d8b3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192178,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sorting String arrays:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sorting String arrays:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192179,
        "id": "3d9b2fa4-103e-4485-b6ba-b24690fc0cec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192179,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not a numeric data, it defines it’s own order which is called lexicographic order, also known as alphabetic order. When you sort an array of String using "
            ],
            [
              "sort()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method, it sorts array into natural order defined by Comparable interface, as shown below :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " is not a numeric data, it defines it’s own order which is called lexicographic order, also known as alphabetic order. When you sort an array of String using "
          },
          {
            "Text": "sort()",
            "AttrFlags": 2
          },
          {
            "Text": " method, it sorts array into natural order defined by Comparable interface, as shown below :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192179,
        "id": "8175c4f6-2cb5-419d-b66c-45f910de6aae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192179,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Increasing Order",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Increasing Order",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192179,
        "id": "e4dbf654-bc78-42d8-984a-36dc2d699b8d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192179,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "String[] names = {\"John\", \"Steve\", \"Shane\", \"Adam\", \"Ben\"};\nSystem.out.println(\"String array before sorting : \" + Arrays.toString(names));\nArrays.sort(names); \nSystem.out.println(\"String array after sorting in ascending order : \" + Arrays.toString(names));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "String[] names = {\"John\", \"Steve\", \"Shane\", \"Adam\", \"Ben\"};\nSystem.out.println(\"String array before sorting : \" + Arrays.toString(names));\nArrays.sort(names); \nSystem.out.println(\"String array after sorting in ascending order : \" + Arrays.toString(names));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192179,
        "id": "37982b99-1905-4f6a-97e0-b852cf799693",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192179,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output:",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output:",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192179,
        "id": "8151d1fa-bd14-4f40-a543-29858c2c81ab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192179,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "String array before sorting : [John, Steve, Shane, Adam, Ben]    \nString array after sorting in ascending order : [Adam, Ben, John, Shane, Steve]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "String array before sorting : [John, Steve, Shane, Adam, Ben]    \nString array after sorting in ascending order : [Adam, Ben, John, Shane, Steve]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192179,
        "id": "1727885f-8555-445a-8892-4513698e7bf5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192179,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Decreasing Order",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Decreasing Order",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192179,
        "id": "f14d964e-1e87-468d-9135-cf410d690527",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192179,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Arrays.sort(names, 0, names.length, Collections.reverseOrder());\nSystem.out.println(\"String array after sorting in descending order : \" + Arrays.toString(names));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Arrays.sort(names, 0, names.length, Collections.reverseOrder());\nSystem.out.println(\"String array after sorting in descending order : \" + Arrays.toString(names));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192179,
        "id": "2d91772c-d998-44d3-b6bb-5803a1b3218e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192179,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output:",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output:",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192179,
        "id": "ca94f4e8-aa7a-4422-a900-e686f979badd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192179,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "String array after sorting in descending order : [Steve, Shane, John, Ben, Adam]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "String array after sorting in descending order : [Steve, Shane, John, Ben, Adam]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192179,
        "id": "4b84a9ac-8de5-40d2-8975-37a90f6cc4f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192179,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192179,
        "id": "b07fcfe6-35a0-4c18-b322-8fbb95d9f1ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192179,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sorting an Object array",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sorting an Object array",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192180,
        "id": "f4f22144-2e39-47ab-bf49-86512fa55af7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192180,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In order to sort an object array, all elements must implement either "
            ],
            [
              "Comparable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "Comparator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface to define the order of the sorting."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In order to sort an object array, all elements must implement either "
          },
          {
            "Text": "Comparable",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "Comparator",
            "AttrFlags": 2
          },
          {
            "Text": " interface to define the order of the sorting."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192180,
        "id": "741428fc-9134-4542-8939-ace21b008ba9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192180,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can use either "
            ],
            [
              "sort(Object[])",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method to sort an object array on its natural order, but you must ensure that all elements in the array must implement "
            ],
            [
              "Comparable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can use either "
          },
          {
            "Text": "sort(Object[])",
            "AttrFlags": 2
          },
          {
            "Text": " method to sort an object array on its natural order, but you must ensure that all elements in the array must implement "
          },
          {
            "Text": "Comparable",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192180,
        "id": "8dac4fef-f524-4c12-acb9-717e6f3998b3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192180,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Furthermore, they must be mutually comparable as well, for example "
            ],
            [
              "e1.compareTo(e2)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " must not throw a "
            ],
            [
              "ClassCastException",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " for any elements e1 and e2 in the array. Alternatively you can sort an Object array on custom order using "
            ],
            [
              "sort(T[], Comparator)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method as shown in following example."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Furthermore, they must be mutually comparable as well, for example "
          },
          {
            "Text": "e1.compareTo(e2)",
            "AttrFlags": 2
          },
          {
            "Text": " must not throw a "
          },
          {
            "Text": "ClassCastException",
            "AttrFlags": 6
          },
          {
            "Text": " for any elements e1 and e2 in the array. Alternatively you can sort an Object array on custom order using "
          },
          {
            "Text": "sort(T[], Comparator)",
            "AttrFlags": 2
          },
          {
            "Text": " method as shown in following example."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192180,
        "id": "69e675ee-d1cb-49e2-a38e-9c99a18a85d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192180,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// How to Sort Object Array in Java using Comparator and Comparable\nCourse[] courses = new Course[4];\ncourses[0] = new Course(101, \"Java\", 200);\ncourses[1] = new Course(201, \"Ruby\", 300);\ncourses[2] = new Course(301, \"Python\", 400);\ncourses[3] = new Course(401, \"Scala\", 500);\n       \nSystem.out.println(\"Object array before sorting : \" + Arrays.toString(courses));\n       \nArrays.sort(courses);\nSystem.out.println(\"Object array after sorting in natural order : \" + Arrays.toString(courses));\n       \nArrays.sort(courses, new Course.PriceComparator());\nSystem.out.println(\"Object array after sorting by price : \" + Arrays.toString(courses));\n       \nArrays.sort(courses, new Course.NameComparator());\nSystem.out.println(\"Object array after sorting by name : \" + Arrays.toString(courses));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// How to Sort Object Array in Java using Comparator and Comparable\nCourse[] courses = new Course[4];\ncourses[0] = new Course(101, \"Java\", 200);\ncourses[1] = new Course(201, \"Ruby\", 300);\ncourses[2] = new Course(301, \"Python\", 400);\ncourses[3] = new Course(401, \"Scala\", 500);\n       \nSystem.out.println(\"Object array before sorting : \" + Arrays.toString(courses));\n       \nArrays.sort(courses);\nSystem.out.println(\"Object array after sorting in natural order : \" + Arrays.toString(courses));\n       \nArrays.sort(courses, new Course.PriceComparator());\nSystem.out.println(\"Object array after sorting by price : \" + Arrays.toString(courses));\n       \nArrays.sort(courses, new Course.NameComparator());\nSystem.out.println(\"Object array after sorting by name : \" + Arrays.toString(courses));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192180,
        "id": "86be2984-0958-4098-a17c-15d00dc78f06",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192180,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output:",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output:",
            "AttrFlags": 5
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460192180,
        "id": "51fb0f57-de27-4985-9909-c2abb9f9ec8e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460192180,
        "parent_id": "8b8eb76c-dc72-4fbb-8637-fb56306062ae",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Object array before sorting : [#101 Java@200 , #201 Ruby@300 , #301 Python@400 , #401 Scala@500 ]    \nObject array after sorting in natural order : [#101 Java@200 , #201 Ruby@300 , #301 Python@400 , #401 Scala@500 ]    \nObject array after sorting by price : [#101 Java@200 , #201 Ruby@300 , #301 Python@400 , #401 Scala@500 ]    \nObject array after sorting by name : [#101 Java@200 , #301 Python@400 , #201 Ruby@300 , #401 Scala@500 ]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Object array before sorting : [#101 Java@200 , #201 Ruby@300 , #301 Python@400 , #401 Scala@500 ]    \nObject array after sorting in natural order : [#101 Java@200 , #201 Ruby@300 , #301 Python@400 , #401 Scala@500 ]    \nObject array after sorting by price : [#101 Java@200 , #201 Ruby@300 , #301 Python@400 , #401 Scala@500 ]    \nObject array after sorting by name : [#101 Java@200 , #301 Python@400 , #201 Ruby@300 , #401 Scala@500 ]",
        "code_language": "Plain Text"
      }
    ],
    "title": "100 Sorting arrays"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}