{
  "ID": "6d4cccae-fc91-4f8b-851b-23f40d2a70c7",
  "Root": {
    "alive": true,
    "content": [
      "4c9d3351-4ac7-4f56-a7f9-abf5456a26e9",
      "b1596a04-66ca-4b08-a1af-a20922cdbf91",
      "4b9b14c2-b772-4087-9e82-db71a547f9ef",
      "df357ea3-8db3-4926-9179-54c00af37754",
      "94e5b3ad-4fcf-44ee-b33b-56a1881c5a88"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550518074436,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "6d4cccae-fc91-4f8b-851b-23f40d2a70c7",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551747012925,
    "parent_id": "9fb48b00-5e40-4acd-b683-7ffce58b76df",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Date Time Formatting"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518074432,
        "id": "4c9d3351-4ac7-4f56-a7f9-abf5456a26e9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518074432,
        "parent_id": "6d4cccae-fc91-4f8b-851b-23f40d2a70c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Before Java 8, there was "
            ],
            [
              "DateFormat",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "SimpleDateFormat",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " classes in the package "
            ],
            [
              "java.text",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and this legacy code will be continued to be used for sometime."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Before Java 8, there was "
          },
          {
            "Text": "DateFormat",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "SimpleDateFormat",
            "AttrFlags": 2
          },
          {
            "Text": " classes in the package "
          },
          {
            "Text": "java.text",
            "AttrFlags": 2
          },
          {
            "Text": " and this legacy code will be continued to be used for sometime."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518074435,
        "id": "b1596a04-66ca-4b08-a1af-a20922cdbf91",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518074435,
        "parent_id": "6d4cccae-fc91-4f8b-851b-23f40d2a70c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But, Java 8 offers a modern approach to handling Formatting and Parsing."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But, Java 8 offers a modern approach to handling Formatting and Parsing."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518074436,
        "id": "4b9b14c2-b772-4087-9e82-db71a547f9ef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518074436,
        "parent_id": "6d4cccae-fc91-4f8b-851b-23f40d2a70c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In formatting and parsing first you pass a "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object to "
            ],
            [
              "DateTimeFormatter",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and in turn use it for formatting or parsing."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In formatting and parsing first you pass a "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " object to "
          },
          {
            "Text": "DateTimeFormatter",
            "AttrFlags": 2
          },
          {
            "Text": ", and in turn use it for formatting or parsing."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518074436,
        "id": "df357ea3-8db3-4926-9179-54c00af37754",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518074436,
        "parent_id": "6d4cccae-fc91-4f8b-851b-23f40d2a70c7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import java.time.*;\nimport java.time.format.*;\n\nclass DateTimeFormat\n{\n    public static void main(String[] args) {\n\n        //Parsing\n        String pattern = \"d-MM-yyyy HH:mm\";\n        DateTimeFormatter dtF1 = DateTimeFormatter.ofPattern(pattern);\n\n        LocalDateTime ldp1 = LocalDateTime.parse(\"2014-03-25T01:30\"), //Default format\n                      ldp2 = LocalDateTime.parse(\"15-05-2016 13:55\",dtF1); //Custom format\n\n        System.out.println(ldp1 + \"\\n\" + ldp2); //Will be printed in Default format\n\n        //Formatting\n        DateTimeFormatter dtF2 = DateTimeFormatter.ofPattern(\"EEE d, MMMM, yyyy HH:mm\");\n        \n        DateTimeFormatter dtF3 = DateTimeFormatter.ISO_LOCAL_DATE_TIME;\n\n        LocalDateTime ldtf1 = LocalDateTime.now();\n\n        System.out.println(ldtf1.format(dtF2) +\"\\n\"+ldtf1.format(dtF3));\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import java.time.*;\nimport java.time.format.*;\n\nclass DateTimeFormat\n{\n    public static void main(String[] args) {\n\n        //Parsing\n        String pattern = \"d-MM-yyyy HH:mm\";\n        DateTimeFormatter dtF1 = DateTimeFormatter.ofPattern(pattern);\n\n        LocalDateTime ldp1 = LocalDateTime.parse(\"2014-03-25T01:30\"), //Default format\n                      ldp2 = LocalDateTime.parse(\"15-05-2016 13:55\",dtF1); //Custom format\n\n        System.out.println(ldp1 + \"\\n\" + ldp2); //Will be printed in Default format\n\n        //Formatting\n        DateTimeFormatter dtF2 = DateTimeFormatter.ofPattern(\"EEE d, MMMM, yyyy HH:mm\");\n        \n        DateTimeFormatter dtF3 = DateTimeFormatter.ISO_LOCAL_DATE_TIME;\n\n        LocalDateTime ldtf1 = LocalDateTime.now();\n\n        System.out.println(ldtf1.format(dtF2) +\"\\n\"+ldtf1.format(dtF3));\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518074436,
        "id": "94e5b3ad-4fcf-44ee-b33b-56a1881c5a88",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518074436,
        "parent_id": "6d4cccae-fc91-4f8b-851b-23f40d2a70c7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An important notice, instead of using Custom patterns, it is good practice to use predefined formatters. Your code look more clear and usage of ISO8061 will definitely help you in the long run."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An important notice, instead of using Custom patterns, it is good practice to use predefined formatters. Your code look more clear and usage of ISO8061 will definitely help you in the long run."
          }
        ]
      }
    ],
    "title": "Date Time Formatting",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}