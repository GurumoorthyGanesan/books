{
  "ID": "bcd97556-5763-4bc9-a016-6cf1133f0741",
  "Root": {
    "alive": true,
    "content": [
      "1a449bd3-0208-4d31-bf20-d1c540991b18",
      "e3e1538a-cd52-4621-9390-c69f6c368a1c",
      "2ddb6be3-99a6-4a55-955f-f3203dda7da3",
      "0bc206a4-02b0-4dd0-bfa8-c61b43440204",
      "acc9d143-34ca-44d3-baa2-d766bd42e53c",
      "472050ec-fec7-40fa-999f-deffbce5e5d9",
      "97f755a0-bf56-4b25-80ec-0c58e55348c2",
      "e5304a9c-beab-4fc7-9e87-f3bebc00a879",
      "6663c976-f5bc-4fef-bf52-abd206ad9f7b",
      "bfcc480b-ba40-4e61-9953-1a0a4d3c68f2"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460087401,
    "id": "bcd97556-5763-4bc9-a016-6cf1133f0741",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550519340000,
    "parent_id": "aaf522ec-ec58-4c19-b129-bf870a37c471",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Implementing multiple interfaces"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460087394,
        "id": "1a449bd3-0208-4d31-bf20-d1c540991b18",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460087394,
        "parent_id": "bcd97556-5763-4bc9-a016-6cf1133f0741",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A Java class can implement multiple interfaces."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A Java class can implement multiple interfaces."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460087397,
        "id": "e3e1538a-cd52-4621-9390-c69f6c368a1c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460087397,
        "parent_id": "bcd97556-5763-4bc9-a016-6cf1133f0741",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public interface NoiseMaker {\n    String noise = \"Making Noise\"; // interface variables are public static final by default\n\n    String makeNoise(); //interface methods are public abstract by default\n}\n\npublic interface FoodEater {\n    void eat(Food food);\n}\n\npublic class Cat implements NoiseMaker, FoodEater { \n    @Override\n    public String makeNoise() {\n        return \"meow\";\n    }\n\n    @Override\n    public void eat(Food food) {\n        System.out.println(\"meows appreciatively\");\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public interface NoiseMaker {\n    String noise = \"Making Noise\"; // interface variables are public static final by default\n\n    String makeNoise(); //interface methods are public abstract by default\n}\n\npublic interface FoodEater {\n    void eat(Food food);\n}\n\npublic class Cat implements NoiseMaker, FoodEater { \n    @Override\n    public String makeNoise() {\n        return \"meow\";\n    }\n\n    @Override\n    public void eat(Food food) {\n        System.out.println(\"meows appreciatively\");\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460087399,
        "id": "2ddb6be3-99a6-4a55-955f-f3203dda7da3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460087399,
        "parent_id": "bcd97556-5763-4bc9-a016-6cf1133f0741",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Notice how the "
            ],
            [
              "Cat",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class "
            ],
            [
              "must",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " implement the inherited "
            ],
            [
              "abstract",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " methods in both the interfaces. Furthermore, notice how a class can practically implement as many interfaces as needed (there is a limit of "
            ],
            [
              "65,535",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " due to "
            ],
            [
              "JVM Limitation",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.11"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Notice how the "
          },
          {
            "Text": "Cat",
            "AttrFlags": 2
          },
          {
            "Text": " class "
          },
          {
            "Text": "must",
            "AttrFlags": 1
          },
          {
            "Text": " implement the inherited "
          },
          {
            "Text": "abstract",
            "AttrFlags": 2
          },
          {
            "Text": " methods in both the interfaces. Furthermore, notice how a class can practically implement as many interfaces as needed (there is a limit of "
          },
          {
            "Text": "65,535",
            "AttrFlags": 1
          },
          {
            "Text": " due to "
          },
          {
            "Text": "JVM Limitation",
            "Link": "https://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.11"
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460087399,
        "id": "0bc206a4-02b0-4dd0-bfa8-c61b43440204",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460087399,
        "parent_id": "bcd97556-5763-4bc9-a016-6cf1133f0741",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "NoiseMaker noiseMaker = new Cat(); // Valid\nFoodEater foodEater = new Cat(); // Valid\nCat cat = new Cat(); // valid\n\nCat invalid1 = new NoiseMaker(); // Invalid\nCat invalid2 = new FoodEater(); // Invalid"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "NoiseMaker noiseMaker = new Cat(); // Valid\nFoodEater foodEater = new Cat(); // Valid\nCat cat = new Cat(); // valid\n\nCat invalid1 = new NoiseMaker(); // Invalid\nCat invalid2 = new FoodEater(); // Invalid",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460087399,
        "id": "acc9d143-34ca-44d3-baa2-d766bd42e53c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460087399,
        "parent_id": "bcd97556-5763-4bc9-a016-6cf1133f0741",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460087400,
        "id": "472050ec-fec7-40fa-999f-deffbce5e5d9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460087400,
        "parent_id": "bcd97556-5763-4bc9-a016-6cf1133f0741",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All variables declared in an interface are "
            ],
            [
              "public static final",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "All variables declared in an interface are "
          },
          {
            "Text": "public static final",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460087401,
        "id": "97f755a0-bf56-4b25-80ec-0c58e55348c2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460087401,
        "parent_id": "bcd97556-5763-4bc9-a016-6cf1133f0741",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All methods declared in an interface methods are "
            ],
            [
              "public abstract",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (This statement is valid only through Java 7. From Java 8, you are allowed to have methods in an interface, which need not be abstract; such methods are known as "
            ],
            [
              "default methods",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/113/default-methods"
                ]
              ]
            ],
            [
              ")"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "All methods declared in an interface methods are "
          },
          {
            "Text": "public abstract",
            "AttrFlags": 2
          },
          {
            "Text": " (This statement is valid only through Java 7. From Java 8, you are allowed to have methods in an interface, which need not be abstract; such methods are known as "
          },
          {
            "Text": "default methods",
            "Link": "http://stackoverflow.com/documentation/java/113/default-methods"
          },
          {
            "Text": ")"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460087401,
        "id": "e5304a9c-beab-4fc7-9e87-f3bebc00a879",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460087401,
        "parent_id": "bcd97556-5763-4bc9-a016-6cf1133f0741",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Interfaces cannot be declared as "
            ],
            [
              "final",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Interfaces cannot be declared as "
          },
          {
            "Text": "final",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460087401,
        "id": "6663c976-f5bc-4fef-bf52-abd206ad9f7b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460087401,
        "parent_id": "bcd97556-5763-4bc9-a016-6cf1133f0741",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If more than one interface declares a method that has identical signature, then effectively it is treated as only one method and you cannot distinguish from which interface method is implemented"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If more than one interface declares a method that has identical signature, then effectively it is treated as only one method and you cannot distinguish from which interface method is implemented"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460087401,
        "id": "bfcc480b-ba40-4e61-9953-1a0a4d3c68f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460087401,
        "parent_id": "bcd97556-5763-4bc9-a016-6cf1133f0741",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A corresponding "
            ],
            [
              "InterfaceName.class",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " file would be generated for each interface, upon compilation"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "A corresponding "
          },
          {
            "Text": "InterfaceName.class",
            "AttrFlags": 1
          },
          {
            "Text": " file would be generated for each interface, upon compilation"
          }
        ]
      }
    ],
    "title": "020 Implementing multiple interfaces"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}