{
  "ID": "bd4e56a5-51ee-40d6-8cf6-b40679a0e084",
  "Root": {
    "alive": true,
    "content": [
      "f9b18e4f-a708-46ae-a629-c2e265560f46",
      "022716dc-7fe5-408f-87bd-eebf536075c3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460522090,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "bd4e56a5-51ee-40d6-8cf6-b40679a0e084",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551753058392,
    "parent_id": "73baf53a-7a2f-4a55-b55d-1d231e864e0d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using XmlAdapter to generate desired xml format"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460522087,
        "id": "f9b18e4f-a708-46ae-a629-c2e265560f46",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460522087,
        "parent_id": "bd4e56a5-51ee-40d6-8cf6-b40679a0e084",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When desired XML format differs from Java object model, an XmlAdapter implementation can be used to transform model object into xml-format object and vice versa. This example demonstrates how to put a field’s value into an attribute of an element with field’s name."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When desired XML format differs from Java object model, an XmlAdapter implementation can be used to transform model object into xml-format object and vice versa. This example demonstrates how to put a field’s value into an attribute of an element with field’s name."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460522089,
        "id": "022716dc-7fe5-408f-87bd-eebf536075c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460522089,
        "parent_id": "bd4e56a5-51ee-40d6-8cf6-b40679a0e084",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class XmlAdapterExample {\n\n    @XmlAccessorType(XmlAccessType.FIELD)\n    public static class NodeValueElement {\n          \n        @XmlAttribute(name=\"attrValue\")\n        String value;\n    \n        public NodeValueElement() {\n        }\n    \n        public NodeValueElement(String value) {\n            super();\n            this.value = value;\n        }\n    \n        public String getValue() {\n            return value;\n        }\n    \n        public void setValue(String value) {\n            this.value = value;\n        }\n    }\n\n    public static class ValueAsAttrXmlAdapter extends XmlAdapter\u003cNodeValueElement, String\u003e {        \n        @Override\n        public NodeValueElement marshal(String v) throws Exception {\n            return new NodeValueElement(v);\n        }\n        \n        @Override\n        public String unmarshal(NodeValueElement v) throws Exception {\n            if (v==null) return \"\";\n            return v.getValue();\n        }\n    }\n\n    @XmlRootElement(name=\"DataObject\")\n    @XmlAccessorType(XmlAccessType.FIELD)\n    public static class DataObject {\n        \n        String elementWithValue;\n\n        @XmlJavaTypeAdapter(value=ValueAsAttrXmlAdapter.class)\n        String elementWithAttribute;\n    }\n\n    public static void main(String[] args) {\n        DataObject data = new DataObject();\n        data.elementWithValue=\"value1\";\n        data.elementWithAttribute =\"value2\";\n        \n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        JAXB.marshal(data, baos);\n\n        String xmlString = new String(baos.toByteArray(), StandardCharsets.UTF_8);\n        \n        System.out.println(xmlString);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class XmlAdapterExample {\n\n    @XmlAccessorType(XmlAccessType.FIELD)\n    public static class NodeValueElement {\n          \n        @XmlAttribute(name=\"attrValue\")\n        String value;\n    \n        public NodeValueElement() {\n        }\n    \n        public NodeValueElement(String value) {\n            super();\n            this.value = value;\n        }\n    \n        public String getValue() {\n            return value;\n        }\n    \n        public void setValue(String value) {\n            this.value = value;\n        }\n    }\n\n    public static class ValueAsAttrXmlAdapter extends XmlAdapter\u003cNodeValueElement, String\u003e {        \n        @Override\n        public NodeValueElement marshal(String v) throws Exception {\n            return new NodeValueElement(v);\n        }\n        \n        @Override\n        public String unmarshal(NodeValueElement v) throws Exception {\n            if (v==null) return \"\";\n            return v.getValue();\n        }\n    }\n\n    @XmlRootElement(name=\"DataObject\")\n    @XmlAccessorType(XmlAccessType.FIELD)\n    public static class DataObject {\n        \n        String elementWithValue;\n\n        @XmlJavaTypeAdapter(value=ValueAsAttrXmlAdapter.class)\n        String elementWithAttribute;\n    }\n\n    public static void main(String[] args) {\n        DataObject data = new DataObject();\n        data.elementWithValue=\"value1\";\n        data.elementWithAttribute =\"value2\";\n        \n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        JAXB.marshal(data, baos);\n\n        String xmlString = new String(baos.toByteArray(), StandardCharsets.UTF_8);\n        \n        System.out.println(xmlString);\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Using XmlAdapter to generate desired xml format",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}