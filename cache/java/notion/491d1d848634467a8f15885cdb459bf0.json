{
  "ID": "491d1d84-8634-467a-8f15-885cdb459bf0",
  "Root": {
    "alive": true,
    "content": [
      "ff250d44-11fd-4e8a-8589-3f205c6357a4",
      "3975bb45-daf2-4a44-b07a-abc8334162bd",
      "3c15aebc-7c3d-496d-a620-a86f39d9d231",
      "382bdc96-239b-4d53-8598-5e72b329abc4",
      "a57e0763-46e3-4c24-b22f-cdbc62053bf6",
      "901a1fb5-f9ca-4e96-a79b-193ed3ecae35"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460540403,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "491d1d84-8634-467a-8f15-885cdb459bf0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551758863058,
    "parent_id": "c5f4838e-8ea8-4be5-9969-41936c9db840",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Basic ClientServer Communication using UDP Datagram"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460540402,
        "id": "ff250d44-11fd-4e8a-8589-3f205c6357a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460540402,
        "parent_id": "491d1d84-8634-467a-8f15-885cdb459bf0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Client.java"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Client.java"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460540403,
        "id": "3975bb45-daf2-4a44-b07a-abc8334162bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460540403,
        "parent_id": "491d1d84-8634-467a-8f15-885cdb459bf0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import java.io.*;\nimport java.net.*;\n    \npublic class Client{\n    public static void main(String [] args) throws IOException{\n        DatagramSocket clientSocket = new DatagramSocket(); \n        InetAddress address = InetAddress.getByName(args[0]);\n\n        String ex = \"Hello, World!\";\n        byte[] buf = ex.getBytes();\n\n        DatagramPacket packet = new DatagramPacket(buf,buf.length, address, 4160); \n        clientSocket.send(packet);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import java.io.*;\nimport java.net.*;\n    \npublic class Client{\n    public static void main(String [] args) throws IOException{\n        DatagramSocket clientSocket = new DatagramSocket(); \n        InetAddress address = InetAddress.getByName(args[0]);\n\n        String ex = \"Hello, World!\";\n        byte[] buf = ex.getBytes();\n\n        DatagramPacket packet = new DatagramPacket(buf,buf.length, address, 4160); \n        clientSocket.send(packet);\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460540403,
        "id": "3c15aebc-7c3d-496d-a620-a86f39d9d231",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460540403,
        "parent_id": "491d1d84-8634-467a-8f15-885cdb459bf0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this case, we pass in the address of the server, via an argument ("
            ],
            [
              "args[0]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "). The port we are using is 4160."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this case, we pass in the address of the server, via an argument ("
          },
          {
            "Text": "args[0]",
            "AttrFlags": 2
          },
          {
            "Text": "). The port we are using is 4160."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460540403,
        "id": "382bdc96-239b-4d53-8598-5e72b329abc4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460540403,
        "parent_id": "491d1d84-8634-467a-8f15-885cdb459bf0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Server.java"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Server.java"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460540403,
        "id": "a57e0763-46e3-4c24-b22f-cdbc62053bf6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460540403,
        "parent_id": "491d1d84-8634-467a-8f15-885cdb459bf0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import java.io.*;\nimport java.net.*;\n\npublic class Server{\n    public static void main(String [] args) throws IOException{\n        DatagramSocket serverSocket = new DatagramSocket(4160);\n\n        byte[] rbuf = new byte[256];\n        DatagramPacket packet = new DatagramPacket(rbuf, rbuf.length);        \n        serverSocket.receive(packet);\n        String response = new String(packet.getData());\n        System.out.println(\"Response: \" + response);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import java.io.*;\nimport java.net.*;\n\npublic class Server{\n    public static void main(String [] args) throws IOException{\n        DatagramSocket serverSocket = new DatagramSocket(4160);\n\n        byte[] rbuf = new byte[256];\n        DatagramPacket packet = new DatagramPacket(rbuf, rbuf.length);        \n        serverSocket.receive(packet);\n        String response = new String(packet.getData());\n        System.out.println(\"Response: \" + response);\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460540403,
        "id": "901a1fb5-f9ca-4e96-a79b-193ed3ecae35",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460540403,
        "parent_id": "491d1d84-8634-467a-8f15-885cdb459bf0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "On the server-side, declare a DatagramSocket on the same port which we sent our message to (4160) and wait for a response."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "On the server-side, declare a DatagramSocket on the same port which we sent our message to (4160) and wait for a response."
          }
        ]
      }
    ],
    "title": "Basic ClientServer Communication using UDP Datagram",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}