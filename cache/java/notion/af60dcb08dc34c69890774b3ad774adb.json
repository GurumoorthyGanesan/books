{
  "ID": "af60dcb0-8dc3-4c69-8907-74b3ad774adb",
  "Root": {
    "alive": true,
    "content": [
      "a6cc23d0-e1e5-400a-93a5-4dce449cf2bc",
      "1549ec0d-27f2-4644-8643-e298654c94d5",
      "0ab7db7d-5c6f-4312-9bec-9dbfece66085",
      "8d758bd1-e308-4e81-97fc-f631faa2310f",
      "c6418c04-a587-4bcc-841b-15d2b5c6b0fa",
      "36069048-c59d-4961-8be0-c2c65a4efe95",
      "989cd4e6-f73e-44e2-a3c4-4f8fb9ef367e",
      "4142eb90-8738-4682-b98a-f0768df44c6a",
      "b77f71a8-0ac0-4e50-bd5c-01c726b88d0f",
      "0ba606f2-497a-4007-9da8-36e6021d5e03",
      "53eebd62-2cbf-4c72-b389-97405f4e6aca"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550461478034,
    "id": "af60dcb0-8dc3-4c69-8907-74b3ad774adb",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550461478034,
    "parent_id": "e002cb8c-12c8-449b-b5bd-f52de1b3d39a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 Viewing bytecode with javap"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461478031,
        "id": "a6cc23d0-e1e5-400a-93a5-4dce449cf2bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461478031,
        "parent_id": "af60dcb0-8dc3-4c69-8907-74b3ad774adb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you want to see the generated bytecode for a Java program, you can use the provided "
            ],
            [
              "javap",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " command to view it."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you want to see the generated bytecode for a Java program, you can use the provided "
          },
          {
            "Text": "javap",
            "AttrFlags": 2
          },
          {
            "Text": " command to view it."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461478033,
        "id": "1549ec0d-27f2-4644-8643-e298654c94d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461478033,
        "parent_id": "af60dcb0-8dc3-4c69-8907-74b3ad774adb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Assuming that we have the following Java source file:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Assuming that we have the following Java source file:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461478034,
        "id": "0ab7db7d-5c6f-4312-9bec-9dbfece66085",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461478034,
        "parent_id": "af60dcb0-8dc3-4c69-8907-74b3ad774adb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "package com.stackoverflow.documentation;\n\nimport org.springframework.stereotype.Service;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.List;\n\n@Service\npublic class HelloWorldService {\n\n    public void sayHello() {\n        System.out.println(\"Hello, World!\");\n    }\n\n    private Object[] pvtMethod(List\u003cString\u003e strings) {\n        return new Object[]{strings};\n    }\n\n    protected String tryCatchResources(String filename) throws IOException {\n        try (InputStream inputStream = getClass().getResourceAsStream(filename)) {\n            byte[] bytes = new byte[8192];\n            int read = inputStream.read(bytes);\n            return new String(bytes, 0, read);\n        } catch (IOException | RuntimeException e) {\n            e.printStackTrace();\n            throw e;\n        }\n    }\n\n    void stuff() {\n        System.out.println(\"stuff\");\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "package com.stackoverflow.documentation;\n\nimport org.springframework.stereotype.Service;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.List;\n\n@Service\npublic class HelloWorldService {\n\n    public void sayHello() {\n        System.out.println(\"Hello, World!\");\n    }\n\n    private Object[] pvtMethod(List\u003cString\u003e strings) {\n        return new Object[]{strings};\n    }\n\n    protected String tryCatchResources(String filename) throws IOException {\n        try (InputStream inputStream = getClass().getResourceAsStream(filename)) {\n            byte[] bytes = new byte[8192];\n            int read = inputStream.read(bytes);\n            return new String(bytes, 0, read);\n        } catch (IOException | RuntimeException e) {\n            e.printStackTrace();\n            throw e;\n        }\n    }\n\n    void stuff() {\n        System.out.println(\"stuff\");\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461478034,
        "id": "8d758bd1-e308-4e81-97fc-f631faa2310f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461478034,
        "parent_id": "af60dcb0-8dc3-4c69-8907-74b3ad774adb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "After compiling the source file, the most simple usage is:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "After compiling the source file, the most simple usage is:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461478034,
        "id": "c6418c04-a587-4bcc-841b-15d2b5c6b0fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461478034,
        "parent_id": "af60dcb0-8dc3-4c69-8907-74b3ad774adb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "cd \u003cdirectory containing classes\u003e (e.g. target/classes)\njavap com/stackoverflow/documentation/SpringExample"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "cd \u003cdirectory containing classes\u003e (e.g. target/classes)\njavap com/stackoverflow/documentation/SpringExample",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461478034,
        "id": "36069048-c59d-4961-8be0-c2c65a4efe95",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461478034,
        "parent_id": "af60dcb0-8dc3-4c69-8907-74b3ad774adb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Which produces the output"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Which produces the output"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461478034,
        "id": "989cd4e6-f73e-44e2-a3c4-4f8fb9ef367e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461478034,
        "parent_id": "af60dcb0-8dc3-4c69-8907-74b3ad774adb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Compiled from \"HelloWorldService.java\"\npublic class com.stackoverflow.documentation.HelloWorldService {\n  public com.stackoverflow.documentation.HelloWorldService();\n  public void sayHello();\n  protected java.lang.String tryCatchResources(java.lang.String) throws java.io.IOException;\n  void stuff();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Compiled from \"HelloWorldService.java\"\npublic class com.stackoverflow.documentation.HelloWorldService {\n  public com.stackoverflow.documentation.HelloWorldService();\n  public void sayHello();\n  protected java.lang.String tryCatchResources(java.lang.String) throws java.io.IOException;\n  void stuff();\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461478034,
        "id": "4142eb90-8738-4682-b98a-f0768df44c6a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461478034,
        "parent_id": "af60dcb0-8dc3-4c69-8907-74b3ad774adb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This lists all non-private methods in the class, but that is not particularly useful for most purposes. The following command is a lot more useful:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This lists all non-private methods in the class, but that is not particularly useful for most purposes. The following command is a lot more useful:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461478034,
        "id": "b77f71a8-0ac0-4e50-bd5c-01c726b88d0f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461478034,
        "parent_id": "af60dcb0-8dc3-4c69-8907-74b3ad774adb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "javap -p -c -s -constants -l -v com/stackoverflow/documentation/HelloWorldService"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "javap -p -c -s -constants -l -v com/stackoverflow/documentation/HelloWorldService",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461478034,
        "id": "0ba606f2-497a-4007-9da8-36e6021d5e03",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461478034,
        "parent_id": "af60dcb0-8dc3-4c69-8907-74b3ad774adb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Which produces the output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Which produces the output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461478034,
        "id": "53eebd62-2cbf-4c72-b389-97405f4e6aca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461478034,
        "parent_id": "af60dcb0-8dc3-4c69-8907-74b3ad774adb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Classfile /Users/pivotal/IdeaProjects/stackoverflow-spring-docs/target/classes/com/stackoverflow/documentation/HelloWorldService.class\n  Last modified Jul 22, 2016; size 2167 bytes\n  MD5 checksum 6e33b5c292ead21701906353b7f06330\n  Compiled from \"HelloWorldService.java\"\npublic class com.stackoverflow.documentation.HelloWorldService\n  minor version: 0\n  major version: 51\n  flags: ACC_PUBLIC, ACC_SUPER\nConstant pool:\n    #1 = Methodref          #5.#60        // java/lang/Object.\"\u003cinit\u003e\":()V\n    #2 = Fieldref           #61.#62       // java/lang/System.out:Ljava/io/PrintStream;\n    #3 = String             #63           // Hello, World!\n    #4 = Methodref          #64.#65       // java/io/PrintStream.println:(Ljava/lang/String;)V\n    #5 = Class              #66           // java/lang/Object\n    #6 = Methodref          #5.#67        // java/lang/Object.getClass:()Ljava/lang/Class;\n    #7 = Methodref          #68.#69       // java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n    #8 = Methodref          #70.#71       // java/io/InputStream.read:([B)I\n    #9 = Class              #72           // java/lang/String\n   #10 = Methodref          #9.#73        // java/lang/String.\"\u003cinit\u003e\":([BII)V\n   #11 = Methodref          #70.#74       // java/io/InputStream.close:()V\n   #12 = Class              #75           // java/lang/Throwable\n   #13 = Methodref          #12.#76       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n   #14 = Class              #77           // java/io/IOException\n   #15 = Class              #78           // java/lang/RuntimeException\n   #16 = Methodref          #79.#80       // java/lang/Exception.printStackTrace:()V\n   #17 = String             #55           // stuff\n   #18 = Class              #81           // com/stackoverflow/documentation/HelloWorldService\n   #19 = Utf8               \u003cinit\u003e\n   #20 = Utf8               ()V\n   #21 = Utf8               Code\n   #22 = Utf8               LineNumberTable\n   #23 = Utf8               LocalVariableTable\n   #24 = Utf8               this\n   #25 = Utf8               Lcom/stackoverflow/documentation/HelloWorldService;\n   #26 = Utf8               sayHello\n   #27 = Utf8               pvtMethod\n   #28 = Utf8               (Ljava/util/List;)[Ljava/lang/Object;\n   #29 = Utf8               strings\n   #30 = Utf8               Ljava/util/List;\n   #31 = Utf8               LocalVariableTypeTable\n   #32 = Utf8               Ljava/util/List\u003cLjava/lang/String;\u003e;\n   #33 = Utf8               Signature\n   #34 = Utf8               (Ljava/util/List\u003cLjava/lang/String;\u003e;)[Ljava/lang/Object;\n   #35 = Utf8               tryCatchResources\n   #36 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n   #37 = Utf8               bytes\n   #38 = Utf8               [B\n   #39 = Utf8               read\n   #40 = Utf8               I\n   #41 = Utf8               inputStream\n   #42 = Utf8               Ljava/io/InputStream;\n   #43 = Utf8               e\n   #44 = Utf8               Ljava/lang/Exception;\n   #45 = Utf8               filename\n   #46 = Utf8               Ljava/lang/String;\n   #47 = Utf8               StackMapTable\n   #48 = Class              #81           // com/stackoverflow/documentation/HelloWorldService\n   #49 = Class              #72           // java/lang/String\n   #50 = Class              #82           // java/io/InputStream\n   #51 = Class              #75           // java/lang/Throwable\n   #52 = Class              #38           // \"[B\"\n   #53 = Class              #83           // java/lang/Exception\n   #54 = Utf8               Exceptions\n   #55 = Utf8               stuff\n   #56 = Utf8               SourceFile\n   #57 = Utf8               HelloWorldService.java\n   #58 = Utf8               RuntimeVisibleAnnotations\n   #59 = Utf8               Lorg/springframework/stereotype/Service;\n   #60 = NameAndType        #19:#20       // \"\u003cinit\u003e\":()V\n   #61 = Class              #84           // java/lang/System\n   #62 = NameAndType        #85:#86       // out:Ljava/io/PrintStream;\n   #63 = Utf8               Hello, World!\n   #64 = Class              #87           // java/io/PrintStream\n   #65 = NameAndType        #88:#89       // println:(Ljava/lang/String;)V\n   #66 = Utf8               java/lang/Object\n   #67 = NameAndType        #90:#91       // getClass:()Ljava/lang/Class;\n   #68 = Class              #92           // java/lang/Class\n   #69 = NameAndType        #93:#94       // getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n   #70 = Class              #82           // java/io/InputStream\n   #71 = NameAndType        #39:#95       // read:([B)I\n   #72 = Utf8               java/lang/String\n   #73 = NameAndType        #19:#96       // \"\u003cinit\u003e\":([BII)V\n   #74 = NameAndType        #97:#20       // close:()V\n   #75 = Utf8               java/lang/Throwable\n   #76 = NameAndType        #98:#99       // addSuppressed:(Ljava/lang/Throwable;)V\n   #77 = Utf8               java/io/IOException\n   #78 = Utf8               java/lang/RuntimeException\n   #79 = Class              #83           // java/lang/Exception\n   #80 = NameAndType        #100:#20      // printStackTrace:()V\n   #81 = Utf8               com/stackoverflow/documentation/HelloWorldService\n   #82 = Utf8               java/io/InputStream\n   #83 = Utf8               java/lang/Exception\n   #84 = Utf8               java/lang/System\n   #85 = Utf8               out\n   #86 = Utf8               Ljava/io/PrintStream;\n   #87 = Utf8               java/io/PrintStream\n   #88 = Utf8               println\n   #89 = Utf8               (Ljava/lang/String;)V\n   #90 = Utf8               getClass\n   #91 = Utf8               ()Ljava/lang/Class;\n   #92 = Utf8               java/lang/Class\n   #93 = Utf8               getResourceAsStream\n   #94 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;\n   #95 = Utf8               ([B)I\n   #96 = Utf8               ([BII)V\n   #97 = Utf8               close\n   #98 = Utf8               addSuppressed\n   #99 = Utf8               (Ljava/lang/Throwable;)V\n  #100 = Utf8               printStackTrace\n{\n  public com.stackoverflow.documentation.HelloWorldService();\n    descriptor: ()V\n    flags: ACC_PUBLIC\n    Code:\n      stack=1, locals=1, args_size=1\n         0: aload_0\n         1: invokespecial #1                  // Method java/lang/Object.\"\u003cinit\u003e\":()V\n         4: return\n      LineNumberTable:\n        line 10: 0\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n            0       5     0  this   Lcom/stackoverflow/documentation/HelloWorldService;\n\n  public void sayHello();\n    descriptor: ()V\n    flags: ACC_PUBLIC\n    Code:\n      stack=2, locals=1, args_size=1\n         0: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;\n         3: ldc           #3                  // String Hello, World!\n         5: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n         8: return\n      LineNumberTable:\n        line 13: 0\n        line 14: 8\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n            0       9     0  this   Lcom/stackoverflow/documentation/HelloWorldService;\n\n  private java.lang.Object[] pvtMethod(java.util.List\u003cjava.lang.String\u003e);\n    descriptor: (Ljava/util/List;)[Ljava/lang/Object;\n    flags: ACC_PRIVATE\n    Code:\n      stack=4, locals=2, args_size=2\n         0: iconst_1\n         1: anewarray     #5                  // class java/lang/Object\n         4: dup\n         5: iconst_0\n         6: aload_1\n         7: aastore\n         8: areturn\n      LineNumberTable:\n        line 17: 0\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n            0       9     0  this   Lcom/stackoverflow/documentation/HelloWorldService;\n            0       9     1 strings   Ljava/util/List;\n      LocalVariableTypeTable:\n        Start  Length  Slot  Name   Signature\n            0       9     1 strings   Ljava/util/List\u003cLjava/lang/String;\u003e;\n    Signature: #34                          // (Ljava/util/List\u003cLjava/lang/String;\u003e;)[Ljava/lang/Object;\n\n  protected java.lang.String tryCatchResources(java.lang.String) throws java.io.IOException;\n    descriptor: (Ljava/lang/String;)Ljava/lang/String;\n    flags: ACC_PROTECTED\n    Code:\n      stack=5, locals=10, args_size=2\n         0: aload_0\n         1: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         4: aload_1\n         5: invokevirtual #7                  // Method java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n         8: astore_2\n         9: aconst_null\n        10: astore_3\n        11: sipush        8192\n        14: newarray       byte\n        16: astore        4\n        18: aload_2\n        19: aload         4\n        21: invokevirtual #8                  // Method java/io/InputStream.read:([B)I\n        24: istore        5\n        26: new           #9                  // class java/lang/String\n        29: dup\n        30: aload         4\n        32: iconst_0\n        33: iload         5\n        35: invokespecial #10                 // Method java/lang/String.\"\u003cinit\u003e\":([BII)V\n        38: astore        6\n        40: aload_2\n        41: ifnull        70\n        44: aload_3\n        45: ifnull        66\n        48: aload_2\n        49: invokevirtual #11                 // Method java/io/InputStream.close:()V\n        52: goto          70\n        55: astore        7\n        57: aload_3\n        58: aload         7\n        60: invokevirtual #13                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n        63: goto          70\n        66: aload_2\n        67: invokevirtual #11                 // Method java/io/InputStream.close:()V\n        70: aload         6\n        72: areturn\n        73: astore        4\n        75: aload         4\n        77: astore_3\n        78: aload         4\n        80: athrow\n        81: astore        8\n        83: aload_2\n        84: ifnull        113\n        87: aload_3\n        88: ifnull        109\n        91: aload_2\n        92: invokevirtual #11                 // Method java/io/InputStream.close:()V\n        95: goto          113\n        98: astore        9\n       100: aload_3\n       101: aload         9\n       103: invokevirtual #13                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n       106: goto          113\n       109: aload_2\n       110: invokevirtual #11                 // Method java/io/InputStream.close:()V\n       113: aload         8\n       115: athrow\n       116: astore_2\n       117: aload_2\n       118: invokevirtual #16                 // Method java/lang/Exception.printStackTrace:()V\n       121: aload_2\n       122: athrow\n      Exception table:\n         from    to  target type\n            48    52    55   Class java/lang/Throwable\n            11    40    73   Class java/lang/Throwable\n            11    40    81   any\n            91    95    98   Class java/lang/Throwable\n            73    83    81   any\n             0    70   116   Class java/io/IOException\n             0    70   116   Class java/lang/RuntimeException\n            73   116   116   Class java/io/IOException\n            73   116   116   Class java/lang/RuntimeException\n      LineNumberTable:\n        line 21: 0\n        line 22: 11\n        line 23: 18\n        line 24: 26\n        line 25: 40\n        line 21: 73\n        line 25: 81\n        line 26: 117\n        line 27: 121\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           18      55     4 bytes   [B\n           26      47     5  read   I\n            9     107     2 inputStream   Ljava/io/InputStream;\n          117       6     2     e   Ljava/lang/Exception;\n            0     123     0  this   Lcom/stackoverflow/documentation/HelloWorldService;\n            0     123     1 filename   Ljava/lang/String;\n      StackMapTable: number_of_entries = 9\n        frame_type = 255 /* full_frame */\n          offset_delta = 55\n          locals = [ class com/stackoverflow/documentation/HelloWorldService, class java/lang/String, class java/io/InputStream, class java/lang/Throwable, class \"[B\", int, class java/lang/String ]\n          stack = [ class java/lang/Throwable ]\n        frame_type = 10 /* same */\n        frame_type = 3 /* same */\n        frame_type = 255 /* full_frame */\n          offset_delta = 2\n          locals = [ class com/stackoverflow/documentation/HelloWorldService, class java/lang/String, class java/io/InputStream, class java/lang/Throwable ]\n          stack = [ class java/lang/Throwable ]\n        frame_type = 71 /* same_locals_1_stack_item */\n          stack = [ class java/lang/Throwable ]\n        frame_type = 255 /* full_frame */\n          offset_delta = 16\n          locals = [ class com/stackoverflow/documentation/HelloWorldService, class java/lang/String, class java/io/InputStream, class java/lang/Throwable, top, top, top, top, class java/lang/Throwable ]\n          stack = [ class java/lang/Throwable ]\n        frame_type = 10 /* same */\n        frame_type = 3 /* same */\n        frame_type = 255 /* full_frame */\n          offset_delta = 2\n          locals = [ class com/stackoverflow/documentation/HelloWorldService, class java/lang/String ]\n          stack = [ class java/lang/Exception ]\n    Exceptions:\n      throws java.io.IOException\n\n  void stuff();\n    descriptor: ()V\n    flags:\n    Code:\n      stack=2, locals=1, args_size=1\n         0: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;\n         3: ldc           #17                 // String stuff\n         5: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n         8: return\n      LineNumberTable:\n        line 32: 0\n        line 33: 8\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n            0       9     0  this   Lcom/stackoverflow/documentation/HelloWorldService;\n}\nSourceFile: \"HelloWorldService.java\"\nRuntimeVisibleAnnotations:\n  0: #59()"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Classfile /Users/pivotal/IdeaProjects/stackoverflow-spring-docs/target/classes/com/stackoverflow/documentation/HelloWorldService.class\n  Last modified Jul 22, 2016; size 2167 bytes\n  MD5 checksum 6e33b5c292ead21701906353b7f06330\n  Compiled from \"HelloWorldService.java\"\npublic class com.stackoverflow.documentation.HelloWorldService\n  minor version: 0\n  major version: 51\n  flags: ACC_PUBLIC, ACC_SUPER\nConstant pool:\n    #1 = Methodref          #5.#60        // java/lang/Object.\"\u003cinit\u003e\":()V\n    #2 = Fieldref           #61.#62       // java/lang/System.out:Ljava/io/PrintStream;\n    #3 = String             #63           // Hello, World!\n    #4 = Methodref          #64.#65       // java/io/PrintStream.println:(Ljava/lang/String;)V\n    #5 = Class              #66           // java/lang/Object\n    #6 = Methodref          #5.#67        // java/lang/Object.getClass:()Ljava/lang/Class;\n    #7 = Methodref          #68.#69       // java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n    #8 = Methodref          #70.#71       // java/io/InputStream.read:([B)I\n    #9 = Class              #72           // java/lang/String\n   #10 = Methodref          #9.#73        // java/lang/String.\"\u003cinit\u003e\":([BII)V\n   #11 = Methodref          #70.#74       // java/io/InputStream.close:()V\n   #12 = Class              #75           // java/lang/Throwable\n   #13 = Methodref          #12.#76       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n   #14 = Class              #77           // java/io/IOException\n   #15 = Class              #78           // java/lang/RuntimeException\n   #16 = Methodref          #79.#80       // java/lang/Exception.printStackTrace:()V\n   #17 = String             #55           // stuff\n   #18 = Class              #81           // com/stackoverflow/documentation/HelloWorldService\n   #19 = Utf8               \u003cinit\u003e\n   #20 = Utf8               ()V\n   #21 = Utf8               Code\n   #22 = Utf8               LineNumberTable\n   #23 = Utf8               LocalVariableTable\n   #24 = Utf8               this\n   #25 = Utf8               Lcom/stackoverflow/documentation/HelloWorldService;\n   #26 = Utf8               sayHello\n   #27 = Utf8               pvtMethod\n   #28 = Utf8               (Ljava/util/List;)[Ljava/lang/Object;\n   #29 = Utf8               strings\n   #30 = Utf8               Ljava/util/List;\n   #31 = Utf8               LocalVariableTypeTable\n   #32 = Utf8               Ljava/util/List\u003cLjava/lang/String;\u003e;\n   #33 = Utf8               Signature\n   #34 = Utf8               (Ljava/util/List\u003cLjava/lang/String;\u003e;)[Ljava/lang/Object;\n   #35 = Utf8               tryCatchResources\n   #36 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n   #37 = Utf8               bytes\n   #38 = Utf8               [B\n   #39 = Utf8               read\n   #40 = Utf8               I\n   #41 = Utf8               inputStream\n   #42 = Utf8               Ljava/io/InputStream;\n   #43 = Utf8               e\n   #44 = Utf8               Ljava/lang/Exception;\n   #45 = Utf8               filename\n   #46 = Utf8               Ljava/lang/String;\n   #47 = Utf8               StackMapTable\n   #48 = Class              #81           // com/stackoverflow/documentation/HelloWorldService\n   #49 = Class              #72           // java/lang/String\n   #50 = Class              #82           // java/io/InputStream\n   #51 = Class              #75           // java/lang/Throwable\n   #52 = Class              #38           // \"[B\"\n   #53 = Class              #83           // java/lang/Exception\n   #54 = Utf8               Exceptions\n   #55 = Utf8               stuff\n   #56 = Utf8               SourceFile\n   #57 = Utf8               HelloWorldService.java\n   #58 = Utf8               RuntimeVisibleAnnotations\n   #59 = Utf8               Lorg/springframework/stereotype/Service;\n   #60 = NameAndType        #19:#20       // \"\u003cinit\u003e\":()V\n   #61 = Class              #84           // java/lang/System\n   #62 = NameAndType        #85:#86       // out:Ljava/io/PrintStream;\n   #63 = Utf8               Hello, World!\n   #64 = Class              #87           // java/io/PrintStream\n   #65 = NameAndType        #88:#89       // println:(Ljava/lang/String;)V\n   #66 = Utf8               java/lang/Object\n   #67 = NameAndType        #90:#91       // getClass:()Ljava/lang/Class;\n   #68 = Class              #92           // java/lang/Class\n   #69 = NameAndType        #93:#94       // getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n   #70 = Class              #82           // java/io/InputStream\n   #71 = NameAndType        #39:#95       // read:([B)I\n   #72 = Utf8               java/lang/String\n   #73 = NameAndType        #19:#96       // \"\u003cinit\u003e\":([BII)V\n   #74 = NameAndType        #97:#20       // close:()V\n   #75 = Utf8               java/lang/Throwable\n   #76 = NameAndType        #98:#99       // addSuppressed:(Ljava/lang/Throwable;)V\n   #77 = Utf8               java/io/IOException\n   #78 = Utf8               java/lang/RuntimeException\n   #79 = Class              #83           // java/lang/Exception\n   #80 = NameAndType        #100:#20      // printStackTrace:()V\n   #81 = Utf8               com/stackoverflow/documentation/HelloWorldService\n   #82 = Utf8               java/io/InputStream\n   #83 = Utf8               java/lang/Exception\n   #84 = Utf8               java/lang/System\n   #85 = Utf8               out\n   #86 = Utf8               Ljava/io/PrintStream;\n   #87 = Utf8               java/io/PrintStream\n   #88 = Utf8               println\n   #89 = Utf8               (Ljava/lang/String;)V\n   #90 = Utf8               getClass\n   #91 = Utf8               ()Ljava/lang/Class;\n   #92 = Utf8               java/lang/Class\n   #93 = Utf8               getResourceAsStream\n   #94 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;\n   #95 = Utf8               ([B)I\n   #96 = Utf8               ([BII)V\n   #97 = Utf8               close\n   #98 = Utf8               addSuppressed\n   #99 = Utf8               (Ljava/lang/Throwable;)V\n  #100 = Utf8               printStackTrace\n{\n  public com.stackoverflow.documentation.HelloWorldService();\n    descriptor: ()V\n    flags: ACC_PUBLIC\n    Code:\n      stack=1, locals=1, args_size=1\n         0: aload_0\n         1: invokespecial #1                  // Method java/lang/Object.\"\u003cinit\u003e\":()V\n         4: return\n      LineNumberTable:\n        line 10: 0\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n            0       5     0  this   Lcom/stackoverflow/documentation/HelloWorldService;\n\n  public void sayHello();\n    descriptor: ()V\n    flags: ACC_PUBLIC\n    Code:\n      stack=2, locals=1, args_size=1\n         0: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;\n         3: ldc           #3                  // String Hello, World!\n         5: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n         8: return\n      LineNumberTable:\n        line 13: 0\n        line 14: 8\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n            0       9     0  this   Lcom/stackoverflow/documentation/HelloWorldService;\n\n  private java.lang.Object[] pvtMethod(java.util.List\u003cjava.lang.String\u003e);\n    descriptor: (Ljava/util/List;)[Ljava/lang/Object;\n    flags: ACC_PRIVATE\n    Code:\n      stack=4, locals=2, args_size=2\n         0: iconst_1\n         1: anewarray     #5                  // class java/lang/Object\n         4: dup\n         5: iconst_0\n         6: aload_1\n         7: aastore\n         8: areturn\n      LineNumberTable:\n        line 17: 0\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n            0       9     0  this   Lcom/stackoverflow/documentation/HelloWorldService;\n            0       9     1 strings   Ljava/util/List;\n      LocalVariableTypeTable:\n        Start  Length  Slot  Name   Signature\n            0       9     1 strings   Ljava/util/List\u003cLjava/lang/String;\u003e;\n    Signature: #34                          // (Ljava/util/List\u003cLjava/lang/String;\u003e;)[Ljava/lang/Object;\n\n  protected java.lang.String tryCatchResources(java.lang.String) throws java.io.IOException;\n    descriptor: (Ljava/lang/String;)Ljava/lang/String;\n    flags: ACC_PROTECTED\n    Code:\n      stack=5, locals=10, args_size=2\n         0: aload_0\n         1: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         4: aload_1\n         5: invokevirtual #7                  // Method java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n         8: astore_2\n         9: aconst_null\n        10: astore_3\n        11: sipush        8192\n        14: newarray       byte\n        16: astore        4\n        18: aload_2\n        19: aload         4\n        21: invokevirtual #8                  // Method java/io/InputStream.read:([B)I\n        24: istore        5\n        26: new           #9                  // class java/lang/String\n        29: dup\n        30: aload         4\n        32: iconst_0\n        33: iload         5\n        35: invokespecial #10                 // Method java/lang/String.\"\u003cinit\u003e\":([BII)V\n        38: astore        6\n        40: aload_2\n        41: ifnull        70\n        44: aload_3\n        45: ifnull        66\n        48: aload_2\n        49: invokevirtual #11                 // Method java/io/InputStream.close:()V\n        52: goto          70\n        55: astore        7\n        57: aload_3\n        58: aload         7\n        60: invokevirtual #13                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n        63: goto          70\n        66: aload_2\n        67: invokevirtual #11                 // Method java/io/InputStream.close:()V\n        70: aload         6\n        72: areturn\n        73: astore        4\n        75: aload         4\n        77: astore_3\n        78: aload         4\n        80: athrow\n        81: astore        8\n        83: aload_2\n        84: ifnull        113\n        87: aload_3\n        88: ifnull        109\n        91: aload_2\n        92: invokevirtual #11                 // Method java/io/InputStream.close:()V\n        95: goto          113\n        98: astore        9\n       100: aload_3\n       101: aload         9\n       103: invokevirtual #13                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n       106: goto          113\n       109: aload_2\n       110: invokevirtual #11                 // Method java/io/InputStream.close:()V\n       113: aload         8\n       115: athrow\n       116: astore_2\n       117: aload_2\n       118: invokevirtual #16                 // Method java/lang/Exception.printStackTrace:()V\n       121: aload_2\n       122: athrow\n      Exception table:\n         from    to  target type\n            48    52    55   Class java/lang/Throwable\n            11    40    73   Class java/lang/Throwable\n            11    40    81   any\n            91    95    98   Class java/lang/Throwable\n            73    83    81   any\n             0    70   116   Class java/io/IOException\n             0    70   116   Class java/lang/RuntimeException\n            73   116   116   Class java/io/IOException\n            73   116   116   Class java/lang/RuntimeException\n      LineNumberTable:\n        line 21: 0\n        line 22: 11\n        line 23: 18\n        line 24: 26\n        line 25: 40\n        line 21: 73\n        line 25: 81\n        line 26: 117\n        line 27: 121\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           18      55     4 bytes   [B\n           26      47     5  read   I\n            9     107     2 inputStream   Ljava/io/InputStream;\n          117       6     2     e   Ljava/lang/Exception;\n            0     123     0  this   Lcom/stackoverflow/documentation/HelloWorldService;\n            0     123     1 filename   Ljava/lang/String;\n      StackMapTable: number_of_entries = 9\n        frame_type = 255 /* full_frame */\n          offset_delta = 55\n          locals = [ class com/stackoverflow/documentation/HelloWorldService, class java/lang/String, class java/io/InputStream, class java/lang/Throwable, class \"[B\", int, class java/lang/String ]\n          stack = [ class java/lang/Throwable ]\n        frame_type = 10 /* same */\n        frame_type = 3 /* same */\n        frame_type = 255 /* full_frame */\n          offset_delta = 2\n          locals = [ class com/stackoverflow/documentation/HelloWorldService, class java/lang/String, class java/io/InputStream, class java/lang/Throwable ]\n          stack = [ class java/lang/Throwable ]\n        frame_type = 71 /* same_locals_1_stack_item */\n          stack = [ class java/lang/Throwable ]\n        frame_type = 255 /* full_frame */\n          offset_delta = 16\n          locals = [ class com/stackoverflow/documentation/HelloWorldService, class java/lang/String, class java/io/InputStream, class java/lang/Throwable, top, top, top, top, class java/lang/Throwable ]\n          stack = [ class java/lang/Throwable ]\n        frame_type = 10 /* same */\n        frame_type = 3 /* same */\n        frame_type = 255 /* full_frame */\n          offset_delta = 2\n          locals = [ class com/stackoverflow/documentation/HelloWorldService, class java/lang/String ]\n          stack = [ class java/lang/Exception ]\n    Exceptions:\n      throws java.io.IOException\n\n  void stuff();\n    descriptor: ()V\n    flags:\n    Code:\n      stack=2, locals=1, args_size=1\n         0: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;\n         3: ldc           #17                 // String stuff\n         5: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n         8: return\n      LineNumberTable:\n        line 32: 0\n        line 33: 8\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n            0       9     0  this   Lcom/stackoverflow/documentation/HelloWorldService;\n}\nSourceFile: \"HelloWorldService.java\"\nRuntimeVisibleAnnotations:\n  0: #59()",
        "code_language": "Plain Text"
      }
    ],
    "title": "010 Viewing bytecode with javap"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}