{
  "ID": "07a755c7-8d02-47fc-97c5-37c5b4bb9816",
  "Root": {
    "alive": true,
    "content": [
      "a07a399f-cbbf-4255-8d12-a6c70e332953",
      "575e23a2-84c1-445b-9c65-0aefc2332a85"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460793061,
    "id": "07a755c7-8d02-47fc-97c5-37c5b4bb9816",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460793061,
    "parent_id": "168082aa-5571-487a-900c-cbc49e8a374b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "030 Using Iterable in for loop"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460793060,
        "id": "a07a399f-cbbf-4255-8d12-a6c70e332953",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460793060,
        "parent_id": "07a755c7-8d02-47fc-97c5-37c5b4bb9816",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Classes implementing "
            ],
            [
              "Iterable\u003c\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface can be used in "
            ],
            [
              "for",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " loops. This is actually only "
            ],
            [
              "syntactic sugar",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Syntactic_sugar"
                ]
              ]
            ],
            [
              " for getting an iterator from the object and using it to get all elements sequentially; it makes code clearer, faster to write end less error-prone."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Classes implementing "
          },
          {
            "Text": "Iterable\u003c\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " interface can be used in "
          },
          {
            "Text": "for",
            "AttrFlags": 2
          },
          {
            "Text": " loops. This is actually only "
          },
          {
            "Text": "syntactic sugar",
            "Link": "https://en.wikipedia.org/wiki/Syntactic_sugar"
          },
          {
            "Text": " for getting an iterator from the object and using it to get all elements sequentially; it makes code clearer, faster to write end less error-prone."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460793060,
        "id": "575e23a2-84c1-445b-9c65-0aefc2332a85",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460793060,
        "parent_id": "07a755c7-8d02-47fc-97c5-37c5b4bb9816",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class UsingIterable {\n\n    public static void main(String[] args) {\n        List\u003cInteger\u003e intList = Arrays.asList(1,2,3,4,5,6,7);\n        \n        // List extends Collection, Collection extends Iterable\n        Iterable\u003cInteger\u003e iterable = intList;\n        \n        // foreach-like loop\n        for (Integer i: iterable) {\n            System.out.println(i);\n        }\n        \n        // pre java 5 way of iterating loops\n        for(Iterator\u003cInteger\u003e i = iterable.iterator(); i.hasNext(); ) {\n            Integer item = i.next();\n            System.out.println(item);\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class UsingIterable {\n\n    public static void main(String[] args) {\n        List\u003cInteger\u003e intList = Arrays.asList(1,2,3,4,5,6,7);\n        \n        // List extends Collection, Collection extends Iterable\n        Iterable\u003cInteger\u003e iterable = intList;\n        \n        // foreach-like loop\n        for (Integer i: iterable) {\n            System.out.println(i);\n        }\n        \n        // pre java 5 way of iterating loops\n        for(Iterator\u003cInteger\u003e i = iterable.iterator(); i.hasNext(); ) {\n            Integer item = i.next();\n            System.out.println(item);\n        }\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "030 Using Iterable in for loop"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}