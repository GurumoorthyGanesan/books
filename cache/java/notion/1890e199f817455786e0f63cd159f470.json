{
  "ID": "1890e199-f817-4557-86e0-f63cd159f470",
  "Root": {
    "alive": true,
    "content": [
      "b17e7a8d-0f1a-4884-8470-f51495a75f44",
      "91a4b94a-8da5-4a0f-9e80-5e40b80817a8",
      "6dff1efd-fb2c-435c-adf9-69ec8e8f212e",
      "dca4d57d-a020-4796-a54e-339aab21d72e",
      "954582aa-fc8e-4b35-bb8b-96ecccaafaa2",
      "fe4c5599-d9b7-493e-9cac-5b09c7fbec5e",
      "a566d88c-ecf9-400d-a906-e0621b272613",
      "a74f7415-6ac9-460f-a126-c605a205b571",
      "af5cbcda-4236-4499-a6d3-a83d44a4ee01",
      "af54d106-2ca6-4fc8-8819-a362a3203795",
      "2e6719b0-3d4f-4219-9e43-e9bc28959c61",
      "529fdc90-1a12-4a7e-8f4b-ce06f566425c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460427982,
    "id": "1890e199-f817-4557-86e0-f63cd159f470",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460427982,
    "parent_id": "9b718882-2700-4d99-b7fa-082a618f32ef",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "040 Locks as Synchronisation aids"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460427976,
        "id": "b17e7a8d-0f1a-4884-8470-f51495a75f44",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460427976,
        "parent_id": "1890e199-f817-4557-86e0-f63cd159f470",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Prior to Java 5’s concurrent package introduction threading was more low level.The introduction of this package provided several higher level concurrent programming aids/constructs."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Prior to Java 5’s concurrent package introduction threading was more low level.The introduction of this package provided several higher level concurrent programming aids/constructs."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460427979,
        "id": "91a4b94a-8da5-4a0f-9e80-5e40b80817a8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460427979,
        "parent_id": "1890e199-f817-4557-86e0-f63cd159f470",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Locks are thread synchronisation mechanisms that essentially serve the same purpose as synchronized blocks or key words."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Locks are thread synchronisation mechanisms that essentially serve the same purpose as synchronized blocks or key words."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460427979,
        "id": "6dff1efd-fb2c-435c-adf9-69ec8e8f212e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460427979,
        "parent_id": "1890e199-f817-4557-86e0-f63cd159f470",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Intrinsic Locking",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Intrinsic Locking",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460427979,
        "id": "dca4d57d-a020-4796-a54e-339aab21d72e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460427979,
        "parent_id": "1890e199-f817-4557-86e0-f63cd159f470",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int count = 0; // shared among multiple threads\n\npublic void doSomething() {\n    synchronized(this) {\n        ++count; // a non-atomic operation\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int count = 0; // shared among multiple threads\n\npublic void doSomething() {\n    synchronized(this) {\n        ++count; // a non-atomic operation\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460427979,
        "id": "954582aa-fc8e-4b35-bb8b-96ecccaafaa2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460427979,
        "parent_id": "1890e199-f817-4557-86e0-f63cd159f470",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Synchronisation using Locks",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Synchronisation using Locks",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460427979,
        "id": "fe4c5599-d9b7-493e-9cac-5b09c7fbec5e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460427979,
        "parent_id": "1890e199-f817-4557-86e0-f63cd159f470",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int count = 0; // shared among multiple threads\n\nLock lockObj = new ReentrantLock();\npublic void doSomething() {\n    try {\n        lockObj.lock();\n        ++count; // a non-atomic operation\n    } finally {    \n        lockObj.unlock(); // sure to release the lock without fail\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int count = 0; // shared among multiple threads\n\nLock lockObj = new ReentrantLock();\npublic void doSomething() {\n    try {\n        lockObj.lock();\n        ++count; // a non-atomic operation\n    } finally {    \n        lockObj.unlock(); // sure to release the lock without fail\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460427980,
        "id": "a566d88c-ecf9-400d-a906-e0621b272613",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460427980,
        "parent_id": "1890e199-f817-4557-86e0-f63cd159f470",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Locks also have functionality available that intrinsic locking does not offer, such as locking but remaining responsive to interruption, or trying to lock, and not block when unable to."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Locks also have functionality available that intrinsic locking does not offer, such as locking but remaining responsive to interruption, or trying to lock, and not block when unable to."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460427980,
        "id": "a74f7415-6ac9-460f-a126-c605a205b571",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460427980,
        "parent_id": "1890e199-f817-4557-86e0-f63cd159f470",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Locking, responsive to interruption",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Locking, responsive to interruption",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460427980,
        "id": "af5cbcda-4236-4499-a6d3-a83d44a4ee01",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460427980,
        "parent_id": "1890e199-f817-4557-86e0-f63cd159f470",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Locky {\n    int count = 0; // shared among multiple threads\n\n    Lock lockObj = new ReentrantLock();\n\n    public void doSomething() {\n        try {\n            try {\n                lockObj.lockInterruptibly();\n                ++count; // a non-atomic operation\n            } catch (InterruptedException e) {\n                Thread.currentThread().interrupt(); // stopping\n            }\n        } finally {\n            if (!Thread.currentThread().isInterrupted()) {\n                lockObj.unlock(); // sure to release the lock without fail\n            }\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Locky {\n    int count = 0; // shared among multiple threads\n\n    Lock lockObj = new ReentrantLock();\n\n    public void doSomething() {\n        try {\n            try {\n                lockObj.lockInterruptibly();\n                ++count; // a non-atomic operation\n            } catch (InterruptedException e) {\n                Thread.currentThread().interrupt(); // stopping\n            }\n        } finally {\n            if (!Thread.currentThread().isInterrupted()) {\n                lockObj.unlock(); // sure to release the lock without fail\n            }\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460427980,
        "id": "af54d106-2ca6-4fc8-8819-a362a3203795",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460427980,
        "parent_id": "1890e199-f817-4557-86e0-f63cd159f470",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Only do something when able to lock",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Only do something when able to lock",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460427980,
        "id": "2e6719b0-3d4f-4219-9e43-e9bc28959c61",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460427980,
        "parent_id": "1890e199-f817-4557-86e0-f63cd159f470",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class Locky2 {\n    int count = 0; // shared among multiple threads\n\n    Lock lockObj = new ReentrantLock();\n\n    public void doSomething() {\n        boolean locked = lockObj.tryLock(); // returns true upon successful lock\n        if (locked) {\n            try {\n                ++count; // a non-atomic operation\n            } finally {\n                lockObj.unlock(); // sure to release the lock without fail\n            }\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class Locky2 {\n    int count = 0; // shared among multiple threads\n\n    Lock lockObj = new ReentrantLock();\n\n    public void doSomething() {\n        boolean locked = lockObj.tryLock(); // returns true upon successful lock\n        if (locked) {\n            try {\n                ++count; // a non-atomic operation\n            } finally {\n                lockObj.unlock(); // sure to release the lock without fail\n            }\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460427982,
        "id": "529fdc90-1a12-4a7e-8f4b-ce06f566425c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460427982,
        "parent_id": "1890e199-f817-4557-86e0-f63cd159f470",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are several variants of lock available.For more details refer the api docs "
            ],
            [
              "here",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/locks/package-summary.html"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are several variants of lock available.For more details refer the api docs "
          },
          {
            "Text": "here",
            "Link": "https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/locks/package-summary.html"
          }
        ]
      }
    ],
    "title": "040 Locks as Synchronisation aids"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}