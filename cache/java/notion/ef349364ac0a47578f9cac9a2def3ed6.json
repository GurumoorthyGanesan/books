{
  "ID": "ef349364-ac0a-4757-8f9c-ac9a2def3ed6",
  "Root": {
    "alive": true,
    "content": [
      "35b42558-0a35-4b10-9c4a-f3ad515aa52c",
      "626d3740-7fc2-4ea0-af8f-ce246f5357ec",
      "ee31ab08-0ff6-43f1-b5cd-870c9aff31c1",
      "82f97d92-9fcd-422d-b549-0d7de493ac43",
      "14ea34e7-5b51-44dd-a973-da2904e623d7",
      "fe25e0de-83f0-4d11-a9cc-ba5582057eaf",
      "b841a034-b0cf-4007-9d89-2aef8349c1e4",
      "d2979661-021c-49db-bd7d-bc47c0e5e186",
      "fa5c1ccd-e61d-40b1-b465-6d9d3f32bee0",
      "8b8d6209-c5e5-43d6-9d3d-d2c22f9825d5",
      "5d2bd924-50f1-40a5-b9e4-dd95f3a069f7",
      "b7acaa19-eae7-4371-b948-2d6304d7bc5f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550517993865,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ef349364-ac0a-4757-8f9c-ac9a2def3ed6",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551750626102,
    "parent_id": "65b3b4cb-dbb9-4dfb-9c83-9429dfa4e76a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Pitfall testing a file before attempting to open it."
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517993856,
        "id": "35b42558-0a35-4b10-9c4a-f3ad515aa52c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517993856,
        "parent_id": "ef349364-ac0a-4757-8f9c-ac9a2def3ed6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Some people recommend that you should apply various tests to a file before attempting to open it either to provide better diagnostics or avoid dealing with exceptions. For example, this method attempts to check if "
            ],
            [
              "path",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " corresponds to a readable file:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Some people recommend that you should apply various tests to a file before attempting to open it either to provide better diagnostics or avoid dealing with exceptions. For example, this method attempts to check if "
          },
          {
            "Text": "path",
            "AttrFlags": 2
          },
          {
            "Text": " corresponds to a readable file:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517993859,
        "id": "626d3740-7fc2-4ea0-af8f-ce246f5357ec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517993859,
        "parent_id": "ef349364-ac0a-4757-8f9c-ac9a2def3ed6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public static File getValidatedFile(String path) throws IOException {\n    File f = new File(path);\n    if (!f.exists()) throw new IOException(\"Error: not found: \" + path);\n    if (!f.isFile()) throw new IOException(\"Error: Is a directory: \" + path);\n    if (!f.canRead()) throw new IOException(\"Error: cannot read file: \" + path);\n    return f;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public static File getValidatedFile(String path) throws IOException {\n    File f = new File(path);\n    if (!f.exists()) throw new IOException(\"Error: not found: \" + path);\n    if (!f.isFile()) throw new IOException(\"Error: Is a directory: \" + path);\n    if (!f.canRead()) throw new IOException(\"Error: cannot read file: \" + path);\n    return f;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517993859,
        "id": "ee31ab08-0ff6-43f1-b5cd-870c9aff31c1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517993859,
        "parent_id": "ef349364-ac0a-4757-8f9c-ac9a2def3ed6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You might use the above method like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You might use the above method like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517993859,
        "id": "82f97d92-9fcd-422d-b549-0d7de493ac43",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517993859,
        "parent_id": "ef349364-ac0a-4757-8f9c-ac9a2def3ed6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "File f = null;\ntry {\n    f = getValidatedFile(\"somefile\");\n} catch (IOException ex) {\n    System.err.println(ex.getMessage());\n    return;\n}\ntry (InputStream is = new FileInputStream(file)) {\n    // Read data etc.\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "File f = null;\ntry {\n    f = getValidatedFile(\"somefile\");\n} catch (IOException ex) {\n    System.err.println(ex.getMessage());\n    return;\n}\ntry (InputStream is = new FileInputStream(file)) {\n    // Read data etc.\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517993859,
        "id": "14ea34e7-5b51-44dd-a973-da2904e623d7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517993859,
        "parent_id": "ef349364-ac0a-4757-8f9c-ac9a2def3ed6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The first problem is in the signature for "
            ],
            [
              "FileInputStream(File)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " because the compiler will still insist we catch "
            ],
            [
              "IOException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " here, or further up the stack."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The first problem is in the signature for "
          },
          {
            "Text": "FileInputStream(File)",
            "AttrFlags": 2
          },
          {
            "Text": " because the compiler will still insist we catch "
          },
          {
            "Text": "IOException",
            "AttrFlags": 2
          },
          {
            "Text": " here, or further up the stack."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517993860,
        "id": "fe25e0de-83f0-4d11-a9cc-ba5582057eaf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517993860,
        "parent_id": "ef349364-ac0a-4757-8f9c-ac9a2def3ed6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The second problem is that checks performed by "
            ],
            [
              "getValidatedFile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " do not guarantee that the "
            ],
            [
              "FileInputStream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will succeed."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The second problem is that checks performed by "
          },
          {
            "Text": "getValidatedFile",
            "AttrFlags": 2
          },
          {
            "Text": " do not guarantee that the "
          },
          {
            "Text": "FileInputStream",
            "AttrFlags": 2
          },
          {
            "Text": " will succeed."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517993861,
        "id": "b841a034-b0cf-4007-9d89-2aef8349c1e4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517993861,
        "parent_id": "ef349364-ac0a-4757-8f9c-ac9a2def3ed6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Race conditions: another thread or a separate process could rename the file, delete the file, or remove read access after the "
            ],
            [
              "getValidatedFile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns. That would lead to a “plain” "
            ],
            [
              "IOException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " without the custom message."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Race conditions: another thread or a separate process could rename the file, delete the file, or remove read access after the "
          },
          {
            "Text": "getValidatedFile",
            "AttrFlags": 2
          },
          {
            "Text": " returns. That would lead to a “plain” "
          },
          {
            "Text": "IOException",
            "AttrFlags": 2
          },
          {
            "Text": " without the custom message."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517993861,
        "id": "d2979661-021c-49db-bd7d-bc47c0e5e186",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517993861,
        "parent_id": "ef349364-ac0a-4757-8f9c-ac9a2def3ed6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are edge cases not covered by those tests. For example, on a system with SELinux in “enforcing” mode, an attempt to read a file can fail despite "
            ],
            [
              "canRead()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returning "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are edge cases not covered by those tests. For example, on a system with SELinux in “enforcing” mode, an attempt to read a file can fail despite "
          },
          {
            "Text": "canRead()",
            "AttrFlags": 2
          },
          {
            "Text": " returning "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517993863,
        "id": "fa5c1ccd-e61d-40b1-b465-6d9d3f32bee0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517993863,
        "parent_id": "ef349364-ac0a-4757-8f9c-ac9a2def3ed6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The third problem is that the tests are inefficient. For example, the "
            ],
            [
              "exists",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "isFile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "canRead",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " calls will each make a "
            ],
            [
              "syscall",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/System_call"
                ]
              ]
            ],
            [
              " to perform the required check. Another syscall is then made to open the file, which repeats the same checks behind the scenes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The third problem is that the tests are inefficient. For example, the "
          },
          {
            "Text": "exists",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "isFile",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "canRead",
            "AttrFlags": 2
          },
          {
            "Text": " calls will each make a "
          },
          {
            "Text": "syscall",
            "Link": "https://en.wikipedia.org/wiki/System_call"
          },
          {
            "Text": " to perform the required check. Another syscall is then made to open the file, which repeats the same checks behind the scenes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517993864,
        "id": "8b8d6209-c5e5-43d6-9d3d-d2c22f9825d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517993864,
        "parent_id": "ef349364-ac0a-4757-8f9c-ac9a2def3ed6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In short, methods like "
            ],
            [
              "getValidatedFile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are misguided. It is better to simply attempt to open the file and handle the exception:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In short, methods like "
          },
          {
            "Text": "getValidatedFile",
            "AttrFlags": 2
          },
          {
            "Text": " are misguided. It is better to simply attempt to open the file and handle the exception:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517993864,
        "id": "5d2bd924-50f1-40a5-b9e4-dd95f3a069f7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517993864,
        "parent_id": "ef349364-ac0a-4757-8f9c-ac9a2def3ed6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "try (InputStream is = new FileInputStream(\"somefile\")) {\n    // Read data etc.\n} catch (IOException ex) {\n    System.err.println(\"IO Error processing 'somefile': \" + ex.getMessage());\n    return;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "try (InputStream is = new FileInputStream(\"somefile\")) {\n    // Read data etc.\n} catch (IOException ex) {\n    System.err.println(\"IO Error processing 'somefile': \" + ex.getMessage());\n    return;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517993864,
        "id": "b7acaa19-eae7-4371-b948-2d6304d7bc5f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517993864,
        "parent_id": "ef349364-ac0a-4757-8f9c-ac9a2def3ed6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you wanted to distinguish IO errors thrown while opening and reading, you could use a nested try / catch. If you wanted to produce better diagnostics for open failures, you could perform the "
            ],
            [
              "exists",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "isFile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "canRead",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " checks in the handler."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you wanted to distinguish IO errors thrown while opening and reading, you could use a nested try / catch. If you wanted to produce better diagnostics for open failures, you could perform the "
          },
          {
            "Text": "exists",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "isFile",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "canRead",
            "AttrFlags": 2
          },
          {
            "Text": " checks in the handler."
          }
        ]
      }
    ],
    "title": "Pitfall testing a file before attempting to open it.",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}