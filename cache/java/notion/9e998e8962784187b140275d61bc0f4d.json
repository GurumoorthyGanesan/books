{
  "ID": "9e998e89-6278-4187-b140-275d61bc0f4d",
  "Root": {
    "alive": true,
    "content": [
      "95d58074-9728-4b81-a476-5a56655ca41e",
      "4fed6e5c-b818-4f5a-bb0e-2d7e72806587",
      "28273e23-03ed-4970-82f3-6d25d66f3723",
      "b47b2607-461b-44cf-898b-fad9c58f5099",
      "5c92b993-55d8-484b-b147-7e38dbbc8eb5",
      "3489c572-2489-4c08-9d0c-4cfb5eb5089e",
      "9bed6d24-2dde-42d9-b0b3-0916282db12a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460105510,
    "id": "9e998e89-6278-4187-b140-275d61bc0f4d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460105510,
    "parent_id": "3e5f6441-fbb7-4864-8927-1c1c812bd8c7",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "080 Flatten Streams with flatMap"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460105507,
        "id": "95d58074-9728-4b81-a476-5a56655ca41e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460105507,
        "parent_id": "9e998e89-6278-4187-b140-275d61bc0f4d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A "
            ],
            [
              "Stream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " of items that are in turn streamable can be flattened into a single continuous "
            ],
            [
              "Stream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A "
          },
          {
            "Text": "Stream",
            "AttrFlags": 2
          },
          {
            "Text": " of items that are in turn streamable can be flattened into a single continuous "
          },
          {
            "Text": "Stream",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460105509,
        "id": "4fed6e5c-b818-4f5a-bb0e-2d7e72806587",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460105509,
        "parent_id": "9e998e89-6278-4187-b140-275d61bc0f4d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Array of List of Items can be converted into a single List."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Array of List of Items can be converted into a single List."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460105510,
        "id": "28273e23-03ed-4970-82f3-6d25d66f3723",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460105510,
        "parent_id": "9e998e89-6278-4187-b140-275d61bc0f4d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "List\u003cString\u003e list1 =  Arrays.asList(\"one\", \"two\");\n      List\u003cString\u003e list2 =  Arrays.asList(\"three\",\"four\",\"five\");\n      List\u003cString\u003e list3 =  Arrays.asList(\"six\");\n          List\u003cString\u003e finalList = Stream.of(list1, list2, list3).flatMap(Collection::stream).collect(Collectors.toList());\nSystem.out.println(finalList);\n\n// [one, two, three, four, five, six]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "List\u003cString\u003e list1 =  Arrays.asList(\"one\", \"two\");\n      List\u003cString\u003e list2 =  Arrays.asList(\"three\",\"four\",\"five\");\n      List\u003cString\u003e list3 =  Arrays.asList(\"six\");\n          List\u003cString\u003e finalList = Stream.of(list1, list2, list3).flatMap(Collection::stream).collect(Collectors.toList());\nSystem.out.println(finalList);\n\n// [one, two, three, four, five, six]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460105510,
        "id": "b47b2607-461b-44cf-898b-fad9c58f5099",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460105510,
        "parent_id": "9e998e89-6278-4187-b140-275d61bc0f4d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Map containing List of Items as values can be Flattened to a Combined List"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Map containing List of Items as values can be Flattened to a Combined List"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460105510,
        "id": "5c92b993-55d8-484b-b147-7e38dbbc8eb5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460105510,
        "parent_id": "9e998e89-6278-4187-b140-275d61bc0f4d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Map\u003cString, List\u003cInteger\u003e\u003e map = new LinkedHashMap\u003c\u003e();\nmap.put(\"a\", Arrays.asList(1, 2, 3));\nmap.put(\"b\", Arrays.asList(4, 5, 6));\n\nList\u003cInteger\u003e allValues = map.values() // Collection\u003cList\u003cInteger\u003e\u003e\n        .stream()                      // Stream\u003cList\u003cInteger\u003e\u003e\n        .flatMap(List::stream)         // Stream\u003cInteger\u003e\n        .collect(Collectors.toList());\n\nSystem.out.println(allValues);\n// [1, 2, 3, 4, 5, 6]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Map\u003cString, List\u003cInteger\u003e\u003e map = new LinkedHashMap\u003c\u003e();\nmap.put(\"a\", Arrays.asList(1, 2, 3));\nmap.put(\"b\", Arrays.asList(4, 5, 6));\n\nList\u003cInteger\u003e allValues = map.values() // Collection\u003cList\u003cInteger\u003e\u003e\n        .stream()                      // Stream\u003cList\u003cInteger\u003e\u003e\n        .flatMap(List::stream)         // Stream\u003cInteger\u003e\n        .collect(Collectors.toList());\n\nSystem.out.println(allValues);\n// [1, 2, 3, 4, 5, 6]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460105510,
        "id": "3489c572-2489-4c08-9d0c-4cfb5eb5089e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460105510,
        "parent_id": "9e998e89-6278-4187-b140-275d61bc0f4d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "List",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " of "
            ],
            [
              "Map",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be flattened into a single continuous "
            ],
            [
              "Stream",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "List",
            "AttrFlags": 2
          },
          {
            "Text": " of "
          },
          {
            "Text": "Map",
            "AttrFlags": 2
          },
          {
            "Text": " can be flattened into a single continuous "
          },
          {
            "Text": "Stream",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460105510,
        "id": "9bed6d24-2dde-42d9-b0b3-0916282db12a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460105510,
        "parent_id": "9e998e89-6278-4187-b140-275d61bc0f4d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "List\u003cMap\u003cString, String\u003e\u003e list = new ArrayList\u003c\u003e();\nMap\u003cString,String\u003e map1 = new HashMap();\nmap1.put(\"1\", \"one\");\nmap1.put(\"2\", \"two\");\n\nMap\u003cString,String\u003e map2 = new HashMap();\nmap2.put(\"3\", \"three\");\nmap2.put(\"4\", \"four\");\nlist.add(map1);\nlist.add(map2);\n\n\nSet\u003cString\u003e output= list.stream()  //  Stream\u003cMap\u003cString, String\u003e\u003e\n    .map(Map::values)              // Stream\u003cList\u003cString\u003e\u003e\n    .flatMap(Collection::stream)   // Stream\u003cString\u003e\n    .collect(Collectors.toSet());  //Set\u003cString\u003e\n// [one, two, three,four]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "List\u003cMap\u003cString, String\u003e\u003e list = new ArrayList\u003c\u003e();\nMap\u003cString,String\u003e map1 = new HashMap();\nmap1.put(\"1\", \"one\");\nmap1.put(\"2\", \"two\");\n\nMap\u003cString,String\u003e map2 = new HashMap();\nmap2.put(\"3\", \"three\");\nmap2.put(\"4\", \"four\");\nlist.add(map1);\nlist.add(map2);\n\n\nSet\u003cString\u003e output= list.stream()  //  Stream\u003cMap\u003cString, String\u003e\u003e\n    .map(Map::values)              // Stream\u003cList\u003cString\u003e\u003e\n    .flatMap(Collection::stream)   // Stream\u003cString\u003e\n    .collect(Collectors.toSet());  //Set\u003cString\u003e\n// [one, two, three,four]",
        "code_language": "Plain Text"
      }
    ],
    "title": "080 Flatten Streams with flatMap"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}