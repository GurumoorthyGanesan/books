{
  "ID": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
  "Root": {
    "alive": true,
    "content": [
      "6a88aea4-f9c6-4690-82ec-517530b4df10",
      "15363488-1e4c-4498-979b-b60a2336a31a",
      "f9dfc9ea-c8c1-41f1-b1f8-ad90537736e4",
      "ba68e93b-63c6-489e-9f9e-424450554627",
      "661eabad-e84d-4939-8c69-bb780213ed1c",
      "f5246c64-89c0-43b9-83d0-24f39680735f",
      "33b35f5b-fe48-42f9-b14a-f65d580bf465",
      "e2658660-1ecd-45c1-8401-cff613f74baa",
      "f186e77c-e567-44aa-b0be-998379235426",
      "6a9417e4-7b00-4ff6-a3a3-3e18ab61a357",
      "d20beb50-9cfc-4dfb-a066-6952a4d59547",
      "5403afce-de78-4d05-b3a1-1a92fd452587",
      "c9fb4dd9-9142-434e-af8e-ed7cd99999db",
      "8bf333b3-7d0e-4dfb-b174-f76325d3e1cb",
      "cac8353a-b956-4161-a805-9358c527a7b4",
      "3e92465d-f031-4726-bef8-6dea91be11f0",
      "82e376a7-9737-4bf1-a81f-2a65e2c421a7",
      "f535deb1-da4e-47b6-9a54-67c7d2fb2897",
      "9cbd331a-b352-49d8-b3a7-f03af12747d4",
      "f6dcd4a3-e790-498e-99f1-8e1239d82601",
      "45e97ee0-6e94-45a1-9581-ce3681ab0816",
      "dea4c9c1-e336-40c1-b364-4a53faf5f94c",
      "1d3dc9c3-0e44-4d87-a9e2-00606c2b21f3",
      "211c24a7-4a1e-4865-a4f3-6326dd349e9c",
      "c5fdf5f4-8bdc-41dc-b9a5-f0a378a84865",
      "60b545d6-e991-49e8-aa9c-2c34a24d3c92",
      "52c1eb11-ba8b-40ab-aa93-e148d6ed471c",
      "b623bde8-7d90-4e39-8b3a-913a6b291ad6",
      "fab49fe2-768e-4b13-9de8-9f0c57920d44",
      "59d182ce-9af0-4ecf-a037-386fe35601d3",
      "425b4157-9977-4208-8fc9-5436f86cdeca",
      "7bb2369f-66b9-4808-9723-df40630d92a1",
      "1683d57d-dd91-40a2-85f9-29726be57d90",
      "7ad697c0-5170-4ff7-abc3-e68393898159",
      "2afc237c-51e2-43ad-bce1-89130c217681",
      "1a571a1a-b29d-4f1b-ba19-54b8af087e5e",
      "362ffeff-57b4-458d-a1cb-f038e40d6eed",
      "ac51096f-5f56-4710-bd1f-2791f89ae549",
      "667da324-e9d0-4a0c-a070-2f1f4cfe6df3",
      "0a030241-1cd2-451b-95dc-a6da38c53970",
      "3e45a536-cb13-4a9a-8687-41053771a68a",
      "6b0ef4cd-0578-49f1-8a83-c06b5914a364",
      "47c4585a-25d2-4e12-8540-09c9dc7118f5",
      "ee4b2286-606f-4f37-8a36-a9d19de70776",
      "ef3c40ec-bbdf-4248-92f0-6ad37cc87b1e",
      "b17f61a6-5c21-4cb1-a31c-e71c9e224b4d",
      "9c67d660-e224-4afd-abfe-c1c8196a8bd4"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550517994490,
    "id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550517994490,
    "parent_id": "65b3b4cb-dbb9-4dfb-9c83-9429dfa4e76a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "050 Pitfall thinking of variables as objects"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994477,
        "id": "6a88aea4-f9c6-4690-82ec-517530b4df10",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994477,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "No Java variable represents an object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "No Java variable represents an object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994480,
        "id": "15363488-1e4c-4498-979b-b60a2336a31a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994480,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "String foo;   // NOT AN OBJECT"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "String foo;   // NOT AN OBJECT",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994480,
        "id": "f9dfc9ea-c8c1-41f1-b1f8-ad90537736e4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994480,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Neither does any Java array contain objects."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Neither does any Java array contain objects."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994480,
        "id": "ba68e93b-63c6-489e-9f9e-424450554627",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994480,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "String bar[] = new String[100];  // No member is an object."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "String bar[] = new String[100];  // No member is an object.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994480,
        "id": "661eabad-e84d-4939-8c69-bb780213ed1c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994480,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you mistakenly think of variables as objects, the actual behavior of the Java language will surprise you."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you mistakenly think of variables as objects, the actual behavior of the Java language will surprise you."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994482,
        "id": "f5246c64-89c0-43b9-83d0-24f39680735f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994482,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For Java variables which have a primitive type (such as "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") the variable holds a copy of the value. All copies of a primitive value are indistinguishable; i.e. there is only one "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " value for the number one. Primitive values are not objects and they do not behave like objects."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "For Java variables which have a primitive type (such as "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": ") the variable holds a copy of the value. All copies of a primitive value are indistinguishable; i.e. there is only one "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " value for the number one. Primitive values are not objects and they do not behave like objects."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994482,
        "id": "33b35f5b-fe48-42f9-b14a-f65d580bf465",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994482,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For Java variables which have a reference type (either a class or an array type) the variable holds a reference. All copies of a reference are indistinguishable. References may point to objects, or they may be "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which means that they point to no object. However, they are not objects and they don’t behave like objects."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "For Java variables which have a reference type (either a class or an array type) the variable holds a reference. All copies of a reference are indistinguishable. References may point to objects, or they may be "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": " which means that they point to no object. However, they are not objects and they don’t behave like objects."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994482,
        "id": "e2658660-1ecd-45c1-8401-cff613f74baa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994482,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Variables are not objects in either case, and they don’t contain objects in either case. They may contain "
            ],
            [
              "references to objects",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", but that is saying something different."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Variables are not objects in either case, and they don’t contain objects in either case. They may contain "
          },
          {
            "Text": "references to objects",
            "AttrFlags": 4
          },
          {
            "Text": ", but that is saying something different."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994482,
        "id": "f186e77c-e567-44aa-b0be-998379235426",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994482,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example class"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example class"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994482,
        "id": "6a9417e4-7b00-4ff6-a3a3-3e18ab61a357",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994482,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The examples that follow use this class, which represents a point in 2D space."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The examples that follow use this class, which represents a point in 2D space."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994483,
        "id": "d20beb50-9cfc-4dfb-a066-6952a4d59547",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994483,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public final class MutableLocation {\n   public int x;\n   public int y;\n\n   public MutableLocation(int x, int y) {\n       this.x = x;\n       this.y = y;\n   }\n\n   public boolean equals(Object other) {\n       if (!(other instanceof MutableLocation) {\n           return false;\n       }\n       MutableLocation that = (MutableLocation) other;\n       return this.x == that.x \u0026\u0026 this.y == that.y;\n   }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public final class MutableLocation {\n   public int x;\n   public int y;\n\n   public MutableLocation(int x, int y) {\n       this.x = x;\n       this.y = y;\n   }\n\n   public boolean equals(Object other) {\n       if (!(other instanceof MutableLocation) {\n           return false;\n       }\n       MutableLocation that = (MutableLocation) other;\n       return this.x == that.x \u0026\u0026 this.y == that.y;\n   }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994483,
        "id": "5403afce-de78-4d05-b3a1-1a92fd452587",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994483,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An instance of this class is an object that has two fields "
            ],
            [
              "x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "y",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which have the type "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An instance of this class is an object that has two fields "
          },
          {
            "Text": "x",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "y",
            "AttrFlags": 2
          },
          {
            "Text": " which have the type "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994483,
        "id": "c9fb4dd9-9142-434e-af8e-ed7cd99999db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994483,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can have many instances of the "
            ],
            [
              "MutableLocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class. Some will represent the same locations in 2D space; i.e. the respective values of "
            ],
            [
              "x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "y",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will match. Others will represent different locations."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can have many instances of the "
          },
          {
            "Text": "MutableLocation",
            "AttrFlags": 2
          },
          {
            "Text": " class. Some will represent the same locations in 2D space; i.e. the respective values of "
          },
          {
            "Text": "x",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "y",
            "AttrFlags": 2
          },
          {
            "Text": " will match. Others will represent different locations."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994483,
        "id": "8bf333b3-7d0e-4dfb-b174-f76325d3e1cb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994483,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Multiple variables can point to the same object"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Multiple variables can point to the same object"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994483,
        "id": "cac8353a-b956-4161-a805-9358c527a7b4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994483,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "MutableLocation here = new MutableLocation(1, 2);\nMutableLocation there = here;\nMutableLocation elsewhere = new MutableLocation(1, 2);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "MutableLocation here = new MutableLocation(1, 2);\nMutableLocation there = here;\nMutableLocation elsewhere = new MutableLocation(1, 2);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994484,
        "id": "3e92465d-f031-4726-bef8-6dea91be11f0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994484,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the above, we have declared three variables "
            ],
            [
              "here",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "there",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "elsewhere",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that can hold references to "
            ],
            [
              "MutableLocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " objects."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the above, we have declared three variables "
          },
          {
            "Text": "here",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "there",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "elsewhere",
            "AttrFlags": 2
          },
          {
            "Text": " that can hold references to "
          },
          {
            "Text": "MutableLocation",
            "AttrFlags": 2
          },
          {
            "Text": " objects."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994484,
        "id": "82e376a7-9737-4bf1-a81f-2a65e2c421a7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994484,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you (incorrectly) think of these variables as being objects, then you are likely to misread the statements as saying:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you (incorrectly) think of these variables as being objects, then you are likely to misread the statements as saying:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994484,
        "id": "f535deb1-da4e-47b6-9a54-67c7d2fb2897",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994484,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "type": "quote",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994484,
        "id": "9cbd331a-b352-49d8-b3a7-f03af12747d4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994484,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Copy the location “[1, 2]” to "
            ],
            [
              "here",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Copy the location “[1, 2]” to "
          },
          {
            "Text": "here",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994485,
        "id": "f6dcd4a3-e790-498e-99f1-8e1239d82601",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994485,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Copy the location “[1, 2]” to "
            ],
            [
              "there",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Copy the location “[1, 2]” to "
          },
          {
            "Text": "there",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994485,
        "id": "45e97ee0-6e94-45a1-9581-ce3681ab0816",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994485,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Copy the location “[1, 2]” to "
            ],
            [
              "elsewhere",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Copy the location “[1, 2]” to "
          },
          {
            "Text": "elsewhere",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994485,
        "id": "dea4c9c1-e336-40c1-b364-4a53faf5f94c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994485,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "From that, you are likely to infer we have three independent objects in the three variables. In fact there are "
            ],
            [
              "only two objects created",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " by the above. The variables "
            ],
            [
              "here",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "there",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " actually refer to the same object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "From that, you are likely to infer we have three independent objects in the three variables. In fact there are "
          },
          {
            "Text": "only two objects created",
            "AttrFlags": 4
          },
          {
            "Text": " by the above. The variables "
          },
          {
            "Text": "here",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "there",
            "AttrFlags": 2
          },
          {
            "Text": " actually refer to the same object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994485,
        "id": "1d3dc9c3-0e44-4d87-a9e2-00606c2b21f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994485,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can demonstrate this. Assuming the variable declarations as above:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can demonstrate this. Assuming the variable declarations as above:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994486,
        "id": "211c24a7-4a1e-4865-a4f3-6326dd349e9c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994486,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "System.out.println(\"BEFORE: here.x is \" + here.x + \", there.x is \" + there.x +\n                   \"elsewhere.x is \" + elsewhere.x);\nhere.x = 42;\nSystem.out.println(\"AFTER: here.x is \" + here.x + \", there.x is \" + there.x +\n                   \"elsewhere.x is \" + elsewhere.x);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "System.out.println(\"BEFORE: here.x is \" + here.x + \", there.x is \" + there.x +\n                   \"elsewhere.x is \" + elsewhere.x);\nhere.x = 42;\nSystem.out.println(\"AFTER: here.x is \" + here.x + \", there.x is \" + there.x +\n                   \"elsewhere.x is \" + elsewhere.x);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994486,
        "id": "c5fdf5f4-8bdc-41dc-b9a5-f0a378a84865",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994486,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This will output the following:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This will output the following:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994486,
        "id": "60b545d6-e991-49e8-aa9c-2c34a24d3c92",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994486,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "BEFORE: here.x is 1, there.x is 1, elsewhere.x is 1\nAFTER: here.x is 42, there.x is 42, elsewhere.x is 1"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "BEFORE: here.x is 1, there.x is 1, elsewhere.x is 1\nAFTER: here.x is 42, there.x is 42, elsewhere.x is 1",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994486,
        "id": "52c1eb11-ba8b-40ab-aa93-e148d6ed471c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994486,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We assigned a new value to "
            ],
            [
              "here.x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and it changed the value that we see via "
            ],
            [
              "there.x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". They are referring to the same object. But the value that we see via "
            ],
            [
              "elsewhere.x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has not changed, so "
            ],
            [
              "elsewhere",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " must refer to a different object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We assigned a new value to "
          },
          {
            "Text": "here.x",
            "AttrFlags": 2
          },
          {
            "Text": " and it changed the value that we see via "
          },
          {
            "Text": "there.x",
            "AttrFlags": 2
          },
          {
            "Text": ". They are referring to the same object. But the value that we see via "
          },
          {
            "Text": "elsewhere.x",
            "AttrFlags": 2
          },
          {
            "Text": " has not changed, so "
          },
          {
            "Text": "elsewhere",
            "AttrFlags": 2
          },
          {
            "Text": " must refer to a different object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994486,
        "id": "b623bde8-7d90-4e39-8b3a-913a6b291ad6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994486,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If a variable was an object, then the assignment "
            ],
            [
              "here.x = 42",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " would not change "
            ],
            [
              "there.x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If a variable was an object, then the assignment "
          },
          {
            "Text": "here.x = 42",
            "AttrFlags": 2
          },
          {
            "Text": " would not change "
          },
          {
            "Text": "there.x",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994486,
        "id": "fab49fe2-768e-4b13-9de8-9f0c57920d44",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994486,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The equality operator does NOT test that two objects are equal"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "The equality operator does NOT test that two objects are equal"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994487,
        "id": "59d182ce-9af0-4ecf-a037-386fe35601d3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994487,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Applying the equality ("
            ],
            [
              "==",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") operator to reference values tests if the values refer to the same object. It does "
            ],
            [
              "not",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " test whether two (different) objects are “equal” in the intuitive sense."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Applying the equality ("
          },
          {
            "Text": "==",
            "AttrFlags": 2
          },
          {
            "Text": ") operator to reference values tests if the values refer to the same object. It does "
          },
          {
            "Text": "not",
            "AttrFlags": 4
          },
          {
            "Text": " test whether two (different) objects are “equal” in the intuitive sense."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994487,
        "id": "425b4157-9977-4208-8fc9-5436f86cdeca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994487,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "MutableLocation here = new MutableLocation(1, 2);\nMutableLocation there = here;\nMutableLocation elsewhere = new MutableLocation(1, 2);\n\nif (here == there) {\n    System.out.println(\"here is there\");\n}\nif (here == elsewhere) {\n    System.out.println(\"here is elsewhere\");\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "MutableLocation here = new MutableLocation(1, 2);\nMutableLocation there = here;\nMutableLocation elsewhere = new MutableLocation(1, 2);\n\nif (here == there) {\n    System.out.println(\"here is there\");\n}\nif (here == elsewhere) {\n    System.out.println(\"here is elsewhere\");\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994487,
        "id": "7bb2369f-66b9-4808-9723-df40630d92a1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994487,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This will print “here is there”, but it won’t print “here is elsewhere”. (The references in "
            ],
            [
              "here",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "elsewhere",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are for two distinct objects.)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This will print “here is there”, but it won’t print “here is elsewhere”. (The references in "
          },
          {
            "Text": "here",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "elsewhere",
            "AttrFlags": 2
          },
          {
            "Text": " are for two distinct objects.)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994487,
        "id": "1683d57d-dd91-40a2-85f9-29726be57d90",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994487,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By contrast, if we call the "
            ],
            [
              "equals(Object)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method that we implemented above, we are going to test if two "
            ],
            [
              "MutableLocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instances have an equal location."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By contrast, if we call the "
          },
          {
            "Text": "equals(Object)",
            "AttrFlags": 2
          },
          {
            "Text": " method that we implemented above, we are going to test if two "
          },
          {
            "Text": "MutableLocation",
            "AttrFlags": 2
          },
          {
            "Text": " instances have an equal location."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994487,
        "id": "7ad697c0-5170-4ff7-abc3-e68393898159",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994487,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if (here.equals(there)) {\n    System.out.println(\"here equals there\");\n}\nif (here.equals(elsewhere)) {\n    System.out.println(\"here equals elsewhere\");\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if (here.equals(there)) {\n    System.out.println(\"here equals there\");\n}\nif (here.equals(elsewhere)) {\n    System.out.println(\"here equals elsewhere\");\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994488,
        "id": "2afc237c-51e2-43ad-bce1-89130c217681",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994488,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This will print both messages. In particular, "
            ],
            [
              "here.equals(elsewhere)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " because the semantic criteria we chose for equality of two "
            ],
            [
              "MutableLocation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " objects has been satisfied."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This will print both messages. In particular, "
          },
          {
            "Text": "here.equals(elsewhere)",
            "AttrFlags": 2
          },
          {
            "Text": " returns "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": " because the semantic criteria we chose for equality of two "
          },
          {
            "Text": "MutableLocation",
            "AttrFlags": 2
          },
          {
            "Text": " objects has been satisfied."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994488,
        "id": "1a571a1a-b29d-4f1b-ba19-54b8af087e5e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994488,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Method calls do NOT pass objects at all"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Method calls do NOT pass objects at all"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994488,
        "id": "362ffeff-57b4-458d-a1cb-f038e40d6eed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994488,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Java method calls use "
            ],
            [
              "pass by value",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "1 to pass arguments and return a result."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Java method calls use "
          },
          {
            "Text": "pass by value",
            "AttrFlags": 4
          },
          {
            "Text": "1 to pass arguments and return a result."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994488,
        "id": "ac51096f-5f56-4710-bd1f-2791f89ae549",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994488,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When you pass a reference value to a method, you’re actually passing a reference to an object "
            ],
            [
              "by value",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", which means that it is creating a copy of the object reference."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When you pass a reference value to a method, you’re actually passing a reference to an object "
          },
          {
            "Text": "by value",
            "AttrFlags": 4
          },
          {
            "Text": ", which means that it is creating a copy of the object reference."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994488,
        "id": "667da324-e9d0-4a0c-a070-2f1f4cfe6df3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994488,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As long as both object references are still pointing to the same object, you can modify that object from either reference, and this is what causes confusion for some."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As long as both object references are still pointing to the same object, you can modify that object from either reference, and this is what causes confusion for some."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994489,
        "id": "0a030241-1cd2-451b-95dc-a6da38c53970",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994489,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, you are "
            ],
            [
              "not",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " passing an object by reference2. The distinction is that if the object reference copy is modified to point to another object, the original object reference will still point to the original object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, you are "
          },
          {
            "Text": "not",
            "AttrFlags": 4
          },
          {
            "Text": " passing an object by reference2. The distinction is that if the object reference copy is modified to point to another object, the original object reference will still point to the original object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994489,
        "id": "3e45a536-cb13-4a9a-8687-41053771a68a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994489,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void f(MutableLocation foo) {  \n    foo = new MutableLocation(3, 4);   // Point local foo at a different object.\n}\n\nvoid g() {\n    MutableLocation foo = MutableLocation(1, 2);\n    f(foo);\n    System.out.println(\"foo.x is \" + foo.x); // Prints \"foo.x is 1\".\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void f(MutableLocation foo) {  \n    foo = new MutableLocation(3, 4);   // Point local foo at a different object.\n}\n\nvoid g() {\n    MutableLocation foo = MutableLocation(1, 2);\n    f(foo);\n    System.out.println(\"foo.x is \" + foo.x); // Prints \"foo.x is 1\".\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994489,
        "id": "6b0ef4cd-0578-49f1-8a83-c06b5914a364",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994489,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Neither are you passing a copy of the object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Neither are you passing a copy of the object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994489,
        "id": "47c4585a-25d2-4e12-8540-09c9dc7118f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994489,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void f(MutableLocation foo) {  \n    foo.x = 42;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void f(MutableLocation foo) {  \n    foo.x = 42;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994489,
        "id": "ee4b2286-606f-4f37-8a36-a9d19de70776",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994489,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void g() {\n    MutableLocation foo = new MutableLocation(0, 0);\n    f(foo);\n    System.out.println(\"foo.x is \" + foo.x); // Prints \"foo.x is 42\"\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void g() {\n    MutableLocation foo = new MutableLocation(0, 0);\n    f(foo);\n    System.out.println(\"foo.x is \" + foo.x); // Prints \"foo.x is 42\"\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994489,
        "id": "ef3c40ec-bbdf-4248-92f0-6ad37cc87b1e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994489,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994489,
        "id": "b17f61a6-5c21-4cb1-a31c-e71c9e224b4d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994489,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "1 - In languages like Python and Ruby, the term “pass by sharing” is preferred for “pass by value” of an object / reference."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "1 - In languages like Python and Ruby, the term “pass by sharing” is preferred for “pass by value” of an object / reference."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550517994489,
        "id": "9c67d660-e224-4afd-abfe-c1c8196a8bd4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550517994489,
        "parent_id": "5bda0e21-dea9-48e0-884c-4aff6447f1d3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "2 - The term “pass by reference” or “call by reference” has a very specific meaning in programming language terminology. In effect, it means that you pass the address "
            ],
            [
              "of a variable or an array element",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", so that when the called method assigns a new value to the formal argument, it changes the value in the original variable. Java does not support this. For a more fulsome description of different mechanisms for passing parameters, please refer to https://en.wikipedia.org/wiki/Evaluation_strategy."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "2 - The term “pass by reference” or “call by reference” has a very specific meaning in programming language terminology. In effect, it means that you pass the address "
          },
          {
            "Text": "of a variable or an array element",
            "AttrFlags": 4
          },
          {
            "Text": ", so that when the called method assigns a new value to the formal argument, it changes the value in the original variable. Java does not support this. For a more fulsome description of different mechanisms for passing parameters, please refer to https://en.wikipedia.org/wiki/Evaluation_strategy."
          }
        ]
      }
    ],
    "title": "050 Pitfall thinking of variables as objects"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}