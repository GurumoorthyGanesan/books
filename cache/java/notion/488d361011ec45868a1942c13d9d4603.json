{
  "ID": "488d3610-11ec-4586-8a19-42c13d9d4603",
  "Root": {
    "alive": true,
    "content": [
      "d37f97fd-e79b-490e-a7b5-7be4d01d493d",
      "37c985c6-153f-4da3-ab86-71e07222b568"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460721086,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "488d3610-11ec-4586-8a19-42c13d9d4603",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460721086,
    "parent_id": "7f371e05-b7ff-48ea-9972-81e7db63652e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Runtime annotation checks via reflection"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460721082,
        "id": "d37f97fd-e79b-490e-a7b5-7be4d01d493d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460721082,
        "parent_id": "488d3610-11ec-4586-8a19-42c13d9d4603",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Java’s Reflection API allows the programmer to perform various checks and operations on class fields, methods and annotations during runtime. However, in order for an annotation to be at all visible at runtime, the "
            ],
            [
              "RetentionPolicy",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " must be changed to "
            ],
            [
              "RUNTIME",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", as demonstrated in the example below:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Java’s Reflection API allows the programmer to perform various checks and operations on class fields, methods and annotations during runtime. However, in order for an annotation to be at all visible at runtime, the "
          },
          {
            "Text": "RetentionPolicy",
            "AttrFlags": 2
          },
          {
            "Text": " must be changed to "
          },
          {
            "Text": "RUNTIME",
            "AttrFlags": 2
          },
          {
            "Text": ", as demonstrated in the example below:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460721086,
        "id": "37c985c6-153f-4da3-ab86-71e07222b568",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460721086,
        "parent_id": "488d3610-11ec-4586-8a19-42c13d9d4603",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@interface MyDefaultAnnotation {\n\n}\n\n@Retention(RetentionPolicy.RUNTIME)\n@interface MyRuntimeVisibleAnnotation {\n\n}\n\npublic class AnnotationAtRuntimeTest {\n\n    @MyDefaultAnnotation\n    static class RuntimeCheck1 {\n    }\n    \n    @MyRuntimeVisibleAnnotation\n    static class RuntimeCheck2 {\n    }\n    \n    public static void main(String[] args) {\n        Annotation[] annotationsByType = RuntimeCheck1.class.getAnnotations();\n        Annotation[] annotationsByType2 = RuntimeCheck2.class.getAnnotations();\n\n        System.out.println(\"default retention: \" + Arrays.toString(annotationsByType));\n        System.out.println(\"runtime retention: \" + Arrays.toString(annotationsByType2));\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@interface MyDefaultAnnotation {\n\n}\n\n@Retention(RetentionPolicy.RUNTIME)\n@interface MyRuntimeVisibleAnnotation {\n\n}\n\npublic class AnnotationAtRuntimeTest {\n\n    @MyDefaultAnnotation\n    static class RuntimeCheck1 {\n    }\n    \n    @MyRuntimeVisibleAnnotation\n    static class RuntimeCheck2 {\n    }\n    \n    public static void main(String[] args) {\n        Annotation[] annotationsByType = RuntimeCheck1.class.getAnnotations();\n        Annotation[] annotationsByType2 = RuntimeCheck2.class.getAnnotations();\n\n        System.out.println(\"default retention: \" + Arrays.toString(annotationsByType));\n        System.out.println(\"runtime retention: \" + Arrays.toString(annotationsByType2));\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Runtime annotation checks via reflection",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}