{
  "ID": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
  "Root": {
    "alive": true,
    "content": [
      "947f6c7a-3fe2-4fc2-a70c-e45ec5206178",
      "6b500a49-05e1-45a5-a103-9f86393e0422",
      "b792efe8-da79-4ccf-8794-7f9a0bb202d5",
      "acd1218e-c4d3-4bfe-ba05-68bc85c19197",
      "0e4d743a-3272-4585-8341-2e191cdaf24b",
      "033bf711-e522-41fe-a6eb-e187df8f1390",
      "d7549605-ae7c-4546-bb03-ab0527efb924",
      "e9805ad9-2646-4647-834a-98d0579dae56",
      "73ed5aea-fd6b-4b4c-9629-573117038334",
      "293c2d4a-1af0-4c8b-8e8f-76a1bfe35e6a",
      "cdd2bd0a-63cb-493e-944c-19280c2a818e",
      "48e6f3db-a54d-4685-9172-59a805be4654",
      "dfcee5bf-0620-4734-b2e4-96351b9205d8",
      "f7a9015f-2924-4727-a1c6-e25667da4983",
      "43eb205f-8748-452f-a1ed-a72f8dbdc003",
      "f708b4ae-c101-4012-af1d-2d1ec77b74cd",
      "73138102-5359-4dbd-8645-005751b51532",
      "d7a46d80-05c8-45f5-ba1c-1e5b43dfe094",
      "656a3404-3b7a-4d61-8e02-e8fc57a49cda",
      "892dbe2d-cc8c-4049-b228-b64280785195",
      "b9b8b19c-210c-417d-bb8f-8dc62d316cbb",
      "2b5f1597-c3e0-4d69-84c2-7f0c057e7c17",
      "5b0f434e-9f68-4d3d-a241-a7ba128dc1d6",
      "39f968c5-163e-479c-80a0-c92e2861015d",
      "0ec9348a-db44-40ca-a109-7e53598b0a1a",
      "2eaf3235-fa66-403f-aef0-d61db01053ac"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460184161,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551742333019,
    "parent_id": "bcd7d24d-a9b8-40ba-ac61-89bb802d73b5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Creating a List from an Array"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184153,
        "id": "947f6c7a-3fe2-4fc2-a70c-e45ec5206178",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184153,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "Arrays.asList()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#asList-T...-"
                ]
              ]
            ],
            [
              " method can be used to return a fixed-size "
            ],
            [
              "List",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " containing the elements of the given array. The resulting "
            ],
            [
              "List",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be of the same parameter type as the base type of the array."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "Arrays.asList()",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#asList-T...-"
          },
          {
            "Text": " method can be used to return a fixed-size "
          },
          {
            "Text": "List",
            "AttrFlags": 2
          },
          {
            "Text": " containing the elements of the given array. The resulting "
          },
          {
            "Text": "List",
            "AttrFlags": 2
          },
          {
            "Text": " will be of the same parameter type as the base type of the array."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184153,
        "id": "6b500a49-05e1-45a5-a103-9f86393e0422",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184153,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "String[] stringArray = {\"foo\", \"bar\", \"baz\"};\nList\u003cString\u003e stringList = Arrays.asList(stringArray);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "String[] stringArray = {\"foo\", \"bar\", \"baz\"};\nList\u003cString\u003e stringList = Arrays.asList(stringArray);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184153,
        "id": "b792efe8-da79-4ccf-8794-7f9a0bb202d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184153,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": This list is backed by ("
            ],
            [
              "a view",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " of) the original array, meaning that any changes to the list will change the array and vice versa. However, changes to the list that would change its size (and hence the array length) will throw an exception."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note",
            "AttrFlags": 1
          },
          {
            "Text": ": This list is backed by ("
          },
          {
            "Text": "a view",
            "AttrFlags": 4
          },
          {
            "Text": " of) the original array, meaning that any changes to the list will change the array and vice versa. However, changes to the list that would change its size (and hence the array length) will throw an exception."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184154,
        "id": "acd1218e-c4d3-4bfe-ba05-68bc85c19197",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184154,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To create a copy of the list, use the constructor of "
            ],
            [
              "java.util.ArrayList",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/ArrayList.html#ArrayList-java.util.Collection-"
                ]
              ]
            ],
            [
              " taking a "
            ],
            [
              "Collection",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"
                ]
              ]
            ],
            [
              " as an argument:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To create a copy of the list, use the constructor of "
          },
          {
            "Text": "java.util.ArrayList",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/ArrayList.html#ArrayList-java.util.Collection-"
          },
          {
            "Text": " taking a "
          },
          {
            "Text": "Collection",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"
          },
          {
            "Text": " as an argument:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184154,
        "id": "0e4d743a-3272-4585-8341-2e191cdaf24b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184154,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "String[] stringArray = {\"foo\", \"bar\", \"baz\"};\nList\u003cString\u003e stringList = new ArrayList\u003cString\u003e(Arrays.asList(stringArray));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "String[] stringArray = {\"foo\", \"bar\", \"baz\"};\nList\u003cString\u003e stringList = new ArrayList\u003cString\u003e(Arrays.asList(stringArray));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184155,
        "id": "033bf711-e522-41fe-a6eb-e187df8f1390",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184155,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Java SE 7 and later, a pair of angle brackets "
            ],
            [
              "\u003c\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (empty set of type arguments) can be used, which is called the "
            ],
            [
              "Diamond",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/92/generics/457/diamond-operator"
                ]
              ]
            ],
            [
              ". The compiler can determine the type arguments from the context. This means the type information can be left out when calling the constructor of "
            ],
            [
              "ArrayList",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and it will be inferred automatically during compilation. This is called "
            ],
            [
              "Type Inference",
              [
                [
                  "a",
                  "http://docs.oracle.com/javase/8/docs/technotes/guides/language/type-inference-generic-instance-creation.html"
                ]
              ]
            ],
            [
              " which is a part of Java "
            ],
            [
              "Generics",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/92/generics/388/creating-a-generic-class"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Java SE 7 and later, a pair of angle brackets "
          },
          {
            "Text": "\u003c\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " (empty set of type arguments) can be used, which is called the "
          },
          {
            "Text": "Diamond",
            "Link": "http://stackoverflow.com/documentation/java/92/generics/457/diamond-operator"
          },
          {
            "Text": ". The compiler can determine the type arguments from the context. This means the type information can be left out when calling the constructor of "
          },
          {
            "Text": "ArrayList",
            "AttrFlags": 2
          },
          {
            "Text": " and it will be inferred automatically during compilation. This is called "
          },
          {
            "Text": "Type Inference",
            "Link": "http://docs.oracle.com/javase/8/docs/technotes/guides/language/type-inference-generic-instance-creation.html"
          },
          {
            "Text": " which is a part of Java "
          },
          {
            "Text": "Generics",
            "Link": "http://stackoverflow.com/documentation/java/92/generics/388/creating-a-generic-class"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184155,
        "id": "d7549605-ae7c-4546-bb03-ab0527efb924",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184155,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Using Arrays.asList()\n\nString[] stringArray = {\"foo\", \"bar\", \"baz\"};\nList\u003cString\u003e stringList = new ArrayList\u003c\u003e(Arrays.asList(stringArray));\n\n// Using ArrayList.addAll()\n\nString[] stringArray = {\"foo\", \"bar\", \"baz\"};\nArrayList\u003cString\u003e list = new ArrayList\u003c\u003e();\nlist.addAll(Arrays.asList(stringArray));\n\n// Using Collections.addAll()\n\nString[] stringArray = {\"foo\", \"bar\", \"baz\"};\nArrayList\u003cString\u003e list = new ArrayList\u003c\u003e();\nCollections.addAll(list, stringArray);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Using Arrays.asList()\n\nString[] stringArray = {\"foo\", \"bar\", \"baz\"};\nList\u003cString\u003e stringList = new ArrayList\u003c\u003e(Arrays.asList(stringArray));\n\n// Using ArrayList.addAll()\n\nString[] stringArray = {\"foo\", \"bar\", \"baz\"};\nArrayList\u003cString\u003e list = new ArrayList\u003c\u003e();\nlist.addAll(Arrays.asList(stringArray));\n\n// Using Collections.addAll()\n\nString[] stringArray = {\"foo\", \"bar\", \"baz\"};\nArrayList\u003cString\u003e list = new ArrayList\u003c\u003e();\nCollections.addAll(list, stringArray);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184156,
        "id": "e9805ad9-2646-4647-834a-98d0579dae56",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184156,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A point worth noting about the "
            ],
            [
              "Diamond",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/92/generics/457/diamond-operator"
                ]
              ]
            ],
            [
              " is that it cannot be used with "
            ],
            [
              "Anonymous Classes",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/java/1656/anonymous-classes"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A point worth noting about the "
          },
          {
            "Text": "Diamond",
            "Link": "http://stackoverflow.com/documentation/java/92/generics/457/diamond-operator"
          },
          {
            "Text": " is that it cannot be used with "
          },
          {
            "Text": "Anonymous Classes",
            "Link": "http://stackoverflow.com/documentation/java/1656/anonymous-classes"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184156,
        "id": "73ed5aea-fd6b-4b4c-9629-573117038334",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184156,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Using Streams\n\nint[] ints = {1, 2, 3};\nList\u003cInteger\u003e list = Arrays.stream(ints).boxed().collect(Collectors.toList());\n\nString[] stringArray = {\"foo\", \"bar\", \"baz\"};\nList\u003cObject\u003e list = Arrays.stream(stringArray).collect(Collectors.toList());"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Using Streams\n\nint[] ints = {1, 2, 3};\nList\u003cInteger\u003e list = Arrays.stream(ints).boxed().collect(Collectors.toList());\n\nString[] stringArray = {\"foo\", \"bar\", \"baz\"};\nList\u003cObject\u003e list = Arrays.stream(stringArray).collect(Collectors.toList());",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184156,
        "id": "293c2d4a-1af0-4c8b-8e8f-76a1bfe35e6a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184156,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "type": "sub_header",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184156,
        "id": "cdd2bd0a-63cb-493e-944c-19280c2a818e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184156,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Important notes related to using Arrays.asList() method"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Important notes related to using Arrays.asList() method"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184157,
        "id": "48e6f3db-a54d-4685-9172-59a805be4654",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184157,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This method returns "
            ],
            [
              "List",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is an instance of "
            ],
            [
              "Arrays$ArrayList",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "(static inner class of "
            ],
            [
              "Arrays",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") and not "
            ],
            [
              "java.util.ArrayList",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The resulting "
            ],
            [
              "List",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is of fixed-size. That means, adding or removing elements is not supported and will throw an "
            ],
            [
              "UnsupportedOperationException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "This method returns "
          },
          {
            "Text": "List",
            "AttrFlags": 2
          },
          {
            "Text": ", which is an instance of "
          },
          {
            "Text": "Arrays$ArrayList",
            "AttrFlags": 2
          },
          {
            "Text": "(static inner class of "
          },
          {
            "Text": "Arrays",
            "AttrFlags": 2
          },
          {
            "Text": ") and not "
          },
          {
            "Text": "java.util.ArrayList",
            "AttrFlags": 2
          },
          {
            "Text": ". The resulting "
          },
          {
            "Text": "List",
            "AttrFlags": 2
          },
          {
            "Text": " is of fixed-size. That means, adding or removing elements is not supported and will throw an "
          },
          {
            "Text": "UnsupportedOperationException",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184157,
        "id": "dfcee5bf-0620-4734-b2e4-96351b9205d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184157,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "stringList.add(\"something\"); // throws java.lang.UnsupportedOperationException"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "stringList.add(\"something\"); // throws java.lang.UnsupportedOperationException",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184158,
        "id": "f7a9015f-2924-4727-a1c6-e25667da4983",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184158,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A new "
            ],
            [
              "List",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be created by passing an array-backed "
            ],
            [
              "List",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to the constructor of a new "
            ],
            [
              "List",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This creates a new copy of the data, which has changeable size and that is not backed by the original array:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "A new "
          },
          {
            "Text": "List",
            "AttrFlags": 2
          },
          {
            "Text": " can be created by passing an array-backed "
          },
          {
            "Text": "List",
            "AttrFlags": 2
          },
          {
            "Text": " to the constructor of a new "
          },
          {
            "Text": "List",
            "AttrFlags": 2
          },
          {
            "Text": ". This creates a new copy of the data, which has changeable size and that is not backed by the original array:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184158,
        "id": "43eb205f-8748-452f-a1ed-a72f8dbdc003",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184158,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "List\u003cString\u003e modifiableList = new ArrayList\u003c\u003e(Arrays.asList(\"foo\", \"bar\"));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "List\u003cString\u003e modifiableList = new ArrayList\u003c\u003e(Arrays.asList(\"foo\", \"bar\"));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184159,
        "id": "f708b4ae-c101-4012-af1d-2d1ec77b74cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184159,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Calling "
            ],
            [
              "\u003cT\u003e List\u003cT\u003e asList(T... a)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " on a primitive array, such as an "
            ],
            [
              "int[]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", will produce a "
            ],
            [
              "List\u003cint[]\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " whose "
            ],
            [
              "only element is the source primitive array",
              [
                [
                  "a",
                  "http://stackoverflow.com/questions/2607289/converting-array-to-list-in-java"
                ]
              ]
            ],
            [
              " instead of the actual elements of the source array."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Calling "
          },
          {
            "Text": "\u003cT\u003e List\u003cT\u003e asList(T... a)",
            "AttrFlags": 2
          },
          {
            "Text": " on a primitive array, such as an "
          },
          {
            "Text": "int[]",
            "AttrFlags": 2
          },
          {
            "Text": ", will produce a "
          },
          {
            "Text": "List\u003cint[]\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " whose "
          },
          {
            "Text": "only element is the source primitive array",
            "Link": "http://stackoverflow.com/questions/2607289/converting-array-to-list-in-java"
          },
          {
            "Text": " instead of the actual elements of the source array."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184159,
        "id": "73138102-5359-4dbd-8645-005751b51532",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184159,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The reason for this behavior is that primitive types cannot be used in place of generic type parameters, so the entire primitive array replaces the generic type parameter in this case. In order to convert a primitive array to a "
            ],
            [
              "List",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", first of all, convert the primitive array to an array of the corresponding wrapper type (i.e. call "
            ],
            [
              "Arrays.asList",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " on an "
            ],
            [
              "Integer[]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instead of an "
            ],
            [
              "int[]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The reason for this behavior is that primitive types cannot be used in place of generic type parameters, so the entire primitive array replaces the generic type parameter in this case. In order to convert a primitive array to a "
          },
          {
            "Text": "List",
            "AttrFlags": 2
          },
          {
            "Text": ", first of all, convert the primitive array to an array of the corresponding wrapper type (i.e. call "
          },
          {
            "Text": "Arrays.asList",
            "AttrFlags": 2
          },
          {
            "Text": " on an "
          },
          {
            "Text": "Integer[]",
            "AttrFlags": 2
          },
          {
            "Text": " instead of an "
          },
          {
            "Text": "int[]",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184159,
        "id": "d7a46d80-05c8-45f5-ba1c-1e5b43dfe094",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184159,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Therefore, this will print "
            ],
            [
              "false",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Therefore, this will print "
          },
          {
            "Text": "false",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184159,
        "id": "656a3404-3b7a-4d61-8e02-e8fc57a49cda",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184159,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int[] arr = {1, 2, 3};      // primitive array of int\nSystem.out.println(Arrays.asList(arr).contains(1));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int[] arr = {1, 2, 3};      // primitive array of int\nSystem.out.println(Arrays.asList(arr).contains(1));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184160,
        "id": "892dbe2d-cc8c-4049-b228-b64280785195",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184160,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "View Demo",
              [
                [
                  "a",
                  "https://ideone.com/xiyy6o"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "View Demo",
            "Link": "https://ideone.com/xiyy6o"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184160,
        "id": "b9b8b19c-210c-417d-bb8f-8dc62d316cbb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184160,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "On the other hand, this will print "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "On the other hand, this will print "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184160,
        "id": "2b5f1597-c3e0-4d69-84c2-7f0c057e7c17",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184160,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Integer[] arr = {1, 2, 3};  // object array of Integer (wrapper for int)\nSystem.out.println(Arrays.asList(arr).contains(1));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Integer[] arr = {1, 2, 3};  // object array of Integer (wrapper for int)\nSystem.out.println(Arrays.asList(arr).contains(1));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184160,
        "id": "5b0f434e-9f68-4d3d-a241-a7ba128dc1d6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184160,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "View Demo",
              [
                [
                  "a",
                  "https://ideone.com/QR1N59"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "View Demo",
            "Link": "https://ideone.com/QR1N59"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184160,
        "id": "39f968c5-163e-479c-80a0-c92e2861015d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184160,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This will also print "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", because the array will be interpreted as an "
            ],
            [
              "Integer[]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This will also print "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": ", because the array will be interpreted as an "
          },
          {
            "Text": "Integer[]",
            "AttrFlags": 2
          },
          {
            "Text": "):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184160,
        "id": "0ec9348a-db44-40ca-a109-7e53598b0a1a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184160,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "System.out.println(Arrays.asList(1,2,3).contains(1));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "System.out.println(Arrays.asList(1,2,3).contains(1));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460184161,
        "id": "2eaf3235-fa66-403f-aef0-d61db01053ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460184161,
        "parent_id": "fb573fa1-2c4d-43a6-9938-49e8ed8b7f45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "View Demo",
              [
                [
                  "a",
                  "https://ideone.com/zfhHQz"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "View Demo",
            "Link": "https://ideone.com/zfhHQz"
          }
        ]
      }
    ],
    "title": "Creating a List from an Array",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}