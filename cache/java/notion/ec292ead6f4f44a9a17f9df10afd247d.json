{
  "ID": "ec292ead-6f4f-44a9-a17f-9df10afd247d",
  "Root": {
    "alive": true,
    "content": [
      "ca2c4d4a-31ce-4c74-8801-59d0b537b0cf",
      "97979dd4-1148-4398-9ae1-e734fd454a2d",
      "7c0dd096-70ec-4f26-8c93-8e4cb249c161",
      "a32891b5-b592-4a62-8a6e-4311f630d7e9",
      "38948c25-a407-4d01-8248-16534e9c54a4",
      "d49357d3-b246-4469-9265-ebf441d74de7",
      "841c6c2e-7220-4aa7-9fbf-ea0d205d2394",
      "9b49f6da-f186-4b53-8683-f5e2c39609cb",
      "62cafe8f-a3f0-427e-bdb6-9784c1b7fbcb",
      "ee9b7ea9-6947-4705-817f-72dbd37b08f9",
      "ce6052c7-fd24-4a6c-bab1-9783e8e64540",
      "06621d3c-7c03-4bbc-8f0b-2ba3f95945a2"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550518837461,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ec292ead-6f4f-44a9-a17f-9df10afd247d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551748439332,
    "parent_id": "06facd5b-8010-41ca-bd4b-7a8b528e8f24",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Deque"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518837455,
        "id": "ca2c4d4a-31ce-4c74-8801-59d0b537b0cf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518837455,
        "parent_id": "ec292ead-6f4f-44a9-a17f-9df10afd247d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A "
            ],
            [
              "Deque",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a “double ended queue” which means that a elements can be added at the front or the tail of the queue. The queue only can add elements to the tail of a queue."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A "
          },
          {
            "Text": "Deque",
            "AttrFlags": 2
          },
          {
            "Text": " is a “double ended queue” which means that a elements can be added at the front or the tail of the queue. The queue only can add elements to the tail of a queue."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518837458,
        "id": "97979dd4-1148-4398-9ae1-e734fd454a2d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518837458,
        "parent_id": "ec292ead-6f4f-44a9-a17f-9df10afd247d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "Deque",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " inherits the "
            ],
            [
              "Queue",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface which means the regular methods remain, however the Deque interface offers additional methods to be more flexible with a queue. The additional methods really speak for them self if you know how a queue works, since those methods are intended to add more flexibility:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "Deque",
            "AttrFlags": 2
          },
          {
            "Text": " inherits the "
          },
          {
            "Text": "Queue",
            "AttrFlags": 2
          },
          {
            "Text": " interface which means the regular methods remain, however the Deque interface offers additional methods to be more flexible with a queue. The additional methods really speak for them self if you know how a queue works, since those methods are intended to add more flexibility:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518837459,
        "id": "7c0dd096-70ec-4f26-8c93-8e4cb249c161",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518837459,
        "parent_id": "ec292ead-6f4f-44a9-a17f-9df10afd247d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Method | Brief description |\n—— | —— |"
            ],
            [
              "getFirst()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Gets the first item of the "
            ],
            [
              "head",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " of the queue without removing it. |"
            ],
            [
              "getLast()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Gets the first item of the "
            ],
            [
              "tail",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " of the queue without removing it. |"
            ],
            [
              "addFirst(E e)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Adds an item to the "
            ],
            [
              "head",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " of the queue |"
            ],
            [
              "addLast(E e)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Adds an item to the "
            ],
            [
              "tail",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " of the queue |"
            ],
            [
              "removeFirst()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Removes the first item at the "
            ],
            [
              "head",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " of the queue |"
            ],
            [
              "removeLast()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Removes the first item at the "
            ],
            [
              "tail",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " of the queue |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Method | Brief description |\n—— | —— |"
          },
          {
            "Text": "getFirst()",
            "AttrFlags": 2
          },
          {
            "Text": " | Gets the first item of the "
          },
          {
            "Text": "head",
            "AttrFlags": 1
          },
          {
            "Text": " of the queue without removing it. |"
          },
          {
            "Text": "getLast()",
            "AttrFlags": 2
          },
          {
            "Text": " | Gets the first item of the "
          },
          {
            "Text": "tail",
            "AttrFlags": 1
          },
          {
            "Text": " of the queue without removing it. |"
          },
          {
            "Text": "addFirst(E e)",
            "AttrFlags": 2
          },
          {
            "Text": " | Adds an item to the "
          },
          {
            "Text": "head",
            "AttrFlags": 1
          },
          {
            "Text": " of the queue |"
          },
          {
            "Text": "addLast(E e)",
            "AttrFlags": 2
          },
          {
            "Text": " | Adds an item to the "
          },
          {
            "Text": "tail",
            "AttrFlags": 1
          },
          {
            "Text": " of the queue |"
          },
          {
            "Text": "removeFirst()",
            "AttrFlags": 2
          },
          {
            "Text": " | Removes the first item at the "
          },
          {
            "Text": "head",
            "AttrFlags": 1
          },
          {
            "Text": " of the queue |"
          },
          {
            "Text": "removeLast()",
            "AttrFlags": 2
          },
          {
            "Text": " | Removes the first item at the "
          },
          {
            "Text": "tail",
            "AttrFlags": 1
          },
          {
            "Text": " of the queue |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518837459,
        "id": "a32891b5-b592-4a62-8a6e-4311f630d7e9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518837459,
        "parent_id": "ec292ead-6f4f-44a9-a17f-9df10afd247d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Of course the same options for "
            ],
            [
              "offer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "poll",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "peek",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are available, however they do not work with exceptions but rather with special values. There is no point in showing what they do here."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Of course the same options for "
          },
          {
            "Text": "offer",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "poll",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "peek",
            "AttrFlags": 2
          },
          {
            "Text": " are available, however they do not work with exceptions but rather with special values. There is no point in showing what they do here."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518837459,
        "id": "38948c25-a407-4d01-8248-16534e9c54a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518837459,
        "parent_id": "ec292ead-6f4f-44a9-a17f-9df10afd247d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Adding and Accessing Elements"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Adding and Accessing Elements"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518837459,
        "id": "d49357d3-b246-4469-9265-ebf441d74de7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518837459,
        "parent_id": "ec292ead-6f4f-44a9-a17f-9df10afd247d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To add elements to the tail of a Deque you call its "
            ],
            [
              "add()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method. You can also use the "
            ],
            [
              "addFirst()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "addLast()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " methods, which add elements to the head and tail of the deque."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To add elements to the tail of a Deque you call its "
          },
          {
            "Text": "add()",
            "AttrFlags": 2
          },
          {
            "Text": " method. You can also use the "
          },
          {
            "Text": "addFirst()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "addLast()",
            "AttrFlags": 2
          },
          {
            "Text": " methods, which add elements to the head and tail of the deque."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518837460,
        "id": "841c6c2e-7220-4aa7-9fbf-ea0d205d2394",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518837460,
        "parent_id": "ec292ead-6f4f-44a9-a17f-9df10afd247d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Deque\u003cString\u003e dequeA = new LinkedList\u003c\u003e();\n\ndequeA.add(\"element 1\");      //add element at tail\ndequeA.addFirst(\"element 2\"); //add element at head\ndequeA.addLast(\"element 3\");  //add element at tail"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Deque\u003cString\u003e dequeA = new LinkedList\u003c\u003e();\n\ndequeA.add(\"element 1\");      //add element at tail\ndequeA.addFirst(\"element 2\"); //add element at head\ndequeA.addLast(\"element 3\");  //add element at tail",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518837460,
        "id": "9b49f6da-f186-4b53-8683-f5e2c39609cb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518837460,
        "parent_id": "ec292ead-6f4f-44a9-a17f-9df10afd247d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can peek at the element at the head of the queue without taking the element out of the queue. This is done via the "
            ],
            [
              "element()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method. You can also use the "
            ],
            [
              "getFirst()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "getLast()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " methods, which return the first and last element in the "
            ],
            [
              "Deque",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Here is how that looks:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can peek at the element at the head of the queue without taking the element out of the queue. This is done via the "
          },
          {
            "Text": "element()",
            "AttrFlags": 2
          },
          {
            "Text": " method. You can also use the "
          },
          {
            "Text": "getFirst()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "getLast()",
            "AttrFlags": 2
          },
          {
            "Text": " methods, which return the first and last element in the "
          },
          {
            "Text": "Deque",
            "AttrFlags": 2
          },
          {
            "Text": ". Here is how that looks:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518837460,
        "id": "62cafe8f-a3f0-427e-bdb6-9784c1b7fbcb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518837460,
        "parent_id": "ec292ead-6f4f-44a9-a17f-9df10afd247d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "String firstElement0 = dequeA.element();\nString firstElement1 = dequeA.getFirst();\nString lastElement = dequeA.getLast();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "String firstElement0 = dequeA.element();\nString firstElement1 = dequeA.getFirst();\nString lastElement = dequeA.getLast();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518837460,
        "id": "ee9b7ea9-6947-4705-817f-72dbd37b08f9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518837460,
        "parent_id": "ec292ead-6f4f-44a9-a17f-9df10afd247d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Removing Elements"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Removing Elements"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518837460,
        "id": "ce6052c7-fd24-4a6c-bab1-9783e8e64540",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518837460,
        "parent_id": "ec292ead-6f4f-44a9-a17f-9df10afd247d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To remove elements from a deque, you call the "
            ],
            [
              "remove()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "removeFirst()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "removeLast()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " methods. Here are a few examples:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To remove elements from a deque, you call the "
          },
          {
            "Text": "remove()",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "removeFirst()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "removeLast()",
            "AttrFlags": 2
          },
          {
            "Text": " methods. Here are a few examples:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550518837461,
        "id": "06621d3c-7c03-4bbc-8f0b-2ba3f95945a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550518837461,
        "parent_id": "ec292ead-6f4f-44a9-a17f-9df10afd247d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "String firstElement = dequeA.remove();\nString firstElement = dequeA.removeFirst();\nString lastElement  = dequeA.removeLast();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "String firstElement = dequeA.remove();\nString firstElement = dequeA.removeFirst();\nString lastElement  = dequeA.removeLast();",
        "code_language": "Plain Text"
      }
    ],
    "title": "Deque",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}