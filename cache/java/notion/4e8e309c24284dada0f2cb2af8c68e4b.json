{
  "ID": "4e8e309c-2428-4dad-a0f2-cb2af8c68e4b",
  "Root": {
    "alive": true,
    "content": [
      "3fcaf704-e973-4a87-a620-68c0f98fd1b4",
      "a96c7997-5bf4-44c0-8236-ccd5ead1f3ae",
      "60fb7fb0-29bc-4866-9ac8-59bd1d2bd32b",
      "d46fbc4c-9efe-47cc-9ad5-c8b4d3b3b6a4",
      "2069d206-aaa2-4c27-835a-80e8097a7375",
      "b13407ec-1a6f-4831-a4a8-64cb3780e246"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550461157160,
    "id": "4e8e309c-2428-4dad-a0f2-cb2af8c68e4b",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550461157160,
    "parent_id": "c1a139ac-088d-487a-93c4-a161e63d7a0f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "040 Adding behaviour by adding classes without touching existing code"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461157153,
        "id": "3fcaf704-e973-4a87-a620-68c0f98fd1b4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461157153,
        "parent_id": "4e8e309c-2428-4dad-a0f2-cb2af8c68e4b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import java.util.ArrayList;\nimport java.util.List;\n\nimport static java.lang.System.out;\n\npublic class PolymorphismDemo {\n\n    public static void main(String[] args) {\n        List\u003cFlyingMachine\u003e machines = new ArrayList\u003cFlyingMachine\u003e();\n        machines.add(new FlyingMachine());\n        machines.add(new Jet());\n        machines.add(new Helicopter());\n        machines.add(new Jet());\n\n        new MakeThingsFly().letTheMachinesFly(machines);\n    }\n}\n\nclass MakeThingsFly {\n    public void letTheMachinesFly(List\u003cFlyingMachine\u003e flyingMachines) {\n        for (FlyingMachine flyingMachine : flyingMachines) {\n            flyingMachine.fly();\n        }\n    }\n}\n\nclass FlyingMachine {\n    public void fly() {\n        out.println(\"No implementation\");\n    }\n}\n\nclass Jet extends FlyingMachine {\n    @Override\n    public void fly() {\n        out.println(\"Start, taxi, fly\");\n    }\n\n    public void bombardment() {\n        out.println(\"Fire missile\");\n    }\n}\n\nclass Helicopter extends FlyingMachine {\n    @Override\n    public void fly() {\n        out.println(\"Start vertically, hover, fly\");\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import java.util.ArrayList;\nimport java.util.List;\n\nimport static java.lang.System.out;\n\npublic class PolymorphismDemo {\n\n    public static void main(String[] args) {\n        List\u003cFlyingMachine\u003e machines = new ArrayList\u003cFlyingMachine\u003e();\n        machines.add(new FlyingMachine());\n        machines.add(new Jet());\n        machines.add(new Helicopter());\n        machines.add(new Jet());\n\n        new MakeThingsFly().letTheMachinesFly(machines);\n    }\n}\n\nclass MakeThingsFly {\n    public void letTheMachinesFly(List\u003cFlyingMachine\u003e flyingMachines) {\n        for (FlyingMachine flyingMachine : flyingMachines) {\n            flyingMachine.fly();\n        }\n    }\n}\n\nclass FlyingMachine {\n    public void fly() {\n        out.println(\"No implementation\");\n    }\n}\n\nclass Jet extends FlyingMachine {\n    @Override\n    public void fly() {\n        out.println(\"Start, taxi, fly\");\n    }\n\n    public void bombardment() {\n        out.println(\"Fire missile\");\n    }\n}\n\nclass Helicopter extends FlyingMachine {\n    @Override\n    public void fly() {\n        out.println(\"Start vertically, hover, fly\");\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461157156,
        "id": "a96c7997-5bf4-44c0-8236-ccd5ead1f3ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461157156,
        "parent_id": "4e8e309c-2428-4dad-a0f2-cb2af8c68e4b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Explanation",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Explanation",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461157156,
        "id": "60fb7fb0-29bc-4866-9ac8-59bd1d2bd32b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461157156,
        "parent_id": "4e8e309c-2428-4dad-a0f2-cb2af8c68e4b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "MakeThingsFly",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class can work with everything that is of type "
            ],
            [
              "FlyingMachine",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "MakeThingsFly",
            "AttrFlags": 2
          },
          {
            "Text": " class can work with everything that is of type "
          },
          {
            "Text": "FlyingMachine",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461157157,
        "id": "d46fbc4c-9efe-47cc-9ad5-c8b4d3b3b6a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461157157,
        "parent_id": "4e8e309c-2428-4dad-a0f2-cb2af8c68e4b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The method "
            ],
            [
              "letTheMachinesFly",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " also works without any change (!) when you add a new class, for example "
            ],
            [
              "PropellerPlane",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The method "
          },
          {
            "Text": "letTheMachinesFly",
            "AttrFlags": 2
          },
          {
            "Text": " also works without any change (!) when you add a new class, for example "
          },
          {
            "Text": "PropellerPlane",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461157157,
        "id": "2069d206-aaa2-4c27-835a-80e8097a7375",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461157157,
        "parent_id": "4e8e309c-2428-4dad-a0f2-cb2af8c68e4b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public void letTheMachinesFly(List\u003cFlyingMachine\u003e flyingMachines) {\n        for (FlyingMachine flyingMachine : flyingMachines) {\n            flyingMachine.fly();\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public void letTheMachinesFly(List\u003cFlyingMachine\u003e flyingMachines) {\n        for (FlyingMachine flyingMachine : flyingMachines) {\n            flyingMachine.fly();\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461157160,
        "id": "b13407ec-1a6f-4831-a4a8-64cb3780e246",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461157160,
        "parent_id": "4e8e309c-2428-4dad-a0f2-cb2af8c68e4b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Thatâ€™s the power of polymorphism. You can implement the "
            ],
            [
              "open-closed-principle",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Open/closed_principle#Polymorphic_open.2Fclosed_principle"
                ]
              ]
            ],
            [
              " with it."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Thatâ€™s the power of polymorphism. You can implement the "
          },
          {
            "Text": "open-closed-principle",
            "Link": "https://en.wikipedia.org/wiki/Open/closed_principle#Polymorphic_open.2Fclosed_principle"
          },
          {
            "Text": " with it."
          }
        ]
      }
    ],
    "title": "040 Adding behaviour by adding classes without touching existing code"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}