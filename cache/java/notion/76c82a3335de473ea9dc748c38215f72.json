{
  "ID": "76c82a33-35de-473e-a9dc-748c38215f72",
  "Root": {
    "alive": true,
    "content": [
      "2c6b4fe9-ae8a-4d9a-b032-7c037c4fc800"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550463206025,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "76c82a33-35de-473e-a9dc-748c38215f72",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551740649097,
    "parent_id": "be3469ab-c5bc-45ec-b3e0-6bc9897f0a82",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Example of initialization inside of Agent OnLoad method"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550463206022,
        "id": "2c6b4fe9-ae8a-4d9a-b032-7c037c4fc800",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550463206022,
        "parent_id": "76c82a33-35de-473e-a9dc-748c38215f72",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "/* Callback for JVMTI_EVENT_VM_INIT */\nstatic void JNICALL vm_init(jvmtiEnv* jvmti, JNIEnv* env, jthread thread)\n{\n    jint runtime_version;\n    jvmti-\u003eGetVersionNumber(\u0026runtime_version);\n    stdout_message(\"JVMTI Version: %d\\n\", runtime_verision);\n}\n\n/* Agent_OnLoad() is called first, we prepare for a VM_INIT event here. */\nJNIEXPORT jint JNICALL\nAgent_OnLoad(JavaVM* vm, char* options, void* reserved)\n{\n    jint rc;\n    jvmtiEventCallbacks callbacks;\n    jvmtiCapabilities capabilities;\n    jvmtiEnv* jvmti;\n\n    /* Get JVMTI environment */\n    rc = vm-\u003eGetEnv(reinterpret_cast\u003cvoid **\u003e(\u0026jvmti), JVMTI_VERSION);\n    if (rc != JNI_OK)\n    {\n        return -1;\n    }\n\n    /* Immediately after getting the jvmtiEnv* we need to ask for the\n    *  capabilities this agent will need.\n    */\n    jvmti-\u003eGetCapabilities(\u0026capabilities);\n    capabilities.can_tag_objects = 1;\n    jvmti-\u003eAddCapabilities(\u0026capabilities);\n    \n    /* Set callbacks and enable event notifications */\n    memset(\u0026callbacks, 0, sizeof(callbacks));\n    callbacks.VMInit = \u0026vm_init;\n\n    jvmti-\u003eSetEventCallbacks(\u0026callbacks, sizeof(callbacks));\n    jvmti-\u003eSetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n\n    return JNI_OK;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "/* Callback for JVMTI_EVENT_VM_INIT */\nstatic void JNICALL vm_init(jvmtiEnv* jvmti, JNIEnv* env, jthread thread)\n{\n    jint runtime_version;\n    jvmti-\u003eGetVersionNumber(\u0026runtime_version);\n    stdout_message(\"JVMTI Version: %d\\n\", runtime_verision);\n}\n\n/* Agent_OnLoad() is called first, we prepare for a VM_INIT event here. */\nJNIEXPORT jint JNICALL\nAgent_OnLoad(JavaVM* vm, char* options, void* reserved)\n{\n    jint rc;\n    jvmtiEventCallbacks callbacks;\n    jvmtiCapabilities capabilities;\n    jvmtiEnv* jvmti;\n\n    /* Get JVMTI environment */\n    rc = vm-\u003eGetEnv(reinterpret_cast\u003cvoid **\u003e(\u0026jvmti), JVMTI_VERSION);\n    if (rc != JNI_OK)\n    {\n        return -1;\n    }\n\n    /* Immediately after getting the jvmtiEnv* we need to ask for the\n    *  capabilities this agent will need.\n    */\n    jvmti-\u003eGetCapabilities(\u0026capabilities);\n    capabilities.can_tag_objects = 1;\n    jvmti-\u003eAddCapabilities(\u0026capabilities);\n    \n    /* Set callbacks and enable event notifications */\n    memset(\u0026callbacks, 0, sizeof(callbacks));\n    callbacks.VMInit = \u0026vm_init;\n\n    jvmti-\u003eSetEventCallbacks(\u0026callbacks, sizeof(callbacks));\n    jvmti-\u003eSetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, nullptr);\n\n    return JNI_OK;\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Example of initialization inside of Agent OnLoad method",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}