{
  "ID": "066e8046-2b5b-4bea-915e-e8064e204750",
  "Root": {
    "alive": true,
    "content": [
      "c2a518cd-84c7-4ee6-bfc7-0a965b844cbe",
      "0b4fbee4-fddd-40b6-8100-d0d7d625a2fb",
      "60018d4e-5182-421c-a1c4-59e6a82d9380",
      "a2988f8f-62ec-4468-aa39-3840eff02f4b",
      "e16830a3-3c2e-42ca-9cd2-18a65b260d16",
      "0c65e019-4aef-4837-b134-abd65a93f1f7",
      "a95e83f1-e573-4d5f-b4a9-9499dcb3596d",
      "46898f82-1c53-4fd7-a80c-13dbcdb7fb98",
      "43a5a4db-c57b-4001-9aad-83ec6ccb115a",
      "43ace0e1-4991-4d63-8f88-dfb05d0e0b0c",
      "52cb33c0-20f3-48a6-b1ea-cf55cbb8cf3a",
      "36c25cc9-498f-4df1-a78d-1eeba738795b",
      "240b8e4c-8538-4dfd-8104-33d50c6ba478"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460219004,
    "id": "066e8046-2b5b-4bea-915e-e8064e204750",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460219004,
    "parent_id": "98fc7929-b076-4b4c-8088-3851bfc3fdbf",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "040 String pool and heap storage"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460218999,
        "id": "c2a518cd-84c7-4ee6-bfc7-0a965b844cbe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460218999,
        "parent_id": "066e8046-2b5b-4bea-915e-e8064e204750",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Like many Java objects, "
            ],
            [
              "all",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instances are created on the heap, even literals. When the JVM finds a "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " literal that has no equivalent reference in the heap, the JVM creates a corresponding "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instance on the heap "
            ],
            [
              "and",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " it also stores a reference to the newly created "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instance in the String pool. Any other references to the same "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " literal are replaced with the previously created "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instance in the heap."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Like many Java objects, "
          },
          {
            "Text": "all",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " instances are created on the heap, even literals. When the JVM finds a "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " literal that has no equivalent reference in the heap, the JVM creates a corresponding "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " instance on the heap "
          },
          {
            "Text": "and",
            "AttrFlags": 1
          },
          {
            "Text": " it also stores a reference to the newly created "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " instance in the String pool. Any other references to the same "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " literal are replaced with the previously created "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " instance in the heap."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460219001,
        "id": "0b4fbee4-fddd-40b6-8100-d0d7d625a2fb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460219001,
        "parent_id": "066e8046-2b5b-4bea-915e-e8064e204750",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s look at the following example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s look at the following example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460219001,
        "id": "60018d4e-5182-421c-a1c4-59e6a82d9380",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460219001,
        "parent_id": "066e8046-2b5b-4bea-915e-e8064e204750",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Strings\n{\n    public static void main (String[] args)\n    {\n        String a = \"alpha\";\n        String b = \"alpha\";\n        String c = new String(\"alpha\");\n\n        //All three strings are equivalent\n        System.out.println(a.equals(b) \u0026\u0026 b.equals(c));\n\n        //Although only a and b reference the same heap object\n        System.out.println(a == b);\n        System.out.println(a != c);\n        System.out.println(b != c);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Strings\n{\n    public static void main (String[] args)\n    {\n        String a = \"alpha\";\n        String b = \"alpha\";\n        String c = new String(\"alpha\");\n\n        //All three strings are equivalent\n        System.out.println(a.equals(b) \u0026\u0026 b.equals(c));\n\n        //Although only a and b reference the same heap object\n        System.out.println(a == b);\n        System.out.println(a != c);\n        System.out.println(b != c);\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460219002,
        "id": "a2988f8f-62ec-4468-aa39-3840eff02f4b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460219002,
        "parent_id": "066e8046-2b5b-4bea-915e-e8064e204750",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The output of the above is:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The output of the above is:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460219002,
        "id": "e16830a3-3c2e-42ca-9cd2-18a65b260d16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460219002,
        "parent_id": "066e8046-2b5b-4bea-915e-e8064e204750",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "true\ntrue\ntrue\ntrue"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "true\ntrue\ntrue\ntrue",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460219002,
        "id": "0c65e019-4aef-4837-b134-abd65a93f1f7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460219002,
        "parent_id": "066e8046-2b5b-4bea-915e-e8064e204750",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When we use double quotes to create a String, it first looks for String with same value in the String pool, if found it just returns the reference else it creates a new String in the pool and then returns the reference."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When we use double quotes to create a String, it first looks for String with same value in the String pool, if found it just returns the reference else it creates a new String in the pool and then returns the reference."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460219002,
        "id": "a95e83f1-e573-4d5f-b4a9-9499dcb3596d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460219002,
        "parent_id": "066e8046-2b5b-4bea-915e-e8064e204750",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "https://i.stack.imgur.com/S8Ouk.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "https://i.stack.imgur.com/S8Ouk.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fi.stack.imgur.com%2FS8Ouk.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460219002,
        "id": "46898f82-1c53-4fd7-a80c-13dbcdb7fb98",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460219002,
        "parent_id": "066e8046-2b5b-4bea-915e-e8064e204750",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However using new operator, we force String class to create a new String object in heap space. We can use intern() method to put it into the pool or refer to other String object from string pool having same value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However using new operator, we force String class to create a new String object in heap space. We can use intern() method to put it into the pool or refer to other String object from string pool having same value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460219002,
        "id": "43a5a4db-c57b-4001-9aad-83ec6ccb115a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460219002,
        "parent_id": "066e8046-2b5b-4bea-915e-e8064e204750",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The String pool itself is also created on the heap."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The String pool itself is also created on the heap."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460219002,
        "id": "43ace0e1-4991-4d63-8f88-dfb05d0e0b0c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460219002,
        "parent_id": "066e8046-2b5b-4bea-915e-e8064e204750",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Before Java 7, "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "literals",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " were stored in the runtime constant pool in the method area of "
            ],
            [
              "PermGen",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", that had a fixed size."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Before Java 7, "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "literals",
            "AttrFlags": 1
          },
          {
            "Text": " were stored in the runtime constant pool in the method area of "
          },
          {
            "Text": "PermGen",
            "AttrFlags": 2
          },
          {
            "Text": ", that had a fixed size."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460219003,
        "id": "52cb33c0-20f3-48a6-b1ea-cf55cbb8cf3a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460219003,
        "parent_id": "066e8046-2b5b-4bea-915e-e8064e204750",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The String pool also resided in "
            ],
            [
              "PermGen",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The String pool also resided in "
          },
          {
            "Text": "PermGen",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460219004,
        "id": "36c25cc9-498f-4df1-a78d-1eeba738795b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460219004,
        "parent_id": "066e8046-2b5b-4bea-915e-e8064e204750",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "RFC: 6962931",
              [
                [
                  "a",
                  "http://www.oracle.com/technetwork/java/javase/jdk7-relnotes-418459.html"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "RFC: 6962931",
            "Link": "http://www.oracle.com/technetwork/java/javase/jdk7-relnotes-418459.html"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460219004,
        "id": "240b8e4c-8538-4dfd-8104-33d50c6ba478",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460219004,
        "parent_id": "066e8046-2b5b-4bea-915e-e8064e204750",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In JDK 7, interned strings are no longer allocated in the permanent generation of the Java heap, but are instead allocated in the main part of the Java heap (known as the young and old generations), along with the other objects created by the application. This change will result in more data residing in the main Java heap, and less data in the permanent generation, and thus may require heap sizes to be adjusted. Most applications will see only relatively small differences in heap usage due to this change, but larger applications that load many classes or make heavy use of the String.intern() method will see more significant differences."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "In JDK 7, interned strings are no longer allocated in the permanent generation of the Java heap, but are instead allocated in the main part of the Java heap (known as the young and old generations), along with the other objects created by the application. This change will result in more data residing in the main Java heap, and less data in the permanent generation, and thus may require heap sizes to be adjusted. Most applications will see only relatively small differences in heap usage due to this change, but larger applications that load many classes or make heavy use of the String.intern() method will see more significant differences."
          }
        ]
      }
    ],
    "title": "040 String pool and heap storage"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}