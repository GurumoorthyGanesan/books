{
  "ID": "9a144e44-ab1f-4646-a033-16ec02749ecb",
  "Root": {
    "alive": true,
    "content": [
      "0f3613e3-4514-429f-9f6a-4302c77f06a0",
      "01deaea5-55f1-40af-a587-d13c8d212e9c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550461558076,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "9a144e44-ab1f-4646-a033-16ec02749ecb",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551740984432,
    "parent_id": "9e1981fd-3dd3-4f41-8ad4-fec88463b6b0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Cloning performing a deep copy"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461558076,
        "id": "0f3613e3-4514-429f-9f6a-4302c77f06a0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461558076,
        "parent_id": "9a144e44-ab1f-4646-a033-16ec02749ecb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To copy nested objects, a "
            ],
            [
              "deep copy",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Object_copying#Deep_copy"
                ]
              ]
            ],
            [
              " must be performed, as shown in this example."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To copy nested objects, a "
          },
          {
            "Text": "deep copy",
            "Link": "https://en.wikipedia.org/wiki/Object_copying#Deep_copy"
          },
          {
            "Text": " must be performed, as shown in this example."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550461558076,
        "id": "01deaea5-55f1-40af-a587-d13c8d212e9c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550461558076,
        "parent_id": "9a144e44-ab1f-4646-a033-16ec02749ecb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Sheep implements Cloneable {\n\n    private String name;\n\n    private int weight;\n\n    private List\u003cSheep\u003e children;\n\n    public Sheep(String name, int weight) {\n        this.name = name;\n        this.weight = weight;\n    }\n\n    @Override\n    public Object clone() throws CloneNotSupportedException {\n        Sheep clone = (Sheep) super.clone();\n        if (children != null) {\n            // make a deep copy of the children\n            List\u003cSheep\u003e cloneChildren = new ArrayList\u003c\u003e(children.size());\n            for (Sheep child : children) {\n                cloneChildren.add((Sheep) child.clone());\n            }\n            clone.setChildren(cloneChildren);\n        }\n        return clone;\n    }\n\n    public List\u003cSheep\u003e getChildren() {\n        return children;\n    }\n\n    public void setChildren(List\u003cSheep\u003e children) {\n        this.children = children;\n    }\n\n}\n\nimport java.util.Arrays;\nimport java.util.List;\n\n// create a sheep\nSheep sheep = new Sheep(\"Dolly\", 20);\n\n// create children\nSheep child1 = new Sheep(\"Child1\", 4);\nSheep child2 = new Sheep(\"Child2\", 5);\n\nsheep.setChildren(Arrays.asList(child1, child2));\n\n// clone the sheep\nSheep dolly =  (Sheep) sheep.clone();\nList\u003cSheep\u003e sheepChildren = sheep.getChildren();\nList\u003cSheep\u003e dollysChildren = dolly.getChildren();\nfor (int i = 0; i \u003c sheepChildren.size(); i++) {\n    // prints false, both arrays contain copies of the objects inside\n    System.out.println(sheepChildren.get(i) == dollysChildren.get(i));\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Sheep implements Cloneable {\n\n    private String name;\n\n    private int weight;\n\n    private List\u003cSheep\u003e children;\n\n    public Sheep(String name, int weight) {\n        this.name = name;\n        this.weight = weight;\n    }\n\n    @Override\n    public Object clone() throws CloneNotSupportedException {\n        Sheep clone = (Sheep) super.clone();\n        if (children != null) {\n            // make a deep copy of the children\n            List\u003cSheep\u003e cloneChildren = new ArrayList\u003c\u003e(children.size());\n            for (Sheep child : children) {\n                cloneChildren.add((Sheep) child.clone());\n            }\n            clone.setChildren(cloneChildren);\n        }\n        return clone;\n    }\n\n    public List\u003cSheep\u003e getChildren() {\n        return children;\n    }\n\n    public void setChildren(List\u003cSheep\u003e children) {\n        this.children = children;\n    }\n\n}\n\nimport java.util.Arrays;\nimport java.util.List;\n\n// create a sheep\nSheep sheep = new Sheep(\"Dolly\", 20);\n\n// create children\nSheep child1 = new Sheep(\"Child1\", 4);\nSheep child2 = new Sheep(\"Child2\", 5);\n\nsheep.setChildren(Arrays.asList(child1, child2));\n\n// clone the sheep\nSheep dolly =  (Sheep) sheep.clone();\nList\u003cSheep\u003e sheepChildren = sheep.getChildren();\nList\u003cSheep\u003e dollysChildren = dolly.getChildren();\nfor (int i = 0; i \u003c sheepChildren.size(); i++) {\n    // prints false, both arrays contain copies of the objects inside\n    System.out.println(sheepChildren.get(i) == dollysChildren.get(i));\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Cloning performing a deep copy",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}