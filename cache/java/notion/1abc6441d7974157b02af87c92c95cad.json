{
  "ID": "1abc6441-d797-4157-b02a-f87c92c95cad",
  "Root": {
    "alive": true,
    "content": [
      "5e49f741-529b-4bbf-ae08-e134de58313f",
      "8201c0d3-ad8e-437c-96ad-775a9777d027",
      "00fc7f95-a14c-48ee-9815-7cbfecb35df6",
      "66af7967-3eec-4daa-ad3b-a95e38023b08",
      "f4600c0e-1a9a-49d5-bf4b-6738e885ac36",
      "53307d09-d51e-49d8-b8fc-5d91e43f85b3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460100699,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1abc6441-d797-4157-b02a-f87c92c95cad",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551752915869,
    "parent_id": "3e5f6441-fbb7-4864-8927-1c1c812bd8c7",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Creating a Frequency Map"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460100695,
        "id": "5e49f741-529b-4bbf-ae08-e134de58313f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460100695,
        "parent_id": "1abc6441-d797-4157-b02a-f87c92c95cad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "groupingBy(classifier, downstream)",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html#groupingBy-java.util.function.Function-"
                ]
              ]
            ],
            [
              " collector allows the collection of "
            ],
            [
              "Stream",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html"
                ]
              ]
            ],
            [
              " elements into a "
            ],
            [
              "Map",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"
                ]
              ]
            ],
            [
              " by classifying each element in a group and performing a downstream operation on the elements classified in the same group."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "groupingBy(classifier, downstream)",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html#groupingBy-java.util.function.Function-"
          },
          {
            "Text": " collector allows the collection of "
          },
          {
            "Text": "Stream",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html"
          },
          {
            "Text": " elements into a "
          },
          {
            "Text": "Map",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"
          },
          {
            "Text": " by classifying each element in a group and performing a downstream operation on the elements classified in the same group."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460100697,
        "id": "8201c0d3-ad8e-437c-96ad-775a9777d027",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460100697,
        "parent_id": "1abc6441-d797-4157-b02a-f87c92c95cad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A classic example of this principle is to use a "
            ],
            [
              "Map",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"
                ]
              ]
            ],
            [
              " to count the occurrences of elements in a "
            ],
            [
              "Stream",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html"
                ]
              ]
            ],
            [
              ". In this example, the classifier is simply the identity function, which returns the element as-is. The downstream operation counts the number of equal elements, using "
            ],
            [
              "counting()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html#counting--"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A classic example of this principle is to use a "
          },
          {
            "Text": "Map",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"
          },
          {
            "Text": " to count the occurrences of elements in a "
          },
          {
            "Text": "Stream",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html"
          },
          {
            "Text": ". In this example, the classifier is simply the identity function, which returns the element as-is. The downstream operation counts the number of equal elements, using "
          },
          {
            "Text": "counting()",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html#counting--"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460100697,
        "id": "00fc7f95-a14c-48ee-9815-7cbfecb35df6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460100697,
        "parent_id": "1abc6441-d797-4157-b02a-f87c92c95cad",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Stream.of(\"apple\", \"orange\", \"banana\", \"apple\")\n      .collect(Collectors.groupingBy(Function.identity(), Collectors.counting()))\n      .entrySet()\n      .forEach(System.out::println);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Stream.of(\"apple\", \"orange\", \"banana\", \"apple\")\n      .collect(Collectors.groupingBy(Function.identity(), Collectors.counting()))\n      .entrySet()\n      .forEach(System.out::println);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460100698,
        "id": "66af7967-3eec-4daa-ad3b-a95e38023b08",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460100698,
        "parent_id": "1abc6441-d797-4157-b02a-f87c92c95cad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The downstream operation is itself a collector ("
            ],
            [
              "Collectors.counting()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html#counting--"
                ]
              ]
            ],
            [
              ") that operates on elements of type String and produces a result of type "
            ],
            [
              "Long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The result of the "
            ],
            [
              "collect",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method call is a "
            ],
            [
              "Map\u003cString, Long\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The downstream operation is itself a collector ("
          },
          {
            "Text": "Collectors.counting()",
            "AttrFlags": 2,
            "Link": "https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html#counting--"
          },
          {
            "Text": ") that operates on elements of type String and produces a result of type "
          },
          {
            "Text": "Long",
            "AttrFlags": 2
          },
          {
            "Text": ". The result of the "
          },
          {
            "Text": "collect",
            "AttrFlags": 2
          },
          {
            "Text": " method call is a "
          },
          {
            "Text": "Map\u003cString, Long\u003e",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460100698,
        "id": "f4600c0e-1a9a-49d5-bf4b-6738e885ac36",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460100698,
        "parent_id": "1abc6441-d797-4157-b02a-f87c92c95cad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This would produce the following output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This would produce the following output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460100698,
        "id": "53307d09-d51e-49d8-b8fc-5d91e43f85b3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460100698,
        "parent_id": "1abc6441-d797-4157-b02a-f87c92c95cad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "banana=1 orange=1 apple=2"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "banana=1 orange=1 apple=2"
          }
        ]
      }
    ],
    "title": "Creating a Frequency Map",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}