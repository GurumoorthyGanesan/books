{
  "ID": "061adb4e-78f9-49b5-ae0d-8b9a15db6cf0",
  "Root": {
    "alive": true,
    "content": [
      "7e4542f2-f0e6-470f-9c2f-647a1c22a5e8",
      "bbec620e-f52f-4a22-bd4a-1e793cc6f225"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460468033,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "061adb4e-78f9-49b5-ae0d-8b9a15db6cf0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460468033,
    "parent_id": "814dd116-37ca-4db6-82af-c82641c48f28",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using regex with custom behaviour by compiling the Pattern with flags"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460468033,
        "id": "7e4542f2-f0e6-470f-9c2f-647a1c22a5e8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460468033,
        "parent_id": "061adb4e-78f9-49b5-ae0d-8b9a15db6cf0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A "
            ],
            [
              "Pattern",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be compiled with flags, if the regex is used as a literal "
            ],
            [
              "String",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", use inline modifiers:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A "
          },
          {
            "Text": "Pattern",
            "AttrFlags": 2
          },
          {
            "Text": " can be compiled with flags, if the regex is used as a literal "
          },
          {
            "Text": "String",
            "AttrFlags": 2
          },
          {
            "Text": ", use inline modifiers:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460468033,
        "id": "bbec620e-f52f-4a22-bd4a-1e793cc6f225",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460468033,
        "parent_id": "061adb4e-78f9-49b5-ae0d-8b9a15db6cf0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Pattern pattern = Pattern.compile(\"foo.\", Pattern.CASE_INSENSITIVE | Pattern.DOTALL);\npattern.matcher(\"FOO\\n\").matches(); // Is true.\n\n/* Had the regex not been compiled case insensitively and singlelined,\n * it would fail because FOO does not match /foo/ and \\n (newline)\n * does not match /./.\n */\n\nPattern anotherPattern = Pattern.compile(\"(?si)foo\");\nanotherPattern.matcher(\"FOO\\n\").matches(); // Is true.\n\n\"foOt\".replaceAll(\"(?si)foo\", \"ca\"); // Returns \"cat\"."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Pattern pattern = Pattern.compile(\"foo.\", Pattern.CASE_INSENSITIVE | Pattern.DOTALL);\npattern.matcher(\"FOO\\n\").matches(); // Is true.\n\n/* Had the regex not been compiled case insensitively and singlelined,\n * it would fail because FOO does not match /foo/ and \\n (newline)\n * does not match /./.\n */\n\nPattern anotherPattern = Pattern.compile(\"(?si)foo\");\nanotherPattern.matcher(\"FOO\\n\").matches(); // Is true.\n\n\"foOt\".replaceAll(\"(?si)foo\", \"ca\"); // Returns \"cat\".",
        "code_language": "Plain Text"
      }
    ],
    "title": "Using regex with custom behaviour by compiling the Pattern with flags",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}