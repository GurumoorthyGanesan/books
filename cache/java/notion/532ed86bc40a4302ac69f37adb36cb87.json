{
  "ID": "532ed86b-c40a-4302-ac69-f37adb36cb87",
  "Root": {
    "alive": true,
    "content": [
      "247242a6-8ca6-4c0e-8b05-3df0c38994ae",
      "0aae5fe8-97b7-407b-af3e-b7edd16c1c14",
      "654ecc14-0c73-4ba8-8fb6-6d1cefe54f55",
      "5024764b-7336-4b25-8551-87df555bc1f9",
      "c6c81c54-08de-46f2-b22f-837b4e9492bc",
      "0bdadbd9-b4e6-41a1-9eee-6c67ad646f91",
      "4e92e5eb-b7e5-4fb1-858f-03d16f5f2c2c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550460852496,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "532ed86b-c40a-4302-ac69-f37adb36cb87",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550460852496,
    "parent_id": "efc357da-0d0e-4f18-820d-fb1e40a75c9e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Reflection API"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460852491,
        "id": "247242a6-8ca6-4c0e-8b05-3df0c38994ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460852491,
        "parent_id": "532ed86b-c40a-4302-ac69-f37adb36cb87",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460852495,
        "id": "0aae5fe8-97b7-407b-af3e-b7edd16c1c14",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460852495,
        "parent_id": "532ed86b-c40a-4302-ac69-f37adb36cb87",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Reflection is commonly used by programs which require the ability to examine or modify the runtime behavior of applications running in the JVM. "
            ],
            [
              "Java Reflection API",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/tutorial/reflect/"
                ]
              ]
            ],
            [
              " is used for that purpose where it makes it possible to inspect classes, interfaces, fields and methods at runtime, without knowing their names at compile time. And It also makes it possible to instantiate new objects, and to invoke methods using reflection."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Reflection is commonly used by programs which require the ability to examine or modify the runtime behavior of applications running in the JVM. "
          },
          {
            "Text": "Java Reflection API",
            "Link": "https://docs.oracle.com/javase/tutorial/reflect/"
          },
          {
            "Text": " is used for that purpose where it makes it possible to inspect classes, interfaces, fields and methods at runtime, without knowing their names at compile time. And It also makes it possible to instantiate new objects, and to invoke methods using reflection."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460852495,
        "id": "654ecc14-0c73-4ba8-8fb6-6d1cefe54f55",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460852495,
        "parent_id": "532ed86b-c40a-4302-ac69-f37adb36cb87",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460852495,
        "id": "5024764b-7336-4b25-8551-87df555bc1f9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460852495,
        "parent_id": "532ed86b-c40a-4302-ac69-f37adb36cb87",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Performance"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Performance"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460852495,
        "id": "c6c81c54-08de-46f2-b22f-837b4e9492bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460852495,
        "parent_id": "532ed86b-c40a-4302-ac69-f37adb36cb87",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Keep in mind that reflection might decrease performance, only use it when your task cannot be completed without reflection."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Keep in mind that reflection might decrease performance, only use it when your task cannot be completed without reflection."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460852496,
        "id": "0bdadbd9-b4e6-41a1-9eee-6c67ad646f91",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460852496,
        "parent_id": "532ed86b-c40a-4302-ac69-f37adb36cb87",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "From the Java tutorial "
            ],
            [
              "The Reflection API",
              [
                [
                  "a",
                  "https://docs.oracle.com/javase/tutorial/reflect/"
                ]
              ]
            ],
            [
              " :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "From the Java tutorial "
          },
          {
            "Text": "The Reflection API",
            "Link": "https://docs.oracle.com/javase/tutorial/reflect/"
          },
          {
            "Text": " :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550460852496,
        "id": "4e92e5eb-b7e5-4fb1-858f-03d16f5f2c2c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550460852496,
        "parent_id": "532ed86b-c40a-4302-ac69-f37adb36cb87",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Because reflection involves types that are dynamically resolved, certain Java virtual machine optimizations can not be performed. Consequently, reflective operations have slower performance than their non-reflective counterparts, and should be avoided in sections of code which are called frequently in performance-sensitive applications."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Because reflection involves types that are dynamically resolved, certain Java virtual machine optimizations can not be performed. Consequently, reflective operations have slower performance than their non-reflective counterparts, and should be avoided in sections of code which are called frequently in performance-sensitive applications."
          }
        ]
      }
    ],
    "title": "Reflection API",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}