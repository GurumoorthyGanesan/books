{
  "ID": "4e426020-675c-4015-a2e0-e275a2ec2f69",
  "Root": {
    "alive": true,
    "content": [
      "9c4adcab-1247-4c1a-ba40-d417ad083170",
      "d7eaf42c-23a3-4830-b75f-bf80c61c2d6c",
      "c6f2d9e1-f644-4590-9675-50e805779ea7",
      "623ae88f-2715-4308-abf9-80703e13d31c",
      "4238e247-725b-448c-ae64-524636aa34bd",
      "109f47b8-0db5-4a87-9873-bdf01705374f",
      "239b3ff5-a4f4-4998-910c-d8dda8ddf656",
      "beade35e-d435-4711-bf0b-3a7a9732b319",
      "93d33e99-57dd-4773-beb9-a6e91326b7c2",
      "e14be76a-8a2b-4c07-be02-484fc5529b70",
      "b8d631f7-fe11-49d1-bef0-51e3b7efd997",
      "d9d39ca3-7e22-4848-ae6a-0babdf27bdf6",
      "f7fde287-d149-4489-8ba0-1c1487e27602"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552105869061,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "4e426020-675c-4015-a2e0-e275a2ec2f69",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552105869061,
    "parent_id": "2e9691dd-0811-4161-964f-0af0c454280b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Password Based Key Derivation 2 Swift 3"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105869057,
        "id": "9c4adcab-1247-4c1a-ba40-d417ad083170",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105869057,
        "parent_id": "4e426020-675c-4015-a2e0-e275a2ec2f69",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Password Based Key Derivation can be used both for deriving an encryption key from password text and saving a password for authentication purposes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Password Based Key Derivation can be used both for deriving an encryption key from password text and saving a password for authentication purposes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105869060,
        "id": "d7eaf42c-23a3-4830-b75f-bf80c61c2d6c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105869060,
        "parent_id": "4e426020-675c-4015-a2e0-e275a2ec2f69",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are several hash algorithms that can be used including SHA1, SHA256, SHA512 which are provided by this example code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are several hash algorithms that can be used including SHA1, SHA256, SHA512 which are provided by this example code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105869060,
        "id": "c6f2d9e1-f644-4590-9675-50e805779ea7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105869060,
        "parent_id": "4e426020-675c-4015-a2e0-e275a2ec2f69",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The rounds parameter is used to make the calculation slow so that an attacker will have to spend substantial time on each attempt. Typical delay values fall in the 100ms to 500ms, shorter values can be used if there is unacceptable performance."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The rounds parameter is used to make the calculation slow so that an attacker will have to spend substantial time on each attempt. Typical delay values fall in the 100ms to 500ms, shorter values can be used if there is unacceptable performance."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105869060,
        "id": "623ae88f-2715-4308-abf9-80703e13d31c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105869060,
        "parent_id": "4e426020-675c-4015-a2e0-e275a2ec2f69",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example requires Common Crypto"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example requires Common Crypto"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105869060,
        "id": "4238e247-725b-448c-ae64-524636aa34bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105869060,
        "parent_id": "4e426020-675c-4015-a2e0-e275a2ec2f69",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is necessary to have a bridging header to the project:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is necessary to have a bridging header to the project:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105869060,
        "id": "109f47b8-0db5-4a87-9873-bdf01705374f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105869060,
        "parent_id": "4e426020-675c-4015-a2e0-e275a2ec2f69",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "`#import \u003cCommonCrypto/CommonCrypto.h\u003e`  \nAdd the `Security.framework` to the project."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "`#import \u003cCommonCrypto/CommonCrypto.h\u003e`  \nAdd the `Security.framework` to the project.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105869060,
        "id": "239b3ff5-a4f4-4998-910c-d8dda8ddf656",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105869060,
        "parent_id": "4e426020-675c-4015-a2e0-e275a2ec2f69",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parameters:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parameters:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105869061,
        "id": "beade35e-d435-4711-bf0b-3a7a9732b319",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105869061,
        "parent_id": "4e426020-675c-4015-a2e0-e275a2ec2f69",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "password     password String  \nsalt         salt Data  \nkeyByteCount number of key bytes to generate\nrounds       Iteration rounds\n\nreturns      Derived key"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "password     password String  \nsalt         salt Data  \nkeyByteCount number of key bytes to generate\nrounds       Iteration rounds\n\nreturns      Derived key",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105869061,
        "id": "93d33e99-57dd-4773-beb9-a6e91326b7c2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105869061,
        "parent_id": "4e426020-675c-4015-a2e0-e275a2ec2f69",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "func pbkdf2SHA1(password: String, salt: Data, keyByteCount: Int, rounds: Int) -\u003e Data? {\n    return pbkdf2(hash:CCPBKDFAlgorithm(kCCPRFHmacAlgSHA1), password:password, salt:salt, keyByteCount:keyByteCount, rounds:rounds)\n}\n\nfunc pbkdf2SHA256(password: String, salt: Data, keyByteCount: Int, rounds: Int) -\u003e Data? {\n    return pbkdf2(hash:CCPBKDFAlgorithm(kCCPRFHmacAlgSHA256), password:password, salt:salt, keyByteCount:keyByteCount, rounds:rounds)\n}\n\nfunc pbkdf2SHA512(password: String, salt: Data, keyByteCount: Int, rounds: Int) -\u003e Data? {\n    return pbkdf2(hash:CCPBKDFAlgorithm(kCCPRFHmacAlgSHA512), password:password, salt:salt, keyByteCount:keyByteCount, rounds:rounds)\n}\n\nfunc pbkdf2(hash :CCPBKDFAlgorithm, password: String, salt: Data, keyByteCount: Int, rounds: Int) -\u003e Data? {\n    let passwordData = password.data(using:String.Encoding.utf8)!\n    var derivedKeyData = Data(repeating:0, count:keyByteCount)\n\n    let derivationStatus = derivedKeyData.withUnsafeMutableBytes {derivedKeyBytes in\n        salt.withUnsafeBytes { saltBytes in\n\n            CCKeyDerivationPBKDF(\n                CCPBKDFAlgorithm(kCCPBKDF2),\n                password, passwordData.count,\n                saltBytes, salt.count,\n                hash,\n                UInt32(rounds),\n                derivedKeyBytes, derivedKeyData.count)\n        }\n    }\n    if (derivationStatus != 0) {\n        print(\"Error: \\(derivationStatus)\")\n        return nil;\n    }\n\n    return derivedKeyData\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "func pbkdf2SHA1(password: String, salt: Data, keyByteCount: Int, rounds: Int) -\u003e Data? {\n    return pbkdf2(hash:CCPBKDFAlgorithm(kCCPRFHmacAlgSHA1), password:password, salt:salt, keyByteCount:keyByteCount, rounds:rounds)\n}\n\nfunc pbkdf2SHA256(password: String, salt: Data, keyByteCount: Int, rounds: Int) -\u003e Data? {\n    return pbkdf2(hash:CCPBKDFAlgorithm(kCCPRFHmacAlgSHA256), password:password, salt:salt, keyByteCount:keyByteCount, rounds:rounds)\n}\n\nfunc pbkdf2SHA512(password: String, salt: Data, keyByteCount: Int, rounds: Int) -\u003e Data? {\n    return pbkdf2(hash:CCPBKDFAlgorithm(kCCPRFHmacAlgSHA512), password:password, salt:salt, keyByteCount:keyByteCount, rounds:rounds)\n}\n\nfunc pbkdf2(hash :CCPBKDFAlgorithm, password: String, salt: Data, keyByteCount: Int, rounds: Int) -\u003e Data? {\n    let passwordData = password.data(using:String.Encoding.utf8)!\n    var derivedKeyData = Data(repeating:0, count:keyByteCount)\n\n    let derivationStatus = derivedKeyData.withUnsafeMutableBytes {derivedKeyBytes in\n        salt.withUnsafeBytes { saltBytes in\n\n            CCKeyDerivationPBKDF(\n                CCPBKDFAlgorithm(kCCPBKDF2),\n                password, passwordData.count,\n                saltBytes, salt.count,\n                hash,\n                UInt32(rounds),\n                derivedKeyBytes, derivedKeyData.count)\n        }\n    }\n    if (derivationStatus != 0) {\n        print(\"Error: \\(derivationStatus)\")\n        return nil;\n    }\n\n    return derivedKeyData\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105869061,
        "id": "e14be76a-8a2b-4c07-be02-484fc5529b70",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105869061,
        "parent_id": "4e426020-675c-4015-a2e0-e275a2ec2f69",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example usage:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example usage:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105869061,
        "id": "b8d631f7-fe11-49d1-bef0-51e3b7efd997",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105869061,
        "parent_id": "4e426020-675c-4015-a2e0-e275a2ec2f69",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let password     = \"password\"\n//let salt       = \"saltData\".data(using: String.Encoding.utf8)!\nlet salt         = Data(bytes: [0x73, 0x61, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61])\nlet keyByteCount = 16\nlet rounds       = 100000\n\nlet derivedKey = pbkdf2SHA1(password:password, salt:salt, keyByteCount:keyByteCount, rounds:rounds)\nprint(\"derivedKey (SHA1): \\(derivedKey! as NSData)\")"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let password     = \"password\"\n//let salt       = \"saltData\".data(using: String.Encoding.utf8)!\nlet salt         = Data(bytes: [0x73, 0x61, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61])\nlet keyByteCount = 16\nlet rounds       = 100000\n\nlet derivedKey = pbkdf2SHA1(password:password, salt:salt, keyByteCount:keyByteCount, rounds:rounds)\nprint(\"derivedKey (SHA1): \\(derivedKey! as NSData)\")",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105869061,
        "id": "d9d39ca3-7e22-4848-ae6a-0babdf27bdf6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105869061,
        "parent_id": "4e426020-675c-4015-a2e0-e275a2ec2f69",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example Output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example Output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105869061,
        "id": "f7fde287-d149-4489-8ba0-1c1487e27602",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105869061,
        "parent_id": "4e426020-675c-4015-a2e0-e275a2ec2f69",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "derivedKey (SHA1): \u003c6b9d4fa3 0385d128 f6d196ee 3f1d6dbf\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "derivedKey (SHA1): \u003c6b9d4fa3 0385d128 f6d196ee 3f1d6dbf\u003e",
        "code_language": "Plain Text"
      }
    ],
    "title": "Password Based Key Derivation 2 Swift 3",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}