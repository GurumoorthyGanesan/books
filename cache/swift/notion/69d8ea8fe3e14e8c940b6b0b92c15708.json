{
  "ID": "69d8ea8f-e3e1-4e8c-940b-6b0b92c15708",
  "Root": {
    "alive": true,
    "content": [
      "a3a57c86-c083-4048-b1a6-ba03960f3df6",
      "35cc4873-0a3f-4d60-9e4c-f174498bbaf8",
      "a5187e06-94e8-4677-83e8-8dd79a5cdbcd",
      "207730aa-8466-45bb-b75c-1835285aecc3",
      "15c8ad48-7070-46e8-a569-3832e708dcf6",
      "943d446c-e700-48fd-b3a3-d304540162b1",
      "9c305c2b-fd4b-4cbb-8c95-fb13cb08ddfc",
      "e94b334b-5cb1-46b6-afe9-1149135330b9",
      "8f566458-cc31-4a4c-b03d-84880b2ab461",
      "7e641068-7405-453a-8eeb-197eb0e9e2e6",
      "b81523c7-17c2-4d54-b9e1-36aba88cc496",
      "1e669eb0-4a4e-45e6-ba31-8da3c7b39c8e",
      "2c5923ca-739d-4cf6-9fd8-abd32abbb63f",
      "05d015bf-5ae5-4f39-96d0-43979ca7b270",
      "af44a2ab-3517-48cf-a1f9-7f723135f530",
      "58a9772c-b48a-4ad6-9c97-863b7a0e5ed4"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552105079105,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "69d8ea8f-e3e1-4e8c-940b-6b0b92c15708",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552105079105,
    "parent_id": "20ba14af-2a03-4965-8a91-1682ef4fd9ac",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "String Character Literals"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105079098,
        "id": "a3a57c86-c083-4048-b1a6-ba03960f3df6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105079098,
        "parent_id": "69d8ea8f-e3e1-4e8c-940b-6b0b92c15708",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "String",
              [
                [
                  "a",
                  "https://developer.apple.com/reference/swift/string"
                ]
              ]
            ],
            [
              " literals in Swift are delimited with double quotes ("
            ],
            [
              "\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "String",
            "Link": "https://developer.apple.com/reference/swift/string"
          },
          {
            "Text": " literals in Swift are delimited with double quotes ("
          },
          {
            "Text": "\"",
            "AttrFlags": 2
          },
          {
            "Text": "):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105079099,
        "id": "35cc4873-0a3f-4d60-9e4c-f174498bbaf8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105079099,
        "parent_id": "69d8ea8f-e3e1-4e8c-940b-6b0b92c15708",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let greeting = \"Hello!\"  // greeting's type is String"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let greeting = \"Hello!\"  // greeting's type is String",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105079100,
        "id": "a5187e06-94e8-4677-83e8-8dd79a5cdbcd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105079100,
        "parent_id": "69d8ea8f-e3e1-4e8c-940b-6b0b92c15708",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Characters",
              [
                [
                  "a",
                  "https://developer.apple.com/reference/swift/character"
                ]
              ]
            ],
            [
              " can be initialized from string literals, as long as the literal contains only one grapheme cluster:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Characters",
            "Link": "https://developer.apple.com/reference/swift/character"
          },
          {
            "Text": " can be initialized from string literals, as long as the literal contains only one grapheme cluster:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105079100,
        "id": "207730aa-8466-45bb-b75c-1835285aecc3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105079100,
        "parent_id": "69d8ea8f-e3e1-4e8c-940b-6b0b92c15708",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let chr: Character = \"H\" // valid\nlet chr2: Character = \"😊\" // valid\nlet chr3: Character = \"abc\" // invalid - multiple grapheme clusters"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let chr: Character = \"H\" // valid\nlet chr2: Character = \"😊\" // valid\nlet chr3: Character = \"abc\" // invalid - multiple grapheme clusters",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105079100,
        "id": "15c8ad48-7070-46e8-a569-3832e708dcf6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105079100,
        "parent_id": "69d8ea8f-e3e1-4e8c-940b-6b0b92c15708",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "String Interpolation"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "String Interpolation"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105079100,
        "id": "943d446c-e700-48fd-b3a3-d304540162b1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105079100,
        "parent_id": "69d8ea8f-e3e1-4e8c-940b-6b0b92c15708",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "String interpolation",
              [
                [
                  "b"
                ],
                [
                  "a",
                  "https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/StringsAndCharacters.html#//apple_ref/doc/uid/TP40014097-CH7-ID292"
                ]
              ]
            ],
            [
              " allows injecting an expression directly into a string literal. This can be done with all types of values, including strings, integers, floating point numbers and more."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "String interpolation",
            "AttrFlags": 1,
            "Link": "https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/StringsAndCharacters.html#//apple_ref/doc/uid/TP40014097-CH7-ID292"
          },
          {
            "Text": " allows injecting an expression directly into a string literal. This can be done with all types of values, including strings, integers, floating point numbers and more."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105079101,
        "id": "9c305c2b-fd4b-4cbb-8c95-fb13cb08ddfc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105079101,
        "parent_id": "69d8ea8f-e3e1-4e8c-940b-6b0b92c15708",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The syntax is a backslash followed by parentheses wrapping the value: "
            ],
            [
              "\\(value)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Any valid expression may appear in the parentheses, including function calls."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The syntax is a backslash followed by parentheses wrapping the value: "
          },
          {
            "Text": "\\(value)",
            "AttrFlags": 2
          },
          {
            "Text": ". Any valid expression may appear in the parentheses, including function calls."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105079101,
        "id": "e94b334b-5cb1-46b6-afe9-1149135330b9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105079101,
        "parent_id": "69d8ea8f-e3e1-4e8c-940b-6b0b92c15708",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let number = 5\nlet interpolatedNumber = \"\\(number)\"  // string is \"5\"\nlet fortyTwo = \"\\(6 * 7)\"             // string is \"42\"\n\nlet example = \"This post has \\(number) view\\(number == 1 ? \"\" : \"s\")\"\n// It will output \"This post has 5 views\" for the above example.\n// If the variable number had the value 1, it would output \"This post has 1 view\" instead."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let number = 5\nlet interpolatedNumber = \"\\(number)\"  // string is \"5\"\nlet fortyTwo = \"\\(6 * 7)\"             // string is \"42\"\n\nlet example = \"This post has \\(number) view\\(number == 1 ? \"\" : \"s\")\"\n// It will output \"This post has 5 views\" for the above example.\n// If the variable number had the value 1, it would output \"This post has 1 view\" instead.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105079102,
        "id": "8f566458-cc31-4a4c-b03d-84880b2ab461",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105079102,
        "parent_id": "69d8ea8f-e3e1-4e8c-940b-6b0b92c15708",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For custom types, the "
            ],
            [
              "default behavior",
              [
                [
                  "a",
                  "https://github.com/apple/swift/blob/master/stdlib/public/core/StringInterpolation.swift.gyb"
                ]
              ]
            ],
            [
              " of string interpolation is that "
            ],
            [
              "\"\\(myobj)\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is equivalent to "
            ],
            [
              "String(myobj)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the same representation used by "
            ],
            [
              "print(myobj)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". You can customize this behavior by implementing the "
            ],
            [
              "CustomStringConvertible",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.apple.com/library/ios/documentation/Swift/Reference/Swift_CustomStringConvertible_Protocol/index.html"
                ]
              ]
            ],
            [
              " protocol",
              [
                [
                  "a",
                  "https://developer.apple.com/library/ios/documentation/Swift/Reference/Swift_CustomStringConvertible_Protocol/index.html"
                ]
              ]
            ],
            [
              " for your type."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For custom types, the "
          },
          {
            "Text": "default behavior",
            "Link": "https://github.com/apple/swift/blob/master/stdlib/public/core/StringInterpolation.swift.gyb"
          },
          {
            "Text": " of string interpolation is that "
          },
          {
            "Text": "\"\\(myobj)\"",
            "AttrFlags": 2
          },
          {
            "Text": " is equivalent to "
          },
          {
            "Text": "String(myobj)",
            "AttrFlags": 2
          },
          {
            "Text": ", the same representation used by "
          },
          {
            "Text": "print(myobj)",
            "AttrFlags": 2
          },
          {
            "Text": ". You can customize this behavior by implementing the "
          },
          {
            "Text": "CustomStringConvertible",
            "AttrFlags": 2,
            "Link": "https://developer.apple.com/library/ios/documentation/Swift/Reference/Swift_CustomStringConvertible_Protocol/index.html"
          },
          {
            "Text": " protocol",
            "Link": "https://developer.apple.com/library/ios/documentation/Swift/Reference/Swift_CustomStringConvertible_Protocol/index.html"
          },
          {
            "Text": " for your type."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105079102,
        "id": "7e641068-7405-453a-8eeb-197eb0e9e2e6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105079102,
        "parent_id": "69d8ea8f-e3e1-4e8c-940b-6b0b92c15708",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For Swift 3, in accordance with "
            ],
            [
              "SE-0089",
              [
                [
                  "a",
                  "https://github.com/apple/swift-evolution/blob/master/proposals/0089-rename-string-reflection-init.md"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "String.init\u003cT\u003e(_:)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has been renamed to "
            ],
            [
              "String.init\u003cT\u003e(describing:)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For Swift 3, in accordance with "
          },
          {
            "Text": "SE-0089",
            "Link": "https://github.com/apple/swift-evolution/blob/master/proposals/0089-rename-string-reflection-init.md"
          },
          {
            "Text": ", "
          },
          {
            "Text": "String.init\u003cT\u003e(_:)",
            "AttrFlags": 2
          },
          {
            "Text": " has been renamed to "
          },
          {
            "Text": "String.init\u003cT\u003e(describing:)",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105079103,
        "id": "b81523c7-17c2-4d54-b9e1-36aba88cc496",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105079103,
        "parent_id": "69d8ea8f-e3e1-4e8c-940b-6b0b92c15708",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The string interpolation "
            ],
            [
              "\"\\(myobj)\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will prefer the new "
            ],
            [
              "String.init\u003cT: LosslessStringConvertible\u003e(_:)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " initializer, but will fall back to "
            ],
            [
              "init\u003cT\u003e(describing:)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if the value is not "
            ],
            [
              "LosslessStringConvertible",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The string interpolation "
          },
          {
            "Text": "\"\\(myobj)\"",
            "AttrFlags": 2
          },
          {
            "Text": " will prefer the new "
          },
          {
            "Text": "String.init\u003cT: LosslessStringConvertible\u003e(_:)",
            "AttrFlags": 2
          },
          {
            "Text": " initializer, but will fall back to "
          },
          {
            "Text": "init\u003cT\u003e(describing:)",
            "AttrFlags": 2
          },
          {
            "Text": " if the value is not "
          },
          {
            "Text": "LosslessStringConvertible",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105079103,
        "id": "1e669eb0-4a4e-45e6-ba31-8da3c7b39c8e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105079103,
        "parent_id": "69d8ea8f-e3e1-4e8c-940b-6b0b92c15708",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Special Characters"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Special Characters"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105079103,
        "id": "2c5923ca-739d-4cf6-9fd8-abd32abbb63f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105079103,
        "parent_id": "69d8ea8f-e3e1-4e8c-940b-6b0b92c15708",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Certain characters require a special "
            ],
            [
              "escape sequence",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " to use them in string literals:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Certain characters require a special "
          },
          {
            "Text": "escape sequence",
            "AttrFlags": 1
          },
          {
            "Text": " to use them in string literals:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105079104,
        "id": "05d015bf-5ae5-4f39-96d0-43979ca7b270",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105079104,
        "parent_id": "69d8ea8f-e3e1-4e8c-940b-6b0b92c15708",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Character | Meaning — | — "
            ],
            [
              "\\0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | the null character "
            ],
            [
              "\\\\",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | a plain backslash, "
            ],
            [
              "\\\\",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | a tab character "
            ],
            [
              "\\v",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | a vertical tab "
            ],
            [
              "\\r",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | a "
            ],
            [
              "carriage return",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Newline"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | a "
            ],
            [
              "line feed",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Newline"
                ]
              ]
            ],
            [
              " (“newline”) "
            ],
            [
              "\\\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | a double quote, "
            ],
            [
              "\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | a single quote, "
            ],
            [
              "\\'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\u{n}",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | the Unicode code point "
            ],
            [
              "n",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " (in hexadecimal)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Character | Meaning — | — "
          },
          {
            "Text": "\\0",
            "AttrFlags": 2
          },
          {
            "Text": " | the null character "
          },
          {
            "Text": "\\\\",
            "AttrFlags": 2
          },
          {
            "Text": " | a plain backslash, "
          },
          {
            "Text": "\\\\",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "\\t",
            "AttrFlags": 2
          },
          {
            "Text": " | a tab character "
          },
          {
            "Text": "\\v",
            "AttrFlags": 2
          },
          {
            "Text": " | a vertical tab "
          },
          {
            "Text": "\\r",
            "AttrFlags": 2
          },
          {
            "Text": " | a "
          },
          {
            "Text": "carriage return",
            "Link": "https://en.wikipedia.org/wiki/Newline"
          },
          {
            "Text": " "
          },
          {
            "Text": "\\n",
            "AttrFlags": 2
          },
          {
            "Text": " | a "
          },
          {
            "Text": "line feed",
            "Link": "https://en.wikipedia.org/wiki/Newline"
          },
          {
            "Text": " (“newline”) "
          },
          {
            "Text": "\\\"",
            "AttrFlags": 2
          },
          {
            "Text": " | a double quote, "
          },
          {
            "Text": "\"",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "\\'",
            "AttrFlags": 2
          },
          {
            "Text": " | a single quote, "
          },
          {
            "Text": "\\'",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "\\u{n}",
            "AttrFlags": 2
          },
          {
            "Text": " | the Unicode code point "
          },
          {
            "Text": "n",
            "AttrFlags": 4
          },
          {
            "Text": " (in hexadecimal)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105079105,
        "id": "af44a2ab-3517-48cf-a1f9-7f723135f530",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105079105,
        "parent_id": "69d8ea8f-e3e1-4e8c-940b-6b0b92c15708",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105079105,
        "id": "58a9772c-b48a-4ad6-9c97-863b7a0e5ed4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105079105,
        "parent_id": "69d8ea8f-e3e1-4e8c-940b-6b0b92c15708",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let message = \"Then he said, \\\"I \\u{1F496} you!\\\"\"\n\nprint(message) // Then he said, \"I 💖 you!\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let message = \"Then he said, \\\"I \\u{1F496} you!\\\"\"\n\nprint(message) // Then he said, \"I 💖 you!\"",
        "code_language": "Plain Text"
      }
    ],
    "title": "String Character Literals",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}