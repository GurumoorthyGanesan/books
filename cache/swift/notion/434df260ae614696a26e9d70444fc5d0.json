{
  "ID": "434df260-ae61-4696-a26e-9d70444fc5d0",
  "Root": {
    "alive": true,
    "content": [
      "166deee7-ece3-4ffe-8601-e1d777fc4c33",
      "96fd57db-774b-4d15-80cb-3b287b9932b9",
      "23d7ffa6-be79-4e21-b1ad-c641d2636665",
      "923148e8-5225-4357-9573-8e96798ee466",
      "38986240-4487-42a5-ba39-5101a22bcec9",
      "337dc42e-f07a-489d-a2a3-b407d6549a63",
      "fb47de05-6152-45e9-8e6f-0ec62bf3e866"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552105147102,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "434df260-ae61-4696-a26e-9d70444fc5d0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552105147102,
    "parent_id": "cfa2de35-cd00-48e5-aa49-c7bc809cd199",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using Guard"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105147100,
        "id": "166deee7-ece3-4ffe-8601-e1d777fc4c33",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105147100,
        "parent_id": "434df260-ae61-4696-a26e-9d70444fc5d0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Guard checks for a condition, and if it is false, it enters the branch. Guard check branches must leave its enclosing block either via "
            ],
            [
              "return",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "break",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", or "
            ],
            [
              "continue",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (if applicable); failing to do so results in a compiler error. This has the advantage that when a "
            ],
            [
              "guard",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is written it’s not possible to let the flow continue accidentally (as would be possible with an "
            ],
            [
              "if",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Guard checks for a condition, and if it is false, it enters the branch. Guard check branches must leave its enclosing block either via "
          },
          {
            "Text": "return",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "break",
            "AttrFlags": 2
          },
          {
            "Text": ", or "
          },
          {
            "Text": "continue",
            "AttrFlags": 2
          },
          {
            "Text": " (if applicable); failing to do so results in a compiler error. This has the advantage that when a "
          },
          {
            "Text": "guard",
            "AttrFlags": 2
          },
          {
            "Text": " is written it’s not possible to let the flow continue accidentally (as would be possible with an "
          },
          {
            "Text": "if",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105147101,
        "id": "96fd57db-774b-4d15-80cb-3b287b9932b9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105147101,
        "parent_id": "434df260-ae61-4696-a26e-9d70444fc5d0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using guards can help "
            ],
            [
              "keep nesting levels low",
              [
                [
                  "a",
                  "https://stackoverflow.com/questions/36370513/how-to-use-guard-in-swift-instead-of-if"
                ]
              ]
            ],
            [
              ", which usually improves the readability of the code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using guards can help "
          },
          {
            "Text": "keep nesting levels low",
            "Link": "https://stackoverflow.com/questions/36370513/how-to-use-guard-in-swift-instead-of-if"
          },
          {
            "Text": ", which usually improves the readability of the code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105147101,
        "id": "23d7ffa6-be79-4e21-b1ad-c641d2636665",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105147101,
        "parent_id": "434df260-ae61-4696-a26e-9d70444fc5d0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "func printNum(num: Int) {\n    guard num == 10 else {\n        print(\"num is not 10\")\n        return\n    }\n    print(\"num is 10\")\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "func printNum(num: Int) {\n    guard num == 10 else {\n        print(\"num is not 10\")\n        return\n    }\n    print(\"num is 10\")\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105147101,
        "id": "923148e8-5225-4357-9573-8e96798ee466",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105147101,
        "parent_id": "434df260-ae61-4696-a26e-9d70444fc5d0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Guard can also check if there is a value in an "
            ],
            [
              "optional",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/swift/247/optionals#t=201604150336191454197"
                ]
              ]
            ],
            [
              ", and then unwrap it in the outer scope:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Guard can also check if there is a value in an "
          },
          {
            "Text": "optional",
            "Link": "http://stackoverflow.com/documentation/swift/247/optionals#t=201604150336191454197"
          },
          {
            "Text": ", and then unwrap it in the outer scope:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105147101,
        "id": "38986240-4487-42a5-ba39-5101a22bcec9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105147101,
        "parent_id": "434df260-ae61-4696-a26e-9d70444fc5d0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "func printOptionalNum(num: Int?) {\n    guard let unwrappedNum = num else {\n        print(\"num does not exist\")\n        return\n    }\n    print(unwrappedNum)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "func printOptionalNum(num: Int?) {\n    guard let unwrappedNum = num else {\n        print(\"num does not exist\")\n        return\n    }\n    print(unwrappedNum)\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105147102,
        "id": "337dc42e-f07a-489d-a2a3-b407d6549a63",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105147102,
        "parent_id": "434df260-ae61-4696-a26e-9d70444fc5d0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Guard can combine "
            ],
            [
              "optional",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/swift/247/optionals#t=201604150336191454197"
                ]
              ]
            ],
            [
              " unwrapping and condition check using "
            ],
            [
              "where",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Guard can combine "
          },
          {
            "Text": "optional",
            "Link": "http://stackoverflow.com/documentation/swift/247/optionals#t=201604150336191454197"
          },
          {
            "Text": " unwrapping and condition check using "
          },
          {
            "Text": "where",
            "AttrFlags": 2
          },
          {
            "Text": " keyword:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105147102,
        "id": "fb47de05-6152-45e9-8e6f-0ec62bf3e866",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105147102,
        "parent_id": "434df260-ae61-4696-a26e-9d70444fc5d0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "func printOptionalNum(num: Int?) {\nguard let unwrappedNum = num, unwrappedNum == 10 else {\n    print(\"num does not exist or is not 10\")\n    return\n}\nprint(unwrappedNum)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "func printOptionalNum(num: Int?) {\nguard let unwrappedNum = num, unwrappedNum == 10 else {\n    print(\"num does not exist or is not 10\")\n    return\n}\nprint(unwrappedNum)\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Using Guard",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}