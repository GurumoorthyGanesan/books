{
  "ID": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
  "Root": {
    "alive": true,
    "content": [
      "d0f1d0fd-282f-4968-8cda-9fdcb6aeba87",
      "61ceb466-ca32-4adc-a346-45d2b540ce50",
      "bb2b8169-f3d8-432e-b344-449955bbc926",
      "e5e48614-6777-4954-9c9c-235cb0b68429",
      "6e2be2ad-14ca-419f-8624-6a335c25b5f3",
      "7251f60e-42f0-4365-8242-3bf59e96f060",
      "a1d286d6-3d57-4f18-9e60-a106d3f725fd",
      "7f0a13e2-0892-43b8-9ddc-059f27584e5d",
      "677d023d-b16b-4f26-a789-ac61d913405a",
      "d7a308bb-f1e5-4a9d-bade-281ac2fd0a23",
      "1137d009-a354-493d-9952-9f5c7394753c",
      "c86ec5b3-aa00-418c-b423-b37f3b1deef1",
      "e4e186da-2cc7-4c45-ae41-491ab62c5717",
      "97d373e2-787f-40ad-b2db-e94e56697f19",
      "0e0e4978-06f0-401b-ae13-c653d70fe14c",
      "12010cb0-4131-40bc-b8f5-216194394dee",
      "9f28d32f-52d7-4172-bf9c-ac5c9469d1ca",
      "efe879ec-7dc3-4247-afe1-e1bb0e277ea1",
      "0a347b24-1f5a-4f97-85ad-68a0477978e8",
      "c914ba5b-0ea0-4041-858f-58499359ebb3",
      "d428f980-d338-4e75-9b8d-cd91427b490f",
      "93acf210-97a8-4884-aa9f-5ff648ce3289"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552104976934,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552104976934,
    "parent_id": "b3a03a81-83e5-4085-b462-4a9e0b487f4a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Protocol Basics"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976923,
        "id": "d0f1d0fd-282f-4968-8cda-9fdcb6aeba87",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976923,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "About Protocols"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "About Protocols"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976926,
        "id": "61ceb466-ca32-4adc-a346-45d2b540ce50",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976926,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A Protocol specifies initialisers, properties, functions, subscripts and associated types required of a Swift object type (class, struct or enum) conforming to the protocol. In some languages similar ideas for requirement specifications of subsequent objects are known as ‘interfaces’."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A Protocol specifies initialisers, properties, functions, subscripts and associated types required of a Swift object type (class, struct or enum) conforming to the protocol. In some languages similar ideas for requirement specifications of subsequent objects are known as ‘interfaces’."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976926,
        "id": "bb2b8169-f3d8-432e-b344-449955bbc926",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976926,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A declared and defined Protocol is a Type, in and of itself, with a signature of its stated requirements, somewhat similar to the manner in which Swift Functions are a Type based on their signature of parameters and returns."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A declared and defined Protocol is a Type, in and of itself, with a signature of its stated requirements, somewhat similar to the manner in which Swift Functions are a Type based on their signature of parameters and returns."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976926,
        "id": "e5e48614-6777-4954-9c9c-235cb0b68429",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976926,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Swift Protocol specifications can be optional, explicitly required and/or given default implementations via a facility known as Protocol Extensions. A Swift Object Type (class, struct or enum) desiring to conform to a Protocol that’s fleshed out with Extensions for all its specified requirements needs only state its desire to conform to be in full conformance. The default implementations facility of Protocol Extensions can suffice to fulfil all obligations of conforming to a Protocol."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Swift Protocol specifications can be optional, explicitly required and/or given default implementations via a facility known as Protocol Extensions. A Swift Object Type (class, struct or enum) desiring to conform to a Protocol that’s fleshed out with Extensions for all its specified requirements needs only state its desire to conform to be in full conformance. The default implementations facility of Protocol Extensions can suffice to fulfil all obligations of conforming to a Protocol."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976927,
        "id": "6e2be2ad-14ca-419f-8624-6a335c25b5f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976927,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Protocols can be inherited by other Protocols. This, in conjunction with Protocol Extensions, means Protocols can and should be thought of as a significant feature of Swift."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Protocols can be inherited by other Protocols. This, in conjunction with Protocol Extensions, means Protocols can and should be thought of as a significant feature of Swift."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976927,
        "id": "7251f60e-42f0-4365-8242-3bf59e96f060",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976927,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Protocols and Extensions are important to realising Swift’s broader objectives and approaches to program design flexibility and development processes. The primary stated purpose of Swift’s Protocol and Extension capability is facilitation of compositional design in program architecture and development. This is referred to as Protocol Oriented Programming. Crusty old timers consider this superior to a focus on OOP design."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Protocols and Extensions are important to realising Swift’s broader objectives and approaches to program design flexibility and development processes. The primary stated purpose of Swift’s Protocol and Extension capability is facilitation of compositional design in program architecture and development. This is referred to as Protocol Oriented Programming. Crusty old timers consider this superior to a focus on OOP design."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976929,
        "id": "a1d286d6-3d57-4f18-9e60-a106d3f725fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976929,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Protocols",
              [
                [
                  "a",
                  "https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html"
                ]
              ]
            ],
            [
              " define interfaces which can be implemented by any "
            ],
            [
              "struct",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/swift/255/structs"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "class",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/swift/459/classes"
                ]
              ]
            ],
            [
              ", or "
            ],
            [
              "enum",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/swift/224/enums"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Protocols",
            "Link": "https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html"
          },
          {
            "Text": " define interfaces which can be implemented by any "
          },
          {
            "Text": "struct",
            "Link": "http://stackoverflow.com/documentation/swift/255/structs"
          },
          {
            "Text": ", "
          },
          {
            "Text": "class",
            "Link": "http://stackoverflow.com/documentation/swift/459/classes"
          },
          {
            "Text": ", or "
          },
          {
            "Text": "enum",
            "Link": "http://stackoverflow.com/documentation/swift/224/enums"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976930,
        "id": "7f0a13e2-0892-43b8-9ddc-059f27584e5d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976930,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "protocol MyProtocol {\n    init(value: Int)                      // required initializer\n    func doSomething() -\u003e Bool            // instance method\n    var message: String { get }           // instance read-only property\n    var value: Int { get set }            // read-write instance property\n    subscript(index: Int) -\u003e Int { get }  // instance subscript\n    static func instructions() -\u003e String  // static method\n    static var max: Int { get }           // static read-only property\n    static var total: Int { get set }     // read-write static property\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "protocol MyProtocol {\n    init(value: Int)                      // required initializer\n    func doSomething() -\u003e Bool            // instance method\n    var message: String { get }           // instance read-only property\n    var value: Int { get set }            // read-write instance property\n    subscript(index: Int) -\u003e Int { get }  // instance subscript\n    static func instructions() -\u003e String  // static method\n    static var max: Int { get }           // static read-only property\n    static var total: Int { get set }     // read-write static property\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976930,
        "id": "677d023d-b16b-4f26-a789-ac61d913405a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976930,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Properties defined in protocols",
              [
                [
                  "a",
                  "https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID269"
                ]
              ]
            ],
            [
              " must either be annotated as "
            ],
            [
              "{ get }",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "{ get set }",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "{ get }",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " means that the property must be gettable, and therefore it can be implemented as "
            ],
            [
              "any",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " kind of property. "
            ],
            [
              "{ get set }",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " means that the property must be settable as well as gettable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Properties defined in protocols",
            "Link": "https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID269"
          },
          {
            "Text": " must either be annotated as "
          },
          {
            "Text": "{ get }",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "{ get set }",
            "AttrFlags": 2
          },
          {
            "Text": ". "
          },
          {
            "Text": "{ get }",
            "AttrFlags": 2
          },
          {
            "Text": " means that the property must be gettable, and therefore it can be implemented as "
          },
          {
            "Text": "any",
            "AttrFlags": 4
          },
          {
            "Text": " kind of property. "
          },
          {
            "Text": "{ get set }",
            "AttrFlags": 2
          },
          {
            "Text": " means that the property must be settable as well as gettable."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976931,
        "id": "d7a308bb-f1e5-4a9d-bade-281ac2fd0a23",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976931,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A struct, class, or enum may "
            ],
            [
              "conform to",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " a protocol:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A struct, class, or enum may "
          },
          {
            "Text": "conform to",
            "AttrFlags": 1
          },
          {
            "Text": " a protocol:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976931,
        "id": "1137d009-a354-493d-9952-9f5c7394753c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976931,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              ": MyProtocol: MyProtocol: MyProtocol"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": ": MyProtocol: MyProtocol: MyProtocol",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976931,
        "id": "c86ec5b3-aa00-418c-b423-b37f3b1deef1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976931,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A protocol may also define a "
            ],
            [
              "default implementation",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " for any of its requirements "
            ],
            [
              "through an extension",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/swift/324/extensions"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A protocol may also define a "
          },
          {
            "Text": "default implementation",
            "AttrFlags": 1
          },
          {
            "Text": " for any of its requirements "
          },
          {
            "Text": "through an extension",
            "Link": "http://stackoverflow.com/documentation/swift/324/extensions"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976931,
        "id": "e4e186da-2cc7-4c45-ae41-491ab62c5717",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976931,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "extension MyProtocol {\n    \n    // default implementation of doSomething() -\u003e Bool\n    // conforming types will use this implementation if they don't define their own\n    func doSomething() -\u003e Bool {\n        print(\"do something!\")\n        return true\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "extension MyProtocol {\n    \n    // default implementation of doSomething() -\u003e Bool\n    // conforming types will use this implementation if they don't define their own\n    func doSomething() -\u003e Bool {\n        print(\"do something!\")\n        return true\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976932,
        "id": "97d373e2-787f-40ad-b2db-e94e56697f19",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976932,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A protocol can be "
            ],
            [
              "used as a type",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", provided it doesn’t have "
            ],
            [
              "associatedtype",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/swift/241/protocols/873/associated-type-requirements"
                ]
              ]
            ],
            [
              " requirements",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/swift/241/protocols/873/associated-type-requirements"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A protocol can be "
          },
          {
            "Text": "used as a type",
            "AttrFlags": 1
          },
          {
            "Text": ", provided it doesn’t have "
          },
          {
            "Text": "associatedtype",
            "AttrFlags": 2,
            "Link": "http://stackoverflow.com/documentation/swift/241/protocols/873/associated-type-requirements"
          },
          {
            "Text": " requirements",
            "Link": "http://stackoverflow.com/documentation/swift/241/protocols/873/associated-type-requirements"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976932,
        "id": "0e0e4978-06f0-401b-ae13-c653d70fe14c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976932,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "MyProtocolMyProtocol"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "MyProtocolMyProtocol",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976933,
        "id": "12010cb0-4131-40bc-b8f5-216194394dee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976933,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You may also define an abstract type that conforms to "
            ],
            [
              "multiple",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " protocols:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You may also define an abstract type that conforms to "
          },
          {
            "Text": "multiple",
            "AttrFlags": 1
          },
          {
            "Text": " protocols:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976933,
        "id": "9f28d32f-52d7-4172-bf9c-ac5c9469d1ca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976933,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With Swift 3 or better, this is done by separating the list of protocols with an ampersand ("
            ],
            [
              "\u0026",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With Swift 3 or better, this is done by separating the list of protocols with an ampersand ("
          },
          {
            "Text": "\u0026",
            "AttrFlags": 2
          },
          {
            "Text": "):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976933,
        "id": "efe879ec-7dc3-4247-afe1-e1bb0e277ea1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976933,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "MyProtocol \u0026 AnotherProtocolMyProtocol \u0026 AnotherProtocol"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "MyProtocol \u0026 AnotherProtocolMyProtocol \u0026 AnotherProtocol",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976933,
        "id": "0a347b24-1f5a-4f97-85ad-68a0477978e8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976933,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Older versions have syntax "
            ],
            [
              "protocol\u003c...\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " where the protocols are a comma-separated list between the angle brackets "
            ],
            [
              "\u003c\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Older versions have syntax "
          },
          {
            "Text": "protocol\u003c...\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " where the protocols are a comma-separated list between the angle brackets "
          },
          {
            "Text": "\u003c\u003e",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976933,
        "id": "c914ba5b-0ea0-4041-858f-58499359ebb3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976933,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "protocol\u003cMyProtocol, AnotherProtocol\u003eprotocol\u003cMyProtocol, AnotherProtocol\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "protocol\u003cMyProtocol, AnotherProtocol\u003eprotocol\u003cMyProtocol, AnotherProtocol\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976934,
        "id": "d428f980-d338-4e75-9b8d-cd91427b490f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976934,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Existing types can be "
            ],
            [
              "extended",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " to conform to a protocol:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Existing types can be "
          },
          {
            "Text": "extended",
            "AttrFlags": 1
          },
          {
            "Text": " to conform to a protocol:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104976934,
        "id": "93acf210-97a8-4884-aa9f-5ff648ce3289",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104976934,
        "parent_id": "75c1ebbc-80f5-4bd0-9c98-5d9b4a401277",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "extension String : MyProtocol {\n    // Implement any requirements which String doesn't already satisfy\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "extension String : MyProtocol {\n    // Implement any requirements which String doesn't already satisfy\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Protocol Basics",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}