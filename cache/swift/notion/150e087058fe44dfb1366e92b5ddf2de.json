{
  "ID": "150e0870-58fe-44df-b136-6e92b5ddf2de",
  "Root": {
    "alive": true,
    "content": [
      "0340b07a-cc69-44ca-b0c0-f2958169faba",
      "199ae35a-1dbe-44c5-a525-aeda266c5abf",
      "e4462ebd-f50a-4bda-8665-7db94a7cceb6",
      "3df9044e-a9b3-443f-9749-337a82a9f7e9",
      "9f281a88-cc0f-4af5-a96e-2011f0dde12e",
      "c5bd2c75-1694-4d15-9f9a-b150b4df89de",
      "157b55f5-5e15-4ead-bb37-3ca98110ce68",
      "da74c3fd-23f8-4b3f-abd3-6667d10bf6d1",
      "d2aece39-abd4-4425-9586-c9c656847b66",
      "e7122e17-1603-4258-8d7b-c10c3abb11b1",
      "6ab5d1a3-2750-4679-9a9e-0e03e1b50d9a",
      "a552944c-5f40-42da-8475-cedc28a0cce3",
      "5e9c91cc-074e-4c21-af30-dada150d29c3",
      "d06e4fcb-5ac1-4647-acbe-2564b94a9f1c",
      "71f5e5be-3deb-490c-8b42-30e0747fe9b9",
      "cae43712-cd8c-46a3-8cd5-cbf7201348c4",
      "b37c96d4-8948-4314-a7cf-f9cb538b068c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552105945103,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "150e0870-58fe-44df-b136-6e92b5ddf2de",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552105945103,
    "parent_id": "298a6998-40b4-4079-ae0e-f0fc31d96e18",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Introduction with advance functions"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105945097,
        "id": "0340b07a-cc69-44ca-b0c0-f2958169faba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105945097,
        "parent_id": "150e0870-58fe-44df-b136-6e92b5ddf2de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s take an scenario to understand advance function in better way,"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s take an scenario to understand advance function in better way,"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105945100,
        "id": "199ae35a-1dbe-44c5-a525-aeda266c5abf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105945100,
        "parent_id": "150e0870-58fe-44df-b136-6e92b5ddf2de",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct User {\n    var name: String\n    var age: Int\n    var country: String?\n}\n\n//User's information \nlet user1 = User(name: \"John\", age: 24, country: \"USA\")\nlet user2 = User(name: \"Chan\", age: 20, country: nil)\nlet user3 = User(name: \"Morgan\", age: 30, country: nil)\nlet user4 = User(name: \"Rachel\", age: 20, country: \"UK\")\nlet user5 = User(name: \"Katie\", age: 23, country: \"USA\")\nlet user6 = User(name: \"David\", age: 35, country: \"USA\")\nlet user7 = User(name: \"Bob\",age: 22, country: nil)\n\n//User's array list\nlet arrUser = [user1, user2, user3, user4, user5, user6, user7]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct User {\n    var name: String\n    var age: Int\n    var country: String?\n}\n\n//User's information \nlet user1 = User(name: \"John\", age: 24, country: \"USA\")\nlet user2 = User(name: \"Chan\", age: 20, country: nil)\nlet user3 = User(name: \"Morgan\", age: 30, country: nil)\nlet user4 = User(name: \"Rachel\", age: 20, country: \"UK\")\nlet user5 = User(name: \"Katie\", age: 23, country: \"USA\")\nlet user6 = User(name: \"David\", age: 35, country: \"USA\")\nlet user7 = User(name: \"Bob\",age: 22, country: nil)\n\n//User's array list\nlet arrUser = [user1, user2, user3, user4, user5, user6, user7]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105945100,
        "id": "e4462ebd-f50a-4bda-8665-7db94a7cceb6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105945100,
        "parent_id": "150e0870-58fe-44df-b136-6e92b5ddf2de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Map Function:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Map Function:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105945100,
        "id": "3df9044e-a9b3-443f-9749-337a82a9f7e9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105945100,
        "parent_id": "150e0870-58fe-44df-b136-6e92b5ddf2de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Use map to loop over a collection and apply the same operation to each element in the collection. The map function returns an array containing the results of applying a mapping or transform function to each item."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Use map to loop over a collection and apply the same operation to each element in the collection. The map function returns an array containing the results of applying a mapping or transform function to each item."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105945101,
        "id": "9f281a88-cc0f-4af5-a96e-2011f0dde12e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105945101,
        "parent_id": "150e0870-58fe-44df-b136-6e92b5ddf2de",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//Fetch all the user's name from array \nlet arrUserName = arrUser.map({ $0.name }) // [\"John\", \"Chan\", \"Morgan\", \"Rachel\", \"Katie\", \"David\", \"Bob\"]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//Fetch all the user's name from array \nlet arrUserName = arrUser.map({ $0.name }) // [\"John\", \"Chan\", \"Morgan\", \"Rachel\", \"Katie\", \"David\", \"Bob\"]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105945101,
        "id": "c5bd2c75-1694-4d15-9f9a-b150b4df89de",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105945101,
        "parent_id": "150e0870-58fe-44df-b136-6e92b5ddf2de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Flat-Map Function:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Flat-Map Function:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105945101,
        "id": "157b55f5-5e15-4ead-bb37-3ca98110ce68",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105945101,
        "parent_id": "150e0870-58fe-44df-b136-6e92b5ddf2de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The simplest use is as the name suggests to flatten a collection of collections."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The simplest use is as the name suggests to flatten a collection of collections."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105945101,
        "id": "da74c3fd-23f8-4b3f-abd3-6667d10bf6d1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105945101,
        "parent_id": "150e0870-58fe-44df-b136-6e92b5ddf2de",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Fetch all user country name \u0026 ignore nil value.\nlet arrCountry = arrUser.flatMap({ $0.country }) // [\"USA\", \"UK\", \"USA\", \"USA\"]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Fetch all user country name \u0026 ignore nil value.\nlet arrCountry = arrUser.flatMap({ $0.country }) // [\"USA\", \"UK\", \"USA\", \"USA\"]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105945101,
        "id": "d2aece39-abd4-4425-9586-c9c656847b66",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105945101,
        "parent_id": "150e0870-58fe-44df-b136-6e92b5ddf2de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Filter Function:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Filter Function:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105945101,
        "id": "e7122e17-1603-4258-8d7b-c10c3abb11b1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105945101,
        "parent_id": "150e0870-58fe-44df-b136-6e92b5ddf2de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Use filter to loop over a collection and return an Array containing only those elements that match an include condition."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Use filter to loop over a collection and return an Array containing only those elements that match an include condition."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105945102,
        "id": "6ab5d1a3-2750-4679-9a9e-0e03e1b50d9a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105945102,
        "parent_id": "150e0870-58fe-44df-b136-6e92b5ddf2de",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Filtering USA user from the array user list.\nlet arrUSAUsers = arrUser.filter({ $0.country == \"USA\" }) // [user1, user5, user6]\n\n// User chaining methods to fetch user's name who live in USA \nlet arrUserList = arrUser.filter({ $0.country == \"USA\" }).map({ $0.name }) // [\"John\", \"Katie\", \"David\"]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Filtering USA user from the array user list.\nlet arrUSAUsers = arrUser.filter({ $0.country == \"USA\" }) // [user1, user5, user6]\n\n// User chaining methods to fetch user's name who live in USA \nlet arrUserList = arrUser.filter({ $0.country == \"USA\" }).map({ $0.name }) // [\"John\", \"Katie\", \"David\"]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105945102,
        "id": "a552944c-5f40-42da-8475-cedc28a0cce3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105945102,
        "parent_id": "150e0870-58fe-44df-b136-6e92b5ddf2de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Reduce:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Reduce:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105945102,
        "id": "5e9c91cc-074e-4c21-af30-dada150d29c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105945102,
        "parent_id": "150e0870-58fe-44df-b136-6e92b5ddf2de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Use reduce to combine all items in a collection to create a single new value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Use reduce to combine all items in a collection to create a single new value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105945102,
        "id": "d06e4fcb-5ac1-4647-acbe-2564b94a9f1c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105945102,
        "parent_id": "150e0870-58fe-44df-b136-6e92b5ddf2de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Swift 2.3:-"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Swift 2.3:-"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105945102,
        "id": "71f5e5be-3deb-490c-8b42-30e0747fe9b9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105945102,
        "parent_id": "150e0870-58fe-44df-b136-6e92b5ddf2de",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//Fetch user's total age.\nlet arrUserAge = arrUser.map({ $0.age }).reduce(0, combine: { $0 + $1 }) //174\n\n//Prepare all user name string with seperated by comma \nlet strUserName = arrUserName.reduce(\"\", combine: { $0 == \"\" ? $1 : $0 + \", \" + $1 }) // John, Chan, Morgan, Rachel, Katie, David, Bob"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//Fetch user's total age.\nlet arrUserAge = arrUser.map({ $0.age }).reduce(0, combine: { $0 + $1 }) //174\n\n//Prepare all user name string with seperated by comma \nlet strUserName = arrUserName.reduce(\"\", combine: { $0 == \"\" ? $1 : $0 + \", \" + $1 }) // John, Chan, Morgan, Rachel, Katie, David, Bob",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105945102,
        "id": "cae43712-cd8c-46a3-8cd5-cbf7201348c4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105945102,
        "parent_id": "150e0870-58fe-44df-b136-6e92b5ddf2de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Swift 3:-"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Swift 3:-"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105945103,
        "id": "b37c96d4-8948-4314-a7cf-f9cb538b068c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105945103,
        "parent_id": "150e0870-58fe-44df-b136-6e92b5ddf2de",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//Fetch user's total age.\nlet arrUserAge = arrUser.map({ $0.age }).reduce(0, { $0 + $1 }) //174\n\n//Prepare all user name string with seperated by comma \nlet strUserName = arrUserName.reduce(\"\", { $0 == \"\" ? $1 : $0 + \", \" + $1 }) // John, Chan, Morgan, Rachel, Katie, David, Bob"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//Fetch user's total age.\nlet arrUserAge = arrUser.map({ $0.age }).reduce(0, { $0 + $1 }) //174\n\n//Prepare all user name string with seperated by comma \nlet strUserName = arrUserName.reduce(\"\", { $0 == \"\" ? $1 : $0 + \", \" + $1 }) // John, Chan, Morgan, Rachel, Katie, David, Bob",
        "code_language": "Plain Text"
      }
    ],
    "title": "Introduction with advance functions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}