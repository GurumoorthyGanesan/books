{
  "ID": "e7684660-f381-4ea2-8302-97e00f809c4f",
  "Root": {
    "alive": true,
    "content": [
      "b5175b33-6a4f-43e2-8123-e56d0107a567",
      "153c4fa5-d155-43a4-a375-fb2c635c526c",
      "109b313d-8a87-40fb-87ae-deb9ea8957b8",
      "29997584-d745-4f6a-8dd1-744d2447eb86",
      "fc1e3b25-3777-42b1-bddf-152270065251",
      "a72f0c96-1f6f-430b-92ea-ffe21b2c2630",
      "52283bc8-7a40-415a-a5ed-5b0d634b104c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552105820547,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e7684660-f381-4ea2-8302-97e00f809c4f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552105820547,
    "parent_id": "67e4333d-b244-489f-94a9-5033eda1d62f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "When to use a defer statement"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105820543,
        "id": "b5175b33-6a4f-43e2-8123-e56d0107a567",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105820543,
        "parent_id": "e7684660-f381-4ea2-8302-97e00f809c4f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A "
            ],
            [
              "defer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement consists of a block of code, which will be executed when a function returns and should be used for cleanup."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A "
          },
          {
            "Text": "defer",
            "AttrFlags": 2
          },
          {
            "Text": " statement consists of a block of code, which will be executed when a function returns and should be used for cleanup."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105820546,
        "id": "153c4fa5-d155-43a4-a375-fb2c635c526c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105820546,
        "parent_id": "e7684660-f381-4ea2-8302-97e00f809c4f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As Swift’s "
            ],
            [
              "guard",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statements encourage a style of early return, many possible paths for a return may exist. A "
            ],
            [
              "defer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement provides cleanup code, which then does not need to be repeated every time."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As Swift’s "
          },
          {
            "Text": "guard",
            "AttrFlags": 2
          },
          {
            "Text": " statements encourage a style of early return, many possible paths for a return may exist. A "
          },
          {
            "Text": "defer",
            "AttrFlags": 2
          },
          {
            "Text": " statement provides cleanup code, which then does not need to be repeated every time."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105820546,
        "id": "109b313d-8a87-40fb-87ae-deb9ea8957b8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105820546,
        "parent_id": "e7684660-f381-4ea2-8302-97e00f809c4f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It can also save time during debugging and profiling, as memory leaks and unused open resources due to forgotten cleanup can be avoided."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It can also save time during debugging and profiling, as memory leaks and unused open resources due to forgotten cleanup can be avoided."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105820546,
        "id": "29997584-d745-4f6a-8dd1-744d2447eb86",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105820546,
        "parent_id": "e7684660-f381-4ea2-8302-97e00f809c4f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It can be used to deallocate a buffer at the end of a function:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It can be used to deallocate a buffer at the end of a function:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105820546,
        "id": "fc1e3b25-3777-42b1-bddf-152270065251",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105820546,
        "parent_id": "e7684660-f381-4ea2-8302-97e00f809c4f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "func doSomething() {\n    let data = UnsafeMutablePointer\u003cUInt8\u003e(allocatingCapacity: 42)\n    // this pointer would not be released when the function returns \n    // so we add a defer-statement\n    defer {\n        data.deallocateCapacity(42)\n    }\n    // it will be executed when the function returns.\n    \n    guard condition else { \n        return /* will execute defer-block */ \n    }\n       \n}   // The defer-block will also be executed on the end of the function."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "func doSomething() {\n    let data = UnsafeMutablePointer\u003cUInt8\u003e(allocatingCapacity: 42)\n    // this pointer would not be released when the function returns \n    // so we add a defer-statement\n    defer {\n        data.deallocateCapacity(42)\n    }\n    // it will be executed when the function returns.\n    \n    guard condition else { \n        return /* will execute defer-block */ \n    }\n       \n}   // The defer-block will also be executed on the end of the function.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105820546,
        "id": "a72f0c96-1f6f-430b-92ea-ffe21b2c2630",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105820546,
        "parent_id": "e7684660-f381-4ea2-8302-97e00f809c4f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It can also be used to close resources at the end of a function:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It can also be used to close resources at the end of a function:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105820547,
        "id": "52283bc8-7a40-415a-a5ed-5b0d634b104c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105820547,
        "parent_id": "e7684660-f381-4ea2-8302-97e00f809c4f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "func write(data: UnsafePointer\u003cUInt8\u003e, dataLength: Int) throws {\n    var stream:NSOutputStream = getOutputStream()\n    defer {\n        stream.close()\n    }\n\n    let written = stream.write(data, maxLength: dataLength)\n    guard written \u003e= 0 else { \n        throw stream.streamError! /* will execute defer-block */ \n    }\n    \n}    // the defer-block will also be executed on the end of the function"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "func write(data: UnsafePointer\u003cUInt8\u003e, dataLength: Int) throws {\n    var stream:NSOutputStream = getOutputStream()\n    defer {\n        stream.close()\n    }\n\n    let written = stream.write(data, maxLength: dataLength)\n    guard written \u003e= 0 else { \n        throw stream.streamError! /* will execute defer-block */ \n    }\n    \n}    // the defer-block will also be executed on the end of the function",
        "code_language": "Plain Text"
      }
    ],
    "title": "When to use a defer statement",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}