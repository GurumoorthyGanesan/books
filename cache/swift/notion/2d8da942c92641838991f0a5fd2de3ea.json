{
  "ID": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
  "Root": {
    "alive": true,
    "content": [
      "e8af3a37-b499-41b2-ba52-6f1f63850de9",
      "6571816f-f8bd-493d-a9f2-57f7116944ee",
      "04e664f4-1235-41b0-ba78-14f818c111d7",
      "eef8302c-c8a8-41f4-b597-d1aa2130b740",
      "4992dd1d-450b-429b-8c4c-f1bf7a663532",
      "afed6aa5-f2ca-49f0-b8cd-693153753682",
      "bc75041a-4a33-4edd-a01b-bd4aa924441d",
      "90c0d703-db3d-43f6-8c82-121ec57ca7db",
      "1ae74f59-dcd0-480e-8ab5-8c791e9130d9",
      "9cbc160c-4d58-47ca-825b-bbb58027657b",
      "1e13beef-dd10-40a5-b2ca-7dc84ff6850d",
      "657beb04-a835-4c8e-9ef2-1fdfb6b14fd4",
      "de12429f-c86d-4476-80ff-79a707dee4e5",
      "5f30fb78-35a7-48a9-a705-0308c4c42619",
      "6c8c72f2-6ec8-4629-ba88-7f7f1751e8d4",
      "faa77d2a-fc3c-4a72-aecb-5607bf0df0cb",
      "7ef214db-0a56-4b7e-b952-377e2bdbe092",
      "0495cfec-564b-48e0-a738-da1451efb9ea",
      "a89dae67-c2c9-45ae-b6eb-1d811917b16d",
      "385f694d-6ba7-44e2-84c0-3ec6133dc3a9",
      "5bffc682-06d4-4a7d-904b-8623773318f1",
      "386111f0-685c-4675-8c26-b1b29928e3ff",
      "d0110320-8399-4410-9796-5a20cdbbc27c",
      "67edb738-5975-4643-befe-c5a2dcbb56b4",
      "c7467bc0-871d-4408-8ae0-97af394df546",
      "65881c2c-0029-424e-b6af-23ff4de8e2d3",
      "1a62563e-d061-44f1-aefb-feae315e24a4",
      "6daf6a25-0c5a-452b-9c57-5305cbc9469e",
      "9b861341-2fd4-49c1-a24a-97cf837124d6",
      "6d1b27bc-95ef-4263-8413-f3c2e69aa442",
      "1149f14f-abd3-488b-809f-5b993bacc68b",
      "f670b45d-b1a2-4138-8889-97207eb5a449",
      "c0574de0-d793-4b0b-b5fb-fea9ac902984",
      "69b0949a-1767-4886-aeaf-b20a32e979fa",
      "9d72839a-0df7-4163-9137-36f04cbfd45f",
      "e7d4c102-9995-4c7d-af48-3952814ca2f1",
      "bea25a72-2a8e-42f5-ae8a-6da8ddd037c0",
      "74a4994d-ac16-4602-a0d3-c27af7841977",
      "190c194d-b768-482f-b285-34f6caba2c83"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552105596843,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552105596843,
    "parent_id": "e1154a97-185d-4fcd-81a8-6d4e1e7d3a99",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Type casting in Swift Language"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596837,
        "id": "e8af3a37-b499-41b2-ba52-6f1f63850de9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596837,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596837,
        "id": "6571816f-f8bd-493d-a9f2-57f7116944ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596837,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Type Casting"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Type Casting"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596837,
        "id": "04e664f4-1235-41b0-ba78-14f818c111d7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596837,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Type casting is a way to check the type of an instance, or to treat that instance as a different superclass or subclass from somewhere else in its own class hierarchy."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Type casting is a way to check the type of an instance, or to treat that instance as a different superclass or subclass from somewhere else in its own class hierarchy."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596838,
        "id": "eef8302c-c8a8-41f4-b597-d1aa2130b740",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596838,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Type casting in Swift is implemented with the is and as operators. These two operators provide a simple and expressive way to check the type of a value or cast a value to a different type."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Type casting in Swift is implemented with the is and as operators. These two operators provide a simple and expressive way to check the type of a value or cast a value to a different type."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596838,
        "id": "4992dd1d-450b-429b-8c4c-f1bf7a663532",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596838,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596838,
        "id": "afed6aa5-f2ca-49f0-b8cd-693153753682",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596838,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Downcasting"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Downcasting"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596838,
        "id": "bc75041a-4a33-4edd-a01b-bd4aa924441d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596838,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A constant or variable of a certain class type may actually refer to an instance of a subclass behind the scenes. Where you believe this is the case, you can try to downcast to the subclass type with a type cast operator (as? or as!)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A constant or variable of a certain class type may actually refer to an instance of a subclass behind the scenes. Where you believe this is the case, you can try to downcast to the subclass type with a type cast operator (as? or as!)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596838,
        "id": "90c0d703-db3d-43f6-8c82-121ec57ca7db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596838,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Because downcasting can fail, the type cast operator comes in two different forms. The conditional form, as?, returns an optional value of the type you are trying to downcast to. The forced form, as!, attempts the downcast and force-unwraps the result as a single compound action."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Because downcasting can fail, the type cast operator comes in two different forms. The conditional form, as?, returns an optional value of the type you are trying to downcast to. The forced form, as!, attempts the downcast and force-unwraps the result as a single compound action."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596838,
        "id": "1ae74f59-dcd0-480e-8ab5-8c791e9130d9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596838,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Use the conditional form of the type cast operator (as?) when you are not sure if the downcast will succeed. This form of the operator will always return an optional value, and the value will be nil if the downcast was not possible. This enables you to check for a successful downcast."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Use the conditional form of the type cast operator (as?) when you are not sure if the downcast will succeed. This form of the operator will always return an optional value, and the value will be nil if the downcast was not possible. This enables you to check for a successful downcast."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596840,
        "id": "9cbc160c-4d58-47ca-825b-bbb58027657b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596840,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Use the forced form of the type cast operator (as!) only when you are sure that the downcast will always succeed. This form of the operator will trigger a runtime error if you try to downcast to an incorrect class type. "
            ],
            [
              "Know more.",
              [
                [
                  "a",
                  "https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TypeCasting.html"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Use the forced form of the type cast operator (as!) only when you are sure that the downcast will always succeed. This form of the operator will trigger a runtime error if you try to downcast to an incorrect class type. "
          },
          {
            "Text": "Know more.",
            "Link": "https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TypeCasting.html"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596840,
        "id": "1e13beef-dd10-40a5-b2ca-7dc84ff6850d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596840,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596840,
        "id": "657beb04-a835-4c8e-9ef2-1fdfb6b14fd4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596840,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "String to Int \u0026 Float conversion : -"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "String to Int \u0026 Float conversion : -"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596840,
        "id": "de12429f-c86d-4476-80ff-79a707dee4e5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596840,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let numbers = \"888.00\"\nlet intValue = NSString(string: numbers).integerValue\nprint(intValue) // Output - 888\n\n\nlet numbers = \"888.00\"\nlet floatValue = NSString(string: numbers).floatValue\nprint(floatValue) // Output : 888.0"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let numbers = \"888.00\"\nlet intValue = NSString(string: numbers).integerValue\nprint(intValue) // Output - 888\n\n\nlet numbers = \"888.00\"\nlet floatValue = NSString(string: numbers).floatValue\nprint(floatValue) // Output : 888.0",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596841,
        "id": "5f30fb78-35a7-48a9-a705-0308c4c42619",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596841,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596841,
        "id": "6c8c72f2-6ec8-4629-ba88-7f7f1751e8d4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596841,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Float to String Conversion"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Float to String Conversion"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596841,
        "id": "faa77d2a-fc3c-4a72-aecb-5607bf0df0cb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596841,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let numbers = 888.00\nlet floatValue = String(numbers) \nprint(floatValue) // Output : 888.0"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let numbers = 888.00\nlet floatValue = String(numbers) \nprint(floatValue) // Output : 888.0",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596841,
        "id": "7ef214db-0a56-4b7e-b952-377e2bdbe092",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596841,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Get Float value at particular decimal point \nlet numbers = 888.00\nlet floatValue = String(format: \"%.2f\", numbers) // Here %.2f will give 2 numbers after decimal points we can use as per our need\nprint(floatValue) // Output : \"888.00\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Get Float value at particular decimal point \nlet numbers = 888.00\nlet floatValue = String(format: \"%.2f\", numbers) // Here %.2f will give 2 numbers after decimal points we can use as per our need\nprint(floatValue) // Output : \"888.00\"",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596841,
        "id": "0495cfec-564b-48e0-a738-da1451efb9ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596841,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596841,
        "id": "a89dae67-c2c9-45ae-b6eb-1d811917b16d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596841,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Integer to String value"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Integer to String value"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596841,
        "id": "385f694d-6ba7-44e2-84c0-3ec6133dc3a9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596841,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let numbers = 888\nlet intValue = String(numbers)\nprint(intValue) // Output : \"888\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let numbers = 888\nlet intValue = String(numbers)\nprint(intValue) // Output : \"888\"",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596841,
        "id": "5bffc682-06d4-4a7d-904b-8623773318f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596841,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Float to String value"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Float to String value"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596841,
        "id": "386111f0-685c-4675-8c26-b1b29928e3ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596841,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let numbers = 888.00\nlet floatValue = String(numbers)\nprint(floatValue)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let numbers = 888.00\nlet floatValue = String(numbers)\nprint(floatValue)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596841,
        "id": "d0110320-8399-4410-9796-5a20cdbbc27c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596841,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596841,
        "id": "67edb738-5975-4643-befe-c5a2dcbb56b4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596841,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Optional Float value to String"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Optional Float value to String"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596842,
        "id": "c7467bc0-871d-4408-8ae0-97af394df546",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596842,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let numbers: Any = 888.00\n  let floatValue = String(describing: numbers)\n  print(floatValue) // Output : 888.0"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let numbers: Any = 888.00\n  let floatValue = String(describing: numbers)\n  print(floatValue) // Output : 888.0",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596842,
        "id": "65881c2c-0029-424e-b6af-23ff4de8e2d3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596842,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Optional String to Int value"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Optional String to Int value"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596842,
        "id": "1a62563e-d061-44f1-aefb-feae315e24a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596842,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let hitCount = \"100\"\nlet data :AnyObject = hitCount\nlet score = Int(data as? String ?? \"\") ?? 0\nprint(score)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let hitCount = \"100\"\nlet data :AnyObject = hitCount\nlet score = Int(data as? String ?? \"\") ?? 0\nprint(score)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596842,
        "id": "6daf6a25-0c5a-452b-9c57-5305cbc9469e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596842,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Downcasting values from JSON"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Downcasting values from JSON"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596842,
        "id": "9b861341-2fd4-49c1-a24a-97cf837124d6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596842,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let json = [\"name\" : \"john\", \"subjects\": [\"Maths\", \"Science\", \"English\", \"C Language\"]] as [String : Any]\nlet name = json[\"name\"] as? String ?? \"\"\nprint(name) // Output : john\nlet subjects = json[\"subjects\"] as? [String] ?? []\nprint(subjects) // Output : [\"Maths\", \"Science\", \"English\", \"C Language\"]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let json = [\"name\" : \"john\", \"subjects\": [\"Maths\", \"Science\", \"English\", \"C Language\"]] as [String : Any]\nlet name = json[\"name\"] as? String ?? \"\"\nprint(name) // Output : john\nlet subjects = json[\"subjects\"] as? [String] ?? []\nprint(subjects) // Output : [\"Maths\", \"Science\", \"English\", \"C Language\"]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596842,
        "id": "6d1b27bc-95ef-4263-8413-f3c2e69aa442",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596842,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Downcasting values from Optional JSON"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Downcasting values from Optional JSON"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596842,
        "id": "1149f14f-abd3-488b-809f-5b993bacc68b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596842,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let response: Any = [\"name\" : \"john\", \"subjects\": [\"Maths\", \"Science\", \"English\", \"C Language\"]]\nlet json = response as? [String: Any] ?? [:]\nlet name = json[\"name\"] as? String ?? \"\"\nprint(name) // Output : john\nlet subjects = json[\"subjects\"] as? [String] ?? []\nprint(subjects) // Output : [\"Maths\", \"Science\", \"English\", \"C Language\"]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let response: Any = [\"name\" : \"john\", \"subjects\": [\"Maths\", \"Science\", \"English\", \"C Language\"]]\nlet json = response as? [String: Any] ?? [:]\nlet name = json[\"name\"] as? String ?? \"\"\nprint(name) // Output : john\nlet subjects = json[\"subjects\"] as? [String] ?? []\nprint(subjects) // Output : [\"Maths\", \"Science\", \"English\", \"C Language\"]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596842,
        "id": "f670b45d-b1a2-4138-8889-97207eb5a449",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596842,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596842,
        "id": "c0574de0-d793-4b0b-b5fb-fea9ac902984",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596842,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Manage JSON Response with conditions"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Manage JSON Response with conditions"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596842,
        "id": "69b0949a-1767-4886-aeaf-b20a32e979fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596842,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let response: Any = [\"name\" : \"john\", \"subjects\": [\"Maths\", \"Science\", \"English\", \"C Language\"]] //Optional Response \n\nguard let json = response as? [String: Any] else {\n    // Handle here nil value\n    print(\"Empty Dictionary\")\n    // Do something here\n    return\n}\nlet name = json[\"name\"] as? String ?? \"\"\nprint(name) // Output : john\nlet subjects = json[\"subjects\"] as? [String] ?? []\nprint(subjects) // Output : [\"Maths\", \"Science\", \"English\", \"C Language\"]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let response: Any = [\"name\" : \"john\", \"subjects\": [\"Maths\", \"Science\", \"English\", \"C Language\"]] //Optional Response \n\nguard let json = response as? [String: Any] else {\n    // Handle here nil value\n    print(\"Empty Dictionary\")\n    // Do something here\n    return\n}\nlet name = json[\"name\"] as? String ?? \"\"\nprint(name) // Output : john\nlet subjects = json[\"subjects\"] as? [String] ?? []\nprint(subjects) // Output : [\"Maths\", \"Science\", \"English\", \"C Language\"]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596842,
        "id": "9d72839a-0df7-4163-9137-36f04cbfd45f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596842,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596843,
        "id": "e7d4c102-9995-4c7d-af48-3952814ca2f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596843,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Manage Nil Response with condition"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Manage Nil Response with condition"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596843,
        "id": "bea25a72-2a8e-42f5-ae8a-6da8ddd037c0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596843,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let response: Any? = nil\nguard let json = response as? [String: Any] else {\n    // Handle here nil value\n    print(\"Empty Dictionary\")\n    // Do something here\n    return\n}\nlet name = json[\"name\"] as? String ?? \"\"\nprint(name) \nlet subjects = json[\"subjects\"] as? [String] ?? []\nprint(subjects)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let response: Any? = nil\nguard let json = response as? [String: Any] else {\n    // Handle here nil value\n    print(\"Empty Dictionary\")\n    // Do something here\n    return\n}\nlet name = json[\"name\"] as? String ?? \"\"\nprint(name) \nlet subjects = json[\"subjects\"] as? [String] ?? []\nprint(subjects)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596843,
        "id": "74a4994d-ac16-4602-a0d3-c27af7841977",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596843,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output : "
            ],
            [
              "Empty Dictionary",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output : "
          },
          {
            "Text": "Empty Dictionary",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105596843,
        "id": "190c194d-b768-482f-b285-34f6caba2c83",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105596843,
        "parent_id": "2d8da942-c926-4183-8991-f0a5fd2de3ea",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      }
    ],
    "title": "Type casting in Swift Language",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}