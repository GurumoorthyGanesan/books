{
  "ID": "a787344e-205d-401b-ac34-46cc548badf4",
  "Root": {
    "alive": true,
    "content": [
      "91ae2b6a-23d0-4da4-a5ed-b30921552522",
      "fcb0dccd-d94d-4266-b67a-eade1e584097",
      "c5d12548-5fb3-48ee-8d7d-bb34db433d3b",
      "d9785f57-e3ba-47ee-8cc9-7db46c8df810",
      "3739a541-8aed-40ec-8e62-91cefccb50ed",
      "6eacb799-93d0-48e9-8f9d-02edada6a61d",
      "67f9a2da-766f-4c94-8b8f-67d6feca06e6",
      "c085e98d-f3d2-4243-9c60-57d5f86f0d60",
      "c3d52190-324a-4e0c-be23-effc77a88558",
      "07da48a1-95a8-4806-a7ed-ecf3128a0e2a",
      "4314a29c-a3dd-4db9-93fd-81e366faf97b",
      "f5879e58-3239-4327-b34e-24debe24315a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552105558873,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "a787344e-205d-401b-ac34-46cc548badf4",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552105558873,
    "parent_id": "f3aea850-966d-47e0-bbd2-8564c5d35715",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Concurrent Loops"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105558868,
        "id": "91ae2b6a-23d0-4da4-a5ed-b30921552522",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105558868,
        "parent_id": "a787344e-205d-401b-ac34-46cc548badf4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "GCD provides mechanism for performing a loop, whereby the loops happen concurrently with respect to each other. This is very useful when performing a series of computationally expensive calculations."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "GCD provides mechanism for performing a loop, whereby the loops happen concurrently with respect to each other. This is very useful when performing a series of computationally expensive calculations."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105558870,
        "id": "fcb0dccd-d94d-4266-b67a-eade1e584097",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105558870,
        "parent_id": "a787344e-205d-401b-ac34-46cc548badf4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consider this loop:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consider this loop:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105558870,
        "id": "c5d12548-5fb3-48ee-8d7d-bb34db433d3b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105558870,
        "parent_id": "a787344e-205d-401b-ac34-46cc548badf4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "for index in 0 ..\u003c iterations {\n    // Do something computationally expensive here\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "for index in 0 ..\u003c iterations {\n    // Do something computationally expensive here\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105558871,
        "id": "d9785f57-e3ba-47ee-8cc9-7db46c8df810",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105558871,
        "parent_id": "a787344e-205d-401b-ac34-46cc548badf4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can perform those calculations concurrently using "
            ],
            [
              "concurrentPerform",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (in Swift 3) or "
            ],
            [
              "dispatch_apply",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (in Swift 2):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can perform those calculations concurrently using "
          },
          {
            "Text": "concurrentPerform",
            "AttrFlags": 2
          },
          {
            "Text": " (in Swift 3) or "
          },
          {
            "Text": "dispatch_apply",
            "AttrFlags": 2
          },
          {
            "Text": " (in Swift 2):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105558871,
        "id": "3739a541-8aed-40ec-8e62-91cefccb50ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105558871,
        "parent_id": "a787344e-205d-401b-ac34-46cc548badf4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "DispatchQueue.concurrentPerform(iterations: iterations) { index in\n    // Do something computationally expensive here\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "DispatchQueue.concurrentPerform(iterations: iterations) { index in\n    // Do something computationally expensive here\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105558871,
        "id": "6eacb799-93d0-48e9-8f9d-02edada6a61d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105558871,
        "parent_id": "a787344e-205d-401b-ac34-46cc548badf4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "dispatch_apply(iterations, queue) { index in\n    // Do something computationally expensive here\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "dispatch_apply(iterations, queue) { index in\n    // Do something computationally expensive here\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105558871,
        "id": "67f9a2da-766f-4c94-8b8f-67d6feca06e6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105558871,
        "parent_id": "a787344e-205d-401b-ac34-46cc548badf4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The loop closure will be invoked for each "
            ],
            [
              "index",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " from "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to, but not including, "
            ],
            [
              "iterations",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". These iterations will be run concurrently with respect to each other, and thus the order that they run is not guaranteed. The actual number of iterations that happen concurrently at any given time is generally dictated by the capabilities of the device in question (e.g. how many cores does the device have)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The loop closure will be invoked for each "
          },
          {
            "Text": "index",
            "AttrFlags": 2
          },
          {
            "Text": " from "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": " to, but not including, "
          },
          {
            "Text": "iterations",
            "AttrFlags": 2
          },
          {
            "Text": ". These iterations will be run concurrently with respect to each other, and thus the order that they run is not guaranteed. The actual number of iterations that happen concurrently at any given time is generally dictated by the capabilities of the device in question (e.g. how many cores does the device have)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105558871,
        "id": "c085e98d-f3d2-4243-9c60-57d5f86f0d60",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105558871,
        "parent_id": "a787344e-205d-401b-ac34-46cc548badf4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A couple of special considerations:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A couple of special considerations:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105558872,
        "id": "c3d52190-324a-4e0c-be23-effc77a88558",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105558872,
        "parent_id": "a787344e-205d-401b-ac34-46cc548badf4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "concurrentPerform",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "/"
            ],
            [
              "dispatch_apply",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " may run the loops concurrently with respect to each other, but this all happens synchronously with respect to the thread from which you call it. So, do not call this from the main thread, as this will block that thread until the loop is done."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "concurrentPerform",
            "AttrFlags": 2
          },
          {
            "Text": "/"
          },
          {
            "Text": "dispatch_apply",
            "AttrFlags": 2
          },
          {
            "Text": " may run the loops concurrently with respect to each other, but this all happens synchronously with respect to the thread from which you call it. So, do not call this from the main thread, as this will block that thread until the loop is done."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105558872,
        "id": "07da48a1-95a8-4806-a7ed-ecf3128a0e2a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105558872,
        "parent_id": "a787344e-205d-401b-ac34-46cc548badf4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Because these loops happen concurrently with respect to each other, you are responsible for ensuring the thread-safety of the results. For example, if updating some dictionary with the results of these computationally expensive calculations, make sure to synchronize those updates yourself."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Because these loops happen concurrently with respect to each other, you are responsible for ensuring the thread-safety of the results. For example, if updating some dictionary with the results of these computationally expensive calculations, make sure to synchronize those updates yourself."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105558873,
        "id": "4314a29c-a3dd-4db9-93fd-81e366faf97b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105558873,
        "parent_id": "a787344e-205d-401b-ac34-46cc548badf4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note, there is some overhead associated in running concurrent loops. Thus, if the calculations being performed inside the loop are not sufficiently computationally intensive, you may find that any performance gained by using concurrent loops may be diminished, if not be completely offset, by the overhead associated with the synchronizing all of these concurrent threads."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note, there is some overhead associated in running concurrent loops. Thus, if the calculations being performed inside the loop are not sufficiently computationally intensive, you may find that any performance gained by using concurrent loops may be diminished, if not be completely offset, by the overhead associated with the synchronizing all of these concurrent threads."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105558873,
        "id": "f5879e58-3239-4327-b34e-24debe24315a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105558873,
        "parent_id": "a787344e-205d-401b-ac34-46cc548badf4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So, you are responsible determining the correct amount of work to be performed in each iteration of the loop. If the calculations are too simple, you may employ “striding” to include more work per loop. For example, rather than doing a concurrent loop with 1 million trivial calculations, you may do 100 iterations in your loop, doing 10,000 calculations per loop. That way there is enough work being performed on each thread, so the overhead associated with managing these concurrent loops becomes less significant."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So, you are responsible determining the correct amount of work to be performed in each iteration of the loop. If the calculations are too simple, you may employ “striding” to include more work per loop. For example, rather than doing a concurrent loop with 1 million trivial calculations, you may do 100 iterations in your loop, doing 10,000 calculations per loop. That way there is enough work being performed on each thread, so the overhead associated with managing these concurrent loops becomes less significant."
          }
        ]
      }
    ],
    "title": "Concurrent Loops",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}