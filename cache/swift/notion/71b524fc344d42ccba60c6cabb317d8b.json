{
  "ID": "71b524fc-344d-42cc-ba60-c6cabb317d8b",
  "Root": {
    "alive": true,
    "content": [
      "edcd5f62-a9b7-4607-a017-94e766be8e20",
      "636d1cae-4734-44d8-8392-013b48eec9a4",
      "90df6c8b-3c15-4853-b092-1e85af91cf31",
      "83883d5e-57c7-469d-bda1-763d7077133f",
      "562e6dba-5af0-41d5-9f43-736d7dc416f0",
      "84243a81-ee40-4294-ae87-3694e8e0d2e3",
      "3fa43793-aa57-4de6-b0c0-6df4e91eb823",
      "f5337420-1c7c-4bdd-a3ec-95af40e4a571",
      "da97aeb5-d2fa-450b-82ed-613562816b17",
      "a08572e8-505e-4f06-b875-66064279d7b8",
      "b7c835a7-0357-458b-9576-96a341b27c8b",
      "7a96ce82-0e12-46c1-8d29-dded62afad4c",
      "a120f8a4-390d-4db3-9e94-a1644be84558",
      "938674bb-f203-4bc1-9fc2-9bfa9f83e710",
      "e0d38018-a7fd-4505-b6a1-ddae47ab0ad0"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552105084032,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "71b524fc-344d-42cc-ba60-c6cabb317d8b",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552105084032,
    "parent_id": "20ba14af-2a03-4965-8a91-1682ef4fd9ac",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Check if String contains Characters from a Defined Set"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105084025,
        "id": "edcd5f62-a9b7-4607-a017-94e766be8e20",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105084025,
        "parent_id": "71b524fc-344d-42cc-ba60-c6cabb317d8b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Letters",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Letters",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105084028,
        "id": "636d1cae-4734-44d8-8392-013b48eec9a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105084028,
        "parent_id": "71b524fc-344d-42cc-ba60-c6cabb317d8b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let letters = CharacterSet.letters\n\nlet phrase = \"Test case\"\nlet range = phrase.rangeOfCharacter(from: letters)\n\n// range will be nil if no letters is found\nif let test = range {\n   print(\"letters found\")\n}\nelse {\n   print(\"letters not found\")\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let letters = CharacterSet.letters\n\nlet phrase = \"Test case\"\nlet range = phrase.rangeOfCharacter(from: letters)\n\n// range will be nil if no letters is found\nif let test = range {\n   print(\"letters found\")\n}\nelse {\n   print(\"letters not found\")\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105084028,
        "id": "90df6c8b-3c15-4853-b092-1e85af91cf31",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105084028,
        "parent_id": "71b524fc-344d-42cc-ba60-c6cabb317d8b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let letters = NSCharacterSet.letterCharacterSet()\n\nlet phrase = \"Test case\"\nlet range = phrase.rangeOfCharacterFromSet(letters)\n\n// range will be nil if no letters is found\nif let test = range {\n   print(\"letters found\")\n}\nelse {\n  print(\"letters not found\")\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let letters = NSCharacterSet.letterCharacterSet()\n\nlet phrase = \"Test case\"\nlet range = phrase.rangeOfCharacterFromSet(letters)\n\n// range will be nil if no letters is found\nif let test = range {\n   print(\"letters found\")\n}\nelse {\n  print(\"letters not found\")\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105084028,
        "id": "83883d5e-57c7-469d-bda1-763d7077133f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105084028,
        "parent_id": "71b524fc-344d-42cc-ba60-c6cabb317d8b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The new "
            ],
            [
              "CharacterSet",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " struct that is also bridged to the Objective-C "
            ],
            [
              "NSCharacterSet",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class define several predefined sets as:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The new "
          },
          {
            "Text": "CharacterSet",
            "AttrFlags": 2
          },
          {
            "Text": " struct that is also bridged to the Objective-C "
          },
          {
            "Text": "NSCharacterSet",
            "AttrFlags": 2
          },
          {
            "Text": " class define several predefined sets as:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105084028,
        "id": "562e6dba-5af0-41d5-9f43-736d7dc416f0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105084028,
        "parent_id": "71b524fc-344d-42cc-ba60-c6cabb317d8b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "decimalDigits",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "decimalDigits",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105084029,
        "id": "84243a81-ee40-4294-ae87-3694e8e0d2e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105084029,
        "parent_id": "71b524fc-344d-42cc-ba60-c6cabb317d8b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "capitalizedLetters",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "capitalizedLetters",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105084029,
        "id": "3fa43793-aa57-4de6-b0c0-6df4e91eb823",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105084029,
        "parent_id": "71b524fc-344d-42cc-ba60-c6cabb317d8b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "alphanumerics",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "alphanumerics",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105084029,
        "id": "f5337420-1c7c-4bdd-a3ec-95af40e4a571",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105084029,
        "parent_id": "71b524fc-344d-42cc-ba60-c6cabb317d8b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "controlCharacters",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "controlCharacters",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105084029,
        "id": "da97aeb5-d2fa-450b-82ed-613562816b17",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105084029,
        "parent_id": "71b524fc-344d-42cc-ba60-c6cabb317d8b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "illegalCharacters",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "illegalCharacters",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105084031,
        "id": "a08572e8-505e-4f06-b875-66064279d7b8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105084031,
        "parent_id": "71b524fc-344d-42cc-ba60-c6cabb317d8b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "and more you can find in the "
            ],
            [
              "NSCharacterSet",
              [
                [
                  "a",
                  "https://developer.apple.com/reference/foundation/nscharacterset"
                ]
              ]
            ],
            [
              " reference."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "and more you can find in the "
          },
          {
            "Text": "NSCharacterSet",
            "Link": "https://developer.apple.com/reference/foundation/nscharacterset"
          },
          {
            "Text": " reference."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105084031,
        "id": "b7c835a7-0357-458b-9576-96a341b27c8b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105084031,
        "parent_id": "71b524fc-344d-42cc-ba60-c6cabb317d8b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You also can define your own set of characters:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You also can define your own set of characters:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105084031,
        "id": "7a96ce82-0e12-46c1-8d29-dded62afad4c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105084031,
        "parent_id": "71b524fc-344d-42cc-ba60-c6cabb317d8b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let phrase = \"Test case\"\nlet charset = CharacterSet(charactersIn: \"t\")\n\nif let _ = phrase.rangeOfCharacter(from: charset, options: .caseInsensitive) {\n   print(\"yes\") \n}\nelse {\n   print(\"no\")\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let phrase = \"Test case\"\nlet charset = CharacterSet(charactersIn: \"t\")\n\nif let _ = phrase.rangeOfCharacter(from: charset, options: .caseInsensitive) {\n   print(\"yes\") \n}\nelse {\n   print(\"no\")\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105084031,
        "id": "a120f8a4-390d-4db3-9e94-a1644be84558",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105084031,
        "parent_id": "71b524fc-344d-42cc-ba60-c6cabb317d8b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let charset = NSCharacterSet(charactersInString: \"t\")\n\nif let _ = phrase.rangeOfCharacterFromSet(charset, options: .CaseInsensitiveSearch, range: nil) {\n   print(\"yes\")\n}\nelse {\n    print(\"no\")\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let charset = NSCharacterSet(charactersInString: \"t\")\n\nif let _ = phrase.rangeOfCharacterFromSet(charset, options: .CaseInsensitiveSearch, range: nil) {\n   print(\"yes\")\n}\nelse {\n    print(\"no\")\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105084031,
        "id": "938674bb-f203-4bc1-9fc2-9bfa9f83e710",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105084031,
        "parent_id": "71b524fc-344d-42cc-ba60-c6cabb317d8b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can also include range:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can also include range:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105084031,
        "id": "e0d38018-a7fd-4505-b6a1-ddae47ab0ad0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105084031,
        "parent_id": "71b524fc-344d-42cc-ba60-c6cabb317d8b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let phrase = \"Test case\"\nlet charset = CharacterSet(charactersIn: \"t\")\n\nif let _ = phrase.rangeOfCharacter(from: charset, options: .caseInsensitive, range: phrase.startIndex..\u003cphrase.endIndex)) {\n   print(\"yes\") \n}\nelse {\n   print(\"no\")\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let phrase = \"Test case\"\nlet charset = CharacterSet(charactersIn: \"t\")\n\nif let _ = phrase.rangeOfCharacter(from: charset, options: .caseInsensitive, range: phrase.startIndex..\u003cphrase.endIndex)) {\n   print(\"yes\") \n}\nelse {\n   print(\"no\")\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Check if String contains Characters from a Defined Set",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}