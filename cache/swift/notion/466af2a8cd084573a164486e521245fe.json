{
  "ID": "466af2a8-cd08-4573-a164-486e521245fe",
  "Root": {
    "alive": true,
    "content": [
      "c9d9a21f-9049-4b21-8f68-64390ef4efa9",
      "f98bca45-7c13-4cd4-8c39-70204d2369b2",
      "7c703569-6c82-44ff-8b01-157356f4d6cd",
      "d14a3f3f-ec05-474f-80b1-8b01b7966538",
      "19290615-b6b2-4262-b778-ffa28c5eed87",
      "b31f4e26-b16b-47ea-95de-e019262ebd70",
      "d65c72f7-1e91-4f89-b32f-cda3a6788563",
      "e7bbe1da-452f-42b2-8ba6-7eb3caeffe5b",
      "240eb9bc-98ca-490f-922c-a119789ac37b",
      "63051061-4c8e-4466-81e0-b32548c7a687",
      "fca4d3c4-886c-4628-b85d-64ff1586bfbb",
      "b09e30dc-9182-4416-a0d5-b95ce4be225f",
      "61c06fa3-8c9c-4437-8995-b1ea8de0e10d",
      "cfdf3c0a-32ef-4093-b88a-2af7ccaad933",
      "67eb77f7-03ed-473a-ab0d-28db3684d5fb",
      "86674c1a-406e-4c01-b43c-01a804c1a617",
      "228d7b59-16e6-4c28-8821-a03b8ab84867",
      "bb91c174-26fa-4dd9-a0fb-fe2e0d2a2d9d",
      "505fdcf6-71d2-482b-89fa-6fedccfff654",
      "f21935ff-296f-4f04-b2cb-fdc8c025a242",
      "1e945aba-68f7-45b9-b0ef-63954e3154ee",
      "61c95509-e69d-4c23-bed7-8718b764cac2",
      "bdc854e3-7ae7-4597-85ff-78122e618033"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552104963401,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "466af2a8-cd08-4573-a164-486e521245fe",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552104963401,
    "parent_id": "743fc1c3-bc9c-4386-8bb8-37bb9430112f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Freddy"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963396,
        "id": "c9d9a21f-9049-4b21-8f68-64390ef4efa9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963396,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Freddy",
              [
                [
                  "a",
                  "https://github.com/bignerdranch/Freddy"
                ]
              ]
            ],
            [
              " is a JSON parsing library maintained by "
            ],
            [
              "Big Nerd Ranch",
              [
                [
                  "a",
                  "https://www.bignerdranch.com/"
                ]
              ]
            ],
            [
              ". It has three principal benefits:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Freddy",
            "Link": "https://github.com/bignerdranch/Freddy"
          },
          {
            "Text": " is a JSON parsing library maintained by "
          },
          {
            "Text": "Big Nerd Ranch",
            "Link": "https://www.bignerdranch.com/"
          },
          {
            "Text": ". It has three principal benefits:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963397,
        "id": "f98bca45-7c13-4cd4-8c39-70204d2369b2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963397,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Type Safety: Helps you work with sending and receiving JSON in a way that prevents runtime crashes."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Type Safety: Helps you work with sending and receiving JSON in a way that prevents runtime crashes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963397,
        "id": "7c703569-6c82-44ff-8b01-157356f4d6cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963397,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Idiomatic: Takes advantage of Swift’s generics, enumerations, and functional features, without complicated documentation or magical custom operators."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Idiomatic: Takes advantage of Swift’s generics, enumerations, and functional features, without complicated documentation or magical custom operators."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963397,
        "id": "d14a3f3f-ec05-474f-80b1-8b01b7966538",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963397,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Error Handling: Provides informative error information for commonly occurring JSON errors."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Error Handling: Provides informative error information for commonly occurring JSON errors."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963397,
        "id": "19290615-b6b2-4262-b778-ffa28c5eed87",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963397,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example JSON Data"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example JSON Data"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963398,
        "id": "b31f4e26-b16b-47ea-95de-e019262ebd70",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963398,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s define some example JSON data for use with these examples."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s define some example JSON data for use with these examples."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963398,
        "id": "d65c72f7-1e91-4f89-b32f-cda3a6788563",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963398,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "{\"success\": true,\"people\": [{\"name\": \"Matt Mathias\",\"age\": 32,\"spouse\": true},{\"name\": \"Sergeant Pepper\",\"age\": 25,\"spouse\": false}],\"jobs\": [\"teacher\",\"judge\"],\"states\": {\"Georgia\": [30301,30302,30303],\"Wisconsin\": [53000,53001]}}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "{\"success\": true,\"people\": [{\"name\": \"Matt Mathias\",\"age\": 32,\"spouse\": true},{\"name\": \"Sergeant Pepper\",\"age\": 25,\"spouse\": false}],\"jobs\": [\"teacher\",\"judge\"],\"states\": {\"Georgia\": [30301,30302,30303],\"Wisconsin\": [53000,53001]}}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963398,
        "id": "e7bbe1da-452f-42b2-8ba6-7eb3caeffe5b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963398,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let jsonString = \"{\\\"success\\\": true, \\\"people\\\": [{\\\"name\\\": \\\"Matt Mathias\\\",\\\"age\\\": 32,\\\"spouse\\\": true},{\\\"name\\\": \\\"Sergeant Pepper\\\",\\\"age\\\": 25,\\\"spouse\\\": false}],\\\"jobs\\\": [\\\"teacher\\\",\\\"judge\\\"],\\\"states\\\": {\\\"Georgia\\\": [30301,30302,30303],\\\"Wisconsin\\\": [53000,53001]}}\"\nlet jsonData = jsonString.dataUsingEncoding(NSUTF8StringEncoding)!"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let jsonString = \"{\\\"success\\\": true, \\\"people\\\": [{\\\"name\\\": \\\"Matt Mathias\\\",\\\"age\\\": 32,\\\"spouse\\\": true},{\\\"name\\\": \\\"Sergeant Pepper\\\",\\\"age\\\": 25,\\\"spouse\\\": false}],\\\"jobs\\\": [\\\"teacher\\\",\\\"judge\\\"],\\\"states\\\": {\\\"Georgia\\\": [30301,30302,30303],\\\"Wisconsin\\\": [53000,53001]}}\"\nlet jsonData = jsonString.dataUsingEncoding(NSUTF8StringEncoding)!",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963399,
        "id": "240eb9bc-98ca-490f-922c-a119789ac37b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963399,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Deserializing Raw Data"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Deserializing Raw Data"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963399,
        "id": "63051061-4c8e-4466-81e0-b32548c7a687",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963399,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To deserialize the data, we initialize a "
            ],
            [
              "JSON",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object then access a particular key."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To deserialize the data, we initialize a "
          },
          {
            "Text": "JSON",
            "AttrFlags": 2
          },
          {
            "Text": " object then access a particular key."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963399,
        "id": "fca4d3c4-886c-4628-b85d-64ff1586bfbb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963399,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "do {\n    let json = try JSON(data: jsonData)\n    let success = try json.bool(\"success\")\n} catch {\n    // do something with the error\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "do {\n    let json = try JSON(data: jsonData)\n    let success = try json.bool(\"success\")\n} catch {\n    // do something with the error\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963399,
        "id": "b09e30dc-9182-4416-a0d5-b95ce4be225f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963399,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We "
            ],
            [
              "try",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " here because accessing the "
            ],
            [
              "json",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for the key "
            ],
            [
              "\"success\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " could fail–it might not exist, or the value might not be a boolean."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We "
          },
          {
            "Text": "try",
            "AttrFlags": 2
          },
          {
            "Text": " here because accessing the "
          },
          {
            "Text": "json",
            "AttrFlags": 2
          },
          {
            "Text": " for the key "
          },
          {
            "Text": "\"success\"",
            "AttrFlags": 2
          },
          {
            "Text": " could fail–it might not exist, or the value might not be a boolean."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963399,
        "id": "61c06fa3-8c9c-4437-8995-b1ea8de0e10d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963399,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can also specify a path to access elements nested in the JSON structure. The path is a comma-separated list of keys and indices that describe the path to a value of interest."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can also specify a path to access elements nested in the JSON structure. The path is a comma-separated list of keys and indices that describe the path to a value of interest."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963399,
        "id": "cfdf3c0a-32ef-4093-b88a-2af7ccaad933",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963399,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "do {\n    let json = try JSON(data: jsonData)\n    let georgiaZipCodes = try json.array(\"states\", \"Georgia\")\n    let firstPersonName = try json.string(\"people\", 0, \"name\")\n} catch {\n    // do something with the error\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "do {\n    let json = try JSON(data: jsonData)\n    let georgiaZipCodes = try json.array(\"states\", \"Georgia\")\n    let firstPersonName = try json.string(\"people\", 0, \"name\")\n} catch {\n    // do something with the error\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963399,
        "id": "67eb77f7-03ed-473a-ab0d-28db3684d5fb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963399,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Deserializing Models Directly"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Deserializing Models Directly"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963400,
        "id": "86674c1a-406e-4c01-b43c-01a804c1a617",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963400,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "JSON can be directly parsed to a model class that implements the "
            ],
            [
              "JSONDecodable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " protocol."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "JSON can be directly parsed to a model class that implements the "
          },
          {
            "Text": "JSONDecodable",
            "AttrFlags": 2
          },
          {
            "Text": " protocol."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963400,
        "id": "228d7b59-16e6-4c28-8821-a03b8ab84867",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963400,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public struct Person {\n    public let name: String\n    public let age: Int\n    public let spouse: Bool\n}\n\nextension Person: JSONDecodable {\n    public init(json: JSON) throws {\n        name = try json.string(\"name\")\n        age = try json.int(\"age\")\n        spouse = try json.bool(\"spouse\")\n    }\n}\n\ndo {\n    let json = try JSON(data: jsonData)\n    let people = try json.arrayOf(\"people\", type: Person.self)\n} catch {\n    // do something with the error\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public struct Person {\n    public let name: String\n    public let age: Int\n    public let spouse: Bool\n}\n\nextension Person: JSONDecodable {\n    public init(json: JSON) throws {\n        name = try json.string(\"name\")\n        age = try json.int(\"age\")\n        spouse = try json.bool(\"spouse\")\n    }\n}\n\ndo {\n    let json = try JSON(data: jsonData)\n    let people = try json.arrayOf(\"people\", type: Person.self)\n} catch {\n    // do something with the error\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963400,
        "id": "bb91c174-26fa-4dd9-a0fb-fe2e0d2a2d9d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963400,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Serializing Raw Data"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Serializing Raw Data"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963400,
        "id": "505fdcf6-71d2-482b-89fa-6fedccfff654",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963400,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Any "
            ],
            [
              "JSON",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " value can be serialized directly to "
            ],
            [
              "NSData",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Any "
          },
          {
            "Text": "JSON",
            "AttrFlags": 2
          },
          {
            "Text": " value can be serialized directly to "
          },
          {
            "Text": "NSData",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963400,
        "id": "f21935ff-296f-4f04-b2cb-fdc8c025a242",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963400,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let success = JSON.Bool(false)\nlet data: NSData = try success.serialize()"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let success = JSON.Bool(false)\nlet data: NSData = try success.serialize()",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963400,
        "id": "1e945aba-68f7-45b9-b0ef-63954e3154ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963400,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Serializing Models Directly"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Serializing Models Directly"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963400,
        "id": "61c95509-e69d-4c23-bed7-8718b764cac2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963400,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Any model class that implements the "
            ],
            [
              "JSONEncodable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " protocol can be serialized directly to "
            ],
            [
              "NSData",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Any model class that implements the "
          },
          {
            "Text": "JSONEncodable",
            "AttrFlags": 2
          },
          {
            "Text": " protocol can be serialized directly to "
          },
          {
            "Text": "NSData",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104963400,
        "id": "bdc854e3-7ae7-4597-85ff-78122e618033",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104963400,
        "parent_id": "466af2a8-cd08-4573-a164-486e521245fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "extension Person: JSONEncodable {\n    public func toJSON() -\u003e JSON {\n        return .Dictionary([\n            \"name\": .String(name),\n            \"age\": .Int(age),\n            \"spouse\": .Bool(spouse)\n        ])\n    }\n}\n\nlet newPerson = Person(name: \"Glenn\", age: 23, spouse: true)\nlet data: NSData = try newPerson.toJSON().serialize()"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "extension Person: JSONEncodable {\n    public func toJSON() -\u003e JSON {\n        return .Dictionary([\n            \"name\": .String(name),\n            \"age\": .Int(age),\n            \"spouse\": .Bool(spouse)\n        ])\n    }\n}\n\nlet newPerson = Person(name: \"Glenn\", age: 23, spouse: true)\nlet data: NSData = try newPerson.toJSON().serialize()",
        "code_language": "Plain Text"
      }
    ],
    "title": "Freddy",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}