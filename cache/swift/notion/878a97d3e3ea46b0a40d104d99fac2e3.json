{
  "ID": "878a97d3-e3ea-46b0-a40d-104d99fac2e3",
  "Root": {
    "alive": true,
    "content": [
      "c3d89af9-8a3a-45f7-b0df-0765708fcdca",
      "5dfaa07f-c6a1-4806-895c-0960be133db0",
      "259ce1ac-e54e-4344-926c-8626e363653c",
      "a061916c-cb85-42af-abc2-782ef6fb20da",
      "5d7c4499-d822-4cbe-b2c3-6156c0f3932d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552105468753,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "878a97d3-e3ea-46b0-a40d-104d99fac2e3",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552105468753,
    "parent_id": "346889aa-bbe6-4248-9382-9d44810882db",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using a typealias to name your tuple type"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105468748,
        "id": "c3d89af9-8a3a-45f7-b0df-0765708fcdca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105468748,
        "parent_id": "878a97d3-e3ea-46b0-a40d-104d99fac2e3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Occasionally you may want to use the same tuple type in multiple places throughout your code. This can quickly get messy, especially if your tuple is complex:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Occasionally you may want to use the same tuple type in multiple places throughout your code. This can quickly get messy, especially if your tuple is complex:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105468750,
        "id": "5dfaa07f-c6a1-4806-895c-0960be133db0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105468750,
        "parent_id": "878a97d3-e3ea-46b0-a40d-104d99fac2e3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Define a circle tuple by its center point and radius\nlet unitCircle: (center: (x: CGFloat, y: CGFloat), radius: CGFloat) = ((0.0, 0.0), 1.0)\n\nfunc doubleRadius(ofCircle circle: (center: (x: CGFloat, y: CGFloat), radius: CGFloat)) -\u003e (center: (x: CGFloat, y: CGFloat), radius: CGFloat) {\n    return (circle.center, circle.radius * 2.0)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Define a circle tuple by its center point and radius\nlet unitCircle: (center: (x: CGFloat, y: CGFloat), radius: CGFloat) = ((0.0, 0.0), 1.0)\n\nfunc doubleRadius(ofCircle circle: (center: (x: CGFloat, y: CGFloat), radius: CGFloat)) -\u003e (center: (x: CGFloat, y: CGFloat), radius: CGFloat) {\n    return (circle.center, circle.radius * 2.0)\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105468752,
        "id": "259ce1ac-e54e-4344-926c-8626e363653c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105468752,
        "parent_id": "878a97d3-e3ea-46b0-a40d-104d99fac2e3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you use a certain tuple type in more than one place, you can use the "
            ],
            [
              "typealias",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Declarations.html#//apple_ref/doc/uid/TP40014097-CH34-ID361"
                ]
              ]
            ],
            [
              " keyword to name your tuple type."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you use a certain tuple type in more than one place, you can use the "
          },
          {
            "Text": "typealias",
            "AttrFlags": 2,
            "Link": "https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Declarations.html#//apple_ref/doc/uid/TP40014097-CH34-ID361"
          },
          {
            "Text": " keyword to name your tuple type."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105468753,
        "id": "a061916c-cb85-42af-abc2-782ef6fb20da",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105468753,
        "parent_id": "878a97d3-e3ea-46b0-a40d-104d99fac2e3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Define a circle tuple by its center point and radius\ntypealias Circle = (center: (x: CGFloat, y: CGFloat), radius: CGFloat)\n\nlet unitCircle: Circle = ((0.0, 0.0), 1)\n\nfunc doubleRadius(ofCircle circle: Circle) -\u003e Circle {\n    // Aliased tuples also have access to value labels in the original tuple type.\n    return (circle.center, circle.radius * 2.0)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Define a circle tuple by its center point and radius\ntypealias Circle = (center: (x: CGFloat, y: CGFloat), radius: CGFloat)\n\nlet unitCircle: Circle = ((0.0, 0.0), 1)\n\nfunc doubleRadius(ofCircle circle: Circle) -\u003e Circle {\n    // Aliased tuples also have access to value labels in the original tuple type.\n    return (circle.center, circle.radius * 2.0)\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105468753,
        "id": "5d7c4499-d822-4cbe-b2c3-6156c0f3932d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105468753,
        "parent_id": "878a97d3-e3ea-46b0-a40d-104d99fac2e3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you find yourself doing this too often, however, you should consider using a "
            ],
            [
              "struct",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/swift/255/structs"
                ]
              ]
            ],
            [
              " instead."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you find yourself doing this too often, however, you should consider using a "
          },
          {
            "Text": "struct",
            "AttrFlags": 2,
            "Link": "http://stackoverflow.com/documentation/swift/255/structs"
          },
          {
            "Text": " instead."
          }
        ]
      }
    ],
    "title": "Using a typealias to name your tuple type",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}