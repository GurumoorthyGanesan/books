{
  "ID": "c7fd5044-fb59-44fd-94f2-e90bdb5b1453",
  "Root": {
    "alive": true,
    "content": [
      "a0cda6a1-0233-4c3b-90c3-22b5b3ee3401",
      "00a50f10-3caa-41be-9ba5-7a273f3afb81",
      "46bb64ab-13c1-4907-8f00-72bf447916d1",
      "7509fc5b-7258-4fd2-bdf2-bd088263baf8"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552104972919,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c7fd5044-fb59-44fd-94f2-e90bdb5b1453",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552104972919,
    "parent_id": "85fc985e-d4f6-470c-a50e-d230fb7f7029",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Initializers"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104972918,
        "id": "a0cda6a1-0233-4c3b-90c3-22b5b3ee3401",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104972918,
        "parent_id": "c7fd5044-fb59-44fd-94f2-e90bdb5b1453",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Enums can have custom init methods that can be more useful than the default "
            ],
            [
              "init?(rawValue:)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Enums can also store values as well. This can be useful for storing the values they where initialized with and retrieving that value later."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Enums can have custom init methods that can be more useful than the default "
          },
          {
            "Text": "init?(rawValue:)",
            "AttrFlags": 2
          },
          {
            "Text": ". Enums can also store values as well. This can be useful for storing the values they where initialized with and retrieving that value later."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104972918,
        "id": "00a50f10-3caa-41be-9ba5-7a273f3afb81",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104972918,
        "parent_id": "c7fd5044-fb59-44fd-94f2-e90bdb5b1453",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "enum CompassDirection {\n    case north(Int)\n    case south(Int)\n    case east(Int)\n    case west(Int)\n\n    init?(degrees: Int) {\n        switch degrees {\n        case 0...45:\n            self = .north(degrees)\n        case 46...135:\n            self = .east(degrees)\n        case 136...225:\n            self = .south(degrees)\n        case 226...315:\n            self = .west(degrees)\n        case 316...360:\n            self = .north(degrees)\n        default:\n            return nil\n        }\n    }\n    \n    var value: Int = {\n        switch self {\n            case north(let degrees):\n                return degrees\n            case south(let degrees):\n                return degrees\n            case east(let degrees):\n                return degrees\n            case west(let degrees):\n                return degrees\n        }    \n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "enum CompassDirection {\n    case north(Int)\n    case south(Int)\n    case east(Int)\n    case west(Int)\n\n    init?(degrees: Int) {\n        switch degrees {\n        case 0...45:\n            self = .north(degrees)\n        case 46...135:\n            self = .east(degrees)\n        case 136...225:\n            self = .south(degrees)\n        case 226...315:\n            self = .west(degrees)\n        case 316...360:\n            self = .north(degrees)\n        default:\n            return nil\n        }\n    }\n    \n    var value: Int = {\n        switch self {\n            case north(let degrees):\n                return degrees\n            case south(let degrees):\n                return degrees\n            case east(let degrees):\n                return degrees\n            case west(let degrees):\n                return degrees\n        }    \n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104972918,
        "id": "46bb64ab-13c1-4907-8f00-72bf447916d1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104972918,
        "parent_id": "c7fd5044-fb59-44fd-94f2-e90bdb5b1453",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using that initializer we can do this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using that initializer we can do this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104972918,
        "id": "7509fc5b-7258-4fd2-bdf2-bd088263baf8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104972918,
        "parent_id": "c7fd5044-fb59-44fd-94f2-e90bdb5b1453",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var direction = CompassDirection(degrees: 0) // Returns CompassDirection.north\ndirection = CompassDirection(degrees: 90) // Returns CompassDirection.east\nprint(direction.value) //prints 90\ndirection = CompassDirection(degrees: 500) // Returns nil"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var direction = CompassDirection(degrees: 0) // Returns CompassDirection.north\ndirection = CompassDirection(degrees: 90) // Returns CompassDirection.east\nprint(direction.value) //prints 90\ndirection = CompassDirection(degrees: 500) // Returns nil",
        "code_language": "Plain Text"
      }
    ],
    "title": "Initializers",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}