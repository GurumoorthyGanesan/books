{
  "ID": "21905944-f070-44ba-9a21-d090037a0b02",
  "Root": {
    "alive": true,
    "content": [
      "cfc56ef8-9df6-4401-9f54-052b78566026",
      "9a415500-7d84-4793-bcd8-bd7e67911549",
      "b35feaec-963b-4732-91b0-c2e7536b6eab",
      "9aeb07b4-97b5-4bab-930f-7e26d03b5bc5",
      "9378f0d3-dedc-48fb-9305-3fd59cba482f",
      "f5acf6f3-f229-4fcc-91a1-752cde55cecf"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552105931939,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "21905944-f070-44ba-9a21-d090037a0b02",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552105931939,
    "parent_id": "1a7a68fa-5ed7-4026-bd09-6c438ee3c996",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "UnsafeMutablePointer"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105931934,
        "id": "cfc56ef8-9df6-4401-9f54-052b78566026",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105931934,
        "parent_id": "21905944-f070-44ba-9a21-d090037a0b02",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct UnsafeMutablePointer\u003cPointee\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct UnsafeMutablePointer\u003cPointee\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105931936,
        "id": "9a415500-7d84-4793-bcd8-bd7e67911549",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105931936,
        "parent_id": "21905944-f070-44ba-9a21-d090037a0b02",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A pointer for accessing and manipulating data of a specific type."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "A pointer for accessing and manipulating data of a specific type."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105931936,
        "id": "b35feaec-963b-4732-91b0-c2e7536b6eab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105931936,
        "parent_id": "21905944-f070-44ba-9a21-d090037a0b02",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You use instances of the UnsafeMutablePointer type to access data of a specific type in memory. The type of data that a pointer can access is the pointer’s Pointee type. UnsafeMutablePointer provides no automated memory management or alignment guarantees. You are responsible for handling the life cycle of any memory you work with through unsafe pointers to avoid leaks or undefined behavior."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You use instances of the UnsafeMutablePointer type to access data of a specific type in memory. The type of data that a pointer can access is the pointer’s Pointee type. UnsafeMutablePointer provides no automated memory management or alignment guarantees. You are responsible for handling the life cycle of any memory you work with through unsafe pointers to avoid leaks or undefined behavior."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105931938,
        "id": "9aeb07b4-97b5-4bab-930f-7e26d03b5bc5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105931938,
        "parent_id": "21905944-f070-44ba-9a21-d090037a0b02",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Memory that you manually manage can be either untyped or bound to a specific type. You use the UnsafeMutablePointer type to access and manage memory that has been bound to a specific type. ("
            ],
            [
              "Source",
              [
                [
                  "a",
                  "http://swiftdoc.org/v3.1/type/UnsafeMutablePointer/"
                ]
              ]
            ],
            [
              ")"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Memory that you manually manage can be either untyped or bound to a specific type. You use the UnsafeMutablePointer type to access and manage memory that has been bound to a specific type. ("
          },
          {
            "Text": "Source",
            "Link": "http://swiftdoc.org/v3.1/type/UnsafeMutablePointer/"
          },
          {
            "Text": ")"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105931938,
        "id": "9378f0d3-dedc-48fb-9305-3fd59cba482f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105931938,
        "parent_id": "21905944-f070-44ba-9a21-d090037a0b02",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import Foundation\n\nlet arr = [1,5,7,8]\n\nlet pointer = UnsafeMutablePointer\u003c[Int]\u003e.allocate(capacity: 4)\npointer.initialize(to: arr)\n\nlet x = pointer.pointee[3]\n\nprint(x)\n\npointer.deinitialize()\npointer.deallocate(capacity: 4)\n\nclass A {\n  var x: String?\n  \n  convenience init (_ x: String) {\n    self.init()\n    self.x = x\n  }\n  \n  func description() -\u003e String {\n    return x ?? \"\"\n  }\n}\n\n\nlet arr2 = [A(\"OK\"), A(\"OK 2\")]\nlet pointer2 = UnsafeMutablePointer\u003c[A]\u003e.allocate(capacity: 2)\npointer2.initialize(to: arr2)\n\npointer2.pointee\nlet y = pointer2.pointee[1]\n\nprint(y)\n\npointer2.deinitialize()\npointer2.deallocate(capacity: 2)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import Foundation\n\nlet arr = [1,5,7,8]\n\nlet pointer = UnsafeMutablePointer\u003c[Int]\u003e.allocate(capacity: 4)\npointer.initialize(to: arr)\n\nlet x = pointer.pointee[3]\n\nprint(x)\n\npointer.deinitialize()\npointer.deallocate(capacity: 4)\n\nclass A {\n  var x: String?\n  \n  convenience init (_ x: String) {\n    self.init()\n    self.x = x\n  }\n  \n  func description() -\u003e String {\n    return x ?? \"\"\n  }\n}\n\n\nlet arr2 = [A(\"OK\"), A(\"OK 2\")]\nlet pointer2 = UnsafeMutablePointer\u003c[A]\u003e.allocate(capacity: 2)\npointer2.initialize(to: arr2)\n\npointer2.pointee\nlet y = pointer2.pointee[1]\n\nprint(y)\n\npointer2.deinitialize()\npointer2.deallocate(capacity: 2)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105931939,
        "id": "f5acf6f3-f229-4fcc-91a1-752cde55cecf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105931939,
        "parent_id": "21905944-f070-44ba-9a21-d090037a0b02",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Converted to Swift 3.0 from original "
            ],
            [
              "source",
              [
                [
                  "a",
                  "https://gist.github.com/Ben-G/4bc238d243f56a8354d4"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Converted to Swift 3.0 from original "
          },
          {
            "Text": "source",
            "Link": "https://gist.github.com/Ben-G/4bc238d243f56a8354d4"
          }
        ]
      }
    ],
    "title": "UnsafeMutablePointer",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}