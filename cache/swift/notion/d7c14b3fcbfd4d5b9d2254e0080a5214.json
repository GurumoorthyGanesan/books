{
  "ID": "d7c14b3f-cbfd-4d5b-9d22-54e0080a5214",
  "Root": {
    "alive": true,
    "content": [
      "90cffd98-f38a-4ae4-9b0e-84e051e451f3",
      "365455b7-d655-41bc-b65e-70ac37ee2e65",
      "e1f82c7b-bf5e-4418-92e4-c3eb839f40e7",
      "39a25040-775c-4475-b8f6-6f3a844f69e9",
      "048f32d8-4f9c-466f-89ff-ef27821ba6df",
      "d90eec97-fa4e-45a3-91f2-9789fa6a456c",
      "90d328e9-89a3-4cb4-b023-d27b263ee95c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552105483258,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d7c14b3f-cbfd-4d5b-9d22-54e0080a5214",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552105483258,
    "parent_id": "45e8edb6-720b-4879-a3f9-bdeeebc97a9f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Manual Memory Management"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105483254,
        "id": "90cffd98-f38a-4ae4-9b0e-84e051e451f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105483254,
        "parent_id": "d7c14b3f-cbfd-4d5b-9d22-54e0080a5214",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When interfacing with C APIs, one might want to back off Swift reference counter. Doing so is achieved with unmanaged objects."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When interfacing with C APIs, one might want to back off Swift reference counter. Doing so is achieved with unmanaged objects."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105483257,
        "id": "365455b7-d655-41bc-b65e-70ac37ee2e65",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105483257,
        "parent_id": "d7c14b3f-cbfd-4d5b-9d22-54e0080a5214",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you need to supply a type-punned pointer to a C function, use "
            ],
            [
              "toOpaque",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method of the "
            ],
            [
              "Unmanaged",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " structure to obtain a raw pointer, and "
            ],
            [
              "fromOpaque",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to recover the original instance:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you need to supply a type-punned pointer to a C function, use "
          },
          {
            "Text": "toOpaque",
            "AttrFlags": 2
          },
          {
            "Text": " method of the "
          },
          {
            "Text": "Unmanaged",
            "AttrFlags": 2
          },
          {
            "Text": " structure to obtain a raw pointer, and "
          },
          {
            "Text": "fromOpaque",
            "AttrFlags": 2
          },
          {
            "Text": " to recover the original instance:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105483257,
        "id": "e1f82c7b-bf5e-4418-92e4-c3eb839f40e7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105483257,
        "parent_id": "d7c14b3f-cbfd-4d5b-9d22-54e0080a5214",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "setupDisplayLink() {\n  let pointerToSelf: UnsafeRawPointer = Unmanaged.passUnretained(self).toOpaque()\n  CVDisplayLinkSetOutputCallback(self.displayLink, self.redraw, pointerToSelf)\n}\n\nfunc redraw(pointerToSelf: UnsafeRawPointer, /* args omitted */) {\n  let recoveredSelf = Unmanaged\u003cSelf\u003e.fromOpaque(pointerToSelf).takeUnretainedValue()\n  recoveredSelf.doRedraw()\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "setupDisplayLink() {\n  let pointerToSelf: UnsafeRawPointer = Unmanaged.passUnretained(self).toOpaque()\n  CVDisplayLinkSetOutputCallback(self.displayLink, self.redraw, pointerToSelf)\n}\n\nfunc redraw(pointerToSelf: UnsafeRawPointer, /* args omitted */) {\n  let recoveredSelf = Unmanaged\u003cSelf\u003e.fromOpaque(pointerToSelf).takeUnretainedValue()\n  recoveredSelf.doRedraw()\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105483257,
        "id": "39a25040-775c-4475-b8f6-6f3a844f69e9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105483257,
        "parent_id": "d7c14b3f-cbfd-4d5b-9d22-54e0080a5214",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that, if using "
            ],
            [
              "passUnretained",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and counterparts, it’s necessary to take all precautions as with "
            ],
            [
              "unowned",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " references."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that, if using "
          },
          {
            "Text": "passUnretained",
            "AttrFlags": 2
          },
          {
            "Text": " and counterparts, it’s necessary to take all precautions as with "
          },
          {
            "Text": "unowned",
            "AttrFlags": 2
          },
          {
            "Text": " references."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105483258,
        "id": "048f32d8-4f9c-466f-89ff-ef27821ba6df",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105483258,
        "parent_id": "d7c14b3f-cbfd-4d5b-9d22-54e0080a5214",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To interact with legacy Objective-C APIs, one might want to manually affect reference count of a certain object. For that "
            ],
            [
              "Unmanaged",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has respective methods "
            ],
            [
              "retain",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "release",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Nonetheless, it is more desired to use "
            ],
            [
              "passRetained",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "takeRetainedValue",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which perform retaining before returning the result:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To interact with legacy Objective-C APIs, one might want to manually affect reference count of a certain object. For that "
          },
          {
            "Text": "Unmanaged",
            "AttrFlags": 2
          },
          {
            "Text": " has respective methods "
          },
          {
            "Text": "retain",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "release",
            "AttrFlags": 2
          },
          {
            "Text": ". Nonetheless, it is more desired to use "
          },
          {
            "Text": "passRetained",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "takeRetainedValue",
            "AttrFlags": 2
          },
          {
            "Text": ", which perform retaining before returning the result:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105483258,
        "id": "d90eec97-fa4e-45a3-91f2-9789fa6a456c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105483258,
        "parent_id": "d7c14b3f-cbfd-4d5b-9d22-54e0080a5214",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "func preferredFilenameExtension(for uti: String) -\u003e String! {\n  let result = UTTypeCopyPreferredTagWithClass(uti, kUTTagClassFilenameExtension)\n  guard result != nil else { return nil }\n\n  return result!.takeRetainedValue() as String\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "func preferredFilenameExtension(for uti: String) -\u003e String! {\n  let result = UTTypeCopyPreferredTagWithClass(uti, kUTTagClassFilenameExtension)\n  guard result != nil else { return nil }\n\n  return result!.takeRetainedValue() as String\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105483258,
        "id": "90d328e9-89a3-4cb4-b023-d27b263ee95c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105483258,
        "parent_id": "d7c14b3f-cbfd-4d5b-9d22-54e0080a5214",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These solutions should always be the last resort, and language-native APIs sould always be preferred."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These solutions should always be the last resort, and language-native APIs sould always be preferred."
          }
        ]
      }
    ],
    "title": "Manual Memory Management",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}