{
  "ID": "9e577a2a-cb71-4fac-8e33-8aa4a8a90d64",
  "Root": {
    "alive": true,
    "content": [
      "3ea8eee6-34d4-4916-a474-7a44109f2933",
      "43fbee0b-063c-4198-b4b3-d3d06e7707ab",
      "e3ee9e6d-dd8b-488d-aa5a-3eb01f2f6def",
      "965ef183-7d30-422e-9c1b-25a9e3d76202",
      "846ff2c4-31b6-49e5-af7b-4a633e2e7be1",
      "8df145c2-566f-4727-b414-572a3a1130a5",
      "a827726d-7ff6-4335-a23c-9ba53433ae92",
      "a256c04c-f188-4d80-b8f9-d06ca31afccc",
      "76e40813-12a5-467b-97c4-77221554744a",
      "54d9671c-852c-4df9-aa1e-f2b46667d556",
      "dd919d23-355c-42e9-9783-a9ac2f4187ff",
      "321a6930-14f9-433d-aa2e-347cf91b3908",
      "4bff5b95-6a96-4f1f-8161-ee56c82fd1b4",
      "301bc2e5-86c8-46c5-b236-118647cf60ed",
      "a1e51ac8-fb31-41a4-b322-88d6eaa708d0",
      "93d908b7-d312-4cd8-bfa4-a92637a56894"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552105572099,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "9e577a2a-cb71-4fac-8e33-8aa4a8a90d64",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552105572099,
    "parent_id": "2f2b8c00-b4d8-4005-9764-71297a1f77f4",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using protocols as first class types"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105572094,
        "id": "3ea8eee6-34d4-4916-a474-7a44109f2933",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105572094,
        "parent_id": "9e577a2a-cb71-4fac-8e33-8aa4a8a90d64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Protocol oriented programing can be used as a core Swift design pattern."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Protocol oriented programing can be used as a core Swift design pattern."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105572096,
        "id": "43fbee0b-063c-4198-b4b3-d3d06e7707ab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105572096,
        "parent_id": "9e577a2a-cb71-4fac-8e33-8aa4a8a90d64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Different types are able to conform to the same protocol, value types can even conform to multiple protocols and even provide default method implementation."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Different types are able to conform to the same protocol, value types can even conform to multiple protocols and even provide default method implementation."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105572097,
        "id": "e3ee9e6d-dd8b-488d-aa5a-3eb01f2f6def",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105572097,
        "parent_id": "9e577a2a-cb71-4fac-8e33-8aa4a8a90d64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Initially protocols are defined that can represent commonly used properties and/or methods with either specific or generic types."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Initially protocols are defined that can represent commonly used properties and/or methods with either specific or generic types."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105572097,
        "id": "965ef183-7d30-422e-9c1b-25a9e3d76202",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105572097,
        "parent_id": "9e577a2a-cb71-4fac-8e33-8aa4a8a90d64",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "protocol ItemData {\n    \n    var title: String { get }\n    var description: String { get }\n    var thumbnailURL: NSURL { get }\n    var created: NSDate { get }\n    var updated: NSDate { get }\n    \n}\n\nprotocol DisplayItem {\n    \n    func hasBeenUpdated() -\u003e Bool\n    func getFormattedTitle() -\u003e String\n    func getFormattedDescription() -\u003e String\n\n}\n\nprotocol GetAPIItemDataOperation {\n    \n    static func get(url: NSURL, completed: ([ItemData]) -\u003e Void)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "protocol ItemData {\n    \n    var title: String { get }\n    var description: String { get }\n    var thumbnailURL: NSURL { get }\n    var created: NSDate { get }\n    var updated: NSDate { get }\n    \n}\n\nprotocol DisplayItem {\n    \n    func hasBeenUpdated() -\u003e Bool\n    func getFormattedTitle() -\u003e String\n    func getFormattedDescription() -\u003e String\n\n}\n\nprotocol GetAPIItemDataOperation {\n    \n    static func get(url: NSURL, completed: ([ItemData]) -\u003e Void)\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105572097,
        "id": "846ff2c4-31b6-49e5-af7b-4a633e2e7be1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105572097,
        "parent_id": "9e577a2a-cb71-4fac-8e33-8aa4a8a90d64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A default implementation for the get method can be created, though if desired conforming types may override the implementation."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A default implementation for the get method can be created, though if desired conforming types may override the implementation."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105572097,
        "id": "8df145c2-566f-4727-b414-572a3a1130a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105572097,
        "parent_id": "9e577a2a-cb71-4fac-8e33-8aa4a8a90d64",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "extension GetAPIItemDataOperation {\n    \n    static func get(url: NSURL, completed: ([ItemData]) -\u003e Void) {\n        \n        let date = NSDate(\n        timeIntervalSinceNow: NSDate().timeIntervalSince1970\n            + 5000)\n        \n        // get data from url\n        let urlData: [String: AnyObject] = [\n            \"title\": \"Red Camaro\",\n            \"desc\": \"A fast red car.\",\n            \"thumb\":\"http://cars.images.com/red-camaro.png\",\n            \"created\": NSDate(), \"updated\": date]\n        \n        // in this example forced unwrapping is used\n        // forced unwrapping should never be used in practice\n        // instead conditional unwrapping should be used (guard or if/let)\n        let item = Item(\n            title: urlData[\"title\"] as! String,\n            description: urlData[\"desc\"] as! String,\n            thumbnailURL: NSURL(string: urlData[\"thumb\"] as! String)!,\n            created: urlData[\"created\"] as! NSDate,\n            updated: urlData[\"updated\"] as! NSDate)\n        \n        completed([item])\n        \n    }\n}\n\nstruct ItemOperation: GetAPIItemDataOperation { }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "extension GetAPIItemDataOperation {\n    \n    static func get(url: NSURL, completed: ([ItemData]) -\u003e Void) {\n        \n        let date = NSDate(\n        timeIntervalSinceNow: NSDate().timeIntervalSince1970\n            + 5000)\n        \n        // get data from url\n        let urlData: [String: AnyObject] = [\n            \"title\": \"Red Camaro\",\n            \"desc\": \"A fast red car.\",\n            \"thumb\":\"http://cars.images.com/red-camaro.png\",\n            \"created\": NSDate(), \"updated\": date]\n        \n        // in this example forced unwrapping is used\n        // forced unwrapping should never be used in practice\n        // instead conditional unwrapping should be used (guard or if/let)\n        let item = Item(\n            title: urlData[\"title\"] as! String,\n            description: urlData[\"desc\"] as! String,\n            thumbnailURL: NSURL(string: urlData[\"thumb\"] as! String)!,\n            created: urlData[\"created\"] as! NSDate,\n            updated: urlData[\"updated\"] as! NSDate)\n        \n        completed([item])\n        \n    }\n}\n\nstruct ItemOperation: GetAPIItemDataOperation { }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105572097,
        "id": "a827726d-7ff6-4335-a23c-9ba53433ae92",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105572097,
        "parent_id": "9e577a2a-cb71-4fac-8e33-8aa4a8a90d64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A value type that conforms to the ItemData protocol, this value type is also able to conform to other protocols."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A value type that conforms to the ItemData protocol, this value type is also able to conform to other protocols."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105572097,
        "id": "a256c04c-f188-4d80-b8f9-d06ca31afccc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105572097,
        "parent_id": "9e577a2a-cb71-4fac-8e33-8aa4a8a90d64",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct Item: ItemData {\n    \n    let title: String\n    let description: String\n    let thumbnailURL: NSURL\n    let created: NSDate\n    let updated: NSDate\n    \n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct Item: ItemData {\n    \n    let title: String\n    let description: String\n    let thumbnailURL: NSURL\n    let created: NSDate\n    let updated: NSDate\n    \n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105572098,
        "id": "76e40813-12a5-467b-97c4-77221554744a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105572098,
        "parent_id": "9e577a2a-cb71-4fac-8e33-8aa4a8a90d64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here the item struct is extended to conform to a display item."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here the item struct is extended to conform to a display item."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105572098,
        "id": "54d9671c-852c-4df9-aa1e-f2b46667d556",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105572098,
        "parent_id": "9e577a2a-cb71-4fac-8e33-8aa4a8a90d64",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "extension Item: DisplayItem {\n    \n    func hasBeenUpdated() -\u003e Bool {\n        return updated.timeIntervalSince1970 \u003e\n            created.timeIntervalSince1970\n    }\n    \n    func getFormattedTitle() -\u003e String {\n        return title.stringByTrimmingCharactersInSet(\n            .whitespaceAndNewlineCharacterSet())\n    }\n    \n    func getFormattedDescription() -\u003e String {\n        return description.stringByTrimmingCharactersInSet(\n            .whitespaceAndNewlineCharacterSet())\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "extension Item: DisplayItem {\n    \n    func hasBeenUpdated() -\u003e Bool {\n        return updated.timeIntervalSince1970 \u003e\n            created.timeIntervalSince1970\n    }\n    \n    func getFormattedTitle() -\u003e String {\n        return title.stringByTrimmingCharactersInSet(\n            .whitespaceAndNewlineCharacterSet())\n    }\n    \n    func getFormattedDescription() -\u003e String {\n        return description.stringByTrimmingCharactersInSet(\n            .whitespaceAndNewlineCharacterSet())\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105572098,
        "id": "dd919d23-355c-42e9-9783-a9ac2f4187ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105572098,
        "parent_id": "9e577a2a-cb71-4fac-8e33-8aa4a8a90d64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An example call site for using the static get method."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An example call site for using the static get method."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105572098,
        "id": "321a6930-14f9-433d-aa2e-347cf91b3908",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105572098,
        "parent_id": "9e577a2a-cb71-4fac-8e33-8aa4a8a90d64",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "ItemOperation.get(NSURL()) { (itemData) in\n    \n    // perhaps inform a view of new data\n    // or parse the data for user requested info, etc.\n    dispatch_async(dispatch_get_main_queue(), { \n        \n        // self.items = itemData\n    })\n    \n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "ItemOperation.get(NSURL()) { (itemData) in\n    \n    // perhaps inform a view of new data\n    // or parse the data for user requested info, etc.\n    dispatch_async(dispatch_get_main_queue(), { \n        \n        // self.items = itemData\n    })\n    \n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105572098,
        "id": "4bff5b95-6a96-4f1f-8161-ee56c82fd1b4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105572098,
        "parent_id": "9e577a2a-cb71-4fac-8e33-8aa4a8a90d64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Different use cases will require different implementations. The main idea here is to show conformance from varying types where the protocol is the main point of the focus in the design. In this example perhaps the API data is conditionally saved to a Core Data entity."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Different use cases will require different implementations. The main idea here is to show conformance from varying types where the protocol is the main point of the focus in the design. In this example perhaps the API data is conditionally saved to a Core Data entity."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105572098,
        "id": "301bc2e5-86c8-46c5-b236-118647cf60ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105572098,
        "parent_id": "9e577a2a-cb71-4fac-8e33-8aa4a8a90d64",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// the default core data created classes + extension\nclass LocalItem: NSManagedObject { }\n\nextension LocalItem {\n    \n    @NSManaged var title: String\n    @NSManaged var itemDescription: String\n    @NSManaged var thumbnailURLStr: String\n    @NSManaged var createdAt: NSDate\n    @NSManaged var updatedAt: NSDate\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// the default core data created classes + extension\nclass LocalItem: NSManagedObject { }\n\nextension LocalItem {\n    \n    @NSManaged var title: String\n    @NSManaged var itemDescription: String\n    @NSManaged var thumbnailURLStr: String\n    @NSManaged var createdAt: NSDate\n    @NSManaged var updatedAt: NSDate\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105572099,
        "id": "a1e51ac8-fb31-41a4-b322-88d6eaa708d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105572099,
        "parent_id": "9e577a2a-cb71-4fac-8e33-8aa4a8a90d64",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here the Core Data backed class can also conform to the DisplayItem protocol."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here the Core Data backed class can also conform to the DisplayItem protocol."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105572099,
        "id": "93d908b7-d312-4cd8-bfa4-a92637a56894",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105572099,
        "parent_id": "9e577a2a-cb71-4fac-8e33-8aa4a8a90d64",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "extension LocalItem: DisplayItem {\n    \n    func hasBeenUpdated() -\u003e Bool {\n        return updatedAt.timeIntervalSince1970 \u003e\n            createdAt.timeIntervalSince1970\n    }\n    \n    func getFormattedTitle() -\u003e String {\n        return title.stringByTrimmingCharactersInSet(\n            .whitespaceAndNewlineCharacterSet())\n    }\n    \n    func getFormattedDescription() -\u003e String {\n        return itemDescription.stringByTrimmingCharactersInSet(\n            .whitespaceAndNewlineCharacterSet())\n    }\n}\n\n// In use, the core data results can be\n// conditionally casts as a protocol\nclass MyController: UIViewController {\n\n    override func viewDidLoad() {\n        \n        let fr: NSFetchRequest = NSFetchRequest(\n        entityName: \"Items\")\n    \n        let context = NSManagedObjectContext(\n        concurrencyType: .MainQueueConcurrencyType)\n        \n        do {\n            \n            let items: AnyObject = try context.executeFetchRequest(fr)\n            if let displayItems = items as? [DisplayItem] {\n                \n                print(displayItems)\n            }\n        \n        } catch let error as NSError {\n            print(error.localizedDescription)\n        }\n        \n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "extension LocalItem: DisplayItem {\n    \n    func hasBeenUpdated() -\u003e Bool {\n        return updatedAt.timeIntervalSince1970 \u003e\n            createdAt.timeIntervalSince1970\n    }\n    \n    func getFormattedTitle() -\u003e String {\n        return title.stringByTrimmingCharactersInSet(\n            .whitespaceAndNewlineCharacterSet())\n    }\n    \n    func getFormattedDescription() -\u003e String {\n        return itemDescription.stringByTrimmingCharactersInSet(\n            .whitespaceAndNewlineCharacterSet())\n    }\n}\n\n// In use, the core data results can be\n// conditionally casts as a protocol\nclass MyController: UIViewController {\n\n    override func viewDidLoad() {\n        \n        let fr: NSFetchRequest = NSFetchRequest(\n        entityName: \"Items\")\n    \n        let context = NSManagedObjectContext(\n        concurrencyType: .MainQueueConcurrencyType)\n        \n        do {\n            \n            let items: AnyObject = try context.executeFetchRequest(fr)\n            if let displayItems = items as? [DisplayItem] {\n                \n                print(displayItems)\n            }\n        \n        } catch let error as NSError {\n            print(error.localizedDescription)\n        }\n        \n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Using protocols as first class types",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}