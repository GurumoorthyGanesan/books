{
  "ID": "d73a12fe-0b75-4504-901c-02d1d4787534",
  "Root": {
    "alive": true,
    "content": [
      "e85da1c5-11f5-4e9d-ab4f-beafa2283977",
      "0bf00eff-1b9e-4aaf-9bd2-0417d9991870",
      "bd4507d0-0b47-4f6e-850a-cfebfb837c48",
      "593a6e46-3f80-46ef-b759-5c140c4fb22a",
      "07c89f70-37bb-48a3-aca4-91cc1a861bfa",
      "41e14e9c-9af7-4c67-a2f7-6e1b39b07ef6",
      "94ee46b1-37ca-463c-b8a4-0cdbb733a51d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552105496228,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d73a12fe-0b75-4504-901c-02d1d4787534",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552105496228,
    "parent_id": "5367e1b7-d8c9-42c1-a35c-1508743d5105",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Use generics to enhance type-safety"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105496224,
        "id": "e85da1c5-11f5-4e9d-ab4f-beafa2283977",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105496224,
        "parent_id": "d73a12fe-0b75-4504-901c-02d1d4787534",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s take this example without using generics"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s take this example without using generics"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105496227,
        "id": "0bf00eff-1b9e-4aaf-9bd2-0417d9991870",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105496227,
        "parent_id": "d73a12fe-0b75-4504-901c-02d1d4787534",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "protocol JSONDecodable {\n    static func from(_ json: [String: Any]) -\u003e Any?\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "protocol JSONDecodable {\n    static func from(_ json: [String: Any]) -\u003e Any?\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105496227,
        "id": "bd4507d0-0b47-4f6e-850a-cfebfb837c48",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105496227,
        "parent_id": "d73a12fe-0b75-4504-901c-02d1d4787534",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The protocol declaration seems fine unless you actually use it."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The protocol declaration seems fine unless you actually use it."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105496227,
        "id": "593a6e46-3f80-46ef-b759-5c140c4fb22a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105496227,
        "parent_id": "d73a12fe-0b75-4504-901c-02d1d4787534",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let myTestObject = TestObject.from(myJson) as? TestObject"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let myTestObject = TestObject.from(myJson) as? TestObject",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105496227,
        "id": "07c89f70-37bb-48a3-aca4-91cc1a861bfa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105496227,
        "parent_id": "d73a12fe-0b75-4504-901c-02d1d4787534",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Why do you have to cast the result to "
            ],
            [
              "TestObject",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "? Because of the "
            ],
            [
              "Any",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " return type in the protocol declaration."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Why do you have to cast the result to "
          },
          {
            "Text": "TestObject",
            "AttrFlags": 2
          },
          {
            "Text": "? Because of the "
          },
          {
            "Text": "Any",
            "AttrFlags": 2
          },
          {
            "Text": " return type in the protocol declaration."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105496228,
        "id": "41e14e9c-9af7-4c67-a2f7-6e1b39b07ef6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105496228,
        "parent_id": "d73a12fe-0b75-4504-901c-02d1d4787534",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By using generics you can avoid this problem that can cause runtime errors (and we don’t want to have them!)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By using generics you can avoid this problem that can cause runtime errors (and we don’t want to have them!)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105496228,
        "id": "94ee46b1-37ca-463c-b8a4-0cdbb733a51d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105496228,
        "parent_id": "d73a12fe-0b75-4504-901c-02d1d4787534",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "protocol JSONDecodable {\n    associatedtype Element \n    static func from(_ json: [String: Any]) -\u003e Element?\n}\n\nstruct TestObject: JSONDecodable {\n    static func from(_ json: [String: Any]) -\u003e TestObject? {\n    }\n}\n\nlet testObject = TestObject.from(myJson) // testObject is now automatically `TestObject?`"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "protocol JSONDecodable {\n    associatedtype Element \n    static func from(_ json: [String: Any]) -\u003e Element?\n}\n\nstruct TestObject: JSONDecodable {\n    static func from(_ json: [String: Any]) -\u003e TestObject? {\n    }\n}\n\nlet testObject = TestObject.from(myJson) // testObject is now automatically `TestObject?`",
        "code_language": "Plain Text"
      }
    ],
    "title": "Use generics to enhance type-safety",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}