{
  "ID": "1ce75a4e-4ae7-4f2d-8090-92f674fe5ec3",
  "Root": {
    "alive": true,
    "content": [
      "ead96ad1-8a5f-4f23-8994-07ab92edb4a5",
      "662f0919-62d5-490d-b957-b1f6bcf338a6",
      "2d6d3a67-de4d-4fa9-8f31-6ce3493e3756",
      "4ae31479-fc76-49ff-8c33-597351e5e539",
      "45bde872-e47f-4013-9ce0-8689cb4c95ea",
      "d7509367-3bd2-4aa8-9d37-652dbc97f3a3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552105898881,
    "id": "1ce75a4e-4ae7-4f2d-8090-92f674fe5ec3",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552105898881,
    "parent_id": "10e2f070-4018-4205-8a93-00bc8fa64375",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 Assigning function to a variable"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105898880,
        "id": "ead96ad1-8a5f-4f23-8994-07ab92edb4a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105898880,
        "parent_id": "1ce75a4e-4ae7-4f2d-8090-92f674fe5ec3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct Mathematics\n{\n    internal func performOperation(inputArray: [Int], operation: (Int)-\u003e Int)-\u003e [Int]\n    {\n        var processedArray = [Int]()\n        \n        for item in inputArray\n        {\n            processedArray.append(operation(item))\n        }\n        \n        return processedArray\n    }\n    \n    \n    internal func performComplexOperation(valueOne: Int)-\u003e ((Int)-\u003e Int)\n    {\n        return\n            ({\n                 return valueOne + $0   \n            })\n    }\n    \n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct Mathematics\n{\n    internal func performOperation(inputArray: [Int], operation: (Int)-\u003e Int)-\u003e [Int]\n    {\n        var processedArray = [Int]()\n        \n        for item in inputArray\n        {\n            processedArray.append(operation(item))\n        }\n        \n        return processedArray\n    }\n    \n    \n    internal func performComplexOperation(valueOne: Int)-\u003e ((Int)-\u003e Int)\n    {\n        return\n            ({\n                 return valueOne + $0   \n            })\n    }\n    \n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105898880,
        "id": "662f0919-62d5-490d-b957-b1f6bcf338a6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105898880,
        "parent_id": "1ce75a4e-4ae7-4f2d-8090-92f674fe5ec3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let arrayToBeProcessed = [1,3,5,7,9,11,8,6,4,2,100]\n\nlet math = Mathematics()\n\nfunc add2(item: Int)-\u003e Int\n{\n    return (item + 2)\n}\n\n// assigning the function to a variable and then passing it to a function as param\nlet add2ToMe = add2\nprint(math.performOperation(inputArray: arrayToBeProcessed, operation: add2ToMe))"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let arrayToBeProcessed = [1,3,5,7,9,11,8,6,4,2,100]\n\nlet math = Mathematics()\n\nfunc add2(item: Int)-\u003e Int\n{\n    return (item + 2)\n}\n\n// assigning the function to a variable and then passing it to a function as param\nlet add2ToMe = add2\nprint(math.performOperation(inputArray: arrayToBeProcessed, operation: add2ToMe))",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105898880,
        "id": "2d6d3a67-de4d-4fa9-8f31-6ce3493e3756",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105898880,
        "parent_id": "1ce75a4e-4ae7-4f2d-8090-92f674fe5ec3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105898880,
        "id": "4ae31479-fc76-49ff-8c33-597351e5e539",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105898880,
        "parent_id": "1ce75a4e-4ae7-4f2d-8090-92f674fe5ec3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "[3, 5, 7, 9, 11, 13, 10, 8, 6, 4, 102]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "[3, 5, 7, 9, 11, 13, 10, 8, 6, 4, 102]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105898881,
        "id": "45bde872-e47f-4013-9ce0-8689cb4c95ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105898881,
        "parent_id": "1ce75a4e-4ae7-4f2d-8090-92f674fe5ec3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Similarly the above could be achieved using a",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "closure",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Similarly the above could be achieved using a",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "closure",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105898881,
        "id": "d7509367-3bd2-4aa8-9d37-652dbc97f3a3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105898881,
        "parent_id": "1ce75a4e-4ae7-4f2d-8090-92f674fe5ec3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// assigning the closure to a variable and then passing it to a function as param\nlet add2 = {(item: Int)-\u003e Int in return item + 2}\nprint(math.performOperation(inputArray: arrayToBeProcessed, operation: add2))"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// assigning the closure to a variable and then passing it to a function as param\nlet add2 = {(item: Int)-\u003e Int in return item + 2}\nprint(math.performOperation(inputArray: arrayToBeProcessed, operation: add2))",
        "code_language": "Plain Text"
      }
    ],
    "title": "010 Assigning function to a variable"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}