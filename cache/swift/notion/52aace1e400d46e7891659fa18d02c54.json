{
  "ID": "52aace1e-400d-46e7-8916-59fa18d02c54",
  "Root": {
    "alive": true,
    "content": [
      "1ded2562-c0b5-4064-b4fb-ffafa94c6991",
      "23438b89-dd33-4125-af83-1017acfce518",
      "847a8928-e70a-4341-ad05-e3b37d1f467a",
      "6236c6bc-1bc3-4914-8974-36f9d1b53e73",
      "5b5cc5ed-a633-4e18-810e-f217f65ac92a",
      "bff1f1fd-8ed1-41e1-8c9f-f694cf0086ba"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552104971136,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "52aace1e-400d-46e7-8916-59fa18d02c54",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552104971136,
    "parent_id": "85fc985e-d4f6-470c-a50e-d230fb7f7029",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Indirect payloads"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104971132,
        "id": "1ded2562-c0b5-4064-b4fb-ffafa94c6991",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104971132,
        "parent_id": "52aace1e-400d-46e7-8916-59fa18d02c54",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Normally, enums can’t be recursive (because they would require infinite storage):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Normally, enums can’t be recursive (because they would require infinite storage):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104971135,
        "id": "23438b89-dd33-4125-af83-1017acfce518",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104971135,
        "parent_id": "52aace1e-400d-46e7-8916-59fa18d02c54",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "enum Tree\u003cT\u003e {\n    case leaf(T)\n    case branch(Tree\u003cT\u003e, Tree\u003cT\u003e)  // error: recursive enum 'Tree\u003cT\u003e' is not marked 'indirect'\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "enum Tree\u003cT\u003e {\n    case leaf(T)\n    case branch(Tree\u003cT\u003e, Tree\u003cT\u003e)  // error: recursive enum 'Tree\u003cT\u003e' is not marked 'indirect'\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104971135,
        "id": "847a8928-e70a-4341-ad05-e3b37d1f467a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104971135,
        "parent_id": "52aace1e-400d-46e7-8916-59fa18d02c54",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "indirect",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword makes the enum store its payload with a layer of indirection, rather than storing it inline. You can use this keyword on a single case:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "indirect",
            "AttrFlags": 3
          },
          {
            "Text": " keyword makes the enum store its payload with a layer of indirection, rather than storing it inline. You can use this keyword on a single case:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104971135,
        "id": "6236c6bc-1bc3-4914-8974-36f9d1b53e73",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104971135,
        "parent_id": "52aace1e-400d-46e7-8916-59fa18d02c54",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "enum Tree\u003cT\u003e {\n    case leaf(T)\n    indirect case branch(Tree\u003cT\u003e, Tree\u003cT\u003e)\n}\n\nlet tree = Tree.branch(.leaf(1), .branch(.leaf(2), .leaf(3)))"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "enum Tree\u003cT\u003e {\n    case leaf(T)\n    indirect case branch(Tree\u003cT\u003e, Tree\u003cT\u003e)\n}\n\nlet tree = Tree.branch(.leaf(1), .branch(.leaf(2), .leaf(3)))",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104971135,
        "id": "5b5cc5ed-a633-4e18-810e-f217f65ac92a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104971135,
        "parent_id": "52aace1e-400d-46e7-8916-59fa18d02c54",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "indirect",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " also works on the whole enum, making any case indirect when necessary:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "indirect",
            "AttrFlags": 2
          },
          {
            "Text": " also works on the whole enum, making any case indirect when necessary:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104971136,
        "id": "bff1f1fd-8ed1-41e1-8c9f-f694cf0086ba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104971136,
        "parent_id": "52aace1e-400d-46e7-8916-59fa18d02c54",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "indirect enum Tree\u003cT\u003e {\n    case leaf(T)\n    case branch(Tree\u003cT\u003e, Tree\u003cT\u003e)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "indirect enum Tree\u003cT\u003e {\n    case leaf(T)\n    case branch(Tree\u003cT\u003e, Tree\u003cT\u003e)\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Indirect payloads",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}