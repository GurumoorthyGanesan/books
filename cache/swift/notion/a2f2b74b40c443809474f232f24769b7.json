{
  "ID": "a2f2b74b-40c4-4380-9474-f232f24769b7",
  "Root": {
    "alive": true,
    "content": [
      "097a217d-60ee-4b92-80cb-4c39e1f7cbed",
      "23409c72-6845-46ab-aa5e-94c30bf35aa6",
      "0bf5db40-c090-44a3-8f59-94248d491154",
      "3aec44b2-3ca0-4b94-8673-66b46c199e01",
      "38c1b25f-34ce-48d8-b1c9-98d995c53fab",
      "87a39ca4-a835-4344-a5c8-7c0b2d820b46",
      "23400ff8-0416-416a-a621-8570b7e5296a",
      "7a036d0c-8472-4319-bb72-db1025ec57fd",
      "f2bdd715-90c1-4dc6-af4c-8741a6671d80",
      "75a599c0-2e33-45d6-8516-2d0f1c322f69",
      "effbb21c-1ba0-4633-919f-9c70ae3326dc",
      "4c6502eb-3189-4fd8-bb8f-78235b26d3a9",
      "94d542ba-f0c2-4a57-84b9-19f8b6839eca",
      "ea419055-b587-49a0-b30c-ade44e310079",
      "70c5f1ae-32e2-4b44-bc5c-9eaef5862bb4"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552105028903,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "a2f2b74b-40c4-4380-9474-f232f24769b7",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552105440000,
    "parent_id": "ab64a7f2-ccc3-4ffd-98ca-cb7cc7d65a64",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Overview - Why Optionals"
        ]
      ]
    },
    "type": "page",
    "version": 6,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105028896,
        "id": "097a217d-60ee-4b92-80cb-4c39e1f7cbed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105028896,
        "parent_id": "a2f2b74b-40c4-4380-9474-f232f24769b7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Often when programming it is necessary to make some distinction between a variable that has a value and one that does not. For reference types, such as C Pointers, a special value such as "
            ],
            [
              "null",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be used to indicate that the variable has no value. For intrinsic types, such as an integer, it is more difficult. A nominated value, such as -1 can be used, but this relies on interpretation of the value. It also eliminates that “special” value from normal use."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Often when programming it is necessary to make some distinction between a variable that has a value and one that does not. For reference types, such as C Pointers, a special value such as "
          },
          {
            "Text": "null",
            "AttrFlags": 2
          },
          {
            "Text": " can be used to indicate that the variable has no value. For intrinsic types, such as an integer, it is more difficult. A nominated value, such as -1 can be used, but this relies on interpretation of the value. It also eliminates that “special” value from normal use."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105028900,
        "id": "23409c72-6845-46ab-aa5e-94c30bf35aa6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105028900,
        "parent_id": "a2f2b74b-40c4-4380-9474-f232f24769b7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To address this, Swift allows any variable to be declared as an optional. This is indicated by the use of a ? or ! after the type (See "
            ],
            [
              "Types of optionals",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/swift/247/optionals/889/types-of-optionals#t=201607220020034058369"
                ]
              ]
            ],
            [
              ")"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To address this, Swift allows any variable to be declared as an optional. This is indicated by the use of a ? or ! after the type (See "
          },
          {
            "Text": "Types of optionals",
            "Link": "http://stackoverflow.com/documentation/swift/247/optionals/889/types-of-optionals#t=201607220020034058369"
          },
          {
            "Text": ")"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105028900,
        "id": "0bf5db40-c090-44a3-8f59-94248d491154",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105028900,
        "parent_id": "a2f2b74b-40c4-4380-9474-f232f24769b7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example,"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example,"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105028901,
        "id": "3aec44b2-3ca0-4b94-8673-66b46c199e01",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105028901,
        "parent_id": "a2f2b74b-40c4-4380-9474-f232f24769b7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var possiblyInt: Int?"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var possiblyInt: Int?",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105028901,
        "id": "38c1b25f-34ce-48d8-b1c9-98d995c53fab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105028901,
        "parent_id": "a2f2b74b-40c4-4380-9474-f232f24769b7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "declares a variable that may or may not contain an integer value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "declares a variable that may or may not contain an integer value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105028901,
        "id": "87a39ca4-a835-4344-a5c8-7c0b2d820b46",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105028901,
        "parent_id": "a2f2b74b-40c4-4380-9474-f232f24769b7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The special value "
            ],
            [
              "nil",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " indicates that no value is currently assigned to this variable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The special value "
          },
          {
            "Text": "nil",
            "AttrFlags": 2
          },
          {
            "Text": " indicates that no value is currently assigned to this variable."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105028901,
        "id": "23400ff8-0416-416a-a621-8570b7e5296a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105028901,
        "parent_id": "a2f2b74b-40c4-4380-9474-f232f24769b7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "possiblyInt = 5      // PossiblyInt is now 5\npossiblyInt = nil    // PossiblyInt is now unassigned"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "possiblyInt = 5      // PossiblyInt is now 5\npossiblyInt = nil    // PossiblyInt is now unassigned",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105028901,
        "id": "7a036d0c-8472-4319-bb72-db1025ec57fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105028901,
        "parent_id": "a2f2b74b-40c4-4380-9474-f232f24769b7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "nil",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can also be used to test for an assigned value:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "nil",
            "AttrFlags": 2
          },
          {
            "Text": " can also be used to test for an assigned value:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105028901,
        "id": "f2bdd715-90c1-4dc6-af4c-8741a6671d80",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105028901,
        "parent_id": "a2f2b74b-40c4-4380-9474-f232f24769b7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if possiblyInt != nil {\n    print(\"possiblyInt has the value \\(possiblyInt!)\")\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if possiblyInt != nil {\n    print(\"possiblyInt has the value \\(possiblyInt!)\")\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105028902,
        "id": "75a599c0-2e33-45d6-8516-2d0f1c322f69",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105028902,
        "parent_id": "a2f2b74b-40c4-4380-9474-f232f24769b7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note the use of "
            ],
            [
              "\\!",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the print statement to "
            ],
            [
              "unwrap",
              [
                [
                  "i"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/swift/247/optionals/913/unwrapping-an-optional#t=20160722002622952402"
                ]
              ]
            ],
            [
              " the optional value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note the use of "
          },
          {
            "Text": "\\!",
            "AttrFlags": 2
          },
          {
            "Text": " in the print statement to "
          },
          {
            "Text": "unwrap",
            "AttrFlags": 4,
            "Link": "http://stackoverflow.com/documentation/swift/247/optionals/913/unwrapping-an-optional#t=20160722002622952402"
          },
          {
            "Text": " the optional value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105028902,
        "id": "effbb21c-1ba0-4633-919f-9c70ae3326dc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105028902,
        "parent_id": "a2f2b74b-40c4-4380-9474-f232f24769b7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As an example of a common use of optionals, consider a function that returns an integer from a string containing digits; It is possible that the string may contain non-digit characters, or may even be empty."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As an example of a common use of optionals, consider a function that returns an integer from a string containing digits; It is possible that the string may contain non-digit characters, or may even be empty."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105028902,
        "id": "4c6502eb-3189-4fd8-bb8f-78235b26d3a9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105028902,
        "parent_id": "a2f2b74b-40c4-4380-9474-f232f24769b7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "How can a function that returns a simple "
            ],
            [
              "Int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " indicate failure? It cannot do so by returning any specific value as this would preclude that value from being parsed from the string."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "How can a function that returns a simple "
          },
          {
            "Text": "Int",
            "AttrFlags": 2
          },
          {
            "Text": " indicate failure? It cannot do so by returning any specific value as this would preclude that value from being parsed from the string."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105028902,
        "id": "94d542ba-f0c2-4a57-84b9-19f8b6839eca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105028902,
        "parent_id": "a2f2b74b-40c4-4380-9474-f232f24769b7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var someInt\nsomeInt = parseInt(\"not an integer\") // How would this function indicate failure?"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var someInt\nsomeInt = parseInt(\"not an integer\") // How would this function indicate failure?",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105028902,
        "id": "ea419055-b587-49a0-b30c-ade44e310079",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105028902,
        "parent_id": "a2f2b74b-40c4-4380-9474-f232f24769b7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Swift, however, that function can simply return an "
            ],
            [
              "optional",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " Int. Then failure is indicated by return value of "
            ],
            [
              "nil",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Swift, however, that function can simply return an "
          },
          {
            "Text": "optional",
            "AttrFlags": 4
          },
          {
            "Text": " Int. Then failure is indicated by return value of "
          },
          {
            "Text": "nil",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105028903,
        "id": "70c5f1ae-32e2-4b44-bc5c-9eaef5862bb4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105028903,
        "parent_id": "a2f2b74b-40c4-4380-9474-f232f24769b7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var someInt?\nsomeInt = parseInt(\"not an integer\")  // This function returns nil if parsing fails\nif someInt == nil {\n    print(\"That isn't a valid integer\")\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var someInt?\nsomeInt = parseInt(\"not an integer\")  // This function returns nil if parsing fails\nif someInt == nil {\n    print(\"That isn't a valid integer\")\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Overview - Why Optionals",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}