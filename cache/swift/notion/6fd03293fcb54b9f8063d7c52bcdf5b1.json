{
  "ID": "6fd03293-fcb5-4b9f-8063-d7c52bcdf5b1",
  "Root": {
    "alive": true,
    "content": [
      "4d0c8064-3edd-4e27-a935-a90922defc59",
      "9df69954-9160-4ad1-befb-299db0dc3b9c",
      "0a9db123-426f-4ba5-a963-a84feb2f3486",
      "f61468b9-2010-4f54-bc57-c110bce1243a",
      "62042c94-2365-43b5-9e03-e7a3c791f070",
      "2fdf7e3f-3b51-4535-8c02-305206555a22",
      "934a1cb0-fe99-480b-9ef8-e7b92a3c9d6b",
      "d2c1e88a-6d84-4f5c-93fb-bb8b02c2ba12",
      "1415e583-3d5e-474c-a21f-e823b2d5d0d0",
      "8720cfd1-45ee-46a0-b000-78abeb1b8419",
      "74dd5595-091d-4c4f-816d-e9a998357393",
      "5fb84e27-1b7e-4edd-b0f3-6701eab65491",
      "a060215b-6044-4a5f-b65f-598f32456310",
      "f3f886bc-f213-4cce-9b0d-a177c1e7efa8",
      "e71f9eb2-0447-4ebe-8e0d-28b71c8fc220"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552105026337,
    "id": "6fd03293-fcb5-4b9f-8063-d7c52bcdf5b1",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552105440000,
    "parent_id": "ab64a7f2-ccc3-4ffd-98ca-cb7cc7d65a64",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Unwrapping an Optional"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105026334,
        "id": "4d0c8064-3edd-4e27-a935-a90922defc59",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105026334,
        "parent_id": "6fd03293-fcb5-4b9f-8063-d7c52bcdf5b1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In order to access the value of an Optional, it needs to be unwrapped."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In order to access the value of an Optional, it needs to be unwrapped."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105026334,
        "id": "9df69954-9160-4ad1-befb-299db0dc3b9c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105026334,
        "parent_id": "6fd03293-fcb5-4b9f-8063-d7c52bcdf5b1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can "
            ],
            [
              "conditionally unwrap",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " an Optional using optional binding and "
            ],
            [
              "force unwrap",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " an Optional using the "
            ],
            [
              "\\!",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can "
          },
          {
            "Text": "conditionally unwrap",
            "AttrFlags": 4
          },
          {
            "Text": " an Optional using optional binding and "
          },
          {
            "Text": "force unwrap",
            "AttrFlags": 4
          },
          {
            "Text": " an Optional using the "
          },
          {
            "Text": "\\!",
            "AttrFlags": 2
          },
          {
            "Text": " operator."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105026335,
        "id": "0a9db123-426f-4ba5-a963-a84feb2f3486",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105026335,
        "parent_id": "6fd03293-fcb5-4b9f-8063-d7c52bcdf5b1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Conditionally unwrapping effectively asks “Does this variable have a value?” while force unwrapping says “This variable has a value!”."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Conditionally unwrapping effectively asks “Does this variable have a value?” while force unwrapping says “This variable has a value!”."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105026335,
        "id": "f61468b9-2010-4f54-bc57-c110bce1243a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105026335,
        "parent_id": "6fd03293-fcb5-4b9f-8063-d7c52bcdf5b1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you force unwrap a variable that is "
            ],
            [
              "nil",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", your program will throw an "
            ],
            [
              "unexpectedly found nil while unwrapping an optional",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " exception and crash, so you need to consider carefully if using "
            ],
            [
              "\\!",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is appropriate."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you force unwrap a variable that is "
          },
          {
            "Text": "nil",
            "AttrFlags": 2
          },
          {
            "Text": ", your program will throw an "
          },
          {
            "Text": "unexpectedly found nil while unwrapping an optional",
            "AttrFlags": 4
          },
          {
            "Text": " exception and crash, so you need to consider carefully if using "
          },
          {
            "Text": "\\!",
            "AttrFlags": 2
          },
          {
            "Text": " is appropriate."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105026335,
        "id": "62042c94-2365-43b5-9e03-e7a3c791f070",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105026335,
        "parent_id": "6fd03293-fcb5-4b9f-8063-d7c52bcdf5b1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var text: String? = nil\nvar unwrapped: String = text! //crashes with \"unexpectedly found nil while unwrapping an Optional value\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var text: String? = nil\nvar unwrapped: String = text! //crashes with \"unexpectedly found nil while unwrapping an Optional value\"",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105026335,
        "id": "2fdf7e3f-3b51-4535-8c02-305206555a22",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105026335,
        "parent_id": "6fd03293-fcb5-4b9f-8063-d7c52bcdf5b1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For safe unwrapping, you can use an "
            ],
            [
              "if-let",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement, which will not throw an exception or crash if the wrapped value is "
            ],
            [
              "nil",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For safe unwrapping, you can use an "
          },
          {
            "Text": "if-let",
            "AttrFlags": 2
          },
          {
            "Text": " statement, which will not throw an exception or crash if the wrapped value is "
          },
          {
            "Text": "nil",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105026335,
        "id": "934a1cb0-fe99-480b-9ef8-e7b92a3c9d6b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105026335,
        "parent_id": "6fd03293-fcb5-4b9f-8063-d7c52bcdf5b1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var number: Int?\nif let unwrappedNumber = number {       // Has `number` been assigned a value?\n    print(\"number: \\(unwrappedNumber)\") // Will not enter this line\n} else {\n    print(\"number was not assigned a value\")\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var number: Int?\nif let unwrappedNumber = number {       // Has `number` been assigned a value?\n    print(\"number: \\(unwrappedNumber)\") // Will not enter this line\n} else {\n    print(\"number was not assigned a value\")\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105026336,
        "id": "d2c1e88a-6d84-4f5c-93fb-bb8b02c2ba12",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105026336,
        "parent_id": "6fd03293-fcb5-4b9f-8063-d7c52bcdf5b1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Or, "
            ],
            [
              "a guard statement",
              [
                [
                  "a",
                  "https://stackoverflow.com/documentation/swift/475/conditionals/1558/using-guard#t=20170526044611473436"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Or, "
          },
          {
            "Text": "a guard statement",
            "Link": "https://stackoverflow.com/documentation/swift/475/conditionals/1558/using-guard#t=20170526044611473436"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105026336,
        "id": "1415e583-3d5e-474c-a21f-e823b2d5d0d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105026336,
        "parent_id": "6fd03293-fcb5-4b9f-8063-d7c52bcdf5b1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var number: Int?\nguard let unwrappedNumber = number else {\n    return\n}\nprint(\"number: \\(unwrappedNumber)\")"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var number: Int?\nguard let unwrappedNumber = number else {\n    return\n}\nprint(\"number: \\(unwrappedNumber)\")",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105026336,
        "id": "8720cfd1-45ee-46a0-b000-78abeb1b8419",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105026336,
        "parent_id": "6fd03293-fcb5-4b9f-8063-d7c52bcdf5b1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that the scope of the "
            ],
            [
              "unwrappedNumber",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variable is inside the "
            ],
            [
              "if-let",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement and outside of the "
            ],
            [
              "guard",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that the scope of the "
          },
          {
            "Text": "unwrappedNumber",
            "AttrFlags": 2
          },
          {
            "Text": " variable is inside the "
          },
          {
            "Text": "if-let",
            "AttrFlags": 2
          },
          {
            "Text": " statement and outside of the "
          },
          {
            "Text": "guard",
            "AttrFlags": 2
          },
          {
            "Text": " block."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105026336,
        "id": "74dd5595-091d-4c4f-816d-e9a998357393",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105026336,
        "parent_id": "6fd03293-fcb5-4b9f-8063-d7c52bcdf5b1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can chain unwrapping of many optionals, this is mainly useful in cases that your code requires more then variable to run correctly:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can chain unwrapping of many optionals, this is mainly useful in cases that your code requires more then variable to run correctly:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105026336,
        "id": "5fb84e27-1b7e-4edd-b0f3-6701eab65491",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105026336,
        "parent_id": "6fd03293-fcb5-4b9f-8063-d7c52bcdf5b1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var firstName:String?\nvar lastName:String?\n\nif let fn = firstName, let ln = lastName {\n    print(\"\\(fn) + \\(ln)\")//pay attention that the condition will be true only if both optionals are not nil.\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var firstName:String?\nvar lastName:String?\n\nif let fn = firstName, let ln = lastName {\n    print(\"\\(fn) + \\(ln)\")//pay attention that the condition will be true only if both optionals are not nil.\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105026336,
        "id": "a060215b-6044-4a5f-b65f-598f32456310",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105026336,
        "parent_id": "6fd03293-fcb5-4b9f-8063-d7c52bcdf5b1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that all the variables have to be unwrapped in order to pass successfully the test, otherwise you would have no way to determine which variables were unwrapped and which weren’t."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that all the variables have to be unwrapped in order to pass successfully the test, otherwise you would have no way to determine which variables were unwrapped and which weren’t."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105026336,
        "id": "f3f886bc-f213-4cce-9b0d-a177c1e7efa8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105026336,
        "parent_id": "6fd03293-fcb5-4b9f-8063-d7c52bcdf5b1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can chain conditional statements using your optionals immediately after it is unwrapped. This means no nested if - else statements!"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can chain conditional statements using your optionals immediately after it is unwrapped. This means no nested if - else statements!"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105026336,
        "id": "e71f9eb2-0447-4ebe-8e0d-28b71c8fc220",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105026336,
        "parent_id": "6fd03293-fcb5-4b9f-8063-d7c52bcdf5b1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var firstName:String? = \"Bob\"\nvar myBool:Bool? = false\n\nif let fn = firstName, fn == \"Bob\", let bool = myBool, !bool {\n    print(\"firstName is bob and myBool was false!\")\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var firstName:String? = \"Bob\"\nvar myBool:Bool? = false\n\nif let fn = firstName, fn == \"Bob\", let bool = myBool, !bool {\n    print(\"firstName is bob and myBool was false!\")\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "020 Unwrapping an Optional"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}