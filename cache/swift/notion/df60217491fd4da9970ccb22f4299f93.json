{
  "ID": "df602174-91fd-4da9-970c-cb22f4299f93",
  "Root": {
    "alive": true,
    "content": [
      "cebee53d-1f29-4e3c-b6b0-fa323119084c",
      "e6cc5843-14b0-4d57-be48-d63de2f1539f",
      "78fc4aeb-9bb3-4a3a-b814-ebcdd3bf52b3",
      "857c947a-5234-416c-9755-5c0ef3a8ad91",
      "ae605dc9-52b4-4e3e-9f09-5cbf3314bfb4",
      "c7623d63-dca9-4ed1-a9a2-b853eb97c032",
      "2afb7e52-7e57-40ce-bae6-bad8dc318534",
      "6215ed44-2483-4d93-8617-a04a6e7bbdcb",
      "2bf3161f-c07f-4281-ba7e-5c92bea2d3b8",
      "2ef364b5-a228-434c-9a04-1d5ac15690fd",
      "1ddeea4b-ed4c-4372-bc02-b07c66167dc7",
      "218c1a1b-fbd5-46dc-9894-4b10de26989a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552105145918,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "df602174-91fd-4da9-970c-cb22f4299f93",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552105145918,
    "parent_id": "cfa2de35-cd00-48e5-aa49-c7bc809cd199",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Optional binding and where clauses"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105145915,
        "id": "cebee53d-1f29-4e3c-b6b0-fa323119084c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105145915,
        "parent_id": "df602174-91fd-4da9-970c-cb22f4299f93",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Optionals",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/swift/247/optionals#t=201604150541288983659"
                ]
              ]
            ],
            [
              " must be "
            ],
            [
              "unwrapped",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " before they can be used in most expressions. "
            ],
            [
              "if let",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is an "
            ],
            [
              "optional binding",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", which succeeds if the optional value was "
            ],
            [
              "not ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "nil",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Optionals",
            "Link": "http://stackoverflow.com/documentation/swift/247/optionals#t=201604150541288983659"
          },
          {
            "Text": " must be "
          },
          {
            "Text": "unwrapped",
            "AttrFlags": 4
          },
          {
            "Text": " before they can be used in most expressions. "
          },
          {
            "Text": "if let",
            "AttrFlags": 2
          },
          {
            "Text": " is an "
          },
          {
            "Text": "optional binding",
            "AttrFlags": 4
          },
          {
            "Text": ", which succeeds if the optional value was "
          },
          {
            "Text": "not ",
            "AttrFlags": 1
          },
          {
            "Text": "nil",
            "AttrFlags": 3
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105145916,
        "id": "e6cc5843-14b0-4d57-be48-d63de2f1539f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105145916,
        "parent_id": "df602174-91fd-4da9-970c-cb22f4299f93",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let num: Int? = 10 // or: let num: Int? = nil\n\nif let unwrappedNum = num {\n    // num has type Int?; unwrappedNum has type Int\n    print(\"num was not nil: \\(unwrappedNum + 1)\")\n} else {\n    print(\"num was nil\")\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let num: Int? = 10 // or: let num: Int? = nil\n\nif let unwrappedNum = num {\n    // num has type Int?; unwrappedNum has type Int\n    print(\"num was not nil: \\(unwrappedNum + 1)\")\n} else {\n    print(\"num was nil\")\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105145916,
        "id": "78fc4aeb-9bb3-4a3a-b814-ebcdd3bf52b3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105145916,
        "parent_id": "df602174-91fd-4da9-970c-cb22f4299f93",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can reuse the "
            ],
            [
              "same name",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " for the newly bound variable, shadowing the original:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can reuse the "
          },
          {
            "Text": "same name",
            "AttrFlags": 1
          },
          {
            "Text": " for the newly bound variable, shadowing the original:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105145916,
        "id": "857c947a-5234-416c-9755-5c0ef3a8ad91",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105145916,
        "parent_id": "df602174-91fd-4da9-970c-cb22f4299f93",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// num originally has type Int?\nif let num = num {\n    // num has type Int inside this block\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// num originally has type Int?\nif let num = num {\n    // num has type Int inside this block\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105145916,
        "id": "ae605dc9-52b4-4e3e-9f09-5cbf3314bfb4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105145916,
        "parent_id": "df602174-91fd-4da9-970c-cb22f4299f93",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Combine multiple optional bindings with commas ("
            ],
            [
              ",",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Combine multiple optional bindings with commas ("
          },
          {
            "Text": ",",
            "AttrFlags": 2
          },
          {
            "Text": "):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105145917,
        "id": "c7623d63-dca9-4ed1-a9a2-b853eb97c032",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105145917,
        "parent_id": "df602174-91fd-4da9-970c-cb22f4299f93",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if let unwrappedNum = num, let unwrappedStr = str {\n    // Do something with unwrappedNum \u0026 unwrappedStr\n} else if let unwrappedNum = num {\n    // Do something with unwrappedNum\n} else {\n    // num was nil\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if let unwrappedNum = num, let unwrappedStr = str {\n    // Do something with unwrappedNum \u0026 unwrappedStr\n} else if let unwrappedNum = num {\n    // Do something with unwrappedNum\n} else {\n    // num was nil\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105145917,
        "id": "2afb7e52-7e57-40ce-bae6-bad8dc318534",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105145917,
        "parent_id": "df602174-91fd-4da9-970c-cb22f4299f93",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Apply further constraints after the optional binding using a "
            ],
            [
              "where",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " clause:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Apply further constraints after the optional binding using a "
          },
          {
            "Text": "where",
            "AttrFlags": 2
          },
          {
            "Text": " clause:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105145917,
        "id": "6215ed44-2483-4d93-8617-a04a6e7bbdcb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105145917,
        "parent_id": "df602174-91fd-4da9-970c-cb22f4299f93",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "where unwrappedNum % 2 == 0"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "where unwrappedNum % 2 == 0",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105145917,
        "id": "2bf3161f-c07f-4281-ba7e-5c92bea2d3b8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105145917,
        "parent_id": "df602174-91fd-4da9-970c-cb22f4299f93",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you’re feeling adventurous, interleave any number of optional bindings and "
            ],
            [
              "where",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " clauses:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you’re feeling adventurous, interleave any number of optional bindings and "
          },
          {
            "Text": "where",
            "AttrFlags": 2
          },
          {
            "Text": " clauses:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105145917,
        "id": "2ef364b5-a228-434c-9a04-1d5ac15690fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105145917,
        "parent_id": "df602174-91fd-4da9-970c-cb22f4299f93",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if let num = num                           // num must be non-nil\n    where num % 2 == 1,                    // num must be odd\n    let str = str,                         // str must be non-nil\n    let firstChar = str.characters.first   // str must also be non-empty\n    where firstChar != \"x\"                 // the first character must not be \"x\"\n{\n    // all bindings \u0026 conditions succeeded!\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if let num = num                           // num must be non-nil\n    where num % 2 == 1,                    // num must be odd\n    let str = str,                         // str must be non-nil\n    let firstChar = str.characters.first   // str must also be non-empty\n    where firstChar != \"x\"                 // the first character must not be \"x\"\n{\n    // all bindings \u0026 conditions succeeded!\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105145918,
        "id": "1ddeea4b-ed4c-4372-bc02-b07c66167dc7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105145918,
        "parent_id": "df602174-91fd-4da9-970c-cb22f4299f93",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Swift 3, "
            ],
            [
              "where",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " clauses have been replaced ("
            ],
            [
              "SE-0099",
              [
                [
                  "a",
                  "https://github.com/apple/swift-evolution/blob/master/proposals/0099-conditionclauses.md"
                ]
              ]
            ],
            [
              "): simply use another "
            ],
            [
              ",",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to separate optional bindings and boolean conditions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Swift 3, "
          },
          {
            "Text": "where",
            "AttrFlags": 2
          },
          {
            "Text": " clauses have been replaced ("
          },
          {
            "Text": "SE-0099",
            "Link": "https://github.com/apple/swift-evolution/blob/master/proposals/0099-conditionclauses.md"
          },
          {
            "Text": "): simply use another "
          },
          {
            "Text": ",",
            "AttrFlags": 2
          },
          {
            "Text": " to separate optional bindings and boolean conditions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552105145918,
        "id": "218c1a1b-fbd5-46dc-9894-4b10de26989a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552105145918,
        "parent_id": "df602174-91fd-4da9-970c-cb22f4299f93",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              ", unwrappedNum % 2 == 0"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": ", unwrappedNum % 2 == 0",
        "code_language": "Plain Text"
      }
    ],
    "title": "Optional binding and where clauses",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}