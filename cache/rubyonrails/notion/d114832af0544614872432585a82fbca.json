{
  "ID": "d114832a-f054-4614-8724-32585a82fbca",
  "Root": {
    "alive": true,
    "content": [
      "90505f91-b749-433e-90ec-64ddcb4a20b7",
      "db52dff9-583e-4626-b062-7b75e8e70733",
      "9015d553-06e4-41f3-842b-e7d55c53fc85",
      "d51fbc9f-0427-4a0c-9dc8-8ed055d7732a",
      "b7333ddd-31ce-40fb-bbd9-14ffd28278f1",
      "918b16aa-b1ad-4591-8a89-4b9a939c5417",
      "60df4338-e3f5-4a17-aa70-6c0dfd65b67a",
      "505940bc-c9cf-49dc-9492-797e02b9085f",
      "bb7aa8a2-0b13-4049-a35b-ab1ebace8b8b",
      "584f5c87-e482-4350-9ac0-f472628c388c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552103628880,
    "id": "d114832a-f054-4614-8724-32585a82fbca",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552103628880,
    "parent_id": "1ecfd7e0-cc31-4661-b315-8c1854e8046b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Managing Production and staging environments for a Heroku"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552103628877,
        "id": "90505f91-b749-433e-90ec-64ddcb4a20b7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552103628877,
        "parent_id": "d114832a-f054-4614-8724-32585a82fbca",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Every Heroku app runs in at least two environments: on Heroku (we’ll call that production) and on your local machine (development). If more than one person is working on the app, then you’ve got multiple development environments - one per machine, usually. Usually, each developer will also have a test environment for running tests. Unfortunately, this approach breaks down as the environments become less similar. Windows and Macs, for instance, both provide different environments than the Linux stack on Heroku, so you can’t always be sure that code that works in your local development environment will work the same way when you deploy it to production."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Every Heroku app runs in at least two environments: on Heroku (we’ll call that production) and on your local machine (development). If more than one person is working on the app, then you’ve got multiple development environments - one per machine, usually. Usually, each developer will also have a test environment for running tests. Unfortunately, this approach breaks down as the environments become less similar. Windows and Macs, for instance, both provide different environments than the Linux stack on Heroku, so you can’t always be sure that code that works in your local development environment will work the same way when you deploy it to production."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552103628879,
        "id": "db52dff9-583e-4626-b062-7b75e8e70733",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552103628879,
        "parent_id": "d114832a-f054-4614-8724-32585a82fbca",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The solution is to have a staging environment that is as similar to production as is possible. This can be achieved by creating a second Heroku application that hosts your staging application. With staging, you can check your code in a production-like setting before having it affect your actual users."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The solution is to have a staging environment that is as similar to production as is possible. This can be achieved by creating a second Heroku application that hosts your staging application. With staging, you can check your code in a production-like setting before having it affect your actual users."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552103628880,
        "id": "9015d553-06e4-41f3-842b-e7d55c53fc85",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552103628880,
        "parent_id": "d114832a-f054-4614-8724-32585a82fbca",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Starting from scratch",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Starting from scratch",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552103628880,
        "id": "d51fbc9f-0427-4a0c-9dc8-8ed055d7732a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552103628880,
        "parent_id": "d114832a-f054-4614-8724-32585a82fbca",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Assume you have an application running on your local machine, and you’re ready to push it to Heroku. We’ll need to create both remote environments, staging and production. To get in the habit of pushing to staging first, we’ll start with this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Assume you have an application running on your local machine, and you’re ready to push it to Heroku. We’ll need to create both remote environments, staging and production. To get in the habit of pushing to staging first, we’ll start with this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552103628880,
        "id": "b7333ddd-31ce-40fb-bbd9-14ffd28278f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552103628880,
        "parent_id": "d114832a-f054-4614-8724-32585a82fbca",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$ heroku create --remote staging\nCreating strong-river-216.... done\nhttp://strong-river-216.heroku.com/ | https://git.heroku.com/strong-river-216.git\nGit remote staging added"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$ heroku create --remote staging\nCreating strong-river-216.... done\nhttp://strong-river-216.heroku.com/ | https://git.heroku.com/strong-river-216.git\nGit remote staging added",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552103628880,
        "id": "918b16aa-b1ad-4591-8a89-4b9a939c5417",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552103628880,
        "parent_id": "d114832a-f054-4614-8724-32585a82fbca",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By default, the heroku CLI creates projects with a heroku git remote. Here, we’re specifying a different name with the –remote flag, so pushing code to Heroku and running commands against the app look a little different than the normal git push heroku master:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By default, the heroku CLI creates projects with a heroku git remote. Here, we’re specifying a different name with the –remote flag, so pushing code to Heroku and running commands against the app look a little different than the normal git push heroku master:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552103628880,
        "id": "60df4338-e3f5-4a17-aa70-6c0dfd65b67a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552103628880,
        "parent_id": "d114832a-f054-4614-8724-32585a82fbca",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$ git push staging master\n...\n$ heroku ps --remote staging\n=== web: `bundle exec puma -C config/puma.rb``\nweb.1: up for 21s"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$ git push staging master\n...\n$ heroku ps --remote staging\n=== web: `bundle exec puma -C config/puma.rb``\nweb.1: up for 21s",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552103628880,
        "id": "505940bc-c9cf-49dc-9492-797e02b9085f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552103628880,
        "parent_id": "d114832a-f054-4614-8724-32585a82fbca",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Once your staging app is up and running properly, you can create your production app:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Once your staging app is up and running properly, you can create your production app:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552103628880,
        "id": "bb7aa8a2-0b13-4049-a35b-ab1ebace8b8b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552103628880,
        "parent_id": "d114832a-f054-4614-8724-32585a82fbca",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$ heroku create --remote production\nCreating fierce-ice-327.... done\nhttp://fierce-ice-327.heroku.com/ | https://git.heroku.com/fierce-ice-327.git\nGit remote production added\n$ git push production master\n...\n$ heroku ps --remote production\n=== web: `bundle exec puma -C config/puma.rb\nweb.1: up for 16s"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$ heroku create --remote production\nCreating fierce-ice-327.... done\nhttp://fierce-ice-327.heroku.com/ | https://git.heroku.com/fierce-ice-327.git\nGit remote production added\n$ git push production master\n...\n$ heroku ps --remote production\n=== web: `bundle exec puma -C config/puma.rb\nweb.1: up for 16s",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552103628880,
        "id": "584f5c87-e482-4350-9ac0-f472628c388c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552103628880,
        "parent_id": "d114832a-f054-4614-8724-32585a82fbca",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And with that, you’ve got the same codebase running as two separate Heroku apps – one staging and one production, set up identically. Just remember you will have to specify which app you are going to operate on your daily work. You can either use flag ‘–remote’ or use your git config to specify a default app."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And with that, you’ve got the same codebase running as two separate Heroku apps – one staging and one production, set up identically. Just remember you will have to specify which app you are going to operate on your daily work. You can either use flag ‘–remote’ or use your git config to specify a default app."
          }
        ]
      }
    ],
    "title": "020 Managing Production and staging environments for a Heroku"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}