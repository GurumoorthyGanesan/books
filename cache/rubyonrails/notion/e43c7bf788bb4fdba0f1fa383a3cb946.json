{
  "ID": "e43c7bf7-88bb-4fdb-a0f1-fa383a3cb946",
  "Root": {
    "alive": true,
    "content": [
      "05964786-67f7-40d0-8ac1-61f6aa80e03a",
      "9e418c45-e0e3-431c-8c13-9707e9594a50",
      "6aeba3f1-8620-4019-bc80-8b8b192bfdb5",
      "419454de-0a9b-4387-942e-8b8c5d2be0af",
      "6a423a23-d8d4-4a47-a92e-770d8dcec6f6",
      "7948d4c3-6f7a-4430-aabf-b5147ec6c69b",
      "cb74bd2e-280a-4e13-a9c7-c0757fbfa01e",
      "0481e80d-69ca-4c18-9795-77f28782f476",
      "e26253d8-943d-4335-a017-5525450a21a6",
      "e00b2389-5a45-46c8-b7cf-02847a570d39",
      "0b486cb2-64ad-4fa0-9ab4-b05a85dcd185"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552104008898,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e43c7bf7-88bb-4fdb-a0f1-fa383a3cb946",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552104008898,
    "parent_id": "bc6209bb-c2d1-4877-ab42-f61f46c8fb93",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Decorating a Model using SimpleDelegator"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104008893,
        "id": "05964786-67f7-40d0-8ac1-61f6aa80e03a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104008893,
        "parent_id": "e43c7bf7-88bb-4fdb-a0f1-fa383a3cb946",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Most Rails developers start by modifying their model information within the template itself:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Most Rails developers start by modifying their model information within the template itself:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104008896,
        "id": "9e418c45-e0e3-431c-8c13-9707e9594a50",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104008896,
        "parent_id": "e43c7bf7-88bb-4fdb-a0f1-fa383a3cb946",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003ch1\u003e\u003c%= \"#{ @user.first_name } #{ @user.last_name }\" %\u003e\u003c/h1\u003e\n\u003ch3\u003ejoined: \u003c%= @user.created_at.in_time_zone(current_user.timezone).strftime(\"%A, %d %b %Y %l:%M %p\") %\u003e\u003c/h3\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003ch1\u003e\u003c%= \"#{ @user.first_name } #{ @user.last_name }\" %\u003e\u003c/h1\u003e\n\u003ch3\u003ejoined: \u003c%= @user.created_at.in_time_zone(current_user.timezone).strftime(\"%A, %d %b %Y %l:%M %p\") %\u003e\u003c/h3\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104008897,
        "id": "6aeba3f1-8620-4019-bc80-8b8b192bfdb5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104008897,
        "parent_id": "e43c7bf7-88bb-4fdb-a0f1-fa383a3cb946",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For models with a lot of data, this can quickly become cumbersome and lead to copy-pasting logic from one template to another."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For models with a lot of data, this can quickly become cumbersome and lead to copy-pasting logic from one template to another."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104008897,
        "id": "419454de-0a9b-4387-942e-8b8c5d2be0af",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104008897,
        "parent_id": "e43c7bf7-88bb-4fdb-a0f1-fa383a3cb946",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example uses "
            ],
            [
              "SimpleDelegator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " from the stdlib."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example uses "
          },
          {
            "Text": "SimpleDelegator",
            "AttrFlags": 2
          },
          {
            "Text": " from the stdlib."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104008897,
        "id": "6a423a23-d8d4-4a47-a92e-770d8dcec6f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104008897,
        "parent_id": "e43c7bf7-88bb-4fdb-a0f1-fa383a3cb946",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All requests to a "
            ],
            [
              "SimpleDelegator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object are passed to the parent object by default. You can override any method with presentation logic, or you can add new methods that are specific to this view."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All requests to a "
          },
          {
            "Text": "SimpleDelegator",
            "AttrFlags": 2
          },
          {
            "Text": " object are passed to the parent object by default. You can override any method with presentation logic, or you can add new methods that are specific to this view."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104008897,
        "id": "7948d4c3-6f7a-4430-aabf-b5147ec6c69b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104008897,
        "parent_id": "e43c7bf7-88bb-4fdb-a0f1-fa383a3cb946",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "SimpleDelegator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " provides two methods: "
            ],
            [
              "__setobj__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to set what object is being delegated to, and "
            ],
            [
              "__getobj__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to get that object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "SimpleDelegator",
            "AttrFlags": 2
          },
          {
            "Text": " provides two methods: "
          },
          {
            "Text": "__setobj__",
            "AttrFlags": 2
          },
          {
            "Text": " to set what object is being delegated to, and "
          },
          {
            "Text": "__getobj__",
            "AttrFlags": 2
          },
          {
            "Text": " to get that object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104008897,
        "id": "cb74bd2e-280a-4e13-a9c7-c0757fbfa01e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104008897,
        "parent_id": "e43c7bf7-88bb-4fdb-a0f1-fa383a3cb946",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class UserDecorator \u003c SimpleDelegator\n  attr_reader :view\n  def initialize(user, view)\n    __setobj__ @user\n    @view = view\n  end\n\n  # new methods can call methods on the parent implicitly\n  def full_name\n    \"#{ first_name } #{ last_name }\"\n  end\n\n  # however, if you're overriding an existing method you need\n  # to use __getobj__\n  def created_at\n    Time.use_zone(view.current_user.timezone) do\n      __getobj__.created_at.strftime(\"%A, %d %b %Y %l:%M %p\")\n    end\n  end\nend"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class UserDecorator \u003c SimpleDelegator\n  attr_reader :view\n  def initialize(user, view)\n    __setobj__ @user\n    @view = view\n  end\n\n  # new methods can call methods on the parent implicitly\n  def full_name\n    \"#{ first_name } #{ last_name }\"\n  end\n\n  # however, if you're overriding an existing method you need\n  # to use __getobj__\n  def created_at\n    Time.use_zone(view.current_user.timezone) do\n      __getobj__.created_at.strftime(\"%A, %d %b %Y %l:%M %p\")\n    end\n  end\nend",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104008898,
        "id": "0481e80d-69ca-4c18-9795-77f28782f476",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104008898,
        "parent_id": "e43c7bf7-88bb-4fdb-a0f1-fa383a3cb946",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Some decorators rely on magic to wire-up this behavior, but you can make it more obvious where the presentation logic is coming from by initializing the object on the page."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Some decorators rely on magic to wire-up this behavior, but you can make it more obvious where the presentation logic is coming from by initializing the object on the page."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104008898,
        "id": "e26253d8-943d-4335-a017-5525450a21a6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104008898,
        "parent_id": "e43c7bf7-88bb-4fdb-a0f1-fa383a3cb946",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003c% user = UserDecorator.new(@user, self) %\u003e\n\u003ch1\u003e\u003c%= user.full_name %\u003e\u003c/h1\u003e\n\u003ch3\u003ejoined: \u003c%= user.created_at %\u003e\u003c/h3\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003c% user = UserDecorator.new(@user, self) %\u003e\n\u003ch1\u003e\u003c%= user.full_name %\u003e\u003c/h1\u003e\n\u003ch3\u003ejoined: \u003c%= user.created_at %\u003e\u003c/h3\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104008898,
        "id": "e00b2389-5a45-46c8-b7cf-02847a570d39",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104008898,
        "parent_id": "e43c7bf7-88bb-4fdb-a0f1-fa383a3cb946",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By passing a reference to the view object into the decorator, we can still access all of the rest of the view helpers while building the presentation logic without having to include it."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By passing a reference to the view object into the decorator, we can still access all of the rest of the view helpers while building the presentation logic without having to include it."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552104008898,
        "id": "0b486cb2-64ad-4fa0-9ab4-b05a85dcd185",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552104008898,
        "parent_id": "e43c7bf7-88bb-4fdb-a0f1-fa383a3cb946",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now the view template is only concerned with inserting data into the page, and it is much more clear."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now the view template is only concerned with inserting data into the page, and it is much more clear."
          }
        ]
      }
    ],
    "title": "Decorating a Model using SimpleDelegator",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}