{
  "ID": "1c88ba8b-7e29-42c0-8c8f-d70015c5d98b",
  "Root": {
    "alive": true,
    "content": [
      "05781e33-1059-40fe-b232-7eaaaec19f93",
      "6145f7c5-9f14-4ee0-abcb-bc1703e5ca34"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552103548808,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1c88ba8b-7e29-42c0-8c8f-d70015c5d98b",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552103548808,
    "parent_id": "4098c5a3-7cb9-4e9e-abc9-d527e18994fc",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Database Calls"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552103548805,
        "id": "05781e33-1059-40fe-b232-7eaaaec19f93",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552103548805,
        "parent_id": "1c88ba8b-7e29-42c0-8c8f-d70015c5d98b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Mongoid tries to have similar syntax to "
            ],
            [
              "ActiveRecord",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when it can. It supports these calls (and many more)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Mongoid tries to have similar syntax to "
          },
          {
            "Text": "ActiveRecord",
            "AttrFlags": 2
          },
          {
            "Text": " when it can. It supports these calls (and many more)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552103548807,
        "id": "6145f7c5-9f14-4ee0-abcb-bc1703e5ca34",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552103548807,
        "parent_id": "1c88ba8b-7e29-42c0-8c8f-d70015c5d98b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "User.first #Gets first user from the database\n\nUser.count #Gets the count of all users from the database\n\nUser.find(params[:id]) #Returns the user with the id found in params[:id]\n\nUser.where(name: \"Bob\") #Returns a Mongoid::Criteria object that can be chained\n                        #with other queries (like another 'where' or an 'any_in')\n                        #Does NOT return any objects from database\n\nUser.where(name: \"Bob\").entries #Returns all objects with name \"Bob\" from database\n\nUser.where(:name.in =\u003e ['Bob', 'Alice']).entries #Returns all objects with name \"Bob\" or \"Alice\" from database\n\nUser.any_in(name: [\"Bob\", \"Joe\"]).first #Returns the first object with name \"Bob\" or \"Joe\"\nUser.where(:name =\u003e 'Bob').exists? # will return true if there is one or more users with name bob"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "User.first #Gets first user from the database\n\nUser.count #Gets the count of all users from the database\n\nUser.find(params[:id]) #Returns the user with the id found in params[:id]\n\nUser.where(name: \"Bob\") #Returns a Mongoid::Criteria object that can be chained\n                        #with other queries (like another 'where' or an 'any_in')\n                        #Does NOT return any objects from database\n\nUser.where(name: \"Bob\").entries #Returns all objects with name \"Bob\" from database\n\nUser.where(:name.in =\u003e ['Bob', 'Alice']).entries #Returns all objects with name \"Bob\" or \"Alice\" from database\n\nUser.any_in(name: [\"Bob\", \"Joe\"]).first #Returns the first object with name \"Bob\" or \"Joe\"\nUser.where(:name =\u003e 'Bob').exists? # will return true if there is one or more users with name bob",
        "code_language": "Plain Text"
      }
    ],
    "title": "Database Calls",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}