{
  "ID": "6dee2911-d58c-4f89-a2e9-10a340bc3bd1",
  "Root": {
    "alive": true,
    "content": [
      "77bc7d1c-12d8-4453-8a40-65ed767f3b05",
      "4386733c-7a0c-4ffa-b3ba-8e32bc1a9c85",
      "7efffd73-290e-4425-a08c-905ef2ebdc4e",
      "12aeb76d-402c-4c3f-9df1-99a98ac67180"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552103132099,
    "id": "6dee2911-d58c-4f89-a2e9-10a340bc3bd1",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552103132099,
    "parent_id": "ddb17fca-5d23-4381-ab56-9caefe8888c7",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "070 Includes"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552103132098,
        "id": "77bc7d1c-12d8-4453-8a40-65ed767f3b05",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552103132098,
        "parent_id": "6dee2911-d58c-4f89-a2e9-10a340bc3bd1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "ActiveRecord with "
            ],
            [
              "includes",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " ensures that all of the specified associations are loaded using the minimum possible number of queries. So when querying a table for data with an associated table, both tables are loaded into memory."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "ActiveRecord with "
          },
          {
            "Text": "includes",
            "AttrFlags": 2
          },
          {
            "Text": " ensures that all of the specified associations are loaded using the minimum possible number of queries. So when querying a table for data with an associated table, both tables are loaded into memory."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552103132099,
        "id": "4386733c-7a0c-4ffa-b3ba-8e32bc1a9c85",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552103132099,
        "parent_id": "6dee2911-d58c-4f89-a2e9-10a340bc3bd1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@authors = Author.includes(:books).where(books: { bestseller: true } )\n\n# this will print  results without additional db hitting\n@authors.each do |author| \n  author.books.each do |book|\n    puts book.title\n  end\nend"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@authors = Author.includes(:books).where(books: { bestseller: true } )\n\n# this will print  results without additional db hitting\n@authors.each do |author| \n  author.books.each do |book|\n    puts book.title\n  end\nend",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552103132099,
        "id": "7efffd73-290e-4425-a08c-905ef2ebdc4e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552103132099,
        "parent_id": "6dee2911-d58c-4f89-a2e9-10a340bc3bd1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Author.joins(:books).where(books: { bestseller: true } )",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will load only "
            ],
            [
              "authors",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " with conditions into memory "
            ],
            [
              "without loading books",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". Use "
            ],
            [
              "joins",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when additional information about nested associations isn’t required."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Author.joins(:books).where(books: { bestseller: true } )",
            "AttrFlags": 2
          },
          {
            "Text": " will load only "
          },
          {
            "Text": "authors",
            "AttrFlags": 1
          },
          {
            "Text": " with conditions into memory "
          },
          {
            "Text": "without loading books",
            "AttrFlags": 1
          },
          {
            "Text": ". Use "
          },
          {
            "Text": "joins",
            "AttrFlags": 2
          },
          {
            "Text": " when additional information about nested associations isn’t required."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552103132099,
        "id": "12aeb76d-402c-4c3f-9df1-99a98ac67180",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552103132099,
        "parent_id": "6dee2911-d58c-4f89-a2e9-10a340bc3bd1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@authors = Author.joins(:books).where(books: { bestseller: true } )\n\n# this will print results without additional queries\n@authors.each { |author| puts author.name }\n\n# this will print results with additional db queries\n@authors.each do |author| \n  author.books.each do |book|\n    puts book.title\n  end\nend"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@authors = Author.joins(:books).where(books: { bestseller: true } )\n\n# this will print results without additional queries\n@authors.each { |author| puts author.name }\n\n# this will print results with additional db queries\n@authors.each do |author| \n  author.books.each do |book|\n    puts book.title\n  end\nend",
        "code_language": "Plain Text"
      }
    ],
    "title": "070 Includes"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}