{
  "ID": "b0d5288b-f850-4384-9a2b-9d2706593703",
  "Root": {
    "alive": true,
    "content": [
      "3ca62264-5e18-4c62-a294-61a95a057861",
      "ae08da8a-5d98-4746-a1a6-d4012458ef42",
      "0b924e15-c2f4-40c2-9810-6e1fcd0782f5",
      "2c95d74b-9bd6-4418-975d-810bce33c696"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550394310340,
    "id": "b0d5288b-f850-4384-9a2b-9d2706593703",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550482740000,
    "parent_id": "9aa8d1a9-074b-4599-9180-730b73cffa87",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Scrolling a UIScrollViewUITableView When Displaying the Keyboard"
        ]
      ]
    },
    "type": "page",
    "version": 6,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550394310337,
        "id": "3ca62264-5e18-4c62-a294-61a95a057861",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550394310337,
        "parent_id": "b0d5288b-f850-4384-9a2b-9d2706593703",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are few approaches available there:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are few approaches available there:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550394310340,
        "id": "ae08da8a-5d98-4746-a1a6-d4012458ef42",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550394310340,
        "parent_id": "b0d5288b-f850-4384-9a2b-9d2706593703",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can subscribe for keyboard appearance events notifications and change offset manually:"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can subscribe for keyboard appearance events notifications and change offset manually:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550394310340,
        "id": "0b924e15-c2f4-40c2-9810-6e1fcd0782f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550394310340,
        "parent_id": "b0d5288b-f850-4384-9a2b-9d2706593703",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//Swift 2.0+\noverride func viewDidLoad() {\n    super.viewDidLoad()\n\n    NSNotificationCenter.defaultCenter().addObserver(self, selector: #selector(YourVCClassName.keyboardWillShow(_:)), name: UIKeyboardWillShowNotification, object: nil)\n    NSNotificationCenter.defaultCenter().addObserver(self, selector: #selector(YourVCClassName.keyboardWillHide(_:)), name: UIKeyboardWillHideNotification, object: nil)\n}\n\nfunc keyboardWillShow(notification: NSNotification) {\n    if let userInfo = notification.userInfo {\n        if let keyboardHeight = userInfo[UIKeyboardFrameEndUserInfoKey]?.CGRectValue.size.height {\n            tableView.contentInset = UIEdgeInsetsMake(0, 0, keyboardHeight, 0)\n        }\n    }\n}\n    \nfunc keyboardWillHide(notification: NSNotification) {\n    tableView.contentInset = UIEdgeInsetsMake(0, 0, 0, 0)\n}\n\n//Objective-C\n- (void)viewDidLoad {\n\n   [super viewDidLoad];\n\n\n    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil];\n    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil];\n\n}\n\n- (void)keyboardWillShow:(NSNotification *)notification {\n\n    NSDictionary *userInfo = [notification userInfo];\n\n    if (userInfo) {\n    \n        CGRect keyboardEndFrame;\n        [[userInfo objectForKey:UIKeyboardFrameEndUserInfoKey] getValue:\u0026keyboardEndFrame];\n        tableView.contentInset = UIEdgeInsetsMake(0, 0, keyboardEndFrame.size.height, 0);\n    \n    }\n\n}\n\n- (void)keyboardWillHide:(NSNotification *)notification {\n\n    tableView.contentInset = UIEdgeInsetsMake(0, 0, 0, 0);\n\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//Swift 2.0+\noverride func viewDidLoad() {\n    super.viewDidLoad()\n\n    NSNotificationCenter.defaultCenter().addObserver(self, selector: #selector(YourVCClassName.keyboardWillShow(_:)), name: UIKeyboardWillShowNotification, object: nil)\n    NSNotificationCenter.defaultCenter().addObserver(self, selector: #selector(YourVCClassName.keyboardWillHide(_:)), name: UIKeyboardWillHideNotification, object: nil)\n}\n\nfunc keyboardWillShow(notification: NSNotification) {\n    if let userInfo = notification.userInfo {\n        if let keyboardHeight = userInfo[UIKeyboardFrameEndUserInfoKey]?.CGRectValue.size.height {\n            tableView.contentInset = UIEdgeInsetsMake(0, 0, keyboardHeight, 0)\n        }\n    }\n}\n    \nfunc keyboardWillHide(notification: NSNotification) {\n    tableView.contentInset = UIEdgeInsetsMake(0, 0, 0, 0)\n}\n\n//Objective-C\n- (void)viewDidLoad {\n\n   [super viewDidLoad];\n\n\n    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil];\n    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil];\n\n}\n\n- (void)keyboardWillShow:(NSNotification *)notification {\n\n    NSDictionary *userInfo = [notification userInfo];\n\n    if (userInfo) {\n    \n        CGRect keyboardEndFrame;\n        [[userInfo objectForKey:UIKeyboardFrameEndUserInfoKey] getValue:\u0026keyboardEndFrame];\n        tableView.contentInset = UIEdgeInsetsMake(0, 0, keyboardEndFrame.size.height, 0);\n    \n    }\n\n}\n\n- (void)keyboardWillHide:(NSNotification *)notification {\n\n    tableView.contentInset = UIEdgeInsetsMake(0, 0, 0, 0);\n\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550394310340,
        "id": "2c95d74b-9bd6-4418-975d-810bce33c696",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550394310340,
        "parent_id": "b0d5288b-f850-4384-9a2b-9d2706593703",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Or use ready-made solutions like TPKeyboardAvoidingTableView or TPKeyboardAvoidingScrollView https://github.com/michaeltyson/TPKeyboardAvoiding"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Or use ready-made solutions like TPKeyboardAvoidingTableView or TPKeyboardAvoidingScrollView https://github.com/michaeltyson/TPKeyboardAvoiding"
          }
        ]
      }
    ],
    "title": "Scrolling a UIScrollViewUITableView When Displaying the Keyboard"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}