{
  "ID": "50114349-2797-4e65-ad75-a658b8d0817d",
  "Root": {
    "alive": true,
    "content": [
      "30d2d1bd-80b4-496e-aca0-2246ae24c134",
      "9fce0e02-dbc1-41d3-8c9c-bdf4ffeb93e0",
      "c3c5dafe-7f31-4097-ac94-0634645fa760",
      "13787778-9ddd-4d48-90e4-a30b3f0e20fc",
      "95a13357-0bf1-4450-93a1-dceb5fe01bf8",
      "b9ad1c53-20fd-4dc7-90f3-3cef9f8e8756",
      "2945315f-c2ea-4269-b9e9-a9ad0cbf224b",
      "6441b5be-28ba-414d-a3f7-d18012a536ff",
      "7942d55c-ce88-4885-8d4c-20173038def4",
      "960e00cf-15e0-4e6c-923a-2cfb2a457178",
      "6606df29-9517-47ca-8742-e69cc21f6a34",
      "aca697a9-2776-4ea8-8a34-3727b27e6598"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550397812871,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "50114349-2797-4e65-ad75-a658b8d0817d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550654280000,
    "parent_id": "7f229db5-64ee-45de-a6ab-0d61f675f6ff",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Serial vs Concurrent Dispatch Queues"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397812867,
        "id": "30d2d1bd-80b4-496e-aca0-2246ae24c134",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397812867,
        "parent_id": "50114349-2797-4e65-ad75-a658b8d0817d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Swift 3",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Swift 3",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397812869,
        "id": "9fce0e02-dbc1-41d3-8c9c-bdf4ffeb93e0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397812869,
        "parent_id": "50114349-2797-4e65-ad75-a658b8d0817d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Serial Queue",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Serial Queue",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397812870,
        "id": "c3c5dafe-7f31-4097-ac94-0634645fa760",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397812870,
        "parent_id": "50114349-2797-4e65-ad75-a658b8d0817d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "func serialQueues () {\n    let serialQueue = DispatchQueue(label: \"com.example.serial\") //default queue type is a serial queue\n    let start = Date ()\n    for i in 0...3 {                                             //launch a bunch of tasks\n        serialQueue.async {                                      //run tasks on a background thread, using our serial queue\n            sleep(2)                                             //do some long task eg webservice or database lookup\n            let timeTaken = Date().timeIntervalSince(start)\n            print(\"serial long task \\(i) done! total time taken: \\(timeTaken)\")\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "func serialQueues () {\n    let serialQueue = DispatchQueue(label: \"com.example.serial\") //default queue type is a serial queue\n    let start = Date ()\n    for i in 0...3 {                                             //launch a bunch of tasks\n        serialQueue.async {                                      //run tasks on a background thread, using our serial queue\n            sleep(2)                                             //do some long task eg webservice or database lookup\n            let timeTaken = Date().timeIntervalSince(start)\n            print(\"serial long task \\(i) done! total time taken: \\(timeTaken)\")\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397812870,
        "id": "13787778-9ddd-4d48-90e4-a30b3f0e20fc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397812870,
        "parent_id": "50114349-2797-4e65-ad75-a658b8d0817d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397812870,
        "id": "95a13357-0bf1-4450-93a1-dceb5fe01bf8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397812870,
        "parent_id": "50114349-2797-4e65-ad75-a658b8d0817d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "serial long task 0 done! total time taken: 2.07241100072861\nserial long task 1 done! total time taken: 4.16347700357437\nserial long task 2 done! total time taken: 6.23209798336029\nserial long task 3 done! total time taken: 8.30682599544525"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "serial long task 0 done! total time taken: 2.07241100072861\nserial long task 1 done! total time taken: 4.16347700357437\nserial long task 2 done! total time taken: 6.23209798336029\nserial long task 3 done! total time taken: 8.30682599544525",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397812870,
        "id": "b9ad1c53-20fd-4dc7-90f3-3cef9f8e8756",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397812870,
        "parent_id": "50114349-2797-4e65-ad75-a658b8d0817d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Concurrent Queue",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Concurrent Queue",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397812870,
        "id": "2945315f-c2ea-4269-b9e9-a9ad0cbf224b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397812870,
        "parent_id": "50114349-2797-4e65-ad75-a658b8d0817d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "func concurrentQueues () {\n    let concurrentQueue = DispatchQueue(label: \"com.example.concurrent\", attributes: .concurrent) //explicitly specify the queue to be a concurrent queue\n    let start = Date ()\n    for i in 0...3 {            //launch a bunch of tasks\n        concurrentQueue.async { //run tasks on a background thread, using our concurrent queue\n            sleep(2)            //do some long task eg webservice or database lookup\n            let timeTaken = Date().timeIntervalSince(start)\n            print(\"concurrent long task \\(i) done! total time taken: \\(timeTaken)\")\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "func concurrentQueues () {\n    let concurrentQueue = DispatchQueue(label: \"com.example.concurrent\", attributes: .concurrent) //explicitly specify the queue to be a concurrent queue\n    let start = Date ()\n    for i in 0...3 {            //launch a bunch of tasks\n        concurrentQueue.async { //run tasks on a background thread, using our concurrent queue\n            sleep(2)            //do some long task eg webservice or database lookup\n            let timeTaken = Date().timeIntervalSince(start)\n            print(\"concurrent long task \\(i) done! total time taken: \\(timeTaken)\")\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397812870,
        "id": "6441b5be-28ba-414d-a3f7-d18012a536ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397812870,
        "parent_id": "50114349-2797-4e65-ad75-a658b8d0817d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397812870,
        "id": "7942d55c-ce88-4885-8d4c-20173038def4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397812870,
        "parent_id": "50114349-2797-4e65-ad75-a658b8d0817d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "concurrent long task 3 done! total time taken: 2.07092100381851\nconcurrent long task 0 done! total time taken: 2.07087397575378\nconcurrent long task 2 done! total time taken: 2.07086700201035\nconcurrent long task 1 done! total time taken: 2.07089096307755"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "concurrent long task 3 done! total time taken: 2.07092100381851\nconcurrent long task 0 done! total time taken: 2.07087397575378\nconcurrent long task 2 done! total time taken: 2.07086700201035\nconcurrent long task 1 done! total time taken: 2.07089096307755",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397812871,
        "id": "960e00cf-15e0-4e6c-923a-2cfb2a457178",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397812871,
        "parent_id": "50114349-2797-4e65-ad75-a658b8d0817d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Discussion",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Discussion",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397812871,
        "id": "6606df29-9517-47ca-8742-e69cc21f6a34",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397812871,
        "parent_id": "50114349-2797-4e65-ad75-a658b8d0817d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As we can see from the examples above, a serial queue will complete each task in the order they are submitted to the queue. Each task will wait for the previous task to finish before executing. As for the concurrent queue, each task does not wait on the others in the queue and executes as soon as possible; the advantage is that all tasks on the queue will run at the same time on separate threads, making a concurrent queue take less time than a serial queue."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As we can see from the examples above, a serial queue will complete each task in the order they are submitted to the queue. Each task will wait for the previous task to finish before executing. As for the concurrent queue, each task does not wait on the others in the queue and executes as soon as possible; the advantage is that all tasks on the queue will run at the same time on separate threads, making a concurrent queue take less time than a serial queue."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397812871,
        "id": "aca697a9-2776-4ea8-8a34-3727b27e6598",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397812871,
        "parent_id": "50114349-2797-4e65-ad75-a658b8d0817d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If order of execution of tasks is not important, always use a concurrent queue for the best efficiency."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If order of execution of tasks is not important, always use a concurrent queue for the best efficiency."
          }
        ]
      }
    ],
    "title": "Serial vs Concurrent Dispatch Queues",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}