{
  "ID": "76d0a3cc-977c-4975-b656-571843823af9",
  "Root": {
    "alive": true,
    "content": [
      "ea3a5ab9-f951-4955-83f4-0480e0d88a54",
      "765bf80d-c0a9-4e7b-a0ea-2ea4ccf405fa",
      "c163df3d-14ac-4c4b-98fb-fd612d57e05c",
      "22128c25-1c9b-4fa1-bed0-2858d8d0470b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550442528913,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "76d0a3cc-977c-4975-b656-571843823af9",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550713980000,
    "parent_id": "05ad15e6-c0d6-4e79-b95b-c4dc5f834109",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Read file from document directory in chunks"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550442528910,
        "id": "ea3a5ab9-f951-4955-83f4-0480e0d88a54",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550442528910,
        "parent_id": "76d0a3cc-977c-4975-b656-571843823af9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "I get the file path from document directory and read that file in chunks of 1024 and save (append) to NSMutableData object or you can directly write to socket."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "I get the file path from document directory and read that file in chunks of 1024 and save (append) to NSMutableData object or you can directly write to socket."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550442528912,
        "id": "765bf80d-c0a9-4e7b-a0ea-2ea4ccf405fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550442528912,
        "parent_id": "76d0a3cc-977c-4975-b656-571843823af9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// MARK: - Get file data as chunks Methode.\nfunc getFileDataInChunks() {\n    \n    let doumentDirectoryPath = NSSearchPathForDirectoriesInDomains(.documentDirectory, .userDomainMask, true)[0] as NSString\n    let filePath = doumentDirectoryPath.appendingPathComponent(\"video.mp4\")\n    \n    \n    //Check file exits at path or not.\n    if FileManager.default.fileExists(atPath: filePath) {\n        \n        let chunkSize = 1024 // divide data into 1 kb\n        \n        //Create NSMutableData object to save read data.\n        let ReadData = NSMutableData()\n        \n        do {\n            \n            //open file for reading.\n            outputFileHandle = try FileHandle(forReadingFrom: URL(fileURLWithPath: filePath))\n            \n            // get the first chunk\n            var datas = outputFileHandle?.readData(ofLength: chunkSize)\n            \n            //check next chunk is empty or not.\n            while !(datas?.isEmpty)! {\n                \n                //here I write chunk data to ReadData or you can directly write to socket.\n                ReadData.append(datas!)\n                \n                // get the next chunk\n                datas = outputFileHandle?.readData(ofLength: chunkSize)\n                \n                print(\"Running: \\(ReadData.length)\")\n            }\n            \n            //close outputFileHandle after reading data complete.\n            outputFileHandle?.closeFile()\n            \n            print(\"File reading complete\")\n            \n        }catch let error as NSError {\n            print(\"Error : \\(error.localizedDescription)\")\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// MARK: - Get file data as chunks Methode.\nfunc getFileDataInChunks() {\n    \n    let doumentDirectoryPath = NSSearchPathForDirectoriesInDomains(.documentDirectory, .userDomainMask, true)[0] as NSString\n    let filePath = doumentDirectoryPath.appendingPathComponent(\"video.mp4\")\n    \n    \n    //Check file exits at path or not.\n    if FileManager.default.fileExists(atPath: filePath) {\n        \n        let chunkSize = 1024 // divide data into 1 kb\n        \n        //Create NSMutableData object to save read data.\n        let ReadData = NSMutableData()\n        \n        do {\n            \n            //open file for reading.\n            outputFileHandle = try FileHandle(forReadingFrom: URL(fileURLWithPath: filePath))\n            \n            // get the first chunk\n            var datas = outputFileHandle?.readData(ofLength: chunkSize)\n            \n            //check next chunk is empty or not.\n            while !(datas?.isEmpty)! {\n                \n                //here I write chunk data to ReadData or you can directly write to socket.\n                ReadData.append(datas!)\n                \n                // get the next chunk\n                datas = outputFileHandle?.readData(ofLength: chunkSize)\n                \n                print(\"Running: \\(ReadData.length)\")\n            }\n            \n            //close outputFileHandle after reading data complete.\n            outputFileHandle?.closeFile()\n            \n            print(\"File reading complete\")\n            \n        }catch let error as NSError {\n            print(\"Error : \\(error.localizedDescription)\")\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550442528913,
        "id": "c163df3d-14ac-4c4b-98fb-fd612d57e05c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550442528913,
        "parent_id": "76d0a3cc-977c-4975-b656-571843823af9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "After file reading complete you will get file Data in ReadData variable Here outputFileHandle is a object of FileHandle"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "After file reading complete you will get file Data in ReadData variable Here outputFileHandle is a object of FileHandle"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550442528913,
        "id": "22128c25-1c9b-4fa1-bed0-2858d8d0470b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550442528913,
        "parent_id": "76d0a3cc-977c-4975-b656-571843823af9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var outputFileHandle:FileHandle?"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var outputFileHandle:FileHandle?",
        "code_language": "Plain Text"
      }
    ],
    "title": "Read file from document directory in chunks",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}