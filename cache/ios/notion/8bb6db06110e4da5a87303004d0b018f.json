{
  "ID": "8bb6db06-110e-4da5-a873-03004d0b018f",
  "Root": {
    "alive": true,
    "content": [
      "e957ad9e-4ca4-4adb-92c2-b03f3ca2852f",
      "b22f27e3-7ae1-4644-b501-59e7617a347a",
      "82d59601-6299-44bd-9dc3-559eb75480df",
      "0c450e01-03d5-4573-b90c-b765276db01d",
      "e3a9fb76-e14a-4bfd-8643-0da5ebea80cc",
      "6d317316-1995-4b16-8b0e-c50d2f5ebc9a",
      "99d88a11-b275-4f00-9c2b-6a837c8949d5",
      "0fa31be6-e6ed-44d2-a632-38845b93a2ea",
      "9ff45a32-6755-4cd1-a2c5-6463d7bb488a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550439720000,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "8bb6db06-110e-4da5-a873-03004d0b018f",
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550440560000,
    "parent_id": "3626edc1-bd04-4431-afdd-c89648a7050f",
    "parent_table": "block",
    "permissions": [
      {
        "role": "editor",
        "type": "user_permission",
        "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
      }
    ],
    "properties": {
      "title": [
        [
          "Cut a UIImage into a circle"
        ]
      ]
    },
    "type": "page",
    "version": 47,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550439776932,
        "id": "e957ad9e-4ca4-4adb-92c2-b03f3ca2852f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550440200000,
        "parent_id": "8bb6db06-110e-4da5-a873-03004d0b018f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Objective-C version"
            ]
          ]
        },
        "type": "sub_header",
        "version": 33,
        "inline_content": [
          {
            "Text": "Objective-C version"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550439776935,
        "id": "b22f27e3-7ae1-4644-b501-59e7617a347a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550440260000,
        "parent_id": "8bb6db06-110e-4da5-a873-03004d0b018f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The code in the "
            ],
            [
              "viewDidLoad ",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "or "
            ],
            [
              "loadView",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 16,
        "inline_content": [
          {
            "Text": "The code in the "
          },
          {
            "Text": "viewDidLoad ",
            "AttrFlags": 2
          },
          {
            "Text": "or "
          },
          {
            "Text": "loadView",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550439776935,
        "id": "82d59601-6299-44bd-9dc3-559eb75480df",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550440140000,
        "parent_id": "8bb6db06-110e-4da5-a873-03004d0b018f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Objective-C"
            ]
          ],
          "title": [
            [
              "import #include \u003cmath.h\u003e\n\n- (void)loadView\n{\n[super loadView];\nUIImageView *imageView=[[UIImageView alloc]initWithFrame:CGRectMake(0, 50, 320, 320)];\n[self.view addSubview:imageView];\nUIImage *image=[UIImage imageNamed:@\"Dubai-Photos-Images-Travel-Tourist-Images-Pictures-800x600.jpg\"];\nimageView.image=[self circularScaleAndCropImage:[UIImage imageNamed:@\"Dubai-Photos-Images-Travel-Tourist-Images-Pictures-800x600.jpg\"] frame:CGRectMake(0, 0, 320, 320)];\n}"
            ]
          ]
        },
        "type": "code",
        "version": 11,
        "code": "import #include \u003cmath.h\u003e\n\n- (void)loadView\n{\n[super loadView];\nUIImageView *imageView=[[UIImageView alloc]initWithFrame:CGRectMake(0, 50, 320, 320)];\n[self.view addSubview:imageView];\nUIImage *image=[UIImage imageNamed:@\"Dubai-Photos-Images-Travel-Tourist-Images-Pictures-800x600.jpg\"];\nimageView.image=[self circularScaleAndCropImage:[UIImage imageNamed:@\"Dubai-Photos-Images-Travel-Tourist-Images-Pictures-800x600.jpg\"] frame:CGRectMake(0, 0, 320, 320)];\n}",
        "code_language": "Objective-C"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550439776935,
        "id": "0c450e01-03d5-4573-b90c-b765276db01d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550440140000,
        "parent_id": "8bb6db06-110e-4da5-a873-03004d0b018f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finally the function which does the heavy lifting "
            ],
            [
              "circularScaleAndCropImage",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is as defined below"
            ]
          ]
        },
        "type": "text",
        "version": 7,
        "inline_content": [
          {
            "Text": "Finally the function which does the heavy lifting "
          },
          {
            "Text": "circularScaleAndCropImage",
            "AttrFlags": 2
          },
          {
            "Text": " is as defined below"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550439776935,
        "id": "e3a9fb76-e14a-4bfd-8643-0da5ebea80cc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550440140000,
        "parent_id": "8bb6db06-110e-4da5-a873-03004d0b018f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Objective-C"
            ]
          ],
          "title": [
            [
              "- (UIImage*)circularScaleAndCropImage:(UIImage*)image frame:(CGRect)frame {\n    // This function returns a newImage, based on image, that has been:\n    // - scaled to fit in (CGRect) rect\n    // - and cropped within a circle of radius: rectWidth/2\n    \n    // Create the bitmap graphics context\n    UIGraphicsBeginImageContextWithOptions(CGSizeMake(frame.size.width, frame.size.height), NO, 0.0);\n    CGContextRef context = UIGraphicsGetCurrentContext();\n    \n    // Get the width and heights\n    CGFloat imageWidth = image.size.width;\n    CGFloat imageHeight = image.size.height;\n    CGFloat rectWidth = frame.size.width;\n    CGFloat rectHeight = frame.size.height;\n    \n    // Calculate the scale factor\n    CGFloat scaleFactorX = rectWidth/imageWidth;\n    CGFloat scaleFactorY = rectHeight/imageHeight;\n    \n    // Calculate the centre of the circle\n    CGFloat imageCentreX = rectWidth/2;\n    CGFloat imageCentreY = rectHeight/2;\n    \n    // Create and CLIP to a CIRCULAR Path\n    // (This could be replaced with any closed path if you want a different shaped clip)\n    CGFloat radius = rectWidth/2;\n    CGContextBeginPath (context);\n    CGContextAddArc (context, imageCentreX, imageCentreY, radius, 0, 2*M_PI, 0);\n    CGContextClosePath (context);\n    CGContextClip (context);\n    \n    // Set the SCALE factor for the graphics context\n    // All future draw calls will be scaled by this factor\n    CGContextScaleCTM (context, scaleFactorX, scaleFactorY);\n    \n    // Draw the IMAGE\n    CGRect myRect = CGRectMake(0, 0, imageWidth, imageHeight);\n    [image drawInRect:myRect];\n    \n    UIImage *newImage = UIGraphicsGetImageFromCurrentImageContext();\n    UIGraphicsEndImageContext();\n    \n    return newImage;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 14,
        "code": "- (UIImage*)circularScaleAndCropImage:(UIImage*)image frame:(CGRect)frame {\n    // This function returns a newImage, based on image, that has been:\n    // - scaled to fit in (CGRect) rect\n    // - and cropped within a circle of radius: rectWidth/2\n    \n    // Create the bitmap graphics context\n    UIGraphicsBeginImageContextWithOptions(CGSizeMake(frame.size.width, frame.size.height), NO, 0.0);\n    CGContextRef context = UIGraphicsGetCurrentContext();\n    \n    // Get the width and heights\n    CGFloat imageWidth = image.size.width;\n    CGFloat imageHeight = image.size.height;\n    CGFloat rectWidth = frame.size.width;\n    CGFloat rectHeight = frame.size.height;\n    \n    // Calculate the scale factor\n    CGFloat scaleFactorX = rectWidth/imageWidth;\n    CGFloat scaleFactorY = rectHeight/imageHeight;\n    \n    // Calculate the centre of the circle\n    CGFloat imageCentreX = rectWidth/2;\n    CGFloat imageCentreY = rectHeight/2;\n    \n    // Create and CLIP to a CIRCULAR Path\n    // (This could be replaced with any closed path if you want a different shaped clip)\n    CGFloat radius = rectWidth/2;\n    CGContextBeginPath (context);\n    CGContextAddArc (context, imageCentreX, imageCentreY, radius, 0, 2*M_PI, 0);\n    CGContextClosePath (context);\n    CGContextClip (context);\n    \n    // Set the SCALE factor for the graphics context\n    // All future draw calls will be scaled by this factor\n    CGContextScaleCTM (context, scaleFactorX, scaleFactorY);\n    \n    // Draw the IMAGE\n    CGRect myRect = CGRectMake(0, 0, imageWidth, imageHeight);\n    [image drawInRect:myRect];\n    \n    UIImage *newImage = UIGraphicsGetImageFromCurrentImageContext();\n    UIGraphicsEndImageContext();\n    \n    return newImage;\n}",
        "code_language": "Objective-C"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550439778021,
        "id": "6d317316-1995-4b16-8b0e-c50d2f5ebc9a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550440200000,
        "parent_id": "8bb6db06-110e-4da5-a873-03004d0b018f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "SWIFT 3 Example"
            ]
          ]
        },
        "type": "sub_header",
        "version": 19,
        "inline_content": [
          {
            "Text": "SWIFT 3 Example"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550439778018,
        "id": "99d88a11-b275-4f00-9c2b-6a837c8949d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550440260000,
        "parent_id": "8bb6db06-110e-4da5-a873-03004d0b018f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Swift"
            ]
          ],
          "title": [
            [
              "override func viewDidLoad() {\n       super.viewDidLoad()\n       // Do any additional setup after loading the view, typically from a nib.\n       let imageView = UIImageView(frame: CGRect(x: CGFloat(0), y: CGFloat(50), width: CGFloat(320), height: CGFloat(320)))\n       view.addSubview(imageView)\n       let image = UIImage(named: \"Dubai-Photos-Images-Travel-Tourist-Images-Pictures-800x600.jpg\")\n       imageView.image = circularScaleAndCropImage(UIImage(named: \"Dubai-Photos-Images-Travel-Tourist-Images-Pictures-800x600.jpg\")!, frame: CGRect(x: CGFloat(0), y: CGFloat(0), width: CGFloat(100), height: CGFloat(100)))\n   }"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "override func viewDidLoad() {\n       super.viewDidLoad()\n       // Do any additional setup after loading the view, typically from a nib.\n       let imageView = UIImageView(frame: CGRect(x: CGFloat(0), y: CGFloat(50), width: CGFloat(320), height: CGFloat(320)))\n       view.addSubview(imageView)\n       let image = UIImage(named: \"Dubai-Photos-Images-Travel-Tourist-Images-Pictures-800x600.jpg\")\n       imageView.image = circularScaleAndCropImage(UIImage(named: \"Dubai-Photos-Images-Travel-Tourist-Images-Pictures-800x600.jpg\")!, frame: CGRect(x: CGFloat(0), y: CGFloat(0), width: CGFloat(100), height: CGFloat(100)))\n   }",
        "code_language": "Swift"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550439778020,
        "id": "0fa31be6-e6ed-44d2-a632-38845b93a2ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550440200000,
        "parent_id": "8bb6db06-110e-4da5-a873-03004d0b018f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finally the function which does the heavy lifting circularScaleAndCropImage is as defined below"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "Finally the function which does the heavy lifting circularScaleAndCropImage is as defined below"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550439778021,
        "id": "9ff45a32-6755-4cd1-a2c5-6463d7bb488a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550440260000,
        "parent_id": "8bb6db06-110e-4da5-a873-03004d0b018f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Swift"
            ]
          ],
          "title": [
            [
              "func circularScaleAndCropImage(_ image: UIImage, frame: CGRect) -\u003e UIImage{\n        // This function returns a newImage, based on image, that has been:\n        // - scaled to fit in (CGRect) rect\n        // - and cropped within a circle of radius: rectWidth/2\n        //Create the bitmap graphics context\n        UIGraphicsBeginImageContextWithOptions(CGSize(width: CGFloat(frame.size.width), height: CGFloat(frame.size.height)), false, 0.0)\n        let context: CGContext? = UIGraphicsGetCurrentContext()\n        //Get the width and heights\n        let imageWidth: CGFloat = image.size.width\n        let imageHeight: CGFloat = image.size.height\n        let rectWidth: CGFloat = frame.size.width\n        let rectHeight: CGFloat = frame.size.height\n        //Calculate the scale factor\n        let scaleFactorX: CGFloat = rectWidth / imageWidth\n        let scaleFactorY: CGFloat = rectHeight / imageHeight\n        //Calculate the centre of the circle\n        let imageCentreX: CGFloat = rectWidth / 2\n        let imageCentreY: CGFloat = rectHeight / 2\n        // Create and CLIP to a CIRCULAR Path\n        // (This could be replaced with any closed path if you want a different shaped clip)\n        let radius: CGFloat = rectWidth / 2\n        context?.beginPath()\n        context?.addArc(center: CGPoint(x: imageCentreX, y: imageCentreY), radius: radius, startAngle: CGFloat(0), endAngle: CGFloat(2 * Float.pi), clockwise: false)\n        context?.closePath()\n        context?.clip()\n        //Set the SCALE factor for the graphics context\n        //All future draw calls will be scaled by this factor\n        context?.scaleBy(x: scaleFactorX, y: scaleFactorY)\n        // Draw the IMAGE\n        let myRect = CGRect(x: CGFloat(0), y: CGFloat(0), width: imageWidth, height: imageHeight)\n        image.draw(in: myRect)\n        let newImage: UIImage? = UIGraphicsGetImageFromCurrentImageContext()\n        UIGraphicsEndImageContext()\n        return newImage!\n    }"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "func circularScaleAndCropImage(_ image: UIImage, frame: CGRect) -\u003e UIImage{\n        // This function returns a newImage, based on image, that has been:\n        // - scaled to fit in (CGRect) rect\n        // - and cropped within a circle of radius: rectWidth/2\n        //Create the bitmap graphics context\n        UIGraphicsBeginImageContextWithOptions(CGSize(width: CGFloat(frame.size.width), height: CGFloat(frame.size.height)), false, 0.0)\n        let context: CGContext? = UIGraphicsGetCurrentContext()\n        //Get the width and heights\n        let imageWidth: CGFloat = image.size.width\n        let imageHeight: CGFloat = image.size.height\n        let rectWidth: CGFloat = frame.size.width\n        let rectHeight: CGFloat = frame.size.height\n        //Calculate the scale factor\n        let scaleFactorX: CGFloat = rectWidth / imageWidth\n        let scaleFactorY: CGFloat = rectHeight / imageHeight\n        //Calculate the centre of the circle\n        let imageCentreX: CGFloat = rectWidth / 2\n        let imageCentreY: CGFloat = rectHeight / 2\n        // Create and CLIP to a CIRCULAR Path\n        // (This could be replaced with any closed path if you want a different shaped clip)\n        let radius: CGFloat = rectWidth / 2\n        context?.beginPath()\n        context?.addArc(center: CGPoint(x: imageCentreX, y: imageCentreY), radius: radius, startAngle: CGFloat(0), endAngle: CGFloat(2 * Float.pi), clockwise: false)\n        context?.closePath()\n        context?.clip()\n        //Set the SCALE factor for the graphics context\n        //All future draw calls will be scaled by this factor\n        context?.scaleBy(x: scaleFactorX, y: scaleFactorY)\n        // Draw the IMAGE\n        let myRect = CGRect(x: CGFloat(0), y: CGFloat(0), width: imageWidth, height: imageHeight)\n        image.draw(in: myRect)\n        let newImage: UIImage? = UIGraphicsGetImageFromCurrentImageContext()\n        UIGraphicsEndImageContext()\n        return newImage!\n    }",
        "code_language": "Swift"
      }
    ],
    "title": "Cut a UIImage into a circle",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}