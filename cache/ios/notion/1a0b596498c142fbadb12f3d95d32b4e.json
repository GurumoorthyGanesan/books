{
  "ID": "1a0b5964-98c1-42fb-adb1-2f3d95d32b4e",
  "Root": {
    "alive": true,
    "content": [
      "cefa55b5-724e-45fa-bed3-6f39321cb32f",
      "5ff037bb-385a-41fd-b1b2-3c0f14e245d7",
      "6380f4a9-7b8f-4655-abbb-82b9daef4df1",
      "69d10a54-1b2b-411f-aa0e-710b952c7d88"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550442359897,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1a0b5964-98c1-42fb-adb1-2f3d95d32b4e",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550713620000,
    "parent_id": "28e0a317-2515-4bb6-9408-4708535f868a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Custom UITextField for Filtering Input Text"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550442359895,
        "id": "cefa55b5-724e-45fa-bed3-6f39321cb32f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550442359895,
        "parent_id": "1a0b5964-98c1-42fb-adb1-2f3d95d32b4e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here is an example of custom "
            ],
            [
              "UITextField",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that takes only numerical text and discards all other."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here is an example of custom "
          },
          {
            "Text": "UITextField",
            "AttrFlags": 2
          },
          {
            "Text": " that takes only numerical text and discards all other."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550442359896,
        "id": "5ff037bb-385a-41fd-b1b2-3c0f14e245d7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550442359896,
        "parent_id": "1a0b5964-98c1-42fb-adb1-2f3d95d32b4e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "NOTE:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " For iPhone it is easy to do this using Number type keyboard, but for iPad there is no keyboard with Numbers only"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "NOTE:",
            "AttrFlags": 1
          },
          {
            "Text": " For iPhone it is easy to do this using Number type keyboard, but for iPad there is no keyboard with Numbers only"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550442359896,
        "id": "6380f4a9-7b8f-4655-abbb-82b9daef4df1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550713620000,
        "parent_id": "1a0b5964-98c1-42fb-adb1-2f3d95d32b4e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Swift"
            ]
          ],
          "title": [
            [
              "class NumberTextField: UITextField {\n    \nrequired init(coder aDecoder: NSCoder) {\n    super.init(coder: aDecoder)\n    registerForTextFieldNotifications()\n}\n\noverride init(frame: CGRect) {\n    super.init(frame: frame)\n}\n\noverride func awakeFromNib() {\n    super.awakeFromNib()\n    keyboardType = .numberPad//useful for iPhone only\n}\n\nprivate func registerForTextFieldNotifications() {\n    NotificationCenter.default.addObserver(self, selector: #selector(NumberTextField.textDidChange), name: NSNotification.Name(rawValue: \"UITextFieldTextDidChangeNotification\"), object: self)\n}\n\ndeinit {\n    NotificationCenter.default.removeObserver(self)\n}\n\nfunc textDidChange() {\n    text = filteredText()\n}\nprivate func filteredText() -\u003e String {\n    let inverseSet = CharacterSet(charactersIn:\"0123456789\").inverted\n    let components = text!.components(separatedBy: inverseSet)\n    return components.joined(separator: \"\")\n}\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "class NumberTextField: UITextField {\n    \nrequired init(coder aDecoder: NSCoder) {\n    super.init(coder: aDecoder)\n    registerForTextFieldNotifications()\n}\n\noverride init(frame: CGRect) {\n    super.init(frame: frame)\n}\n\noverride func awakeFromNib() {\n    super.awakeFromNib()\n    keyboardType = .numberPad//useful for iPhone only\n}\n\nprivate func registerForTextFieldNotifications() {\n    NotificationCenter.default.addObserver(self, selector: #selector(NumberTextField.textDidChange), name: NSNotification.Name(rawValue: \"UITextFieldTextDidChangeNotification\"), object: self)\n}\n\ndeinit {\n    NotificationCenter.default.removeObserver(self)\n}\n\nfunc textDidChange() {\n    text = filteredText()\n}\nprivate func filteredText() -\u003e String {\n    let inverseSet = CharacterSet(charactersIn:\"0123456789\").inverted\n    let components = text!.components(separatedBy: inverseSet)\n    return components.joined(separator: \"\")\n}\n}",
        "code_language": "Swift"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550442359897,
        "id": "69d10a54-1b2b-411f-aa0e-710b952c7d88",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550442359897,
        "parent_id": "1a0b5964-98c1-42fb-adb1-2f3d95d32b4e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So, wherever we want text field which would take only numbers as input text, then we can use this custom UITextField"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So, wherever we want text field which would take only numbers as input text, then we can use this custom UITextField"
          }
        ]
      }
    ],
    "title": "Custom UITextField for Filtering Input Text",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}