{
  "ID": "4301753e-0597-4e42-998d-d1654c232bad",
  "Root": {
    "alive": true,
    "content": [
      "28d55360-4d20-4554-851d-2c6b23f5342e",
      "2a7e1a1d-dc5c-4d56-9ca2-0c401b4e49ea",
      "153d019d-10f0-4674-9848-21bd54aee67e",
      "668cc15a-74ba-4a6a-a1e8-afa290e231b2",
      "7cb9197b-a6d8-44d4-8cc5-4e1fe3cb2297",
      "812af416-6b85-46e6-b154-4d211e666e12"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550394597949,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "4301753e-0597-4e42-998d-d1654c232bad",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550483340000,
    "parent_id": "c21a56d6-07e0-4613-9800-14573c1e52e2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "0Scroll to coordinate and zoom-level"
        ]
      ]
    },
    "type": "page",
    "version": 6,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550394597943,
        "id": "28d55360-4d20-4554-851d-2c6b23f5342e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550394597943,
        "parent_id": "4301753e-0597-4e42-998d-d1654c232bad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When you show a location to your users, you might want the "
            ],
            [
              "MKMapView",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to display a coordinate at a zoom-level instead of setting a region to show. This functionality is not implemented by default, so you need to extend "
            ],
            [
              "MKMapView",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with a methods that do the complex calculation from a "
            ],
            [
              "coordinate",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "zoom-level",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " to a "
            ],
            [
              "MKCoordinateRegion",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When you show a location to your users, you might want the "
          },
          {
            "Text": "MKMapView",
            "AttrFlags": 2
          },
          {
            "Text": " to display a coordinate at a zoom-level instead of setting a region to show. This functionality is not implemented by default, so you need to extend "
          },
          {
            "Text": "MKMapView",
            "AttrFlags": 2
          },
          {
            "Text": " with a methods that do the complex calculation from a "
          },
          {
            "Text": "coordinate",
            "AttrFlags": 4
          },
          {
            "Text": " and "
          },
          {
            "Text": "zoom-level",
            "AttrFlags": 4
          },
          {
            "Text": " to a "
          },
          {
            "Text": "MKCoordinateRegion",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550394597946,
        "id": "2a7e1a1d-dc5c-4d56-9ca2-0c401b4e49ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550394597946,
        "parent_id": "4301753e-0597-4e42-998d-d1654c232bad",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let MERCATOR_OFFSET = 268435456.0\nlet MERCATOR_RADIUS = 85445659.44705395\nlet DEGREES = 180.0\n\npublic extension MKMapView {\n    \n    //MARK: Map Conversion Methods\n    \n    private func longitudeToPixelSpaceX(longitude:Double)-\u003eDouble{\n        return round(MERCATOR_OFFSET + MERCATOR_RADIUS * longitude * M_PI / DEGREES)\n    }\n    \n    private func latitudeToPixelSpaceY(latitude:Double)-\u003eDouble{\n        return round(MERCATOR_OFFSET - MERCATOR_RADIUS * log((1 + sin(latitude * M_PI / DEGREES)) / (1 - sin(latitude * M_PI / DEGREES))) / 2.0)\n    }\n    \n    private func pixelSpaceXToLongitude(pixelX:Double)-\u003eDouble{\n        return ((round(pixelX) - MERCATOR_OFFSET) / MERCATOR_RADIUS) * DEGREES / M_PI\n    }\n    \n    private func pixelSpaceYToLatitude(pixelY:Double)-\u003eDouble{\n        return (M_PI / 2.0 - 2.0 * atan(exp((round(pixelY) - MERCATOR_OFFSET) / MERCATOR_RADIUS))) * DEGREES / M_PI\n    }\n    \n    private func coordinateSpanWithCenterCoordinate(centerCoordinate:CLLocationCoordinate2D, zoomLevel:Double)-\u003eMKCoordinateSpan{\n        // convert center coordiate to pixel space\n        let centerPixelX = longitudeToPixelSpaceX(longitude: centerCoordinate.longitude)\n        let centerPixelY = latitudeToPixelSpaceY(latitude: centerCoordinate.latitude)\n        print(centerCoordinate)\n        // determine the scale value from the zoom level\n        let zoomExponent:Double = 20.0 - zoomLevel\n        let zoomScale:Double = pow(2.0, zoomExponent)\n        // scale the map’s size in pixel space\n        let mapSizeInPixels = self.bounds.size\n        let scaledMapWidth = Double(mapSizeInPixels.width) * zoomScale\n        let scaledMapHeight = Double(mapSizeInPixels.height) * zoomScale\n        // figure out the position of the top-left pixel\n        let topLeftPixelX = centerPixelX - (scaledMapWidth / 2.0)\n        let topLeftPixelY = centerPixelY - (scaledMapHeight / 2.0)\n        // find delta between left and right longitudes\n        let minLng = pixelSpaceXToLongitude(pixelX: topLeftPixelX)\n        let maxLng = pixelSpaceXToLongitude(pixelX: topLeftPixelX + scaledMapWidth)\n        let longitudeDelta = maxLng - minLng\n        let minLat = pixelSpaceYToLatitude(pixelY: topLeftPixelY)\n        let maxLat = pixelSpaceYToLatitude(pixelY: topLeftPixelY + scaledMapHeight)\n        let latitudeDelta = -1.0 * (maxLat - minLat)\n        return MKCoordinateSpan(latitudeDelta: latitudeDelta, longitudeDelta: longitudeDelta)\n    }\n    \n    /**\n     Sets the center of the `MKMapView` to a `CLLocationCoordinate2D` with a custom zoom-level. There is no nee to set a region manually. :-)\n     \n     - author: Mylene Bayan (on GitHub)\n     */\n    public func setCenter(_ coordinate:CLLocationCoordinate2D, zoomLevel:Double, animated:Bool){\n        // clamp large numbers to 28\n        var zoomLevel = zoomLevel\n        zoomLevel = min(zoomLevel, 28)\n        // use the zoom level to compute the region\n        print(coordinate)\n        let span = self.coordinateSpanWithCenterCoordinate(centerCoordinate: coordinate, zoomLevel: zoomLevel)\n        let region = MKCoordinateRegionMake(coordinate, span)\n        if region.center.longitude == -180.00000000{\n            print(\"Invalid Region\")\n        }\n        else{\n            self.setRegion(region, animated: animated)\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let MERCATOR_OFFSET = 268435456.0\nlet MERCATOR_RADIUS = 85445659.44705395\nlet DEGREES = 180.0\n\npublic extension MKMapView {\n    \n    //MARK: Map Conversion Methods\n    \n    private func longitudeToPixelSpaceX(longitude:Double)-\u003eDouble{\n        return round(MERCATOR_OFFSET + MERCATOR_RADIUS * longitude * M_PI / DEGREES)\n    }\n    \n    private func latitudeToPixelSpaceY(latitude:Double)-\u003eDouble{\n        return round(MERCATOR_OFFSET - MERCATOR_RADIUS * log((1 + sin(latitude * M_PI / DEGREES)) / (1 - sin(latitude * M_PI / DEGREES))) / 2.0)\n    }\n    \n    private func pixelSpaceXToLongitude(pixelX:Double)-\u003eDouble{\n        return ((round(pixelX) - MERCATOR_OFFSET) / MERCATOR_RADIUS) * DEGREES / M_PI\n    }\n    \n    private func pixelSpaceYToLatitude(pixelY:Double)-\u003eDouble{\n        return (M_PI / 2.0 - 2.0 * atan(exp((round(pixelY) - MERCATOR_OFFSET) / MERCATOR_RADIUS))) * DEGREES / M_PI\n    }\n    \n    private func coordinateSpanWithCenterCoordinate(centerCoordinate:CLLocationCoordinate2D, zoomLevel:Double)-\u003eMKCoordinateSpan{\n        // convert center coordiate to pixel space\n        let centerPixelX = longitudeToPixelSpaceX(longitude: centerCoordinate.longitude)\n        let centerPixelY = latitudeToPixelSpaceY(latitude: centerCoordinate.latitude)\n        print(centerCoordinate)\n        // determine the scale value from the zoom level\n        let zoomExponent:Double = 20.0 - zoomLevel\n        let zoomScale:Double = pow(2.0, zoomExponent)\n        // scale the map’s size in pixel space\n        let mapSizeInPixels = self.bounds.size\n        let scaledMapWidth = Double(mapSizeInPixels.width) * zoomScale\n        let scaledMapHeight = Double(mapSizeInPixels.height) * zoomScale\n        // figure out the position of the top-left pixel\n        let topLeftPixelX = centerPixelX - (scaledMapWidth / 2.0)\n        let topLeftPixelY = centerPixelY - (scaledMapHeight / 2.0)\n        // find delta between left and right longitudes\n        let minLng = pixelSpaceXToLongitude(pixelX: topLeftPixelX)\n        let maxLng = pixelSpaceXToLongitude(pixelX: topLeftPixelX + scaledMapWidth)\n        let longitudeDelta = maxLng - minLng\n        let minLat = pixelSpaceYToLatitude(pixelY: topLeftPixelY)\n        let maxLat = pixelSpaceYToLatitude(pixelY: topLeftPixelY + scaledMapHeight)\n        let latitudeDelta = -1.0 * (maxLat - minLat)\n        return MKCoordinateSpan(latitudeDelta: latitudeDelta, longitudeDelta: longitudeDelta)\n    }\n    \n    /**\n     Sets the center of the `MKMapView` to a `CLLocationCoordinate2D` with a custom zoom-level. There is no nee to set a region manually. :-)\n     \n     - author: Mylene Bayan (on GitHub)\n     */\n    public func setCenter(_ coordinate:CLLocationCoordinate2D, zoomLevel:Double, animated:Bool){\n        // clamp large numbers to 28\n        var zoomLevel = zoomLevel\n        zoomLevel = min(zoomLevel, 28)\n        // use the zoom level to compute the region\n        print(coordinate)\n        let span = self.coordinateSpanWithCenterCoordinate(centerCoordinate: coordinate, zoomLevel: zoomLevel)\n        let region = MKCoordinateRegionMake(coordinate, span)\n        if region.center.longitude == -180.00000000{\n            print(\"Invalid Region\")\n        }\n        else{\n            self.setRegion(region, animated: animated)\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550394597948,
        "id": "153d019d-10f0-4674-9848-21bd54aee67e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550394597948,
        "parent_id": "4301753e-0597-4e42-998d-d1654c232bad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "(The original Swift 2 version by "
            ],
            [
              "Mylene Bayan",
              [
                [
                  "a",
                  "https://github.com/mnbayan"
                ]
              ]
            ],
            [
              " can be found on "
            ],
            [
              "GitHub",
              [
                [
                  "a",
                  "https://gist.github.com/mnbayan/1ccd1119720d39fce5c5"
                ]
              ]
            ],
            [
              ")"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "(The original Swift 2 version by "
          },
          {
            "Text": "Mylene Bayan",
            "Link": "https://github.com/mnbayan"
          },
          {
            "Text": " can be found on "
          },
          {
            "Text": "GitHub",
            "Link": "https://gist.github.com/mnbayan/1ccd1119720d39fce5c5"
          },
          {
            "Text": ")"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550394597948,
        "id": "668cc15a-74ba-4a6a-a1e8-afa290e231b2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550394597948,
        "parent_id": "4301753e-0597-4e42-998d-d1654c232bad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "After you implemented this "
            ],
            [
              "extension",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", you can set the center coordinate as following:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "After you implemented this "
          },
          {
            "Text": "extension",
            "AttrFlags": 2
          },
          {
            "Text": ", you can set the center coordinate as following:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550394597948,
        "id": "7cb9197b-a6d8-44d4-8cc5-4e1fe3cb2297",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550394597948,
        "parent_id": "4301753e-0597-4e42-998d-d1654c232bad",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let centerCoordinate = CLLocationCoordinate2DMake(48.136315, 11.5752901) //latitude, longitude\nmapView?.setCenter(centerCoordinate, zoomLevel: 15, animated: true)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let centerCoordinate = CLLocationCoordinate2DMake(48.136315, 11.5752901) //latitude, longitude\nmapView?.setCenter(centerCoordinate, zoomLevel: 15, animated: true)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550394597949,
        "id": "812af416-6b85-46e6-b154-4d211e666e12",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550394597949,
        "parent_id": "4301753e-0597-4e42-998d-d1654c232bad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "zoomLevel",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a "
            ],
            [
              "Double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " value, usually between "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "21",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (which is a very high zoom-level), but values up to "
            ],
            [
              "28",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are allowed."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "zoomLevel",
            "AttrFlags": 2
          },
          {
            "Text": " is a "
          },
          {
            "Text": "Double",
            "AttrFlags": 2
          },
          {
            "Text": " value, usually between "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "21",
            "AttrFlags": 2
          },
          {
            "Text": " (which is a very high zoom-level), but values up to "
          },
          {
            "Text": "28",
            "AttrFlags": 2
          },
          {
            "Text": " are allowed."
          }
        ]
      }
    ],
    "title": "0Scroll to coordinate and zoom-level",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}