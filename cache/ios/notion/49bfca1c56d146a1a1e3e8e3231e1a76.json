{
  "ID": "49bfca1c-56d1-46a1-a1e3-e8e3231e1a76",
  "Root": {
    "alive": true,
    "content": [
      "8cb3cacc-e26f-452c-b547-ea0c349aa7ea",
      "7ee2102e-fba5-4893-ae67-582cade1ef46",
      "c02aa08c-e929-4f8a-a50e-b871942a37a1",
      "9697c242-cdd4-4331-b94e-9f2016d6351e",
      "d1549d33-b324-48c9-9114-fd9542a0d729",
      "4a91e983-3c96-4572-8fe0-00c485d2aeaf",
      "72631110-d240-4d54-b6ab-05cc3cd2df10"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550396959258,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "49bfca1c-56d1-46a1-a1e3-e8e3231e1a76",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550653620000,
    "parent_id": "31ec28e4-4764-4c70-9411-216e1e5b70dc",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Testing push notifications"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396959254,
        "id": "8cb3cacc-e26f-452c-b547-ea0c349aa7ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396959254,
        "parent_id": "49bfca1c-56d1-46a1-a1e3-e8e3231e1a76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is always a good practice to test how push notifications work even before you have your server side ready for them, just to make sure that everything is set up correctly on your side. It is quite easy to send yourself a push notification using a following PHP script."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is always a good practice to test how push notifications work even before you have your server side ready for them, just to make sure that everything is set up correctly on your side. It is quite easy to send yourself a push notification using a following PHP script."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396959257,
        "id": "7ee2102e-fba5-4893-ae67-582cade1ef46",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396959257,
        "parent_id": "49bfca1c-56d1-46a1-a1e3-e8e3231e1a76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Save the script as a file (send_push.php for example) in the same folder as your certificate (development or production)"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Save the script as a file (send_push.php for example) in the same folder as your certificate (development or production)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396959257,
        "id": "c02aa08c-e929-4f8a-a50e-b871942a37a1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396959257,
        "parent_id": "49bfca1c-56d1-46a1-a1e3-e8e3231e1a76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Edit it to put your device token, password from the certificate"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Edit it to put your device token, password from the certificate"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396959257,
        "id": "9697c242-cdd4-4331-b94e-9f2016d6351e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396959257,
        "parent_id": "49bfca1c-56d1-46a1-a1e3-e8e3231e1a76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Choose the correct path for opening a connection, dev_path or prod_path (this is where ‘Open a connection to the APNS server’ happens in the script)"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Choose the correct path for opening a connection, dev_path or prod_path (this is where ‘Open a connection to the APNS server’ happens in the script)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396959257,
        "id": "d1549d33-b324-48c9-9114-fd9542a0d729",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396959257,
        "parent_id": "49bfca1c-56d1-46a1-a1e3-e8e3231e1a76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "cd to the folder in Terminal and run command ‘php send_push’"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "cd to the folder in Terminal and run command ‘php send_push’"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396959258,
        "id": "4a91e983-3c96-4572-8fe0-00c485d2aeaf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396959258,
        "parent_id": "49bfca1c-56d1-46a1-a1e3-e8e3231e1a76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Receive the notification on your device"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Receive the notification on your device"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396959258,
        "id": "72631110-d240-4d54-b6ab-05cc3cd2df10",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396959258,
        "parent_id": "49bfca1c-56d1-46a1-a1e3-e8e3231e1a76",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003c?php\n\n// Put your device token here (without spaces):   \n$deviceToken = '20128697f872d7d39e48c4a61f50cb11d77789b39e6fc6b4cd7ec80582ed5229';\n// Put your final pem cert name here. it is supposed to be in the same folder as this script\n$cert_name = 'final_cert.pem';\n// Put your private key's passphrase here:\n$passphrase = '1234';\n\n// sample point\n$alert = 'Hello world!';\n$event = 'new_incoming_message';\n    \n// You can choose either of the paths, depending on what kind of certificate you are using\n$dev_path = 'ssl://gateway.sandbox.push.apple.com:2195';\n$prod_path = 'ssl://gateway.push.apple.com:2195';\n    \n////////////////////////////////////////////////////////////////////////////////\n\n$ctx = stream_context_create();\nstream_context_set_option($ctx, 'ssl', 'local_cert', $cert_name);\nstream_context_set_option($ctx, 'ssl', 'passphrase', $passphrase);\n\n// Open a connection to the APNS server\n$fp = stream_socket_client(\n    $dev_path, $err,\n    $errstr, 60, STREAM_CLIENT_CONNECT|STREAM_CLIENT_PERSISTENT, $ctx);\n\nif (!$fp)\n    exit(\"Failed to connect: $err $errstr\" . PHP_EOL);\n\necho 'Connected to APNS' . PHP_EOL;\n\n// Create the payload body\n// it should be as short as possible\n// if the notification doesnt get delivered that is most likely\n// because the generated message is too long\n$body['aps'] = array(\n                     'alert' =\u003e $alert,\n                     'sound' =\u003e 'default',\n                     'event' =\u003e $event\n                     );\n\n// Encode the payload as JSON\n$payload = json_encode($body);\n\n// Build the binary notification\n$msg = chr(0) . pack('n', 32) . pack('H*', $deviceToken) . pack('n', strlen($payload)) . $payload;\n\n// Send it to the server\n$result = fwrite($fp, $msg, strlen($msg));\n\nif (!$result)\n    echo 'Message not delivered' . PHP_EOL;\nelse\n    echo 'Message successfully delivered' . PHP_EOL;\n\n// Close the connection to the server\nfclose($fp);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003c?php\n\n// Put your device token here (without spaces):   \n$deviceToken = '20128697f872d7d39e48c4a61f50cb11d77789b39e6fc6b4cd7ec80582ed5229';\n// Put your final pem cert name here. it is supposed to be in the same folder as this script\n$cert_name = 'final_cert.pem';\n// Put your private key's passphrase here:\n$passphrase = '1234';\n\n// sample point\n$alert = 'Hello world!';\n$event = 'new_incoming_message';\n    \n// You can choose either of the paths, depending on what kind of certificate you are using\n$dev_path = 'ssl://gateway.sandbox.push.apple.com:2195';\n$prod_path = 'ssl://gateway.push.apple.com:2195';\n    \n////////////////////////////////////////////////////////////////////////////////\n\n$ctx = stream_context_create();\nstream_context_set_option($ctx, 'ssl', 'local_cert', $cert_name);\nstream_context_set_option($ctx, 'ssl', 'passphrase', $passphrase);\n\n// Open a connection to the APNS server\n$fp = stream_socket_client(\n    $dev_path, $err,\n    $errstr, 60, STREAM_CLIENT_CONNECT|STREAM_CLIENT_PERSISTENT, $ctx);\n\nif (!$fp)\n    exit(\"Failed to connect: $err $errstr\" . PHP_EOL);\n\necho 'Connected to APNS' . PHP_EOL;\n\n// Create the payload body\n// it should be as short as possible\n// if the notification doesnt get delivered that is most likely\n// because the generated message is too long\n$body['aps'] = array(\n                     'alert' =\u003e $alert,\n                     'sound' =\u003e 'default',\n                     'event' =\u003e $event\n                     );\n\n// Encode the payload as JSON\n$payload = json_encode($body);\n\n// Build the binary notification\n$msg = chr(0) . pack('n', 32) . pack('H*', $deviceToken) . pack('n', strlen($payload)) . $payload;\n\n// Send it to the server\n$result = fwrite($fp, $msg, strlen($msg));\n\nif (!$result)\n    echo 'Message not delivered' . PHP_EOL;\nelse\n    echo 'Message successfully delivered' . PHP_EOL;\n\n// Close the connection to the server\nfclose($fp);",
        "code_language": "Plain Text"
      }
    ],
    "title": "Testing push notifications",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}