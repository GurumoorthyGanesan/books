{
  "ID": "20babbff-6b75-4ffa-8fad-2d3f36fce536",
  "Root": {
    "alive": true,
    "content": [
      "fbcbc251-b226-47c3-9daa-f1b1d2da7b18",
      "01786e87-e105-4e74-ae22-09f9175aabbf"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550397029117,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "20babbff-6b75-4ffa-8fad-2d3f36fce536",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550653500000,
    "parent_id": "daadaa42-7b59-4a17-b3af-0310c254d2e5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Set to tuples to avoid code repetition"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397029115,
        "id": "fbcbc251-b226-47c3-9daa-f1b1d2da7b18",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397029115,
        "parent_id": "20babbff-6b75-4ffa-8fad-2d3f36fce536",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Avoid code repetition in constructors by setting a tuple of variables with a one liner:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Avoid code repetition in constructors by setting a tuple of variables with a one liner:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397029117,
        "id": "01786e87-e105-4e74-ae22-09f9175aabbf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550653500000,
        "parent_id": "20babbff-6b75-4ffa-8fad-2d3f36fce536",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Swift"
            ]
          ],
          "title": [
            [
              "class Contact: UIView\n{\n    private var message: UILabel\n    private var phone: UITextView\n    \n    required init?(coder aDecoder: NSCoder) {\n        (message, phone) = self.dynamicType.setUp()\n        super.init(coder: aDecoder)\n    }\n    \n    override func awakeFromNib() {\n        (message, phone) = self.dynamicType.setUp()\n        super.awakeFromNib()\n    }\n    \n    override init(frame: CGRect) {\n        (message, phone) = self.dynamicType.setUp()\n        super.init(frame: frame)\n    }\n    \n    private static func setUp(){\n        let message = UILabel()  // ...\n        let phone = UITextView() // ...\n        return (message, phone)\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "class Contact: UIView\n{\n    private var message: UILabel\n    private var phone: UITextView\n    \n    required init?(coder aDecoder: NSCoder) {\n        (message, phone) = self.dynamicType.setUp()\n        super.init(coder: aDecoder)\n    }\n    \n    override func awakeFromNib() {\n        (message, phone) = self.dynamicType.setUp()\n        super.awakeFromNib()\n    }\n    \n    override init(frame: CGRect) {\n        (message, phone) = self.dynamicType.setUp()\n        super.init(frame: frame)\n    }\n    \n    private static func setUp(){\n        let message = UILabel()  // ...\n        let phone = UITextView() // ...\n        return (message, phone)\n    }\n}",
        "code_language": "Swift"
      }
    ],
    "title": "Set to tuples to avoid code repetition",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}