{
  "ID": "6b64e322-e07e-412f-888a-f841a98c253b",
  "Root": {
    "alive": true,
    "content": [
      "74ad1901-b960-406b-8d88-bfb9e2ee9a63",
      "927cb866-69c0-4756-8549-65688a1319bd"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550442707949,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "6b64e322-e07e-412f-888a-f841a98c253b",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550714160000,
    "parent_id": "05f80628-5dd6-4542-9fa7-02369c6aa696",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "TableView with dynamic properties with tableviewCellStyle basic."
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550442707946,
        "id": "74ad1901-b960-406b-8d88-bfb9e2ee9a63",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550714160000,
        "parent_id": "6b64e322-e07e-412f-888a-f841a98c253b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Swift"
            ]
          ],
          "title": [
            [
              "override func numberOfSections(in tableView: UITableView) -\u003e Int {\n    // You need to return minimum one to show the cell inside the tableview\n    return 1\n}\n\noverride func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {\n    // return the number of rows inside the tableview.\n    return 3\n}\n\n\noverride func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier: \"Cell\", for: indexPath) \n// identifier string should be same as what you have entered in the cell Attribute inspector -\u003e identifier (see the image).\n\n    // Configure the cell...\n    cell.textLabel?.text = \"Cell \\(indexPath.row) :\" + \"Hello\"\n//cell have different style Custom, basic, right detail, left detail, subtitle.\n//For custom you can use your own objects and constrains, for other styles all\n//is ready just select according to your design. (see the image for changing the style) \n\n    return cell\n}\n\noverride func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {\n        // this delegate method will trigger when you click a cell\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "override func numberOfSections(in tableView: UITableView) -\u003e Int {\n    // You need to return minimum one to show the cell inside the tableview\n    return 1\n}\n\noverride func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {\n    // return the number of rows inside the tableview.\n    return 3\n}\n\n\noverride func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier: \"Cell\", for: indexPath) \n// identifier string should be same as what you have entered in the cell Attribute inspector -\u003e identifier (see the image).\n\n    // Configure the cell...\n    cell.textLabel?.text = \"Cell \\(indexPath.row) :\" + \"Hello\"\n//cell have different style Custom, basic, right detail, left detail, subtitle.\n//For custom you can use your own objects and constrains, for other styles all\n//is ready just select according to your design. (see the image for changing the style) \n\n    return cell\n}\n\noverride func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {\n        // this delegate method will trigger when you click a cell\n}",
        "code_language": "Swift"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550442707949,
        "id": "927cb866-69c0-4756-8549-65688a1319bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550442707949,
        "parent_id": "6b64e322-e07e-412f-888a-f841a98c253b",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "https://i.stack.imgur.com/pGAy9.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "https://i.stack.imgur.com/pGAy9.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fi.stack.imgur.com%2FpGAy9.png"
      }
    ],
    "title": "TableView with dynamic properties with tableviewCellStyle basic.",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}