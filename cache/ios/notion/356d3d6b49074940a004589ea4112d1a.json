{
  "ID": "356d3d6b-4907-4940-a004-589ea4112d1a",
  "Root": {
    "alive": true,
    "content": [
      "551be28a-0be1-4ce5-aed9-a85af31e241d",
      "bbf9de91-5307-4a6f-a771-d9104ad8d9f9",
      "0b40de46-d3c4-4f01-beec-d3ff1029648e",
      "fcd1346c-76fa-45d7-b5e3-e98b75c71161",
      "9917c5ff-4568-4a09-97ad-a2cd8a4c9700",
      "8c0f52a5-8fde-4ffd-9bab-1a4328ce3804",
      "eb54535e-cb30-4f7f-b41e-e215103f9c91",
      "9213de26-2a9c-4f00-bc1b-7baf36a4ceaf",
      "6e5ced42-fb06-4de8-a140-5593de70619b",
      "34c1729d-906d-42d7-97d4-f4dbdd68d08d",
      "626547f4-cfb4-4a50-b5f3-2a9e9d01cb23",
      "3e26303c-713e-44b2-923c-c002999431fd",
      "eeb1ef7a-0a0d-4bb7-ab6f-6611b7412859",
      "6451a8fa-9d63-45a8-92b7-dc2a277c3719",
      "a9cca201-cef4-419f-af65-08f730c9fd6f",
      "52fd01a0-e5b1-4390-9b19-daca4a984e23",
      "212f559c-108e-446c-a5a8-db82f9205c48"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550396863894,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "356d3d6b-4907-4940-a004-589ea4112d1a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550652840000,
    "parent_id": "9ba8f818-f42f-4eb2-a68e-67377a9543ce",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Introduction"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396863888,
        "id": "551be28a-0be1-4ce5-aed9-a85af31e241d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396863888,
        "parent_id": "356d3d6b-4907-4940-a004-589ea4112d1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Typically, when using "
            ],
            [
              "UIControl",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "UIButton",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", we add a "
            ],
            [
              "selector",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as a callback action for when an event occurs on a button or control, such as the user pressing the button or touching the control."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Typically, when using "
          },
          {
            "Text": "UIControl",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "UIButton",
            "AttrFlags": 2
          },
          {
            "Text": ", we add a "
          },
          {
            "Text": "selector",
            "AttrFlags": 2
          },
          {
            "Text": " as a callback action for when an event occurs on a button or control, such as the user pressing the button or touching the control."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396863891,
        "id": "bbf9de91-5307-4a6f-a771-d9104ad8d9f9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396863891,
        "parent_id": "356d3d6b-4907-4940-a004-589ea4112d1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example, we would do the following:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example, we would do the following:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396863892,
        "id": "0b40de46-d3c4-4f01-beec-d3ff1029648e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550652840000,
        "parent_id": "356d3d6b-4907-4940-a004-589ea4112d1a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Swift"
            ]
          ],
          "title": [
            [
              "import UIKit\n\nclass ViewController: UIViewController {\n    @IBOutlet weak var button: UIButton!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        let button = UIButton(frame: CGRect(x: 0, y: 0, width: 100, height: 44))\n        button.addTarget(self, action: #selector(self.onButtonPress(_:)), for: .touchUpInside)\n        self.view.addSubview(button)\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n    }\n    \n    func onButtonPress(_ button: UIButton!) {\n        print(\"PRESSED\")\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "import UIKit\n\nclass ViewController: UIViewController {\n    @IBOutlet weak var button: UIButton!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        let button = UIButton(frame: CGRect(x: 0, y: 0, width: 100, height: 44))\n        button.addTarget(self, action: #selector(self.onButtonPress(_:)), for: .touchUpInside)\n        self.view.addSubview(button)\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n    }\n    \n    func onButtonPress(_ button: UIButton!) {\n        print(\"PRESSED\")\n    }\n}",
        "code_language": "Swift"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396863892,
        "id": "fcd1346c-76fa-45d7-b5e3-e98b75c71161",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396863892,
        "parent_id": "356d3d6b-4907-4940-a004-589ea4112d1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When it comes to "
            ],
            [
              "selector",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the compiler only needs to know that it exists.. This can be done through a "
            ],
            [
              "protocol",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and not be implemented."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When it comes to "
          },
          {
            "Text": "selector",
            "AttrFlags": 2
          },
          {
            "Text": ", the compiler only needs to know that it exists.. This can be done through a "
          },
          {
            "Text": "protocol",
            "AttrFlags": 2
          },
          {
            "Text": " and not be implemented."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396863892,
        "id": "9917c5ff-4568-4a09-97ad-a2cd8a4c9700",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396863892,
        "parent_id": "356d3d6b-4907-4940-a004-589ea4112d1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example, the following would crash your application:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example, the following would crash your application:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396863892,
        "id": "8c0f52a5-8fde-4ffd-9bab-1a4328ce3804",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396863892,
        "parent_id": "356d3d6b-4907-4940-a004-589ea4112d1a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import UIKit\n\n@objc\nprotocol ButtonEvent {\n    @objc optional func onButtonPress(_ button: UIButton)\n}\n\nclass ViewController: UIViewController, ButtonEvent {\n    @IBOutlet weak var button: UIButton!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        let button = UIButton(frame: CGRect(x: 0, y: 0, width: 100, height: 44))\n        button.addTarget(self, action: #selector(ButtonEvent.onButtonPress(_:)), for: .touchUpInside)\n        self.view.addSubview(button)\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import UIKit\n\n@objc\nprotocol ButtonEvent {\n    @objc optional func onButtonPress(_ button: UIButton)\n}\n\nclass ViewController: UIViewController, ButtonEvent {\n    @IBOutlet weak var button: UIButton!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        let button = UIButton(frame: CGRect(x: 0, y: 0, width: 100, height: 44))\n        button.addTarget(self, action: #selector(ButtonEvent.onButtonPress(_:)), for: .touchUpInside)\n        self.view.addSubview(button)\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396863892,
        "id": "eb54535e-cb30-4f7f-b41e-e215103f9c91",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396863892,
        "parent_id": "356d3d6b-4907-4940-a004-589ea4112d1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is because your application does NOT implement the "
            ],
            [
              "onButtonPress",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is because your application does NOT implement the "
          },
          {
            "Text": "onButtonPress",
            "AttrFlags": 2
          },
          {
            "Text": " function."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396863892,
        "id": "9213de26-2a9c-4f00-bc1b-7baf36a4ceaf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396863892,
        "parent_id": "356d3d6b-4907-4940-a004-589ea4112d1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now what if you could do all of this alongside the initialization of the button? What if you didn’t have to specify callbacks and could instead specify blocks that can be added and removed at any time? Why worry about implementing selectors?"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now what if you could do all of this alongside the initialization of the button? What if you didn’t have to specify callbacks and could instead specify blocks that can be added and removed at any time? Why worry about implementing selectors?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396863892,
        "id": "6e5ced42-fb06-4de8-a140-5593de70619b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396863892,
        "parent_id": "356d3d6b-4907-4940-a004-589ea4112d1a",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396863893,
        "id": "34c1729d-906d-42d7-97d4-f4dbdd68d08d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396863893,
        "parent_id": "356d3d6b-4907-4940-a004-589ea4112d1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Solution",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Solution",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396863893,
        "id": "626547f4-cfb4-4a50-b5f3-2a9e9d01cb23",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396863893,
        "parent_id": "356d3d6b-4907-4940-a004-589ea4112d1a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import Foundation\nimport UIKit\n\nprotocol RemovableTarget {\n    func enable();\n    func disable();\n}\n\nextension UIControl {\n    func addEventHandler(event: UIControlEvents, runnable: (control: UIControl) -\u003e Void) -\u003e RemovableTarget {\n        \n        class Target : RemovableTarget {\n            private var event: UIControlEvents\n            private weak var control: UIControl?\n            private var runnable: (control: UIControl) -\u003e Void\n            \n            private init(event: UIControlEvents, control: UIControl, runnable: (control: UIControl) -\u003e Void) {\n                self.event = event\n                self.control = control\n                self.runnable = runnable\n            }\n            \n            @objc\n            private func run(_ control: UIControl) {\n                runnable(control: control)\n            }\n            \n            private func enable() {\n                control?.addTarget(self, action: #selector(Target.run(_:)), for: event)\n                objc_setAssociatedObject(self, unsafeAddress(of: self), self, .OBJC_ASSOCIATION_RETAIN)\n            }\n            \n            private func disable() {\n                control?.removeTarget(self, action: #selector(Target.run(_:)), for: self.event)\n                objc_setAssociatedObject(self, unsafeAddress(of: self), nil, .OBJC_ASSOCIATION_ASSIGN)\n            }\n        }\n        \n        let target = Target(event: event, control: self, runnable: runnable)\n        target.enable()\n        return target\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import Foundation\nimport UIKit\n\nprotocol RemovableTarget {\n    func enable();\n    func disable();\n}\n\nextension UIControl {\n    func addEventHandler(event: UIControlEvents, runnable: (control: UIControl) -\u003e Void) -\u003e RemovableTarget {\n        \n        class Target : RemovableTarget {\n            private var event: UIControlEvents\n            private weak var control: UIControl?\n            private var runnable: (control: UIControl) -\u003e Void\n            \n            private init(event: UIControlEvents, control: UIControl, runnable: (control: UIControl) -\u003e Void) {\n                self.event = event\n                self.control = control\n                self.runnable = runnable\n            }\n            \n            @objc\n            private func run(_ control: UIControl) {\n                runnable(control: control)\n            }\n            \n            private func enable() {\n                control?.addTarget(self, action: #selector(Target.run(_:)), for: event)\n                objc_setAssociatedObject(self, unsafeAddress(of: self), self, .OBJC_ASSOCIATION_RETAIN)\n            }\n            \n            private func disable() {\n                control?.removeTarget(self, action: #selector(Target.run(_:)), for: self.event)\n                objc_setAssociatedObject(self, unsafeAddress(of: self), nil, .OBJC_ASSOCIATION_ASSIGN)\n            }\n        }\n        \n        let target = Target(event: event, control: self, runnable: runnable)\n        target.enable()\n        return target\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396863893,
        "id": "3e26303c-713e-44b2-923c-c002999431fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396863893,
        "parent_id": "356d3d6b-4907-4940-a004-589ea4112d1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The above is a simple extension on "
            ],
            [
              "UIControl",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". It adds an inner private class that has a callback "
            ],
            [
              "func run(_ control: UIControl)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that is used as the events’ action."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The above is a simple extension on "
          },
          {
            "Text": "UIControl",
            "AttrFlags": 2
          },
          {
            "Text": ". It adds an inner private class that has a callback "
          },
          {
            "Text": "func run(_ control: UIControl)",
            "AttrFlags": 2
          },
          {
            "Text": " that is used as the events’ action."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396863893,
        "id": "eeb1ef7a-0a0d-4bb7-ab6f-6611b7412859",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396863893,
        "parent_id": "356d3d6b-4907-4940-a004-589ea4112d1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Next we use "
            ],
            [
              "object association",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to add and remove the target because it will not be retained by the "
            ],
            [
              "UIControl",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Next we use "
          },
          {
            "Text": "object association",
            "AttrFlags": 2
          },
          {
            "Text": " to add and remove the target because it will not be retained by the "
          },
          {
            "Text": "UIControl",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396863893,
        "id": "6451a8fa-9d63-45a8-92b7-dc2a277c3719",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396863893,
        "parent_id": "356d3d6b-4907-4940-a004-589ea4112d1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The event handler function returns a "
            ],
            [
              "Protocol",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in order to hide the inner workings of the "
            ],
            [
              "Target",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class but also to allow you to "
            ],
            [
              "enable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "disable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " the target at any given time."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The event handler function returns a "
          },
          {
            "Text": "Protocol",
            "AttrFlags": 2
          },
          {
            "Text": " in order to hide the inner workings of the "
          },
          {
            "Text": "Target",
            "AttrFlags": 2
          },
          {
            "Text": " class but also to allow you to "
          },
          {
            "Text": "enable",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "disable",
            "AttrFlags": 2
          },
          {
            "Text": " the target at any given time."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396863893,
        "id": "a9cca201-cef4-419f-af65-08f730c9fd6f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396863893,
        "parent_id": "356d3d6b-4907-4940-a004-589ea4112d1a",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396863893,
        "id": "52fd01a0-e5b1-4390-9b19-daca4a984e23",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396863893,
        "parent_id": "356d3d6b-4907-4940-a004-589ea4112d1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Usage Example:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Usage Example:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396863894,
        "id": "212f559c-108e-446c-a5a8-db82f9205c48",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396863894,
        "parent_id": "356d3d6b-4907-4940-a004-589ea4112d1a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import Foundation\nimport UIKit\n\nclass ViewController: UIViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n\n        //Create a button.\n        let button = UIButton(frame: CGRect(x: 0, y: 0, width: 100, height: 44))\n        \n        //Add an event action block/listener -- Handles Button Press.\n        let target = button.addEventHandler(event: .touchUpInside) { (control) in\n            print(\"Pressed\")\n        }\n        \n\n        self.view.addSubview(button)\n        \n        //Example of enabling/disabling the listener/event-action-block.\n        DispatchQueue.main.after(when: DispatchTime.now() + 5) {\n            target.disable() //Disable the listener.\n            \n            DispatchQueue.main.after(when: DispatchTime.now() + 5) {\n                target.enable() //Enable the listener.\n            }\n        }\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import Foundation\nimport UIKit\n\nclass ViewController: UIViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n\n        //Create a button.\n        let button = UIButton(frame: CGRect(x: 0, y: 0, width: 100, height: 44))\n        \n        //Add an event action block/listener -- Handles Button Press.\n        let target = button.addEventHandler(event: .touchUpInside) { (control) in\n            print(\"Pressed\")\n        }\n        \n\n        self.view.addSubview(button)\n        \n        //Example of enabling/disabling the listener/event-action-block.\n        DispatchQueue.main.after(when: DispatchTime.now() + 5) {\n            target.disable() //Disable the listener.\n            \n            DispatchQueue.main.after(when: DispatchTime.now() + 5) {\n                target.enable() //Enable the listener.\n            }\n        }\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Introduction",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}