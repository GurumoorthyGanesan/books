{
  "ID": "1b1c7c94-a61b-4d48-98b7-e13a79163c34",
  "Root": {
    "alive": true,
    "content": [
      "579da899-d1d8-4208-9d75-7fecbf2a5115",
      "1a56a4d3-801c-4f0b-a68e-9a07dc778a40",
      "a3030d05-f700-4c86-8ea1-3e5d656a5ecc",
      "9844e43b-c430-48bf-8bbc-bbce0c05ffc0",
      "4815db76-0ee8-487a-bde7-f6c07c757cd3",
      "33249d70-87c1-4bee-a662-aa52e0c787c5",
      "af751242-0774-4eb7-88ed-7a14f4c1eb25",
      "a84194da-e1fd-4ccf-92ba-7341b3d72828",
      "a1a210f3-8104-418f-bd21-c3c33b7db0c3",
      "ccf71386-3f61-4077-9434-76d89bdcadb3",
      "40d1ea49-8fae-4eeb-8da5-356dc8a6589d",
      "934da141-5093-40be-a0bd-8322ff621b80"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550396110036,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1b1c7c94-a61b-4d48-98b7-e13a79163c34",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550650320000,
    "parent_id": "f201afae-b539-4cee-a0e4-ee8405dcf919",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Subclassing"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396110032,
        "id": "579da899-d1d8-4208-9d75-7fecbf2a5115",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396110032,
        "parent_id": "1b1c7c94-a61b-4d48-98b7-e13a79163c34",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Subclassing "
            ],
            [
              "UIControl",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " gives us access to the following methods:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Subclassing "
          },
          {
            "Text": "UIControl",
            "AttrFlags": 2
          },
          {
            "Text": " gives us access to the following methods:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396110035,
        "id": "1a56a4d3-801c-4f0b-a68e-9a07dc778a40",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396110035,
        "parent_id": "1b1c7c94-a61b-4d48-98b7-e13a79163c34",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "beginTrackingWithTouch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is called when the finger first touches down within the control’s bounds."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "beginTrackingWithTouch",
            "AttrFlags": 2
          },
          {
            "Text": " is called when the finger first touches down within the control’s bounds."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396110035,
        "id": "a3030d05-f700-4c86-8ea1-3e5d656a5ecc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396110035,
        "parent_id": "1b1c7c94-a61b-4d48-98b7-e13a79163c34",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "continueTrackingWithTouch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is called repeatedly as the finger slides across the control and even outside of the control’s bounds."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "continueTrackingWithTouch",
            "AttrFlags": 2
          },
          {
            "Text": " is called repeatedly as the finger slides across the control and even outside of the control’s bounds."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396110035,
        "id": "9844e43b-c430-48bf-8bbc-bbce0c05ffc0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396110035,
        "parent_id": "1b1c7c94-a61b-4d48-98b7-e13a79163c34",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "endTrackingWithTouch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is called when the finger lifts off the screen."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "endTrackingWithTouch",
            "AttrFlags": 2
          },
          {
            "Text": " is called when the finger lifts off the screen."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396110035,
        "id": "4815db76-0ee8-487a-bde7-f6c07c757cd3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396110035,
        "parent_id": "1b1c7c94-a61b-4d48-98b7-e13a79163c34",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "MyCustomControl.swift",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "MyCustomControl.swift",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396110035,
        "id": "33249d70-87c1-4bee-a662-aa52e0c787c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396110035,
        "parent_id": "1b1c7c94-a61b-4d48-98b7-e13a79163c34",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import UIKit\n\n// These are out self-defined rules for how we will communicate with other classes\nprotocol ViewControllerCommunicationDelegate: class {\n    func myTrackingBegan()\n    func myTrackingContinuing(location: CGPoint)\n    func myTrackingEnded()\n}\n\nclass MyCustomControl: UIControl {\n\n    // whichever class wants to be notified of the touch events must set the delegate to itself\n    weak var delegate: ViewControllerCommunicationDelegate?\n    \n    override func beginTrackingWithTouch(touch: UITouch, withEvent event: UIEvent?) -\u003e Bool {\n        \n        // notify the delegate (i.e. the view controller)\n        delegate?.myTrackingBegan()\n        \n        // returning true means that future events (like continueTrackingWithTouch and endTrackingWithTouch) will continue to be fired\n        return true\n    }\n    \n    override func continueTrackingWithTouch(touch: UITouch, withEvent event: UIEvent?) -\u003e Bool {\n        \n        // get the touch location in our custom control's own coordinate system\n        let point = touch.locationInView(self)\n        \n        // Update the delegate (i.e. the view controller) with the new coordinate point\n        delegate?.myTrackingContinuing(point)\n        \n        // returning true means that future events will continue to be fired\n        return true\n    }\n    \n    override func endTrackingWithTouch(touch: UITouch?, withEvent event: UIEvent?) {\n        \n        // notify the delegate (i.e. the view controller)\n        delegate?.myTrackingEnded()\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import UIKit\n\n// These are out self-defined rules for how we will communicate with other classes\nprotocol ViewControllerCommunicationDelegate: class {\n    func myTrackingBegan()\n    func myTrackingContinuing(location: CGPoint)\n    func myTrackingEnded()\n}\n\nclass MyCustomControl: UIControl {\n\n    // whichever class wants to be notified of the touch events must set the delegate to itself\n    weak var delegate: ViewControllerCommunicationDelegate?\n    \n    override func beginTrackingWithTouch(touch: UITouch, withEvent event: UIEvent?) -\u003e Bool {\n        \n        // notify the delegate (i.e. the view controller)\n        delegate?.myTrackingBegan()\n        \n        // returning true means that future events (like continueTrackingWithTouch and endTrackingWithTouch) will continue to be fired\n        return true\n    }\n    \n    override func continueTrackingWithTouch(touch: UITouch, withEvent event: UIEvent?) -\u003e Bool {\n        \n        // get the touch location in our custom control's own coordinate system\n        let point = touch.locationInView(self)\n        \n        // Update the delegate (i.e. the view controller) with the new coordinate point\n        delegate?.myTrackingContinuing(point)\n        \n        // returning true means that future events will continue to be fired\n        return true\n    }\n    \n    override func endTrackingWithTouch(touch: UITouch?, withEvent event: UIEvent?) {\n        \n        // notify the delegate (i.e. the view controller)\n        delegate?.myTrackingEnded()\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396110035,
        "id": "af751242-0774-4eb7-88ed-7a14f4c1eb25",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396110035,
        "parent_id": "1b1c7c94-a61b-4d48-98b7-e13a79163c34",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "ViewController.swift",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "ViewController.swift",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396110036,
        "id": "a84194da-e1fd-4ccf-92ba-7341b3d72828",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396110036,
        "parent_id": "1b1c7c94-a61b-4d48-98b7-e13a79163c34",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is how the view controller is set up to be the delegate and respond to touch events from our custom control."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is how the view controller is set up to be the delegate and respond to touch events from our custom control."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396110036,
        "id": "a1a210f3-8104-418f-bd21-c3c33b7db0c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396110036,
        "parent_id": "1b1c7c94-a61b-4d48-98b7-e13a79163c34",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import UIKit\nclass ViewController: UIViewController, ViewControllerCommunicationDelegate {\n    \n    @IBOutlet weak var myCustomControl: MyCustomControl!\n    @IBOutlet weak var trackingBeganLabel: UILabel!\n    @IBOutlet weak var trackingEndedLabel: UILabel!\n    @IBOutlet weak var xLabel: UILabel!\n    @IBOutlet weak var yLabel: UILabel!\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        myCustomControl.delegate = self\n    }\n\n    func myTrackingBegan() {\n        trackingBeganLabel.text = \"Tracking began\"\n    }\n    \n    func myTrackingContinuing(location: CGPoint) {\n        xLabel.text = \"x: \\(location.x)\"\n        yLabel.text = \"y: \\(location.y)\"\n    }\n    \n    func myTrackingEnded() {\n        trackingEndedLabel.text = \"Tracking ended\"\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import UIKit\nclass ViewController: UIViewController, ViewControllerCommunicationDelegate {\n    \n    @IBOutlet weak var myCustomControl: MyCustomControl!\n    @IBOutlet weak var trackingBeganLabel: UILabel!\n    @IBOutlet weak var trackingEndedLabel: UILabel!\n    @IBOutlet weak var xLabel: UILabel!\n    @IBOutlet weak var yLabel: UILabel!\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        myCustomControl.delegate = self\n    }\n\n    func myTrackingBegan() {\n        trackingBeganLabel.text = \"Tracking began\"\n    }\n    \n    func myTrackingContinuing(location: CGPoint) {\n        xLabel.text = \"x: \\(location.x)\"\n        yLabel.text = \"y: \\(location.y)\"\n    }\n    \n    func myTrackingEnded() {\n        trackingEndedLabel.text = \"Tracking ended\"\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396110036,
        "id": "ccf71386-3f61-4077-9434-76d89bdcadb3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396110036,
        "parent_id": "1b1c7c94-a61b-4d48-98b7-e13a79163c34",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Notes",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Notes",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396110036,
        "id": "40d1ea49-8fae-4eeb-8da5-356dc8a6589d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396110036,
        "parent_id": "1b1c7c94-a61b-4d48-98b7-e13a79163c34",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Alternate methods of achieving the same result without subclassing include adding a target or using a gesture recognizer."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Alternate methods of achieving the same result without subclassing include adding a target or using a gesture recognizer."
          }
        ]
      },
      {
        "alive": true,
        "content": [
          "66376fff-2544-47b9-915d-d9d44a501bca"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396110036,
        "id": "934da141-5093-40be-a0bd-8322ff621b80",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396110036,
        "parent_id": "1b1c7c94-a61b-4d48-98b7-e13a79163c34",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is not necessary to use a delegate with these methods if they are only being used within the custom control itself. We could have just added a "
            ],
            [
              "print",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement to show how the events are being called. In that case, the code would be simplified to"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "content_resolved": [
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550396110036,
            "id": "66376fff-2544-47b9-915d-d9d44a501bca",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550396110036,
            "parent_id": "934da141-5093-40be-a0bd-8322ff621b80",
            "parent_table": "block",
            "properties": {
              "language": [
                [
                  "Plain Text"
                ]
              ],
              "title": [
                [
                  "import UIKit\n  class MyCustomControl: UIControl {\n\n      override func beginTrackingWithTouch(touch: UITouch, withEvent event: UIEvent?) -\u003e Bool {\n          print(\"Began tracking\")\n          return true\n      }\n  \n      override func continueTrackingWithTouch(touch: UITouch, withEvent event: UIEvent?) -\u003e Bool {\n          let point = touch.locationInView(self)\n          print(\"x: \\(point.x), y: \\(point.y)\")\n          return true\n      }\n  \n      override func endTrackingWithTouch(touch: UITouch?, withEvent event: UIEvent?) {\n          print(\"Ended tracking\")\n      }\n  }"
                ]
              ]
            },
            "type": "code",
            "version": 1,
            "code": "import UIKit\n  class MyCustomControl: UIControl {\n\n      override func beginTrackingWithTouch(touch: UITouch, withEvent event: UIEvent?) -\u003e Bool {\n          print(\"Began tracking\")\n          return true\n      }\n  \n      override func continueTrackingWithTouch(touch: UITouch, withEvent event: UIEvent?) -\u003e Bool {\n          let point = touch.locationInView(self)\n          print(\"x: \\(point.x), y: \\(point.y)\")\n          return true\n      }\n  \n      override func endTrackingWithTouch(touch: UITouch?, withEvent event: UIEvent?) {\n          print(\"Ended tracking\")\n      }\n  }",
            "code_language": "Plain Text"
          }
        ],
        "inline_content": [
          {
            "Text": "It is not necessary to use a delegate with these methods if they are only being used within the custom control itself. We could have just added a "
          },
          {
            "Text": "print",
            "AttrFlags": 2
          },
          {
            "Text": " statement to show how the events are being called. In that case, the code would be simplified to"
          }
        ]
      }
    ],
    "title": "Subclassing",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}