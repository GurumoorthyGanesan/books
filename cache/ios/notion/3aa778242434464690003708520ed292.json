{
  "ID": "3aa77824-2434-4646-9000-3708520ed292",
  "Root": {
    "alive": true,
    "content": [
      "ca4e288b-8489-4afa-9ecc-5ffe816e063b",
      "077a8229-4d15-48e9-b6e7-bc3f024cc3da",
      "0158fcfd-ac57-4d47-ba74-de0d12902eb4",
      "c756c288-9c67-4e10-980e-52c27997ca73"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550396425783,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "3aa77824-2434-4646-9000-3708520ed292",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550651100000,
    "parent_id": "364d948a-b32a-4a45-b1e3-2e149eca790f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Search Bar in Navigation Bar Title"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396425779,
        "id": "ca4e288b-8489-4afa-9ecc-5ffe816e063b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396425779,
        "parent_id": "3aa77824-2434-4646-9000-3708520ed292",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example uses a search controller to filter the data inside a table view controller. The search bar is placed inside the navigation bar that the table view is embedded into."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example uses a search controller to filter the data inside a table view controller. The search bar is placed inside the navigation bar that the table view is embedded into."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396425782,
        "id": "077a8229-4d15-48e9-b6e7-bc3f024cc3da",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396425782,
        "parent_id": "3aa77824-2434-4646-9000-3708520ed292",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "http://i.stack.imgur.com/y85SV.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "http://i.stack.imgur.com/y85SV.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.sohttp:%2F%2Fi.stack.imgur.com%2Fy85SV.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396425783,
        "id": "0158fcfd-ac57-4d47-ba74-de0d12902eb4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396425783,
        "parent_id": "3aa77824-2434-4646-9000-3708520ed292",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Embed a "
            ],
            [
              "UITableViewController",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " into a "
            ],
            [
              "UINavigationController",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to get the "
            ],
            [
              "UINavigationItem",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (which contains the navigation bar). Then set our custom ViewController class to inherit from "
            ],
            [
              "UITableViewController",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and adopt the "
            ],
            [
              "UISearchResultsUpdating",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " protocol."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Embed a "
          },
          {
            "Text": "UITableViewController",
            "AttrFlags": 2
          },
          {
            "Text": " into a "
          },
          {
            "Text": "UINavigationController",
            "AttrFlags": 2
          },
          {
            "Text": " to get the "
          },
          {
            "Text": "UINavigationItem",
            "AttrFlags": 2
          },
          {
            "Text": " (which contains the navigation bar). Then set our custom ViewController class to inherit from "
          },
          {
            "Text": "UITableViewController",
            "AttrFlags": 2
          },
          {
            "Text": " and adopt the "
          },
          {
            "Text": "UISearchResultsUpdating",
            "AttrFlags": 2
          },
          {
            "Text": " protocol."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396425783,
        "id": "c756c288-9c67-4e10-980e-52c27997ca73",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396425783,
        "parent_id": "3aa77824-2434-4646-9000-3708520ed292",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class ViewController: UITableViewController, UISearchResultsUpdating {\n\n    let entries = [(title: \"Easiest\", image: \"green_circle\"),\n                   (title: \"Intermediate\", image: \"blue_square\"),\n                   (title: \"Advanced\", image: \"black_diamond\"),\n                   (title: \"Expert Only\", image: \"double_black_diamond\")]\n    \n    // An empty tuple that will be updated with search results.\n    var searchResults : [(title: String, image: String)] = []\n    \n    let searchController = UISearchController(searchResultsController: nil)\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        searchController.searchResultsUpdater = self\n        self.definesPresentationContext = true\n\n        // Place the search bar in the navigation item's title view.\n        self.navigationItem.titleView = searchController.searchBar\n\n        // Don't hide the navigation bar because the search bar is in it.\n        searchController.hidesNavigationBarDuringPresentation = false\n    }\n    \n    func filterContent(for searchText: String) {\n        // Update the searchResults array with matches\n        // in our entries based on the title value.\n        searchResults = entries.filter({ (title: String, image: String) -\u003e Bool in\n            let match = title.range(of: searchText, options: .caseInsensitive)\n            // Return the tuple if the range contains a match.\n            return match != nil\n        })\n    }\n\n    // MARK: - UISearchResultsUpdating method\n    \n    func updateSearchResults(for searchController: UISearchController) {\n        // If the search bar contains text, filter our data with the string\n        if let searchText = searchController.searchBar.text {\n            filterContent(for: searchText)\n            // Reload the table view with the search result data.\n            tableView.reloadData()\n        }\n    }\n\n    // MARK: - UITableViewController methods\n    \n    override func numberOfSections(in tableView: UITableView) -\u003e Int { return 1 }\n\n    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {\n        // If the search bar is active, use the searchResults data.\n        return searchController.isActive ? searchResults.count : entries.count\n    }\n    \n    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {\n        // If the search bar is active, use the searchResults data.\n        let entry = searchController.isActive ? \n                    searchResults[indexPath.row] : entries[indexPath.row]\n        \n        let cell = tableView.dequeueReusableCell(withIdentifier: \"Cell\", for: indexPath)\n        cell.textLabel?.text = entry.title\n        cell.imageView?.image = UIImage(named: entry.image)\n        return cell\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class ViewController: UITableViewController, UISearchResultsUpdating {\n\n    let entries = [(title: \"Easiest\", image: \"green_circle\"),\n                   (title: \"Intermediate\", image: \"blue_square\"),\n                   (title: \"Advanced\", image: \"black_diamond\"),\n                   (title: \"Expert Only\", image: \"double_black_diamond\")]\n    \n    // An empty tuple that will be updated with search results.\n    var searchResults : [(title: String, image: String)] = []\n    \n    let searchController = UISearchController(searchResultsController: nil)\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        searchController.searchResultsUpdater = self\n        self.definesPresentationContext = true\n\n        // Place the search bar in the navigation item's title view.\n        self.navigationItem.titleView = searchController.searchBar\n\n        // Don't hide the navigation bar because the search bar is in it.\n        searchController.hidesNavigationBarDuringPresentation = false\n    }\n    \n    func filterContent(for searchText: String) {\n        // Update the searchResults array with matches\n        // in our entries based on the title value.\n        searchResults = entries.filter({ (title: String, image: String) -\u003e Bool in\n            let match = title.range(of: searchText, options: .caseInsensitive)\n            // Return the tuple if the range contains a match.\n            return match != nil\n        })\n    }\n\n    // MARK: - UISearchResultsUpdating method\n    \n    func updateSearchResults(for searchController: UISearchController) {\n        // If the search bar contains text, filter our data with the string\n        if let searchText = searchController.searchBar.text {\n            filterContent(for: searchText)\n            // Reload the table view with the search result data.\n            tableView.reloadData()\n        }\n    }\n\n    // MARK: - UITableViewController methods\n    \n    override func numberOfSections(in tableView: UITableView) -\u003e Int { return 1 }\n\n    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {\n        // If the search bar is active, use the searchResults data.\n        return searchController.isActive ? searchResults.count : entries.count\n    }\n    \n    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {\n        // If the search bar is active, use the searchResults data.\n        let entry = searchController.isActive ? \n                    searchResults[indexPath.row] : entries[indexPath.row]\n        \n        let cell = tableView.dequeueReusableCell(withIdentifier: \"Cell\", for: indexPath)\n        cell.textLabel?.text = entry.title\n        cell.imageView?.image = UIImage(named: entry.image)\n        return cell\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Search Bar in Navigation Bar Title",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}