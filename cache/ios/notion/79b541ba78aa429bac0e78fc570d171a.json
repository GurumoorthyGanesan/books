{
  "ID": "79b541ba-78aa-429b-ac0e-78fc570d171a",
  "Root": {
    "alive": true,
    "content": [
      "1fad1b4e-fb4c-451a-9218-f968a01bb522",
      "bbe0f716-5c82-43e3-b944-bd5332f1b9f7",
      "af9f7e7b-e33a-4599-b17c-faab2c982101",
      "0df9754b-16d3-4ab9-80ec-df5da135b807",
      "45767506-d21c-4832-bfaf-7e3f626a4f11",
      "9767eeb5-2305-4c1a-bf81-1b12e7958aaa",
      "54d31e7d-e10e-4478-ae78-0e4ce781ea8f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550442571069,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "79b541ba-78aa-429b-ac0e-78fc570d171a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550714040000,
    "parent_id": "1c7d0afd-964c-4b18-a54f-77c4ea09f8f2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Check that the cell is still visible after download"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550442571066,
        "id": "1fad1b4e-fb4c-451a-9218-f968a01bb522",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550442571066,
        "parent_id": "79b541ba-78aa-429b-ac0e-78fc570d171a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sometimes the download takes longer than the cell is being displayed. In this case it can happen, that the downloaded image is shown in the wrong cell. To fix this we can not use the "
            ],
            [
              "UIImageView Extension",
              [
                [
                  "a",
                  "https://github.com/Alamofire/AlamofireImage#uiimageview-extension"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sometimes the download takes longer than the cell is being displayed. In this case it can happen, that the downloaded image is shown in the wrong cell. To fix this we can not use the "
          },
          {
            "Text": "UIImageView Extension",
            "Link": "https://github.com/Alamofire/AlamofireImage#uiimageview-extension"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550442571067,
        "id": "bbe0f716-5c82-43e3-b944-bd5332f1b9f7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550442571067,
        "parent_id": "79b541ba-78aa-429b-ac0e-78fc570d171a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We still will be using "
            ],
            [
              "Alamofire",
              [
                [
                  "a",
                  "https://github.com/Alamofire/Alamofire"
                ]
              ]
            ],
            [
              " however we will use the completion handler to display the image."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We still will be using "
          },
          {
            "Text": "Alamofire",
            "Link": "https://github.com/Alamofire/Alamofire"
          },
          {
            "Text": " however we will use the completion handler to display the image."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550442571068,
        "id": "af9f7e7b-e33a-4599-b17c-faab2c982101",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550442571068,
        "parent_id": "79b541ba-78aa-429b-ac0e-78fc570d171a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this scenario we still need a tableView with a cell which has a imageView in it. In the cellForRowAt: method we would download the image with the following code:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this scenario we still need a tableView with a cell which has a imageView in it. In the cellForRowAt: method we would download the image with the following code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550442571068,
        "id": "0df9754b-16d3-4ab9-80ec-df5da135b807",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550442571068,
        "parent_id": "79b541ba-78aa-429b-ac0e-78fc570d171a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "let placeholderImage = UIImage(named: \"placeholder\")!\nimageView.image = placeholderImage\n\nlet url = URL(string: \"https://httpbin.org/image/png\")!\n\nAlamofire.request(url!, method: .get).responseImage { response in\n    guard let image = response.result.value else { return }\n\n    if let updateCell = tableView.cellForRow(at: indexPath) {\n        updateCell.imageView.image = image\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "let placeholderImage = UIImage(named: \"placeholder\")!\nimageView.image = placeholderImage\n\nlet url = URL(string: \"https://httpbin.org/image/png\")!\n\nAlamofire.request(url!, method: .get).responseImage { response in\n    guard let image = response.result.value else { return }\n\n    if let updateCell = tableView.cellForRow(at: indexPath) {\n        updateCell.imageView.image = image\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550442571068,
        "id": "45767506-d21c-4832-bfaf-7e3f626a4f11",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550442571068,
        "parent_id": "79b541ba-78aa-429b-ac0e-78fc570d171a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example we first set the image to the placeholder image. Afterwards we download the image with the "
            ],
            [
              "request",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method of "
            ],
            [
              "Alamofire",
              [
                [
                  "a",
                  "https://github.com/Alamofire/AlamofireImage#uiimageview-extension"
                ]
              ]
            ],
            [
              ". We pass the url as the first argument and since we just want to get the image we will use the "
            ],
            [
              ".get",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " HTTP method. Since we are downloading an image we want the response to be an image therefore we use the "
            ],
            [
              ".responseImage",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example we first set the image to the placeholder image. Afterwards we download the image with the "
          },
          {
            "Text": "request",
            "AttrFlags": 2
          },
          {
            "Text": " method of "
          },
          {
            "Text": "Alamofire",
            "Link": "https://github.com/Alamofire/AlamofireImage#uiimageview-extension"
          },
          {
            "Text": ". We pass the url as the first argument and since we just want to get the image we will use the "
          },
          {
            "Text": ".get",
            "AttrFlags": 2
          },
          {
            "Text": " HTTP method. Since we are downloading an image we want the response to be an image therefore we use the "
          },
          {
            "Text": ".responseImage",
            "AttrFlags": 2
          },
          {
            "Text": " method."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550442571068,
        "id": "9767eeb5-2305-4c1a-bf81-1b12e7958aaa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550442571068,
        "parent_id": "79b541ba-78aa-429b-ac0e-78fc570d171a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "After the image has been downloaded the closure gets called and first of all we make sure that the downloaded image actually exists. Then we make sure that the cell is still visible by checking that the cellForRow(at: indexPath) doesnâ€™t return nil. If it does nothing happens, if it doesnâ€™t we assign the recently downloaded image."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "After the image has been downloaded the closure gets called and first of all we make sure that the downloaded image actually exists. Then we make sure that the cell is still visible by checking that the cellForRow(at: indexPath) doesnâ€™t return nil. If it does nothing happens, if it doesnâ€™t we assign the recently downloaded image."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550442571069,
        "id": "54d31e7d-e10e-4478-ae78-0e4ce781ea8f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550442571069,
        "parent_id": "79b541ba-78aa-429b-ac0e-78fc570d171a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This last if statement ensures that the cell is still visible if the user already scrolled over the cell the updateCell will be nil and the if statement returns nil. This helps us prevent displaying the wrong image in a cell."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This last if statement ensures that the cell is still visible if the user already scrolled over the cell the updateCell will be nil and the if statement returns nil. This helps us prevent displaying the wrong image in a cell."
          }
        ]
      }
    ],
    "title": "Check that the cell is still visible after download",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}