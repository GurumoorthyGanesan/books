{
  "ID": "0b5c7b7e-b28e-4b96-98c6-88a5268b758d",
  "Root": {
    "alive": true,
    "content": [
      "2d7d5bf3-a6b7-48a5-a24f-23892d0ea27e",
      "ce386937-e6c1-4778-8cae-304b0925978b",
      "36bf3e6f-ce20-42e7-99d2-c39b106cb6d2",
      "27ba715d-badf-4928-8b7a-3c52975ec8d3",
      "58791ce4-475b-4b06-a017-5b98f0a28f68",
      "e8756958-7dc2-402b-bf1a-fc4e4d3c71ed",
      "06032cbb-9013-4fc7-8902-1855b67e93f8"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550397808732,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "0b5c7b7e-b28e-4b96-98c6-88a5268b758d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550654280000,
    "parent_id": "7f229db5-64ee-45de-a6ab-0d61f675f6ff",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Dispatch Semaphore"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397808728,
        "id": "2d7d5bf3-a6b7-48a5-a24f-23892d0ea27e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397808728,
        "parent_id": "0b5c7b7e-b28e-4b96-98c6-88a5268b758d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "DispatchSemaphore provides an efficient implementation of a traditional counting semaphore, which can be used to control access to a resource across multiple execution contexts."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "DispatchSemaphore provides an efficient implementation of a traditional counting semaphore, which can be used to control access to a resource across multiple execution contexts."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397808730,
        "id": "ce386937-e6c1-4778-8cae-304b0925978b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397808730,
        "parent_id": "0b5c7b7e-b28e-4b96-98c6-88a5268b758d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A scenario for when to use a semaphore could be if you are doing some file reading/writing, if multiple tasks are trying to read and write from file at the same time, it could increase your performance to make each task wait its turn so as to not overburden the I/O controller."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A scenario for when to use a semaphore could be if you are doing some file reading/writing, if multiple tasks are trying to read and write from file at the same time, it could increase your performance to make each task wait its turn so as to not overburden the I/O controller."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397808730,
        "id": "36bf3e6f-ce20-42e7-99d2-c39b106cb6d2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397808730,
        "parent_id": "0b5c7b7e-b28e-4b96-98c6-88a5268b758d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Swift 3",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Swift 3",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397808730,
        "id": "27ba715d-badf-4928-8b7a-3c52975ec8d3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397808730,
        "parent_id": "0b5c7b7e-b28e-4b96-98c6-88a5268b758d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "func do2TasksAtATime () {\n    print(\"starting long running tasks (2 at a time)\")\n    let sem = DispatchSemaphore(value: 2)            //this semaphore only allows 2 tasks to run at the same time (the resource count)\n    for i in 0...7 {                                 //launch a bunch of tasks\n        DispatchQueue.global().async {               //run tasks on a background thread\n            sem.wait()                               //wait here if no resources available\n            sleep(2)                                 //do some long task eg file access (here we are just sleeping for a 2 seconds for demonstration purposes)\n            print(\"long task \\(i) done! \\(Date())\")\n            sem.signal()                             //let the semaphore know this resource is now available\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "func do2TasksAtATime () {\n    print(\"starting long running tasks (2 at a time)\")\n    let sem = DispatchSemaphore(value: 2)            //this semaphore only allows 2 tasks to run at the same time (the resource count)\n    for i in 0...7 {                                 //launch a bunch of tasks\n        DispatchQueue.global().async {               //run tasks on a background thread\n            sem.wait()                               //wait here if no resources available\n            sleep(2)                                 //do some long task eg file access (here we are just sleeping for a 2 seconds for demonstration purposes)\n            print(\"long task \\(i) done! \\(Date())\")\n            sem.signal()                             //let the semaphore know this resource is now available\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397808731,
        "id": "58791ce4-475b-4b06-a017-5b98f0a28f68",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397808731,
        "parent_id": "0b5c7b7e-b28e-4b96-98c6-88a5268b758d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example output: (notice the time stamps)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example output: (notice the time stamps)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397808731,
        "id": "e8756958-7dc2-402b-bf1a-fc4e4d3c71ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397808731,
        "parent_id": "0b5c7b7e-b28e-4b96-98c6-88a5268b758d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "starting long running tasks (2 at a time)\nlong task 0 done! 2017-02-16 07:11:53 +0000\nlong task 1 done! 2017-02-16 07:11:53 +0000\nlong task 2 done! 2017-02-16 07:11:55 +0000\nlong task 3 done! 2017-02-16 07:11:55 +0000\nlong task 5 done! 2017-02-16 07:11:57 +0000\nlong task 4 done! 2017-02-16 07:11:57 +0000\nlong task 6 done! 2017-02-16 07:11:59 +0000\nlong task 7 done! 2017-02-16 07:11:59 +0000"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "starting long running tasks (2 at a time)\nlong task 0 done! 2017-02-16 07:11:53 +0000\nlong task 1 done! 2017-02-16 07:11:53 +0000\nlong task 2 done! 2017-02-16 07:11:55 +0000\nlong task 3 done! 2017-02-16 07:11:55 +0000\nlong task 5 done! 2017-02-16 07:11:57 +0000\nlong task 4 done! 2017-02-16 07:11:57 +0000\nlong task 6 done! 2017-02-16 07:11:59 +0000\nlong task 7 done! 2017-02-16 07:11:59 +0000",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550397808732,
        "id": "06032cbb-9013-4fc7-8902-1855b67e93f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550397808732,
        "parent_id": "0b5c7b7e-b28e-4b96-98c6-88a5268b758d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For more info, refer to the "
            ],
            [
              "Apple Docs",
              [
                [
                  "a",
                  "https://developer.apple.com/reference/dispatch/dispatchsemaphore"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For more info, refer to the "
          },
          {
            "Text": "Apple Docs",
            "Link": "https://developer.apple.com/reference/dispatch/dispatchsemaphore"
          }
        ]
      }
    ],
    "title": "Dispatch Semaphore",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}