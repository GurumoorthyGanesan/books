{
  "ID": "0628e002-07c9-4600-91e6-8b4eac1befbb",
  "Root": {
    "alive": true,
    "content": [
      "44e3af54-6dfb-4960-82e6-eb806141be0a",
      "da83c340-93e2-407b-96f0-521362ec3081",
      "49abf1e8-9431-46d3-bb0a-50479ab2f39e",
      "e4016247-7f4e-4c14-ab93-894ac0022df4",
      "fe36cbf0-7fc4-47ed-bbd1-c68b26c13631",
      "35130df1-3227-4757-829e-0cb08cf22c91",
      "2011ac98-ebcd-4725-a9b4-4a450e31f413",
      "1526ec68-8ff1-44dc-909f-5b6ce6861092",
      "44504a13-4ef3-4183-aa4f-8cd93b5fffa1",
      "ae02a689-971d-4011-9e9a-cd63d178f710",
      "ddfb5c7a-2720-41a8-830f-9f34631163c5",
      "08c4c6b3-fb93-40a4-bc51-12bb28c418fc",
      "6cdc34ca-0e8b-488f-bd32-a04f17fabd47"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550441732399,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "0628e002-07c9-4600-91e6-8b4eac1befbb",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550713380000,
    "parent_id": "7a56372d-fe11-400f-a027-df8c53584a7f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Connect and read major value"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441732397,
        "id": "44e3af54-6dfb-4960-82e6-eb806141be0a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441732397,
        "parent_id": "0628e002-07c9-4600-91e6-8b4eac1befbb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "I’m in a controlled room with a single minew beacon that use IBEACON protocol."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "I’m in a controlled room with a single minew beacon that use IBEACON protocol."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441732397,
        "id": "da83c340-93e2-407b-96f0-521362ec3081",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441732397,
        "parent_id": "0628e002-07c9-4600-91e6-8b4eac1befbb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "BLEController needs to extend CBPeripheralDelegate"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "BLEController needs to extend CBPeripheralDelegate"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441732397,
        "id": "49abf1e8-9431-46d3-bb0a-50479ab2f39e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441732397,
        "parent_id": "0628e002-07c9-4600-91e6-8b4eac1befbb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "I’ll use the first BLE to connect after the search has stop."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "I’ll use the first BLE to connect after the search has stop."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441732398,
        "id": "e4016247-7f4e-4c14-ab93-894ac0022df4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441732398,
        "parent_id": "0628e002-07c9-4600-91e6-8b4eac1befbb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Modify the method StopSearchBLE()"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Modify the method StopSearchBLE()"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441732398,
        "id": "fe36cbf0-7fc4-47ed-bbd1-c68b26c13631",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441732398,
        "parent_id": "0628e002-07c9-4600-91e6-8b4eac1befbb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class BLEController: CBCentralManagerDelegate, CBPeripheralDelegate{\n//...\n    func StopSearchMiniewBeacon() {\n        let when = DispatchTime.now() + 5 // change 2 to desired number of seconds\n        DispatchQueue.main.asyncAfter(deadline: when) {\n            self.cb_manager.stopScan()\n            self.cb_manager.connect(bles.first)\n        }\n    }\n/...\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class BLEController: CBCentralManagerDelegate, CBPeripheralDelegate{\n//...\n    func StopSearchMiniewBeacon() {\n        let when = DispatchTime.now() + 5 // change 2 to desired number of seconds\n        DispatchQueue.main.asyncAfter(deadline: when) {\n            self.cb_manager.stopScan()\n            self.cb_manager.connect(bles.first)\n        }\n    }\n/...\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441732398,
        "id": "35130df1-3227-4757-829e-0cb08cf22c91",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441732398,
        "parent_id": "0628e002-07c9-4600-91e6-8b4eac1befbb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the documention of your BLE device, you should look for the SERVICE UUID and MAJOR UUID CHARACTERISTIC"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the documention of your BLE device, you should look for the SERVICE UUID and MAJOR UUID CHARACTERISTIC"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441732398,
        "id": "2011ac98-ebcd-4725-a9b4-4a450e31f413",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441732398,
        "parent_id": "0628e002-07c9-4600-91e6-8b4eac1befbb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var service_uuid =  CBUUID(string: \"0000fff0-0000-1000-8000-00805f9b34fb\")\nvar major_uuid =  CBUUID(string: \"0000fff2-0000-1000-8000-00805f9b34fb\")\nfunc centralManager(_ central: CBCentralManager, didConnect peripheral:             \nCBPeripheral) {\n    peripheral.delegate = self\n    peripheral.discoverServices([service_uuid])\n}\n\nfunc peripheral(_ peripheral: CBPeripheral, didDiscoverServices error: Error?) {\n    print(\"Service: \\(service)\\n error: \\(error)\")\n    peripheral.discoverCharacteristics([major_uuid], for: (peripheral.services?[0])!)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var service_uuid =  CBUUID(string: \"0000fff0-0000-1000-8000-00805f9b34fb\")\nvar major_uuid =  CBUUID(string: \"0000fff2-0000-1000-8000-00805f9b34fb\")\nfunc centralManager(_ central: CBCentralManager, didConnect peripheral:             \nCBPeripheral) {\n    peripheral.delegate = self\n    peripheral.discoverServices([service_uuid])\n}\n\nfunc peripheral(_ peripheral: CBPeripheral, didDiscoverServices error: Error?) {\n    print(\"Service: \\(service)\\n error: \\(error)\")\n    peripheral.discoverCharacteristics([major_uuid], for: (peripheral.services?[0])!)\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441732398,
        "id": "1526ec68-8ff1-44dc-909f-5b6ce6861092",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441732398,
        "parent_id": "0628e002-07c9-4600-91e6-8b4eac1befbb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Create a variable ‘service_uuid’ and ‘major_uuid’ like code above. ‘-0000-1000-8000-00805f9b34fb’ is part of the standard. ‘fff0’ is my SERVICE UUID, ‘fff2’ is my MAJOR UUID characteristic and ‘0000’ are required to fill the 4 bytes uuid 1º block."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Create a variable ‘service_uuid’ and ‘major_uuid’ like code above. ‘-0000-1000-8000-00805f9b34fb’ is part of the standard. ‘fff0’ is my SERVICE UUID, ‘fff2’ is my MAJOR UUID characteristic and ‘0000’ are required to fill the 4 bytes uuid 1º block."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441732398,
        "id": "44504a13-4ef3-4183-aa4f-8cd93b5fffa1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441732398,
        "parent_id": "0628e002-07c9-4600-91e6-8b4eac1befbb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "discoverCharacteristics([major_uuid], for: (peripheral.services?[0])!) will get major characteristic from my device gatt server and it will have NIL as value for now."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "discoverCharacteristics([major_uuid], for: (peripheral.services?[0])!) will get major characteristic from my device gatt server and it will have NIL as value for now."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441732398,
        "id": "ae02a689-971d-4011-9e9a-cd63d178f710",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441732398,
        "parent_id": "0628e002-07c9-4600-91e6-8b4eac1befbb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "(peripheral.services?[0])! - 0 beacuse will return a single value once I did peripheral.discoverServices([service_uuid])"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "(peripheral.services?[0])! - 0 beacuse will return a single value once I did peripheral.discoverServices([service_uuid])"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441732398,
        "id": "ddfb5c7a-2720-41a8-830f-9f34631163c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441732398,
        "parent_id": "0628e002-07c9-4600-91e6-8b4eac1befbb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "func peripheral(_ peripheral: CBPeripheral, didDiscoverCharacteristicsFor service: CBService, error: Error?) {\n    for characteristic in service.characteristics! {\n        print(\"Characteristic: \\(characteristic)\\n error: \\(error)\")\n        if(characteristic.uuid.uuidString == \"FFF2\"){\n            peripheral.readValue(for: characteristic)\n        }\n    }\n}\n\nfunc peripheral(_ peripheral: CBPeripheral, didUpdateValueFor characteristic: CBCharacteristic, error: Error?) {\n    print(\"Characteristic read: \\(characteristic)\\n error: \\(error)\")\n    let major = UInt16.init(bigEndian: UInt16(data: characteristic.value!)!)\n    print(\"major: \\(major)\")\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "func peripheral(_ peripheral: CBPeripheral, didDiscoverCharacteristicsFor service: CBService, error: Error?) {\n    for characteristic in service.characteristics! {\n        print(\"Characteristic: \\(characteristic)\\n error: \\(error)\")\n        if(characteristic.uuid.uuidString == \"FFF2\"){\n            peripheral.readValue(for: characteristic)\n        }\n    }\n}\n\nfunc peripheral(_ peripheral: CBPeripheral, didUpdateValueFor characteristic: CBCharacteristic, error: Error?) {\n    print(\"Characteristic read: \\(characteristic)\\n error: \\(error)\")\n    let major = UInt16.init(bigEndian: UInt16(data: characteristic.value!)!)\n    print(\"major: \\(major)\")\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441732399,
        "id": "08c4c6b3-fb93-40a4-bc51-12bb28c418fc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441732399,
        "parent_id": "0628e002-07c9-4600-91e6-8b4eac1befbb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Characteristic value will only be readable after call peripheral.readValue(for: characteristic)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Characteristic value will only be readable after call peripheral.readValue(for: characteristic)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441732399,
        "id": "6cdc34ca-0e8b-488f-bd32-a04f17fabd47",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441732399,
        "parent_id": "0628e002-07c9-4600-91e6-8b4eac1befbb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "readValue will result in func peripheral(_ peripheral: CBPeripheral, didUpdateValueFor characteristic: CBCharacteristic, error: Error?) with value in Data type."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "readValue will result in func peripheral(_ peripheral: CBPeripheral, didUpdateValueFor characteristic: CBCharacteristic, error: Error?) with value in Data type."
          }
        ]
      }
    ],
    "title": "Connect and read major value",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}