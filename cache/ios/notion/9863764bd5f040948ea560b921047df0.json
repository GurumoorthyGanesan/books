{
  "ID": "9863764b-d5f0-4094-8ea5-60b921047df0",
  "Root": {
    "alive": true,
    "content": [
      "5659bce2-f0d5-45b8-a73a-0a678c737584"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550440679938,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "9863764b-d5f0-4094-8ea5-60b921047df0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550712180000,
    "parent_id": "847c272f-114e-41a8-ab2c-710754cbdf1a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Store and read the cookies from NSUserDefault"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550440679934,
        "id": "5659bce2-f0d5-45b8-a73a-0a678c737584",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550440679934,
        "parent_id": "9863764b-d5f0-4094-8ea5-60b921047df0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import Foundation\n\n\nclass CookiesSingleton {\n\nstatic let instance : CookiesSingleton = CookiesSingleton()\nstatic var enableDebug = true\n\nfunc loadCookies() {\n    if let cookiesDetails = NSUserDefaults.standardUserDefaults().objectForKey(\"customeWebsite\")  {\n        for (keys,_) in cookiesDetails as! NSDictionary{\n                if let  cookieDict = NSUserDefaults.standardUserDefaults().objectForKey(keys as! String){\n                    if let cookie = NSHTTPCookie(properties:cookieDict as! [String:AnyObject]) {\n                        NSHTTPCookieStorage.sharedHTTPCookieStorage().setCookie(cookie)\n                        if(CookiesSingleton.enableDebug){\n                            print(\"Each Cookies\",cookieDict)\n                        }\n                    }\n                }\n        }\n    }\n}\n\nfunc  removeCookies(){\n    NSURLCache.sharedURLCache().removeAllCachedResponses()\n    NSURLCache.sharedURLCache().diskCapacity = 0\n    NSURLCache.sharedURLCache().memoryCapacity = 0\n    \n    let storage : NSHTTPCookieStorage = NSHTTPCookieStorage.sharedHTTPCookieStorage()\n    for cookie in storage.cookies! {\n        storage.deleteCookie(cookie as NSHTTPCookie)\n    }\n    \n    NSUserDefaults.standardUserDefaults().setValue(\"\", forKey: \"customeWebsite\")\n    NSUserDefaults.standardUserDefaults().synchronize()\n    \n    if(CookiesSingleton.enableDebug){\n        print(\"Cookies Removed\")\n    }\n}\n\nfunc saveCookies() {\n\n    let cookieArray = NSMutableArray()\n    let savedC = NSHTTPCookieStorage.sharedHTTPCookieStorage().cookies\n    \n    let allCookiesDic:NSMutableDictionary = NSMutableDictionary()\n\n    for c : NSHTTPCookie in savedC! {\n\n        let cookieProps = NSMutableDictionary()\n        cookieArray.addObject(c.name)\n        cookieProps.setValue(c.name, forKey: NSHTTPCookieName)\n        cookieProps.setValue(c.value, forKey: NSHTTPCookieValue)\n        cookieProps.setValue(c.domain, forKey: NSHTTPCookieDomain)\n        cookieProps.setValue(c.path, forKey: NSHTTPCookiePath)\n        cookieProps.setValue(c.version, forKey: NSHTTPCookieVersion)\n        cookieProps.setValue(NSDate().dateByAddingTimeInterval(2629743), forKey: NSHTTPCookieExpires)\n\n        allCookiesDic.setValue(cookieProps, forKey: c.name)\n\n    }\n    NSUserDefaults.standardUserDefaults().setValue(allCookiesDic, forKey: \"customeWebsite\")\n    NSUserDefaults.standardUserDefaults().synchronize()\n    \n    if(CookiesSingleton.enableDebug){\n        print(\"Cookies Saved\")\n    }\n}\n\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import Foundation\n\n\nclass CookiesSingleton {\n\nstatic let instance : CookiesSingleton = CookiesSingleton()\nstatic var enableDebug = true\n\nfunc loadCookies() {\n    if let cookiesDetails = NSUserDefaults.standardUserDefaults().objectForKey(\"customeWebsite\")  {\n        for (keys,_) in cookiesDetails as! NSDictionary{\n                if let  cookieDict = NSUserDefaults.standardUserDefaults().objectForKey(keys as! String){\n                    if let cookie = NSHTTPCookie(properties:cookieDict as! [String:AnyObject]) {\n                        NSHTTPCookieStorage.sharedHTTPCookieStorage().setCookie(cookie)\n                        if(CookiesSingleton.enableDebug){\n                            print(\"Each Cookies\",cookieDict)\n                        }\n                    }\n                }\n        }\n    }\n}\n\nfunc  removeCookies(){\n    NSURLCache.sharedURLCache().removeAllCachedResponses()\n    NSURLCache.sharedURLCache().diskCapacity = 0\n    NSURLCache.sharedURLCache().memoryCapacity = 0\n    \n    let storage : NSHTTPCookieStorage = NSHTTPCookieStorage.sharedHTTPCookieStorage()\n    for cookie in storage.cookies! {\n        storage.deleteCookie(cookie as NSHTTPCookie)\n    }\n    \n    NSUserDefaults.standardUserDefaults().setValue(\"\", forKey: \"customeWebsite\")\n    NSUserDefaults.standardUserDefaults().synchronize()\n    \n    if(CookiesSingleton.enableDebug){\n        print(\"Cookies Removed\")\n    }\n}\n\nfunc saveCookies() {\n\n    let cookieArray = NSMutableArray()\n    let savedC = NSHTTPCookieStorage.sharedHTTPCookieStorage().cookies\n    \n    let allCookiesDic:NSMutableDictionary = NSMutableDictionary()\n\n    for c : NSHTTPCookie in savedC! {\n\n        let cookieProps = NSMutableDictionary()\n        cookieArray.addObject(c.name)\n        cookieProps.setValue(c.name, forKey: NSHTTPCookieName)\n        cookieProps.setValue(c.value, forKey: NSHTTPCookieValue)\n        cookieProps.setValue(c.domain, forKey: NSHTTPCookieDomain)\n        cookieProps.setValue(c.path, forKey: NSHTTPCookiePath)\n        cookieProps.setValue(c.version, forKey: NSHTTPCookieVersion)\n        cookieProps.setValue(NSDate().dateByAddingTimeInterval(2629743), forKey: NSHTTPCookieExpires)\n\n        allCookiesDic.setValue(cookieProps, forKey: c.name)\n\n    }\n    NSUserDefaults.standardUserDefaults().setValue(allCookiesDic, forKey: \"customeWebsite\")\n    NSUserDefaults.standardUserDefaults().synchronize()\n    \n    if(CookiesSingleton.enableDebug){\n        print(\"Cookies Saved\")\n    }\n}\n\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Store and read the cookies from NSUserDefault",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}