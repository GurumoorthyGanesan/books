{
  "ID": "632a5330-da66-4b7e-9b7d-835c45225d18",
  "Root": {
    "alive": true,
    "content": [
      "753412de-c6eb-4070-aea4-665d16ba20c6",
      "1916880d-abcb-427d-ada5-d4f1827c20dc",
      "ec2114ae-95db-482b-8242-81547ba5916f",
      "4a82900d-98d2-420b-90a2-05ffeb51bac1",
      "8bd85bb0-49cf-4642-8516-007bd207fdbb"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550396426987,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "632a5330-da66-4b7e-9b7d-835c45225d18",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550651100000,
    "parent_id": "364d948a-b32a-4a45-b1e3-2e149eca790f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Search Bar in Table View Header"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396426983,
        "id": "753412de-c6eb-4070-aea4-665d16ba20c6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396426983,
        "parent_id": "632a5330-da66-4b7e-9b7d-835c45225d18",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example uses a search controller to filter the cells in a table view controller. The search bar is placed inside the header view of the table view. The table view content is offset with the same height as the search bar so that the search bar is hidden at first. Upon scrolling up past the top edge of the table view, the search bar is revealed. Then when the search bar becomes active, it hides the navigation bar."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example uses a search controller to filter the cells in a table view controller. The search bar is placed inside the header view of the table view. The table view content is offset with the same height as the search bar so that the search bar is hidden at first. Upon scrolling up past the top edge of the table view, the search bar is revealed. Then when the search bar becomes active, it hides the navigation bar."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396426987,
        "id": "1916880d-abcb-427d-ada5-d4f1827c20dc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396426987,
        "parent_id": "632a5330-da66-4b7e-9b7d-835c45225d18",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "http://i.stack.imgur.com/rfQUp.gif"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "http://i.stack.imgur.com/rfQUp.gif",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.sohttp:%2F%2Fi.stack.imgur.com%2FrfQUp.gif"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396426987,
        "id": "ec2114ae-95db-482b-8242-81547ba5916f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396426987,
        "parent_id": "632a5330-da66-4b7e-9b7d-835c45225d18",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "http://i.stack.imgur.com/34yk2.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "http://i.stack.imgur.com/34yk2.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.sohttp:%2F%2Fi.stack.imgur.com%2F34yk2.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396426987,
        "id": "4a82900d-98d2-420b-90a2-05ffeb51bac1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396426987,
        "parent_id": "632a5330-da66-4b7e-9b7d-835c45225d18",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Embed a UITableViewController into a UINavigationController to get the UINavigationItem (which contains the navigation bar). Then set our custom ViewController class to inherit from UITableViewController and adopt the UISearchResultsUpdating protocol."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Embed a UITableViewController into a UINavigationController to get the UINavigationItem (which contains the navigation bar). Then set our custom ViewController class to inherit from UITableViewController and adopt the UISearchResultsUpdating protocol."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550396426987,
        "id": "8bd85bb0-49cf-4642-8516-007bd207fdbb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550396426987,
        "parent_id": "632a5330-da66-4b7e-9b7d-835c45225d18",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class ViewController: UITableViewController, UISearchResultsUpdating {\n\n    let entries = [(title: \"Easiest\", image: \"green_circle\"),\n                   (title: \"Intermediate\", image: \"blue_square\"),\n                   (title: \"Advanced\", image: \"black_diamond\"),\n                   (title: \"Expert Only\", image: \"double_black_diamond\")]\n    \n    // An empty tuple that will be updated with search results.\n    var searchResults : [(title: String, image: String)] = []\n    \n    let searchController = UISearchController(searchResultsController: nil)\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        searchController.searchResultsUpdater = self\n        self.definesPresentationContext = true\n\n        // Place the search bar in the table view's header.\n        self.tableView.tableHeaderView = searchController.searchBar\n\n        // Set the content offset to the height of the search bar's height\n        // to hide it when the view is first presented.\n        self.tableView.contentOffset = CGPoint(x: 0, y: searchController.searchBar.frame.height)\n    }\n    \n    func filterContent(for searchText: String) {\n        // Update the searchResults array with matches\n        // in our entries based on the title value.\n        searchResults = entries.filter({ (title: String, image: String) -\u003e Bool in\n            let match = title.range(of: searchText, options: .caseInsensitive)\n            // Return the tuple if the range contains a match.\n            return match != nil\n        })\n    }\n\n    // MARK: - UISearchResultsUpdating method\n    \n    func updateSearchResults(for searchController: UISearchController) {\n        // If the search bar contains text, filter our data with the string\n        if let searchText = searchController.searchBar.text {\n            filterContent(for: searchText)\n            // Reload the table view with the search result data.\n            tableView.reloadData()\n        }\n    }\n\n    // MARK: - UITableViewController methods\n    \n    override func numberOfSections(in tableView: UITableView) -\u003e Int { return 1 }\n\n    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {\n        // If the search bar is active, use the searchResults data.\n        return searchController.isActive ? searchResults.count : entries.count\n    }\n    \n    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {\n        // If the search bar is active, use the searchResults data.\n        let entry = searchController.isActive ? \n                    searchResults[indexPath.row] : entries[indexPath.row]\n        \n        let cell = tableView.dequeueReusableCell(withIdentifier: \"Cell\", for: indexPath)\n        cell.textLabel?.text = entry.title\n        cell.imageView?.image = UIImage(named: entry.image)\n        return cell\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class ViewController: UITableViewController, UISearchResultsUpdating {\n\n    let entries = [(title: \"Easiest\", image: \"green_circle\"),\n                   (title: \"Intermediate\", image: \"blue_square\"),\n                   (title: \"Advanced\", image: \"black_diamond\"),\n                   (title: \"Expert Only\", image: \"double_black_diamond\")]\n    \n    // An empty tuple that will be updated with search results.\n    var searchResults : [(title: String, image: String)] = []\n    \n    let searchController = UISearchController(searchResultsController: nil)\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        searchController.searchResultsUpdater = self\n        self.definesPresentationContext = true\n\n        // Place the search bar in the table view's header.\n        self.tableView.tableHeaderView = searchController.searchBar\n\n        // Set the content offset to the height of the search bar's height\n        // to hide it when the view is first presented.\n        self.tableView.contentOffset = CGPoint(x: 0, y: searchController.searchBar.frame.height)\n    }\n    \n    func filterContent(for searchText: String) {\n        // Update the searchResults array with matches\n        // in our entries based on the title value.\n        searchResults = entries.filter({ (title: String, image: String) -\u003e Bool in\n            let match = title.range(of: searchText, options: .caseInsensitive)\n            // Return the tuple if the range contains a match.\n            return match != nil\n        })\n    }\n\n    // MARK: - UISearchResultsUpdating method\n    \n    func updateSearchResults(for searchController: UISearchController) {\n        // If the search bar contains text, filter our data with the string\n        if let searchText = searchController.searchBar.text {\n            filterContent(for: searchText)\n            // Reload the table view with the search result data.\n            tableView.reloadData()\n        }\n    }\n\n    // MARK: - UITableViewController methods\n    \n    override func numberOfSections(in tableView: UITableView) -\u003e Int { return 1 }\n\n    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {\n        // If the search bar is active, use the searchResults data.\n        return searchController.isActive ? searchResults.count : entries.count\n    }\n    \n    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {\n        // If the search bar is active, use the searchResults data.\n        let entry = searchController.isActive ? \n                    searchResults[indexPath.row] : entries[indexPath.row]\n        \n        let cell = tableView.dequeueReusableCell(withIdentifier: \"Cell\", for: indexPath)\n        cell.textLabel?.text = entry.title\n        cell.imageView?.image = UIImage(named: entry.image)\n        return cell\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Search Bar in Table View Header",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}