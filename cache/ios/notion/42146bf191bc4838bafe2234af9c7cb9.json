{
  "ID": "42146bf1-91bc-4838-bafe-2234af9c7cb9",
  "Root": {
    "alive": true,
    "content": [
      "40e87fc9-2611-4535-aa5f-fd23cd80aa70",
      "72296384-c6a4-4956-bc50-ca5a22b61ebe",
      "7228e525-de22-4453-9677-28718434b97a",
      "9fc8c92b-4b2f-4841-8380-1f94758e8a1a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550440645834,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "42146bf1-91bc-4838-bafe-2234af9c7cb9",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550712120000,
    "parent_id": "89a8006e-e11e-41f0-be2a-f75b45cac04b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Load music with MPMediaPickerControllerDelegate and play it with AVAudioPlayer"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550440645830,
        "id": "40e87fc9-2611-4535-aa5f-fd23cd80aa70",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550440645830,
        "parent_id": "42146bf1-91bc-4838-bafe-2234af9c7cb9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Go through the steps:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Go through the steps:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550440645833,
        "id": "72296384-c6a4-4956-bc50-ca5a22b61ebe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550440645833,
        "parent_id": "42146bf1-91bc-4838-bafe-2234af9c7cb9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Add ‘NSAppleMusicUsageDescription’ to your Info.plist for the privacy authority."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Add ‘NSAppleMusicUsageDescription’ to your Info.plist for the privacy authority."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550440645834,
        "id": "7228e525-de22-4453-9677-28718434b97a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550440645834,
        "parent_id": "42146bf1-91bc-4838-bafe-2234af9c7cb9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Make sure your music is available in your iPhone. It will not work in the simulator."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Make sure your music is available in your iPhone. It will not work in the simulator."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550440645834,
        "id": "9fc8c92b-4b2f-4841-8380-1f94758e8a1a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550440645834,
        "parent_id": "42146bf1-91bc-4838-bafe-2234af9c7cb9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import UIKit\nimport AVFoundation\nimport MediaPlayer\n\nclass ViewController: UIViewController, MPMediaPickerControllerDelegate {\n    \n    var avMusicPlayer: AVAudioPlayer!\n    var mpMediapicker: MPMediaPickerController!\n    var mediaItems = [MPMediaItem]()\n    let currentIndex = 0\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n    }\n    \n    func audioPlayerDidFinishPlaying(_ player: AVAudioPlayer, successfully flag: Bool){\n        //What to do?\n    }\n\n    func mediaPicker(_ mediaPicker: MPMediaPickerController, didPickMediaItems mediaItemCollection: MPMediaItemCollection) {\n        mediaItems = mediaItemCollection.items\n        updatePlayer()\n        self.dismiss(animated: true, completion: nil)\n    }\n\n    func updatePlayer(){\n        let item = mediaItems[currentIndex]\n        // DO-TRY-CATCH try to setup AVAudioPlayer with the path, if successful, sets up the AVMusicPlayer, and song values.\n        if let path: NSURL = item.assetURL as NSURL? {\n            do\n            {\n                avMusicPlayer = try AVAudioPlayer(contentsOf: path as URL)\n                avMusicPlayer.enableRate = true\n                avMusicPlayer.rate = 1.0\n                avMusicPlayer.numberOfLoops = 0\n                avMusicPlayer.currentTime = 0\n            }\n            catch\n            {\n                avMusicPlayer = nil\n            }\n        }\n    }\n\n    @IBAction func Play(_ sender: AnyObject) {\n        //AVMusicPlayer.deviceCurrentTime\n        avMusicPlayer.play()\n    }\n\n    @IBAction func Stop(_ sender: AnyObject) {\n        avMusicPlayer.stop()\n    }\n\n    @IBAction func picker(_ sender: AnyObject) {\n        mpMediapicker = MPMediaPickerController.self(mediaTypes:MPMediaType.music)\n        mpMediapicker.allowsPickingMultipleItems = false\n        mpMediapicker.delegate = self\n        self.present(mpMediapicker, animated: true, completion: nil)\n    }\n    \n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import UIKit\nimport AVFoundation\nimport MediaPlayer\n\nclass ViewController: UIViewController, MPMediaPickerControllerDelegate {\n    \n    var avMusicPlayer: AVAudioPlayer!\n    var mpMediapicker: MPMediaPickerController!\n    var mediaItems = [MPMediaItem]()\n    let currentIndex = 0\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n    }\n    \n    func audioPlayerDidFinishPlaying(_ player: AVAudioPlayer, successfully flag: Bool){\n        //What to do?\n    }\n\n    func mediaPicker(_ mediaPicker: MPMediaPickerController, didPickMediaItems mediaItemCollection: MPMediaItemCollection) {\n        mediaItems = mediaItemCollection.items\n        updatePlayer()\n        self.dismiss(animated: true, completion: nil)\n    }\n\n    func updatePlayer(){\n        let item = mediaItems[currentIndex]\n        // DO-TRY-CATCH try to setup AVAudioPlayer with the path, if successful, sets up the AVMusicPlayer, and song values.\n        if let path: NSURL = item.assetURL as NSURL? {\n            do\n            {\n                avMusicPlayer = try AVAudioPlayer(contentsOf: path as URL)\n                avMusicPlayer.enableRate = true\n                avMusicPlayer.rate = 1.0\n                avMusicPlayer.numberOfLoops = 0\n                avMusicPlayer.currentTime = 0\n            }\n            catch\n            {\n                avMusicPlayer = nil\n            }\n        }\n    }\n\n    @IBAction func Play(_ sender: AnyObject) {\n        //AVMusicPlayer.deviceCurrentTime\n        avMusicPlayer.play()\n    }\n\n    @IBAction func Stop(_ sender: AnyObject) {\n        avMusicPlayer.stop()\n    }\n\n    @IBAction func picker(_ sender: AnyObject) {\n        mpMediapicker = MPMediaPickerController.self(mediaTypes:MPMediaType.music)\n        mpMediapicker.allowsPickingMultipleItems = false\n        mpMediapicker.delegate = self\n        self.present(mpMediapicker, animated: true, completion: nil)\n    }\n    \n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Load music with MPMediaPickerControllerDelegate and play it with AVAudioPlayer",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}