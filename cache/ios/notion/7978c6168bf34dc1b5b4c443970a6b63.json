{
  "ID": "7978c616-8bf3-4dc1-b5b4-c443970a6b63",
  "Root": {
    "alive": true,
    "content": [
      "f1776a10-f1a1-43b0-95a8-8ce282ddcb8c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550398358905,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "7978c616-8bf3-4dc1-b5b4-c443970a6b63",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550654760000,
    "parent_id": "e097ad83-05f2-4ba8-bac4-71c4d0b9dae8",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Form validation using NSPredicate"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550398358902,
        "id": "f1776a10-f1a1-43b0-95a8-8ce282ddcb8c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550398358902,
        "parent_id": "7978c616-8bf3-4dc1-b5b4-c443970a6b63",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "NSString *emailRegex = @\"[A-Z0-9a-z]([A-Z0-9a-z._-]{0,64})+[A-Z0-9a-z]+@[A-Z0-9a-z]+([A-Za-z0-9.-]{0,64})+([A-Z0-9a-z])+\\\\.[A-Za-z]{2,4}\";    NSString *firstNameRegex = @\"[0-9A-Za-z\\\"'-]{2,32}$\";\nNSString *firstNameRegex = @\"[ 0-9A-Za-z]{2,32}$\";\nNSString *lastNameRegex = @\"[0-9A-Za-z\\\"'-]{2,32}$\";\nNSString *mobileNumberRegEx = @\"^[0-9]{10}$\";\nNSString *zipcodeRegEx = @\"^[0-9]{5}$\";\nNSString *SSNRegEx = @\"^\\\\d{3}-?\\\\d{2}-?\\\\d{4}$\";\nNSString *addressRegEx = @\"^[ A-Za-z0-9]{2,32}$\";\nNSString *cityRegEx = @\"^[ A-Za-z0-9]{2,25}$\";\nNSString *PINRegEx = @\"^[0-9]{4}$\";\nNSString *driversLiscRegEx = @\"^[0-9a-zA-Z]{5,20}$\";\n\n-(BOOL)validateEmail {\n    //Email address field should give an error when the email address begins with \".\",\"-\",\"_\" .\n    NSPredicate *emailPredicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", emailRegex];   \n    return ([emailPredicate evaluateWithObject:self.text] \u0026\u0026 self.text.length \u003c= 64 \u0026\u0026 ([self.text rangeOfString:@\"..\"].location == NSNotFound));\n}\n\n- (BOOL)validateFirstName {\n    NSPredicate *firstNamePredicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", firstNameRegex];\n    return [firstNamePredicate evaluateWithObject:self.text];\n}\n\n- (BOOL)validateLastName {\n    NSPredicate *lastNamePredicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", lastNameRegex];\n    return [lastNamePredicate evaluateWithObject:self.text];\n}\n\n- (BOOL)validateAlphaNumericMin2Max32 {\n    NSPredicate *firstNamePredicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", firstNameRegex];\n    return [firstNamePredicate evaluateWithObject:self.text];\n}\n\n- (BOOL)validateMobileNumber {\n    NSString *strippedMobileNumber =  [[[[self.text stringByReplacingOccurrencesOfString:@\"(\" withString:@\"\"]\n                                        stringByReplacingOccurrencesOfString:@\")\" withString:@\"\"]\n                                        stringByReplacingOccurrencesOfString:@\"-\" withString:@\"\"]\n                                        stringByReplacingOccurrencesOfString:@\" \" withString:@\"\"];\n    \n    NSPredicate *mobileNumberPredicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", mobileNumberRegEx];\n    \n    return [mobileNumberPredicate evaluateWithObject:strippedMobileNumber];\n}\n\n- (BOOL)validateZipcode {\n    NSPredicate *zipcodePredicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", zipcodeRegEx];\n    \n    return [zipcodePredicate evaluateWithObject:self.text];\n}\n\n- (BOOL)validateSSN {\nNSPredicate *predicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", SSNRegEx];\n\nreturn [predicate evaluateWithObject:self.text];\n}\n\n- (BOOL)validateAddress {\n    NSPredicate *predicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", addressRegEx];\n    \n    return [predicate evaluateWithObject:self.text];\n}\n\n- (BOOL)validateCity {\n    NSPredicate *predicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", cityRegEx];\n    return [predicate evaluateWithObject:self.text];\n}\n\n- (BOOL)validatePIN {\n    NSPredicate *predicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", PINRegEx];    \n    return [predicate evaluateWithObject:self.text];\n}\n   - (BOOL)validateDriversLiscNumber {\n    if([self.text length] \u003e 20) {\n        return NO;\n    }\n    NSPredicate *driversLiscPredicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", driversLiscRegEx];\n    \n    return [driversLiscPredicate evaluateWithObject:self.text];\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "NSString *emailRegex = @\"[A-Z0-9a-z]([A-Z0-9a-z._-]{0,64})+[A-Z0-9a-z]+@[A-Z0-9a-z]+([A-Za-z0-9.-]{0,64})+([A-Z0-9a-z])+\\\\.[A-Za-z]{2,4}\";    NSString *firstNameRegex = @\"[0-9A-Za-z\\\"'-]{2,32}$\";\nNSString *firstNameRegex = @\"[ 0-9A-Za-z]{2,32}$\";\nNSString *lastNameRegex = @\"[0-9A-Za-z\\\"'-]{2,32}$\";\nNSString *mobileNumberRegEx = @\"^[0-9]{10}$\";\nNSString *zipcodeRegEx = @\"^[0-9]{5}$\";\nNSString *SSNRegEx = @\"^\\\\d{3}-?\\\\d{2}-?\\\\d{4}$\";\nNSString *addressRegEx = @\"^[ A-Za-z0-9]{2,32}$\";\nNSString *cityRegEx = @\"^[ A-Za-z0-9]{2,25}$\";\nNSString *PINRegEx = @\"^[0-9]{4}$\";\nNSString *driversLiscRegEx = @\"^[0-9a-zA-Z]{5,20}$\";\n\n-(BOOL)validateEmail {\n    //Email address field should give an error when the email address begins with \".\",\"-\",\"_\" .\n    NSPredicate *emailPredicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", emailRegex];   \n    return ([emailPredicate evaluateWithObject:self.text] \u0026\u0026 self.text.length \u003c= 64 \u0026\u0026 ([self.text rangeOfString:@\"..\"].location == NSNotFound));\n}\n\n- (BOOL)validateFirstName {\n    NSPredicate *firstNamePredicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", firstNameRegex];\n    return [firstNamePredicate evaluateWithObject:self.text];\n}\n\n- (BOOL)validateLastName {\n    NSPredicate *lastNamePredicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", lastNameRegex];\n    return [lastNamePredicate evaluateWithObject:self.text];\n}\n\n- (BOOL)validateAlphaNumericMin2Max32 {\n    NSPredicate *firstNamePredicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", firstNameRegex];\n    return [firstNamePredicate evaluateWithObject:self.text];\n}\n\n- (BOOL)validateMobileNumber {\n    NSString *strippedMobileNumber =  [[[[self.text stringByReplacingOccurrencesOfString:@\"(\" withString:@\"\"]\n                                        stringByReplacingOccurrencesOfString:@\")\" withString:@\"\"]\n                                        stringByReplacingOccurrencesOfString:@\"-\" withString:@\"\"]\n                                        stringByReplacingOccurrencesOfString:@\" \" withString:@\"\"];\n    \n    NSPredicate *mobileNumberPredicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", mobileNumberRegEx];\n    \n    return [mobileNumberPredicate evaluateWithObject:strippedMobileNumber];\n}\n\n- (BOOL)validateZipcode {\n    NSPredicate *zipcodePredicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", zipcodeRegEx];\n    \n    return [zipcodePredicate evaluateWithObject:self.text];\n}\n\n- (BOOL)validateSSN {\nNSPredicate *predicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", SSNRegEx];\n\nreturn [predicate evaluateWithObject:self.text];\n}\n\n- (BOOL)validateAddress {\n    NSPredicate *predicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", addressRegEx];\n    \n    return [predicate evaluateWithObject:self.text];\n}\n\n- (BOOL)validateCity {\n    NSPredicate *predicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", cityRegEx];\n    return [predicate evaluateWithObject:self.text];\n}\n\n- (BOOL)validatePIN {\n    NSPredicate *predicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", PINRegEx];    \n    return [predicate evaluateWithObject:self.text];\n}\n   - (BOOL)validateDriversLiscNumber {\n    if([self.text length] \u003e 20) {\n        return NO;\n    }\n    NSPredicate *driversLiscPredicate = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", driversLiscRegEx];\n    \n    return [driversLiscPredicate evaluateWithObject:self.text];\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Form validation using NSPredicate",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}