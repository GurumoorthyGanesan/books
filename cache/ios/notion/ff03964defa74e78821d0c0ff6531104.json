{
  "ID": "ff03964d-efa7-4e78-821d-0c0ff6531104",
  "Root": {
    "alive": true,
    "content": [
      "2b7fcd1c-0166-4ada-bffd-c0ddf113b997"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550439479852,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ff03964d-efa7-4e78-821d-0c0ff6531104",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550654580000,
    "parent_id": "b5a324d7-bc78-4248-862e-18d76525e6ff",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Speech to text Recognize speech from a bundle contained audio recording"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550439479849,
        "id": "2b7fcd1c-0166-4ada-bffd-c0ddf113b997",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550439479849,
        "parent_id": "ff03964d-efa7-4e78-821d-0c0ff6531104",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//import Speech\n//import AVFoundation\n\n// create a text field to show speech output\n@IBOutlet weak var transcriptionTextField: UITextView!\n// we need this audio player to play audio\nvar audioPlayer: AVAudioPlayer!\n\noverride func viewDidLoad()\n{\n    super.viewDidLoad()\n}\n\n// this function is required to stop audio on audio completion otherwise it will play same audio again and again \nfunc audioPlayerDidFinishPlaying(_ player: AVAudioPlayer, successfully flag: Bool)\n{\n    player.stop()\n}\n\n// this function is required to get a speech recognizer and after that make and request to speech recognizer \nfunc requestSpeechAuth()\n{\n    SFSpeechRecognizer.requestAuthorization { authStatus in\n        if authStatus == SFSpeechRecognizerAuthorizationStatus.authorized {\n            if let path = Bundle.main.url(forResource: \"mpthreetest\", withExtension: \"m4a\") {\n                do {\n                    let sound = try AVAudioPlayer(contentsOf: path)\n                    self.audioPlayer = sound\n                    self.audioPlayer.delegate = self\n                    sound.play()\n                }   catch {\n                    print(\"error\")\n                }\n                \n                let recognizer = SFSpeechRecognizer()\n                let request = SFSpeechURLRecognitionRequest(url:path)\n                recognizer?.recognitionTask(with: request) { (result, error) in\n                    if let error = error {\n                    print(\"there is a error\\(error)\")\n                    } else {\n// here you are printing out the audio output basically showing it on uitext field\n                        self.transcriptionTextField.text = result?.bestTranscription.formattedString\n                    }\n                }\n            }\n        }\n    }\n}\n\n// here you are calling requestSpeechAuth function on UIButton press\n@IBAction func playButtonPress(_ sender: AnyObject)\n{\n    requestSpeechAuth()\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//import Speech\n//import AVFoundation\n\n// create a text field to show speech output\n@IBOutlet weak var transcriptionTextField: UITextView!\n// we need this audio player to play audio\nvar audioPlayer: AVAudioPlayer!\n\noverride func viewDidLoad()\n{\n    super.viewDidLoad()\n}\n\n// this function is required to stop audio on audio completion otherwise it will play same audio again and again \nfunc audioPlayerDidFinishPlaying(_ player: AVAudioPlayer, successfully flag: Bool)\n{\n    player.stop()\n}\n\n// this function is required to get a speech recognizer and after that make and request to speech recognizer \nfunc requestSpeechAuth()\n{\n    SFSpeechRecognizer.requestAuthorization { authStatus in\n        if authStatus == SFSpeechRecognizerAuthorizationStatus.authorized {\n            if let path = Bundle.main.url(forResource: \"mpthreetest\", withExtension: \"m4a\") {\n                do {\n                    let sound = try AVAudioPlayer(contentsOf: path)\n                    self.audioPlayer = sound\n                    self.audioPlayer.delegate = self\n                    sound.play()\n                }   catch {\n                    print(\"error\")\n                }\n                \n                let recognizer = SFSpeechRecognizer()\n                let request = SFSpeechURLRecognitionRequest(url:path)\n                recognizer?.recognitionTask(with: request) { (result, error) in\n                    if let error = error {\n                    print(\"there is a error\\(error)\")\n                    } else {\n// here you are printing out the audio output basically showing it on uitext field\n                        self.transcriptionTextField.text = result?.bestTranscription.formattedString\n                    }\n                }\n            }\n        }\n    }\n}\n\n// here you are calling requestSpeechAuth function on UIButton press\n@IBAction func playButtonPress(_ sender: AnyObject)\n{\n    requestSpeechAuth()\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Speech to text Recognize speech from a bundle contained audio recording",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}