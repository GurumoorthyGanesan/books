{
  "ID": "ed2bdb24-9e34-4616-9ec5-388303df4e49",
  "Root": {
    "alive": true,
    "content": [
      "0af0f67b-47bd-4f95-a7c1-8444cf3a936d",
      "fffba37b-e22f-4362-8afc-206fdf9fda12",
      "e074e22f-0983-48bc-9b80-d79bede13890",
      "e29c210b-36b0-4eae-84f6-4116c7c5a962",
      "b45aaab8-66e8-4260-9ef9-6d0f8177d9f1",
      "ede4744d-2056-493e-a0c3-2ae2788a6ef2",
      "5fac6d88-26aa-4799-8e6c-529c5d77171a",
      "cd444f26-8ede-4051-a6a4-40186ce91d68",
      "805ae82f-2af6-4e1f-b00c-ad019eb02fb1",
      "cddd8544-6806-41b3-b6d6-2516df6c916a",
      "ced3d2d5-2cfb-4d43-9251-6bcacca5bd9f",
      "bcd3ac87-4764-4a67-aab5-532a2729f860",
      "84a397a6-27d6-49b0-9044-8cf118d3fc23",
      "4d89c46c-9842-425b-b6fa-1b5ede2d68cc",
      "487c763c-b36b-4310-ad25-be79ff9f724b",
      "4d5f3e48-6cdf-4253-9413-66bc5c7cec94",
      "1f8ae9d7-3bf7-4c9d-b902-e08200768b4d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550398206823,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ed2bdb24-9e34-4616-9ec5-388303df4e49",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550653860000,
    "parent_id": "a611ae19-6fe2-41db-84b2-aaf3937f742a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Adding test methods"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550398206807,
        "id": "0af0f67b-47bd-4f95-a7c1-8444cf3a936d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550398206807,
        "parent_id": "ed2bdb24-9e34-4616-9ec5-388303df4e49",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "According to Apple:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "According to Apple:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550398206810,
        "id": "fffba37b-e22f-4362-8afc-206fdf9fda12",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550398206810,
        "parent_id": "ed2bdb24-9e34-4616-9ec5-388303df4e49",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Test Methods"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Test Methods"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550398206810,
        "id": "e074e22f-0983-48bc-9b80-d79bede13890",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550398206810,
        "parent_id": "ed2bdb24-9e34-4616-9ec5-388303df4e49",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A test method is an instance method of a test class that begins with the prefix test, takes no parameters, and returns void, for example, (void)testColorIsRed(). A test method exercises code in your project and, if that code does not produce the expected result, reports failures using a set of assertion APIs. For example, a function’s return value might be compared against an expected value or your test might assert that improper use of a method in one of your classes throws an exception."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A test method is an instance method of a test class that begins with the prefix test, takes no parameters, and returns void, for example, (void)testColorIsRed(). A test method exercises code in your project and, if that code does not produce the expected result, reports failures using a set of assertion APIs. For example, a function’s return value might be compared against an expected value or your test might assert that improper use of a method in one of your classes throws an exception."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550398206810,
        "id": "e29c210b-36b0-4eae-84f6-4116c7c5a962",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550398206810,
        "parent_id": "ed2bdb24-9e34-4616-9ec5-388303df4e49",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So we add a test method using “test” as the prefix of the method, like:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So we add a test method using “test” as the prefix of the method, like:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550398206810,
        "id": "b45aaab8-66e8-4260-9ef9-6d0f8177d9f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550398206810,
        "parent_id": "ed2bdb24-9e34-4616-9ec5-388303df4e49",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Swift"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Swift"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550398206810,
        "id": "ede4744d-2056-493e-a0c3-2ae2788a6ef2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550398206810,
        "parent_id": "ed2bdb24-9e34-4616-9ec5-388303df4e49",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "func testSomething() {\n\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "func testSomething() {\n\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550398206811,
        "id": "5fac6d88-26aa-4799-8e6c-529c5d77171a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550398206811,
        "parent_id": "ed2bdb24-9e34-4616-9ec5-388303df4e49",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Objective-C"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Objective-C"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550398206811,
        "id": "cd444f26-8ede-4051-a6a4-40186ce91d68",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550398206811,
        "parent_id": "ed2bdb24-9e34-4616-9ec5-388303df4e49",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "- (void)testSomething {\n\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "- (void)testSomething {\n\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550398206811,
        "id": "805ae82f-2af6-4e1f-b00c-ad019eb02fb1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550398206811,
        "parent_id": "ed2bdb24-9e34-4616-9ec5-388303df4e49",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To actually test the results, we use "
            ],
            [
              "XCTAssert()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method, which takes a boolean expression, and if true, marks the test as succeeded, else it will mark it as failed."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To actually test the results, we use "
          },
          {
            "Text": "XCTAssert()",
            "AttrFlags": 2
          },
          {
            "Text": " method, which takes a boolean expression, and if true, marks the test as succeeded, else it will mark it as failed."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550398206822,
        "id": "cddd8544-6806-41b3-b6d6-2516df6c916a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550398206822,
        "parent_id": "ed2bdb24-9e34-4616-9ec5-388303df4e49",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s say we have a method in View Controller class called "
            ],
            [
              "sum()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which calculates sum of two numbers. To test it, we use this method:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s say we have a method in View Controller class called "
          },
          {
            "Text": "sum()",
            "AttrFlags": 2
          },
          {
            "Text": " which calculates sum of two numbers. To test it, we use this method:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550398206822,
        "id": "ced3d2d5-2cfb-4d43-9251-6bcacca5bd9f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550398206822,
        "parent_id": "ed2bdb24-9e34-4616-9ec5-388303df4e49",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Swift"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Swift"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550398206822,
        "id": "bcd3ac87-4764-4a67-aab5-532a2729f860",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550398206822,
        "parent_id": "ed2bdb24-9e34-4616-9ec5-388303df4e49",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "func testSum(){\n    let result = viewController.sum(4, and: 5)\n    XCTAssertEqual(result, 9)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "func testSum(){\n    let result = viewController.sum(4, and: 5)\n    XCTAssertEqual(result, 9)\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550398206822,
        "id": "84a397a6-27d6-49b0-9044-8cf118d3fc23",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550398206822,
        "parent_id": "ed2bdb24-9e34-4616-9ec5-388303df4e49",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Objective-C"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Objective-C"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550398206822,
        "id": "4d89c46c-9842-425b-b6fa-1b5ede2d68cc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550398206822,
        "parent_id": "ed2bdb24-9e34-4616-9ec5-388303df4e49",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "- (void)testSum {\n    int result = [viewController sum:4 and:5];\n    XCTAssertEqual(result, 9);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "- (void)testSum {\n    int result = [viewController sum:4 and:5];\n    XCTAssertEqual(result, 9);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550398206822,
        "id": "487c763c-b36b-4310-ad25-be79ff9f724b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550398206822,
        "parent_id": "ed2bdb24-9e34-4616-9ec5-388303df4e49",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550398206823,
        "id": "4d5f3e48-6cdf-4253-9413-66bc5c7cec94",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550398206823,
        "parent_id": "ed2bdb24-9e34-4616-9ec5-388303df4e49",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By default, you can’t access label, text box or other UI items of the View Controller class from test class if they are first made in Storyboard file. This is because they are initialized in "
            ],
            [
              "loadView()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method of the View Controller class, and this will not be called when testing. The best way to call "
            ],
            [
              "loadView()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and all other required methods is accessing the "
            ],
            [
              "view",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " property of our "
            ],
            [
              "viewController",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " property. You should add this line before testing UI elements:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By default, you can’t access label, text box or other UI items of the View Controller class from test class if they are first made in Storyboard file. This is because they are initialized in "
          },
          {
            "Text": "loadView()",
            "AttrFlags": 2
          },
          {
            "Text": " method of the View Controller class, and this will not be called when testing. The best way to call "
          },
          {
            "Text": "loadView()",
            "AttrFlags": 2
          },
          {
            "Text": " and all other required methods is accessing the "
          },
          {
            "Text": "view",
            "AttrFlags": 2
          },
          {
            "Text": " property of our "
          },
          {
            "Text": "viewController",
            "AttrFlags": 2
          },
          {
            "Text": " property. You should add this line before testing UI elements:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550398206823,
        "id": "1f8ae9d7-3bf7-4c9d-b902-e08200768b4d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550398206823,
        "parent_id": "ed2bdb24-9e34-4616-9ec5-388303df4e49",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "XCTAssertNotNil(viewController.view)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "XCTAssertNotNil(viewController.view)",
        "code_language": "Plain Text"
      }
    ],
    "title": "Adding test methods",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}