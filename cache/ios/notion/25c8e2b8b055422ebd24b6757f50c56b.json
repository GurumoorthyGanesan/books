{
  "ID": "25c8e2b8-b055-422e-bd24-b6757f50c56b",
  "Root": {
    "alive": true,
    "content": [
      "e259d179-276f-4d66-9a49-3d851a10cad9",
      "9cc53974-8915-44c0-9b59-ebce90daf812",
      "a54ed6b3-5a02-484e-881d-6f73adb727f9",
      "6ceef62f-3134-4ecb-92f4-708d7cf8253a",
      "c12fddb2-3111-46f6-ba58-677542991385",
      "c74f56f0-13d9-41ae-9c3d-354cdf31c649"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550394436832,
    "id": "25c8e2b8-b055-422e-bd24-b6757f50c56b",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550482980000,
    "parent_id": "617ce87f-342c-4508-8060-64e96ea6829f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Verify if is connected to network"
        ]
      ]
    },
    "type": "page",
    "version": 6,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550394436829,
        "id": "e259d179-276f-4d66-9a49-3d851a10cad9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550394436829,
        "parent_id": "25c8e2b8-b055-422e-bd24-b6757f50c56b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Swift",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Swift",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550394436831,
        "id": "9cc53974-8915-44c0-9b59-ebce90daf812",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550394436831,
        "parent_id": "25c8e2b8-b055-422e-bd24-b6757f50c56b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import SystemConfiguration\n\n/// Class helps to code reuse in handling internet network connections.\nclass NetworkHelper {\n\n    /**\n     Verify if the device is connected to internet network.\n     - returns:          true if is connected to any internet network, false if is not\n     connected to any internet network.\n     */\n   class func isConnectedToNetwork() -\u003e Bool {\n       var zeroAddress = sockaddr_in()\n    \n       zeroAddress.sin_len = UInt8(sizeofValue(zeroAddress))\n       zeroAddress.sin_family = sa_family_t(AF_INET)\n    \n       let defaultRouteReachability = withUnsafePointer(\u0026zeroAddress) {\n           SCNetworkReachabilityCreateWithAddress(nil, UnsafePointer($0))\n       }\n    \n       var flags = SCNetworkReachabilityFlags()\n    \n       if !SCNetworkReachabilityGetFlags(defaultRouteReachability!, \u0026flags) {\n           return false\n       }\n    \n       let isReachable = (flags.rawValue \u0026 UInt32(kSCNetworkFlagsReachable)) != 0\n       let needsConnection = (flags.rawValue \u0026 UInt32(kSCNetworkFlagsConnectionRequired)) != 0\n    \n      return (isReachable \u0026\u0026 !needsConnection)\n   }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import SystemConfiguration\n\n/// Class helps to code reuse in handling internet network connections.\nclass NetworkHelper {\n\n    /**\n     Verify if the device is connected to internet network.\n     - returns:          true if is connected to any internet network, false if is not\n     connected to any internet network.\n     */\n   class func isConnectedToNetwork() -\u003e Bool {\n       var zeroAddress = sockaddr_in()\n    \n       zeroAddress.sin_len = UInt8(sizeofValue(zeroAddress))\n       zeroAddress.sin_family = sa_family_t(AF_INET)\n    \n       let defaultRouteReachability = withUnsafePointer(\u0026zeroAddress) {\n           SCNetworkReachabilityCreateWithAddress(nil, UnsafePointer($0))\n       }\n    \n       var flags = SCNetworkReachabilityFlags()\n    \n       if !SCNetworkReachabilityGetFlags(defaultRouteReachability!, \u0026flags) {\n           return false\n       }\n    \n       let isReachable = (flags.rawValue \u0026 UInt32(kSCNetworkFlagsReachable)) != 0\n       let needsConnection = (flags.rawValue \u0026 UInt32(kSCNetworkFlagsConnectionRequired)) != 0\n    \n      return (isReachable \u0026\u0026 !needsConnection)\n   }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550394436831,
        "id": "a54ed6b3-5a02-484e-881d-6f73adb727f9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550394436831,
        "parent_id": "25c8e2b8-b055-422e-bd24-b6757f50c56b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if NetworkHelper.isConnectedToNetwork() {\n    // Is connected to network\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if NetworkHelper.isConnectedToNetwork() {\n    // Is connected to network\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550394436831,
        "id": "6ceef62f-3134-4ecb-92f4-708d7cf8253a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550394436831,
        "parent_id": "25c8e2b8-b055-422e-bd24-b6757f50c56b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Objective-C:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Objective-C:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550394436832,
        "id": "c12fddb2-3111-46f6-ba58-677542991385",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550394436832,
        "parent_id": "25c8e2b8-b055-422e-bd24-b6757f50c56b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "we can check network connectivity within few lines of code as:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "we can check network connectivity within few lines of code as:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550394436832,
        "id": "c74f56f0-13d9-41ae-9c3d-354cdf31c649",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550482980000,
        "parent_id": "25c8e2b8-b055-422e-bd24-b6757f50c56b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Objective-C"
            ]
          ],
          "title": [
            [
              "-(BOOL)isConntectedToNetwork\n{\n    Reachability *networkReachability = [Reachability reachabilityForInternetConnection];\n    NetworkStatus networkStatus = [networkReachability currentReachabilityStatus];\n    if (networkStatus == NotReachable)\n    {\n        NSLog(@\"There IS NO internet connection\");\n        return false;\n    } else\n    {\n        NSLog(@\"There IS internet connection\");\n        return true;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "-(BOOL)isConntectedToNetwork\n{\n    Reachability *networkReachability = [Reachability reachabilityForInternetConnection];\n    NetworkStatus networkStatus = [networkReachability currentReachabilityStatus];\n    if (networkStatus == NotReachable)\n    {\n        NSLog(@\"There IS NO internet connection\");\n        return false;\n    } else\n    {\n        NSLog(@\"There IS internet connection\");\n        return true;\n    }\n}",
        "code_language": "Objective-C"
      }
    ],
    "title": "Verify if is connected to network"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}