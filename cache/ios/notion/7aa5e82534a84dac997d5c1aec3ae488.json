{
  "ID": "7aa5e825-34a8-4dac-997d-5c1aec3ae488",
  "Root": {
    "alive": true,
    "content": [
      "ce655b68-6ce6-447c-9b76-80f732665b33",
      "24c3e0f4-a5ae-4504-85f9-3b740e77a8ca",
      "47c98dee-85f6-4a71-8199-c9dd0cbda54d",
      "3c34094f-827d-4e71-b866-9529a244f3a7",
      "b867eda6-7d08-47fb-a181-573173bcecb3",
      "3412e784-8c54-4b6d-8fb7-22fc3265191b",
      "2a3b8e12-aff4-48c7-abaa-bf238e5c0451",
      "c0026a7c-663d-4e86-92dc-be3efde6c857",
      "6972c89c-f920-4c03-a653-150a2acd32b9"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550395133038,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "7aa5e825-34a8-4dac-997d-5c1aec3ae488",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550648700000,
    "parent_id": "e1a08c1c-c84f-4c65-ad80-3f4273841b57",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Concurrency"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550395133032,
        "id": "ce655b68-6ce6-447c-9b76-80f732665b33",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550395133032,
        "parent_id": "7aa5e825-34a8-4dac-997d-5c1aec3ae488",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550395133036,
        "id": "24c3e0f4-a5ae-4504-85f9-3b740e77a8ca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550395133036,
        "parent_id": "7aa5e825-34a8-4dac-997d-5c1aec3ae488",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Related topic: "
            ],
            [
              "Grand Central Dispatch",
              [
                [
                  "a",
                  "https://stackoverflow.com/documentation/ios/4626/grand-central-dispatch#t=20170217041555082968"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Related topic: "
          },
          {
            "Text": "Grand Central Dispatch",
            "Link": "https://stackoverflow.com/documentation/ios/4626/grand-central-dispatch#t=20170217041555082968"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550395133036,
        "id": "47c98dee-85f6-4a71-8199-c9dd0cbda54d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550395133036,
        "parent_id": "7aa5e825-34a8-4dac-997d-5c1aec3ae488",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Syntax"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Syntax"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550395133036,
        "id": "3c34094f-827d-4e71-b866-9529a244f3a7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550395133036,
        "parent_id": "7aa5e825-34a8-4dac-997d-5c1aec3ae488",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "dispatch_async - Runs a block of code in a separate queue, and doesn’t stop the current queue. If the queue is on a different thread than the one dispatch_async was called on, the code in the block will run while code after the dispatch_async also runs"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "dispatch_async - Runs a block of code in a separate queue, and doesn’t stop the current queue. If the queue is on a different thread than the one dispatch_async was called on, the code in the block will run while code after the dispatch_async also runs"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550395133037,
        "id": "b867eda6-7d08-47fb-a181-573173bcecb3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550395133037,
        "parent_id": "7aa5e825-34a8-4dac-997d-5c1aec3ae488",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "dispatch_sync - Runs a block of code in a separate queue, and "
            ],
            [
              "does",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " stop the current queue. If the queue is on a different thread than the one dispatch_async was called on, the code in the block will run, and execution on the thread where the method was called will only resume after it finishes"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "dispatch_sync - Runs a block of code in a separate queue, and "
          },
          {
            "Text": "does",
            "AttrFlags": 4
          },
          {
            "Text": " stop the current queue. If the queue is on a different thread than the one dispatch_async was called on, the code in the block will run, and execution on the thread where the method was called will only resume after it finishes"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550395133037,
        "id": "3412e784-8c54-4b6d-8fb7-22fc3265191b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550395133037,
        "parent_id": "7aa5e825-34a8-4dac-997d-5c1aec3ae488",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parameters"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parameters"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550395133037,
        "id": "2a3b8e12-aff4-48c7-abaa-bf238e5c0451",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550395133037,
        "parent_id": "7aa5e825-34a8-4dac-997d-5c1aec3ae488",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "queue | The queue that the code in the dispatch block will run in. A "
            ],
            [
              "queue",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " is like (but not exactly the same as) a thread; code in different queues can run in parallel. Use "
            ],
            [
              "dispatch_get_main_queue",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to get the queue for the main thread To create a new queue, which in turn creates a new thread, use "
            ],
            [
              "dispatch_queue_create(\"QUEUE_NAME\", DISPATCH_QUEUE_CONCURRENT)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The first parameter is the name of the queue, which is displayed in the debugger if you pause while the block is still running. The second parameter doesn’t matter unless you want to use the same queue for multiple "
            ],
            [
              "dispatch_async",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "dispatch_sync",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " calls. It describes what happens when another block is put on the same queue; "
            ],
            [
              "DISPATCH_QUEUE_CONCURRENT",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will cause both blocks to run at the same time, while "
            ],
            [
              "DISPATCH_QUEUE_SERIAL",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will make the second block wait for the first block to finish |\n—– | —– |\nblock | Code in this block will run in the queue "
            ],
            [
              "queue",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "; put code you want to run on the separate queue here. A helpful tip: If you’re writing this in Xcode and the block argument has the blue outline around it, double click on the argument and Xcode will automatically make an empty block (this applies to all block arguments in any function or method) |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "queue | The queue that the code in the dispatch block will run in. A "
          },
          {
            "Text": "queue",
            "AttrFlags": 4
          },
          {
            "Text": " is like (but not exactly the same as) a thread; code in different queues can run in parallel. Use "
          },
          {
            "Text": "dispatch_get_main_queue",
            "AttrFlags": 2
          },
          {
            "Text": " to get the queue for the main thread To create a new queue, which in turn creates a new thread, use "
          },
          {
            "Text": "dispatch_queue_create(\"QUEUE_NAME\", DISPATCH_QUEUE_CONCURRENT)",
            "AttrFlags": 2
          },
          {
            "Text": ". The first parameter is the name of the queue, which is displayed in the debugger if you pause while the block is still running. The second parameter doesn’t matter unless you want to use the same queue for multiple "
          },
          {
            "Text": "dispatch_async",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "dispatch_sync",
            "AttrFlags": 2
          },
          {
            "Text": " calls. It describes what happens when another block is put on the same queue; "
          },
          {
            "Text": "DISPATCH_QUEUE_CONCURRENT",
            "AttrFlags": 2
          },
          {
            "Text": " will cause both blocks to run at the same time, while "
          },
          {
            "Text": "DISPATCH_QUEUE_SERIAL",
            "AttrFlags": 2
          },
          {
            "Text": " will make the second block wait for the first block to finish |\n—– | —– |\nblock | Code in this block will run in the queue "
          },
          {
            "Text": "queue",
            "AttrFlags": 2
          },
          {
            "Text": "; put code you want to run on the separate queue here. A helpful tip: If you’re writing this in Xcode and the block argument has the blue outline around it, double click on the argument and Xcode will automatically make an empty block (this applies to all block arguments in any function or method) |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550395133037,
        "id": "c0026a7c-663d-4e86-92dc-be3efde6c857",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550395133037,
        "parent_id": "7aa5e825-34a8-4dac-997d-5c1aec3ae488",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550395133038,
        "id": "6972c89c-f920-4c03-a653-150a2acd32b9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550395133038,
        "parent_id": "7aa5e825-34a8-4dac-997d-5c1aec3ae488",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Whenever you do something on a separate thread, which happens when using queues, it’s important to maintain thread safety. Some methods, in particular ones for "
            ],
            [
              "UIView",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s, may not work and/or crash on threads other than main thread. Also, make sure not to change anything (variables, properties, etc.) that is also being used on the main thread, unless you are accounting for this change"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Whenever you do something on a separate thread, which happens when using queues, it’s important to maintain thread safety. Some methods, in particular ones for "
          },
          {
            "Text": "UIView",
            "AttrFlags": 2
          },
          {
            "Text": "s, may not work and/or crash on threads other than main thread. Also, make sure not to change anything (variables, properties, etc.) that is also being used on the main thread, unless you are accounting for this change"
          }
        ]
      }
    ],
    "title": "Concurrency",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}