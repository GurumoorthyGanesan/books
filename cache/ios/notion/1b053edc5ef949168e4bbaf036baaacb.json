{
  "ID": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
  "Root": {
    "alive": true,
    "content": [
      "6a975313-278d-462a-bd1d-3b8889dfdb7f",
      "dc63bc48-b271-45e0-8777-0f64efc35cb1",
      "e761d3b0-b827-4bfc-961b-54f3a6fc71f5",
      "16421c1f-943f-47ea-9d00-3d1ec620d70a",
      "3c423fb8-2bdd-4ef3-9ffb-ae30e93f1136",
      "6c152d9b-71f5-40ba-aca5-2e6865874d83",
      "ec3c5c25-60fb-4263-a64d-8fb007f22be1",
      "56b84e90-7775-4f73-beb1-3f9e26bee107",
      "c9a658e7-3a20-48fe-8280-a1c3acdb191f",
      "6a2fa806-6f90-407a-93d7-4983c03f60d5",
      "31198ee7-e646-4049-b9ad-d788ffb35797",
      "f5f96dd7-70c0-47fd-9926-dc57268377cd",
      "9110ffa5-15ef-464d-8671-2428c0a8f203",
      "b0483bd8-3141-4dc4-909c-2e12b151c6f3",
      "c3c0d12e-8c07-44d5-ad9b-2f3d8c9e8b11",
      "71b166b4-531f-409e-a338-a4347a33defa",
      "03ba8ba1-df2a-4643-b673-83f6032ec3f5",
      "dd0714a0-a19a-47ff-a13c-4949468f6455"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550441714927,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550713260000,
    "parent_id": "468b0602-725a-4cb6-810e-ca88f35bd501",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "060Map Dynamic Animation Position Changes to Bounds"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441714920,
        "id": "6a975313-278d-462a-bd1d-3b8889dfdb7f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441714920,
        "parent_id": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example shows how to customize the "
            ],
            [
              "UIDynamicItem",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " protocol to map position changes of a view being dynamically animated to bounds changes to create a "
            ],
            [
              "UIButton",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that expands and contracts in a elastic fashion."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example shows how to customize the "
          },
          {
            "Text": "UIDynamicItem",
            "AttrFlags": 2
          },
          {
            "Text": " protocol to map position changes of a view being dynamically animated to bounds changes to create a "
          },
          {
            "Text": "UIButton",
            "AttrFlags": 2
          },
          {
            "Text": " that expands and contracts in a elastic fashion."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441714924,
        "id": "dc63bc48-b271-45e0-8777-0f64efc35cb1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441714924,
        "parent_id": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "https://i.stack.imgur.com/9R0zL.gif"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "https://i.stack.imgur.com/9R0zL.gif",
        "image_url": "https://www.notion.so/image/https:%2F%2Fi.stack.imgur.com%2F9R0zL.gif"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441714924,
        "id": "e761d3b0-b827-4bfc-961b-54f3a6fc71f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441714924,
        "parent_id": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To start we need to create a new protocol that implements "
            ],
            [
              "UIDynamicItem",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " but that also has a settable and gettable "
            ],
            [
              "bounds",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " property."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To start we need to create a new protocol that implements "
          },
          {
            "Text": "UIDynamicItem",
            "AttrFlags": 2
          },
          {
            "Text": " but that also has a settable and gettable "
          },
          {
            "Text": "bounds",
            "AttrFlags": 2
          },
          {
            "Text": " property."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441714924,
        "id": "16421c1f-943f-47ea-9d00-3d1ec620d70a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441714924,
        "parent_id": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Swift"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Swift"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441714924,
        "id": "3c423fb8-2bdd-4ef3-9ffb-ae30e93f1136",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441714924,
        "parent_id": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "protocol ResizableDynamicItem: UIDynamicItem\n{\n    var bounds: CGRect { set get }\n}\nextension UIView: ResizableDynamicItem {}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "protocol ResizableDynamicItem: UIDynamicItem\n{\n    var bounds: CGRect { set get }\n}\nextension UIView: ResizableDynamicItem {}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441714924,
        "id": "6c152d9b-71f5-40ba-aca5-2e6865874d83",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441714924,
        "parent_id": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Objective-C"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Objective-C"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441714924,
        "id": "ec3c5c25-60fb-4263-a64d-8fb007f22be1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441714924,
        "parent_id": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@protocol ResizableDynamicItem \u003cUIDynamicItem\u003e\n@property (nonatomic, readwrite) CGRect bounds;\n@end"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@protocol ResizableDynamicItem \u003cUIDynamicItem\u003e\n@property (nonatomic, readwrite) CGRect bounds;\n@end",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441714925,
        "id": "56b84e90-7775-4f73-beb1-3f9e26bee107",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441714925,
        "parent_id": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We’ll then create a wrapper object that will wrap a "
            ],
            [
              "UIDynamicItem",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " but will map center changes to the item’s width and height. We will also provide passthroughs for "
            ],
            [
              "bounds",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "transform",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " of the underlying item. This will cause any changes the dynamic animator makes to the center x and y values of the underlying item will be applied to the items width and height."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We’ll then create a wrapper object that will wrap a "
          },
          {
            "Text": "UIDynamicItem",
            "AttrFlags": 2
          },
          {
            "Text": " but will map center changes to the item’s width and height. We will also provide passthroughs for "
          },
          {
            "Text": "bounds",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "transform",
            "AttrFlags": 2
          },
          {
            "Text": " of the underlying item. This will cause any changes the dynamic animator makes to the center x and y values of the underlying item will be applied to the items width and height."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441714925,
        "id": "c9a658e7-3a20-48fe-8280-a1c3acdb191f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441714925,
        "parent_id": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Swift"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Swift"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441714925,
        "id": "6a2fa806-6f90-407a-93d7-4983c03f60d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441714925,
        "parent_id": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "final class PositionToBoundsMapping: NSObject, UIDynamicItem\n{\n    var target: ResizableDynamicItem\n    \n    init(target: ResizableDynamicItem)\n    {\n        self.target = target\n        super.init()\n    }\n    \n    var bounds: CGRect\n    {\n        get\n        {\n            return self.target.bounds\n        }\n    }\n    \n    var center: CGPoint\n    {\n        get\n        {\n            return CGPoint(x: self.target.bounds.width, y: self.target.bounds.height)\n        }\n        \n        set\n        {\n            self.target.bounds = CGRect(x: 0.0, y: 0.0, width: newValue.x, height: newValue.y)\n        }\n    }\n    \n    var transform: CGAffineTransform\n    {\n        get\n        {\n            return self.target.transform\n        }\n        \n        set\n        {\n            self.target.transform = newValue\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "final class PositionToBoundsMapping: NSObject, UIDynamicItem\n{\n    var target: ResizableDynamicItem\n    \n    init(target: ResizableDynamicItem)\n    {\n        self.target = target\n        super.init()\n    }\n    \n    var bounds: CGRect\n    {\n        get\n        {\n            return self.target.bounds\n        }\n    }\n    \n    var center: CGPoint\n    {\n        get\n        {\n            return CGPoint(x: self.target.bounds.width, y: self.target.bounds.height)\n        }\n        \n        set\n        {\n            self.target.bounds = CGRect(x: 0.0, y: 0.0, width: newValue.x, height: newValue.y)\n        }\n    }\n    \n    var transform: CGAffineTransform\n    {\n        get\n        {\n            return self.target.transform\n        }\n        \n        set\n        {\n            self.target.transform = newValue\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441714925,
        "id": "31198ee7-e646-4049-b9ad-d788ffb35797",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441714925,
        "parent_id": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Objective-C"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Objective-C"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441714925,
        "id": "f5f96dd7-70c0-47fd-9926-dc57268377cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441714925,
        "parent_id": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@interface PositionToBoundsMapping ()\n@property (nonatomic, strong) id\u003cResizableDynamicItem\u003e target;\n@end\n\n@implementation PositionToBoundsMapping\n\n- (instancetype)initWithTarget:(id\u003cResizableDynamicItem\u003e)target\n{\n    self = [super init];\n    if (self)\n    {\n        _target = target;\n    }\n    return self;\n}\n\n- (CGRect)bounds\n{\n    return self.target.bounds;\n}\n\n- (CGPoint)center\n{\n    return CGPointMake(self.target.bounds.size.width, self.target.bounds.size.height);\n}\n\n- (void)setCenter:(CGPoint)center\n{\n    self.target.bounds = CGRectMake(0, 0, center.x, center.y);\n}\n\n- (CGAffineTransform)transform\n{\n    return self.target.transform;\n}\n\n- (void)setTransform:(CGAffineTransform)transform\n{\n    self.target.transform = transform;\n}\n\n@end"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@interface PositionToBoundsMapping ()\n@property (nonatomic, strong) id\u003cResizableDynamicItem\u003e target;\n@end\n\n@implementation PositionToBoundsMapping\n\n- (instancetype)initWithTarget:(id\u003cResizableDynamicItem\u003e)target\n{\n    self = [super init];\n    if (self)\n    {\n        _target = target;\n    }\n    return self;\n}\n\n- (CGRect)bounds\n{\n    return self.target.bounds;\n}\n\n- (CGPoint)center\n{\n    return CGPointMake(self.target.bounds.size.width, self.target.bounds.size.height);\n}\n\n- (void)setCenter:(CGPoint)center\n{\n    self.target.bounds = CGRectMake(0, 0, center.x, center.y);\n}\n\n- (CGAffineTransform)transform\n{\n    return self.target.transform;\n}\n\n- (void)setTransform:(CGAffineTransform)transform\n{\n    self.target.transform = transform;\n}\n\n@end",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441714925,
        "id": "9110ffa5-15ef-464d-8671-2428c0a8f203",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441714925,
        "parent_id": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finally, we’ll create a "
            ],
            [
              "UIViewController",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that will have a button. When the button is pressed we will create "
            ],
            [
              "PositionToBoundsMapping",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with the button as the wrapped dynamic item. We create a "
            ],
            [
              "UIAttachmentBehavior",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to it’s current position then add an instantaneous "
            ],
            [
              "UIPushBehavior",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to it. However because we have mapped changes its bounds, the button does not move but rather grows and shrinks."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finally, we’ll create a "
          },
          {
            "Text": "UIViewController",
            "AttrFlags": 2
          },
          {
            "Text": " that will have a button. When the button is pressed we will create "
          },
          {
            "Text": "PositionToBoundsMapping",
            "AttrFlags": 2
          },
          {
            "Text": " with the button as the wrapped dynamic item. We create a "
          },
          {
            "Text": "UIAttachmentBehavior",
            "AttrFlags": 2
          },
          {
            "Text": " to it’s current position then add an instantaneous "
          },
          {
            "Text": "UIPushBehavior",
            "AttrFlags": 2
          },
          {
            "Text": " to it. However because we have mapped changes its bounds, the button does not move but rather grows and shrinks."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441714925,
        "id": "b0483bd8-3141-4dc4-909c-2e12b151c6f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441714925,
        "parent_id": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Swift"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Swift"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441714925,
        "id": "c3c0d12e-8c07-44d5-ad9b-2f3d8c9e8b11",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441714925,
        "parent_id": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "final class ViewController: UIViewController\n{\n    lazy var button: UIButton =\n    {\n        let button = UIButton(frame: CGRect(x: 0.0, y: 0.0, width: 300.0, height: 200.0))\n        button.backgroundColor = .red\n        button.layer.cornerRadius = 15.0\n        button.setTitle(\"Tap Me\", for: .normal)\n        self.view.addSubview(button)\n        return button\n    }()\n    \n    var buttonBounds = CGRect.zero\n    var animator: UIDynamicAnimator?\n    \n    override func viewDidLoad() \n    {\n        super.viewDidLoad()\n        view.backgroundColor = .white\n        button.addTarget(self, action: #selector(self.didPressButton(sender:)), for: .touchUpInside)\n        buttonBounds = button.bounds\n    }\n    \n    override func viewDidLayoutSubviews() \n    {\n        super.viewDidLayoutSubviews()\n        button.center = view.center\n    }\n    \n    func didPressButton(sender: UIButton)\n    {\n        // Reset bounds so if button is press twice in a row, previous changes don't propogate\n        button.bounds = buttonBounds\n        let animator = UIDynamicAnimator(referenceView: view)\n        \n        // Create mapping\n        let buttonBoundsDynamicItem = PositionToBoundsMapping(target: button)\n        \n        // Add Attachment behavior\n        let attachmentBehavior = UIAttachmentBehavior(item: buttonBoundsDynamicItem, attachedToAnchor: buttonBoundsDynamicItem.center)\n        \n        // Higher frequency faster oscillation\n        attachmentBehavior.frequency = 2.0\n        \n        // Lower damping longer oscillation lasts\n        attachmentBehavior.damping = 0.1\n        animator.addBehavior(attachmentBehavior)\n        \n        let pushBehavior = UIPushBehavior(items: [buttonBoundsDynamicItem], mode: .instantaneous)\n        \n        // Change angle to determine how much height/ width should change 45° means heigh:width is 1:1\n        pushBehavior.angle = .pi / 4.0\n        \n        // Larger magnitude means bigger change\n        pushBehavior.magnitude = 30.0\n        animator.addBehavior(pushBehavior)\n        pushBehavior.active = true\n        \n        // Hold refrence so animator is not released\n        self.animator = animator\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "final class ViewController: UIViewController\n{\n    lazy var button: UIButton =\n    {\n        let button = UIButton(frame: CGRect(x: 0.0, y: 0.0, width: 300.0, height: 200.0))\n        button.backgroundColor = .red\n        button.layer.cornerRadius = 15.0\n        button.setTitle(\"Tap Me\", for: .normal)\n        self.view.addSubview(button)\n        return button\n    }()\n    \n    var buttonBounds = CGRect.zero\n    var animator: UIDynamicAnimator?\n    \n    override func viewDidLoad() \n    {\n        super.viewDidLoad()\n        view.backgroundColor = .white\n        button.addTarget(self, action: #selector(self.didPressButton(sender:)), for: .touchUpInside)\n        buttonBounds = button.bounds\n    }\n    \n    override func viewDidLayoutSubviews() \n    {\n        super.viewDidLayoutSubviews()\n        button.center = view.center\n    }\n    \n    func didPressButton(sender: UIButton)\n    {\n        // Reset bounds so if button is press twice in a row, previous changes don't propogate\n        button.bounds = buttonBounds\n        let animator = UIDynamicAnimator(referenceView: view)\n        \n        // Create mapping\n        let buttonBoundsDynamicItem = PositionToBoundsMapping(target: button)\n        \n        // Add Attachment behavior\n        let attachmentBehavior = UIAttachmentBehavior(item: buttonBoundsDynamicItem, attachedToAnchor: buttonBoundsDynamicItem.center)\n        \n        // Higher frequency faster oscillation\n        attachmentBehavior.frequency = 2.0\n        \n        // Lower damping longer oscillation lasts\n        attachmentBehavior.damping = 0.1\n        animator.addBehavior(attachmentBehavior)\n        \n        let pushBehavior = UIPushBehavior(items: [buttonBoundsDynamicItem], mode: .instantaneous)\n        \n        // Change angle to determine how much height/ width should change 45° means heigh:width is 1:1\n        pushBehavior.angle = .pi / 4.0\n        \n        // Larger magnitude means bigger change\n        pushBehavior.magnitude = 30.0\n        animator.addBehavior(pushBehavior)\n        pushBehavior.active = true\n        \n        // Hold refrence so animator is not released\n        self.animator = animator\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441714926,
        "id": "71b166b4-531f-409e-a338-a4347a33defa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441714926,
        "parent_id": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Objective-C"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Objective-C"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441714926,
        "id": "03ba8ba1-df2a-4643-b673-83f6032ec3f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441714926,
        "parent_id": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@interface ViewController ()\n@property (nonatomic, strong) UIButton *button;\n@property (nonatomic, assign) CGRect buttonBounds;\n@property (nonatomic, strong) UIDynamicAnimator *animator;\n@end\n\n@implementation ViewController\n\n- (void)viewDidLoad\n{\n    [super viewDidLoad];\n    self.view.backgroundColor = [UIColor whiteColor];\n    [self.button addTarget:self action:@selector(didTapButton:) forControlEvents:UIControlEventTouchUpInside];\n    self.buttonBounds = self.button.bounds;\n}\n\n- (void)viewDidLayoutSubviews\n{\n    [super viewDidLayoutSubviews];\n    self.button.center = self.view.center;\n}\n\n- (UIButton *)button\n{\n    if (!_button)\n    {\n        _button = [[UIButton alloc]initWithFrame:CGRectMake(0.0, 0.0, 200.0, 200.0)];\n        _button.backgroundColor = [UIColor redColor];\n        _button.layer.cornerRadius = 15.0;\n        [_button setTitle:@\"Tap Me\" forState:UIControlStateNormal];\n        [self.view addSubview:_button];\n    }\n    return _button;\n}\n\n- (void)didTapButton:(id)sender\n{\n    self.button.bounds = self.buttonBounds;\n    UIDynamicAnimator *animator = [[UIDynamicAnimator alloc] initWithReferenceView:self.view];\n    PositionToBoundsMapping *buttonBoundsDynamicItem = [[PositionToBoundsMapping alloc]initWithTarget:sender];\n    UIAttachmentBehavior *attachmentBehavior = [[UIAttachmentBehavior alloc]initWithItem:buttonBoundsDynamicItem attachedToAnchor:buttonBoundsDynamicItem.center];\n    [attachmentBehavior setFrequency:2.0];\n    [attachmentBehavior setDamping:0.3];\n    [animator addBehavior:attachmentBehavior];\n    \n    UIPushBehavior *pushBehavior = [[UIPushBehavior alloc] initWithItems:@[buttonBoundsDynamicItem] mode:UIPushBehaviorModeInstantaneous];\n    pushBehavior.angle = M_PI_4;\n    pushBehavior.magnitude = 2.0;\n    [animator addBehavior:pushBehavior];\n    \n    [pushBehavior setActive:TRUE];\n    \n    self.animator = animator;\n}\n\n@end"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@interface ViewController ()\n@property (nonatomic, strong) UIButton *button;\n@property (nonatomic, assign) CGRect buttonBounds;\n@property (nonatomic, strong) UIDynamicAnimator *animator;\n@end\n\n@implementation ViewController\n\n- (void)viewDidLoad\n{\n    [super viewDidLoad];\n    self.view.backgroundColor = [UIColor whiteColor];\n    [self.button addTarget:self action:@selector(didTapButton:) forControlEvents:UIControlEventTouchUpInside];\n    self.buttonBounds = self.button.bounds;\n}\n\n- (void)viewDidLayoutSubviews\n{\n    [super viewDidLayoutSubviews];\n    self.button.center = self.view.center;\n}\n\n- (UIButton *)button\n{\n    if (!_button)\n    {\n        _button = [[UIButton alloc]initWithFrame:CGRectMake(0.0, 0.0, 200.0, 200.0)];\n        _button.backgroundColor = [UIColor redColor];\n        _button.layer.cornerRadius = 15.0;\n        [_button setTitle:@\"Tap Me\" forState:UIControlStateNormal];\n        [self.view addSubview:_button];\n    }\n    return _button;\n}\n\n- (void)didTapButton:(id)sender\n{\n    self.button.bounds = self.buttonBounds;\n    UIDynamicAnimator *animator = [[UIDynamicAnimator alloc] initWithReferenceView:self.view];\n    PositionToBoundsMapping *buttonBoundsDynamicItem = [[PositionToBoundsMapping alloc]initWithTarget:sender];\n    UIAttachmentBehavior *attachmentBehavior = [[UIAttachmentBehavior alloc]initWithItem:buttonBoundsDynamicItem attachedToAnchor:buttonBoundsDynamicItem.center];\n    [attachmentBehavior setFrequency:2.0];\n    [attachmentBehavior setDamping:0.3];\n    [animator addBehavior:attachmentBehavior];\n    \n    UIPushBehavior *pushBehavior = [[UIPushBehavior alloc] initWithItems:@[buttonBoundsDynamicItem] mode:UIPushBehaviorModeInstantaneous];\n    pushBehavior.angle = M_PI_4;\n    pushBehavior.magnitude = 2.0;\n    [animator addBehavior:pushBehavior];\n    \n    [pushBehavior setActive:TRUE];\n    \n    self.animator = animator;\n}\n\n@end",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550441714927,
        "id": "dd0714a0-a19a-47ff-a13c-4949468f6455",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550441714927,
        "parent_id": "1b053edc-5ef9-4916-8e4b-baf036baaacb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For more information see "
            ],
            [
              "UIKit Dynamics Catalog",
              [
                [
                  "a",
                  "https://developer.apple.com/library/content/samplecode/DynamicsCatalog/Introduction/Intro.html"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For more information see "
          },
          {
            "Text": "UIKit Dynamics Catalog",
            "Link": "https://developer.apple.com/library/content/samplecode/DynamicsCatalog/Introduction/Intro.html"
          }
        ]
      }
    ],
    "title": "060Map Dynamic Animation Position Changes to Bounds",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}