{
  "ID": "89c5a82b-fd8f-42c3-9bf9-f8a24328e46e",
  "Root": {
    "alive": true,
    "content": [
      "4cd6ad90-be43-4550-aa8f-cda90f77479f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551928849709,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "89c5a82b-fd8f-42c3-9bf9-f8a24328e46e",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551928849709,
    "parent_id": "9bd5a67d-2c30-4b51-a6b7-b9eb3583b888",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "C Implementation"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928849709,
        "id": "4cd6ad90-be43-4550-aa8f-cda90f77479f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928849709,
        "parent_id": "89c5a82b-fd8f-42c3-9bf9-f8a24328e46e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class PigeonholeSort\n{\n    private static void SortPigeonhole(int[] input, int n)\n    {\n        int min = input[0], max = input[n];\n        for (int i = 1; i \u003c n; i++)\n        {\n            if (input[i] \u003c min) min = input[i];\n            if (input[i] \u003e max) max = input[i];\n        }\n        int range = max - min + 1;\n        int[] holes = new int[range];\n\n        for (int i = 0; i \u003c n; i++)\n        {\n            holes[input[i] - min] = input[i];\n        }\n        int index = 0;\n\n        for (int i = 0; i \u003c range; i++)\n        {\n            foreach (var value in holes)\n            {\n                input[index++] = value;\n            }\n        }\n    }\n\n    public static int[] Main(int[] input)\n    {\n        SortPigeonhole(input, input.Length);\n        return input;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class PigeonholeSort\n{\n    private static void SortPigeonhole(int[] input, int n)\n    {\n        int min = input[0], max = input[n];\n        for (int i = 1; i \u003c n; i++)\n        {\n            if (input[i] \u003c min) min = input[i];\n            if (input[i] \u003e max) max = input[i];\n        }\n        int range = max - min + 1;\n        int[] holes = new int[range];\n\n        for (int i = 0; i \u003c n; i++)\n        {\n            holes[input[i] - min] = input[i];\n        }\n        int index = 0;\n\n        for (int i = 0; i \u003c range; i++)\n        {\n            foreach (var value in holes)\n            {\n                input[index++] = value;\n            }\n        }\n    }\n\n    public static int[] Main(int[] input)\n    {\n        SortPigeonhole(input, input.Length);\n        return input;\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "C Implementation",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}