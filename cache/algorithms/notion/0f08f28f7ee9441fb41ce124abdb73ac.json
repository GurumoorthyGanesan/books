{
  "ID": "0f08f28f-7ee9-441f-b41c-e124abdb73ac",
  "Root": {
    "alive": true,
    "content": [
      "da8835aa-19ed-44b7-ab4d-975a192a5968",
      "9c353a04-1f20-40b0-971d-984daf4808af",
      "9c3b69eb-b994-4685-93c7-d89b0f6dd47e",
      "ec0f43cf-b751-4729-984d-d62d7d388ad1",
      "2f94479a-88f6-4ad2-ae0f-87d2701f534a",
      "081a5c3e-5abf-4537-9df6-1714f5481739",
      "c58a07a7-678f-4bb9-b1e1-5b21d6b75359",
      "75c83a1d-9837-410f-b63e-2229a26b2003"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551929319172,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "0f08f28f-7ee9-441f-b41c-e124abdb73ac",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551929319172,
    "parent_id": "1357e166-4a61-43ab-a4f0-d9cbd7ba53de",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Level Order traversal - Implementation"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929319170,
        "id": "da8835aa-19ed-44b7-ab4d-975a192a5968",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929319170,
        "parent_id": "0f08f28f-7ee9-441f-b41c-e124abdb73ac",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example if the given tree is:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example if the given tree is:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929319171,
        "id": "9c353a04-1f20-40b0-971d-984daf4808af",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929319171,
        "parent_id": "0f08f28f-7ee9-441f-b41c-e124abdb73ac",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/f232f1a7-153d-4ece-9224-0977af79e307/ac78b0221e4b95ce9eefde68da3b80701dcb158e.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/f232f1a7-153d-4ece-9224-0977af79e307/ac78b0221e4b95ce9eefde68da3b80701dcb158e.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2Ff232f1a7-153d-4ece-9224-0977af79e307%2Fac78b0221e4b95ce9eefde68da3b80701dcb158e.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929319171,
        "id": "9c3b69eb-b994-4685-93c7-d89b0f6dd47e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929319171,
        "parent_id": "0f08f28f-7ee9-441f-b41c-e124abdb73ac",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Level order traversal will be",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Level order traversal will be",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929319171,
        "id": "ec0f43cf-b751-4729-984d-d62d7d388ad1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929319171,
        "parent_id": "0f08f28f-7ee9-441f-b41c-e124abdb73ac",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "1 2 3 4 5 6 7"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "1 2 3 4 5 6 7"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929319171,
        "id": "2f94479a-88f6-4ad2-ae0f-87d2701f534a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929319171,
        "parent_id": "0f08f28f-7ee9-441f-b41c-e124abdb73ac",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Printing node data level by level."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Printing node data level by level."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929319172,
        "id": "081a5c3e-5abf-4537-9df6-1714f5481739",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929319172,
        "parent_id": "0f08f28f-7ee9-441f-b41c-e124abdb73ac",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Code:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929319172,
        "id": "c58a07a7-678f-4bb9-b1e1-5b21d6b75359",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929319172,
        "parent_id": "0f08f28f-7ee9-441f-b41c-e124abdb73ac",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include\u003ciostream\u003e\n#include\u003cqueue\u003e\n#include\u003cmalloc.h\u003e\n\nusing namespace std;\n\nstruct node{\n    \n    int data;\n    node *left;\n    node *right;\n};\n\nvoid levelOrder(struct node *root){\n    \n        if(root == NULL)    return;\n        \n        queue\u003cnode *\u003e Q;\n        Q.push(root);\n        \n        while(!Q.empty()){\n        struct    node* curr = Q.front();\n            cout\u003c\u003c curr-\u003edata \u003c\u003c\" \";\n            if(curr-\u003eleft != NULL) Q.push(curr-\u003e left);\n                if(curr-\u003eright != NULL) Q.push(curr-\u003e right);\n                \n                Q.pop();\n            \n            \n        }\n}\nstruct node* newNode(int data)\n{\n    struct node* node = (struct node*)\n                        malloc(sizeof(struct node));\n    node-\u003edata = data;\n    node-\u003eleft = NULL;\n    node-\u003eright = NULL;\n \n    return(node);\n}\n\nint main(){\n    \n    struct node *root = newNode(1);\n    root-\u003eleft        = newNode(2);\n    root-\u003eright       = newNode(3);\n    root-\u003eleft-\u003eleft  = newNode(4);\n    root-\u003eleft-\u003eright = newNode(5);\n    root-\u003eright-\u003eleft  = newNode(6);\n    root-\u003eright-\u003eright = newNode(7);\n \n \n    printf(\"Level Order traversal of binary tree is \\n\");\n    levelOrder(root);\n    \n    return 0;\n    \n    \n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include\u003ciostream\u003e\n#include\u003cqueue\u003e\n#include\u003cmalloc.h\u003e\n\nusing namespace std;\n\nstruct node{\n    \n    int data;\n    node *left;\n    node *right;\n};\n\nvoid levelOrder(struct node *root){\n    \n        if(root == NULL)    return;\n        \n        queue\u003cnode *\u003e Q;\n        Q.push(root);\n        \n        while(!Q.empty()){\n        struct    node* curr = Q.front();\n            cout\u003c\u003c curr-\u003edata \u003c\u003c\" \";\n            if(curr-\u003eleft != NULL) Q.push(curr-\u003e left);\n                if(curr-\u003eright != NULL) Q.push(curr-\u003e right);\n                \n                Q.pop();\n            \n            \n        }\n}\nstruct node* newNode(int data)\n{\n    struct node* node = (struct node*)\n                        malloc(sizeof(struct node));\n    node-\u003edata = data;\n    node-\u003eleft = NULL;\n    node-\u003eright = NULL;\n \n    return(node);\n}\n\nint main(){\n    \n    struct node *root = newNode(1);\n    root-\u003eleft        = newNode(2);\n    root-\u003eright       = newNode(3);\n    root-\u003eleft-\u003eleft  = newNode(4);\n    root-\u003eleft-\u003eright = newNode(5);\n    root-\u003eright-\u003eleft  = newNode(6);\n    root-\u003eright-\u003eright = newNode(7);\n \n \n    printf(\"Level Order traversal of binary tree is \\n\");\n    levelOrder(root);\n    \n    return 0;\n    \n    \n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929319172,
        "id": "75c83a1d-9837-410f-b63e-2229a26b2003",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929319172,
        "parent_id": "0f08f28f-7ee9-441f-b41c-e124abdb73ac",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Queue data structure is used to achieve the above objective."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Queue data structure is used to achieve the above objective."
          }
        ]
      }
    ],
    "title": "Level Order traversal - Implementation",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}