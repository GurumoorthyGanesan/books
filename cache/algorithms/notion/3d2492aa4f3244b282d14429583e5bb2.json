{
  "ID": "3d2492aa-4f32-44b2-82d1-4429583e5bb2",
  "Root": {
    "alive": true,
    "content": [
      "5da52f28-de92-4c4f-a676-5bab9d2c81b7",
      "90897a6b-99f0-420d-a905-7e7951f77909",
      "56dfaefd-105c-4938-9e3d-730e46d5ab0e",
      "4fa34d43-aeeb-431c-9c60-ebd756ae6145",
      "d0fcf6c8-36ff-4a5d-98c6-13fcab653417",
      "a1423b4a-de43-4beb-a80b-76f6ceeac679"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551927989810,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "3d2492aa-4f32-44b2-82d1-4429583e5bb2",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551927989810,
    "parent_id": "6eb693f8-f70b-45c9-a6db-644dea3bc144",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Implementation in C C"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551927989808,
        "id": "5da52f28-de92-4c4f-a676-5bab9d2c81b7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551927989808,
        "parent_id": "3d2492aa-4f32-44b2-82d1-4429583e5bb2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An example implementation of "
            ],
            [
              "BubbleSort",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in "
            ],
            [
              "C++",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An example implementation of "
          },
          {
            "Text": "BubbleSort",
            "AttrFlags": 2
          },
          {
            "Text": " in "
          },
          {
            "Text": "C++",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551927989809,
        "id": "90897a6b-99f0-420d-a905-7e7951f77909",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551927989809,
        "parent_id": "3d2492aa-4f32-44b2-82d1-4429583e5bb2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void bubbleSort(vector\u003cint\u003enumbers)\n{\n    for(int i = numbers.size() - 1; i \u003e= 0; i--) {\n        for(int j = 1; j \u003c= i; j++) {\n            if(numbers[j-1] \u003e numbers[j]) {\n                swap(numbers[j-1],numbers(j));\n            }\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void bubbleSort(vector\u003cint\u003enumbers)\n{\n    for(int i = numbers.size() - 1; i \u003e= 0; i--) {\n        for(int j = 1; j \u003c= i; j++) {\n            if(numbers[j-1] \u003e numbers[j]) {\n                swap(numbers[j-1],numbers(j));\n            }\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551927989809,
        "id": "56dfaefd-105c-4938-9e3d-730e46d5ab0e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551927989809,
        "parent_id": "3d2492aa-4f32-44b2-82d1-4429583e5bb2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C Implementation",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "C Implementation",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551927989809,
        "id": "4fa34d43-aeeb-431c-9c60-ebd756ae6145",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551927989809,
        "parent_id": "3d2492aa-4f32-44b2-82d1-4429583e5bb2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void bubble_sort(long list[], long n)\n{\n  long c, d, t;\n \n  for (c = 0 ; c \u003c ( n - 1 ); c++)\n  {\n    for (d = 0 ; d \u003c n - c - 1; d++)\n    {\n      if (list[d] \u003e list[d+1])\n      {\n        /* Swapping */\n \n        t         = list[d];\n        list[d]   = list[d+1];\n        list[d+1] = t;\n      }\n    }\n  }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void bubble_sort(long list[], long n)\n{\n  long c, d, t;\n \n  for (c = 0 ; c \u003c ( n - 1 ); c++)\n  {\n    for (d = 0 ; d \u003c n - c - 1; d++)\n    {\n      if (list[d] \u003e list[d+1])\n      {\n        /* Swapping */\n \n        t         = list[d];\n        list[d]   = list[d+1];\n        list[d+1] = t;\n      }\n    }\n  }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551927989810,
        "id": "d0fcf6c8-36ff-4a5d-98c6-13fcab653417",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551927989810,
        "parent_id": "3d2492aa-4f32-44b2-82d1-4429583e5bb2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Bubble Sort with pointer",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Bubble Sort with pointer",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551927989810,
        "id": "a1423b4a-de43-4beb-a80b-76f6ceeac679",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551927989810,
        "parent_id": "3d2492aa-4f32-44b2-82d1-4429583e5bb2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void pointer_bubble_sort(long * list, long n)\n{\n  long c, d, t;\n \n  for (c = 0 ; c \u003c ( n - 1 ); c++)\n  {\n    for (d = 0 ; d \u003c n - c - 1; d++)\n    {\n      if ( * (list + d ) \u003e *(list+d+1))\n      {\n        /* Swapping */\n \n        t         = * (list + d );\n        * (list + d )   = * (list + d + 1 );\n        * (list + d + 1) = t;\n      }\n    }\n  }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void pointer_bubble_sort(long * list, long n)\n{\n  long c, d, t;\n \n  for (c = 0 ; c \u003c ( n - 1 ); c++)\n  {\n    for (d = 0 ; d \u003c n - c - 1; d++)\n    {\n      if ( * (list + d ) \u003e *(list+d+1))\n      {\n        /* Swapping */\n \n        t         = * (list + d );\n        * (list + d )   = * (list + d + 1 );\n        * (list + d + 1) = t;\n      }\n    }\n  }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Implementation in C C",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}