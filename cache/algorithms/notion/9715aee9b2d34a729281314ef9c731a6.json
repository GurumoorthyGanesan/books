{
  "ID": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
  "Root": {
    "alive": true,
    "content": [
      "04003b0a-9955-44e3-b4df-1a0267f330aa",
      "ffd56d32-b2fd-4eba-a937-640c314118de",
      "03e423a9-60a8-4634-ae8b-561fd1ecc4a4",
      "e820e632-05c4-425b-bc13-f1305feb4ca2",
      "6745ca87-d8de-4437-a67a-2a209080a78b",
      "b085b221-aaba-4053-868e-1058d0f72b0f",
      "4ba1124c-884e-421a-91bb-4caa0719ffb9",
      "4deaed90-61b4-4a89-90a7-afc76f5b0894",
      "f07356f9-c961-4326-8ecc-4b1272d0728d",
      "d2a82438-a1cd-443c-8272-900887b29b11",
      "20f0efb7-3f28-417f-9675-0be6e97c214b",
      "38096f99-8576-4b7b-b550-76b831af171b",
      "353a52a5-0e6a-4dea-b700-c5898a6587b3",
      "e489187e-0621-40e4-87df-96fd80a35287",
      "0714e9d6-f4e8-4551-b449-712d59c31262",
      "14c396a5-c6f3-446b-b188-2f97706a2a57",
      "41c8df14-c2a0-4a88-a848-a311ebaa9d03",
      "e95b2a21-c7dd-4e21-9dc6-3c4e8bb6822f",
      "db4f688b-5904-4b25-b6b0-ff2a632c7a69",
      "135105d5-2529-4a76-ad11-7df6dd7ed488",
      "3f3c7681-e066-4117-b9a6-831f553888cc",
      "1360020f-ceec-4d6e-a659-f547068d4cb1",
      "8194b4d4-b2b6-475a-90e2-ad62d5299038",
      "fe754ff4-8f78-41f9-95fa-5a83ccce5882",
      "e340291c-014e-403d-b1aa-e3fe4cdc7086",
      "fecaa4b0-68a6-4158-96bf-9b82dee4a6eb",
      "d154dc78-2c67-493d-be34-615c75c514e8",
      "61fe2414-2199-4894-90be-4d41ca03da5d",
      "333993d6-dcae-4279-bbcd-abe3728ba1fe",
      "16eb8d3b-c46e-4496-974a-59a0b0992f96",
      "5d072783-9034-49fd-94da-a8551b91d8e7",
      "77351793-e868-4e78-b769-cdcc74292de3",
      "dcaabd85-bcc7-4ead-aaee-45a3fdb63872",
      "3cfdca85-f012-449e-a5da-a2417ad9b474",
      "7abd73d9-ad38-4dcd-a62a-a1675b75f4ff",
      "24d48097-07f8-4ddd-ae6a-1ac6dbb76f2a",
      "2d4861a0-987d-4197-b12f-881281238e6d",
      "7b17c16c-e005-4b9b-9b6e-027aa0b40d23",
      "7bc0c407-7af9-4f4c-a76a-48d59fa8493f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551929272852,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551929272852,
    "parent_id": "0652a44d-8a63-47b5-b7cf-af85d0c3655a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Minimizing Lateness"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272830,
        "id": "04003b0a-9955-44e3-b4df-1a0267f330aa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272830,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are numerous problems minimizing lateness, here we have a single resource which can only process one job at a time. Job "
            ],
            [
              "j",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " requires "
            ],
            [
              "tj",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " units of processing time and is due at time "
            ],
            [
              "dj",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". if "
            ],
            [
              "j",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " starts at time "
            ],
            [
              "sj",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " it will finish at time "
            ],
            [
              "fj=sj+tj",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". We define lateness "
            ],
            [
              "L=max{0,fj-dh}",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for all "
            ],
            [
              "j",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The goal is to minimize the "
            ],
            [
              "maximum lateness",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " L."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are numerous problems minimizing lateness, here we have a single resource which can only process one job at a time. Job "
          },
          {
            "Text": "j",
            "AttrFlags": 2
          },
          {
            "Text": " requires "
          },
          {
            "Text": "tj",
            "AttrFlags": 2
          },
          {
            "Text": " units of processing time and is due at time "
          },
          {
            "Text": "dj",
            "AttrFlags": 2
          },
          {
            "Text": ". if "
          },
          {
            "Text": "j",
            "AttrFlags": 2
          },
          {
            "Text": " starts at time "
          },
          {
            "Text": "sj",
            "AttrFlags": 2
          },
          {
            "Text": " it will finish at time "
          },
          {
            "Text": "fj=sj+tj",
            "AttrFlags": 2
          },
          {
            "Text": ". We define lateness "
          },
          {
            "Text": "L=max{0,fj-dh}",
            "AttrFlags": 2
          },
          {
            "Text": " for all "
          },
          {
            "Text": "j",
            "AttrFlags": 2
          },
          {
            "Text": ". The goal is to minimize the "
          },
          {
            "Text": "maximum lateness",
            "AttrFlags": 1
          },
          {
            "Text": " L."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272832,
        "id": "ffd56d32-b2fd-4eba-a937-640c314118de",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272832,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "| 1 | 2 | 3 | 4 | 5 | 6 |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "| 1 | 2 | 3 | 4 | 5 | 6 |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272833,
        "id": "03e423a9-60a8-4634-ae8b-561fd1ecc4a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272833,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "|:—:|:-:|:-:|:-:|:-:|:–:|:–:| | "
            ],
            [
              "tj",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "| 3 | 2 | 1 | 4 | 3 | 2 | | "
            ],
            [
              "dj",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "| 6 | 8 | 9 | 9 | 10 | 11 |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "|:—:|:-:|:-:|:-:|:-:|:–:|:–:| | "
          },
          {
            "Text": "tj",
            "AttrFlags": 2
          },
          {
            "Text": "| 3 | 2 | 1 | 4 | 3 | 2 | | "
          },
          {
            "Text": "dj",
            "AttrFlags": 2
          },
          {
            "Text": "| 6 | 8 | 9 | 9 | 10 | 11 |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272833,
        "id": "e820e632-05c4-425b-bc13-f1305feb4ca2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272833,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "|Job | 3 | 2 | 2 | 5 | 5 | 5 | 4 | 4 | 4 | 4 | 1 | 1 | 1 | 6 | 6 | |:-: |:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:—:|:-:|:-:| | Time | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |10 |11 |12 |13 |14 |15 | | "
            ],
            [
              "Lj",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |-8 | |-5 | | |-4 | | | | 1 | | |"
            ],
            [
              "7",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "| | 4 |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "|Job | 3 | 2 | 2 | 5 | 5 | 5 | 4 | 4 | 4 | 4 | 1 | 1 | 1 | 6 | 6 | |:-: |:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:—:|:-:|:-:| | Time | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |10 |11 |12 |13 |14 |15 | | "
          },
          {
            "Text": "Lj",
            "AttrFlags": 2
          },
          {
            "Text": " |-8 | |-5 | | |-4 | | | | 1 | | |"
          },
          {
            "Text": "7",
            "AttrFlags": 1
          },
          {
            "Text": "| | 4 |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272833,
        "id": "6745ca87-d8de-4437-a67a-2a209080a78b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272833,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The solution "
            ],
            [
              "L=7",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is obviously not optimal. Lets look at some greedy strategies:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The solution "
          },
          {
            "Text": "L=7",
            "AttrFlags": 2
          },
          {
            "Text": " is obviously not optimal. Lets look at some greedy strategies:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272834,
        "id": "b085b221-aaba-4053-868e-1058d0f72b0f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272834,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Shortest processing time first",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": schedule jobs in ascending order og processing time j`"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Shortest processing time first",
            "AttrFlags": 1
          },
          {
            "Text": ": schedule jobs in ascending order og processing time j`"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272834,
        "id": "4ba1124c-884e-421a-91bb-4caa0719ffb9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272834,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Earliest deadline first",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": Schedule jobs in ascending order of deadline "
            ],
            [
              "dj",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Earliest deadline first",
            "AttrFlags": 1
          },
          {
            "Text": ": Schedule jobs in ascending order of deadline "
          },
          {
            "Text": "dj",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272834,
        "id": "4deaed90-61b4-4a89-90a7-afc76f5b0894",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272834,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Smallest slack",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": schedule jobs in ascending order of slack "
            ],
            [
              "dj-tj",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Smallest slack",
            "AttrFlags": 1
          },
          {
            "Text": ": schedule jobs in ascending order of slack "
          },
          {
            "Text": "dj-tj",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272834,
        "id": "f07356f9-c961-4326-8ecc-4b1272d0728d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272834,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Its easy to see that "
            ],
            [
              "shortest processing time first",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " is not optimal a good counter example is"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Its easy to see that "
          },
          {
            "Text": "shortest processing time first",
            "AttrFlags": 1
          },
          {
            "Text": " is not optimal a good counter example is"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272834,
        "id": "d2a82438-a1cd-443c-8272-900887b29b11",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272834,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "| 1 | 2 |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "| 1 | 2 |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272835,
        "id": "20f0efb7-3f28-417f-9675-0be6e97c214b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272835,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "|:—:|:-:|:-:| | "
            ],
            [
              "tj",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "| 1 | 5 | | "
            ],
            [
              "dj",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "|10 | 5 |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "|:—:|:-:|:-:| | "
          },
          {
            "Text": "tj",
            "AttrFlags": 2
          },
          {
            "Text": "| 1 | 5 | | "
          },
          {
            "Text": "dj",
            "AttrFlags": 2
          },
          {
            "Text": "|10 | 5 |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272835,
        "id": "38096f99-8576-4b7b-b550-76b831af171b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272835,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the "
            ],
            [
              "smallest stack",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " solution has simillar problems"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "the "
          },
          {
            "Text": "smallest stack",
            "AttrFlags": 1
          },
          {
            "Text": " solution has simillar problems"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272835,
        "id": "353a52a5-0e6a-4dea-b700-c5898a6587b3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272835,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "| 1 | 2 |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "| 1 | 2 |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272835,
        "id": "e489187e-0621-40e4-87df-96fd80a35287",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272835,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "|:—:|:-:|:-:| | "
            ],
            [
              "tj",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "| 1 | 5 | | "
            ],
            [
              "dj",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "| 3 | 5 |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "|:—:|:-:|:-:| | "
          },
          {
            "Text": "tj",
            "AttrFlags": 2
          },
          {
            "Text": "| 1 | 5 | | "
          },
          {
            "Text": "dj",
            "AttrFlags": 2
          },
          {
            "Text": "| 3 | 5 |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272847,
        "id": "0714e9d6-f4e8-4551-b449-712d59c31262",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272847,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the last strategy looks valid so we start with some pseudo code:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "the last strategy looks valid so we start with some pseudo code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272847,
        "id": "14c396a5-c6f3-446b-b188-2f97706a2a57",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272847,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sort "
            ],
            [
              "n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " jobs by due time so that "
            ],
            [
              "d1\u003c=d2\u003c=...\u003c=dn",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sort "
          },
          {
            "Text": "n",
            "AttrFlags": 2
          },
          {
            "Text": " jobs by due time so that "
          },
          {
            "Text": "d1\u003c=d2\u003c=...\u003c=dn",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272848,
        "id": "41c8df14-c2a0-4a88-a848-a311ebaa9d03",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272848,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Set "
            ],
            [
              "t=0",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Set "
          },
          {
            "Text": "t=0",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272848,
        "id": "e95b2a21-c7dd-4e21-9dc6-3c4e8bb6822f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272848,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "for "
            ],
            [
              "j=1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "n",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "for "
          },
          {
            "Text": "j=1",
            "AttrFlags": 2
          },
          {
            "Text": " to "
          },
          {
            "Text": "n",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272848,
        "id": "db4f688b-5904-4b25-b6b0-ff2a632c7a69",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272848,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "- Assign job `j` to interval `[t,t+tj]`\n- set `sj=t` and `fj=t+tj`\n- set `t=t+tj`"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "- Assign job `j` to interval `[t,t+tj]`\n- set `sj=t` and `fj=t+tj`\n- set `t=t+tj`",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272848,
        "id": "135105d5-2529-4a76-ad11-7df6dd7ed488",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272848,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "return intervals "
            ],
            [
              "[s1,f1],[s2,f2],...,[sn,fn]",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "return intervals "
          },
          {
            "Text": "[s1,f1],[s2,f2],...,[sn,fn]",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272848,
        "id": "3f3c7681-e066-4117-b9a6-831f553888cc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272848,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And as implementation in C++:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And as implementation in C++:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272849,
        "id": "1360020f-ceec-4d6e-a659-f547068d4cb1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272849,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003ciostream\u003e\n#include \u003cutility\u003e\n#include \u003ctuple\u003e\n#include \u003cvector\u003e\n#include \u003calgorithm\u003e\n\nconst int jobCnt = 10;\n\n// Job start times\nconst int processTimes[] = { 2, 3, 1, 4, 3, 2, 3, 5, 2, 1};\n\n// Job end times\nconst int dueTimes[]     = { 4, 7, 9, 13, 8, 17, 9, 11, 22, 25};\n\nusing namespace std;\n\nint main()\n{\n    vector\u003cpair\u003cint,int\u003e\u003e jobs;\n    \n    for(int i=0; i\u003cjobCnt; ++i)\n        jobs.push_back(make_pair(processTimes[i], dueTimes[i]));\n    \n    // step 1: sort\n    sort(jobs.begin(), jobs.end(),[](pair\u003cint,int\u003e p1, pair\u003cint,int\u003e p2)\n                                    { return p1.second \u003c p2.second; });\n    \n    // step 2: set t=0\n    int t = 0;\n    \n    // step 3:\n    vector\u003cpair\u003cint,int\u003e\u003e jobIntervals;\n    \n    for(int i=0; i\u003cjobCnt; ++i)\n    {\n        jobIntervals.push_back(make_pair(t,t+jobs[i].first));\n        t += jobs[i].first;\n    }\n            \n    //step 4: print intervals\n    cout \u003c\u003c \"Intervals:\\n\" \u003c\u003c endl;\n    \n    int lateness = 0;\n    \n    for(int i=0; i\u003cjobCnt; ++i)\n    {\n        auto pair = jobIntervals[i];\n        \n        lateness = max(lateness, pair.second-jobs[i].second);\n\n        cout \u003c\u003c \"(\" \u003c\u003c pair.first \u003c\u003c \",\" \u003c\u003c pair.second \u003c\u003c \") \"\n             \u003c\u003c \"Lateness: \" \u003c\u003c pair.second-jobs[i].second \u003c\u003c std::endl;\n    }\n    \n    cout \u003c\u003c \"\\nmaximal lateness is \" \u003c\u003c lateness \u003c\u003c endl;\n    \n    return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003ciostream\u003e\n#include \u003cutility\u003e\n#include \u003ctuple\u003e\n#include \u003cvector\u003e\n#include \u003calgorithm\u003e\n\nconst int jobCnt = 10;\n\n// Job start times\nconst int processTimes[] = { 2, 3, 1, 4, 3, 2, 3, 5, 2, 1};\n\n// Job end times\nconst int dueTimes[]     = { 4, 7, 9, 13, 8, 17, 9, 11, 22, 25};\n\nusing namespace std;\n\nint main()\n{\n    vector\u003cpair\u003cint,int\u003e\u003e jobs;\n    \n    for(int i=0; i\u003cjobCnt; ++i)\n        jobs.push_back(make_pair(processTimes[i], dueTimes[i]));\n    \n    // step 1: sort\n    sort(jobs.begin(), jobs.end(),[](pair\u003cint,int\u003e p1, pair\u003cint,int\u003e p2)\n                                    { return p1.second \u003c p2.second; });\n    \n    // step 2: set t=0\n    int t = 0;\n    \n    // step 3:\n    vector\u003cpair\u003cint,int\u003e\u003e jobIntervals;\n    \n    for(int i=0; i\u003cjobCnt; ++i)\n    {\n        jobIntervals.push_back(make_pair(t,t+jobs[i].first));\n        t += jobs[i].first;\n    }\n            \n    //step 4: print intervals\n    cout \u003c\u003c \"Intervals:\\n\" \u003c\u003c endl;\n    \n    int lateness = 0;\n    \n    for(int i=0; i\u003cjobCnt; ++i)\n    {\n        auto pair = jobIntervals[i];\n        \n        lateness = max(lateness, pair.second-jobs[i].second);\n\n        cout \u003c\u003c \"(\" \u003c\u003c pair.first \u003c\u003c \",\" \u003c\u003c pair.second \u003c\u003c \") \"\n             \u003c\u003c \"Lateness: \" \u003c\u003c pair.second-jobs[i].second \u003c\u003c std::endl;\n    }\n    \n    cout \u003c\u003c \"\\nmaximal lateness is \" \u003c\u003c lateness \u003c\u003c endl;\n    \n    return 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272849,
        "id": "8194b4d4-b2b6-475a-90e2-ad62d5299038",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272849,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And the output for this program is:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And the output for this program is:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272849,
        "id": "fe754ff4-8f78-41f9-95fa-5a83ccce5882",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272849,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Intervals:\n\n(0,2)   Lateness:-2\n(2,5)   Lateness:-2\n(5,8)   Lateness: 0\n(8,9)   Lateness: 0\n(9,12)  Lateness: 3\n(12,17) Lateness: 6\n(17,21) Lateness: 8\n(21,23) Lateness: 6\n(23,25) Lateness: 3\n(25,26) Lateness: 1\n\nmaximal lateness is 8"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Intervals:\n\n(0,2)   Lateness:-2\n(2,5)   Lateness:-2\n(5,8)   Lateness: 0\n(8,9)   Lateness: 0\n(9,12)  Lateness: 3\n(12,17) Lateness: 6\n(17,21) Lateness: 8\n(21,23) Lateness: 6\n(23,25) Lateness: 3\n(25,26) Lateness: 1\n\nmaximal lateness is 8",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272849,
        "id": "e340291c-014e-403d-b1aa-e3fe4cdc7086",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272849,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272849,
        "id": "fecaa4b0-68a6-4158-96bf-9b82dee4a6eb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272849,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The runtime of the algorithm is obviously Θ(n log n) because sorting is the dominating operation of this algorithm. Now we need to show that it is optimal. Clearly an optimal schedule has no "
            ],
            [
              "idle time",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". the "
            ],
            [
              "earliest deadline first",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " schedule has also no idle time."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The runtime of the algorithm is obviously Θ(n log n) because sorting is the dominating operation of this algorithm. Now we need to show that it is optimal. Clearly an optimal schedule has no "
          },
          {
            "Text": "idle time",
            "AttrFlags": 1
          },
          {
            "Text": ". the "
          },
          {
            "Text": "earliest deadline first",
            "AttrFlags": 1
          },
          {
            "Text": " schedule has also no idle time."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272849,
        "id": "d154dc78-2c67-493d-be34-615c75c514e8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272849,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Lets assume the jobs are numbered so that "
            ],
            [
              "d1\u003c=d2\u003c=...\u003c=dn",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". We say a "
            ],
            [
              "inversion",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " of a schedule is a pair of jobs "
            ],
            [
              "i",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "j",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " so that "
            ],
            [
              "i\u003cj",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " but j is scheduled before "
            ],
            [
              "i",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Due to its definition the "
            ],
            [
              "earliest deadline first",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " schedule has no inversions. Of course if a schedule has an inversion it has one with a pair of inverted jobs scheduled consecutively."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Lets assume the jobs are numbered so that "
          },
          {
            "Text": "d1\u003c=d2\u003c=...\u003c=dn",
            "AttrFlags": 2
          },
          {
            "Text": ". We say a "
          },
          {
            "Text": "inversion",
            "AttrFlags": 1
          },
          {
            "Text": " of a schedule is a pair of jobs "
          },
          {
            "Text": "i",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "j",
            "AttrFlags": 2
          },
          {
            "Text": " so that "
          },
          {
            "Text": "i\u003cj",
            "AttrFlags": 2
          },
          {
            "Text": " but j is scheduled before "
          },
          {
            "Text": "i",
            "AttrFlags": 2
          },
          {
            "Text": ". Due to its definition the "
          },
          {
            "Text": "earliest deadline first",
            "AttrFlags": 1
          },
          {
            "Text": " schedule has no inversions. Of course if a schedule has an inversion it has one with a pair of inverted jobs scheduled consecutively."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272850,
        "id": "61fe2414-2199-4894-90be-4d41ca03da5d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272850,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Proposition:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Swapping two adjacent, inverted jobs reduces the number of inversions by "
            ],
            [
              "one",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "does not increase",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " the maximal lateness."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Proposition:",
            "AttrFlags": 1
          },
          {
            "Text": " Swapping two adjacent, inverted jobs reduces the number of inversions by "
          },
          {
            "Text": "one",
            "AttrFlags": 1
          },
          {
            "Text": " and "
          },
          {
            "Text": "does not increase",
            "AttrFlags": 1
          },
          {
            "Text": " the maximal lateness."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272850,
        "id": "333993d6-dcae-4279-bbcd-abe3728ba1fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272850,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Proof:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Let "
            ],
            [
              "L",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " be the lateness before the swap and "
            ],
            [
              "M",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " the lateness afterwards. Because exchanging two adjacent jobs does not move the other jobs from their position it is "
            ],
            [
              "Lk=Mk",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for all "
            ],
            [
              "k != i,j",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Proof:",
            "AttrFlags": 1
          },
          {
            "Text": " Let "
          },
          {
            "Text": "L",
            "AttrFlags": 2
          },
          {
            "Text": " be the lateness before the swap and "
          },
          {
            "Text": "M",
            "AttrFlags": 2
          },
          {
            "Text": " the lateness afterwards. Because exchanging two adjacent jobs does not move the other jobs from their position it is "
          },
          {
            "Text": "Lk=Mk",
            "AttrFlags": 2
          },
          {
            "Text": " for all "
          },
          {
            "Text": "k != i,j",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272850,
        "id": "16eb8d3b-c46e-4496-974a-59a0b0992f96",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272850,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Clearly it is "
            ],
            [
              "Mi\u003c=Li",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " since job "
            ],
            [
              "i",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " got scheduled earlier. if job "
            ],
            [
              "j",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is late, so follows from the definition:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Clearly it is "
          },
          {
            "Text": "Mi\u003c=Li",
            "AttrFlags": 2
          },
          {
            "Text": " since job "
          },
          {
            "Text": "i",
            "AttrFlags": 2
          },
          {
            "Text": " got scheduled earlier. if job "
          },
          {
            "Text": "j",
            "AttrFlags": 2
          },
          {
            "Text": " is late, so follows from the definition:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272850,
        "id": "5d072783-9034-49fd-94da-a8551b91d8e7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272850,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Mj = fi-dj    (definition)\n  \u003c= fi-di    (since i and j are exchanged)\n  \u003c= Li"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Mj = fi-dj    (definition)\n  \u003c= fi-di    (since i and j are exchanged)\n  \u003c= Li",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272851,
        "id": "77351793-e868-4e78-b769-cdcc74292de3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272851,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "That means the lateness after swap is less or equal than before. This concludes the proof."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "That means the lateness after swap is less or equal than before. This concludes the proof."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272851,
        "id": "dcaabd85-bcc7-4ead-aaee-45a3fdb63872",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272851,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272851,
        "id": "3cfdca85-f012-449e-a5da-a2417ad9b474",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272851,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Proposition:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " The "
            ],
            [
              "earliest deadline first",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " schedule "
            ],
            [
              "S",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is optimal."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Proposition:",
            "AttrFlags": 1
          },
          {
            "Text": " The "
          },
          {
            "Text": "earliest deadline first",
            "AttrFlags": 1
          },
          {
            "Text": " schedule "
          },
          {
            "Text": "S",
            "AttrFlags": 2
          },
          {
            "Text": " is optimal."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272851,
        "id": "7abd73d9-ad38-4dcd-a62a-a1675b75f4ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272851,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Proof:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "(by contradiction)",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Proof:",
            "AttrFlags": 1
          },
          {
            "Text": "(by contradiction)",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272851,
        "id": "24d48097-07f8-4ddd-ae6a-1ac6dbb76f2a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272851,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Lets assume "
            ],
            [
              "S*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is optimal schedule with the "
            ],
            [
              "fewest possible",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " number of inversions. we can assume that "
            ],
            [
              "S*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has no idle time. If "
            ],
            [
              "S*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has no inversions, then "
            ],
            [
              "S=S*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and we are done. If "
            ],
            [
              "S*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has an inversion, than it has an adjacent inversion. The last Proposition states that we can swap the adjacent inversion without increasing lateness but with decreasing the number of inversions. This contradicts the definition of "
            ],
            [
              "S*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Lets assume "
          },
          {
            "Text": "S*",
            "AttrFlags": 2
          },
          {
            "Text": " is optimal schedule with the "
          },
          {
            "Text": "fewest possible",
            "AttrFlags": 1
          },
          {
            "Text": " number of inversions. we can assume that "
          },
          {
            "Text": "S*",
            "AttrFlags": 2
          },
          {
            "Text": " has no idle time. If "
          },
          {
            "Text": "S*",
            "AttrFlags": 2
          },
          {
            "Text": " has no inversions, then "
          },
          {
            "Text": "S=S*",
            "AttrFlags": 2
          },
          {
            "Text": " and we are done. If "
          },
          {
            "Text": "S*",
            "AttrFlags": 2
          },
          {
            "Text": " has an inversion, than it has an adjacent inversion. The last Proposition states that we can swap the adjacent inversion without increasing lateness but with decreasing the number of inversions. This contradicts the definition of "
          },
          {
            "Text": "S*",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272852,
        "id": "2d4861a0-987d-4197-b12f-881281238e6d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272852,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272852,
        "id": "7b17c16c-e005-4b9b-9b6e-027aa0b40d23",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272852,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The minimizing lateness problem and its near related "
            ],
            [
              "minimum makespan",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " problem, where the question for a minimal schedule is asked have lots of applications in the real world. But usually you don’t have only one machine but many and they handle the same task at different rates. These problems get NP-complete really fast."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The minimizing lateness problem and its near related "
          },
          {
            "Text": "minimum makespan",
            "AttrFlags": 1
          },
          {
            "Text": " problem, where the question for a minimal schedule is asked have lots of applications in the real world. But usually you don’t have only one machine but many and they handle the same task at different rates. These problems get NP-complete really fast."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929272852,
        "id": "7bc0c407-7af9-4f4c-a76a-48d59fa8493f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929272852,
        "parent_id": "9715aee9-b2d3-4a72-9281-314ef9c731a6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another interesting question arises if we don’t look at the "
            ],
            [
              "offline",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " problem, where we have all tasks and data at hand but at the "
            ],
            [
              "online",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " variant, where tasks appear during execution."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another interesting question arises if we don’t look at the "
          },
          {
            "Text": "offline",
            "AttrFlags": 1
          },
          {
            "Text": " problem, where we have all tasks and data at hand but at the "
          },
          {
            "Text": "online",
            "AttrFlags": 1
          },
          {
            "Text": " variant, where tasks appear during execution."
          }
        ]
      }
    ],
    "title": "Minimizing Lateness",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}