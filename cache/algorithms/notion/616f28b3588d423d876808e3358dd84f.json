{
  "ID": "616f28b3-588d-423d-8768-08e3358dd84f",
  "Root": {
    "alive": true,
    "content": [
      "b0050c7e-00b7-4f34-aeff-348ea3ab2baa"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551929262738,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "616f28b3-588d-423d-8768-08e3358dd84f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551929262738,
    "parent_id": "88259ac2-4526-4ea5-b9e9-d03f7dd06c8e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Implementation of Sliding Window Algorithm in C"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929262735,
        "id": "b0050c7e-00b7-4f34-aeff-348ea3ab2baa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929262735,
        "parent_id": "616f28b3-588d-423d-8768-08e3358dd84f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class SlidingWindow\n{\n    public static int[] MaxSlidingWindow(int[] input, int k)\n    {\n        int[] result = new int[input.Length - k + 1];\n        for (int i = 0; i \u003c= input.Length - k; i++)\n        {\n            var max = input[i];\n            for (int j = 1; j \u003c k; j++)\n            {\n                if (input[i + j] \u003e max) max = input[i + j];\n            }\n            result[i] = max;\n        }\n        return result;\n    }\n\n    public static int[] MinSlidingWindow(int[] input, int k)\n    {\n        int[] result = new int[input.Length - k + 1];\n        for (int i = 0; i \u003c= input.Length - k; i++)\n        {\n            var min = input[i];\n            for (int j = 1; j \u003c k; j++)\n            {\n                if (input[i + j] \u003c min) min = input[i + j];\n            }\n            result[i] = min;\n        }\n        return result;\n    }\n\n    public static int[] MainMax(int[] input, int n)\n    {\n        return MaxSlidingWindow(input, n);\n    }\n\n    public static int[] MainMin(int[] input, int n)\n    {\n        return MinSlidingWindow(input, n);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class SlidingWindow\n{\n    public static int[] MaxSlidingWindow(int[] input, int k)\n    {\n        int[] result = new int[input.Length - k + 1];\n        for (int i = 0; i \u003c= input.Length - k; i++)\n        {\n            var max = input[i];\n            for (int j = 1; j \u003c k; j++)\n            {\n                if (input[i + j] \u003e max) max = input[i + j];\n            }\n            result[i] = max;\n        }\n        return result;\n    }\n\n    public static int[] MinSlidingWindow(int[] input, int k)\n    {\n        int[] result = new int[input.Length - k + 1];\n        for (int i = 0; i \u003c= input.Length - k; i++)\n        {\n            var min = input[i];\n            for (int j = 1; j \u003c k; j++)\n            {\n                if (input[i + j] \u003c min) min = input[i + j];\n            }\n            result[i] = min;\n        }\n        return result;\n    }\n\n    public static int[] MainMax(int[] input, int n)\n    {\n        return MaxSlidingWindow(input, n);\n    }\n\n    public static int[] MainMin(int[] input, int n)\n    {\n        return MinSlidingWindow(input, n);\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Implementation of Sliding Window Algorithm in C",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}