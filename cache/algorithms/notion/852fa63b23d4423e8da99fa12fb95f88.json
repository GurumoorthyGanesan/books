{
  "ID": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
  "Root": {
    "alive": true,
    "content": [
      "e632b841-0ef4-4a90-9a5a-ad966145355d",
      "0284576e-d522-4a1b-a2d9-2451f98e6339",
      "cb8058bf-aae2-4314-8d6f-9497853595da",
      "9fbe0327-fbd0-49ba-b647-a3f6e04bb4f5",
      "2c98b334-c948-4f11-97e4-6b2e95e8c9ee",
      "48aa106a-70ec-44b7-ad58-6cd851146326",
      "14e41cbd-29db-49e0-8aa2-6fd883df5e1e",
      "e0dafbde-6bd5-48f0-8e35-4f57933b2a32",
      "af87e8a8-434b-405f-82e2-df4f8922dc5e",
      "38d00dbf-3f8e-475f-a4af-aa2552b43de3",
      "0b5f3c1f-54ab-4174-a8ae-ecb84b9b2e54",
      "bb9ed9ab-e45a-4667-a599-3274af7ec954",
      "bfd31f60-2112-430f-8b0b-140676ac1200",
      "1af81222-9924-42df-8729-be74be95fba5",
      "4c32fc27-51f8-4f1c-8282-8185e3a31888",
      "70770ecc-c3cd-4a05-acd5-c55de3e1971f",
      "95d31c8e-295e-4f71-84b4-c8ab3d003954",
      "bf4943d7-a8f1-489e-850b-02364a3bd71f",
      "af3c5fbe-43a9-4250-9af2-1f694b45707d",
      "12edb0de-4eff-409e-8cc7-7d1212cf3181",
      "8a76008d-c1f4-432e-9387-399db04e8a65",
      "73cd50fa-ee82-4a97-863a-6cb17bc1d0b4",
      "0a222b06-3748-4422-b01c-f9a916690a1b",
      "647c7ccc-8d70-4e51-9724-7e820532abd1",
      "5df8a43f-152f-47a1-9a11-ef248c43a51a",
      "e3f4627d-4f4f-44bf-aec7-c235dc4e18f2",
      "8e4f6d20-e35c-4676-9d8c-c974529d1a59",
      "58f0aff3-e297-4e0d-9c8c-f92d061fe9db",
      "b1484986-fd3b-49d1-a2e8-4d68712cd3f3",
      "0ecce48d-94ac-4391-9fcd-29c86b6055c2",
      "f721845d-9d74-4cce-bd90-ffe0b78d9e13",
      "18812729-af81-4450-9bf5-c3eed4ab91c2",
      "b06b8d01-d13f-4961-84f8-649a70121063",
      "f168c71f-26cf-4b14-b77a-8edf2a5a2590",
      "f5b06f8a-b423-4667-8296-203bf3022b3f",
      "d1c9f974-d60f-4b43-93e0-700d7e60f7c0",
      "b381ef76-a2e2-43ed-8b05-afac510cf97e",
      "41648c35-fc19-4e4a-ba49-3b2bd078e401",
      "b5093c1e-f61a-45d3-b532-7b4a19d56f23",
      "a3439230-4793-451b-98ac-f4df7db23bff",
      "68717dce-dc3b-45ec-9954-05aa2b90acec",
      "7968abc1-0388-44bf-a5c8-484dcd94ed42",
      "d9aefaaf-69f8-416d-8c78-f3e9e9b61140"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551928429912,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551928429912,
    "parent_id": "2bfd570f-dc07-4daa-b3b2-a794ef12f08e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Single Source Shortest Path Algorithm Given there is a negative cycle in a graph"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429894,
        "id": "e632b841-0ef4-4a90-9a5a-ad966145355d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429894,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Before reading this example, it is required to have a brief idea on edge-relaxation. You can learn it from ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "here",
              [
                [
                  "i"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/algorithm/7151/dijkstra-s-algorithm#t=201610020826272688942"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Before reading this example, it is required to have a brief idea on edge-relaxation. You can learn it from ",
            "AttrFlags": 4
          },
          {
            "Text": "here",
            "AttrFlags": 4,
            "Link": "http://stackoverflow.com/documentation/algorithm/7151/dijkstra-s-algorithm#t=201610020826272688942"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429896,
        "id": "0284576e-d522-4a1b-a2d9-2451f98e6339",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429896,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Bellman-Ford",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Bellman%E2%80%93Ford_algorithm"
                ]
              ]
            ],
            [
              " Algorithm is computes the shortest paths from a single source vertex to all of the other vertices in a weighted digraph. Even though it is slower than "
            ],
            [
              "Dijkstra’s Algorithm",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/algorithm/7151/dijkstra-s-algorithm#t=201610020826272688942"
                ]
              ]
            ],
            [
              ", it works in the cases when the weight of the edge is negative and it also finds negative weight cycle in the graph. The problem with Dijkstra’s Algorithm is, if there’s a negative cycle, you keep going through the cycle again and again and keep reducing the distance between two vertices."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Bellman-Ford",
            "Link": "https://en.wikipedia.org/wiki/Bellman%E2%80%93Ford_algorithm"
          },
          {
            "Text": " Algorithm is computes the shortest paths from a single source vertex to all of the other vertices in a weighted digraph. Even though it is slower than "
          },
          {
            "Text": "Dijkstra’s Algorithm",
            "Link": "http://stackoverflow.com/documentation/algorithm/7151/dijkstra-s-algorithm#t=201610020826272688942"
          },
          {
            "Text": ", it works in the cases when the weight of the edge is negative and it also finds negative weight cycle in the graph. The problem with Dijkstra’s Algorithm is, if there’s a negative cycle, you keep going through the cycle again and again and keep reducing the distance between two vertices."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429897,
        "id": "cb8058bf-aae2-4314-8d6f-9497853595da",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429897,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The idea of this algorithm is to go through all the edges of this graph one-by-one in some random order. It can be any random order. But you must ensure, if "
            ],
            [
              "u-v",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " (where "
            ],
            [
              "u",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "v",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " are two vertices in a graph) is one of your orders, then there must be an edge from "
            ],
            [
              "u",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "v",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". Usually it is taken directly from the order of the input given. Again, any random order will work."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The idea of this algorithm is to go through all the edges of this graph one-by-one in some random order. It can be any random order. But you must ensure, if "
          },
          {
            "Text": "u-v",
            "AttrFlags": 1
          },
          {
            "Text": " (where "
          },
          {
            "Text": "u",
            "AttrFlags": 1
          },
          {
            "Text": " and "
          },
          {
            "Text": "v",
            "AttrFlags": 1
          },
          {
            "Text": " are two vertices in a graph) is one of your orders, then there must be an edge from "
          },
          {
            "Text": "u",
            "AttrFlags": 1
          },
          {
            "Text": " to "
          },
          {
            "Text": "v",
            "AttrFlags": 1
          },
          {
            "Text": ". Usually it is taken directly from the order of the input given. Again, any random order will work."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429897,
        "id": "9fbe0327-fbd0-49ba-b647-a3f6e04bb4f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429897,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "After selecting the order, we will "
            ],
            [
              "relax",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " the edges according to the relaxation formula. For a given edge "
            ],
            [
              "u-v",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " going from "
            ],
            [
              "u",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "v",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " the relaxation formula is:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "After selecting the order, we will "
          },
          {
            "Text": "relax",
            "AttrFlags": 4
          },
          {
            "Text": " the edges according to the relaxation formula. For a given edge "
          },
          {
            "Text": "u-v",
            "AttrFlags": 1
          },
          {
            "Text": " going from "
          },
          {
            "Text": "u",
            "AttrFlags": 1
          },
          {
            "Text": " to "
          },
          {
            "Text": "v",
            "AttrFlags": 1
          },
          {
            "Text": " the relaxation formula is:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429898,
        "id": "2c98b334-c948-4f11-97e4-6b2e95e8c9ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429898,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if distance[u] + cost[u][v] \u003c d[v]\n    d[v] = d[u] + cost[u][v]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if distance[u] + cost[u][v] \u003c d[v]\n    d[v] = d[u] + cost[u][v]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429899,
        "id": "48aa106a-70ec-44b7-ad58-6cd851146326",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429899,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "That is, if the distance from "
            ],
            [
              "source",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " to any vertex "
            ],
            [
              "u",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " + the weight of the "
            ],
            [
              "edge u-v",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " is less than the distance from "
            ],
            [
              "source",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " to another vertex "
            ],
            [
              "v",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", we update the distance from "
            ],
            [
              "source",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "v",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". We need to "
            ],
            [
              "relax",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " the edges at most "
            ],
            [
              "(V-1)",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " times where "
            ],
            [
              "V",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " is the number of edges in the graph. Why "
            ],
            [
              "(V-1)",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " you ask? We’ll explain it in another example. Also we are going to keep track of the parent vertex of any vertex, that is when we relax an edge, we will set:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "That is, if the distance from "
          },
          {
            "Text": "source",
            "AttrFlags": 1
          },
          {
            "Text": " to any vertex "
          },
          {
            "Text": "u",
            "AttrFlags": 1
          },
          {
            "Text": " + the weight of the "
          },
          {
            "Text": "edge u-v",
            "AttrFlags": 1
          },
          {
            "Text": " is less than the distance from "
          },
          {
            "Text": "source",
            "AttrFlags": 1
          },
          {
            "Text": " to another vertex "
          },
          {
            "Text": "v",
            "AttrFlags": 1
          },
          {
            "Text": ", we update the distance from "
          },
          {
            "Text": "source",
            "AttrFlags": 1
          },
          {
            "Text": " to "
          },
          {
            "Text": "v",
            "AttrFlags": 1
          },
          {
            "Text": ". We need to "
          },
          {
            "Text": "relax",
            "AttrFlags": 4
          },
          {
            "Text": " the edges at most "
          },
          {
            "Text": "(V-1)",
            "AttrFlags": 1
          },
          {
            "Text": " times where "
          },
          {
            "Text": "V",
            "AttrFlags": 1
          },
          {
            "Text": " is the number of edges in the graph. Why "
          },
          {
            "Text": "(V-1)",
            "AttrFlags": 1
          },
          {
            "Text": " you ask? We’ll explain it in another example. Also we are going to keep track of the parent vertex of any vertex, that is when we relax an edge, we will set:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429899,
        "id": "14e41cbd-29db-49e0-8aa2-6fd883df5e1e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429899,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "parent[v] = u"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "parent[v] = u",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429899,
        "id": "e0dafbde-6bd5-48f0-8e35-4f57933b2a32",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429899,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It means we’ve found another shorter path to reach "
            ],
            [
              "v",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " via "
            ],
            [
              "u",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". We will need this later to print the shortest path from "
            ],
            [
              "source",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " to the destined vertex."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It means we’ve found another shorter path to reach "
          },
          {
            "Text": "v",
            "AttrFlags": 1
          },
          {
            "Text": " via "
          },
          {
            "Text": "u",
            "AttrFlags": 1
          },
          {
            "Text": ". We will need this later to print the shortest path from "
          },
          {
            "Text": "source",
            "AttrFlags": 1
          },
          {
            "Text": " to the destined vertex."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429900,
        "id": "af87e8a8-434b-405f-82e2-df4f8922dc5e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429900,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s look at an example. We have a graph:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s look at an example. We have a graph:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429900,
        "id": "38d00dbf-3f8e-475f-a4af-aa2552b43de3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429900,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/a3be9c96-738a-443b-b2a0-6c8105cb205b/b78ce0551e74bccceef52528239e9d785fe7a6a5.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/a3be9c96-738a-443b-b2a0-6c8105cb205b/b78ce0551e74bccceef52528239e9d785fe7a6a5.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2Fa3be9c96-738a-443b-b2a0-6c8105cb205b%2Fb78ce0551e74bccceef52528239e9d785fe7a6a5.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429900,
        "id": "0b5f3c1f-54ab-4174-a8ae-ecb84b9b2e54",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429900,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We have selected "
            ],
            [
              "1",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " as the "
            ],
            [
              "source",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " vertex. We want to find out the shortest path from the "
            ],
            [
              "source",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " to all other vertices."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We have selected "
          },
          {
            "Text": "1",
            "AttrFlags": 1
          },
          {
            "Text": " as the "
          },
          {
            "Text": "source",
            "AttrFlags": 1
          },
          {
            "Text": " vertex. We want to find out the shortest path from the "
          },
          {
            "Text": "source",
            "AttrFlags": 1
          },
          {
            "Text": " to all other vertices."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429900,
        "id": "bb9ed9ab-e45a-4667-a599-3274af7ec954",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429900,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "At first, "
            ],
            [
              "d[1] = 0",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " because it is the source. And rest are "
            ],
            [
              "infinity",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", because we don’t know their distance yet."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "At first, "
          },
          {
            "Text": "d[1] = 0",
            "AttrFlags": 1
          },
          {
            "Text": " because it is the source. And rest are "
          },
          {
            "Text": "infinity",
            "AttrFlags": 4
          },
          {
            "Text": ", because we don’t know their distance yet."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429901,
        "id": "bfd31f60-2112-430f-8b0b-140676ac1200",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429901,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We will relax the edges in this sequence:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We will relax the edges in this sequence:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429901,
        "id": "1af81222-9924-42df-8729-be74be95fba5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429901,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "+--------+--------+--------+--------+--------+--------+--------+\n| Serial |    1   |    2   |    3   |    4   |    5   |    6   |\n+--------+--------+--------+--------+--------+--------+--------+\n|  Edge  |  4-\u003e5  |  3-\u003e4  |  1-\u003e3  |  1-\u003e4  |  4-\u003e6  |  2-\u003e3  |\n+--------+--------+--------+--------+--------+--------+--------+"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "+--------+--------+--------+--------+--------+--------+--------+\n| Serial |    1   |    2   |    3   |    4   |    5   |    6   |\n+--------+--------+--------+--------+--------+--------+--------+\n|  Edge  |  4-\u003e5  |  3-\u003e4  |  1-\u003e3  |  1-\u003e4  |  4-\u003e6  |  2-\u003e3  |\n+--------+--------+--------+--------+--------+--------+--------+",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429901,
        "id": "4c32fc27-51f8-4f1c-8282-8185e3a31888",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429901,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can take any sequence you want. If we "
            ],
            [
              "relax",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " the edges once, what do we get? We get the distance from "
            ],
            [
              "source",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " to all other vertices of the path that uses at most 1 edge. Now let’s relax the edges and update the values of "
            ],
            [
              "d[]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". We get:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can take any sequence you want. If we "
          },
          {
            "Text": "relax",
            "AttrFlags": 4
          },
          {
            "Text": " the edges once, what do we get? We get the distance from "
          },
          {
            "Text": "source",
            "AttrFlags": 1
          },
          {
            "Text": " to all other vertices of the path that uses at most 1 edge. Now let’s relax the edges and update the values of "
          },
          {
            "Text": "d[]",
            "AttrFlags": 1
          },
          {
            "Text": ". We get:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429902,
        "id": "70770ecc-c3cd-4a05-acd5-c55de3e1971f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429902,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "d[4]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " + "
            ],
            [
              "cost[4][5]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "infinity",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " + "
            ],
            [
              "7",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "infinity",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". We can’t update this one."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "d[4]",
            "AttrFlags": 1
          },
          {
            "Text": " + "
          },
          {
            "Text": "cost[4][5]",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "infinity",
            "AttrFlags": 1
          },
          {
            "Text": " + "
          },
          {
            "Text": "7",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "infinity",
            "AttrFlags": 1
          },
          {
            "Text": ". We can’t update this one."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429903,
        "id": "95d31c8e-295e-4f71-84b4-c8ab3d003954",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429903,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "d[2]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " + "
            ],
            [
              "cost[3][4]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "infinity",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". We can’t update this one."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "d[2]",
            "AttrFlags": 1
          },
          {
            "Text": " + "
          },
          {
            "Text": "cost[3][4]",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "infinity",
            "AttrFlags": 1
          },
          {
            "Text": ". We can’t update this one."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429904,
        "id": "bf4943d7-a8f1-489e-850b-02364a3bd71f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429904,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "d[1]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " + "
            ],
            [
              "cost[1][2]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "0",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " + "
            ],
            [
              "2",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "2",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " \u003c "
            ],
            [
              "d[2]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". So "
            ],
            [
              "d[2]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "2",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". Also "
            ],
            [
              "parent[2] = 1",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "d[1]",
            "AttrFlags": 1
          },
          {
            "Text": " + "
          },
          {
            "Text": "cost[1][2]",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "0",
            "AttrFlags": 1
          },
          {
            "Text": " + "
          },
          {
            "Text": "2",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "2",
            "AttrFlags": 1
          },
          {
            "Text": " \u003c "
          },
          {
            "Text": "d[2]",
            "AttrFlags": 1
          },
          {
            "Text": ". So "
          },
          {
            "Text": "d[2]",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "2",
            "AttrFlags": 1
          },
          {
            "Text": ". Also "
          },
          {
            "Text": "parent[2] = 1",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429904,
        "id": "af3c5fbe-43a9-4250-9af2-1f694b45707d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429904,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "d[1]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " + "
            ],
            [
              "cost[1][4]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "4",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". So "
            ],
            [
              "d[4] = 4",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " \u003c "
            ],
            [
              "d[4]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "parent[4]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "1",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "d[1]",
            "AttrFlags": 1
          },
          {
            "Text": " + "
          },
          {
            "Text": "cost[1][4]",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "4",
            "AttrFlags": 1
          },
          {
            "Text": ". So "
          },
          {
            "Text": "d[4] = 4",
            "AttrFlags": 1
          },
          {
            "Text": " \u003c "
          },
          {
            "Text": "d[4]",
            "AttrFlags": 1
          },
          {
            "Text": ". "
          },
          {
            "Text": "parent[4]",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "1",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429905,
        "id": "12edb0de-4eff-409e-8cc7-7d1212cf3181",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429905,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "d[4]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " + "
            ],
            [
              "cost[4][6]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "9",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "d[6]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "9",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " \u003c "
            ],
            [
              "d[6]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "parent[6]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "4",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "d[4]",
            "AttrFlags": 1
          },
          {
            "Text": " + "
          },
          {
            "Text": "cost[4][6]",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "9",
            "AttrFlags": 1
          },
          {
            "Text": ". "
          },
          {
            "Text": "d[6]",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "9",
            "AttrFlags": 1
          },
          {
            "Text": " \u003c "
          },
          {
            "Text": "d[6]",
            "AttrFlags": 1
          },
          {
            "Text": ". "
          },
          {
            "Text": "parent[6]",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "4",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429905,
        "id": "8a76008d-c1f4-432e-9387-399db04e8a65",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429905,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "d[2]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " + "
            ],
            [
              "cost[2][2]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "infinity",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". We can’t update this one."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "d[2]",
            "AttrFlags": 1
          },
          {
            "Text": " + "
          },
          {
            "Text": "cost[2][2]",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "infinity",
            "AttrFlags": 1
          },
          {
            "Text": ". We can’t update this one."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429905,
        "id": "73cd50fa-ee82-4a97-863a-6cb17bc1d0b4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429905,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We couldn’t update some vertices, because the "
            ],
            [
              "d[u] + cost[u][v] \u003c d[v]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " condition didn’t match. As we have said before, we found the paths from "
            ],
            [
              "source",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " to other nodes using maximum 1 edge."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We couldn’t update some vertices, because the "
          },
          {
            "Text": "d[u] + cost[u][v] \u003c d[v]",
            "AttrFlags": 2
          },
          {
            "Text": " condition didn’t match. As we have said before, we found the paths from "
          },
          {
            "Text": "source",
            "AttrFlags": 1
          },
          {
            "Text": " to other nodes using maximum 1 edge."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429906,
        "id": "0a222b06-3748-4422-b01c-f9a916690a1b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429906,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/a3be9c96-738a-443b-b2a0-6c8105cb205b/8f8769d633b37be898597caeda7398d56ff57838.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/a3be9c96-738a-443b-b2a0-6c8105cb205b/8f8769d633b37be898597caeda7398d56ff57838.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2Fa3be9c96-738a-443b-b2a0-6c8105cb205b%2F8f8769d633b37be898597caeda7398d56ff57838.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429906,
        "id": "647c7ccc-8d70-4e51-9724-7e820532abd1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429906,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Our second iteration will provide us with the path using 2 nodes. We get:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Our second iteration will provide us with the path using 2 nodes. We get:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429906,
        "id": "5df8a43f-152f-47a1-9a11-ef248c43a51a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429906,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "d[4]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " + "
            ],
            [
              "cost[4][5]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "12",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " \u003c "
            ],
            [
              "d[5]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "d[5]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "12",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "parent[5]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "4",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "d[4]",
            "AttrFlags": 1
          },
          {
            "Text": " + "
          },
          {
            "Text": "cost[4][5]",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "12",
            "AttrFlags": 1
          },
          {
            "Text": " \u003c "
          },
          {
            "Text": "d[5]",
            "AttrFlags": 1
          },
          {
            "Text": ". "
          },
          {
            "Text": "d[5]",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "12",
            "AttrFlags": 1
          },
          {
            "Text": ". "
          },
          {
            "Text": "parent[5]",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "4",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429907,
        "id": "e3f4627d-4f4f-44bf-aec7-c235dc4e18f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429907,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "d[3]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " + "
            ],
            [
              "cost[3][4]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "1",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " \u003c "
            ],
            [
              "d[4]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "d[4]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "1",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "parent[4]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "3",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "d[3]",
            "AttrFlags": 1
          },
          {
            "Text": " + "
          },
          {
            "Text": "cost[3][4]",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "1",
            "AttrFlags": 1
          },
          {
            "Text": " \u003c "
          },
          {
            "Text": "d[4]",
            "AttrFlags": 1
          },
          {
            "Text": ". "
          },
          {
            "Text": "d[4]",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "1",
            "AttrFlags": 1
          },
          {
            "Text": ". "
          },
          {
            "Text": "parent[4]",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "3",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429907,
        "id": "8e4f6d20-e35c-4676-9d8c-c974529d1a59",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429907,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "d[3]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " remains unchanged."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "d[3]",
            "AttrFlags": 1
          },
          {
            "Text": " remains unchanged."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429908,
        "id": "58f0aff3-e297-4e0d-9c8c-f92d061fe9db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429908,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "d[4]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " remains unchanged."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "d[4]",
            "AttrFlags": 1
          },
          {
            "Text": " remains unchanged."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429908,
        "id": "b1484986-fd3b-49d1-a2e8-4d68712cd3f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429908,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "d[4]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " + "
            ],
            [
              "cost[4][6]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "6",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " \u003c "
            ],
            [
              "d[6]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "d[6]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "6",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "parent[6]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " = "
            ],
            [
              "4",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "d[4]",
            "AttrFlags": 1
          },
          {
            "Text": " + "
          },
          {
            "Text": "cost[4][6]",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "6",
            "AttrFlags": 1
          },
          {
            "Text": " \u003c "
          },
          {
            "Text": "d[6]",
            "AttrFlags": 1
          },
          {
            "Text": ". "
          },
          {
            "Text": "d[6]",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "6",
            "AttrFlags": 1
          },
          {
            "Text": ". "
          },
          {
            "Text": "parent[6]",
            "AttrFlags": 1
          },
          {
            "Text": " = "
          },
          {
            "Text": "4",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429909,
        "id": "0ecce48d-94ac-4391-9fcd-29c86b6055c2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429909,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "d[3]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " remains unchanged."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "d[3]",
            "AttrFlags": 1
          },
          {
            "Text": " remains unchanged."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429909,
        "id": "f721845d-9d74-4cce-bd90-ffe0b78d9e13",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429909,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Our graph will look like:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Our graph will look like:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429909,
        "id": "18812729-af81-4450-9bf5-c3eed4ab91c2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429909,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/a3be9c96-738a-443b-b2a0-6c8105cb205b/535c20b7c66b8d552caa357e53ab633a061f7f59.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/a3be9c96-738a-443b-b2a0-6c8105cb205b/535c20b7c66b8d552caa357e53ab633a061f7f59.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2Fa3be9c96-738a-443b-b2a0-6c8105cb205b%2F535c20b7c66b8d552caa357e53ab633a061f7f59.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429909,
        "id": "b06b8d01-d13f-4961-84f8-649a70121063",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429909,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Our 3rd iteration will only update "
            ],
            [
              "vertex 5",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", where "
            ],
            [
              "d[5]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " will be "
            ],
            [
              "8",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". Our graph will look like:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Our 3rd iteration will only update "
          },
          {
            "Text": "vertex 5",
            "AttrFlags": 1
          },
          {
            "Text": ", where "
          },
          {
            "Text": "d[5]",
            "AttrFlags": 1
          },
          {
            "Text": " will be "
          },
          {
            "Text": "8",
            "AttrFlags": 1
          },
          {
            "Text": ". Our graph will look like:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429909,
        "id": "f168c71f-26cf-4b14-b77a-8edf2a5a2590",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429909,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/a3be9c96-738a-443b-b2a0-6c8105cb205b/ad112621c6e9909d12e38040dfbf107927499c5c.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/a3be9c96-738a-443b-b2a0-6c8105cb205b/ad112621c6e9909d12e38040dfbf107927499c5c.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2Fa3be9c96-738a-443b-b2a0-6c8105cb205b%2Fad112621c6e9909d12e38040dfbf107927499c5c.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429910,
        "id": "f5b06f8a-b423-4667-8296-203bf3022b3f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429910,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "After this no matter how many iterations we do, we’ll have the same distances. So we will keep a flag that checks if any update takes place or not. If it doesn’t, we’ll simply break the loop. Our pseudo-code will be:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "After this no matter how many iterations we do, we’ll have the same distances. So we will keep a flag that checks if any update takes place or not. If it doesn’t, we’ll simply break the loop. Our pseudo-code will be:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429910,
        "id": "d1c9f974-d60f-4b43-93e0-700d7e60f7c0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429910,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Procedure Bellman-Ford(Graph, source):\nn := number of vertices in Graph\nfor i from 1 to n\n    d[i] := infinity\n    parent[i] := NULL\nend for\nd[source] := 0\nfor i from 1 to n-1\n    flag := false\n    for all edges from (u,v) in Graph\n        if d[u] + cost[u][v] \u003c d[v]\n            d[v] := d[u] + cost[u][v]\n            parent[v] := u\n            flag := true\n        end if\n    end for\n    if flag == false\n        break\nend for\nReturn d"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Procedure Bellman-Ford(Graph, source):\nn := number of vertices in Graph\nfor i from 1 to n\n    d[i] := infinity\n    parent[i] := NULL\nend for\nd[source] := 0\nfor i from 1 to n-1\n    flag := false\n    for all edges from (u,v) in Graph\n        if d[u] + cost[u][v] \u003c d[v]\n            d[v] := d[u] + cost[u][v]\n            parent[v] := u\n            flag := true\n        end if\n    end for\n    if flag == false\n        break\nend for\nReturn d",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429911,
        "id": "b381ef76-a2e2-43ed-8b05-afac510cf97e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429911,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To keep track of negative cycle, we can modify our code using the procedure described "
            ],
            [
              "here",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/algorithm/4791/bellman-ford-algorithm/24034/detecting-negative-cycle-in-a-graph"
                ]
              ]
            ],
            [
              ". Our completed pseudo-code will be:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To keep track of negative cycle, we can modify our code using the procedure described "
          },
          {
            "Text": "here",
            "Link": "http://stackoverflow.com/documentation/algorithm/4791/bellman-ford-algorithm/24034/detecting-negative-cycle-in-a-graph"
          },
          {
            "Text": ". Our completed pseudo-code will be:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429911,
        "id": "41648c35-fc19-4e4a-ba49-3b2bd078e401",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429911,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Procedure Bellman-Ford-With-Negative-Cycle-Detection(Graph, source):\nn := number of vertices in Graph\nfor i from 1 to n\n    d[i] := infinity\n    parent[i] := NULL\nend for\nd[source] := 0\nfor i from 1 to n-1\n    flag := false\n    for all edges from (u,v) in Graph\n        if d[u] + cost[u][v] \u003c d[v]\n            d[v] := d[u] + cost[u][v]\n            parent[v] := u\n            flag := true\n        end if\n    end for\n    if flag == false\n        break\nend for\nfor all edges from (u,v) in Graph\n    if d[u] + cost[u][v] \u003c d[v]\n        Return \"Negative Cycle Detected\"\n    end if\nend for\nReturn d"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Procedure Bellman-Ford-With-Negative-Cycle-Detection(Graph, source):\nn := number of vertices in Graph\nfor i from 1 to n\n    d[i] := infinity\n    parent[i] := NULL\nend for\nd[source] := 0\nfor i from 1 to n-1\n    flag := false\n    for all edges from (u,v) in Graph\n        if d[u] + cost[u][v] \u003c d[v]\n            d[v] := d[u] + cost[u][v]\n            parent[v] := u\n            flag := true\n        end if\n    end for\n    if flag == false\n        break\nend for\nfor all edges from (u,v) in Graph\n    if d[u] + cost[u][v] \u003c d[v]\n        Return \"Negative Cycle Detected\"\n    end if\nend for\nReturn d",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429911,
        "id": "b5093c1e-f61a-45d3-b532-7b4a19d56f23",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429911,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Printing Path:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Printing Path:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429911,
        "id": "a3439230-4793-451b-98ac-f4df7db23bff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429911,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To print the shortest path to a vertex, we’ll iterate back to its parent until we find "
            ],
            [
              "NULL",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " and then print the vertices. The pseudo-code will be:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To print the shortest path to a vertex, we’ll iterate back to its parent until we find "
          },
          {
            "Text": "NULL",
            "AttrFlags": 1
          },
          {
            "Text": " and then print the vertices. The pseudo-code will be:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429911,
        "id": "68717dce-dc3b-45ec-9954-05aa2b90acec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429911,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Procedure PathPrinting(u)\nv := parent[u]\nif v == NULL\n    return\nPathPrinting(v)\nprint -\u003e u"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Procedure PathPrinting(u)\nv := parent[u]\nif v == NULL\n    return\nPathPrinting(v)\nprint -\u003e u",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429911,
        "id": "7968abc1-0388-44bf-a5c8-484dcd94ed42",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429911,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Complexity:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Complexity:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928429912,
        "id": "d9aefaaf-69f8-416d-8c78-f3e9e9b61140",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928429912,
        "parent_id": "852fa63b-23d4-423e-8da9-9fa12fb95f88",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Since we need to relax the edges maximum "
            ],
            [
              "(V-1)",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " times, the time complexity of this algorithm will be equal to "
            ],
            [
              "O(V * E)",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " where "
            ],
            [
              "E",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " denotes the number of edges, if we use "
            ],
            [
              "adjacency list",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to represent the graph. However, if "
            ],
            [
              "adjacency matrix",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is used to represent the graph, time complexity will be "
            ],
            [
              "O(V^3)",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". Reason is we can iterate through all edges in "
            ],
            [
              "O(E)",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " time when "
            ],
            [
              "adjacency list",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is used, but it takes "
            ],
            [
              "O(V^2)",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " time when "
            ],
            [
              "adjacency matrix",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is used."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Since we need to relax the edges maximum "
          },
          {
            "Text": "(V-1)",
            "AttrFlags": 1
          },
          {
            "Text": " times, the time complexity of this algorithm will be equal to "
          },
          {
            "Text": "O(V * E)",
            "AttrFlags": 1
          },
          {
            "Text": " where "
          },
          {
            "Text": "E",
            "AttrFlags": 1
          },
          {
            "Text": " denotes the number of edges, if we use "
          },
          {
            "Text": "adjacency list",
            "AttrFlags": 2
          },
          {
            "Text": " to represent the graph. However, if "
          },
          {
            "Text": "adjacency matrix",
            "AttrFlags": 2
          },
          {
            "Text": " is used to represent the graph, time complexity will be "
          },
          {
            "Text": "O(V^3)",
            "AttrFlags": 1
          },
          {
            "Text": ". Reason is we can iterate through all edges in "
          },
          {
            "Text": "O(E)",
            "AttrFlags": 1
          },
          {
            "Text": " time when "
          },
          {
            "Text": "adjacency list",
            "AttrFlags": 2
          },
          {
            "Text": " is used, but it takes "
          },
          {
            "Text": "O(V^2)",
            "AttrFlags": 1
          },
          {
            "Text": " time when "
          },
          {
            "Text": "adjacency matrix",
            "AttrFlags": 2
          },
          {
            "Text": " is used."
          }
        ]
      }
    ],
    "title": "Single Source Shortest Path Algorithm Given there is a negative cycle in a graph",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}