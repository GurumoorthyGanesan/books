{
  "ID": "34b65db4-7505-4522-94d9-4cb83b66fc19",
  "Root": {
    "alive": true,
    "content": [
      "8a5e8af8-49e4-456b-935c-09bb28c4ad7f",
      "3f54cb24-1ae3-47e2-b86d-d13edd3d4ffc",
      "b4a48cdb-8409-4534-9d11-319c84d09623",
      "3abfcfd6-7823-4d75-818f-832fbc536f9b",
      "f0bf62c3-0d56-46c6-8a90-ba071f59cdfb",
      "1d170fb9-0086-435e-b1ec-98d309e5348a",
      "d1ead423-4f6f-457b-9db9-c9307e21fed7",
      "363261b2-1f66-439f-9413-b3a5ea253203",
      "983e82f4-90b7-4871-b8ac-41a590d53011",
      "868bbe6f-ac38-406b-baa6-a02a93cd4ab0",
      "a04b42f7-b3db-4663-82cc-01fcf52098bb",
      "e3ca6eb4-8ca3-4fe1-a10c-78aba0518e25"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551928032169,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "34b65db4-7505-4522-94d9-4cb83b66fc19",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551928032169,
    "parent_id": "8ae5c9b5-b80d-4e27-930b-0dbbf5b2a075",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Storing Graphs Adjacency List"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032165,
        "id": "8a5e8af8-49e4-456b-935c-09bb28c4ad7f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032165,
        "parent_id": "34b65db4-7505-4522-94d9-4cb83b66fc19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Adjacency list",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Adjacency_list"
                ]
              ]
            ],
            [
              " is a collection of unordered lists used to represent a finite graph. Each list describes the set of neighbors of a vertex in a graph. It takes less memory to store graphs."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Adjacency list",
            "Link": "https://en.wikipedia.org/wiki/Adjacency_list"
          },
          {
            "Text": " is a collection of unordered lists used to represent a finite graph. Each list describes the set of neighbors of a vertex in a graph. It takes less memory to store graphs."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032166,
        "id": "3f54cb24-1ae3-47e2-b86d-d13edd3d4ffc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032166,
        "parent_id": "34b65db4-7505-4522-94d9-4cb83b66fc19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s see a graph, and its adjacency matrix:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s see a graph, and its adjacency matrix:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032166,
        "id": "b4a48cdb-8409-4534-9d11-319c84d09623",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032166,
        "parent_id": "34b65db4-7505-4522-94d9-4cb83b66fc19",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/602aa993-97bd-47b9-9126-ed4775c357e1/130847b7de8c1cc5a91330eee22bc9eecdfc7ab5.jpg"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/602aa993-97bd-47b9-9126-ed4775c357e1/130847b7de8c1cc5a91330eee22bc9eecdfc7ab5.jpg",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2F602aa993-97bd-47b9-9126-ed4775c357e1%2F130847b7de8c1cc5a91330eee22bc9eecdfc7ab5.jpg"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032166,
        "id": "3abfcfd6-7823-4d75-818f-832fbc536f9b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032166,
        "parent_id": "34b65db4-7505-4522-94d9-4cb83b66fc19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now we create a list using these values."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now we create a list using these values."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032166,
        "id": "f0bf62c3-0d56-46c6-8a90-ba071f59cdfb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032166,
        "parent_id": "34b65db4-7505-4522-94d9-4cb83b66fc19",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/602aa993-97bd-47b9-9126-ed4775c357e1/c02536da2bdc7b2e161d144d7ebfebccf3b9e0c6.jpg"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/602aa993-97bd-47b9-9126-ed4775c357e1/c02536da2bdc7b2e161d144d7ebfebccf3b9e0c6.jpg",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2F602aa993-97bd-47b9-9126-ed4775c357e1%2Fc02536da2bdc7b2e161d144d7ebfebccf3b9e0c6.jpg"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032167,
        "id": "1d170fb9-0086-435e-b1ec-98d309e5348a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032167,
        "parent_id": "34b65db4-7505-4522-94d9-4cb83b66fc19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is called adjacency list. It shows which nodes are connected to which nodes. We can store this information using a 2D array. But will cost us the same memory as Adjacency Matrix. Instead we are going to use dynamically allocated memory to store this one."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is called adjacency list. It shows which nodes are connected to which nodes. We can store this information using a 2D array. But will cost us the same memory as Adjacency Matrix. Instead we are going to use dynamically allocated memory to store this one."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032167,
        "id": "d1ead423-4f6f-457b-9db9-c9307e21fed7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032167,
        "parent_id": "34b65db4-7505-4522-94d9-4cb83b66fc19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Many languages support "
            ],
            [
              "Vector",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "List",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " which we can use to store adjacency list. For these, we don’t need to specify the size of the "
            ],
            [
              "List",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". We only need to specify the maximum number of nodes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Many languages support "
          },
          {
            "Text": "Vector",
            "AttrFlags": 1
          },
          {
            "Text": " or "
          },
          {
            "Text": "List",
            "AttrFlags": 1
          },
          {
            "Text": " which we can use to store adjacency list. For these, we don’t need to specify the size of the "
          },
          {
            "Text": "List",
            "AttrFlags": 1
          },
          {
            "Text": ". We only need to specify the maximum number of nodes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032167,
        "id": "363261b2-1f66-439f-9413-b3a5ea253203",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032167,
        "parent_id": "34b65db4-7505-4522-94d9-4cb83b66fc19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The pseudo-code will be:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The pseudo-code will be:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032167,
        "id": "983e82f4-90b7-4871-b8ac-41a590d53011",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032167,
        "parent_id": "34b65db4-7505-4522-94d9-4cb83b66fc19",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Procedure Adjacency-List(maxN, E):       // maxN denotes the maximum number of nodes\nedge[maxN] = Vector()                    // E denotes the number of edges\nfor i from 1 to E\n    input -\u003e x, y                        // Here x, y denotes there is an edge between x, y\n    edge[x].push(y)\n    edge[y].push(x)\nend for\nReturn edge"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Procedure Adjacency-List(maxN, E):       // maxN denotes the maximum number of nodes\nedge[maxN] = Vector()                    // E denotes the number of edges\nfor i from 1 to E\n    input -\u003e x, y                        // Here x, y denotes there is an edge between x, y\n    edge[x].push(y)\n    edge[y].push(x)\nend for\nReturn edge",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032168,
        "id": "868bbe6f-ac38-406b-baa6-a02a93cd4ab0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032168,
        "parent_id": "34b65db4-7505-4522-94d9-4cb83b66fc19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Since this one is an undirected graph, it there is an edge from "
            ],
            [
              "x",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "y",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", there is also an edge from "
            ],
            [
              "y",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "x",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". If it was a directed graph, we’d omit the second one. For weighted graphs, we need to store the cost too. We’ll create another "
            ],
            [
              "vector",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "list",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " named "
            ],
            [
              "cost[]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " to store these. The pseudo-code:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Since this one is an undirected graph, it there is an edge from "
          },
          {
            "Text": "x",
            "AttrFlags": 1
          },
          {
            "Text": " to "
          },
          {
            "Text": "y",
            "AttrFlags": 1
          },
          {
            "Text": ", there is also an edge from "
          },
          {
            "Text": "y",
            "AttrFlags": 1
          },
          {
            "Text": " to "
          },
          {
            "Text": "x",
            "AttrFlags": 1
          },
          {
            "Text": ". If it was a directed graph, we’d omit the second one. For weighted graphs, we need to store the cost too. We’ll create another "
          },
          {
            "Text": "vector",
            "AttrFlags": 1
          },
          {
            "Text": " or "
          },
          {
            "Text": "list",
            "AttrFlags": 1
          },
          {
            "Text": " named "
          },
          {
            "Text": "cost[]",
            "AttrFlags": 1
          },
          {
            "Text": " to store these. The pseudo-code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032168,
        "id": "a04b42f7-b3db-4663-82cc-01fcf52098bb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032168,
        "parent_id": "34b65db4-7505-4522-94d9-4cb83b66fc19",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Procedure Adjacency-List(maxN, E):\nedge[maxN] = Vector()\ncost[maxN] = Vector()\nfor i from 1 to E\n    input -\u003e x, y, w\n    edge[x].push(y)\n    cost[x].push(w)\nend for\nReturn edge, cost"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Procedure Adjacency-List(maxN, E):\nedge[maxN] = Vector()\ncost[maxN] = Vector()\nfor i from 1 to E\n    input -\u003e x, y, w\n    edge[x].push(y)\n    cost[x].push(w)\nend for\nReturn edge, cost",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032169,
        "id": "e3ca6eb4-8ca3-4fe1-a10c-78aba0518e25",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032169,
        "parent_id": "34b65db4-7505-4522-94d9-4cb83b66fc19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "From this one, we can easily find out the total number of nodes connected to any node, and what these nodes are. It takes less time than Adjacency Matrix. But if we needed to find out if there’s an edge between "
            ],
            [
              "u",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "v",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", it’d have been easier if we kept an adjacency matrix."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "From this one, we can easily find out the total number of nodes connected to any node, and what these nodes are. It takes less time than Adjacency Matrix. But if we needed to find out if there’s an edge between "
          },
          {
            "Text": "u",
            "AttrFlags": 1
          },
          {
            "Text": " and "
          },
          {
            "Text": "v",
            "AttrFlags": 1
          },
          {
            "Text": ", it’d have been easier if we kept an adjacency matrix."
          }
        ]
      }
    ],
    "title": "Storing Graphs Adjacency List",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}