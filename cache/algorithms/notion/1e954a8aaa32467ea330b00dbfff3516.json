{
  "ID": "1e954a8a-aa32-467e-a330-b00dbfff3516",
  "Root": {
    "alive": true,
    "content": [
      "0f2cd1b9-2cce-4255-9416-d665bfbdb13f",
      "a3c16139-1c6b-44d8-8a6e-2f4ee6154115"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551929639854,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1e954a8a-aa32-467e-a330-b00dbfff3516",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551929639854,
    "parent_id": "a30ef162-2edd-4b12-90d7-25d5049ed098",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Generic Code for Anagrams"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929639851,
        "id": "0f2cd1b9-2cce-4255-9416-d665bfbdb13f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929639851,
        "parent_id": "1e954a8a-aa32-467e-a330-b00dbfff3516",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "(function(){\n\n    var hashMap = {};\n    \n    function isAnagram (str1, str2) {\n    \n        if(str1.length !== str2.length){\n            return false;\n        }\n        \n        // Create hash map of str1 character and increase value one (+1).\n        createStr1HashMap(str1);\n\n        // Check str2 character are key in hash map and decrease value by one(-1);\n        var valueExist = createStr2HashMap(str2);\n\n        // Check all value of hashMap keys are zero, so it will be anagram.\n        return isStringsAnagram(valueExist);\n    }\n    \n    function createStr1HashMap (str1) {\n        [].map.call(str1, function(value, index, array){\n            hashMap[value] = value in hashMap ?  (hashMap[value] + 1) : 1;\n            return value;\n        });\n    }\n    \n    function createStr2HashMap (str2) {\n        var valueExist = [].every.call(str2, function(value, index, array){\n            if(value in hashMap) {\n                hashMap[value] = hashMap[value] - 1;\n            }\n            return value in hashMap;\n        });\n        return valueExist;\n    }\n    \n    function isStringsAnagram (valueExist) {\n        if(!valueExist) {\n            return valueExist;\n        } else {\n            var isAnagram;\n            for(var i in hashMap) {\n                if(hashMap[i] !== 0) {\n                    isAnagram = false;\n                    break;\n                } else {\n                    isAnagram = true;\n                }\n            }\n    \n            return isAnagram;\n        }\n    }\n    \n    isAnagram('stackoverflow', 'flowerovstack'); // true\n    isAnagram('stackoverflow', 'flowervvstack'); // false\n    \n})();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "(function(){\n\n    var hashMap = {};\n    \n    function isAnagram (str1, str2) {\n    \n        if(str1.length !== str2.length){\n            return false;\n        }\n        \n        // Create hash map of str1 character and increase value one (+1).\n        createStr1HashMap(str1);\n\n        // Check str2 character are key in hash map and decrease value by one(-1);\n        var valueExist = createStr2HashMap(str2);\n\n        // Check all value of hashMap keys are zero, so it will be anagram.\n        return isStringsAnagram(valueExist);\n    }\n    \n    function createStr1HashMap (str1) {\n        [].map.call(str1, function(value, index, array){\n            hashMap[value] = value in hashMap ?  (hashMap[value] + 1) : 1;\n            return value;\n        });\n    }\n    \n    function createStr2HashMap (str2) {\n        var valueExist = [].every.call(str2, function(value, index, array){\n            if(value in hashMap) {\n                hashMap[value] = hashMap[value] - 1;\n            }\n            return value in hashMap;\n        });\n        return valueExist;\n    }\n    \n    function isStringsAnagram (valueExist) {\n        if(!valueExist) {\n            return valueExist;\n        } else {\n            var isAnagram;\n            for(var i in hashMap) {\n                if(hashMap[i] !== 0) {\n                    isAnagram = false;\n                    break;\n                } else {\n                    isAnagram = true;\n                }\n            }\n    \n            return isAnagram;\n        }\n    }\n    \n    isAnagram('stackoverflow', 'flowerovstack'); // true\n    isAnagram('stackoverflow', 'flowervvstack'); // false\n    \n})();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929639854,
        "id": "a3c16139-1c6b-44d8-8a6e-2f4ee6154115",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929639854,
        "parent_id": "1e954a8a-aa32-467e-a330-b00dbfff3516",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Time complexity :- 3n i.e O(n)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Time complexity :- 3n i.e O(n)."
          }
        ]
      }
    ],
    "title": "Generic Code for Anagrams",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}