{
  "ID": "ca4da576-7ed7-418f-9733-261569a0a736",
  "Root": {
    "alive": true,
    "content": [
      "68bfff25-82bb-4b3d-8732-88858a78eaeb"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551928820802,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ca4da576-7ed7-418f-9733-261569a0a736",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551928820802,
    "parent_id": "c06d75d6-1a6d-48da-8e09-4d63502dedee",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "C Implementation"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928820800,
        "id": "68bfff25-82bb-4b3d-8732-88858a78eaeb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928820800,
        "parent_id": "ca4da576-7ed7-418f-9733-261569a0a736",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class HeapSort\n{\n    public static void Heapify(int[] input, int n, int i)\n    {\n        int largest = i;\n        int l = i + 1;\n        int r = i + 2;\n\n        if (l \u003c n \u0026\u0026 input[l] \u003e input[largest])\n            largest = l;\n\n        if (r \u003c n \u0026\u0026 input[r] \u003e input[largest])\n            largest = r;\n\n        if (largest != i)\n        {\n            var temp = input[i];\n            input[i] = input[largest];\n            input[largest] = temp;\n            Heapify(input, n, largest);\n        }\n    }\n\n    public static void SortHeap(int[] input, int n)\n    {\n        for (var i = n - 1; i \u003e= 0; i--)\n        {\n            Heapify(input, n, i);\n        }\n        for (int j = n - 1; j \u003e= 0; j--)\n        {\n            var temp = input[0];\n            input[0] = input[j];\n            input[j] = temp;\n            Heapify(input, j, 0);\n        }\n    }\n\n    public static int[] Main(int[] input)\n    {\n        SortHeap(input, input.Length);\n        return input;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class HeapSort\n{\n    public static void Heapify(int[] input, int n, int i)\n    {\n        int largest = i;\n        int l = i + 1;\n        int r = i + 2;\n\n        if (l \u003c n \u0026\u0026 input[l] \u003e input[largest])\n            largest = l;\n\n        if (r \u003c n \u0026\u0026 input[r] \u003e input[largest])\n            largest = r;\n\n        if (largest != i)\n        {\n            var temp = input[i];\n            input[i] = input[largest];\n            input[largest] = temp;\n            Heapify(input, n, largest);\n        }\n    }\n\n    public static void SortHeap(int[] input, int n)\n    {\n        for (var i = n - 1; i \u003e= 0; i--)\n        {\n            Heapify(input, n, i);\n        }\n        for (int j = n - 1; j \u003e= 0; j--)\n        {\n            var temp = input[0];\n            input[0] = input[j];\n            input[j] = temp;\n            Heapify(input, j, 0);\n        }\n    }\n\n    public static int[] Main(int[] input)\n    {\n        SortHeap(input, input.Length);\n        return input;\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "C Implementation",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}