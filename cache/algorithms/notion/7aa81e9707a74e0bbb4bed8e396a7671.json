{
  "ID": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
  "Root": {
    "alive": true,
    "content": [
      "df6dc396-5111-4ce8-995c-746077f02a50",
      "0a39c31a-e461-42a3-b0e3-fda23ea5e75c",
      "32d038af-8aad-4966-a670-3c9bd8cc3110",
      "2be8aea0-bb2c-443d-8c44-1a602791740a",
      "7b762107-0629-48d3-b501-978c2fc02797",
      "c14fad4b-cd97-4db2-a182-4f4e82c0c65f",
      "1a33093b-025c-4759-978e-ab2a722b17bf",
      "63eba700-affa-4625-9459-fc0536e8b6c5",
      "b6eff5c8-50f7-4bb8-9f96-60900db9061a",
      "65682daa-55a2-4b11-beec-d54d191c0988",
      "2e376316-4eae-40e1-9a51-b408e22903e0",
      "94f911a2-28f4-4156-a4fa-ade916511fc3",
      "d1bef3c1-dbf9-4280-b587-3f3b88e11888",
      "0fdf9c03-afc5-499c-924d-4cb108328ad6",
      "6edc2231-278b-4653-841a-26b20b3a1ecd",
      "e2f465ed-316e-495e-88d8-62bbcab357da",
      "ff61b991-9fcf-42d0-893a-5f49be2acd1a",
      "8ae8d21c-4102-4cdf-8311-f917aed21d6f",
      "bbfeeb9d-a7b8-4444-ada6-e274085e25b2",
      "294df7ec-b32e-479e-be40-a160adb8b21d",
      "25bd03d2-7490-448f-a004-154205f00c2f",
      "8ac7a43b-3173-45c9-ba11-3387143917ae",
      "75d5d6c5-6012-440c-802f-b276c2933a5e",
      "0d18ddbf-684c-4f6d-aeea-3ff02d7d5bf0",
      "b37ded1b-d5bb-449a-af8b-5e8dec8d4f7f",
      "6c4845a3-47b0-4de5-b8d4-7e4a52dd155b",
      "3ce53ea1-f56e-4318-a973-6cdbf13bbbae",
      "ed0929d5-6247-4a37-a362-47f37b6975d7",
      "8a503376-741a-4ff5-8694-5f070b61739a",
      "792c5098-beaf-41e4-9590-919cdfabad1b",
      "d38d435f-9742-44ef-a92f-18bf95af887d",
      "0ec5121b-386a-4099-aab0-bebefc507700",
      "9c02d19e-dda8-4461-b581-624b4088dc89",
      "93e7ab5b-1422-4886-9f40-5884ba2a84ca",
      "a01abeea-13dd-4edb-a466-fd01b140bfb9",
      "62c3e920-d62a-4f7b-8987-e29a017926c3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551929280672,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551929280672,
    "parent_id": "61f46cc6-d7e0-4aeb-ae8a-47f4eb52c2bc",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Online algorithms"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280659,
        "id": "df6dc396-5111-4ce8-995c-746077f02a50",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280659,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280661,
        "id": "0a39c31a-e461-42a3-b0e3-fda23ea5e75c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280661,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Theory"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Theory"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280662,
        "id": "32d038af-8aad-4966-a670-3c9bd8cc3110",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280662,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Definition 1:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " An "
            ],
            [
              "optimization problem",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Π consists of a set of "
            ],
            [
              "instances",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " ΣΠ. For every instance σ∈ΣΠ there is a set Ζσ of "
            ],
            [
              "solutions",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " and a "
            ],
            [
              "objective function",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " fσ : Ζσ → ℜ≥0 which assigns apositive real value to every solution. We say OPT(σ) is the value of an optimal solution, A(σ) is the solution of an Algorithm A for the problem Π and wA(σ)=fσ(A(σ)) its value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Definition 1:",
            "AttrFlags": 1
          },
          {
            "Text": " An "
          },
          {
            "Text": "optimization problem",
            "AttrFlags": 1
          },
          {
            "Text": " Π consists of a set of "
          },
          {
            "Text": "instances",
            "AttrFlags": 1
          },
          {
            "Text": " ΣΠ. For every instance σ∈ΣΠ there is a set Ζσ of "
          },
          {
            "Text": "solutions",
            "AttrFlags": 1
          },
          {
            "Text": " and a "
          },
          {
            "Text": "objective function",
            "AttrFlags": 1
          },
          {
            "Text": " fσ : Ζσ → ℜ≥0 which assigns apositive real value to every solution. We say OPT(σ) is the value of an optimal solution, A(σ) is the solution of an Algorithm A for the problem Π and wA(σ)=fσ(A(σ)) its value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280662,
        "id": "2be8aea0-bb2c-443d-8c44-1a602791740a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280662,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Definition 2:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " An online algorithm A for a minimization problem Π has a "
            ],
            [
              "competetive ratio",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " of r ≥ 1 if there is a constant τ∈ℜ with"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Definition 2:",
            "AttrFlags": 1
          },
          {
            "Text": " An online algorithm A for a minimization problem Π has a "
          },
          {
            "Text": "competetive ratio",
            "AttrFlags": 1
          },
          {
            "Text": " of r ≥ 1 if there is a constant τ∈ℜ with"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280662,
        "id": "7b762107-0629-48d3-b501-978c2fc02797",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280662,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "wA(σ) = fσ(A(σ)) ≤ r ⋅ OPT(\u0026sigma) + τ"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "wA(σ) = fσ(A(σ)) ≤ r ⋅ OPT(\u0026sigma) + τ"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280663,
        "id": "c14fad4b-cd97-4db2-a182-4f4e82c0c65f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280663,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "for all instances σ∈ΣΠ. A is called a "
            ],
            [
              "r-competitive",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " online algorithm. Is even"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "for all instances σ∈ΣΠ. A is called a "
          },
          {
            "Text": "r-competitive",
            "AttrFlags": 1
          },
          {
            "Text": " online algorithm. Is even"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280663,
        "id": "1a33093b-025c-4759-978e-ab2a722b17bf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280663,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "wA(σ) ≤ r ⋅ OPT(\u0026sigma)"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "wA(σ) ≤ r ⋅ OPT(\u0026sigma)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280663,
        "id": "63eba700-affa-4625-9459-fc0536e8b6c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280663,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "for all instances σ∈ΣΠ then A is called a "
            ],
            [
              "strictly r-competitive",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " online algorithm."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "for all instances σ∈ΣΠ then A is called a "
          },
          {
            "Text": "strictly r-competitive",
            "AttrFlags": 1
          },
          {
            "Text": " online algorithm."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280663,
        "id": "b6eff5c8-50f7-4bb8-9f96-60900db9061a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280663,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Proposition 1.3:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "LRU",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "FWF",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " are marking algorithm."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Proposition 1.3:",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "LRU",
            "AttrFlags": 1
          },
          {
            "Text": " and "
          },
          {
            "Text": "FWF",
            "AttrFlags": 1
          },
          {
            "Text": " are marking algorithm."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280664,
        "id": "65682daa-55a2-4b11-beec-d54d191c0988",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280664,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Proof:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " At the beginning of each phase (except for the first one) "
            ],
            [
              "FWF",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " has a cache miss and cleared the cache. that means we have k empty pages. In every phase are maximal k different pages requested, so there will be now eviction during the phase. So "
            ],
            [
              "FWF",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " is a marking algorithm. Lets assume "
            ],
            [
              "LRU",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " is not a marking algorithm. Then there is an instance σ where "
            ],
            [
              "LRU",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " a marked page x in phase i evicted. Let σt the request in phase i where x is evicted. Since x is marked there has to be a earlier request σt* for x in the same phase, so t* \u003c t. After t* x is the caches newest page, so to got evicted at t the sequence σt*+1,…,σt has to request at least k from x different pages. That implies the phase i has requested at least k+1 different pages which is a contradictory to the phase definition. So "
            ],
            [
              "LRU",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " has to be a marking algorithm."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Proof:",
            "AttrFlags": 1
          },
          {
            "Text": " At the beginning of each phase (except for the first one) "
          },
          {
            "Text": "FWF",
            "AttrFlags": 1
          },
          {
            "Text": " has a cache miss and cleared the cache. that means we have k empty pages. In every phase are maximal k different pages requested, so there will be now eviction during the phase. So "
          },
          {
            "Text": "FWF",
            "AttrFlags": 1
          },
          {
            "Text": " is a marking algorithm. Lets assume "
          },
          {
            "Text": "LRU",
            "AttrFlags": 1
          },
          {
            "Text": " is not a marking algorithm. Then there is an instance σ where "
          },
          {
            "Text": "LRU",
            "AttrFlags": 1
          },
          {
            "Text": " a marked page x in phase i evicted. Let σt the request in phase i where x is evicted. Since x is marked there has to be a earlier request σt* for x in the same phase, so t* \u003c t. After t* x is the caches newest page, so to got evicted at t the sequence σt*+1,…,σt has to request at least k from x different pages. That implies the phase i has requested at least k+1 different pages which is a contradictory to the phase definition. So "
          },
          {
            "Text": "LRU",
            "AttrFlags": 1
          },
          {
            "Text": " has to be a marking algorithm."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280664,
        "id": "2e376316-4eae-40e1-9a51-b408e22903e0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280664,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Proposition 1.4:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Every marking algorithm "
            ],
            [
              "is strictly k-competitive",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Proposition 1.4:",
            "AttrFlags": 1
          },
          {
            "Text": " Every marking algorithm "
          },
          {
            "Text": "is strictly k-competitive",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280664,
        "id": "94f911a2-28f4-4156-a4fa-ade916511fc3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280664,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Proof:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Let σ be an instance for the paging problem and l the number of phases for σ. Is l = 1 then is every marking algorithm optimal and the optimal offline algorithm cannot be better. We assume l ≥ 2. the cost of every marking algorithm for instance σ is bounded from above with l ⋅ k because in every phase a marking algorithm cannot evict more than k pages without evicting one marked page. Now we try to show that the optimal offline algorithm evicts at least k+l-2 pages for σ, k in the first phase and at least one for every following phase except for the last one. For proof lets define l-2 disjunct subsequences of σ. Subsequence i ∈ {1,…,l-2} starts at the second position of phase i+1 and end with the first position of phase i+2. Let x be the first page of phase i+1. At the beginning of subsequence i there is page x and at most k-1 different pages in the optimal offline algorithms cache. In subsequence i are k page request different from x, so the optimal offline algorithm has to evict at least one page for every subsequence. Since at phase 1 beginning the cache is still empty, the optimal offline algorithm causes k evictions during the first phase. That shows that"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Proof:",
            "AttrFlags": 1
          },
          {
            "Text": " Let σ be an instance for the paging problem and l the number of phases for σ. Is l = 1 then is every marking algorithm optimal and the optimal offline algorithm cannot be better. We assume l ≥ 2. the cost of every marking algorithm for instance σ is bounded from above with l ⋅ k because in every phase a marking algorithm cannot evict more than k pages without evicting one marked page. Now we try to show that the optimal offline algorithm evicts at least k+l-2 pages for σ, k in the first phase and at least one for every following phase except for the last one. For proof lets define l-2 disjunct subsequences of σ. Subsequence i ∈ {1,…,l-2} starts at the second position of phase i+1 and end with the first position of phase i+2. Let x be the first page of phase i+1. At the beginning of subsequence i there is page x and at most k-1 different pages in the optimal offline algorithms cache. In subsequence i are k page request different from x, so the optimal offline algorithm has to evict at least one page for every subsequence. Since at phase 1 beginning the cache is still empty, the optimal offline algorithm causes k evictions during the first phase. That shows that"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280664,
        "id": "d1bef3c1-dbf9-4280-b587-3f3b88e11888",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280664,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "wA(σ) ≤ l⋅k ≤ (k+l-2)k ≤ OPT(σ) ⋅ k"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "wA(σ) ≤ l⋅k ≤ (k+l-2)k ≤ OPT(σ) ⋅ k"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280665,
        "id": "0fdf9c03-afc5-499c-924d-4cb108328ad6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280665,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Corollary 1.5:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "LRU",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "FWF",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " are "
            ],
            [
              "strictly k-competitive",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Corollary 1.5:",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "LRU",
            "AttrFlags": 1
          },
          {
            "Text": " and "
          },
          {
            "Text": "FWF",
            "AttrFlags": 1
          },
          {
            "Text": " are "
          },
          {
            "Text": "strictly k-competitive",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280665,
        "id": "6edc2231-278b-4653-841a-26b20b3a1ecd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280665,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Is there no constant r for which an online algorithm A is r-competitive, we call A "
            ],
            [
              "not competitive",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Is there no constant r for which an online algorithm A is r-competitive, we call A "
          },
          {
            "Text": "not competitive",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280665,
        "id": "e2f465ed-316e-495e-88d8-62bbcab357da",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280665,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Proposition 1.6:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "LFU",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "LIFO",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " are "
            ],
            [
              "not competitive",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Proposition 1.6:",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "LFU",
            "AttrFlags": 1
          },
          {
            "Text": " and "
          },
          {
            "Text": "LIFO",
            "AttrFlags": 1
          },
          {
            "Text": " are "
          },
          {
            "Text": "not competitive",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280665,
        "id": "ff61b991-9fcf-42d0-893a-5f49be2acd1a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280665,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Proof:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Let l ≥ 2 a constant, k ≥ 2 the cache size. The different cache pages are nubered 1,…,k+1. We look at the following sequence:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Proof:",
            "AttrFlags": 1
          },
          {
            "Text": " Let l ≥ 2 a constant, k ≥ 2 the cache size. The different cache pages are nubered 1,…,k+1. We look at the following sequence:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280665,
        "id": "8ae8d21c-4102-4cdf-8311-f917aed21d6f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280665,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "type": "quote",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280665,
        "id": "bbfeeb9d-a7b8-4444-ada6-e274085e25b2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280665,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/9bb50dd3-8b11-4c5d-9c91-ca4ff18bc844/a40172b72ef99bdbd145515dd46986d72afb0370.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/9bb50dd3-8b11-4c5d-9c91-ca4ff18bc844/a40172b72ef99bdbd145515dd46986d72afb0370.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2F9bb50dd3-8b11-4c5d-9c91-ca4ff18bc844%2Fa40172b72ef99bdbd145515dd46986d72afb0370.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280666,
        "id": "294df7ec-b32e-479e-be40-a160adb8b21d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280666,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "First page 1 is requested l times than page 2 and so one. At the end there are (l-1) alternating requests for page k and k+1. "
            ],
            [
              "LFU",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "LIFO",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " fill their cache with pages 1-k. When page k+1 is requested page k is evicted and vice versa. That means every request of subsequence (k,k+1)l-1 evicts one page. In addition their are k-1 cache misses for the first time use of pages 1-(k-1). So "
            ],
            [
              "LFU",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "LIFO",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " evict exact k-1+2(l-1) pages. Now we must show that for every constant τ∈ℜ and every constan r ≤ 1 there exists an l so that"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "First page 1 is requested l times than page 2 and so one. At the end there are (l-1) alternating requests for page k and k+1. "
          },
          {
            "Text": "LFU",
            "AttrFlags": 1
          },
          {
            "Text": " and "
          },
          {
            "Text": "LIFO",
            "AttrFlags": 1
          },
          {
            "Text": " fill their cache with pages 1-k. When page k+1 is requested page k is evicted and vice versa. That means every request of subsequence (k,k+1)l-1 evicts one page. In addition their are k-1 cache misses for the first time use of pages 1-(k-1). So "
          },
          {
            "Text": "LFU",
            "AttrFlags": 1
          },
          {
            "Text": " and "
          },
          {
            "Text": "LIFO",
            "AttrFlags": 1
          },
          {
            "Text": " evict exact k-1+2(l-1) pages. Now we must show that for every constant τ∈ℜ and every constan r ≤ 1 there exists an l so that"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280666,
        "id": "25bd03d2-7490-448f-a004-154205f00c2f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280666,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "type": "quote",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280666,
        "id": "8ac7a43b-3173-45c9-ba11-3387143917ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280666,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/9bb50dd3-8b11-4c5d-9c91-ca4ff18bc844/fb9329b4ef50e5c881fd143dc565c84f4085ca66.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/9bb50dd3-8b11-4c5d-9c91-ca4ff18bc844/fb9329b4ef50e5c881fd143dc565c84f4085ca66.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2F9bb50dd3-8b11-4c5d-9c91-ca4ff18bc844%2Ffb9329b4ef50e5c881fd143dc565c84f4085ca66.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280666,
        "id": "75d5d6c5-6012-440c-802f-b276c2933a5e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280666,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "which is equal to"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "which is equal to"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280666,
        "id": "0d18ddbf-684c-4f6d-aeea-3ff02d7d5bf0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280666,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "type": "quote",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280666,
        "id": "b37ded1b-d5bb-449a-af8b-5e8dec8d4f7f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280666,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/9bb50dd3-8b11-4c5d-9c91-ca4ff18bc844/401658010aae9f229206b2b8e61397bd5de6c93e.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/9bb50dd3-8b11-4c5d-9c91-ca4ff18bc844/401658010aae9f229206b2b8e61397bd5de6c93e.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2F9bb50dd3-8b11-4c5d-9c91-ca4ff18bc844%2F401658010aae9f229206b2b8e61397bd5de6c93e.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280666,
        "id": "6c4845a3-47b0-4de5-b8d4-7e4a52dd155b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280666,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To satisfy this inequality you just have to choose l sufficient big. So "
            ],
            [
              "LFU",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "LIFO",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " are not competetive."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To satisfy this inequality you just have to choose l sufficient big. So "
          },
          {
            "Text": "LFU",
            "AttrFlags": 1
          },
          {
            "Text": " and "
          },
          {
            "Text": "LIFO",
            "AttrFlags": 1
          },
          {
            "Text": " are not competetive."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280667,
        "id": "3ce53ea1-f56e-4318-a973-6cdbf13bbbae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280667,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Proposition 1.7:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " There is "
            ],
            [
              "no r-competetive",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " deterministic online algorithm for paging with "
            ],
            [
              "r \u003c k",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Proposition 1.7:",
            "AttrFlags": 1
          },
          {
            "Text": " There is "
          },
          {
            "Text": "no r-competetive",
            "AttrFlags": 1
          },
          {
            "Text": " deterministic online algorithm for paging with "
          },
          {
            "Text": "r \u003c k",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280667,
        "id": "ed0929d5-6247-4a37-a362-47f37b6975d7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280667,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sources"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sources"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280667,
        "id": "8a503376-741a-4ff5-8694-5f070b61739a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280667,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Basic Material"
            ]
          ]
        },
        "type": "sub_sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Basic Material"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280668,
        "id": "792c5098-beaf-41e4-9590-919cdfabad1b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280668,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Script Online Algorithms (german), Heiko Roeglin, University Bonn"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Script Online Algorithms (german), Heiko Roeglin, University Bonn"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280670,
        "id": "d38d435f-9742-44ef-a92f-18bf95af887d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280670,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Page replacement algorithm",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Page_replacement_algorithm"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Page replacement algorithm",
            "Link": "https://en.wikipedia.org/wiki/Page_replacement_algorithm"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280670,
        "id": "0ec5121b-386a-4099-aab0-bebefc507700",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280670,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Further Reading"
            ]
          ]
        },
        "type": "sub_sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Further Reading"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280671,
        "id": "9c02d19e-dda8-4461-b581-624b4088dc89",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280671,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Online Computation and Competetive Analysis",
              [
                [
                  "a",
                  "http://www.cs.technion.ac.il/~rani/book.html"
                ]
              ]
            ],
            [
              " by Allan Borodin and Ran El-Yaniv"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Online Computation and Competetive Analysis",
            "Link": "http://www.cs.technion.ac.il/~rani/book.html"
          },
          {
            "Text": " by Allan Borodin and Ran El-Yaniv"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280671,
        "id": "93e7ab5b-1422-4886-9f40-5884ba2a84ca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280671,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Source Code"
            ]
          ]
        },
        "type": "sub_sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Source Code"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280671,
        "id": "a01abeea-13dd-4edb-a466-fd01b140bfb9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280671,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Source code for "
            ],
            [
              "offline caching",
              [
                [
                  "a",
                  "http://pastebin.com/AF7EC2xJ"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Source code for "
          },
          {
            "Text": "offline caching",
            "Link": "http://pastebin.com/AF7EC2xJ"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929280672,
        "id": "62c3e920-d62a-4f7b-8987-e29a017926c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929280672,
        "parent_id": "7aa81e97-07a7-4e0b-bb4b-ed8e396a7671",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Source code for "
            ],
            [
              "adversary game",
              [
                [
                  "a",
                  "https://pastebin.com/u/kgoedde/1/Wak9refA"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Source code for "
          },
          {
            "Text": "adversary game",
            "Link": "https://pastebin.com/u/kgoedde/1/Wak9refA"
          }
        ]
      }
    ],
    "title": "Online algorithms",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}