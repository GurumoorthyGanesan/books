{
  "ID": "e251839b-6776-45f1-a09e-8085322accea",
  "Root": {
    "alive": true,
    "content": [
      "6fcb1007-f597-42f9-a8d3-5d1c2e21682c",
      "259e6d14-a1f2-4208-a212-550145773f68",
      "e496e5c0-b4f2-4067-912c-75ca7a25e8d8",
      "953834e3-250c-41a2-82c0-a5d218953b17",
      "c99673c5-3fe7-4dca-bd6b-18bbb3544e12",
      "af08cd54-d62c-4c80-b4fc-81f02dc934c2",
      "41c0b015-7ba7-40e5-81e7-a7842c9e9f16",
      "33375256-0f12-4ee4-9460-ac8e51e11e1b",
      "f4e4fdd6-e1c1-4d4c-9ceb-febbc02717dc",
      "04087d0a-2e11-4385-91af-5ff6808539c5",
      "1e94a299-3dbc-4435-9c0b-cb245d5df20b",
      "c1561951-ca5c-495f-9041-96ae1aa579b1",
      "246f8389-9d5e-4ed3-815c-d8dc042b3ced",
      "28b05775-0b5c-428d-80a5-a9b7916301f8",
      "1ceb51bf-316d-4d67-96cc-6e16ba8cb7f7"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551929206435,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e251839b-6776-45f1-a09e-8085322accea",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551929206435,
    "parent_id": "0c0e3472-dac8-416a-833b-40ef5e725f54",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Maximum Path Sum Basic Information"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929206422,
        "id": "6fcb1007-f597-42f9-a8d3-5d1c2e21682c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929206422,
        "parent_id": "e251839b-6776-45f1-a09e-8085322accea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Maximum Path Sum is an algorithm to find out a path such that sum of element(node) of that path is greater than any other path."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Maximum Path Sum is an algorithm to find out a path such that sum of element(node) of that path is greater than any other path."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929206432,
        "id": "259e6d14-a1f2-4208-a212-550145773f68",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929206432,
        "parent_id": "e251839b-6776-45f1-a09e-8085322accea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example, let’s we have a we a triangle as shown below."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example, let’s we have a we a triangle as shown below."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929206432,
        "id": "e496e5c0-b4f2-4067-912c-75ca7a25e8d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929206432,
        "parent_id": "e251839b-6776-45f1-a09e-8085322accea",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "3\n7   4\n2   4   6\n8   5   9   3"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "3\n7   4\n2   4   6\n8   5   9   3",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929206432,
        "id": "953834e3-250c-41a2-82c0-a5d218953b17",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929206432,
        "parent_id": "e251839b-6776-45f1-a09e-8085322accea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In above triangle, find the maximum path which has maximum sum. Answer is, "
            ],
            [
              "3 + 7 + 4 + 9 = 23",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In above triangle, find the maximum path which has maximum sum. Answer is, "
          },
          {
            "Text": "3 + 7 + 4 + 9 = 23",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929206432,
        "id": "c99673c5-3fe7-4dca-bd6b-18bbb3544e12",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929206432,
        "parent_id": "e251839b-6776-45f1-a09e-8085322accea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To find out the solution, as always we get an idea of Brute-Force method. Brute-Force method is good for this 4 rows triangle but think about a triangle with 100 or more than 100 rows. So, We can not use Brute-Force method to solve this problem."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To find out the solution, as always we get an idea of Brute-Force method. Brute-Force method is good for this 4 rows triangle but think about a triangle with 100 or more than 100 rows. So, We can not use Brute-Force method to solve this problem."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929206433,
        "id": "af08cd54-d62c-4c80-b4fc-81f02dc934c2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929206433,
        "parent_id": "e251839b-6776-45f1-a09e-8085322accea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s move to dynamic programming approach."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s move to dynamic programming approach."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929206433,
        "id": "41c0b015-7ba7-40e5-81e7-a7842c9e9f16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929206433,
        "parent_id": "e251839b-6776-45f1-a09e-8085322accea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Algorithm:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Algorithm:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929206433,
        "id": "33375256-0f12-4ee4-9460-ac8e51e11e1b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929206433,
        "parent_id": "e251839b-6776-45f1-a09e-8085322accea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For each and every node in a triangle or in a binary tree there can be four ways that the max path goes through the node."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For each and every node in a triangle or in a binary tree there can be four ways that the max path goes through the node."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929206433,
        "id": "f4e4fdd6-e1c1-4d4c-9ceb-febbc02717dc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929206433,
        "parent_id": "e251839b-6776-45f1-a09e-8085322accea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Node only"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Node only"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929206434,
        "id": "04087d0a-2e11-4385-91af-5ff6808539c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929206434,
        "parent_id": "e251839b-6776-45f1-a09e-8085322accea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Max path through Left Child + Node"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Max path through Left Child + Node"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929206434,
        "id": "1e94a299-3dbc-4435-9c0b-cb245d5df20b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929206434,
        "parent_id": "e251839b-6776-45f1-a09e-8085322accea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Max path through Right Child + Node"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Max path through Right Child + Node"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929206434,
        "id": "c1561951-ca5c-495f-9041-96ae1aa579b1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929206434,
        "parent_id": "e251839b-6776-45f1-a09e-8085322accea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Max path through Left Child + Node + Max path through Right Child."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Max path through Left Child + Node + Max path through Right Child."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929206434,
        "id": "246f8389-9d5e-4ed3-815c-d8dc042b3ced",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929206434,
        "parent_id": "e251839b-6776-45f1-a09e-8085322accea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example of Maximum Path Sum Algorithm:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example of Maximum Path Sum Algorithm:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929206434,
        "id": "28b05775-0b5c-428d-80a5-a9b7916301f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929206434,
        "parent_id": "e251839b-6776-45f1-a09e-8085322accea",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/39528ef6-3b73-4d16-931c-b3ca7978dca4/d29e5574d86ac83a4731c1e1c6219d12aebd640f.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/39528ef6-3b73-4d16-931c-b3ca7978dca4/d29e5574d86ac83a4731c1e1c6219d12aebd640f.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2F39528ef6-3b73-4d16-931c-b3ca7978dca4%2Fd29e5574d86ac83a4731c1e1c6219d12aebd640f.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551929206435,
        "id": "1ceb51bf-316d-4d67-96cc-6e16ba8cb7f7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551929206435,
        "parent_id": "e251839b-6776-45f1-a09e-8085322accea",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Space Auxiliary:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "O(n)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "Time Complexity:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "O(n)",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Space Auxiliary:",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "O(n)",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "Time Complexity:",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "O(n)",
            "AttrFlags": 2
          }
        ]
      }
    ],
    "title": "Maximum Path Sum Basic Information",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}