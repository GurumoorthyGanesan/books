{
  "ID": "3193e292-7dbe-4c03-bcbc-5645fa66cf21",
  "Root": {
    "alive": true,
    "content": [
      "9b39a328-42bd-4635-b3e1-a6e24c069e04",
      "c3ce9cbc-6b9d-495c-8fdc-328df1221805",
      "38c31311-a1b4-41c5-aaa2-30674f02a9ba",
      "c7add309-b2b4-4775-8e2f-64e4355e05c0",
      "7f6e240a-ad8a-4f3c-b3a1-cd97dde6f424",
      "64a41f0e-20db-453f-8e04-fffb07e2f568"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551928820436,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "3193e292-7dbe-4c03-bcbc-5645fa66cf21",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551928820436,
    "parent_id": "c06d75d6-1a6d-48da-8e09-4d63502dedee",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Heap Sort Basic Information"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928820435,
        "id": "9b39a328-42bd-4635-b3e1-a6e24c069e04",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928820435,
        "parent_id": "3193e292-7dbe-4c03-bcbc-5645fa66cf21",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Heap sort",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Heapsort"
                ]
              ]
            ],
            [
              " is a comparison based sorting technique on binary heap data structure. It is similar to selection sort in which we first find the maximum element and put it at the end of the data structure. Then repeat the same process for the remaining items."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Heap sort",
            "Link": "https://en.wikipedia.org/wiki/Heapsort"
          },
          {
            "Text": " is a comparison based sorting technique on binary heap data structure. It is similar to selection sort in which we first find the maximum element and put it at the end of the data structure. Then repeat the same process for the remaining items."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928820435,
        "id": "c3ce9cbc-6b9d-495c-8fdc-328df1221805",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928820435,
        "parent_id": "3193e292-7dbe-4c03-bcbc-5645fa66cf21",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Pseudo code for Heap Sort:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Pseudo code for Heap Sort:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928820435,
        "id": "38c31311-a1b4-41c5-aaa2-30674f02a9ba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928820435,
        "parent_id": "3193e292-7dbe-4c03-bcbc-5645fa66cf21",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function heapsort(input, count)\n    heapify(a,count)\n    end \u003c- count - 1\n    while end -\u003e 0 do\n    swap(a[end],a[0])\n    end\u003c-end-1\n    restore(a, 0, end)\n\nfunction heapify(a, count)\n    start \u003c- parent(count - 1)\n    while start \u003e= 0 do\n        restore(a, start, count - 1)\n        start \u003c- start - 1"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function heapsort(input, count)\n    heapify(a,count)\n    end \u003c- count - 1\n    while end -\u003e 0 do\n    swap(a[end],a[0])\n    end\u003c-end-1\n    restore(a, 0, end)\n\nfunction heapify(a, count)\n    start \u003c- parent(count - 1)\n    while start \u003e= 0 do\n        restore(a, start, count - 1)\n        start \u003c- start - 1",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928820435,
        "id": "c7add309-b2b4-4775-8e2f-64e4355e05c0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928820435,
        "parent_id": "3193e292-7dbe-4c03-bcbc-5645fa66cf21",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example of Heap Sort:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example of Heap Sort:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928820436,
        "id": "7f6e240a-ad8a-4f3c-b3a1-cd97dde6f424",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928820436,
        "parent_id": "3193e292-7dbe-4c03-bcbc-5645fa66cf21",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/1e01b88a-226b-4362-b4f8-40431c0456db/50873174af41cec4855e551c4d920dc7cb854268.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/1e01b88a-226b-4362-b4f8-40431c0456db/50873174af41cec4855e551c4d920dc7cb854268.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2F1e01b88a-226b-4362-b4f8-40431c0456db%2F50873174af41cec4855e551c4d920dc7cb854268.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928820436,
        "id": "64a41f0e-20db-453f-8e04-fffb07e2f568",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928820436,
        "parent_id": "3193e292-7dbe-4c03-bcbc-5645fa66cf21",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Auxiliary Space:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "O(1)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "Time Complexity:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "O(nlogn)",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Auxiliary Space:",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "O(1)",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "Time Complexity:",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "O(nlogn)",
            "AttrFlags": 2
          }
        ]
      }
    ],
    "title": "Heap Sort Basic Information",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}