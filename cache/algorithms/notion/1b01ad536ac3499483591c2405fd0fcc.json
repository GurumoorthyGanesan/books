{
  "ID": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
  "Root": {
    "alive": true,
    "content": [
      "855ab405-6d6c-457e-bb57-0d4ab903f376",
      "c5a65770-fbf2-4d61-9bb2-72e2121dba35",
      "a5465f88-e5c5-4f00-b4ed-2f8dd2052877",
      "e7734014-79dd-4de6-bedc-efb227fa5773",
      "f1b7dd15-2b96-4b3a-8a96-9b480e5e022b",
      "496b467a-2a3a-4d65-83f6-7cf4b0a47a10",
      "27e2a1b3-be38-4fb6-a1b9-65c580389291",
      "f72950ae-d5d8-4056-b62c-c6bca38e3518",
      "1e9fe95e-c559-4123-8a9c-4425264b549d",
      "c4bc61a4-676f-4db1-b91c-04e95c0c24d4",
      "39c569ee-a839-4ecd-925f-14bd73060232",
      "ae5c9af8-fa37-4898-bff9-1de93ba69823",
      "c6e001a3-b2ec-4290-93fb-a06f778550d6",
      "de36fa61-9650-4cb8-9c7f-a904c9dac5c7",
      "94ad5308-99df-4304-8152-418c83183e0d",
      "eae94a60-338c-41b5-b7f6-b9847241bae0",
      "a7ffb1f0-1de2-4ac5-b90b-7cf11a01a8cb",
      "10393350-fe80-4088-9bc8-044765b1093a",
      "918c9db4-ecb9-4f0e-ac0b-b141efd3d29b",
      "cb7fcb24-962c-4229-8705-a3449c42d485",
      "907a02ca-5d6e-4346-8865-0887067c5cd2",
      "3256d0ef-c38f-4bca-8ccd-1494f2913144",
      "4471ea0d-32a2-4e62-bcfa-0f85c8798fba",
      "0bf74fad-c35a-4216-892f-7fbdb2d47096",
      "8bc9e944-d4d0-48cd-82e8-33d86fc5f9e9",
      "a2b2edd8-fdf4-4dd9-a61c-313ebd7e805e",
      "38eef999-1e68-4e6d-961f-8a0d766cdcc3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551928920006,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551928920006,
    "parent_id": "7e7202cf-172e-479e-b1d4-2842091d8b3e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Solving 8-puzzle problem using A algorithm"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928919998,
        "id": "855ab405-6d6c-457e-bb57-0d4ab903f376",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928919998,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Problem definition:"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Problem definition:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920001,
        "id": "c5a65770-fbf2-4d61-9bb2-72e2121dba35",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920001,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An 8 puzzle is a simple game consisting of a 3 x 3 grid (containing 9 squares). One of the squares is empty. The object is to move to squares around into different positions and having the numbers displayed in the “goal state”."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An 8 puzzle is a simple game consisting of a 3 x 3 grid (containing 9 squares). One of the squares is empty. The object is to move to squares around into different positions and having the numbers displayed in the “goal state”."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920001,
        "id": "a5465f88-e5c5-4f00-b4ed-2f8dd2052877",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920001,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/d85221d2-d299-4429-8f12-be2858b8bc91/51e2957602225c1b7378f372d65996ae1bb47b77.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/d85221d2-d299-4429-8f12-be2858b8bc91/51e2957602225c1b7378f372d65996ae1bb47b77.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2Fd85221d2-d299-4429-8f12-be2858b8bc91%2F51e2957602225c1b7378f372d65996ae1bb47b77.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920001,
        "id": "e7734014-79dd-4de6-bedc-efb227fa5773",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920001,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Given an initial state of 8-puzzle game and a final state of to be reached, find the most cost-effective path to reach the final state from initial state."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Given an initial state of 8-puzzle game and a final state of to be reached, find the most cost-effective path to reach the final state from initial state."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920002,
        "id": "f1b7dd15-2b96-4b3a-8a96-9b480e5e022b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920002,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Initial state:"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Initial state:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920002,
        "id": "496b467a-2a3a-4d65-83f6-7cf4b0a47a10",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920002,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "_ 1 3\n4 2 5\n7 8 6"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "_ 1 3\n4 2 5\n7 8 6",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920002,
        "id": "27e2a1b3-be38-4fb6-a1b9-65c580389291",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920002,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Final state:"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Final state:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920002,
        "id": "f72950ae-d5d8-4056-b62c-c6bca38e3518",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920002,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "1 2 3\n4 5 6\n7 8 _"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "1 2 3\n4 5 6\n7 8 _",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920002,
        "id": "1e9fe95e-c559-4123-8a9c-4425264b549d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920002,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Heuristic to be assumed:"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Heuristic to be assumed:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920002,
        "id": "c4bc61a4-676f-4db1-b91c-04e95c0c24d4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920002,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let us consider the Manhattan distance between the current and final state as the heuristic for this problem statement."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let us consider the Manhattan distance between the current and final state as the heuristic for this problem statement."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920002,
        "id": "39c569ee-a839-4ecd-925f-14bd73060232",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920002,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "h(n) = | x - p | + | y - q |\nwhere x and y are cell co-ordinates in the current state\n      p and q are cell co-ordinates in the final state"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "h(n) = | x - p | + | y - q |\nwhere x and y are cell co-ordinates in the current state\n      p and q are cell co-ordinates in the final state",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920002,
        "id": "ae5c9af8-fa37-4898-bff9-1de93ba69823",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920002,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Total cost function:"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Total cost function:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920003,
        "id": "c6e001a3-b2ec-4290-93fb-a06f778550d6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920003,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So the total cost function "
            ],
            [
              "f(n)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is given by,"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So the total cost function "
          },
          {
            "Text": "f(n)",
            "AttrFlags": 2
          },
          {
            "Text": " is given by,"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920003,
        "id": "de36fa61-9650-4cb8-9c7f-a904c9dac5c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920003,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "f(n) = g(n) + h(n), where g(n) is the cost required to reach the current state from given initial state"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "f(n) = g(n) + h(n), where g(n) is the cost required to reach the current state from given initial state",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920003,
        "id": "94ad5308-99df-4304-8152-418c83183e0d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920003,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Solution to example problem:"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Solution to example problem:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920003,
        "id": "eae94a60-338c-41b5-b7f6-b9847241bae0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920003,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "First we find the heuristic value required to reach the final state from initial state. The cost function, g(n) = 0, as we are in the initial state"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "First we find the heuristic value required to reach the final state from initial state. The cost function, g(n) = 0, as we are in the initial state"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920003,
        "id": "a7ffb1f0-1de2-4ac5-b90b-7cf11a01a8cb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920003,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "h(n) = 8"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "h(n) = 8",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920004,
        "id": "10393350-fe80-4088-9bc8-044765b1093a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920004,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The above value is obtained, as "
            ],
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the current state is 1 horizontal distance away than the "
            ],
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in final state. Same goes for "
            ],
            [
              "2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "5",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "6",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "\\_",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is 2 horizontal distance away and 2 vertical distance away. So total value for "
            ],
            [
              "h(n)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is 1 + 1 + 1 + 1 + 2 + 2 = 8. Total cost function "
            ],
            [
              "f(n)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is equal to 8 + 0 = 8."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The above value is obtained, as "
          },
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": " in the current state is 1 horizontal distance away than the "
          },
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": " in final state. Same goes for "
          },
          {
            "Text": "2",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "5",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "6",
            "AttrFlags": 2
          },
          {
            "Text": ". "
          },
          {
            "Text": "\\_",
            "AttrFlags": 2
          },
          {
            "Text": " is 2 horizontal distance away and 2 vertical distance away. So total value for "
          },
          {
            "Text": "h(n)",
            "AttrFlags": 2
          },
          {
            "Text": " is 1 + 1 + 1 + 1 + 2 + 2 = 8. Total cost function "
          },
          {
            "Text": "f(n)",
            "AttrFlags": 2
          },
          {
            "Text": " is equal to 8 + 0 = 8."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920004,
        "id": "918c9db4-ecb9-4f0e-ac0b-b141efd3d29b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920004,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now, the possible states that can be reached from initial state are found and it happens that we can either move "
            ],
            [
              "\\_",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to right or downwards."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now, the possible states that can be reached from initial state are found and it happens that we can either move "
          },
          {
            "Text": "\\_",
            "AttrFlags": 2
          },
          {
            "Text": " to right or downwards."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920004,
        "id": "cb7fcb24-962c-4229-8705-a3449c42d485",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920004,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So states obtained after moving those moves are:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So states obtained after moving those moves are:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920004,
        "id": "907a02ca-5d6e-4346-8865-0887067c5cd2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920004,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "1 _ 3    4 1 3\n4 2 5    _ 2 5\n7 8 6    7 8 6\n (1)      (2)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "1 _ 3    4 1 3\n4 2 5    _ 2 5\n7 8 6    7 8 6\n (1)      (2)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920004,
        "id": "3256d0ef-c38f-4bca-8ccd-1494f2913144",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920004,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Again the total cost function is computed for these states using the method described above and it turns out to be 6 and 7 respectively. We chose the state with minimum cost which is state (1). The next possible moves can be Left, Right or Down. We won’t move Left as we were previously in that state. So, we can move Right or Down."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Again the total cost function is computed for these states using the method described above and it turns out to be 6 and 7 respectively. We chose the state with minimum cost which is state (1). The next possible moves can be Left, Right or Down. We won’t move Left as we were previously in that state. So, we can move Right or Down."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920004,
        "id": "4471ea0d-32a2-4e62-bcfa-0f85c8798fba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920004,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Again we find the states obtained from (1)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Again we find the states obtained from (1)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920005,
        "id": "0bf74fad-c35a-4216-892f-7fbdb2d47096",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920005,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "1 3 _    1 2 3\n4 2 5    4 _ 5\n7 8 6    7 8 6\n (3)      (4)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "1 3 _    1 2 3\n4 2 5    4 _ 5\n7 8 6    7 8 6\n (3)      (4)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920005,
        "id": "8bc9e944-d4d0-48cd-82e8-33d86fc5f9e9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920005,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "leads to cost function equal to 6 and (4) leads to 4. Also, we will consider (2) obtained before which has cost function equal to 7. Choosing minimum from them leads to (4). Next possible moves can be Left or Right or Down. We get states:"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "leads to cost function equal to 6 and (4) leads to 4. Also, we will consider (2) obtained before which has cost function equal to 7. Choosing minimum from them leads to (4). Next possible moves can be Left or Right or Down. We get states:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920006,
        "id": "a2b2edd8-fdf4-4dd9-a61c-313ebd7e805e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920006,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "1 2 3    1 2 3    1 2 3\n_ 4 5    4 5 _    4 8 5\n7 8 6    7 8 6    7 _ 6\n (5)      (6)      (7)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "1 2 3    1 2 3    1 2 3\n_ 4 5    4 5 _    4 8 5\n7 8 6    7 8 6    7 _ 6\n (5)      (6)      (7)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928920006,
        "id": "38eef999-1e68-4e6d-961f-8a0d766cdcc3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928920006,
        "parent_id": "1b01ad53-6ac3-4994-8359-1c2405fd0fcc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We get costs equal to 5, 2 and 4 for (5), (6) and (7) respectively. Also, we have previous states (3) and (2) with 6 and 7 respectively. We chose minimum cost state which is (6). Next possible moves are Up, and Down and clearly Down will lead us to final state leading to heuristic function value equal to 0."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We get costs equal to 5, 2 and 4 for (5), (6) and (7) respectively. Also, we have previous states (3) and (2) with 6 and 7 respectively. We chose minimum cost state which is (6). Next possible moves are Up, and Down and clearly Down will lead us to final state leading to heuristic function value equal to 0."
          }
        ]
      }
    ],
    "title": "Solving 8-puzzle problem using A algorithm",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}