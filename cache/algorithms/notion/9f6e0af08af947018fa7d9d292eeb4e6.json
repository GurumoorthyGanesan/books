{
  "ID": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
  "Root": {
    "alive": true,
    "content": [
      "8a17250b-d903-4b95-84d4-281ffd7cc9f9",
      "34ed7b86-16d3-4f20-b07c-53278e1d6032",
      "c5354bf4-06e7-4db9-b761-1bfc7e997898",
      "acb22a5a-85c1-4429-8ce1-9aa0931d53d8",
      "f91a1df8-f2b3-4df7-804b-65763c47d752",
      "014c22d1-7489-41a9-887b-fca445892c93",
      "41533ba0-878d-4696-9194-f85acc3b364a",
      "9fd0618f-ce4a-4f6c-a10e-6a52ba675b78",
      "935008e3-12d7-4dc5-86e8-d4e7ee315222",
      "55833c45-58fa-4bb5-94d6-346bfc979408",
      "fec015bb-cd17-40bc-867e-b62752257f1b",
      "531b8104-28e3-48f5-b763-0f91c00725e0",
      "7d7e1a91-25c6-4c4b-a646-a5849ecff4d8",
      "c25baa52-a245-42d6-bacb-01f0a8b6636b",
      "1cf5f94c-2c44-4f84-80b5-e0bdc9354c29",
      "cc8ef486-9ee8-4839-9669-0b2ff55592e2",
      "3fce6463-733d-45bf-a05d-c68f39794df2",
      "8b385391-1ecc-4d16-8809-0d05fc492703",
      "5c2e1f41-3377-4e13-b26b-f6386919e467",
      "c89ca2a5-d42b-45c4-a731-4e11c832d6c4",
      "5aa3b680-de0b-4190-a698-cd8992c41830",
      "c1f95432-922b-405e-a028-47755fac0a53",
      "32875051-629b-4c1d-918b-d3821dcfe06e",
      "02cec2b3-c413-4280-88b2-477c6ced62b3",
      "6326b548-a25d-4e09-89f2-51e2c5be8a1e",
      "f5666ebc-7151-4598-bc3d-bc1809b90708",
      "2e4e2fe4-9757-451e-b5e7-1301b4c34b6e",
      "974bf86a-d55f-40f1-aff4-01bb09edd861",
      "96a55426-db98-4130-ad9a-31edf13a8c0b",
      "dfe9c8f6-d071-47b6-ad92-8a6c9100a34a",
      "0ce03114-0b11-48ab-8bd4-0ddbb41ec4f6",
      "cc8e33d9-de4f-4fee-ab87-f83b1afc8a89",
      "07f17658-ce80-4d93-87b9-dc23988d6ccc",
      "342196b4-3b26-4af0-89cc-428335d51db6",
      "9076d0fc-790d-45f0-a631-9d62125ef4ee"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551928784666,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551928784666,
    "parent_id": "0abdd157-bda8-4285-b8a7-5aa4dd7e132b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Introduction To Depth-First Search"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784660,
        "id": "8a17250b-d903-4b95-84d4-281ffd7cc9f9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784660,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Depth-first search",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Depth-first_search"
                ]
              ]
            ],
            [
              " is an algorithm for traversing or searching tree or graph data structures. One starts at the root and explores as far as possible along each branch before backtracking. A version of depth-first search was investigated in the 19th century French mathematician Charles Pierre Trémaux as a strategy for solving mazes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Depth-first search",
            "Link": "https://en.wikipedia.org/wiki/Depth-first_search"
          },
          {
            "Text": " is an algorithm for traversing or searching tree or graph data structures. One starts at the root and explores as far as possible along each branch before backtracking. A version of depth-first search was investigated in the 19th century French mathematician Charles Pierre Trémaux as a strategy for solving mazes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784660,
        "id": "34ed7b86-16d3-4f20-b07c-53278e1d6032",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784660,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Depth-first search is a systematic way to find all the vertices reachable from a source vertex. Like breadth-first search, DFS traverse a connected component of a given graph and defines a spanning tree. The basic idea of depth-first search is methodically exploring every edge. We start over from a different vertices as necessary. As soon as we discover a vertex, DFS starts exploring from it (unlike BFS, which puts a vertex on a queue so that it explores from it later)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Depth-first search is a systematic way to find all the vertices reachable from a source vertex. Like breadth-first search, DFS traverse a connected component of a given graph and defines a spanning tree. The basic idea of depth-first search is methodically exploring every edge. We start over from a different vertices as necessary. As soon as we discover a vertex, DFS starts exploring from it (unlike BFS, which puts a vertex on a queue so that it explores from it later)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784660,
        "id": "c5354bf4-06e7-4db9-b761-1bfc7e997898",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784660,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s look at an example. We’ll traverse this graph:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s look at an example. We’ll traverse this graph:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784660,
        "id": "acb22a5a-85c1-4429-8ce1-9aa0931d53d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784660,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/a5173517-1d5d-49d4-9169-2d55a8f46667/2c625b29633dcef3b0474ac8c74795cd1e823855.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/a5173517-1d5d-49d4-9169-2d55a8f46667/2c625b29633dcef3b0474ac8c74795cd1e823855.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2Fa5173517-1d5d-49d4-9169-2d55a8f46667%2F2c625b29633dcef3b0474ac8c74795cd1e823855.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784660,
        "id": "f91a1df8-f2b3-4df7-804b-65763c47d752",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784660,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We’ll traverse the graph following these rules:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We’ll traverse the graph following these rules:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784661,
        "id": "014c22d1-7489-41a9-887b-fca445892c93",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784661,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We’ll start from the source."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "We’ll start from the source."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784661,
        "id": "41533ba0-878d-4696-9194-f85acc3b364a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784661,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "No node will be visited twice."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "No node will be visited twice."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784661,
        "id": "9fd0618f-ce4a-4f6c-a10e-6a52ba675b78",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784661,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The nodes we didn’t visit yet, will be colored white."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The nodes we didn’t visit yet, will be colored white."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784661,
        "id": "935008e3-12d7-4dc5-86e8-d4e7ee315222",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784661,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The node we visited, but didn’t visit all of its child nodes, will be colored grey."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The node we visited, but didn’t visit all of its child nodes, will be colored grey."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784661,
        "id": "55833c45-58fa-4bb5-94d6-346bfc979408",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784661,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Completely traversed nodes will be colored black."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Completely traversed nodes will be colored black."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784661,
        "id": "fec015bb-cd17-40bc-867e-b62752257f1b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784661,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s look at it step by step:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s look at it step by step:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784662,
        "id": "531b8104-28e3-48f5-b763-0f91c00725e0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784662,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/a5173517-1d5d-49d4-9169-2d55a8f46667/344b8b0d4c4e067e88a8be9e106154ba1384c233.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/a5173517-1d5d-49d4-9169-2d55a8f46667/344b8b0d4c4e067e88a8be9e106154ba1384c233.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2Fa5173517-1d5d-49d4-9169-2d55a8f46667%2F344b8b0d4c4e067e88a8be9e106154ba1384c233.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784662,
        "id": "7d7e1a91-25c6-4c4b-a646-a5849ecff4d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784662,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/a5173517-1d5d-49d4-9169-2d55a8f46667/31250f14dc8617fd616471b7e4e2e1922ffe70b5.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/a5173517-1d5d-49d4-9169-2d55a8f46667/31250f14dc8617fd616471b7e4e2e1922ffe70b5.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2Fa5173517-1d5d-49d4-9169-2d55a8f46667%2F31250f14dc8617fd616471b7e4e2e1922ffe70b5.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784662,
        "id": "c25baa52-a245-42d6-bacb-01f0a8b6636b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784662,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/a5173517-1d5d-49d4-9169-2d55a8f46667/3d90899d649f4c66c44b2f14891c60ad682e46d1.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/a5173517-1d5d-49d4-9169-2d55a8f46667/3d90899d649f4c66c44b2f14891c60ad682e46d1.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2Fa5173517-1d5d-49d4-9169-2d55a8f46667%2F3d90899d649f4c66c44b2f14891c60ad682e46d1.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784662,
        "id": "1cf5f94c-2c44-4f84-80b5-e0bdc9354c29",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784662,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/a5173517-1d5d-49d4-9169-2d55a8f46667/542f52c96669bd45ac42a2e38b3a598db7201418.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/a5173517-1d5d-49d4-9169-2d55a8f46667/542f52c96669bd45ac42a2e38b3a598db7201418.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2Fa5173517-1d5d-49d4-9169-2d55a8f46667%2F542f52c96669bd45ac42a2e38b3a598db7201418.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784662,
        "id": "cc8ef486-9ee8-4839-9669-0b2ff55592e2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784662,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/a5173517-1d5d-49d4-9169-2d55a8f46667/5d0861fd275148ccf321c8c6a61efe9e914ef471.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/a5173517-1d5d-49d4-9169-2d55a8f46667/5d0861fd275148ccf321c8c6a61efe9e914ef471.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2Fa5173517-1d5d-49d4-9169-2d55a8f46667%2F5d0861fd275148ccf321c8c6a61efe9e914ef471.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784662,
        "id": "3fce6463-733d-45bf-a05d-c68f39794df2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784662,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/a5173517-1d5d-49d4-9169-2d55a8f46667/453dee08259239e591d4ab2b72cbda3d5dc42e11.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/a5173517-1d5d-49d4-9169-2d55a8f46667/453dee08259239e591d4ab2b72cbda3d5dc42e11.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2Fa5173517-1d5d-49d4-9169-2d55a8f46667%2F453dee08259239e591d4ab2b72cbda3d5dc42e11.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784662,
        "id": "8b385391-1ecc-4d16-8809-0d05fc492703",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784662,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can see one important keyword. That is "
            ],
            [
              "backedge",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". You can see. "
            ],
            [
              "5-1",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " is called backedge. This is because, we’re not yet done with "
            ],
            [
              "node-1",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", so going from another node to "
            ],
            [
              "node-1",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " means there’s a cycle in the graph. In DFS, if we can go from one gray node to another, we can be certain that the graph has a cycle. This is one of the ways of detecting cycle in a graph. Depending on "
            ],
            [
              "source",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " node and the order of the nodes we visit, we can find out any edge in a cycle as "
            ],
            [
              "backedge",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". For example: if we went to "
            ],
            [
              "5",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " from "
            ],
            [
              "1",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " first, we’d have found out "
            ],
            [
              "2-1",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " as backedge."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can see one important keyword. That is "
          },
          {
            "Text": "backedge",
            "AttrFlags": 1
          },
          {
            "Text": ". You can see. "
          },
          {
            "Text": "5-1",
            "AttrFlags": 1
          },
          {
            "Text": " is called backedge. This is because, we’re not yet done with "
          },
          {
            "Text": "node-1",
            "AttrFlags": 1
          },
          {
            "Text": ", so going from another node to "
          },
          {
            "Text": "node-1",
            "AttrFlags": 1
          },
          {
            "Text": " means there’s a cycle in the graph. In DFS, if we can go from one gray node to another, we can be certain that the graph has a cycle. This is one of the ways of detecting cycle in a graph. Depending on "
          },
          {
            "Text": "source",
            "AttrFlags": 1
          },
          {
            "Text": " node and the order of the nodes we visit, we can find out any edge in a cycle as "
          },
          {
            "Text": "backedge",
            "AttrFlags": 1
          },
          {
            "Text": ". For example: if we went to "
          },
          {
            "Text": "5",
            "AttrFlags": 1
          },
          {
            "Text": " from "
          },
          {
            "Text": "1",
            "AttrFlags": 1
          },
          {
            "Text": " first, we’d have found out "
          },
          {
            "Text": "2-1",
            "AttrFlags": 1
          },
          {
            "Text": " as backedge."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784663,
        "id": "5c2e1f41-3377-4e13-b26b-f6386919e467",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784663,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The edge that we take to go from gray node to white node are called "
            ],
            [
              "tree edge",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". If we only keep the "
            ],
            [
              "tree edge",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "‘s and remove others, we’ll get "
            ],
            [
              "DFS tree",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The edge that we take to go from gray node to white node are called "
          },
          {
            "Text": "tree edge",
            "AttrFlags": 1
          },
          {
            "Text": ". If we only keep the "
          },
          {
            "Text": "tree edge",
            "AttrFlags": 1
          },
          {
            "Text": "‘s and remove others, we’ll get "
          },
          {
            "Text": "DFS tree",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784663,
        "id": "c89ca2a5-d42b-45c4-a731-4e11c832d6c4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784663,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In undirected graph, if we can visit a already visited node, that must be a "
            ],
            [
              "backedge",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". But for directed graphs, we must check the colors. "
            ],
            [
              "If and only if we can go from one gray node to another gray node, that is called a backedge",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In undirected graph, if we can visit a already visited node, that must be a "
          },
          {
            "Text": "backedge",
            "AttrFlags": 1
          },
          {
            "Text": ". But for directed graphs, we must check the colors. "
          },
          {
            "Text": "If and only if we can go from one gray node to another gray node, that is called a backedge",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784663,
        "id": "5aa3b680-de0b-4190-a698-cd8992c41830",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784663,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In DFS, we can also keep timestamps for each node, which can be used in many ways (e.g.: Topological Sort)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In DFS, we can also keep timestamps for each node, which can be used in many ways (e.g.: Topological Sort)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784664,
        "id": "c1f95432-922b-405e-a028-47755fac0a53",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784664,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When a node "
            ],
            [
              "v",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " is changed from white to gray the time is recorded in "
            ],
            [
              "d[v]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "When a node "
          },
          {
            "Text": "v",
            "AttrFlags": 1
          },
          {
            "Text": " is changed from white to gray the time is recorded in "
          },
          {
            "Text": "d[v]",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784664,
        "id": "32875051-629b-4c1d-918b-d3821dcfe06e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784664,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When a node "
            ],
            [
              "v",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " is changed from gray to black the time is recorded in "
            ],
            [
              "f[v]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "When a node "
          },
          {
            "Text": "v",
            "AttrFlags": 1
          },
          {
            "Text": " is changed from gray to black the time is recorded in "
          },
          {
            "Text": "f[v]",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784664,
        "id": "02cec2b3-c413-4280-88b2-477c6ced62b3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784664,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here "
            ],
            [
              "d[]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " means "
            ],
            [
              "discovery time",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "f[]",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " means "
            ],
            [
              "finishing time",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". Our pesudo-code will look like:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here "
          },
          {
            "Text": "d[]",
            "AttrFlags": 1
          },
          {
            "Text": " means "
          },
          {
            "Text": "discovery time",
            "AttrFlags": 4
          },
          {
            "Text": " and "
          },
          {
            "Text": "f[]",
            "AttrFlags": 1
          },
          {
            "Text": " means "
          },
          {
            "Text": "finishing time",
            "AttrFlags": 4
          },
          {
            "Text": ". Our pesudo-code will look like:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784664,
        "id": "6326b548-a25d-4e09-89f2-51e2c5be8a1e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784664,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Procedure DFS(G):\nfor each node u in V[G]\n    color[u] := white\n    parent[u] := NULL\nend for\ntime := 0\nfor each node u in V[G]\n    if color[u] == white\n        DFS-Visit(u)\n    end if\nend for\n\nProcedure DFS-Visit(u):\ncolor[u] := gray\ntime := time + 1\nd[u] := time\nfor each node v adjacent to u\n    if color[v] == white\n        parent[v] := u\n        DFS-Visit(v)\n    end if\nend for\ncolor[u] := black\ntime := time + 1\nf[u] := time"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Procedure DFS(G):\nfor each node u in V[G]\n    color[u] := white\n    parent[u] := NULL\nend for\ntime := 0\nfor each node u in V[G]\n    if color[u] == white\n        DFS-Visit(u)\n    end if\nend for\n\nProcedure DFS-Visit(u):\ncolor[u] := gray\ntime := time + 1\nd[u] := time\nfor each node v adjacent to u\n    if color[v] == white\n        parent[v] := u\n        DFS-Visit(v)\n    end if\nend for\ncolor[u] := black\ntime := time + 1\nf[u] := time",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784664,
        "id": "f5666ebc-7151-4598-bc3d-bc1809b90708",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784664,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Complexity:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Complexity:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784664,
        "id": "2e4e2fe4-9757-451e-b5e7-1301b4c34b6e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784664,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Each nodes and edges are visited once. So the complexity of DFS is "
            ],
            [
              "O(V+E)",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", where "
            ],
            [
              "V",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " denotes the number of nodes and "
            ],
            [
              "E",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " denotes the number of edges."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Each nodes and edges are visited once. So the complexity of DFS is "
          },
          {
            "Text": "O(V+E)",
            "AttrFlags": 1
          },
          {
            "Text": ", where "
          },
          {
            "Text": "V",
            "AttrFlags": 1
          },
          {
            "Text": " denotes the number of nodes and "
          },
          {
            "Text": "E",
            "AttrFlags": 1
          },
          {
            "Text": " denotes the number of edges."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784665,
        "id": "974bf86a-d55f-40f1-aff4-01bb09edd861",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784665,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Applications of Depth First Search:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Applications of Depth First Search:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784665,
        "id": "96a55426-db98-4130-ad9a-31edf13a8c0b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784665,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finding all pair shortest path in an undirected graph."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finding all pair shortest path in an undirected graph."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784665,
        "id": "dfe9c8f6-d071-47b6-ad92-8a6c9100a34a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784665,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Detecting cycle in a graph."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Detecting cycle in a graph."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784665,
        "id": "0ce03114-0b11-48ab-8bd4-0ddbb41ec4f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784665,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Path finding."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Path finding."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784665,
        "id": "cc8e33d9-de4f-4fee-ab87-f83b1afc8a89",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784665,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Topological Sort."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Topological Sort."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784665,
        "id": "07f17658-ce80-4d93-87b9-dc23988d6ccc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784665,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Testing if a graph is bipartite."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Testing if a graph is bipartite."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784666,
        "id": "342196b4-3b26-4af0-89cc-428335d51db6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784666,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finding Strongly Connected Component."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finding Strongly Connected Component."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928784666,
        "id": "9076d0fc-790d-45f0-a631-9d62125ef4ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928784666,
        "parent_id": "9f6e0af0-8af9-4701-8fa7-d9d292eeb4e6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Solving puzzles with one solution."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Solving puzzles with one solution."
          }
        ]
      }
    ],
    "title": "Introduction To Depth-First Search",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}