{
  "ID": "de0748a3-0d56-4d26-9e43-c6f0fedc01fe",
  "Root": {
    "alive": true,
    "content": [
      "82da31e3-b8e3-4471-9673-42a51cde8144",
      "b0565e82-0b4e-49e2-8195-bf46fa092160",
      "2166388f-14d5-4fe5-8b2e-1a1cc98ad201",
      "8a9b03ec-9428-4a0a-918a-8c43cfe2663b",
      "fa58813f-9644-44ef-9949-e5ff793f50e7",
      "5c462904-b6f4-42b5-98be-e62225a02c8e",
      "284c3d33-ffb7-4a90-be35-1e1cae0363cf",
      "38fa6ab8-3fdf-489a-a11c-94131fb18d16",
      "1aeafedb-8013-4727-a213-f200ff3fa8c7",
      "7106f947-f26f-46a2-bcfd-29a94b3c54ac",
      "80a78b76-8631-49f2-b63d-d9bad4a66a22",
      "31eb5737-2462-457e-bc94-ff674c031482",
      "0c0c474a-6f90-468b-84be-078ef1e33117",
      "c43accd3-ab3b-4886-9e7e-eb02b5b00505",
      "b44090b6-bff5-469a-adaf-5941e2b2e5ce",
      "b3d342a5-5fde-467b-93d9-c1d98517de33"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551928505821,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "de0748a3-0d56-4d26-9e43-c6f0fedc01fe",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551928505821,
    "parent_id": "ec9d0bba-8ded-4256-866e-28adfde6676e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "KMP Algorithm in C"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928505816,
        "id": "82da31e3-b8e3-4471-9673-42a51cde8144",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928505816,
        "parent_id": "de0748a3-0d56-4d26-9e43-c6f0fedc01fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Given a text "
            ],
            [
              "txt",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " and a pattern "
            ],
            [
              "pat",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", the objective of this program will be to print all the occurance of "
            ],
            [
              "pat",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " in "
            ],
            [
              "txt",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Given a text "
          },
          {
            "Text": "txt",
            "AttrFlags": 4
          },
          {
            "Text": " and a pattern "
          },
          {
            "Text": "pat",
            "AttrFlags": 4
          },
          {
            "Text": ", the objective of this program will be to print all the occurance of "
          },
          {
            "Text": "pat",
            "AttrFlags": 4
          },
          {
            "Text": " in "
          },
          {
            "Text": "txt",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928505819,
        "id": "b0565e82-0b4e-49e2-8195-bf46fa092160",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928505819,
        "parent_id": "de0748a3-0d56-4d26-9e43-c6f0fedc01fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Examples:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Examples:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928505819,
        "id": "2166388f-14d5-4fe5-8b2e-1a1cc98ad201",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928505819,
        "parent_id": "de0748a3-0d56-4d26-9e43-c6f0fedc01fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Input:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Input:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928505819,
        "id": "8a9b03ec-9428-4a0a-918a-8c43cfe2663b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928505819,
        "parent_id": "de0748a3-0d56-4d26-9e43-c6f0fedc01fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "txt[] =  \"THIS IS A TEST TEXT\"\npat[] = \"TEST\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "txt[] =  \"THIS IS A TEST TEXT\"\npat[] = \"TEST\"",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928505820,
        "id": "fa58813f-9644-44ef-9949-e5ff793f50e7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928505820,
        "parent_id": "de0748a3-0d56-4d26-9e43-c6f0fedc01fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "output:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "output:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928505820,
        "id": "5c462904-b6f4-42b5-98be-e62225a02c8e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928505820,
        "parent_id": "de0748a3-0d56-4d26-9e43-c6f0fedc01fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Pattern found at index 10"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Pattern found at index 10",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928505820,
        "id": "284c3d33-ffb7-4a90-be35-1e1cae0363cf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928505820,
        "parent_id": "de0748a3-0d56-4d26-9e43-c6f0fedc01fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Input:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Input:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928505820,
        "id": "38fa6ab8-3fdf-489a-a11c-94131fb18d16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928505820,
        "parent_id": "de0748a3-0d56-4d26-9e43-c6f0fedc01fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "txt[] =  \"AABAACAADAABAAABAA\"\npat[] = \"AABA\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "txt[] =  \"AABAACAADAABAAABAA\"\npat[] = \"AABA\"",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928505820,
        "id": "1aeafedb-8013-4727-a213-f200ff3fa8c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928505820,
        "parent_id": "de0748a3-0d56-4d26-9e43-c6f0fedc01fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "output:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "output:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928505820,
        "id": "7106f947-f26f-46a2-bcfd-29a94b3c54ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928505820,
        "parent_id": "de0748a3-0d56-4d26-9e43-c6f0fedc01fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Pattern found at index 0\nPattern found at index 9\nPattern found at index 13"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Pattern found at index 0\nPattern found at index 9\nPattern found at index 13",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928505821,
        "id": "80a78b76-8631-49f2-b63d-d9bad4a66a22",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928505821,
        "parent_id": "de0748a3-0d56-4d26-9e43-c6f0fedc01fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C Language Implementation:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "C Language Implementation:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928505821,
        "id": "31eb5737-2462-457e-bc94-ff674c031482",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928505821,
        "parent_id": "de0748a3-0d56-4d26-9e43-c6f0fedc01fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// C program for implementation of KMP pattern searching \n// algorithm\n#include\u003cstdio.h\u003e\n#include\u003cstring.h\u003e\n#include\u003cstdlib.h\u003e\n \nvoid computeLPSArray(char *pat, int M, int *lps);\n \nvoid KMPSearch(char *pat, char *txt)\n{\n    int M = strlen(pat);\n    int N = strlen(txt);\n \n    // create lps[] that will hold the longest prefix suffix\n    // values for pattern\n    int *lps = (int *)malloc(sizeof(int)*M);\n    int j  = 0;  // index for pat[]\n \n    // Preprocess the pattern (calculate lps[] array)\n    computeLPSArray(pat, M, lps);\n \n    int i = 0;  // index for txt[]\n    while (i \u003c N)\n    {\n      if (pat[j] == txt[i])\n      {\n        j++;\n        i++;\n      }\n \n      if (j == M)\n      {\n        printf(\"Found pattern at index %d \\n\", i-j);\n        j = lps[j-1];\n      }\n \n      // mismatch after j matches\n      else if (i \u003c N \u0026\u0026 pat[j] != txt[i])\n      {\n        // Do not match lps[0..lps[j-1]] characters,\n        // they will match anyway\n        if (j != 0)\n         j = lps[j-1];\n        else\n         i = i+1;\n      }\n    }\n    free(lps); // to avoid memory leak\n}\n \nvoid computeLPSArray(char *pat, int M, int *lps)\n{\n    int len = 0;  // length of the previous longest prefix suffix\n    int i;\n \n    lps[0] = 0; // lps[0] is always 0\n    i = 1;\n \n    // the loop calculates lps[i] for i = 1 to M-1\n    while (i \u003c M)\n    {\n       if (pat[i] == pat[len])\n       {\n         len++;\n         lps[i] = len;\n         i++;\n       }\n       else // (pat[i] != pat[len])\n       {\n         if (len != 0)\n         {\n           // This is tricky. Consider the example \n           // AAACAAAA and i = 7.\n           len = lps[len-1];\n \n           // Also, note that we do not increment i here\n         }\n         else // if (len == 0)\n         {\n           lps[i] = 0;\n           i++;\n         }\n       }\n    }\n}\n \n// Driver program to test above function\nint main()\n{\n   char *txt = \"ABABDABACDABABCABAB\";\n   char *pat = \"ABABCABAB\";\n   KMPSearch(pat, txt);\n   return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// C program for implementation of KMP pattern searching \n// algorithm\n#include\u003cstdio.h\u003e\n#include\u003cstring.h\u003e\n#include\u003cstdlib.h\u003e\n \nvoid computeLPSArray(char *pat, int M, int *lps);\n \nvoid KMPSearch(char *pat, char *txt)\n{\n    int M = strlen(pat);\n    int N = strlen(txt);\n \n    // create lps[] that will hold the longest prefix suffix\n    // values for pattern\n    int *lps = (int *)malloc(sizeof(int)*M);\n    int j  = 0;  // index for pat[]\n \n    // Preprocess the pattern (calculate lps[] array)\n    computeLPSArray(pat, M, lps);\n \n    int i = 0;  // index for txt[]\n    while (i \u003c N)\n    {\n      if (pat[j] == txt[i])\n      {\n        j++;\n        i++;\n      }\n \n      if (j == M)\n      {\n        printf(\"Found pattern at index %d \\n\", i-j);\n        j = lps[j-1];\n      }\n \n      // mismatch after j matches\n      else if (i \u003c N \u0026\u0026 pat[j] != txt[i])\n      {\n        // Do not match lps[0..lps[j-1]] characters,\n        // they will match anyway\n        if (j != 0)\n         j = lps[j-1];\n        else\n         i = i+1;\n      }\n    }\n    free(lps); // to avoid memory leak\n}\n \nvoid computeLPSArray(char *pat, int M, int *lps)\n{\n    int len = 0;  // length of the previous longest prefix suffix\n    int i;\n \n    lps[0] = 0; // lps[0] is always 0\n    i = 1;\n \n    // the loop calculates lps[i] for i = 1 to M-1\n    while (i \u003c M)\n    {\n       if (pat[i] == pat[len])\n       {\n         len++;\n         lps[i] = len;\n         i++;\n       }\n       else // (pat[i] != pat[len])\n       {\n         if (len != 0)\n         {\n           // This is tricky. Consider the example \n           // AAACAAAA and i = 7.\n           len = lps[len-1];\n \n           // Also, note that we do not increment i here\n         }\n         else // if (len == 0)\n         {\n           lps[i] = 0;\n           i++;\n         }\n       }\n    }\n}\n \n// Driver program to test above function\nint main()\n{\n   char *txt = \"ABABDABACDABABCABAB\";\n   char *pat = \"ABABCABAB\";\n   KMPSearch(pat, txt);\n   return 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928505821,
        "id": "0c0c474a-6f90-468b-84be-078ef1e33117",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928505821,
        "parent_id": "de0748a3-0d56-4d26-9e43-c6f0fedc01fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928505821,
        "id": "c43accd3-ab3b-4886-9e7e-eb02b5b00505",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928505821,
        "parent_id": "de0748a3-0d56-4d26-9e43-c6f0fedc01fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Found pattern at index 10"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Found pattern at index 10",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928505821,
        "id": "b44090b6-bff5-469a-adaf-5941e2b2e5ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928505821,
        "parent_id": "de0748a3-0d56-4d26-9e43-c6f0fedc01fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Reference:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Reference:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928505821,
        "id": "b3d342a5-5fde-467b-93d9-c1d98517de33",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928505821,
        "parent_id": "de0748a3-0d56-4d26-9e43-c6f0fedc01fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://www.geeksforgeeks.org/searching-for-patterns-set-2-kmp-algorithm/"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "http://www.geeksforgeeks.org/searching-for-patterns-set-2-kmp-algorithm/"
          }
        ]
      }
    ],
    "title": "KMP Algorithm in C",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}