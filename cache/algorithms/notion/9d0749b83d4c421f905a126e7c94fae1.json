{
  "ID": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
  "Root": {
    "alive": true,
    "content": [
      "bc2978d4-e48e-4886-8053-07142f5b6994",
      "6d1a35e2-3165-4a2f-9422-d7203eb49dcf",
      "697fd835-eb06-4bf6-9c36-253dd413a064",
      "e9a2b34c-7cdb-4561-859c-86c1a88ba0d5",
      "208bb6e4-2b71-4a7a-8425-cf9b5b35ba67",
      "70a089d6-24bc-4954-a6a3-14e40499e475",
      "27dd8941-1690-4b35-814a-f9d05fcb1003",
      "86ab6162-a77c-4272-a7e8-0ba9f495453b",
      "c0c8facc-06f6-492e-b244-734e3b0e5294",
      "98a17edb-f4af-469f-88c8-12a6eab71836",
      "c663c066-8efa-423c-a79e-aa4af9227486",
      "90b1ffa9-5f2e-45df-be8d-14726bebc626",
      "8def5596-a0e9-41a3-a824-6dc143065067",
      "f0a58093-5840-4ad2-9471-31eea62f777d",
      "ce8975a9-fba4-46f4-9164-e8f979f22684",
      "898d7de5-a3ce-455b-a987-750e3b176ab6",
      "3709c7f2-7ae5-4e8e-a3ea-b629b9675a63",
      "6661f0d7-3e42-4f11-80a1-bfb9b03e1e97",
      "8355a31d-9336-4445-91b8-f4eb4f0a14ca",
      "421fa621-20ef-4524-856f-eaa3837d31ab",
      "b110e0b1-103d-466c-8745-74c1d13f5850"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551928032709,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551928032709,
    "parent_id": "8ae5c9b5-b80d-4e27-930b-0dbbf5b2a075",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Topological Sort"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032701,
        "id": "bc2978d4-e48e-4886-8053-07142f5b6994",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032701,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A topological ordering, or a topological sort, orders the vertices in a directed acyclic graph on a line, i.e. in a list, such that all directed edges go from left to right. Such an ordering cannot exist if the graph contains a directed cycle because there is no way that you can keep going right on a line and still return back to where you started from."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A topological ordering, or a topological sort, orders the vertices in a directed acyclic graph on a line, i.e. in a list, such that all directed edges go from left to right. Such an ordering cannot exist if the graph contains a directed cycle because there is no way that you can keep going right on a line and still return back to where you started from."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032704,
        "id": "6d1a35e2-3165-4a2f-9422-d7203eb49dcf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032704,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Formally, in a graph "
            ],
            [
              "G = (V, E)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", then a linear ordering of all its vertices is such that if "
            ],
            [
              "G",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " contains an edge "
            ],
            [
              "(u, v) ∈ E",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "from vertex "
            ],
            [
              "u",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to vertex "
            ],
            [
              "v",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " then "
            ],
            [
              "u",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " precedes "
            ],
            [
              "v",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the ordering."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Formally, in a graph "
          },
          {
            "Text": "G = (V, E)",
            "AttrFlags": 2
          },
          {
            "Text": ", then a linear ordering of all its vertices is such that if "
          },
          {
            "Text": "G",
            "AttrFlags": 2
          },
          {
            "Text": " contains an edge "
          },
          {
            "Text": "(u, v) ∈ E",
            "AttrFlags": 2
          },
          {
            "Text": "from vertex "
          },
          {
            "Text": "u",
            "AttrFlags": 2
          },
          {
            "Text": " to vertex "
          },
          {
            "Text": "v",
            "AttrFlags": 2
          },
          {
            "Text": " then "
          },
          {
            "Text": "u",
            "AttrFlags": 2
          },
          {
            "Text": " precedes "
          },
          {
            "Text": "v",
            "AttrFlags": 2
          },
          {
            "Text": " in the ordering."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032704,
        "id": "697fd835-eb06-4bf6-9c36-253dd413a064",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032704,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is important to note that each DAG has "
            ],
            [
              "at least one",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " topological sort."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is important to note that each DAG has "
          },
          {
            "Text": "at least one",
            "AttrFlags": 4
          },
          {
            "Text": " topological sort."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032704,
        "id": "e9a2b34c-7cdb-4561-859c-86c1a88ba0d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032704,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are known algorithms for constructing a topological ordering of any DAG in linear time, one example is:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are known algorithms for constructing a topological ordering of any DAG in linear time, one example is:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032705,
        "id": "208bb6e4-2b71-4a7a-8425-cf9b5b35ba67",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032705,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Call "
            ],
            [
              "depth_first_search(G)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to compute finishing times "
            ],
            [
              "v.f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for each vertex "
            ],
            [
              "v",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Call "
          },
          {
            "Text": "depth_first_search(G)",
            "AttrFlags": 2
          },
          {
            "Text": " to compute finishing times "
          },
          {
            "Text": "v.f",
            "AttrFlags": 2
          },
          {
            "Text": " for each vertex "
          },
          {
            "Text": "v",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032705,
        "id": "70a089d6-24bc-4954-a6a3-14e40499e475",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032705,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As each vertex is finished, insert it into the front of a linked list"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "As each vertex is finished, insert it into the front of a linked list"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032705,
        "id": "27dd8941-1690-4b35-814a-f9d05fcb1003",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032705,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the linked list of vertices, as it is now sorted."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "the linked list of vertices, as it is now sorted."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032706,
        "id": "86ab6162-a77c-4272-a7e8-0ba9f495453b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032706,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A topological sort can be performed in "
            ],
            [
              "ϴ(V + E)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " time, since the depth-first search algorithm takes "
            ],
            [
              "ϴ(V + E)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " time and it takes "
            ],
            [
              "Ω(1)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (constant time) to insert each of "
            ],
            [
              "|V|",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " vertices into the front of a linked list."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A topological sort can be performed in "
          },
          {
            "Text": "ϴ(V + E)",
            "AttrFlags": 2
          },
          {
            "Text": " time, since the depth-first search algorithm takes "
          },
          {
            "Text": "ϴ(V + E)",
            "AttrFlags": 2
          },
          {
            "Text": " time and it takes "
          },
          {
            "Text": "Ω(1)",
            "AttrFlags": 2
          },
          {
            "Text": " (constant time) to insert each of "
          },
          {
            "Text": "|V|",
            "AttrFlags": 2
          },
          {
            "Text": " vertices into the front of a linked list."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032706,
        "id": "c0c8facc-06f6-492e-b244-734e3b0e5294",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032706,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032706,
        "id": "98a17edb-f4af-469f-88c8-12a6eab71836",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032706,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Many applications use directed acyclic graphs to indicate precedences among events. We use topological sorting so that we get an ordering to process each vertex before any of its successors."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Many applications use directed acyclic graphs to indicate precedences among events. We use topological sorting so that we get an ordering to process each vertex before any of its successors."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032706,
        "id": "c663c066-8efa-423c-a79e-aa4af9227486",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032706,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Vertices in a graph may represent tasks to be performed and the edges may represent constraints that one task must be performed before another; a topological ordering is a valid sequence to perform the tasks set of tasks described in "
            ],
            [
              "V",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Vertices in a graph may represent tasks to be performed and the edges may represent constraints that one task must be performed before another; a topological ordering is a valid sequence to perform the tasks set of tasks described in "
          },
          {
            "Text": "V",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032706,
        "id": "90b1ffa9-5f2e-45df-be8d-14726bebc626",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032706,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Problem instance and its solution"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Problem instance and its solution"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032707,
        "id": "8def5596-a0e9-41a3-a824-6dc143065067",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032707,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let a vertice "
            ],
            [
              "v",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " describe a "
            ],
            [
              "Task(hours_to_complete: int)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", i. e. "
            ],
            [
              "Task(4)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " describes a "
            ],
            [
              "Task",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that takes "
            ],
            [
              "4",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " hours to complete, and an edge "
            ],
            [
              "e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " describe a "
            ],
            [
              "Cooldown(hours: int)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " such that "
            ],
            [
              "Cooldown(3)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " describes a duration of time to cool down after a completed task."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let a vertice "
          },
          {
            "Text": "v",
            "AttrFlags": 2
          },
          {
            "Text": " describe a "
          },
          {
            "Text": "Task(hours_to_complete: int)",
            "AttrFlags": 2
          },
          {
            "Text": ", i. e. "
          },
          {
            "Text": "Task(4)",
            "AttrFlags": 2
          },
          {
            "Text": " describes a "
          },
          {
            "Text": "Task",
            "AttrFlags": 2
          },
          {
            "Text": " that takes "
          },
          {
            "Text": "4",
            "AttrFlags": 2
          },
          {
            "Text": " hours to complete, and an edge "
          },
          {
            "Text": "e",
            "AttrFlags": 2
          },
          {
            "Text": " describe a "
          },
          {
            "Text": "Cooldown(hours: int)",
            "AttrFlags": 2
          },
          {
            "Text": " such that "
          },
          {
            "Text": "Cooldown(3)",
            "AttrFlags": 2
          },
          {
            "Text": " describes a duration of time to cool down after a completed task."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032707,
        "id": "f0a58093-5840-4ad2-9471-31eea62f777d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032707,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let our graph be called "
            ],
            [
              "dag",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (since it is a directed acyclic graph), and let it contain 5 vertices:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let our graph be called "
          },
          {
            "Text": "dag",
            "AttrFlags": 2
          },
          {
            "Text": " (since it is a directed acyclic graph), and let it contain 5 vertices:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032707,
        "id": "ce8975a9-fba4-46f4-9164-e8f979f22684",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032707,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "A \u003c- dag.add_vertex(Task(4)); \nB \u003c- dag.add_vertex(Task(5));\nC \u003c- dag.add_vertex(Task(3)); \nD \u003c- dag.add_vertex(Task(2));\nE \u003c- dag.add_vertex(Task(7));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "A \u003c- dag.add_vertex(Task(4)); \nB \u003c- dag.add_vertex(Task(5));\nC \u003c- dag.add_vertex(Task(3)); \nD \u003c- dag.add_vertex(Task(2));\nE \u003c- dag.add_vertex(Task(7));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032707,
        "id": "898d7de5-a3ce-455b-a987-750e3b176ab6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032707,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "where we connect the vertices with directed edges such that the graph is acyclic,"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "where we connect the vertices with directed edges such that the graph is acyclic,"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032707,
        "id": "3709c7f2-7ae5-4e8e-a3ea-b629b9675a63",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032707,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// A ---\u003e C ----+\n// |      |     |\n// v      v     v\n// B ---\u003e D --\u003e E\ndag.add_edge(A, B, Cooldown(2));\ndag.add_edge(A, C, Cooldown(2));\ndag.add_edge(B, D, Cooldown(1));\ndag.add_edge(C, D, Cooldown(1));\ndag.add_edge(C, E, Cooldown(1));\ndag.add_edge(D, E, Cooldown(3));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// A ---\u003e C ----+\n// |      |     |\n// v      v     v\n// B ---\u003e D --\u003e E\ndag.add_edge(A, B, Cooldown(2));\ndag.add_edge(A, C, Cooldown(2));\ndag.add_edge(B, D, Cooldown(1));\ndag.add_edge(C, D, Cooldown(1));\ndag.add_edge(C, E, Cooldown(1));\ndag.add_edge(D, E, Cooldown(3));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032708,
        "id": "6661f0d7-3e42-4f11-80a1-bfb9b03e1e97",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032708,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "then there are three possible topological orderings between "
            ],
            [
              "A",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "E",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ","
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "then there are three possible topological orderings between "
          },
          {
            "Text": "A",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "E",
            "AttrFlags": 2
          },
          {
            "Text": ","
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032708,
        "id": "8355a31d-9336-4445-91b8-f4eb4f0a14ca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032708,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A -\u003e B -\u003e D -\u003e E",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "A -\u003e B -\u003e D -\u003e E",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032708,
        "id": "421fa621-20ef-4524-856f-eaa3837d31ab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032708,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A -\u003e C -\u003e D -\u003e E",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "A -\u003e C -\u003e D -\u003e E",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928032709,
        "id": "b110e0b1-103d-466c-8745-74c1d13f5850",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928032709,
        "parent_id": "9d0749b8-3d4c-421f-905a-126e7c94fae1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A -\u003e C -\u003e E",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "A -\u003e C -\u003e E",
            "AttrFlags": 2
          }
        ]
      }
    ],
    "title": "Topological Sort",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}