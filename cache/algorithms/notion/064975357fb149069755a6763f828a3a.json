{
  "ID": "06497535-7fb1-4906-9755-a6763f828a3a",
  "Root": {
    "alive": true,
    "content": [
      "b22a8672-b045-4fff-bea5-de587bb2ec93",
      "6385f55b-fc5c-489e-9784-8d9744b9776e",
      "8cd330b1-7b71-411f-a37b-87f4a7d0d629",
      "c7025a5c-b1cd-4225-a1a2-517e34dcada2",
      "9837959d-84bc-49dd-98c3-3ca7702ba771",
      "97ed13ff-f405-4ba2-bb07-4d112032c871",
      "6d360b8a-f79f-4837-8f0f-69909d989ced",
      "e73c334c-5fd8-4e51-a3b3-a6bb244559f5",
      "74793eba-0442-408d-9d07-bd56eb5b4a1e",
      "a583de13-29c5-4181-88dd-ec9164cd03f8",
      "95087d31-9059-442f-9af3-e5e4de5d7c16",
      "4cce7609-ea40-43d4-8b40-6d735e809960",
      "24a8d445-a1a8-4f43-b2e8-592c274cd317",
      "f4e38a8c-143f-43fe-ae2c-c0e042a36dea",
      "04938e52-03f0-405b-8a1f-7696caecf021",
      "49b0492f-496f-4131-b8b7-8296d1bebe87",
      "eba72099-0fb7-47af-b568-cc30e131c166"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551928105958,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "06497535-7fb1-4906-9755-a6763f828a3a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551928105958,
    "parent_id": "adfec1cf-4941-4483-b98d-9550de7e3916",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "An Olog n example"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928105951,
        "id": "b22a8672-b045-4fff-bea5-de587bb2ec93",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928105951,
        "parent_id": "06497535-7fb1-4906-9755-a6763f828a3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928105954,
        "id": "6385f55b-fc5c-489e-9784-8d9744b9776e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928105954,
        "parent_id": "06497535-7fb1-4906-9755-a6763f828a3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consider the following problem:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consider the following problem:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928105955,
        "id": "8cd330b1-7b71-411f-a37b-87f4a7d0d629",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928105955,
        "parent_id": "06497535-7fb1-4906-9755-a6763f828a3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "L",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a sorted list containing "
            ],
            [
              "n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " signed integers ("
            ],
            [
              "n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " being big enough), for example "
            ],
            [
              "[-5, -2, -1, 0, 1, 2, 4]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (here, "
            ],
            [
              "n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has a value of 7). If "
            ],
            [
              "L",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is known to contain the integer 0, how can you find the index of 0 ?"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "L",
            "AttrFlags": 2
          },
          {
            "Text": " is a sorted list containing "
          },
          {
            "Text": "n",
            "AttrFlags": 2
          },
          {
            "Text": " signed integers ("
          },
          {
            "Text": "n",
            "AttrFlags": 2
          },
          {
            "Text": " being big enough), for example "
          },
          {
            "Text": "[-5, -2, -1, 0, 1, 2, 4]",
            "AttrFlags": 2
          },
          {
            "Text": " (here, "
          },
          {
            "Text": "n",
            "AttrFlags": 2
          },
          {
            "Text": " has a value of 7). If "
          },
          {
            "Text": "L",
            "AttrFlags": 2
          },
          {
            "Text": " is known to contain the integer 0, how can you find the index of 0 ?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928105955,
        "id": "c7025a5c-b1cd-4225-a1a2-517e34dcada2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928105955,
        "parent_id": "06497535-7fb1-4906-9755-a6763f828a3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Naïve approach"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Naïve approach"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928105955,
        "id": "9837959d-84bc-49dd-98c3-3ca7702ba771",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928105955,
        "parent_id": "06497535-7fb1-4906-9755-a6763f828a3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The first thing that comes to mind is to just read every index until 0 is found. In the worst case, the number of operations is "
            ],
            [
              "n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", so the complexity is O(n)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The first thing that comes to mind is to just read every index until 0 is found. In the worst case, the number of operations is "
          },
          {
            "Text": "n",
            "AttrFlags": 2
          },
          {
            "Text": ", so the complexity is O(n)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928105955,
        "id": "97ed13ff-f405-4ba2-bb07-4d112032c871",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928105955,
        "parent_id": "06497535-7fb1-4906-9755-a6763f828a3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This works fine for small values of "
            ],
            [
              "n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", but is there a more efficient way ?"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This works fine for small values of "
          },
          {
            "Text": "n",
            "AttrFlags": 2
          },
          {
            "Text": ", but is there a more efficient way ?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928105956,
        "id": "6d360b8a-f79f-4837-8f0f-69909d989ced",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928105956,
        "parent_id": "06497535-7fb1-4906-9755-a6763f828a3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Dichotomy"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Dichotomy"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928105956,
        "id": "e73c334c-5fd8-4e51-a3b3-a6bb244559f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928105956,
        "parent_id": "06497535-7fb1-4906-9755-a6763f828a3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consider the following algorithm (Python3):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consider the following algorithm (Python3):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928105956,
        "id": "74793eba-0442-408d-9d07-bd56eb5b4a1e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928105956,
        "parent_id": "06497535-7fb1-4906-9755-a6763f828a3a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "a = 0\nb = n-1\nwhile True:\n  h = (a+b)//2 ## // is the integer division, so h is an integer\n  if L[h] == 0:\n    return h\n  elif L[h] \u003e 0:\n    b = h\n  elif L[h] \u003c 0:\n    a = h"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "a = 0\nb = n-1\nwhile True:\n  h = (a+b)//2 ## // is the integer division, so h is an integer\n  if L[h] == 0:\n    return h\n  elif L[h] \u003e 0:\n    b = h\n  elif L[h] \u003c 0:\n    a = h",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928105956,
        "id": "a583de13-29c5-4181-88dd-ec9164cd03f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928105956,
        "parent_id": "06497535-7fb1-4906-9755-a6763f828a3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are the indexes between which 0 is to be found. Each time we enter the loop, we use an index between "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and use it to narrow the area to be searched."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": " are the indexes between which 0 is to be found. Each time we enter the loop, we use an index between "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": " and use it to narrow the area to be searched."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928105957,
        "id": "95087d31-9059-442f-9af3-e5e4de5d7c16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928105957,
        "parent_id": "06497535-7fb1-4906-9755-a6763f828a3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the worst case, we have to wait until "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are equal. But how many operations does that take? Not n, because each time we enter the loop, we divide the distance between "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " by about two. Rather, the complexity is O(log n)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the worst case, we have to wait until "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": " are equal. But how many operations does that take? Not n, because each time we enter the loop, we divide the distance between "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": " by about two. Rather, the complexity is O(log n)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928105957,
        "id": "4cce7609-ea40-43d4-8b40-6d735e809960",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928105957,
        "parent_id": "06497535-7fb1-4906-9755-a6763f828a3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Explanation"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Explanation"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928105957,
        "id": "24a8d445-a1a8-4f43-b2e8-592c274cd317",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928105957,
        "parent_id": "06497535-7fb1-4906-9755-a6763f828a3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: When we write “log”, we mean the binary logarithm, or log base 2 (which we will write “log_2”). As O(log_2 n) = O(log n) (you can do the math) we will use “log” instead of “log_2”.",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: When we write “log”, we mean the binary logarithm, or log base 2 (which we will write “log_2”). As O(log_2 n) = O(log n) (you can do the math) we will use “log” instead of “log_2”.",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928105957,
        "id": "f4e38a8c-143f-43fe-ae2c-c0e042a36dea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928105957,
        "parent_id": "06497535-7fb1-4906-9755-a6763f828a3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s call x the number of operations: we know that 1 = n / (2^x)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s call x the number of operations: we know that 1 = n / (2^x)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928105957,
        "id": "04938e52-03f0-405b-8a1f-7696caecf021",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928105957,
        "parent_id": "06497535-7fb1-4906-9755-a6763f828a3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So 2^x = n, then x = log n"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So 2^x = n, then x = log n"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928105958,
        "id": "49b0492f-496f-4131-b8b7-8296d1bebe87",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928105958,
        "parent_id": "06497535-7fb1-4906-9755-a6763f828a3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Conclusion"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Conclusion"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928105958,
        "id": "eba72099-0fb7-47af-b568-cc30e131c166",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928105958,
        "parent_id": "06497535-7fb1-4906-9755-a6763f828a3a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When faced with successive divisions (be it by two or by any number), remember that the complexity is logarithmic."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When faced with successive divisions (be it by two or by any number), remember that the complexity is logarithmic."
          }
        ]
      }
    ],
    "title": "An Olog n example",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}