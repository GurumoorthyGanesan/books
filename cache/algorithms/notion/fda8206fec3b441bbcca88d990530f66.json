{
  "ID": "fda8206f-ec3b-441b-bcca-88d990530f66",
  "Root": {
    "alive": true,
    "content": [
      "b5920d8f-3cce-4201-b0f1-fa58deb8c53c",
      "751861d1-36b6-49e8-866a-dc50eef1a473",
      "d9e3c435-5c79-47f6-b08b-bca85a260be9",
      "3a7add00-cee4-488a-86af-9c0ac3092f37",
      "dbefcdee-d6c1-4757-a62f-67d6247051fc",
      "67a84e25-78f9-4bdc-a7a2-fd77eadc324f",
      "2c36118d-7b3f-4620-9cf8-61a12cf72432",
      "6465fe74-6b5b-410b-9896-3f315a37bb77",
      "72f9ca8e-4920-4414-b225-beddcd494171",
      "28beda27-3b33-4034-aa6c-6e0d3ceb6fcb",
      "6d85ae9f-8487-432c-bc3e-d40fdae4a8ac"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551928878020,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "fda8206f-ec3b-441b-bcca-88d990530f66",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551928878020,
    "parent_id": "a5ee9280-35d0-4aac-89a2-decbe44f483e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Odd-Even Sort Basic Information"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928878017,
        "id": "b5920d8f-3cce-4201-b0f1-fa58deb8c53c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928878017,
        "parent_id": "fda8206f-ec3b-441b-bcca-88d990530f66",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An "
            ],
            [
              "Odd-Even Sort",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Odd%E2%80%93even_sort"
                ]
              ]
            ],
            [
              " or brick sort is a simple sorting algorithm, which is developed for use on parallel processors with local interconnection. It works by comparing all odd/even indexed pairs of adjacent elements in the list and, if a pair is in the wrong order the elements are switched. The next step repeats this for even/odd indexed pairs. Then it alternates between odd/even and even/odd steps until the list is sorted."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An "
          },
          {
            "Text": "Odd-Even Sort",
            "Link": "https://en.wikipedia.org/wiki/Odd%E2%80%93even_sort"
          },
          {
            "Text": " or brick sort is a simple sorting algorithm, which is developed for use on parallel processors with local interconnection. It works by comparing all odd/even indexed pairs of adjacent elements in the list and, if a pair is in the wrong order the elements are switched. The next step repeats this for even/odd indexed pairs. Then it alternates between odd/even and even/odd steps until the list is sorted."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928878018,
        "id": "751861d1-36b6-49e8-866a-dc50eef1a473",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928878018,
        "parent_id": "fda8206f-ec3b-441b-bcca-88d990530f66",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Pseudo code for Odd-Even Sort:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Pseudo code for Odd-Even Sort:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928878018,
        "id": "d9e3c435-5c79-47f6-b08b-bca85a260be9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928878018,
        "parent_id": "fda8206f-ec3b-441b-bcca-88d990530f66",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if n\u003e2 then\n    1. apply odd-even merge(n/2) recursively to the even subsequence a0, a2, ..., an-2 and to the odd subsequence a1, a3, , ..., an-1\n    2. comparison [i : i+1] for all i element {1, 3, 5, 7, ..., n-3}\nelse\n    comparison [0 : 1]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if n\u003e2 then\n    1. apply odd-even merge(n/2) recursively to the even subsequence a0, a2, ..., an-2 and to the odd subsequence a1, a3, , ..., an-1\n    2. comparison [i : i+1] for all i element {1, 3, 5, 7, ..., n-3}\nelse\n    comparison [0 : 1]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928878018,
        "id": "3a7add00-cee4-488a-86af-9c0ac3092f37",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928878018,
        "parent_id": "fda8206f-ec3b-441b-bcca-88d990530f66",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Wikipedia has best illustration of Odd-Even sort:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Wikipedia has best illustration of Odd-Even sort:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928878019,
        "id": "dbefcdee-d6c1-4757-a62f-67d6247051fc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928878019,
        "parent_id": "fda8206f-ec3b-441b-bcca-88d990530f66",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/6c32d763-dc3f-407f-979e-33345f647ee1/c7d0d312486885071ba81823d92cc66070cf8dd3.gif"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/6c32d763-dc3f-407f-979e-33345f647ee1/c7d0d312486885071ba81823d92cc66070cf8dd3.gif",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2F6c32d763-dc3f-407f-979e-33345f647ee1%2Fc7d0d312486885071ba81823d92cc66070cf8dd3.gif"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928878019,
        "id": "67a84e25-78f9-4bdc-a7a2-fd77eadc324f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928878019,
        "parent_id": "fda8206f-ec3b-441b-bcca-88d990530f66",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example of Odd-Even Sort:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example of Odd-Even Sort:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928878019,
        "id": "2c36118d-7b3f-4620-9cf8-61a12cf72432",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928878019,
        "parent_id": "fda8206f-ec3b-441b-bcca-88d990530f66",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/6c32d763-dc3f-407f-979e-33345f647ee1/2744d53543529cf5d5409d0ff5b123a9f98d86a5.jpg"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/6c32d763-dc3f-407f-979e-33345f647ee1/2744d53543529cf5d5409d0ff5b123a9f98d86a5.jpg",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2F6c32d763-dc3f-407f-979e-33345f647ee1%2F2744d53543529cf5d5409d0ff5b123a9f98d86a5.jpg"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928878019,
        "id": "6465fe74-6b5b-410b-9896-3f315a37bb77",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928878019,
        "parent_id": "fda8206f-ec3b-441b-bcca-88d990530f66",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Implementation:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Implementation:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928878019,
        "id": "72f9ca8e-4920-4414-b225-beddcd494171",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928878019,
        "parent_id": "fda8206f-ec3b-441b-bcca-88d990530f66",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "I used C# language to implement Odd-Even Sort Algorithm."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "I used C# language to implement Odd-Even Sort Algorithm."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928878019,
        "id": "28beda27-3b33-4034-aa6c-6e0d3ceb6fcb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928878019,
        "parent_id": "fda8206f-ec3b-441b-bcca-88d990530f66",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public class OddEvenSort\n{\n    private static void SortOddEven(int[] input, int n)\n    {\n        var sort = false;\n\n        while (!sort)\n        {\n            sort = true;\n            for (var i = 1; i \u003c n - 1; i += 2)\n            {\n                if (input[i] \u003c= input[i + 1]) continue;\n                var temp = input[i];\n                input[i] = input[i + 1];\n                input[i + 1] = temp;\n                sort = false;\n            }\n            for (var i = 0; i \u003c n - 1; i += 2)\n            {\n                if (input[i] \u003c= input[i + 1]) continue;\n                var temp = input[i];\n                input[i] = input[i + 1];\n                input[i + 1] = temp;\n                sort = false;\n            }\n        }\n    }\n\n    public static int[] Main(int[] input)\n    {\n        SortOddEven(input, input.Length);\n        return input;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public class OddEvenSort\n{\n    private static void SortOddEven(int[] input, int n)\n    {\n        var sort = false;\n\n        while (!sort)\n        {\n            sort = true;\n            for (var i = 1; i \u003c n - 1; i += 2)\n            {\n                if (input[i] \u003c= input[i + 1]) continue;\n                var temp = input[i];\n                input[i] = input[i + 1];\n                input[i + 1] = temp;\n                sort = false;\n            }\n            for (var i = 0; i \u003c n - 1; i += 2)\n            {\n                if (input[i] \u003c= input[i + 1]) continue;\n                var temp = input[i];\n                input[i] = input[i + 1];\n                input[i + 1] = temp;\n                sort = false;\n            }\n        }\n    }\n\n    public static int[] Main(int[] input)\n    {\n        SortOddEven(input, input.Length);\n        return input;\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928878020,
        "id": "6d85ae9f-8487-432c-bc3e-d40fdae4a8ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928878020,
        "parent_id": "fda8206f-ec3b-441b-bcca-88d990530f66",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Auxiliary Space:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "O(n)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "Time Complexity:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "O(n)",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Auxiliary Space:",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "O(n)",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "Time Complexity:",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "O(n)",
            "AttrFlags": 2
          }
        ]
      }
    ],
    "title": "Odd-Even Sort Basic Information",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}