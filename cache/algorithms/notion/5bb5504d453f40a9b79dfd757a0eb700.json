{
  "ID": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
  "Root": {
    "alive": true,
    "content": [
      "deb206ab-2459-4607-a690-48c16d4e876b",
      "2ab9888e-c3a8-44a7-9b2a-38dc657ef7b4",
      "fe362768-4e2f-4dd6-bf20-b9c58cb51a08",
      "11aefb6a-dc3a-4eb2-8b54-77ff649d714f",
      "54af2879-d9f2-4d32-abb4-0bb3952ef0ff",
      "bb41da6d-0be3-424e-879e-7b95cdd09078",
      "6214281d-53c8-4bca-91f3-a9b44c8df6c7",
      "9075bf06-38f6-490f-bf89-bb40bbe98281",
      "ee0f9189-fb13-4f12-bdf8-ebbc9f8ddd60",
      "e90b4310-ee14-42c1-a422-c3a2396e1dc9",
      "25244a95-9385-45e9-b3f5-a48c0087af68",
      "850e2650-673b-4c83-87f6-3e3b681feda4",
      "dc3c90b7-29c1-47c4-aa0a-aa8d26abec89",
      "6efddaca-7fa6-490b-8fa6-5cad3745ae7e",
      "468781ec-3782-4ad1-8ae4-4ef99330ad09",
      "f22eefa3-2c5c-479e-8c6b-67cadc9cf05c",
      "996f4e83-d3e2-4646-9a66-16f4f63f1d01",
      "46021b92-c33c-4cef-a807-2dfd11332007",
      "c28b9a5e-d547-4daa-9c3f-d65c0f5faf9d",
      "4bab6a89-1e6a-4580-9be5-c74ebed4260d",
      "a355078e-23bb-4034-ae1c-dd360870032a",
      "d3bac526-0a86-4ae6-9a43-37014f7e32f0",
      "88d68e5e-e9b7-49e3-8d1f-9b20b7bda3ed"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551928056861,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551928056861,
    "parent_id": "0483f45c-fa31-493e-bd1b-b9e924123210",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Knapsack Problem"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056856,
        "id": "deb206ab-2459-4607-a690-48c16d4e876b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056856,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056856,
        "id": "2ab9888e-c3a8-44a7-9b2a-38dc657ef7b4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056856,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "0-1 Knapsack",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "0-1 Knapsack",
            "AttrFlags": 5
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056858,
        "id": "fe362768-4e2f-4dd6-bf20-b9c58cb51a08",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056858,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The Knapsack Problem is a problem when given a set of items, each with a weight, a value and "
            ],
            [
              "exactly 1 copy",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", determine the which item(s) to include in a collection so that the total weight is less than or equal to a given limit and the total value is as large as possible."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The Knapsack Problem is a problem when given a set of items, each with a weight, a value and "
          },
          {
            "Text": "exactly 1 copy",
            "AttrFlags": 1
          },
          {
            "Text": ", determine the which item(s) to include in a collection so that the total weight is less than or equal to a given limit and the total value is as large as possible."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056858,
        "id": "11aefb6a-dc3a-4eb2-8b54-77ff649d714f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056858,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C++ Example:"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "C++ Example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056859,
        "id": "54af2879-d9f2-4d32-abb4-0bb3952ef0ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056859,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Implementation",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Implementation",
            "AttrFlags": 1
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056859,
        "id": "bb41da6d-0be3-424e-879e-7b95cdd09078",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056859,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int knapsack(vector\u003cint\u003e \u0026value, vector\u003cint\u003e \u0026weight, int N, int C){\n    int dp[C+1];                               \n    for (int i = 1; i \u003c= C; ++i){\n        dp[i] = -100000000;                   \n    }\n    dp[0] = 0;\n    for (int i = 0; i \u003c N; ++i){\n        for (int j = C; j \u003e= weight[i]; --j){\n            dp[j] = max(dp[j],dp[j-weight[i]]+value[i]);\n        }\n    }\n    return dp[C];\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int knapsack(vector\u003cint\u003e \u0026value, vector\u003cint\u003e \u0026weight, int N, int C){\n    int dp[C+1];                               \n    for (int i = 1; i \u003c= C; ++i){\n        dp[i] = -100000000;                   \n    }\n    dp[0] = 0;\n    for (int i = 0; i \u003c N; ++i){\n        for (int j = C; j \u003e= weight[i]; --j){\n            dp[j] = max(dp[j],dp[j-weight[i]]+value[i]);\n        }\n    }\n    return dp[C];\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056859,
        "id": "6214281d-53c8-4bca-91f3-a9b44c8df6c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056859,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Test",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Test",
            "AttrFlags": 1
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056859,
        "id": "9075bf06-38f6-490f-bf89-bb40bbe98281",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056859,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "3 5\n5 2\n2 1\n3 2"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "3 5\n5 2\n2 1\n3 2",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056859,
        "id": "ee0f9189-fb13-4f12-bdf8-ebbc9f8ddd60",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056859,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output",
            "AttrFlags": 1
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056859,
        "id": "e90b4310-ee14-42c1-a422-c3a2396e1dc9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056859,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "3"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "3",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056859,
        "id": "25244a95-9385-45e9-b3f5-a48c0087af68",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056859,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "That means the maximum value can be achieved is 3, which is achieved by choosing (2,1) and (3,2)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "That means the maximum value can be achieved is 3, which is achieved by choosing (2,1) and (3,2)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056859,
        "id": "850e2650-673b-4c83-87f6-3e3b681feda4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056859,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056860,
        "id": "dc3c90b7-29c1-47c4-aa0a-aa8d26abec89",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056860,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Unbounded Knapsack",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Unbounded Knapsack",
            "AttrFlags": 5
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056860,
        "id": "6efddaca-7fa6-490b-8fa6-5cad3745ae7e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056860,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The Unbounded Knapsack Problem is a problem which given a set of items, each with a weight, a value and "
            ],
            [
              "infinite copies",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", determine the number of each item to include in a collection so that the total weight is less than or equal to a given limit and the total value is as large as possible."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The Unbounded Knapsack Problem is a problem which given a set of items, each with a weight, a value and "
          },
          {
            "Text": "infinite copies",
            "AttrFlags": 1
          },
          {
            "Text": ", determine the number of each item to include in a collection so that the total weight is less than or equal to a given limit and the total value is as large as possible."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056860,
        "id": "468781ec-3782-4ad1-8ae4-4ef99330ad09",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056860,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Python(2.7.11) Example:"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Python(2.7.11) Example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056860,
        "id": "f22eefa3-2c5c-479e-8c6b-67cadc9cf05c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056860,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Implementation",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Implementation",
            "AttrFlags": 1
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056860,
        "id": "996f4e83-d3e2-4646-9a66-16f4f63f1d01",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056860,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def unbounded_knapsack(w, v, c): # weight, value and capactiy\n    m = [0]\n    for r in range(1, c+1):\n        val = m[r-1]\n        for i, wi in enumerate(w):\n            if wi \u003e r:\n                continue\n            val = max(val, v[i] + m[r-wi])\n        m.append(val)\n    return m[c] # return the maximum value can be achieved"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def unbounded_knapsack(w, v, c): # weight, value and capactiy\n    m = [0]\n    for r in range(1, c+1):\n        val = m[r-1]\n        for i, wi in enumerate(w):\n            if wi \u003e r:\n                continue\n            val = max(val, v[i] + m[r-wi])\n        m.append(val)\n    return m[c] # return the maximum value can be achieved",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056860,
        "id": "46021b92-c33c-4cef-a807-2dfd11332007",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056860,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The complexity of that implementation is "
            ],
            [
              "O(nC)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which n is number of items."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The complexity of that implementation is "
          },
          {
            "Text": "O(nC)",
            "AttrFlags": 2
          },
          {
            "Text": ", which n is number of items."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056860,
        "id": "c28b9a5e-d547-4daa-9c3f-d65c0f5faf9d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056860,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Test",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Test",
            "AttrFlags": 1
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056861,
        "id": "4bab6a89-1e6a-4580-9be5-c74ebed4260d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056861,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "w = [2, 3, 4, 5, 6]\nv = [2, 4, 6, 8, 9]\n\nprint unbounded_knapsack(w, v, 13)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "w = [2, 3, 4, 5, 6]\nv = [2, 4, 6, 8, 9]\n\nprint unbounded_knapsack(w, v, 13)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056861,
        "id": "a355078e-23bb-4034-ae1c-dd360870032a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056861,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output",
            "AttrFlags": 1
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056861,
        "id": "d3bac526-0a86-4ae6-9a43-37014f7e32f0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056861,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "20"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "20",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928056861,
        "id": "88d68e5e-e9b7-49e3-8d1f-9b20b7bda3ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928056861,
        "parent_id": "5bb5504d-453f-40a9-b79d-fd757a0eb700",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "That means the maximum value can be achieved is 20, which is achieved by choosing (5, 8), (5, 8) and (3, 4)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "That means the maximum value can be achieved is 20, which is achieved by choosing (5, 8), (5, 8) and (3, 4)."
          }
        ]
      }
    ],
    "title": "Knapsack Problem",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}