{
  "ID": "88b532ab-3342-40cb-831f-82184ea4f516",
  "Root": {
    "alive": true,
    "content": [
      "47b8f773-0fc2-46c2-bd6a-a393bc669b4e",
      "fceaaf54-18c5-44b2-a495-25ca55ea677f",
      "718e58ca-18f2-4142-8c48-f5291183fa37",
      "e5219236-8803-4e8e-8897-6d8fd653c39b",
      "3626b76a-43d7-4c41-8a6b-48a3e97987ac",
      "fd8783eb-7195-4ae4-a50b-19834300acf2",
      "801f806d-e059-4e08-8670-56eb3aaa95ef",
      "91301d9c-6077-4723-88ef-413a69294a10",
      "7bddc817-8385-47f9-9797-3facb1e1ee1a",
      "b802a928-01ca-48da-bf36-fe0e7438b235",
      "8dadd2fe-5150-4a78-81bb-e2514ddae601",
      "e079ff07-764f-4ee7-aacc-c177e97f813b",
      "8b257c85-db1b-41cd-a4ae-c51a9dfe62b0",
      "37d9de8b-2e01-4232-af8d-cf688fe6c3fa",
      "9630da0e-5ad9-4014-990f-052c644ad19c",
      "9e91489c-7fce-4f91-9d83-dba81144a20c",
      "5174a81f-cf3b-4b50-b907-ec3860a9fe88",
      "f4340284-5b13-4272-8d41-9a35c7bc66b3",
      "925ed37f-c92b-4589-b655-38330d199ec6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550391298115,
    "id": "88b532ab-3342-40cb-831f-82184ea4f516",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550473620000,
    "parent_id": "9638add4-a0c9-4d65-a501-54f781282862",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Code profiling"
        ]
      ]
    },
    "type": "page",
    "version": 6,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391298108,
        "id": "47b8f773-0fc2-46c2-bd6a-a393bc669b4e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391298108,
        "parent_id": "88b532ab-3342-40cb-831f-82184ea4f516",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "First and foremost you should be able to find the bottleneck of your script and note that no optimization can compensate for a poor choice in data structure or a flaw in your algorithm design. Secondly do not try to optimize too early in your coding process at the expense of readability/design/quality. Donald Knuth made the following statement on optimization:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "First and foremost you should be able to find the bottleneck of your script and note that no optimization can compensate for a poor choice in data structure or a flaw in your algorithm design. Secondly do not try to optimize too early in your coding process at the expense of readability/design/quality. Donald Knuth made the following statement on optimization:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391298111,
        "id": "fceaaf54-18c5-44b2-a495-25ca55ea677f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391298111,
        "parent_id": "88b532ab-3342-40cb-831f-82184ea4f516",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "“We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil. Yet we should not pass up our opportunities in that critical 3%”"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "“We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil. Yet we should not pass up our opportunities in that critical 3%”"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391298112,
        "id": "718e58ca-18f2-4142-8c48-f5291183fa37",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391298112,
        "parent_id": "88b532ab-3342-40cb-831f-82184ea4f516",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To profile your code you have several tools: "
            ],
            [
              "cProfile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (or the slower "
            ],
            [
              "profile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") from the standard library, "
            ],
            [
              "line_profiler",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "timeit",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Each of them serve a different purpose."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To profile your code you have several tools: "
          },
          {
            "Text": "cProfile",
            "AttrFlags": 2
          },
          {
            "Text": " (or the slower "
          },
          {
            "Text": "profile",
            "AttrFlags": 2
          },
          {
            "Text": ") from the standard library, "
          },
          {
            "Text": "line_profiler",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "timeit",
            "AttrFlags": 2
          },
          {
            "Text": ". Each of them serve a different purpose."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391298113,
        "id": "e5219236-8803-4e8e-8897-6d8fd653c39b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391298113,
        "parent_id": "88b532ab-3342-40cb-831f-82184ea4f516",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "cProfile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a determistic profiler: function call, function return, and exception events are monitored, and precise timings are made for the intervals between these events (up to 0.001s). The library documentation ("
            ],
            [
              "https://docs.python.org/2/library/profile.html",
              [
                [
                  "a",
                  "https://github.com/rkern/line_profiler"
                ]
              ]
            ],
            [
              ") provides us with a simple use case"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "cProfile",
            "AttrFlags": 2
          },
          {
            "Text": " is a determistic profiler: function call, function return, and exception events are monitored, and precise timings are made for the intervals between these events (up to 0.001s). The library documentation ("
          },
          {
            "Text": "https://docs.python.org/2/library/profile.html",
            "Link": "https://github.com/rkern/line_profiler"
          },
          {
            "Text": ") provides us with a simple use case"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391298113,
        "id": "3626b76a-43d7-4c41-8a6b-48a3e97987ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391298113,
        "parent_id": "88b532ab-3342-40cb-831f-82184ea4f516",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import cProfile\ndef f(x):\n    return \"42!\"\ncProfile.run('f(12)')"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import cProfile\ndef f(x):\n    return \"42!\"\ncProfile.run('f(12)')",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391298114,
        "id": "fd8783eb-7195-4ae4-a50b-19834300acf2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391298114,
        "parent_id": "88b532ab-3342-40cb-831f-82184ea4f516",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Or if you prefer to wrap parts of your existing code:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Or if you prefer to wrap parts of your existing code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391298114,
        "id": "801f806d-e059-4e08-8670-56eb3aaa95ef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391298114,
        "parent_id": "88b532ab-3342-40cb-831f-82184ea4f516",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import cProfile, pstats, StringIO\npr = cProfile.Profile()\npr.enable()\n# ... do something ...\n# ... long ...\npr.disable()\nsortby = 'cumulative'\nps = pstats.Stats(pr, stream=s).sort_stats(sortby)\nps.print_stats()\nprint s.getvalue()"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import cProfile, pstats, StringIO\npr = cProfile.Profile()\npr.enable()\n# ... do something ...\n# ... long ...\npr.disable()\nsortby = 'cumulative'\nps = pstats.Stats(pr, stream=s).sort_stats(sortby)\nps.print_stats()\nprint s.getvalue()",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391298114,
        "id": "91301d9c-6077-4723-88ef-413a69294a10",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391298114,
        "parent_id": "88b532ab-3342-40cb-831f-82184ea4f516",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This will create outputs looking like the table below, where you can quickly see where your program spends most of its time and identify the functions to optimize."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This will create outputs looking like the table below, where you can quickly see where your program spends most of its time and identify the functions to optimize."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391298114,
        "id": "7bddc817-8385-47f9-9797-3facb1e1ee1a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391298114,
        "parent_id": "88b532ab-3342-40cb-831f-82184ea4f516",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "3 function calls in 0.000 seconds\n\nOrdered by: standard name\nncalls  tottime  percall  cumtime  percall filename:lineno(function)\n1    0.000    0.000    0.000    0.000 \u003cstdin\u003e:1(f)\n1    0.000    0.000    0.000    0.000 \u003cstring\u003e:1(\u003cmodule\u003e)\n1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "3 function calls in 0.000 seconds\n\nOrdered by: standard name\nncalls  tottime  percall  cumtime  percall filename:lineno(function)\n1    0.000    0.000    0.000    0.000 \u003cstdin\u003e:1(f)\n1    0.000    0.000    0.000    0.000 \u003cstring\u003e:1(\u003cmodule\u003e)\n1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391298114,
        "id": "b802a928-01ca-48da-bf36-fe0e7438b235",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391298114,
        "parent_id": "88b532ab-3342-40cb-831f-82184ea4f516",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The module "
            ],
            [
              "line_profiler",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " ("
            ],
            [
              "https://github.com/rkern/line_profiler",
              [
                [
                  "a",
                  "https://github.com/rkern/line_profiler"
                ]
              ]
            ],
            [
              ") is useful to have a line by line analysis of your code. This is obviously not manageable for long scripts but is aimed at snippets. See the documentation for more details. The easiest way to get started is to use the kernprof script as explained one the package page, note that you will need to specify manually the function(s) to profile."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The module "
          },
          {
            "Text": "line_profiler",
            "AttrFlags": 2
          },
          {
            "Text": " ("
          },
          {
            "Text": "https://github.com/rkern/line_profiler",
            "Link": "https://github.com/rkern/line_profiler"
          },
          {
            "Text": ") is useful to have a line by line analysis of your code. This is obviously not manageable for long scripts but is aimed at snippets. See the documentation for more details. The easiest way to get started is to use the kernprof script as explained one the package page, note that you will need to specify manually the function(s) to profile."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391298114,
        "id": "8dadd2fe-5150-4a78-81bb-e2514ddae601",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391298114,
        "parent_id": "88b532ab-3342-40cb-831f-82184ea4f516",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$ kernprof -l script_to_profile.py"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$ kernprof -l script_to_profile.py",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391298115,
        "id": "e079ff07-764f-4ee7-aacc-c177e97f813b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391298115,
        "parent_id": "88b532ab-3342-40cb-831f-82184ea4f516",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "kernprof will create an instance of LineProfiler and insert it into the "
            ],
            [
              "__builtins__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " namespace with the name profile. It has been written to be used as a decorator, so in your script, you decorate the functions you want to profile with "
            ],
            [
              "@profile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "kernprof will create an instance of LineProfiler and insert it into the "
          },
          {
            "Text": "__builtins__",
            "AttrFlags": 2
          },
          {
            "Text": " namespace with the name profile. It has been written to be used as a decorator, so in your script, you decorate the functions you want to profile with "
          },
          {
            "Text": "@profile",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391298115,
        "id": "8b257c85-db1b-41cd-a4ae-c51a9dfe62b0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391298115,
        "parent_id": "88b532ab-3342-40cb-831f-82184ea4f516",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@profile\ndef slow_function(a, b, c):\n    ..."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@profile\ndef slow_function(a, b, c):\n    ...",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391298115,
        "id": "37d9de8b-2e01-4232-af8d-cf688fe6c3fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391298115,
        "parent_id": "88b532ab-3342-40cb-831f-82184ea4f516",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The default behavior of kernprof is to put the results into a binary file "
            ],
            [
              "script_to_profile.py.lprof",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " . You can tell kernprof to immediately view the formatted results at the terminal with the [-v/–view] option. Otherwise, you can view the results later like so:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The default behavior of kernprof is to put the results into a binary file "
          },
          {
            "Text": "script_to_profile.py.lprof",
            "AttrFlags": 2
          },
          {
            "Text": " . You can tell kernprof to immediately view the formatted results at the terminal with the [-v/–view] option. Otherwise, you can view the results later like so:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391298115,
        "id": "9630da0e-5ad9-4014-990f-052c644ad19c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391298115,
        "parent_id": "88b532ab-3342-40cb-831f-82184ea4f516",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$ python -m line_profiler script_to_profile.py.lprof"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$ python -m line_profiler script_to_profile.py.lprof",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391298115,
        "id": "9e91489c-7fce-4f91-9d83-dba81144a20c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391298115,
        "parent_id": "88b532ab-3342-40cb-831f-82184ea4f516",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finally "
            ],
            [
              "timeit",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " provides a simple way to test one liners or small expression both from the command line and the python shell. This module will answer question such as, is it faster to do a list comprehension or use the built-in "
            ],
            [
              "list()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when transforming a set into a list. Look for the "
            ],
            [
              "setup",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword or "
            ],
            [
              "-s",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " option to add setup code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finally "
          },
          {
            "Text": "timeit",
            "AttrFlags": 2
          },
          {
            "Text": " provides a simple way to test one liners or small expression both from the command line and the python shell. This module will answer question such as, is it faster to do a list comprehension or use the built-in "
          },
          {
            "Text": "list()",
            "AttrFlags": 2
          },
          {
            "Text": " when transforming a set into a list. Look for the "
          },
          {
            "Text": "setup",
            "AttrFlags": 2
          },
          {
            "Text": " keyword or "
          },
          {
            "Text": "-s",
            "AttrFlags": 2
          },
          {
            "Text": " option to add setup code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391298115,
        "id": "5174a81f-cf3b-4b50-b907-ec3860a9fe88",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391298115,
        "parent_id": "88b532ab-3342-40cb-831f-82184ea4f516",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e import timeit\n\u003e\u003e\u003e timeit.timeit('\"-\".join(str(n) for n in range(100))', number=10000)\n0.8187260627746582"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003e\u003e\u003e import timeit\n\u003e\u003e\u003e timeit.timeit('\"-\".join(str(n) for n in range(100))', number=10000)\n0.8187260627746582",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391298115,
        "id": "f4340284-5b13-4272-8d41-9a35c7bc66b3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391298115,
        "parent_id": "88b532ab-3342-40cb-831f-82184ea4f516",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "from a terminal"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "from a terminal"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391298115,
        "id": "925ed37f-c92b-4589-b655-38330d199ec6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391298115,
        "parent_id": "88b532ab-3342-40cb-831f-82184ea4f516",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$ python -m timeit '\"-\".join(str(n) for n in range(100))'\n10000 loops, best of 3: 40.3 usec per loop"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$ python -m timeit '\"-\".join(str(n) for n in range(100))'\n10000 loops, best of 3: 40.3 usec per loop",
        "code_language": "Plain Text"
      }
    ],
    "title": "Code profiling"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}