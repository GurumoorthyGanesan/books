{
  "ID": "592ef9b7-50ad-445a-a050-aec000bf0b0e",
  "Root": {
    "alive": true,
    "content": [
      "405237c5-a6b0-46fc-8b3f-b780e2cc06be",
      "3cf694b6-43ab-4e2c-b4bc-5eb6123517bc"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550389942292,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "592ef9b7-50ad-445a-a050-aec000bf0b0e",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550470560000,
    "parent_id": "927b026f-81fd-4293-9892-e5bf7326d371",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Turtle example"
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389942289,
        "id": "405237c5-a6b0-46fc-8b3f-b780e2cc06be",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389942289,
        "parent_id": "592ef9b7-50ad-445a-a050-aec000bf0b0e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following is an example of using an user-defined function to be called multiple(∞) times in a script with ease."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following is an example of using an user-defined function to be called multiple(∞) times in a script with ease."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389942292,
        "id": "3cf694b6-43ab-4e2c-b4bc-5eb6123517bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389942292,
        "parent_id": "592ef9b7-50ad-445a-a050-aec000bf0b0e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import turtle, time, random #tell python we need 3 different modules\nturtle.speed(0) #set draw speed to the fastest \nturtle.colormode(255) #special colormode\nturtle.pensize(4) #size of the lines that will be drawn\ndef triangle(size): #This is our own function, in the parenthesis is a variable we have defined that will be used in THIS FUNCTION ONLY. This fucntion creates a right triangle\n    turtle.forward(size) #to begin this function we go forward, the amount to go forward by is the variable size\n    turtle.right(90) #turn right by 90 degree\n    turtle.forward(size) #go forward, again with variable\n    turtle.right(135) #turn right again\n    turtle.forward(size * 1.5) #close the triangle. thanks to the Pythagorean theorem we know that this line must be 1.5 times longer than the other two(if they are equal)\nwhile(1): #INFINITE LOOP\n    turtle.setpos(random.randint(-200, 200), random.randint(-200, 200)) #set the draw point to a random (x,y) position\n    turtle.pencolor(random.randint(1, 255), random.randint(1, 255), random.randint(1, 255)) #randomize the RGB color\n    triangle(random.randint(5, 55)) #use our function, because it has only one variable we can simply put a value in the parenthesis. The value that will be sent will be random between 5 - 55, end the end it really just changes ow big the triangle is.\n    turtle.pencolor(random.randint(1, 255), random.randint(1, 255), random.randint(1, 255)) #randomize color again"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import turtle, time, random #tell python we need 3 different modules\nturtle.speed(0) #set draw speed to the fastest \nturtle.colormode(255) #special colormode\nturtle.pensize(4) #size of the lines that will be drawn\ndef triangle(size): #This is our own function, in the parenthesis is a variable we have defined that will be used in THIS FUNCTION ONLY. This fucntion creates a right triangle\n    turtle.forward(size) #to begin this function we go forward, the amount to go forward by is the variable size\n    turtle.right(90) #turn right by 90 degree\n    turtle.forward(size) #go forward, again with variable\n    turtle.right(135) #turn right again\n    turtle.forward(size * 1.5) #close the triangle. thanks to the Pythagorean theorem we know that this line must be 1.5 times longer than the other two(if they are equal)\nwhile(1): #INFINITE LOOP\n    turtle.setpos(random.randint(-200, 200), random.randint(-200, 200)) #set the draw point to a random (x,y) position\n    turtle.pencolor(random.randint(1, 255), random.randint(1, 255), random.randint(1, 255)) #randomize the RGB color\n    triangle(random.randint(5, 55)) #use our function, because it has only one variable we can simply put a value in the parenthesis. The value that will be sent will be random between 5 - 55, end the end it really just changes ow big the triangle is.\n    turtle.pencolor(random.randint(1, 255), random.randint(1, 255), random.randint(1, 255)) #randomize color again",
        "code_language": "Plain Text"
      }
    ],
    "title": "Turtle example",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}