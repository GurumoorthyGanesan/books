{
  "ID": "75294c8c-c99a-4f49-912e-1256ccc38e92",
  "Root": {
    "alive": true,
    "content": [
      "72eefb0e-1dc5-4d7a-b43e-e9913926f752",
      "3b69b901-3fdd-4336-9d7d-2d975069d507",
      "58d77a1a-ecc3-4bf5-be50-3261b13676ba",
      "99df2bad-0f9f-4fe9-8181-ebdb0bd941ea",
      "2336a6e2-3814-45b0-8f86-30dd37f712cd",
      "3f52146d-aa83-4cf6-b31a-e9d5ef63f207",
      "5dee316d-3b33-446b-9cb9-11940425c0de",
      "c6f3d797-02e3-4730-8d1c-7e8e49a90530",
      "868f9e37-4f08-48cf-aef6-0436d0e5410d",
      "6e4c83c1-6ca9-465e-8985-943c2eada43c",
      "6f11833f-f8f5-45f5-bc34-e564fd7e9ee6",
      "efb84515-456a-4002-8b57-7294c92981c1"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550350068451,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "75294c8c-c99a-4f49-912e-1256ccc38e92",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550350140000,
    "parent_id": "2f958caa-d35e-4318-8653-1bc5b9dd8d29",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Context Managers with Statement"
        ]
      ]
    },
    "type": "page",
    "version": 22,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350068448,
        "id": "72eefb0e-1dc5-4d7a-b43e-e9913926f752",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350068448,
        "parent_id": "75294c8c-c99a-4f49-912e-1256ccc38e92",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350068448,
        "id": "3b69b901-3fdd-4336-9d7d-2d975069d507",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350068448,
        "parent_id": "75294c8c-c99a-4f49-912e-1256ccc38e92",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "While Python’s context managers are widely used, few understand the purpose behind their use. These statements, commonly used with reading and writing files, assist the application in conserving system memory and improve resource management by ensuring specific resources are only in use for certain processes. This topic explains and demonstrates the use of Python’s context managers."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "While Python’s context managers are widely used, few understand the purpose behind their use. These statements, commonly used with reading and writing files, assist the application in conserving system memory and improve resource management by ensuring specific resources are only in use for certain processes. This topic explains and demonstrates the use of Python’s context managers."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350068448,
        "id": "58d77a1a-ecc3-4bf5-be50-3261b13676ba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350068448,
        "parent_id": "75294c8c-c99a-4f49-912e-1256ccc38e92",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Syntax"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Syntax"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350068449,
        "id": "99df2bad-0f9f-4fe9-8181-ebdb0bd941ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350140000,
        "parent_id": "75294c8c-c99a-4f49-912e-1256ccc38e92",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "with “context_manager”( as “alias”)(, “context_manager”( as “alias”)?)*:",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 3,
        "inline_content": [
          {
            "Text": "with “context_manager”( as “alias”)(, “context_manager”( as “alias”)?)*:",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350068449,
        "id": "2336a6e2-3814-45b0-8f86-30dd37f712cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350068449,
        "parent_id": "75294c8c-c99a-4f49-912e-1256ccc38e92",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350068450,
        "id": "3f52146d-aa83-4cf6-b31a-e9d5ef63f207",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350068450,
        "parent_id": "75294c8c-c99a-4f49-912e-1256ccc38e92",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Context managers are defined in "
            ],
            [
              "PEP 343",
              [
                [
                  "a",
                  "https://www.python.org/dev/peps/pep-0343"
                ]
              ]
            ],
            [
              ". They are intended to be used as more succinct mechanism for resource management than "
            ],
            [
              "try ... finally",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " constructs. The formal definition is as follows."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Context managers are defined in "
          },
          {
            "Text": "PEP 343",
            "Link": "https://www.python.org/dev/peps/pep-0343"
          },
          {
            "Text": ". They are intended to be used as more succinct mechanism for resource management than "
          },
          {
            "Text": "try ... finally",
            "AttrFlags": 2
          },
          {
            "Text": " constructs. The formal definition is as follows."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350068451,
        "id": "5dee316d-3b33-446b-9cb9-11940425c0de",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350068451,
        "parent_id": "75294c8c-c99a-4f49-912e-1256ccc38e92",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this PEP, context managers provide __enter__() and __exit__() methods that are invoked on entry to and exit from the body of the with statement."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this PEP, context managers provide __enter__() and __exit__() methods that are invoked on entry to and exit from the body of the with statement."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350068451,
        "id": "c6f3d797-02e3-4730-8d1c-7e8e49a90530",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350068451,
        "parent_id": "75294c8c-c99a-4f49-912e-1256ccc38e92",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It then goes on to define the "
            ],
            [
              "with",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement as follows."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It then goes on to define the "
          },
          {
            "Text": "with",
            "AttrFlags": 2
          },
          {
            "Text": " statement as follows."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350136112,
        "id": "868f9e37-4f08-48cf-aef6-0436d0e5410d",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350140000,
        "parent_id": "75294c8c-c99a-4f49-912e-1256ccc38e92",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "with EXPR as VAR:\n    BLOCK"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "with EXPR as VAR:\n    BLOCK",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350140000,
        "id": "6e4c83c1-6ca9-465e-8985-943c2eada43c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350140000,
        "parent_id": "75294c8c-c99a-4f49-912e-1256ccc38e92",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The translation of the above statement is:"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "The translation of the above statement is:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350152549,
        "id": "6f11833f-f8f5-45f5-bc34-e564fd7e9ee6",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350140000,
        "parent_id": "75294c8c-c99a-4f49-912e-1256ccc38e92",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "mgr = (EXPR)\nexit = type(mgr).__exit__  # Not calling it yet\nvalue = type(mgr).__enter__(mgr)\nexc = True\ntry:\n   try:\n       VAR = value  # Only if \"as VAR\" is present\n       BLOCK\n   except:\n       # The exceptional case is handled here\n       exc = False\n       if not exit(mgr, *sys.exc_info()):\n           raise\n       # The exception is swallowed if exit() returns true\nfinally:\n   # The normal and non-local-goto cases are handled here\n   if exc:\n       exit(mgr, None, None, None)"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "mgr = (EXPR)\nexit = type(mgr).__exit__  # Not calling it yet\nvalue = type(mgr).__enter__(mgr)\nexc = True\ntry:\n   try:\n       VAR = value  # Only if \"as VAR\" is present\n       BLOCK\n   except:\n       # The exceptional case is handled here\n       exc = False\n       if not exit(mgr, *sys.exc_info()):\n           raise\n       # The exception is swallowed if exit() returns true\nfinally:\n   # The normal and non-local-goto cases are handled here\n   if exc:\n       exit(mgr, None, None, None)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350140000,
        "id": "efb84515-456a-4002-8b57-7294c92981c1",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350140000,
        "parent_id": "75294c8c-c99a-4f49-912e-1256ccc38e92",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "Context Managers with Statement",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}