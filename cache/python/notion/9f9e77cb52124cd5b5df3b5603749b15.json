{
  "ID": "9f9e77cb-5212-4cd5-b5df-3b5603749b15",
  "Root": {
    "alive": true,
    "content": [
      "2439aee4-b7f9-4165-9a9c-ce7bf29b1ed8",
      "6d9e1867-7a0a-4c36-b39d-9cdafba43e31",
      "9ca15c43-13cc-4d60-a60d-cb4091364995"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550392518968,
    "id": "9f9e77cb-5212-4cd5-b5df-3b5603749b15",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550475600000,
    "parent_id": "4bc3ba38-2f91-455b-9146-7b9ec3c23c41",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Running a Flask web application as a service"
        ]
      ]
    },
    "type": "page",
    "version": 6,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392518965,
        "id": "2439aee4-b7f9-4165-9a9c-ce7bf29b1ed8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392518965,
        "parent_id": "9f9e77cb-5212-4cd5-b5df-3b5603749b15",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is a variation on the generic example. You just need to import your app script and invoke it’s "
            ],
            [
              "run()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method in the service’s "
            ],
            [
              "main()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function. In this case we’re also using the multiprocessing module due to an issue accessing "
            ],
            [
              "WSGIRequestHandler",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is a variation on the generic example. You just need to import your app script and invoke it’s "
          },
          {
            "Text": "run()",
            "AttrFlags": 2
          },
          {
            "Text": " method in the service’s "
          },
          {
            "Text": "main()",
            "AttrFlags": 2
          },
          {
            "Text": " function. In this case we’re also using the multiprocessing module due to an issue accessing "
          },
          {
            "Text": "WSGIRequestHandler",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392518968,
        "id": "6d9e1867-7a0a-4c36-b39d-9cdafba43e31",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475600000,
        "parent_id": "9f9e77cb-5212-4cd5-b5df-3b5603749b15",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "import win32serviceutil\nimport win32service\nimport win32event\nimport servicemanager\nfrom multiprocessing import Process\n\nfrom app import app\n\n\nclass Service(win32serviceutil.ServiceFramework):\n    _svc_name_ = \"TestService\"\n    _svc_display_name_ = \"Test Service\"\n    _svc_description_ = \"Tests Python service framework by receiving and echoing messages over a named pipe\"\n\n    def __init__(self, *args):\n        super().__init__(*args)\n\n    def SvcStop(self):\n        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)\n        self.process.terminate()\n        self.ReportServiceStatus(win32service.SERVICE_STOPPED)\n\n    def SvcDoRun(self):\n        self.process = Process(target=self.main)\n        self.process.start()\n        self.process.run()\n\n    def main(self):\n        app.run()\n\n\nif __name__ == '__main__':\n    win32serviceutil.HandleCommandLine(Service)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "import win32serviceutil\nimport win32service\nimport win32event\nimport servicemanager\nfrom multiprocessing import Process\n\nfrom app import app\n\n\nclass Service(win32serviceutil.ServiceFramework):\n    _svc_name_ = \"TestService\"\n    _svc_display_name_ = \"Test Service\"\n    _svc_description_ = \"Tests Python service framework by receiving and echoing messages over a named pipe\"\n\n    def __init__(self, *args):\n        super().__init__(*args)\n\n    def SvcStop(self):\n        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)\n        self.process.terminate()\n        self.ReportServiceStatus(win32service.SERVICE_STOPPED)\n\n    def SvcDoRun(self):\n        self.process = Process(target=self.main)\n        self.process.start()\n        self.process.run()\n\n    def main(self):\n        app.run()\n\n\nif __name__ == '__main__':\n    win32serviceutil.HandleCommandLine(Service)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392518968,
        "id": "9ca15c43-13cc-4d60-a60d-cb4091364995",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392518968,
        "parent_id": "9f9e77cb-5212-4cd5-b5df-3b5603749b15",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Adapted from http://stackoverflow.com/a/25130524/318488"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Adapted from http://stackoverflow.com/a/25130524/318488"
          }
        ]
      }
    ],
    "title": "Running a Flask web application as a service"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}