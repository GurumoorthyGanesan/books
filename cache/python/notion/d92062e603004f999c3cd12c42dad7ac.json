{
  "ID": "d92062e6-0300-4f99-9c3c-d12c42dad7ac",
  "Root": {
    "alive": true,
    "content": [
      "6e00a7fa-bf1b-4638-a0d4-a3126b4b0808",
      "55108fe6-689f-472d-887e-c6df8736612c",
      "e5e9c3aa-e06a-452c-8c2a-581b88af31d8",
      "2e3769a1-d566-4907-8179-90233e6ae239",
      "878084c9-8c3f-4987-99fa-bb3ee49fb5d9",
      "ecd9a5bb-fc83-4aa2-8938-7deed8144e80",
      "08abfd49-9287-43a0-a4c5-c72647f3e8db"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550389261325,
    "id": "d92062e6-0300-4f99-9c3c-d12c42dad7ac",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550469420000,
    "parent_id": "6f02e2b4-2630-4916-8284-461d35c0ceba",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Forcefully deallocating objects"
        ]
      ]
    },
    "type": "page",
    "version": 6,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389261323,
        "id": "6e00a7fa-bf1b-4638-a0d4-a3126b4b0808",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389261323,
        "parent_id": "d92062e6-0300-4f99-9c3c-d12c42dad7ac",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can force deallocate objects even if their refcount isn’t 0 in both Python 2 and 3."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can force deallocate objects even if their refcount isn’t 0 in both Python 2 and 3."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389261324,
        "id": "55108fe6-689f-472d-887e-c6df8736612c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389261324,
        "parent_id": "d92062e6-0300-4f99-9c3c-d12c42dad7ac",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Both versions use the "
            ],
            [
              "ctypes",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " module to do so."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Both versions use the "
          },
          {
            "Text": "ctypes",
            "AttrFlags": 2
          },
          {
            "Text": " module to do so."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389261324,
        "id": "e5e9c3aa-e06a-452c-8c2a-581b88af31d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389261324,
        "parent_id": "d92062e6-0300-4f99-9c3c-d12c42dad7ac",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "WARNING:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " doing this "
            ],
            [
              "will",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " leave your Python environment unstable and prone to crashing without a traceback! Using this method could also introduce security problems (quite unlikely) Only deallocate objects you’re sure you’ll never reference again. Ever."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "WARNING:",
            "AttrFlags": 1
          },
          {
            "Text": " doing this "
          },
          {
            "Text": "will",
            "AttrFlags": 4
          },
          {
            "Text": " leave your Python environment unstable and prone to crashing without a traceback! Using this method could also introduce security problems (quite unlikely) Only deallocate objects you’re sure you’ll never reference again. Ever."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389261324,
        "id": "2e3769a1-d566-4907-8179-90233e6ae239",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389261324,
        "parent_id": "d92062e6-0300-4f99-9c3c-d12c42dad7ac",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import ctypes\ndeallocated = 12345\nctypes.pythonapi._Py_Dealloc(ctypes.py_object(deallocated))"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import ctypes\ndeallocated = 12345\nctypes.pythonapi._Py_Dealloc(ctypes.py_object(deallocated))",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389261324,
        "id": "878084c9-8c3f-4987-99fa-bb3ee49fb5d9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389261324,
        "parent_id": "d92062e6-0300-4f99-9c3c-d12c42dad7ac",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import ctypes, sys\ndeallocated = 12345\n(ctypes.c_char * sys.getsizeof(deallocated)).from_address(id(deallocated))[:4] = '\\x00' * 4"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import ctypes, sys\ndeallocated = 12345\n(ctypes.c_char * sys.getsizeof(deallocated)).from_address(id(deallocated))[:4] = '\\x00' * 4",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389261324,
        "id": "ecd9a5bb-fc83-4aa2-8938-7deed8144e80",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389261324,
        "parent_id": "d92062e6-0300-4f99-9c3c-d12c42dad7ac",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "After running, any reference to the now deallocated object will cause Python to either produce undefined behavior or crash - without a traceback. There was probably a reason why the garbage collector didn’t remove that object…"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "After running, any reference to the now deallocated object will cause Python to either produce undefined behavior or crash - without a traceback. There was probably a reason why the garbage collector didn’t remove that object…"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389261325,
        "id": "08abfd49-9287-43a0-a4c5-c72647f3e8db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389261325,
        "parent_id": "d92062e6-0300-4f99-9c3c-d12c42dad7ac",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you deallocate "
            ],
            [
              "None",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", you get a special message - "
            ],
            [
              "Fatal Python error: deallocating None",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " before crashing."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you deallocate "
          },
          {
            "Text": "None",
            "AttrFlags": 2
          },
          {
            "Text": ", you get a special message - "
          },
          {
            "Text": "Fatal Python error: deallocating None",
            "AttrFlags": 2
          },
          {
            "Text": " before crashing."
          }
        ]
      }
    ],
    "title": "Forcefully deallocating objects"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}