{
  "ID": "8a62a75b-c146-43b1-8689-0255f8c17c74",
  "Root": {
    "alive": true,
    "content": [
      "94f08f42-8d09-4b2a-b2ed-e3fc411b646f",
      "caaa23c5-9161-402b-a36c-c1958c657136",
      "5959b361-fe5e-423d-9a22-d0a1a609f2d1",
      "ea1a73d1-b52f-40f6-809e-0ed50b3c7bed",
      "d2c9dd0b-2b82-41e9-9e12-67169fdc807e",
      "aaf130c9-785a-4d42-9f3f-e9d238d20bd6",
      "1b7793e2-8561-4a34-ae21-81e2769483f1"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550354226046,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "8a62a75b-c146-43b1-8689-0255f8c17c74",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550354280000,
    "parent_id": "ead7b4b8-21f1-44cb-985a-91d4177083c6",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Creating a TCP server"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354226042,
        "id": "94f08f42-8d09-4b2a-b2ed-e3fc411b646f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354226042,
        "parent_id": "8a62a75b-c146-43b1-8689-0255f8c17c74",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can create a TCP server using the "
            ],
            [
              "socketserver",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " library. Here’s a simple echo server."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can create a TCP server using the "
          },
          {
            "Text": "socketserver",
            "AttrFlags": 2
          },
          {
            "Text": " library. Here’s a simple echo server."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354226045,
        "id": "caaa23c5-9161-402b-a36c-c1958c657136",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354226045,
        "parent_id": "8a62a75b-c146-43b1-8689-0255f8c17c74",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Server side"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Server side"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354226045,
        "id": "5959b361-fe5e-423d-9a22-d0a1a609f2d1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354280000,
        "parent_id": "8a62a75b-c146-43b1-8689-0255f8c17c74",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "from sockerserver import BaseRequestHandler, TCPServer\n\nclass EchoHandler(BaseRequestHandler):\n    def handle(self):\n        print('connection from:', self.client_address)\n        while True:\n            msg = self.request.recv(8192)\n            if not msg:\n                break\n            self.request.send(msg)\n\nif __name__ == '__main__':\n    server = TCPServer(('', 5000), EchoHandler)\n    server.serve_forever()"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "from sockerserver import BaseRequestHandler, TCPServer\n\nclass EchoHandler(BaseRequestHandler):\n    def handle(self):\n        print('connection from:', self.client_address)\n        while True:\n            msg = self.request.recv(8192)\n            if not msg:\n                break\n            self.request.send(msg)\n\nif __name__ == '__main__':\n    server = TCPServer(('', 5000), EchoHandler)\n    server.serve_forever()",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354226046,
        "id": "ea1a73d1-b52f-40f6-809e-0ed50b3c7bed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354226046,
        "parent_id": "8a62a75b-c146-43b1-8689-0255f8c17c74",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Client side"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Client side"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354226046,
        "id": "d2c9dd0b-2b82-41e9-9e12-67169fdc807e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354280000,
        "parent_id": "8a62a75b-c146-43b1-8689-0255f8c17c74",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "from socket import socket, AF_INET, SOCK_STREAM\nsock = socket(AF_INET, SOCK_STREAM)\nsock.connect(('localhost', 5000))\nsock.send(b'Monty Python')\nsock.recv(8192)  # returns b'Monty Python'"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "from socket import socket, AF_INET, SOCK_STREAM\nsock = socket(AF_INET, SOCK_STREAM)\nsock.connect(('localhost', 5000))\nsock.send(b'Monty Python')\nsock.recv(8192)  # returns b'Monty Python'",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354226046,
        "id": "aaf130c9-785a-4d42-9f3f-e9d238d20bd6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354226046,
        "parent_id": "8a62a75b-c146-43b1-8689-0255f8c17c74",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "socketserver",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " makes it relatively easy to create simple TCP servers. However, you should be aware that, by default, the servers are single threaded and can only serve one client at a time. If you want to handle multiple clients, either instantiate a "
            ],
            [
              "ThreadingTCPServer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instead."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "socketserver",
            "AttrFlags": 2
          },
          {
            "Text": " makes it relatively easy to create simple TCP servers. However, you should be aware that, by default, the servers are single threaded and can only serve one client at a time. If you want to handle multiple clients, either instantiate a "
          },
          {
            "Text": "ThreadingTCPServer",
            "AttrFlags": 2
          },
          {
            "Text": " instead."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354226046,
        "id": "1b7793e2-8561-4a34-ae21-81e2769483f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354280000,
        "parent_id": "8a62a75b-c146-43b1-8689-0255f8c17c74",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "from socketserver import ThreadingTCPServer\n...\nif __name__ == '__main__':\n    server = ThreadingTCPServer(('', 5000), EchoHandler)\n    server.serve_forever()"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "from socketserver import ThreadingTCPServer\n...\nif __name__ == '__main__':\n    server = ThreadingTCPServer(('', 5000), EchoHandler)\n    server.serve_forever()",
        "code_language": "Python"
      }
    ],
    "title": "Creating a TCP server",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}