{
  "ID": "a5216a39-71bb-4763-8ef2-4d4d5a4dc6dd",
  "Root": {
    "alive": true,
    "content": [
      "4c4eec31-11bc-467c-ae45-b3f8a0cf38f5",
      "d6f649a1-6c99-43f1-95e1-ca03da62021d",
      "4b9f1241-c380-48ae-9279-e28ec1c99068",
      "821a222a-8e67-484e-ab0d-80c8510ace9f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550301004513,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "a5216a39-71bb-4763-8ef2-4d4d5a4dc6dd",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550301180000,
    "parent_id": "19bec823-bee1-4db8-aae7-3c94b3289eb2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Equal To"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301004509,
        "id": "4c4eec31-11bc-467c-ae45-b3f8a0cf38f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550301180000,
        "parent_id": "a5216a39-71bb-4763-8ef2-4d4d5a4dc6dd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "x == y"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "x == y",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301004512,
        "id": "d6f649a1-6c99-43f1-95e1-ca03da62021d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550301004512,
        "parent_id": "a5216a39-71bb-4763-8ef2-4d4d5a4dc6dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This expression evaluates if "
            ],
            [
              "x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "y",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are the same value and returns the result as a boolean value. Generally both type and value need to match, so the int "
            ],
            [
              "12",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not the same as the string "
            ],
            [
              "'12'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This expression evaluates if "
          },
          {
            "Text": "x",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "y",
            "AttrFlags": 2
          },
          {
            "Text": " are the same value and returns the result as a boolean value. Generally both type and value need to match, so the int "
          },
          {
            "Text": "12",
            "AttrFlags": 2
          },
          {
            "Text": " is not the same as the string "
          },
          {
            "Text": "'12'",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301004512,
        "id": "4b9f1241-c380-48ae-9279-e28ec1c99068",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550301180000,
        "parent_id": "a5216a39-71bb-4763-8ef2-4d4d5a4dc6dd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "12 == 12\n# True\n12 == 1\n# False\n'12' == '12'\n# True\n'spam' == 'spam'\n# True\n'spam' == 'spam '\n# False\n'12' == 12\n# False"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "12 == 12\n# True\n12 == 1\n# False\n'12' == '12'\n# True\n'spam' == 'spam'\n# True\n'spam' == 'spam '\n# False\n'12' == 12\n# False",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301004513,
        "id": "821a222a-8e67-484e-ab0d-80c8510ace9f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550301004513,
        "parent_id": "a5216a39-71bb-4763-8ef2-4d4d5a4dc6dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that each type has to define a function that will be used to evaluate if two values are the same. For builtin types these functions behave as you’d expect, and just evaluate things based on being the same value. However custom types could define equality testing as whatever they’d like, including always returning "
            ],
            [
              "True",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or always returning "
            ],
            [
              "False",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that each type has to define a function that will be used to evaluate if two values are the same. For builtin types these functions behave as you’d expect, and just evaluate things based on being the same value. However custom types could define equality testing as whatever they’d like, including always returning "
          },
          {
            "Text": "True",
            "AttrFlags": 2
          },
          {
            "Text": " or always returning "
          },
          {
            "Text": "False",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Equal To",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}