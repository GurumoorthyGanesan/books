{
  "ID": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
  "Root": {
    "alive": true,
    "content": [
      "a8c89e3c-fef8-4800-a88d-fd054d2ab8d8",
      "f4706703-a58f-4563-9a68-cf814beef0cc",
      "ea84ba2b-ffab-4a96-a291-a7068013a818",
      "12068bce-5023-4bc5-bdcd-08125df11694",
      "f756431a-4b6e-46a4-a8fd-868c1fe18f74",
      "370743b8-5ef5-4600-a9f3-6f72a7fd6dd6",
      "2b00fde9-1df9-47b4-ace7-6a7f8b43e36e",
      "5e23abfe-6a62-48c5-b5ff-2e97e8b48419",
      "2c5329e9-e49a-4f01-9956-ec372652bc3c",
      "ce66db51-b5be-47c7-a8fb-da4fbe3365eb",
      "c81ea9c8-f44d-407e-b1ae-3bb27f0202c7",
      "3f4321ad-6d57-42e2-9786-84a6236a998a",
      "33d22918-13cd-4675-9fdc-22d558f5235e",
      "b063248a-ba4a-483e-95bf-570e7551dba3",
      "73e9293e-654a-4ada-a7ae-ec1151f51252",
      "327166ec-698d-4d7d-a746-5f5de51c21d4",
      "ff8aa0f8-f5b3-46c2-bd62-e813223ea980",
      "67d4823e-c24e-4858-93c7-6732aea8f25d",
      "c0997c8c-9bc4-472d-a954-8b50e44be057",
      "11a9b96e-f49c-45c6-98f6-dddeab31816c",
      "6999018d-a8fb-4087-9bd6-357af8f496d4",
      "161c0df3-c0f0-43ac-bf97-b4d5d7524b77",
      "f685d4cd-879f-43b1-bf1b-1f2cd0d6b89e",
      "c60d0c9f-b9c0-4aff-9f22-24ee219b22b5",
      "1f2f8172-a68f-4e01-b5e9-f0cf0f05a4fc",
      "4270f54c-7413-44fd-b3cd-8b3ffbd6f6f3",
      "51e3b9fd-63a8-46a8-8633-66b91bd6735d",
      "41409c9f-c434-4bf5-83f8-085d47fddd37",
      "10b7e508-f30d-4640-90bb-bc8a16386bd6",
      "1d198b0d-150f-4d8f-8012-e7360bf2eb3c",
      "09d2d584-4595-460f-8cb0-86ba3522c8f4",
      "0471e428-0775-4e1e-b047-0d5b84ff2189",
      "c246fe68-396b-4704-82ec-daf089fc3ca2",
      "6cf794dd-81d8-4caf-b36d-478f015e8520"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550392626008,
    "id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550476080000,
    "parent_id": "e3d3b26b-78cf-43c3-b162-dce28c8daa76",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "TypeErrors"
        ]
      ]
    },
    "type": "page",
    "version": 6,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626000,
        "id": "a8c89e3c-fef8-4800-a88d-fd054d2ab8d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626000,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These exceptions are caused when the type of some object should be different"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These exceptions are caused when the type of some object should be different"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626003,
        "id": "f4706703-a58f-4563-9a68-cf814beef0cc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626003,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "TypeError: [definition/method] takes ? positional arguments but ? was given"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "TypeError: [definition/method] takes ? positional arguments but ? was given"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626003,
        "id": "ea84ba2b-ffab-4a96-a291-a7068013a818",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626003,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A function or method was called with more (or less) arguments than the ones it can accept."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A function or method was called with more (or less) arguments than the ones it can accept."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626003,
        "id": "12068bce-5023-4bc5-bdcd-08125df11694",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626003,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626003,
        "id": "f756431a-4b6e-46a4-a8fd-868c1fe18f74",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626003,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If more arguments are given:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If more arguments are given:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626003,
        "id": "370743b8-5ef5-4600-a9f3-6f72a7fd6dd6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626003,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def foo(a): return a\nfoo(a,b,c,d) #And a,b,c,d are defined"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def foo(a): return a\nfoo(a,b,c,d) #And a,b,c,d are defined",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626003,
        "id": "2b00fde9-1df9-47b4-ace7-6a7f8b43e36e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626003,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If less arguments are given:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If less arguments are given:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626003,
        "id": "5e23abfe-6a62-48c5-b5ff-2e97e8b48419",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626003,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def foo(a,b,c,d): return a += b + c + d\nfoo(a) #And a is defined"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def foo(a,b,c,d): return a += b + c + d\nfoo(a) #And a is defined",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626005,
        "id": "2c5329e9-e49a-4f01-9956-ec372652bc3c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626005,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": if you want use an unknown number of arguments, you can use "
            ],
            [
              "*args",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "**kwargs",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". See "
            ],
            [
              "*args and **kwargs",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/python/2475/args-and-kwargs#t=201703011624312141911"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note",
            "AttrFlags": 1
          },
          {
            "Text": ": if you want use an unknown number of arguments, you can use "
          },
          {
            "Text": "*args",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "**kwargs",
            "AttrFlags": 2
          },
          {
            "Text": ". See "
          },
          {
            "Text": "*args and **kwargs",
            "Link": "http://stackoverflow.com/documentation/python/2475/args-and-kwargs#t=201703011624312141911"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626005,
        "id": "ce66db51-b5be-47c7-a8fb-da4fbe3365eb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626005,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626005,
        "id": "c81ea9c8-f44d-407e-b1ae-3bb27f0202c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626005,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "TypeError: unsupported operand type(s) for [operand]: ‘???’ and ‘???’"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "TypeError: unsupported operand type(s) for [operand]: ‘???’ and ‘???’"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626006,
        "id": "3f4321ad-6d57-42e2-9786-84a6236a998a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626006,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Some types cannot be operated together, depending on the operand."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Some types cannot be operated together, depending on the operand."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626006,
        "id": "33d22918-13cd-4675-9fdc-22d558f5235e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626006,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626006,
        "id": "b063248a-ba4a-483e-95bf-570e7551dba3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626006,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example: "
            ],
            [
              "\\+",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is used to concatenate and add, but you can’t use any of them for both types. For instance, trying to make a "
            ],
            [
              "set",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " by concatenating ("
            ],
            [
              "\\+",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "ing) "
            ],
            [
              "'set1'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "'tuple1'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " gives the error. Code:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example: "
          },
          {
            "Text": "\\+",
            "AttrFlags": 2
          },
          {
            "Text": " is used to concatenate and add, but you can’t use any of them for both types. For instance, trying to make a "
          },
          {
            "Text": "set",
            "AttrFlags": 2
          },
          {
            "Text": " by concatenating ("
          },
          {
            "Text": "\\+",
            "AttrFlags": 2
          },
          {
            "Text": "ing) "
          },
          {
            "Text": "'set1'",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "'tuple1'",
            "AttrFlags": 2
          },
          {
            "Text": " gives the error. Code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626006,
        "id": "73e9293e-654a-4ada-a7ae-ec1151f51252",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626006,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "set1, tuple1 = {1,2}, (3,4)\na = set1 + tuple1"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "set1, tuple1 = {1,2}, (3,4)\na = set1 + tuple1",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626006,
        "id": "327166ec-698d-4d7d-a746-5f5de51c21d4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626006,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Some types (eg: "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "string",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") use both "
            ],
            [
              "\\+",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " but for different things:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Some types (eg: "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "string",
            "AttrFlags": 2
          },
          {
            "Text": ") use both "
          },
          {
            "Text": "\\+",
            "AttrFlags": 2
          },
          {
            "Text": " but for different things:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626006,
        "id": "ff8aa0f8-f5b3-46c2-bd62-e813223ea980",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626006,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "b = 400 + 'foo'"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "b = 400 + 'foo'",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626006,
        "id": "67d4823e-c24e-4858-93c7-6732aea8f25d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626006,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Or they may not be even used for anything:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Or they may not be even used for anything:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626006,
        "id": "c0997c8c-9bc4-472d-a954-8b50e44be057",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626006,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "c = [\"a\",\"b\"] - [1,2]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "c = [\"a\",\"b\"] - [1,2]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626007,
        "id": "11a9b96e-f49c-45c6-98f6-dddeab31816c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626007,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But you can for example add a "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to an "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But you can for example add a "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": " to an "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626007,
        "id": "6999018d-a8fb-4087-9bd6-357af8f496d4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626007,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "d = 1 + 1.0"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "d = 1 + 1.0",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626007,
        "id": "161c0df3-c0f0-43ac-bf97-b4d5d7524b77",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626007,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626007,
        "id": "f685d4cd-879f-43b1-bf1b-1f2cd0d6b89e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626007,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "TypeError: ‘???’ object is not iterable/subscriptable:"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "TypeError: ‘???’ object is not iterable/subscriptable:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626007,
        "id": "c60d0c9f-b9c0-4aff-9f22-24ee219b22b5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626007,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For an object to be iterable it can take sequential indexes starting from zero until the indexes are no longer valid and a "
            ],
            [
              "IndexError",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is raised (More technically: it has to have an "
            ],
            [
              "__iter__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method which returns an "
            ],
            [
              "__iterator__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", or which defines a "
            ],
            [
              "__getitem__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method that does what was previously mentioned)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For an object to be iterable it can take sequential indexes starting from zero until the indexes are no longer valid and a "
          },
          {
            "Text": "IndexError",
            "AttrFlags": 2
          },
          {
            "Text": " is raised (More technically: it has to have an "
          },
          {
            "Text": "__iter__",
            "AttrFlags": 2
          },
          {
            "Text": " method which returns an "
          },
          {
            "Text": "__iterator__",
            "AttrFlags": 2
          },
          {
            "Text": ", or which defines a "
          },
          {
            "Text": "__getitem__",
            "AttrFlags": 2
          },
          {
            "Text": " method that does what was previously mentioned)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626007,
        "id": "1f2f8172-a68f-4e01-b5e9-f0cf0f05a4fc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626007,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626007,
        "id": "4270f54c-7413-44fd-b3cd-8b3ffbd6f6f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626007,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here we are saying that "
            ],
            [
              "bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the zeroth item of 1. Nonsense:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here we are saying that "
          },
          {
            "Text": "bar",
            "AttrFlags": 2
          },
          {
            "Text": " is the zeroth item of 1. Nonsense:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626007,
        "id": "51e3b9fd-63a8-46a8-8633-66b91bd6735d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626007,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "foo = 1\nbar = foo[0]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "foo = 1\nbar = foo[0]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626008,
        "id": "41409c9f-c434-4bf5-83f8-085d47fddd37",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626008,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is a more discrete version: In this example "
            ],
            [
              "for",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " tries to set "
            ],
            [
              "x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "amount[0]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the first item in an iterable but it can’t because amount is an int:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is a more discrete version: In this example "
          },
          {
            "Text": "for",
            "AttrFlags": 2
          },
          {
            "Text": " tries to set "
          },
          {
            "Text": "x",
            "AttrFlags": 2
          },
          {
            "Text": " to "
          },
          {
            "Text": "amount[0]",
            "AttrFlags": 2
          },
          {
            "Text": ", the first item in an iterable but it can’t because amount is an int:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626008,
        "id": "10b7e508-f30d-4640-90bb-bc8a16386bd6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626008,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "amount = 10\nfor x in amount: print(x)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "amount = 10\nfor x in amount: print(x)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626008,
        "id": "1d198b0d-150f-4d8f-8012-e7360bf2eb3c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626008,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626008,
        "id": "09d2d584-4595-460f-8cb0-86ba3522c8f4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626008,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "TypeError: ‘???’ object is not callable"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "TypeError: ‘???’ object is not callable"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626008,
        "id": "0471e428-0775-4e1e-b047-0d5b84ff2189",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626008,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You are defining a variable and calling it later (like what you do with a function or method)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You are defining a variable and calling it later (like what you do with a function or method)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626008,
        "id": "c246fe68-396b-4704-82ec-daf089fc3ca2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626008,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392626008,
        "id": "6cf794dd-81d8-4caf-b36d-478f015e8520",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392626008,
        "parent_id": "440b05f9-c4ac-4c87-9fb3-3fc86e342f04",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "foo = \"notAFunction\"\nfoo()"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "foo = \"notAFunction\"\nfoo()",
        "code_language": "Plain Text"
      }
    ],
    "title": "TypeErrors"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}