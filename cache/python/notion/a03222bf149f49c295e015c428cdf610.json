{
  "ID": "a03222bf-149f-49c2-95e0-15c428cdf610",
  "Root": {
    "alive": true,
    "content": [
      "f6fd81c8-ecc2-447c-bea4-cac30f61120b",
      "fdc7321f-eefe-4682-8a66-a32ebf0a028c",
      "8e4fdb49-b2df-4abd-8d73-5bd2a5783f95",
      "6f822336-e676-4034-8836-678281cc434c",
      "250a1d20-26e8-43a8-987c-77c07efbd3ef",
      "16770e58-a6ed-40cb-bf4c-42cb5fbfd9ab",
      "17e5c102-ebef-4c43-b815-60bce745a10c",
      "a960b2e1-3bf5-4b59-b125-90fb45b3dabd",
      "7b71ce6a-0a31-49af-a994-f03420e26c4a",
      "81fa5bc9-8345-4dd0-8f79-6a5f62fd5057",
      "88182895-65ab-467a-9808-aa2bdc7bbacc",
      "412c7fbe-b422-4d5d-8457-c923e4394e07",
      "45868a77-1df2-4a93-8f20-fda10257536e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550310158085,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "a03222bf-149f-49c2-95e0-15c428cdf610",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550310240000,
    "parent_id": "59a19594-3471-4d12-94f1-36e9bd676676",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Searching keys for a value in dict"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310158081,
        "id": "f6fd81c8-ecc2-447c-bea4-cac30f61120b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310158081,
        "parent_id": "a03222bf-149f-49c2-95e0-15c428cdf610",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "dict",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " have no builtin method for searching a value or key because "
            ],
            [
              "dictionaries",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " are unordered. You can create a function that gets the key (or keys) for a specified value:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "dict",
            "AttrFlags": 2
          },
          {
            "Text": " have no builtin method for searching a value or key because "
          },
          {
            "Text": "dictionaries",
            "AttrFlags": 4
          },
          {
            "Text": " are unordered. You can create a function that gets the key (or keys) for a specified value:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310158083,
        "id": "fdc7321f-eefe-4682-8a66-a32ebf0a028c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310240000,
        "parent_id": "a03222bf-149f-49c2-95e0-15c428cdf610",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def getKeysForValue(dictionary, value):\n    foundkeys = []\n    for keys in dictionary:\n        if dictionary[key] == value:\n            foundkeys.append(key)\n    return foundkeys"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def getKeysForValue(dictionary, value):\n    foundkeys = []\n    for keys in dictionary:\n        if dictionary[key] == value:\n            foundkeys.append(key)\n    return foundkeys",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310158084,
        "id": "8e4fdb49-b2df-4abd-8d73-5bd2a5783f95",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310158084,
        "parent_id": "a03222bf-149f-49c2-95e0-15c428cdf610",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This could also be written as an equivalent list comprehension:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This could also be written as an equivalent list comprehension:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310158084,
        "id": "6f822336-e676-4034-8836-678281cc434c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310240000,
        "parent_id": "a03222bf-149f-49c2-95e0-15c428cdf610",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def getKeysForValueComp(dictionary, value): \n    return [key for key in dictionary if dictionary[key] == value]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def getKeysForValueComp(dictionary, value): \n    return [key for key in dictionary if dictionary[key] == value]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310158084,
        "id": "250a1d20-26e8-43a8-987c-77c07efbd3ef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310158084,
        "parent_id": "a03222bf-149f-49c2-95e0-15c428cdf610",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you only care about one found key:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you only care about one found key:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310158084,
        "id": "16770e58-a6ed-40cb-bf4c-42cb5fbfd9ab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310240000,
        "parent_id": "a03222bf-149f-49c2-95e0-15c428cdf610",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def getOneKeyForValue(dictionary, value):\n    return next(key for key in dictionary if dictionary[key] == value)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def getOneKeyForValue(dictionary, value):\n    return next(key for key in dictionary if dictionary[key] == value)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310158084,
        "id": "17e5c102-ebef-4c43-b815-60bce745a10c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310158084,
        "parent_id": "a03222bf-149f-49c2-95e0-15c428cdf610",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The first two functions will return a "
            ],
            [
              "list",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " of all "
            ],
            [
              "keys",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that have the specified value:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The first two functions will return a "
          },
          {
            "Text": "list",
            "AttrFlags": 2
          },
          {
            "Text": " of all "
          },
          {
            "Text": "keys",
            "AttrFlags": 2
          },
          {
            "Text": " that have the specified value:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310158084,
        "id": "a960b2e1-3bf5-4b59-b125-90fb45b3dabd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310240000,
        "parent_id": "a03222bf-149f-49c2-95e0-15c428cdf610",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "adict = {'a': 10, 'b': 20, 'c': 10}\ngetKeysForValue(adict, 10)     # ['c', 'a'] - order is random could as well be ['a', 'c']\ngetKeysForValueComp(adict, 10) # ['c', 'a'] - dito\ngetKeysForValueComp(adict, 20) # ['b']\ngetKeysForValueComp(adict, 25) # []"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "adict = {'a': 10, 'b': 20, 'c': 10}\ngetKeysForValue(adict, 10)     # ['c', 'a'] - order is random could as well be ['a', 'c']\ngetKeysForValueComp(adict, 10) # ['c', 'a'] - dito\ngetKeysForValueComp(adict, 20) # ['b']\ngetKeysForValueComp(adict, 25) # []",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310158084,
        "id": "7b71ce6a-0a31-49af-a994-f03420e26c4a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310158084,
        "parent_id": "a03222bf-149f-49c2-95e0-15c428cdf610",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The other one will only return one key:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The other one will only return one key:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310158084,
        "id": "81fa5bc9-8345-4dd0-8f79-6a5f62fd5057",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310240000,
        "parent_id": "a03222bf-149f-49c2-95e0-15c428cdf610",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "getOneKeyForValue(adict, 10)   # 'c'  - depending on the circumstances this could also be 'a'\ngetOneKeyForValue(adict, 20)   # 'b'"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "getOneKeyForValue(adict, 10)   # 'c'  - depending on the circumstances this could also be 'a'\ngetOneKeyForValue(adict, 20)   # 'b'",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310158085,
        "id": "88182895-65ab-467a-9808-aa2bdc7bbacc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310158085,
        "parent_id": "a03222bf-149f-49c2-95e0-15c428cdf610",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "and raise a "
            ],
            [
              "StopIteration",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "-"
            ],
            [
              "Exception",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if the value is not in the "
            ],
            [
              "dict",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "and raise a "
          },
          {
            "Text": "StopIteration",
            "AttrFlags": 2
          },
          {
            "Text": "-"
          },
          {
            "Text": "Exception",
            "AttrFlags": 2
          },
          {
            "Text": " if the value is not in the "
          },
          {
            "Text": "dict",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310158085,
        "id": "412c7fbe-b422-4d5d-8457-c923e4394e07",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310240000,
        "parent_id": "a03222bf-149f-49c2-95e0-15c428cdf610",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "getOneKeyForValue(adict, 25)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "getOneKeyForValue(adict, 25)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310158085,
        "id": "45868a77-1df2-4a93-8f20-fda10257536e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310158085,
        "parent_id": "a03222bf-149f-49c2-95e0-15c428cdf610",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "StopIteration"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "StopIteration"
          }
        ]
      }
    ],
    "title": "Searching keys for a value in dict",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}