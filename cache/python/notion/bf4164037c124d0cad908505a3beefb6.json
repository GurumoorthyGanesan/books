{
  "ID": "bf416403-7c12-4d0c-ad90-8505a3beefb6",
  "Root": {
    "alive": true,
    "content": [
      "35305071-0271-40d3-a82a-67a008ecafbd",
      "6baf4962-d3a6-4c16-8c3f-d4574c90379a",
      "32baaa41-74c8-48ef-9ec3-5975ebbdc81f",
      "8c49c161-02b5-4f5e-b011-abe094a10335"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550301762268,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "bf416403-7c12-4d0c-ad90-8505a3beefb6",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550302680000,
    "parent_id": "ded3913a-88c5-4173-b2a5-ee3d56b4fbd4",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using the key argument"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301762265,
        "id": "35305071-0271-40d3-a82a-67a008ecafbd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550301762265,
        "parent_id": "bf416403-7c12-4d0c-ad90-8505a3beefb6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finding the minimum/maximum of a sequence of sequences is possible:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finding the minimum/maximum of a sequence of sequences is possible:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301762267,
        "id": "6baf4962-d3a6-4c16-8c3f-d4574c90379a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550302680000,
        "parent_id": "bf416403-7c12-4d0c-ad90-8505a3beefb6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "list_of_tuples = [(0, 10), (1, 15), (2, 8)]\nmin(list_of_tuples)\n# Output: (0, 10)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "list_of_tuples = [(0, 10), (1, 15), (2, 8)]\nmin(list_of_tuples)\n# Output: (0, 10)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301762268,
        "id": "32baaa41-74c8-48ef-9ec3-5975ebbdc81f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550301762268,
        "parent_id": "bf416403-7c12-4d0c-ad90-8505a3beefb6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "but if you want to sort by a specific element in each sequence use the "
            ],
            [
              "key",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "-argument:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "but if you want to sort by a specific element in each sequence use the "
          },
          {
            "Text": "key",
            "AttrFlags": 2
          },
          {
            "Text": "-argument:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301762268,
        "id": "8c49c161-02b5-4f5e-b011-abe094a10335",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550302680000,
        "parent_id": "bf416403-7c12-4d0c-ad90-8505a3beefb6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "min(list_of_tuples, key=lambda x: x[0])         # Sorting by first element\n# Output: (0, 10)\n\nmin(list_of_tuples, key=lambda x: x[1])         # Sorting by second element\n# Output: (2, 8)\n\nsorted(list_of_tuples, key=lambda x: x[0])      # Sorting by first element (increasing)\n# Output: [(0, 10), (1, 15), (2, 8)]\n\nsorted(list_of_tuples, key=lambda x: x[1])      # Sorting by first element\n# Output: [(2, 8), (0, 10), (1, 15)]\n\nimport operator   \n# The operator module contains efficient alternatives to the lambda function\nmax(list_of_tuples, key=operator.itemgetter(0)) # Sorting by first element\n# Output: (2, 8)\n\nmax(list_of_tuples, key=operator.itemgetter(1)) # Sorting by second element\n# Output: (1, 15)\n\nsorted(list_of_tuples, key=operator.itemgetter(0), reverse=True) # Reversed (decreasing)\n# Output: [(2, 8), (1, 15), (0, 10)]\n\nsorted(list_of_tuples, key=operator.itemgetter(1), reverse=True) # Reversed(decreasing)\n# Output: [(1, 15), (0, 10), (2, 8)]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "min(list_of_tuples, key=lambda x: x[0])         # Sorting by first element\n# Output: (0, 10)\n\nmin(list_of_tuples, key=lambda x: x[1])         # Sorting by second element\n# Output: (2, 8)\n\nsorted(list_of_tuples, key=lambda x: x[0])      # Sorting by first element (increasing)\n# Output: [(0, 10), (1, 15), (2, 8)]\n\nsorted(list_of_tuples, key=lambda x: x[1])      # Sorting by first element\n# Output: [(2, 8), (0, 10), (1, 15)]\n\nimport operator   \n# The operator module contains efficient alternatives to the lambda function\nmax(list_of_tuples, key=operator.itemgetter(0)) # Sorting by first element\n# Output: (2, 8)\n\nmax(list_of_tuples, key=operator.itemgetter(1)) # Sorting by second element\n# Output: (1, 15)\n\nsorted(list_of_tuples, key=operator.itemgetter(0), reverse=True) # Reversed (decreasing)\n# Output: [(2, 8), (1, 15), (0, 10)]\n\nsorted(list_of_tuples, key=operator.itemgetter(1), reverse=True) # Reversed(decreasing)\n# Output: [(1, 15), (0, 10), (2, 8)]",
        "code_language": "Python"
      }
    ],
    "title": "Using the key argument",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}