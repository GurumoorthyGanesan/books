{
  "ID": "b3a663ed-0af7-4050-a7e3-ad59f4cb9520",
  "Root": {
    "alive": true,
    "content": [
      "c228de94-1cfa-4f53-984b-93e16d34331a",
      "e97aa714-b7ed-4262-a04e-bf81e0d48a4c",
      "b6301c5a-b496-47e9-b9db-666046fb7576",
      "72095455-8cd8-4b3a-807f-cb6d875e1e52",
      "ecdb051a-e748-4453-b15a-c04d1223924e",
      "5837eb24-8253-4eb6-9d5d-fc24762977b0",
      "13774450-aca7-435e-9945-df5c09cb5cfb",
      "f5cf9b49-281c-4203-8eba-6e2d9fcb001a",
      "1e737c6a-8692-435e-b255-30e5ae9cec7b",
      "0bf41a86-142c-48d7-a607-a9d53b97773d",
      "e2a11456-c93d-4d5c-befe-eca2764f0dbe",
      "d3519f1b-a1d9-4102-94f1-67bddce3f8fa",
      "92e8780a-b0cd-4853-8eb4-40f6fe60aee1",
      "b01f33a1-d0f5-4dca-9560-5b4b5a6d8143"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550304891625,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "b3a663ed-0af7-4050-a7e3-ad59f4cb9520",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550305320000,
    "parent_id": "8ee64259-4cde-4221-b561-4fa00141ee12",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Formatting JSON output"
        ]
      ]
    },
    "type": "page",
    "version": 13,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550304891621,
        "id": "c228de94-1cfa-4f53-984b-93e16d34331a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550304891621,
        "parent_id": "b3a663ed-0af7-4050-a7e3-ad59f4cb9520",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s say we have the following data:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s say we have the following data:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550304891623,
        "id": "e97aa714-b7ed-4262-a04e-bf81e0d48a4c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305200000,
        "parent_id": "b3a663ed-0af7-4050-a7e3-ad59f4cb9520",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e data = {\"cats\": [{\"name\": \"Tubbs\", \"color\": \"white\"}, {\"name\": \"Pepper\", \"color\": \"black\"}]}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e data = {\"cats\": [{\"name\": \"Tubbs\", \"color\": \"white\"}, {\"name\": \"Pepper\", \"color\": \"black\"}]}",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550304891624,
        "id": "b6301c5a-b496-47e9-b9db-666046fb7576",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550304891624,
        "parent_id": "b3a663ed-0af7-4050-a7e3-ad59f4cb9520",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Just dumping this as JSON does not do anything special here:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Just dumping this as JSON does not do anything special here:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550304891624,
        "id": "72095455-8cd8-4b3a-807f-cb6d875e1e52",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305200000,
        "parent_id": "b3a663ed-0af7-4050-a7e3-ad59f4cb9520",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e print(json.dumps(data))\n{\"cats\": [{\"name\": \"Tubbs\", \"color\": \"white\"}, {\"name\": \"Pepper\", \"color\": \"black\"}]}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e print(json.dumps(data))\n{\"cats\": [{\"name\": \"Tubbs\", \"color\": \"white\"}, {\"name\": \"Pepper\", \"color\": \"black\"}]}",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550304891624,
        "id": "ecdb051a-e748-4453-b15a-c04d1223924e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550304891624,
        "parent_id": "b3a663ed-0af7-4050-a7e3-ad59f4cb9520",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Setting indentation to get prettier output"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Setting indentation to get prettier output"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550304891624,
        "id": "5837eb24-8253-4eb6-9d5d-fc24762977b0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550304891624,
        "parent_id": "b3a663ed-0af7-4050-a7e3-ad59f4cb9520",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If we want pretty printing, we can set an "
            ],
            [
              "indent",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " size:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If we want pretty printing, we can set an "
          },
          {
            "Text": "indent",
            "AttrFlags": 2
          },
          {
            "Text": " size:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550304891624,
        "id": "13774450-aca7-435e-9945-df5c09cb5cfb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305260000,
        "parent_id": "b3a663ed-0af7-4050-a7e3-ad59f4cb9520",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e print(json.dumps(data, indent=2))\n{\n  \"cats\": [{\n  \"cats\": [\n\t\t{\n\t\t\t“name”: “Tubbs”,\n\t\t\t“color”: “white”\n\t\t},\n\t\t{\n\t\t\t“name”: “Pepper”,\n\t\t\t“color”: “black”\n\t\t}\n\t]\n}"
            ]
          ]
        },
        "type": "code",
        "version": 31,
        "code": "\u003e\u003e\u003e print(json.dumps(data, indent=2))\n{\n  \"cats\": [{\n  \"cats\": [\n\t\t{\n\t\t\t“name”: “Tubbs”,\n\t\t\t“color”: “white”\n\t\t},\n\t\t{\n\t\t\t“name”: “Pepper”,\n\t\t\t“color”: “black”\n\t\t}\n\t]\n}",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550304891625,
        "id": "f5cf9b49-281c-4203-8eba-6e2d9fcb001a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550304891625,
        "parent_id": "b3a663ed-0af7-4050-a7e3-ad59f4cb9520",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sorting keys alphabetically to get consistent output"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sorting keys alphabetically to get consistent output"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550304891625,
        "id": "1e737c6a-8692-435e-b255-30e5ae9cec7b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550304891625,
        "parent_id": "b3a663ed-0af7-4050-a7e3-ad59f4cb9520",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By default the order of keys in the output is undefined. We can get them in alphabetical order to make sure we always get the same output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By default the order of keys in the output is undefined. We can get them in alphabetical order to make sure we always get the same output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550304891625,
        "id": "0bf41a86-142c-48d7-a607-a9d53b97773d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305260000,
        "parent_id": "b3a663ed-0af7-4050-a7e3-ad59f4cb9520",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e print(json.dumps(data, sort_keys=True))\n{\"cats\": [{\"color\": \"white\", \"name\": \"Tubbs\"}, {\"color\": \"black\", \"name\": \"Pepper\"}]}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e print(json.dumps(data, sort_keys=True))\n{\"cats\": [{\"color\": \"white\", \"name\": \"Tubbs\"}, {\"color\": \"black\", \"name\": \"Pepper\"}]}",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550304891625,
        "id": "e2a11456-c93d-4d5c-befe-eca2764f0dbe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550304891625,
        "parent_id": "b3a663ed-0af7-4050-a7e3-ad59f4cb9520",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Getting rid of whitespace to get compact output"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Getting rid of whitespace to get compact output"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550304891625,
        "id": "d3519f1b-a1d9-4102-94f1-67bddce3f8fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550304891625,
        "parent_id": "b3a663ed-0af7-4050-a7e3-ad59f4cb9520",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We might want to get rid of the unnecessary spaces, which is done by setting separator strings different from the default "
            ],
            [
              "', '",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "': '",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We might want to get rid of the unnecessary spaces, which is done by setting separator strings different from the default "
          },
          {
            "Text": "', '",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "': '",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550304891625,
        "id": "92e8780a-b0cd-4853-8eb4-40f6fe60aee1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305260000,
        "parent_id": "b3a663ed-0af7-4050-a7e3-ad59f4cb9520",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003eprint(json.dumps(data, separators=(',', ':')))\n{\"cats\":[{\"name\":\"Tubbs\",\"color\":\"white\"},{\"name\":\"Pepper\",\"color\":\"black\"}]}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003eprint(json.dumps(data, separators=(',', ':')))\n{\"cats\":[{\"name\":\"Tubbs\",\"color\":\"white\"},{\"name\":\"Pepper\",\"color\":\"black\"}]}",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305320000,
        "id": "b01f33a1-d0f5-4dca-9560-5b4b5a6d8143",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305320000,
        "parent_id": "b3a663ed-0af7-4050-a7e3-ad59f4cb9520",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "Formatting JSON output",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}