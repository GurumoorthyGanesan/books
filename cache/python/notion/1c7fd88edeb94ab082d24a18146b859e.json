{
  "ID": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
  "Root": {
    "alive": true,
    "content": [
      "dc319760-b276-4b66-b6fd-0b02317dbf5d",
      "378cecab-9c6e-4ca1-a76a-da397e3d2976",
      "8a2f8f56-73d7-43c1-a943-d9a019b2b465",
      "b39285d8-d994-45dd-ac2d-32ff34555428",
      "26ae62b9-bd2b-4061-b644-4a778121834d",
      "5f5d5d08-cf19-45ca-87bf-3d00578872fe",
      "d1bf2576-75b3-4157-aa98-72ab0fe9ac21",
      "d883128c-9874-4257-b18d-6367d94d651a",
      "d4117d68-3642-4b85-b4f8-b30ba3b4639b",
      "4e7eb944-1091-489d-8bc5-2d5f15328dbc",
      "0d4fb49e-df7c-4a3f-9220-c44d678f0dba",
      "8d376e94-f0d6-4b0f-9819-b08b68745d61",
      "da3fd295-6886-4cbb-9384-6c260a40dfd6",
      "62e0ad2f-1140-4991-bfa3-26fb916bfa54",
      "2b954cbb-e576-47c5-8918-f8033943a7b0",
      "af8e8cb1-7ded-4a44-b203-9692c8bfdaf1",
      "40c0b076-0e36-480b-a4fe-d5c7fc0ce261",
      "7c024ef9-f967-48db-a3c4-9d80995eff69",
      "bb527140-aa39-4558-892d-e736f1489482",
      "020e70cf-449b-4b98-9409-6cb18e243324",
      "fb196605-b0c9-4300-bb62-c9efa0c4f1db",
      "6bd8bf01-e927-4d06-8cd9-80080869ac95",
      "3eb8804a-8ba1-47ad-b73b-ad9d42dfe23b",
      "8df522b3-f4b6-4b8a-862c-12fd674b6e01",
      "e32a9eee-a683-4382-a677-ae2a7ff1700c",
      "d1cf9609-c2ee-4f1c-bb03-b65739cfab97",
      "5386db05-ffde-41f7-8fea-dba6b10c9e08",
      "45927031-d6f1-4206-be3f-f93d9cf1dc5a",
      "5ff6fac7-ca88-463c-9ae8-615ec2eb56b0",
      "c4cf229d-6816-49f9-af9b-fe03f4e42d96",
      "df14e77e-1780-4916-ad1f-bf3e6623a19c",
      "dc11df09-462b-49f3-baa6-fd2902bb6d2a",
      "07d0837a-114d-491e-b1e7-827633ee2280",
      "69f8d02f-f308-4cf4-bf22-4e3d05112534",
      "98600704-14df-4d3b-9fbd-e93cf48da35f",
      "9ac598dc-8c05-47dc-9632-1b437813d8e9",
      "2345705e-b103-4fdc-9658-75049d86cd31",
      "1429d733-3fff-4ab1-90d3-40c1c359e86b",
      "6163effb-6fcd-4988-a25e-70771cf2bc06",
      "f561235d-1dad-4f5d-a37b-8c7ed0ea1ae1",
      "cd962c7c-3b0e-44e5-9710-76766a7f28af",
      "3081dbb7-a9b7-4b62-96a7-0c40130ea664",
      "6fac27ee-2869-4da7-8fb4-7b84d8718f6a",
      "c8ada87a-accf-4ead-9ed4-6beb466da40d",
      "4beac113-f0fc-428b-ac02-e0c5ccaff481",
      "7fb16118-739d-4ae2-8c25-dbd3e3acaef0",
      "3e374839-21e5-4a33-9031-35c0bda7adca",
      "f0d25e98-0561-4643-94b0-ddfeb99d0002",
      "634e55aa-dc68-454a-9687-e787fe87a2c0",
      "a61097a5-cf76-4c73-b4fc-d2e5c17e98ae",
      "ae3f5b94-5345-4d9a-9867-5f722c981043",
      "62a77f17-f164-47ea-8181-b1670611ac35",
      "f618c560-52d3-4724-a957-1a5f00fc43a9",
      "ad006688-6859-4c34-9b34-82ab24fc3114",
      "73192970-890e-4d7a-aed9-53a3f511b034",
      "c47fba60-0876-4cdb-acb3-5a68ba57d5c5",
      "6876515c-5284-400a-a307-24453dddf92b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550389579003,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550470080000,
    "parent_id": "ec883772-3307-46a3-8831-ebcc8479e939",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "List multiplication and common references"
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578992,
        "id": "dc319760-b276-4b66-b6fd-0b02317dbf5d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578992,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consider the case of creating a nested list structure by multiplying:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consider the case of creating a nested list structure by multiplying:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578994,
        "id": "378cecab-9c6e-4ca1-a76a-da397e3d2976",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578994,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "li = [[]] * 3\nprint(li)\n# Out: [[], [], []]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "li = [[]] * 3\nprint(li)\n# Out: [[], [], []]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578994,
        "id": "8a2f8f56-73d7-43c1-a943-d9a019b2b465",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578994,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "At first glance we would think we have a list of containing 3 different nested lists. Let’s try to append "
            ],
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to the first one:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "At first glance we would think we have a list of containing 3 different nested lists. Let’s try to append "
          },
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": " to the first one:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578995,
        "id": "b39285d8-d994-45dd-ac2d-32ff34555428",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578995,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "li[0].append(1)\nprint(li)\n# Out: [[1], [1], [1]]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "li[0].append(1)\nprint(li)\n# Out: [[1], [1], [1]]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578995,
        "id": "26ae62b9-bd2b-4061-b644-4a778121834d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578995,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " got appended to all of the lists in "
            ],
            [
              "li",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": " got appended to all of the lists in "
          },
          {
            "Text": "li",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578995,
        "id": "5f5d5d08-cf19-45ca-87bf-3d00578872fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578995,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The reason is that "
            ],
            [
              "[[]] * 3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " doesn’t create a "
            ],
            [
              "list",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " of 3 different "
            ],
            [
              "list",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s. Rather, it creates a "
            ],
            [
              "list",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " holding 3 references to the same "
            ],
            [
              "list",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object. As such, when we append to "
            ],
            [
              "li[0]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " the change is visible in all sub-elements of "
            ],
            [
              "li",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This is equivalent of:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The reason is that "
          },
          {
            "Text": "[[]] * 3",
            "AttrFlags": 2
          },
          {
            "Text": " doesn’t create a "
          },
          {
            "Text": "list",
            "AttrFlags": 2
          },
          {
            "Text": " of 3 different "
          },
          {
            "Text": "list",
            "AttrFlags": 2
          },
          {
            "Text": "s. Rather, it creates a "
          },
          {
            "Text": "list",
            "AttrFlags": 2
          },
          {
            "Text": " holding 3 references to the same "
          },
          {
            "Text": "list",
            "AttrFlags": 2
          },
          {
            "Text": " object. As such, when we append to "
          },
          {
            "Text": "li[0]",
            "AttrFlags": 2
          },
          {
            "Text": " the change is visible in all sub-elements of "
          },
          {
            "Text": "li",
            "AttrFlags": 2
          },
          {
            "Text": ". This is equivalent of:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578995,
        "id": "d1bf2576-75b3-4157-aa98-72ab0fe9ac21",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578995,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "li = []\nelement = [[]]\nli = element + element + element\nprint(li)\n# Out: [[], [], []]\nelement.append(1)\nprint(li)\n# Out: [[1], [1], [1]]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "li = []\nelement = [[]]\nli = element + element + element\nprint(li)\n# Out: [[], [], []]\nelement.append(1)\nprint(li)\n# Out: [[1], [1], [1]]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578995,
        "id": "d883128c-9874-4257-b18d-6367d94d651a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578995,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This can be further corroborated if we print the memory addresses of the contained "
            ],
            [
              "list",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " by using "
            ],
            [
              "id",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This can be further corroborated if we print the memory addresses of the contained "
          },
          {
            "Text": "list",
            "AttrFlags": 2
          },
          {
            "Text": " by using "
          },
          {
            "Text": "id",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578995,
        "id": "d4117d68-3642-4b85-b4f8-b30ba3b4639b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578995,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "li = [[]] * 3\nprint([id(inner_list) for inner_list in li])\n# Out: [6830760, 6830760, 6830760]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "li = [[]] * 3\nprint([id(inner_list) for inner_list in li])\n# Out: [6830760, 6830760, 6830760]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578996,
        "id": "4e7eb944-1091-489d-8bc5-2d5f15328dbc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578996,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The solution is to create the inner lists with a loop:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The solution is to create the inner lists with a loop:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578996,
        "id": "0d4fb49e-df7c-4a3f-9220-c44d678f0dba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578996,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "li = [[] for _ in range(3)]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "li = [[] for _ in range(3)]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578996,
        "id": "8d376e94-f0d6-4b0f-9819-b08b68745d61",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578996,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Instead of creating a single "
            ],
            [
              "list",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and then making 3 references to it, we now create 3 different distinct lists. This, again, can be verified by using the "
            ],
            [
              "id",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Instead of creating a single "
          },
          {
            "Text": "list",
            "AttrFlags": 2
          },
          {
            "Text": " and then making 3 references to it, we now create 3 different distinct lists. This, again, can be verified by using the "
          },
          {
            "Text": "id",
            "AttrFlags": 2
          },
          {
            "Text": " function:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578996,
        "id": "da3fd295-6886-4cbb-9384-6c260a40dfd6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578996,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "print([id(inner_list) for inner_list in li])\n# Out: [6331048, 6331528, 6331488]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "print([id(inner_list) for inner_list in li])\n# Out: [6331048, 6331528, 6331488]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578996,
        "id": "62e0ad2f-1140-4991-bfa3-26fb916bfa54",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578996,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can also do this. It causes a new empty list to be created in each "
            ],
            [
              "append",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " call."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can also do this. It causes a new empty list to be created in each "
          },
          {
            "Text": "append",
            "AttrFlags": 2
          },
          {
            "Text": " call."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578996,
        "id": "2b954cbb-e576-47c5-8918-f8033943a7b0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578996,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e li = []\n\u003e\u003e\u003e li.append([])\n\u003e\u003e\u003e li.append([])\n\u003e\u003e\u003e li.append([])\n\u003e\u003e\u003e for k in li: print(id(k))\n... \n4315469256\n4315564552\n4315564808"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003e\u003e\u003e li = []\n\u003e\u003e\u003e li.append([])\n\u003e\u003e\u003e li.append([])\n\u003e\u003e\u003e li.append([])\n\u003e\u003e\u003e for k in li: print(id(k))\n... \n4315469256\n4315564552\n4315564808",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578996,
        "id": "af8e8cb1-7ded-4a44-b203-9692c8bfdaf1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578996,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Don’t use index to loop over a sequence."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Don’t use index to loop over a sequence."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578996,
        "id": "40c0b076-0e36-480b-a4fe-d5c7fc0ce261",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578996,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Don’t:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Don’t:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578996,
        "id": "7c024ef9-f967-48db-a3c4-9d80995eff69",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578996,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "for i in range(len(tab)):\n    print(tab[i])"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "for i in range(len(tab)):\n    print(tab[i])",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578997,
        "id": "bb527140-aa39-4558-892d-e736f1489482",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578997,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Do",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Do",
            "AttrFlags": 1
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578997,
        "id": "020e70cf-449b-4b98-9409-6cb18e243324",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578997,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "for elem in tab:\n    print(elem)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "for elem in tab:\n    print(elem)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578997,
        "id": "fb196605-b0c9-4300-bb62-c9efa0c4f1db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578997,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "for",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will automate most iteration operations for you."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "for",
            "AttrFlags": 2
          },
          {
            "Text": " will automate most iteration operations for you."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578997,
        "id": "6bd8bf01-e927-4d06-8cd9-80080869ac95",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578997,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Use enumerate if you really need both the index and the element",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Use enumerate if you really need both the index and the element",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578997,
        "id": "3eb8804a-8ba1-47ad-b73b-ad9d42dfe23b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578997,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "for i, elem in enumerate(tab):\n     print((i, elem))"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "for i, elem in enumerate(tab):\n     print((i, elem))",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578997,
        "id": "8df522b3-f4b6-4b8a-862c-12fd674b6e01",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578997,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Be careful when using “==” to check against True or False",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Be careful when using “==” to check against True or False",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578997,
        "id": "e32a9eee-a683-4382-a677-ae2a7ff1700c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578997,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if (var == True):\n    # this will execute if var is True or 1, 1.0, 1L\n\nif (var != True):\n    # this will execute if var is neither True nor 1\n\nif (var == False):\n    # this will execute if var is False or 0 (or 0.0, 0L, 0j)\n\nif (var == None):\n    # only execute if var is None\n\nif var:\n    # execute if var is a non-empty string/list/dictionary/tuple, non-0, etc\n\nif not var:\n    # execute if var is \"\", {}, [], (), 0, None, etc.\n\nif var is True:\n    # only execute if var is boolean True, not 1\n\nif var is False:\n    # only execute if var is boolean False, not 0\n\nif var is None:\n    # same as var == None"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if (var == True):\n    # this will execute if var is True or 1, 1.0, 1L\n\nif (var != True):\n    # this will execute if var is neither True nor 1\n\nif (var == False):\n    # this will execute if var is False or 0 (or 0.0, 0L, 0j)\n\nif (var == None):\n    # only execute if var is None\n\nif var:\n    # execute if var is a non-empty string/list/dictionary/tuple, non-0, etc\n\nif not var:\n    # execute if var is \"\", {}, [], (), 0, None, etc.\n\nif var is True:\n    # only execute if var is boolean True, not 1\n\nif var is False:\n    # only execute if var is boolean False, not 0\n\nif var is None:\n    # same as var == None",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578997,
        "id": "d1cf9609-c2ee-4f1c-bb03-b65739cfab97",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578997,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Do not check if you can, just do it and handle the error",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Do not check if you can, just do it and handle the error",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578997,
        "id": "5386db05-ffde-41f7-8fea-dba6b10c9e08",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578997,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Pythonistas usually say “It’s easier to ask for forgiveness than permission”."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Pythonistas usually say “It’s easier to ask for forgiveness than permission”."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578998,
        "id": "45927031-d6f1-4206-be3f-f93d9cf1dc5a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578998,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Don’t:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Don’t:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578998,
        "id": "5ff6fac7-ca88-463c-9ae8-615ec2eb56b0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578998,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if os.path.isfile(file_path):\n    file = open(file_path)\nelse:\n    # do something"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if os.path.isfile(file_path):\n    file = open(file_path)\nelse:\n    # do something",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578998,
        "id": "c4cf229d-6816-49f9-af9b-fe03f4e42d96",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578998,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Do:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Do:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578998,
        "id": "df14e77e-1780-4916-ad1f-bf3e6623a19c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578998,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "try:\n    file = open(file_path)\nexcept OSError as e:\n    # do something"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "try:\n    file = open(file_path)\nexcept OSError as e:\n    # do something",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578998,
        "id": "dc11df09-462b-49f3-baa6-fd2902bb6d2a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578998,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Or even better with "
            ],
            [
              "Python 2.6+",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Or even better with "
          },
          {
            "Text": "Python 2.6+",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578998,
        "id": "07d0837a-114d-491e-b1e7-827633ee2280",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578998,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "with open(file_path) as file:"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "with open(file_path) as file:",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578998,
        "id": "69f8d02f-f308-4cf4-bf22-4e3d05112534",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578998,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is much better because it is much more generic. You can apply "
            ],
            [
              "try/except",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to almost anything. You don’t need to care about what to do to prevent it, just care about the error you are risking."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is much better because it is much more generic. You can apply "
          },
          {
            "Text": "try/except",
            "AttrFlags": 2
          },
          {
            "Text": " to almost anything. You don’t need to care about what to do to prevent it, just care about the error you are risking."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389578998,
        "id": "98600704-14df-4d3b-9fbd-e93cf48da35f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389578998,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Do not check against type",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Do not check against type",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579000,
        "id": "9ac598dc-8c05-47dc-9632-1b437813d8e9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579000,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Python is dynamically typed, therefore checking for type makes you lose flexibility. Instead, use "
            ],
            [
              "duck typing",
              [
                [
                  "a",
                  "https://stackoverflow.com/questions/4205130/what-is-duck-typing"
                ]
              ]
            ],
            [
              " by checking behavior. If you expect a string in a function, then use "
            ],
            [
              "str()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to convert any object to a string. If you expect a list, use "
            ],
            [
              "list()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to convert any iterable to a list."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Python is dynamically typed, therefore checking for type makes you lose flexibility. Instead, use "
          },
          {
            "Text": "duck typing",
            "Link": "https://stackoverflow.com/questions/4205130/what-is-duck-typing"
          },
          {
            "Text": " by checking behavior. If you expect a string in a function, then use "
          },
          {
            "Text": "str()",
            "AttrFlags": 2
          },
          {
            "Text": " to convert any object to a string. If you expect a list, use "
          },
          {
            "Text": "list()",
            "AttrFlags": 2
          },
          {
            "Text": " to convert any iterable to a list."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579000,
        "id": "2345705e-b103-4fdc-9658-75049d86cd31",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579000,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Don’t:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Don’t:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579000,
        "id": "1429d733-3fff-4ab1-90d3-40c1c359e86b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579000,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def foo(name):\n    if isinstance(name, str):\n        print(name.lower())\n\ndef bar(listing):\n    if isinstance(listing, list):\n        listing.extend((1, 2, 3))\n        return \", \".join(listing)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def foo(name):\n    if isinstance(name, str):\n        print(name.lower())\n\ndef bar(listing):\n    if isinstance(listing, list):\n        listing.extend((1, 2, 3))\n        return \", \".join(listing)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579000,
        "id": "6163effb-6fcd-4988-a25e-70771cf2bc06",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579000,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Do:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Do:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579000,
        "id": "f561235d-1dad-4f5d-a37b-8c7ed0ea1ae1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579000,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def foo(name) :\n    print(str(name).lower())\n\ndef bar(listing) :\n    l = list(listing)\n    l.extend((1, 2, 3))\n    return \", \".join(l)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def foo(name) :\n    print(str(name).lower())\n\ndef bar(listing) :\n    l = list(listing)\n    l.extend((1, 2, 3))\n    return \", \".join(l)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579001,
        "id": "cd962c7c-3b0e-44e5-9710-76766a7f28af",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579001,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using the last way, "
            ],
            [
              "foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will accept any object. "
            ],
            [
              "bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will accept strings, tuples, sets, lists and much more. Cheap DRY."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using the last way, "
          },
          {
            "Text": "foo",
            "AttrFlags": 2
          },
          {
            "Text": " will accept any object. "
          },
          {
            "Text": "bar",
            "AttrFlags": 2
          },
          {
            "Text": " will accept strings, tuples, sets, lists and much more. Cheap DRY."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579001,
        "id": "3081dbb7-a9b7-4b62-96a7-0c40130ea664",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579001,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Don’t mix spaces and tabs",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Don’t mix spaces and tabs",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579001,
        "id": "6fac27ee-2869-4da7-8fb4-7b84d8718f6a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579001,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Use ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "object",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " as first parent",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Use ",
            "AttrFlags": 1
          },
          {
            "Text": "object",
            "AttrFlags": 5
          },
          {
            "Text": " as first parent",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579001,
        "id": "c8ada87a-accf-4ead-9ed4-6beb466da40d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579001,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is tricky, but it will bite you as your program grows. There are old and new classes in "
            ],
            [
              "Python 2.x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The old ones are, well, old. They lack some features, and can have awkward behavior with inheritance. To be usable, any of your class must be of the “new style”. To do so, make it inherit from "
            ],
            [
              "object",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is tricky, but it will bite you as your program grows. There are old and new classes in "
          },
          {
            "Text": "Python 2.x",
            "AttrFlags": 2
          },
          {
            "Text": ". The old ones are, well, old. They lack some features, and can have awkward behavior with inheritance. To be usable, any of your class must be of the “new style”. To do so, make it inherit from "
          },
          {
            "Text": "object",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579001,
        "id": "4beac113-f0fc-428b-ac02-e0c5ccaff481",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579001,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Don’t:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Don’t:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579001,
        "id": "7fb16118-739d-4ae2-8c25-dbd3e3acaef0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579001,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Father:\n    pass\n\nclass Child(Father):\n    pass"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Father:\n    pass\n\nclass Child(Father):\n    pass",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579001,
        "id": "3e374839-21e5-4a33-9031-35c0bda7adca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579001,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Do:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Do:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579002,
        "id": "f0d25e98-0561-4643-94b0-ddfeb99d0002",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579002,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Father(object):\n    pass\n\n\nclass Child(Father):\n    pass"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Father(object):\n    pass\n\n\nclass Child(Father):\n    pass",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579002,
        "id": "634e55aa-dc68-454a-9687-e787fe87a2c0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579002,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In "
            ],
            [
              "Python 3.x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " all classes are new style so you don’t need to do that."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In "
          },
          {
            "Text": "Python 3.x",
            "AttrFlags": 2
          },
          {
            "Text": " all classes are new style so you don’t need to do that."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579002,
        "id": "a61097a5-cf76-4c73-b4fc-d2e5c17e98ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579002,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Don’t initialize class attributes outside the ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "init** method**"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Don’t initialize class attributes outside the ",
            "AttrFlags": 1
          },
          {
            "Text": "init** method**"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579002,
        "id": "ae3f5b94-5345-4d9a-9867-5f722c981043",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579002,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "People coming from other languages find it tempting because that is what you do in Java or PHP. You write the class name, then list your attributes and give them a default value. It seems to work in Python, however, this doesn’t work the way you think. Doing that will setup class attributes (static attributes), then when you will try to get the object attribute, it will gives you its value unless it’s empty. In that case it will return the class attributes. It implies two big hazards:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "People coming from other languages find it tempting because that is what you do in Java or PHP. You write the class name, then list your attributes and give them a default value. It seems to work in Python, however, this doesn’t work the way you think. Doing that will setup class attributes (static attributes), then when you will try to get the object attribute, it will gives you its value unless it’s empty. In that case it will return the class attributes. It implies two big hazards:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579002,
        "id": "62a77f17-f164-47ea-8181-b1670611ac35",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579002,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the class attribute is changed, then the initial value is changed."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the class attribute is changed, then the initial value is changed."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579003,
        "id": "f618c560-52d3-4724-a957-1a5f00fc43a9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579003,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you set a mutable object as a default value, you’ll get the same object shared across instances."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you set a mutable object as a default value, you’ll get the same object shared across instances."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579003,
        "id": "ad006688-6859-4c34-9b34-82ab24fc3114",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579003,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Don’t (unless you want static):",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Don’t (unless you want static):",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579003,
        "id": "73192970-890e-4d7a-aed9-53a3f511b034",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579003,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Car(object):\n    color = \"red\"\n    wheels = [Wheel(), Wheel(), Wheel(), Wheel()]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Car(object):\n    color = \"red\"\n    wheels = [Wheel(), Wheel(), Wheel(), Wheel()]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579003,
        "id": "c47fba60-0876-4cdb-acb3-5a68ba57d5c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579003,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Do :",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Do :",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389579003,
        "id": "6876515c-5284-400a-a307-24453dddf92b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389579003,
        "parent_id": "1c7fd88e-deb9-4ab0-82d2-4a18146b859e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Car(object):\n    def __init__(self):\n        self.color = \"red\"\n        self.wheels = [Wheel(), Wheel(), Wheel(), Wheel()]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Car(object):\n    def __init__(self):\n        self.color = \"red\"\n        self.wheels = [Wheel(), Wheel(), Wheel(), Wheel()]",
        "code_language": "Plain Text"
      }
    ],
    "title": "List multiplication and common references",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}