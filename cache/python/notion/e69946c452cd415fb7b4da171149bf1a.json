{
  "ID": "e69946c4-52cd-415f-b7b4-da171149bf1a",
  "Root": {
    "alive": true,
    "content": [
      "49e37dd1-2418-4b0a-9cf9-b1983d2b0b6c",
      "047c11fd-80f4-44e4-9a81-5ae18dde7aa3",
      "badca566-4f2a-4fc5-9d52-1f6786eb945c",
      "87a70a22-480b-4566-924d-aa48972590da",
      "ac4ed80f-f619-4ff4-a096-c56cd215cbc6",
      "aba4537c-1fc0-45a1-afdd-ac5118222ecd",
      "3be0fec1-07c5-4a62-a5bb-458ad26625ca",
      "09eedc9d-fedd-4bc0-a428-f641378c977e",
      "10033438-e025-48cb-a4d5-b47e06df3427",
      "7c216039-1d7d-40b8-8e22-17b968e2c103",
      "885c017f-1260-4f17-ae2c-f83f3ef2f256",
      "3b1c51a9-ac42-44b5-aff3-93c41b9c1ac3",
      "e3565c62-fc55-4679-8763-6c40d7b13a14",
      "3d61f4db-4ede-49e8-acff-42b79c3773f1",
      "b9de5d86-8227-4678-9e16-33030d7eb7f2",
      "0f112bd0-0fad-4387-837c-6c72f97a36bb",
      "82c40d3e-47ae-4009-ae81-003292a3ebbb",
      "0152429b-6701-4b75-8cca-a317dbbea8fa",
      "58d156c7-fd2d-4c76-8955-9cb978c6a725"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550358641225,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550358660000,
    "parent_id": "8af885bc-9e29-4a5d-bbbe-2fa89f676360",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Adding types to a function"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358641201,
        "id": "49e37dd1-2418-4b0a-9cf9-b1983d2b0b6c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358641201,
        "parent_id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s take an example of a function which receives two arguments and returns a value indicating their sum:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s take an example of a function which receives two arguments and returns a value indicating their sum:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358641204,
        "id": "047c11fd-80f4-44e4-9a81-5ae18dde7aa3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358660000,
        "parent_id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def two_sum(a, b):\n    return a + b"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def two_sum(a, b):\n    return a + b",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358641205,
        "id": "badca566-4f2a-4fc5-9d52-1f6786eb945c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358641205,
        "parent_id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By looking at this code, one can not safely and without doubt indicate the type of the arguments for function "
            ],
            [
              "two_sum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". It works both when supplied with "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " values:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By looking at this code, one can not safely and without doubt indicate the type of the arguments for function "
          },
          {
            "Text": "two_sum",
            "AttrFlags": 2
          },
          {
            "Text": ". It works both when supplied with "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " values:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358641205,
        "id": "87a70a22-480b-4566-924d-aa48972590da",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358660000,
        "parent_id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "print(two_sum(2, 1))  # result: 3"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "print(two_sum(2, 1))  # result: 3",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358641205,
        "id": "ac4ed80f-f619-4ff4-a096-c56cd215cbc6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358641205,
        "parent_id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "and with strings:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "and with strings:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358641205,
        "id": "aba4537c-1fc0-45a1-afdd-ac5118222ecd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358660000,
        "parent_id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "print(two_sum(\"a\", \"b\"))  # result: \"ab\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "print(two_sum(\"a\", \"b\"))  # result: \"ab\"",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358641205,
        "id": "3be0fec1-07c5-4a62-a5bb-458ad26625ca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358641205,
        "parent_id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "and with other values, such as "
            ],
            [
              "list",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s, "
            ],
            [
              "tuple",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s et cetera."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "and with other values, such as "
          },
          {
            "Text": "list",
            "AttrFlags": 2
          },
          {
            "Text": "s, "
          },
          {
            "Text": "tuple",
            "AttrFlags": 2
          },
          {
            "Text": "s et cetera."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358641206,
        "id": "09eedc9d-fedd-4bc0-a428-f641378c977e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358641206,
        "parent_id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Due to this dynamic nature of python types, where many are applicable for a given operation, any type checker would not be able to reasonably assert whether a call for this function should be allowed or not."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Due to this dynamic nature of python types, where many are applicable for a given operation, any type checker would not be able to reasonably assert whether a call for this function should be allowed or not."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358641222,
        "id": "10033438-e025-48cb-a4d5-b47e06df3427",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358641222,
        "parent_id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To assist our type checker we can now provide type hints for it in the Function definition indicating the type that we allow."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To assist our type checker we can now provide type hints for it in the Function definition indicating the type that we allow."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358641222,
        "id": "7c216039-1d7d-40b8-8e22-17b968e2c103",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358641222,
        "parent_id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To indicate that we only want to allow "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " types we can change our function definition to look like:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To indicate that we only want to allow "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " types we can change our function definition to look like:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358641222,
        "id": "885c017f-1260-4f17-ae2c-f83f3ef2f256",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358660000,
        "parent_id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def two_sum(a: int, b: int):\n    return a + b"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def two_sum(a: int, b: int):\n    return a + b",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358641222,
        "id": "3b1c51a9-ac42-44b5-aff3-93c41b9c1ac3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358641222,
        "parent_id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Annotations follow the argument name and are separated by a "
            ],
            [
              ":",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " character."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Annotations follow the argument name and are separated by a "
          },
          {
            "Text": ":",
            "AttrFlags": 2
          },
          {
            "Text": " character."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358641223,
        "id": "e3565c62-fc55-4679-8763-6c40d7b13a14",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358641223,
        "parent_id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Similarly, to indicate only "
            ],
            [
              "str",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " types are allowed, we’d change our function to specify it:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Similarly, to indicate only "
          },
          {
            "Text": "str",
            "AttrFlags": 2
          },
          {
            "Text": " types are allowed, we’d change our function to specify it:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358641223,
        "id": "3d61f4db-4ede-49e8-acff-42b79c3773f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358660000,
        "parent_id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def two_sum(a: str, b: str): \n    return a + b"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def two_sum(a: str, b: str): \n    return a + b",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358641223,
        "id": "b9de5d86-8227-4678-9e16-33030d7eb7f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358641223,
        "parent_id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Apart from specifying the type of the arguments, one could also indicate the return value of a function call. This is done by adding the "
            ],
            [
              "-\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " character followed by the type after the closing parenthesis in the argument list "
            ],
            [
              "but",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " before the "
            ],
            [
              ":",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " at the end of the function declaration:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Apart from specifying the type of the arguments, one could also indicate the return value of a function call. This is done by adding the "
          },
          {
            "Text": "-\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " character followed by the type after the closing parenthesis in the argument list "
          },
          {
            "Text": "but",
            "AttrFlags": 4
          },
          {
            "Text": " before the "
          },
          {
            "Text": ":",
            "AttrFlags": 2
          },
          {
            "Text": " at the end of the function declaration:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358641223,
        "id": "0f112bd0-0fad-4387-837c-6c72f97a36bb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358660000,
        "parent_id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def two_sum(a: int, b: int) -\u003e int: \n    return a + b"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def two_sum(a: int, b: int) -\u003e int: \n    return a + b",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358641224,
        "id": "82c40d3e-47ae-4009-ae81-003292a3ebbb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358641224,
        "parent_id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now we’ve indicated that the return value when calling "
            ],
            [
              "two_sum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " should be of type "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Similarly we can define appropriate values for "
            ],
            [
              "str",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "list",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "set",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and others."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now we’ve indicated that the return value when calling "
          },
          {
            "Text": "two_sum",
            "AttrFlags": 2
          },
          {
            "Text": " should be of type "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ". Similarly we can define appropriate values for "
          },
          {
            "Text": "str",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "list",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "set",
            "AttrFlags": 2
          },
          {
            "Text": " and others."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358641224,
        "id": "0152429b-6701-4b75-8cca-a317dbbea8fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358641224,
        "parent_id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Although type hints are mostly used by type checkers and IDEs, sometimes you may need to retrieve them. This can be done using the "
            ],
            [
              "__annotations__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " special attribute:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Although type hints are mostly used by type checkers and IDEs, sometimes you may need to retrieve them. This can be done using the "
          },
          {
            "Text": "__annotations__",
            "AttrFlags": 2
          },
          {
            "Text": " special attribute:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358641225,
        "id": "58d156c7-fd2d-4c76-8955-9cb978c6a725",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358660000,
        "parent_id": "e69946c4-52cd-415f-b7b4-da171149bf1a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "two_sum.__annotations__\n# {'a': \u003cclass 'int'\u003e, 'b': \u003cclass 'int'\u003e, 'return': \u003cclass 'int'\u003e}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "two_sum.__annotations__\n# {'a': \u003cclass 'int'\u003e, 'b': \u003cclass 'int'\u003e, 'return': \u003cclass 'int'\u003e}",
        "code_language": "Python"
      }
    ],
    "title": "Adding types to a function",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}