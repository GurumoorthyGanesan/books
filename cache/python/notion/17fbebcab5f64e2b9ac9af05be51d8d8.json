{
  "ID": "17fbebca-b5f6-4e2b-9ac9-af05be51d8d8",
  "Root": {
    "alive": true,
    "content": [
      "097ef4ab-2f49-466b-9b91-0f003bb7e63a",
      "cd218e65-f771-4549-87d1-9bcfae4eaca7",
      "df1f3b66-ebb9-45b7-ae39-7a7e5a6a1f37",
      "ea0c3b46-2086-42ea-a08b-d688a9d1adce"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550358567583,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "17fbebca-b5f6-4e2b-9ac9-af05be51d8d8",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550358540000,
    "parent_id": "57a8ac20-fb15-4105-ba66-5e964b980ece",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "What is Python bytecode"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358567580,
        "id": "097ef4ab-2f49-466b-9b91-0f003bb7e63a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358567580,
        "parent_id": "17fbebca-b5f6-4e2b-9ac9-af05be51d8d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Python is a hybrid interpreter. When running a program, it first assembles it into "
            ],
            [
              "bytecode",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " which can then be run in the Python interpreter (also called a "
            ],
            [
              "Python virtual machine",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "). The "
            ],
            [
              "dis",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " module in the standard library can be used to make the Python bytecode human-readable by disassembling classes, methods, functions, and code objects."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Python is a hybrid interpreter. When running a program, it first assembles it into "
          },
          {
            "Text": "bytecode",
            "AttrFlags": 4
          },
          {
            "Text": " which can then be run in the Python interpreter (also called a "
          },
          {
            "Text": "Python virtual machine",
            "AttrFlags": 4
          },
          {
            "Text": "). The "
          },
          {
            "Text": "dis",
            "AttrFlags": 2
          },
          {
            "Text": " module in the standard library can be used to make the Python bytecode human-readable by disassembling classes, methods, functions, and code objects."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358567582,
        "id": "cd218e65-f771-4549-87d1-9bcfae4eaca7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358540000,
        "parent_id": "17fbebca-b5f6-4e2b-9ac9-af05be51d8d8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e def hello():\n...     print \"Hello, World\"\n...\n\u003e\u003e\u003e dis.dis(hello)\n  2           0 LOAD_CONST               1 ('Hello, World')\n              3 PRINT_ITEM\n              4 PRINT_NEWLINE\n              5 LOAD_CONST               0 (None)\n              8 RETURN_VALUE"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e def hello():\n...     print \"Hello, World\"\n...\n\u003e\u003e\u003e dis.dis(hello)\n  2           0 LOAD_CONST               1 ('Hello, World')\n              3 PRINT_ITEM\n              4 PRINT_NEWLINE\n              5 LOAD_CONST               0 (None)\n              8 RETURN_VALUE",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358567582,
        "id": "df1f3b66-ebb9-45b7-ae39-7a7e5a6a1f37",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358567582,
        "parent_id": "17fbebca-b5f6-4e2b-9ac9-af05be51d8d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The Python interpreter is stack-based and uses a first-in last-out system."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The Python interpreter is stack-based and uses a first-in last-out system."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550358567582,
        "id": "ea0c3b46-2086-42ea-a08b-d688a9d1adce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550358567582,
        "parent_id": "17fbebca-b5f6-4e2b-9ac9-af05be51d8d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Each operation code (opcode) in the Python assembly language (the bytecode) takes a fixed number of items from the stack and returns a fixed number of items to the stack. If there aren’t enough items on the stack for an opcode, the Python interpreter will crash, possibly without an error message."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Each operation code (opcode) in the Python assembly language (the bytecode) takes a fixed number of items from the stack and returns a fixed number of items to the stack. If there aren’t enough items on the stack for an opcode, the Python interpreter will crash, possibly without an error message."
          }
        ]
      }
    ],
    "title": "What is Python bytecode",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}