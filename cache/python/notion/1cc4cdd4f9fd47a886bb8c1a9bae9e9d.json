{
  "ID": "1cc4cdd4-f9fd-47a8-86bb-8c1a9bae9e9d",
  "Root": {
    "alive": true,
    "content": [
      "7b137602-a702-4b25-851d-32729affc54b",
      "e58a70a3-4222-484f-bff6-ac5efd807284",
      "a02684d8-c308-4873-bee7-83ee821e31cf",
      "8f1e6a67-9350-4fb0-81ff-13a691134c8b",
      "255974fb-78f9-4b17-9644-50459c14e34f",
      "2608da30-4d4b-449d-8f1a-a39686df4f26",
      "861a6696-8558-42ee-8de2-80620d0148de",
      "9d918ce0-cdd2-445b-8c93-52a368d676cc",
      "b7777fa4-324d-45a4-bdbf-5580cfd159fe",
      "e349cdd4-6258-4eef-8c51-8952bb800fd8",
      "d4d9cfc0-98b0-4cec-a50d-614cb54a001d",
      "ad8e76ed-f24c-40ec-954a-22911e1f1e45",
      "c097b220-23ec-408c-876d-dc92073a2486",
      "3dcdc088-0f98-4245-850d-9ae2e887f09f",
      "4727e84b-2680-434d-ad4b-873eb7783f61"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550389358012,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1cc4cdd4-f9fd-47a8-86bb-8c1a9bae9e9d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550469540000,
    "parent_id": "02086c81-c0ab-4fde-bbcc-a2658d63fb9a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Packing a structure"
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389358008,
        "id": "7b137602-a702-4b25-851d-32729affc54b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389358008,
        "parent_id": "1cc4cdd4-f9fd-47a8-86bb-8c1a9bae9e9d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The module “"
            ],
            [
              "struct",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "” provides facility to pack python objects as contiguous chunk of bytes or dissemble a chunk of bytes to python structures."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The module “"
          },
          {
            "Text": "struct",
            "AttrFlags": 1
          },
          {
            "Text": "” provides facility to pack python objects as contiguous chunk of bytes or dissemble a chunk of bytes to python structures."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389358011,
        "id": "e58a70a3-4222-484f-bff6-ac5efd807284",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389358011,
        "parent_id": "1cc4cdd4-f9fd-47a8-86bb-8c1a9bae9e9d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The pack function takes a format string and one or more arguments, and returns a binary string. This looks very much like you are formatting a string except that the output is not a string but a chunk of bytes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The pack function takes a format string and one or more arguments, and returns a binary string. This looks very much like you are formatting a string except that the output is not a string but a chunk of bytes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389358011,
        "id": "a02684d8-c308-4873-bee7-83ee821e31cf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389358011,
        "parent_id": "1cc4cdd4-f9fd-47a8-86bb-8c1a9bae9e9d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import struct\nimport sys\nprint \"Native byteorder: \", sys.byteorder\n# If no byteorder is specified, native byteorder is used\nbuffer = struct.pack(\"ihb\", 3, 4, 5)\nprint \"Byte chunk: \", repr(buffer)\nprint \"Byte chunk unpacked: \", struct.unpack(\"ihb\", buffer)\n# Last element as unsigned short instead of unsigned char ( 2 Bytes)\nbuffer = struct.pack(\"ihh\", 3, 4, 5)\nprint \"Byte chunk: \", repr(buffer)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import struct\nimport sys\nprint \"Native byteorder: \", sys.byteorder\n# If no byteorder is specified, native byteorder is used\nbuffer = struct.pack(\"ihb\", 3, 4, 5)\nprint \"Byte chunk: \", repr(buffer)\nprint \"Byte chunk unpacked: \", struct.unpack(\"ihb\", buffer)\n# Last element as unsigned short instead of unsigned char ( 2 Bytes)\nbuffer = struct.pack(\"ihh\", 3, 4, 5)\nprint \"Byte chunk: \", repr(buffer)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389358011,
        "id": "8f1e6a67-9350-4fb0-81ff-13a691134c8b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389358011,
        "parent_id": "1cc4cdd4-f9fd-47a8-86bb-8c1a9bae9e9d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389358011,
        "id": "255974fb-78f9-4b17-9644-50459c14e34f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389358011,
        "parent_id": "1cc4cdd4-f9fd-47a8-86bb-8c1a9bae9e9d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Native byteorder: little Byte chunk: ‘\\x03\\x00\\x00\\x00\\x04\\x00\\x05’ Byte chunk unpacked: (3, 4, 5) Byte chunk: ‘\\x03\\x00\\x00\\x00\\x04\\x00\\x05\\x00’"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Native byteorder: little Byte chunk: ‘\\x03\\x00\\x00\\x00\\x04\\x00\\x05’ Byte chunk unpacked: (3, 4, 5) Byte chunk: ‘\\x03\\x00\\x00\\x00\\x04\\x00\\x05\\x00’"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389358011,
        "id": "2608da30-4d4b-449d-8f1a-a39686df4f26",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389358011,
        "parent_id": "1cc4cdd4-f9fd-47a8-86bb-8c1a9bae9e9d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You could use network byte order with data received from network or pack data to send it to network."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You could use network byte order with data received from network or pack data to send it to network."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389358011,
        "id": "861a6696-8558-42ee-8de2-80620d0148de",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389358011,
        "parent_id": "1cc4cdd4-f9fd-47a8-86bb-8c1a9bae9e9d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import struct\n# If no byteorder is specified, native byteorder is used\nbuffer = struct.pack(\"hhh\", 3, 4, 5)\nprint \"Byte chunk native byte order: \", repr(buffer)\nbuffer = struct.pack(\"!hhh\", 3, 4, 5)\nprint \"Byte chunk network byte order: \", repr(buffer)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import struct\n# If no byteorder is specified, native byteorder is used\nbuffer = struct.pack(\"hhh\", 3, 4, 5)\nprint \"Byte chunk native byte order: \", repr(buffer)\nbuffer = struct.pack(\"!hhh\", 3, 4, 5)\nprint \"Byte chunk network byte order: \", repr(buffer)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389358011,
        "id": "9d918ce0-cdd2-445b-8c93-52a368d676cc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389358011,
        "parent_id": "1cc4cdd4-f9fd-47a8-86bb-8c1a9bae9e9d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389358012,
        "id": "b7777fa4-324d-45a4-bdbf-5580cfd159fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389358012,
        "parent_id": "1cc4cdd4-f9fd-47a8-86bb-8c1a9bae9e9d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Byte chunk native byte order: ‘\\x03\\x00\\x04\\x00\\x05\\x00’"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Byte chunk native byte order: ‘\\x03\\x00\\x04\\x00\\x05\\x00’"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389358012,
        "id": "e349cdd4-6258-4eef-8c51-8952bb800fd8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389358012,
        "parent_id": "1cc4cdd4-f9fd-47a8-86bb-8c1a9bae9e9d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Byte chunk network byte order: ‘\\x00\\x03\\x00\\x04\\x00\\x05’"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Byte chunk network byte order: ‘\\x00\\x03\\x00\\x04\\x00\\x05’"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389358012,
        "id": "d4d9cfc0-98b0-4cec-a50d-614cb54a001d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389358012,
        "parent_id": "1cc4cdd4-f9fd-47a8-86bb-8c1a9bae9e9d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can optimize by avoiding the overhead of allocating a new buffer by providing a buffer that was created earlier."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can optimize by avoiding the overhead of allocating a new buffer by providing a buffer that was created earlier."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389358012,
        "id": "ad8e76ed-f24c-40ec-954a-22911e1f1e45",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389358012,
        "parent_id": "1cc4cdd4-f9fd-47a8-86bb-8c1a9bae9e9d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import struct\nfrom ctypes import create_string_buffer\nbufferVar = create_string_buffer(8)\nbufferVar2 = create_string_buffer(8)\n# We use a buffer that has already been created\n# provide format, buffer, offset and data\nstruct.pack_into(\"hhh\", bufferVar, 0, 3, 4, 5)\nprint \"Byte chunk: \", repr(bufferVar.raw)\nstruct.pack_into(\"hhh\", bufferVar2, 2, 3, 4, 5)\nprint \"Byte chunk: \", repr(bufferVar2.raw)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import struct\nfrom ctypes import create_string_buffer\nbufferVar = create_string_buffer(8)\nbufferVar2 = create_string_buffer(8)\n# We use a buffer that has already been created\n# provide format, buffer, offset and data\nstruct.pack_into(\"hhh\", bufferVar, 0, 3, 4, 5)\nprint \"Byte chunk: \", repr(bufferVar.raw)\nstruct.pack_into(\"hhh\", bufferVar2, 2, 3, 4, 5)\nprint \"Byte chunk: \", repr(bufferVar2.raw)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389358012,
        "id": "c097b220-23ec-408c-876d-dc92073a2486",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389358012,
        "parent_id": "1cc4cdd4-f9fd-47a8-86bb-8c1a9bae9e9d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389358012,
        "id": "3dcdc088-0f98-4245-850d-9ae2e887f09f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389358012,
        "parent_id": "1cc4cdd4-f9fd-47a8-86bb-8c1a9bae9e9d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Byte chunk: ‘\\x03\\x00\\x04\\x00\\x05\\x00\\x00\\x00’"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Byte chunk: ‘\\x03\\x00\\x04\\x00\\x05\\x00\\x00\\x00’"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389358012,
        "id": "4727e84b-2680-434d-ad4b-873eb7783f61",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389358012,
        "parent_id": "1cc4cdd4-f9fd-47a8-86bb-8c1a9bae9e9d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Byte chunk: ‘\\x00\\x00\\x03\\x00\\x04\\x00\\x05\\x00’"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Byte chunk: ‘\\x00\\x00\\x03\\x00\\x04\\x00\\x05\\x00’"
          }
        ]
      }
    ],
    "title": "Packing a structure",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}