{
  "ID": "da6ef41f-0102-470b-9112-fef86642ba1b",
  "Root": {
    "alive": true,
    "content": [
      "df397dad-7940-4f4c-947a-24054e65dc48",
      "6d529661-f5f5-4435-a7fc-617c6f6e0956",
      "507859cd-1dc2-4b6e-93bb-39ae1ebf9266",
      "2d53dd2b-8e38-44de-9342-6d28a95850f5",
      "3ab09458-e60a-485d-9c0e-f6b7809dd1a7",
      "a558fdbe-9a83-4740-9751-717824fea933",
      "1c3d74af-142c-4fd9-96d1-bbe3154e0f6e",
      "b7c2c8e3-576e-4bec-a730-518061bf9fe2",
      "1916a294-20eb-4096-bf24-34b62475ac94",
      "55c945dc-06f4-4f99-899d-06e9fa1c3db6",
      "e6502b87-d0b4-495a-b8d2-df65ef828f18",
      "89048b61-6697-40c8-a3bb-d8c72d011375",
      "7280d3c3-ee11-444a-947e-1b022f69f5ff"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550310388829,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "da6ef41f-0102-470b-9112-fef86642ba1b",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550310480000,
    "parent_id": "6b99d971-0b0a-4277-b11a-b8a0a2e65767",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Avoiding KeyError Exceptions"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310388825,
        "id": "df397dad-7940-4f4c-947a-24054e65dc48",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310388825,
        "parent_id": "da6ef41f-0102-470b-9112-fef86642ba1b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One common pitfall when using dictionaries is to access a non-existent key. This typically results in a "
            ],
            [
              "KeyError",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " exception"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One common pitfall when using dictionaries is to access a non-existent key. This typically results in a "
          },
          {
            "Text": "KeyError",
            "AttrFlags": 2
          },
          {
            "Text": " exception"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310388827,
        "id": "6d529661-f5f5-4435-a7fc-617c6f6e0956",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310480000,
        "parent_id": "da6ef41f-0102-470b-9112-fef86642ba1b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "mydict = {}\nmydict['not there']"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "mydict = {}\nmydict['not there']",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310388827,
        "id": "507859cd-1dc2-4b6e-93bb-39ae1ebf9266",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310480000,
        "parent_id": "da6ef41f-0102-470b-9112-fef86642ba1b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "Traceback (most recent call last):\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\nKeyError: 'not there'"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "Traceback (most recent call last):\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\nKeyError: 'not there'",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310388827,
        "id": "2d53dd2b-8e38-44de-9342-6d28a95850f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310388827,
        "parent_id": "da6ef41f-0102-470b-9112-fef86642ba1b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One way to avoid key errors is to use the "
            ],
            [
              "dict.get",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method, which allows you to specify a default value to return in the case of an absent key."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One way to avoid key errors is to use the "
          },
          {
            "Text": "dict.get",
            "AttrFlags": 2
          },
          {
            "Text": " method, which allows you to specify a default value to return in the case of an absent key."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310388828,
        "id": "3ab09458-e60a-485d-9c0e-f6b7809dd1a7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310480000,
        "parent_id": "da6ef41f-0102-470b-9112-fef86642ba1b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "value = mydict.get(key, default_value)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "value = mydict.get(key, default_value)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310388828,
        "id": "a558fdbe-9a83-4740-9751-717824fea933",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310388828,
        "parent_id": "da6ef41f-0102-470b-9112-fef86642ba1b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Which returns "
            ],
            [
              "mydict[key]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if it exists, but otherwise returns "
            ],
            [
              "default_value",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Note that this doesn’t add "
            ],
            [
              "key",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "mydict",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". So if you want to retain that key value pair, you should use "
            ],
            [
              "mydict.setdefault(key, default_value)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which "
            ],
            [
              "does",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " store the key value pair."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Which returns "
          },
          {
            "Text": "mydict[key]",
            "AttrFlags": 2
          },
          {
            "Text": " if it exists, but otherwise returns "
          },
          {
            "Text": "default_value",
            "AttrFlags": 2
          },
          {
            "Text": ". Note that this doesn’t add "
          },
          {
            "Text": "key",
            "AttrFlags": 2
          },
          {
            "Text": " to "
          },
          {
            "Text": "mydict",
            "AttrFlags": 2
          },
          {
            "Text": ". So if you want to retain that key value pair, you should use "
          },
          {
            "Text": "mydict.setdefault(key, default_value)",
            "AttrFlags": 2
          },
          {
            "Text": ", which "
          },
          {
            "Text": "does",
            "AttrFlags": 4
          },
          {
            "Text": " store the key value pair."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310388828,
        "id": "1c3d74af-142c-4fd9-96d1-bbe3154e0f6e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310480000,
        "parent_id": "da6ef41f-0102-470b-9112-fef86642ba1b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "mydict = {}\nprint(mydict)\n# {}\nprint(mydict.get(\"foo\", \"bar\"))\n# bar\nprint(mydict)\n# {}\nprint(mydict.setdefault(\"foo\", \"bar\"))\n# bar\nprint(mydict)\n# {'foo': 'bar'}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "mydict = {}\nprint(mydict)\n# {}\nprint(mydict.get(\"foo\", \"bar\"))\n# bar\nprint(mydict)\n# {}\nprint(mydict.setdefault(\"foo\", \"bar\"))\n# bar\nprint(mydict)\n# {'foo': 'bar'}",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310388828,
        "id": "b7c2c8e3-576e-4bec-a730-518061bf9fe2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310388828,
        "parent_id": "da6ef41f-0102-470b-9112-fef86642ba1b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An alternative way to deal with the problem is catching the exception"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An alternative way to deal with the problem is catching the exception"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310388828,
        "id": "1916a294-20eb-4096-bf24-34b62475ac94",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310480000,
        "parent_id": "da6ef41f-0102-470b-9112-fef86642ba1b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "try:\n    value = mydict[key]\nexcept KeyError:\n    value = default_value"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "try:\n    value = mydict[key]\nexcept KeyError:\n    value = default_value",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310388828,
        "id": "55c945dc-06f4-4f99-899d-06e9fa1c3db6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310388828,
        "parent_id": "da6ef41f-0102-470b-9112-fef86642ba1b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You could also check if the key is "
            ],
            [
              "in",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " the dictionary."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You could also check if the key is "
          },
          {
            "Text": "in",
            "AttrFlags": 2
          },
          {
            "Text": " the dictionary."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310388829,
        "id": "e6502b87-d0b4-495a-b8d2-df65ef828f18",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310480000,
        "parent_id": "da6ef41f-0102-470b-9112-fef86642ba1b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "if key in mydict:\n    value = mydict[key]\nelse:\n    value = default_value"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "if key in mydict:\n    value = mydict[key]\nelse:\n    value = default_value",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310388829,
        "id": "89048b61-6697-40c8-a3bb-d8c72d011375",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310388829,
        "parent_id": "da6ef41f-0102-470b-9112-fef86642ba1b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Do note, however, that in multi-threaded environments it is possible for the key to be removed from the dictionary after you check, creating a race condition where the exception can still be thrown."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Do note, however, that in multi-threaded environments it is possible for the key to be removed from the dictionary after you check, creating a race condition where the exception can still be thrown."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310388829,
        "id": "7280d3c3-ee11-444a-947e-1b022f69f5ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310388829,
        "parent_id": "da6ef41f-0102-470b-9112-fef86642ba1b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another option is to use a subclass of dict, collections.defaultdict, that has a default_factory to create new entries in the dict when given a new_key."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another option is to use a subclass of dict, collections.defaultdict, that has a default_factory to create new entries in the dict when given a new_key."
          }
        ]
      }
    ],
    "title": "Avoiding KeyError Exceptions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}