{
  "ID": "cbe553b8-3f3e-472a-952c-18e6dded5ba7",
  "Root": {
    "alive": true,
    "content": [
      "b7a76bd9-b128-4118-a118-beac10aef255",
      "ab18def8-0104-49be-a150-64456e9c42ee",
      "98464310-316e-4701-b2bf-2770bff560ae",
      "0e2841e7-3170-4363-baca-b70bcadedaff",
      "32a3c500-593c-4e24-9343-6adb913e7e4d",
      "efda1980-2162-4abf-8929-6b2f976fd53f",
      "37dd98ad-a539-4daf-a1ee-d2972c7d7f16",
      "314cd5f8-24b4-4fe2-ac42-fa1d1c85898f",
      "61cfcd3d-86da-4b7f-bb8c-f08f846000d4"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550308267687,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "cbe553b8-3f3e-472a-952c-18e6dded5ba7",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550308440000,
    "parent_id": "a27718c5-df77-4fd4-b80b-880f0a024099",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Mapping each value in an iterable"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308267683,
        "id": "b7a76bd9-b128-4118-a118-beac10aef255",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308267683,
        "parent_id": "cbe553b8-3f3e-472a-952c-18e6dded5ba7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example, you can take the absolute value of each element:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example, you can take the absolute value of each element:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308267686,
        "id": "ab18def8-0104-49be-a150-64456e9c42ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308380000,
        "parent_id": "cbe553b8-3f3e-472a-952c-18e6dded5ba7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "list(map(abs, (1, -1, 2, -2, 3, -3))) # the call to `list` is unnecessary in 2.x\n# Out: [1, 1, 2, 2, 3, 3]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "list(map(abs, (1, -1, 2, -2, 3, -3))) # the call to `list` is unnecessary in 2.x\n# Out: [1, 1, 2, 2, 3, 3]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308267686,
        "id": "98464310-316e-4701-b2bf-2770bff560ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308267686,
        "parent_id": "cbe553b8-3f3e-472a-952c-18e6dded5ba7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Anonymous function also support for mapping a list:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Anonymous function also support for mapping a list:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308267686,
        "id": "0e2841e7-3170-4363-baca-b70bcadedaff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308440000,
        "parent_id": "cbe553b8-3f3e-472a-952c-18e6dded5ba7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "map(lambda x:x*2, [1, 2, 3, 4, 5])\n# Out: [2, 4, 6, 8, 10]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "map(lambda x:x*2, [1, 2, 3, 4, 5])\n# Out: [2, 4, 6, 8, 10]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308267686,
        "id": "32a3c500-593c-4e24-9343-6adb913e7e4d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308267686,
        "parent_id": "cbe553b8-3f3e-472a-952c-18e6dded5ba7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "or converting decimal values to percentages:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "or converting decimal values to percentages:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308267686,
        "id": "efda1980-2162-4abf-8929-6b2f976fd53f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308440000,
        "parent_id": "cbe553b8-3f3e-472a-952c-18e6dded5ba7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def to_percent(num):\n    return num * 100\n\nlist(map(to_percent, [0.95, 0.75, 1.01, 0.1]))\n# Out: [95.0, 75.0, 101.0, 10.0]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def to_percent(num):\n    return num * 100\n\nlist(map(to_percent, [0.95, 0.75, 1.01, 0.1]))\n# Out: [95.0, 75.0, 101.0, 10.0]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308267686,
        "id": "37dd98ad-a539-4daf-a1ee-d2972c7d7f16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308267686,
        "parent_id": "cbe553b8-3f3e-472a-952c-18e6dded5ba7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "or converting dollars to euros (given an exchange rate):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "or converting dollars to euros (given an exchange rate):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308267686,
        "id": "314cd5f8-24b4-4fe2-ac42-fa1d1c85898f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308440000,
        "parent_id": "cbe553b8-3f3e-472a-952c-18e6dded5ba7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "from functools import partial\nfrom operator import mul\n\nrate = 0.9  # fictitious exchange rate, 1 dollar = 0.9 euros\ndollars = {'under_my_bed': 1000,\n           'jeans': 45,\n           'bank': 5000}\n\nsum(map(partial(mul, rate), dollars.values()))\n# Out: 5440.5"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "from functools import partial\nfrom operator import mul\n\nrate = 0.9  # fictitious exchange rate, 1 dollar = 0.9 euros\ndollars = {'under_my_bed': 1000,\n           'jeans': 45,\n           'bank': 5000}\n\nsum(map(partial(mul, rate), dollars.values()))\n# Out: 5440.5",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308267686,
        "id": "61cfcd3d-86da-4b7f-bb8c-f08f846000d4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308267687,
        "parent_id": "cbe553b8-3f3e-472a-952c-18e6dded5ba7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "functools.partial",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a convenient way to fix parameters of functions so that they can be used with "
            ],
            [
              "map",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instead of using "
            ],
            [
              "lambda",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or creating customized functions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "functools.partial",
            "AttrFlags": 2
          },
          {
            "Text": " is a convenient way to fix parameters of functions so that they can be used with "
          },
          {
            "Text": "map",
            "AttrFlags": 2
          },
          {
            "Text": " instead of using "
          },
          {
            "Text": "lambda",
            "AttrFlags": 2
          },
          {
            "Text": " or creating customized functions."
          }
        ]
      }
    ],
    "title": "Mapping each value in an iterable",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}