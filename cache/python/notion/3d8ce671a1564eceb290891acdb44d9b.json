{
  "ID": "3d8ce671-a156-4ece-b290-891acdb44d9b",
  "Root": {
    "alive": true,
    "content": [
      "70f931db-4d4f-4ff3-8c6f-46d34ef27be0",
      "691dd16e-f829-4805-9a46-67bd97018707",
      "b0ba0569-5a35-4f7f-8c26-c69726015c0a",
      "2979baa0-ef4a-4f4d-8690-064b3fef161a",
      "4e322c4c-9576-4eaf-a06b-15b3426426d8",
      "1829510a-22c4-4c50-b782-2469b3e82acb",
      "e3a3712b-a10c-4d1a-80e7-bfc723957419",
      "55424996-e069-47d6-9279-f697774a8edd",
      "2552e621-cb26-4ae4-9846-d410e8ce0ef4",
      "092ec6d7-7497-4b6f-9cde-290f33b6f7b3",
      "ecc99898-d4b8-483c-9e62-2831b8cc9d19"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550261084270,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "3d8ce671-a156-4ece-b290-891acdb44d9b",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550262240000,
    "parent_id": "e895cb09-a4b0-4965-a04d-695253fcf7c6",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Defining a function with optional mutable arguments"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261084267,
        "id": "70f931db-4d4f-4ff3-8c6f-46d34ef27be0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261084267,
        "parent_id": "3d8ce671-a156-4ece-b290-891acdb44d9b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There is a problem when using "
            ],
            [
              "optional arguments",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " with a "
            ],
            [
              "mutable default type",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " (described in "
            ],
            [
              "Defining a function with optional arguments",
              [
                [
                  "a",
                  "https://stackoverflow.com/documentation/python/228/functions/930/defining-a-function-with-optional-arguments"
                ]
              ]
            ],
            [
              "), which can potentially lead to unexpected behaviour."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There is a problem when using "
          },
          {
            "Text": "optional arguments",
            "AttrFlags": 1
          },
          {
            "Text": " with a "
          },
          {
            "Text": "mutable default type",
            "AttrFlags": 1
          },
          {
            "Text": " (described in "
          },
          {
            "Text": "Defining a function with optional arguments",
            "Link": "https://stackoverflow.com/documentation/python/228/functions/930/defining-a-function-with-optional-arguments"
          },
          {
            "Text": "), which can potentially lead to unexpected behaviour."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261084268,
        "id": "691dd16e-f829-4805-9a46-67bd97018707",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261084268,
        "parent_id": "3d8ce671-a156-4ece-b290-891acdb44d9b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Explanation"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Explanation"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261084268,
        "id": "b0ba0569-5a35-4f7f-8c26-c69726015c0a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261084268,
        "parent_id": "3d8ce671-a156-4ece-b290-891acdb44d9b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This problem arises because a function’s default arguments are initialised "
            ],
            [
              "once",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", at the point when the function is "
            ],
            [
              "defined",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", and "
            ],
            [
              "not",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " (like many other languages) when the function is "
            ],
            [
              "called",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". The default values are stored inside the function object’s "
            ],
            [
              "__defaults__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " member variable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This problem arises because a function’s default arguments are initialised "
          },
          {
            "Text": "once",
            "AttrFlags": 1
          },
          {
            "Text": ", at the point when the function is "
          },
          {
            "Text": "defined",
            "AttrFlags": 4
          },
          {
            "Text": ", and "
          },
          {
            "Text": "not",
            "AttrFlags": 1
          },
          {
            "Text": " (like many other languages) when the function is "
          },
          {
            "Text": "called",
            "AttrFlags": 4
          },
          {
            "Text": ". The default values are stored inside the function object’s "
          },
          {
            "Text": "__defaults__",
            "AttrFlags": 2
          },
          {
            "Text": " member variable."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261084268,
        "id": "2979baa0-ef4a-4f4d-8690-064b3fef161a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262180000,
        "parent_id": "3d8ce671-a156-4ece-b290-891acdb44d9b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def f(a, b=42, c=[]):\n    pass\n\nprint(f.__defaults__)\n# Out: (42, [])"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def f(a, b=42, c=[]):\n    pass\n\nprint(f.__defaults__)\n# Out: (42, [])",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261084269,
        "id": "4e322c4c-9576-4eaf-a06b-15b3426426d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261084269,
        "parent_id": "3d8ce671-a156-4ece-b290-891acdb44d9b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For "
            ],
            [
              "immutable",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " types (see "
            ],
            [
              "Argument passing and mutability",
              [
                [
                  "a",
                  "https://stackoverflow.com/documentation/python/228/functions/2920/argument-passing-and-mutability"
                ]
              ]
            ],
            [
              ") this is not a problem because there is no way to mutate the variable; it can only ever be reassigned, leaving the original value unchanged. Hence, subsequent are guaranteed to have the same default value. However, for a "
            ],
            [
              "mutable",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " type, the original value can mutate, by making calls to its various member functions. Therefore, successive calls to the function are not guaranteed to have the initial default value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For "
          },
          {
            "Text": "immutable",
            "AttrFlags": 1
          },
          {
            "Text": " types (see "
          },
          {
            "Text": "Argument passing and mutability",
            "Link": "https://stackoverflow.com/documentation/python/228/functions/2920/argument-passing-and-mutability"
          },
          {
            "Text": ") this is not a problem because there is no way to mutate the variable; it can only ever be reassigned, leaving the original value unchanged. Hence, subsequent are guaranteed to have the same default value. However, for a "
          },
          {
            "Text": "mutable",
            "AttrFlags": 1
          },
          {
            "Text": " type, the original value can mutate, by making calls to its various member functions. Therefore, successive calls to the function are not guaranteed to have the initial default value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261084269,
        "id": "1829510a-22c4-4c50-b782-2469b3e82acb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262240000,
        "parent_id": "3d8ce671-a156-4ece-b290-891acdb44d9b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def append(elem, to=[]):\n    to.append(elem)      # This call to append() mutates the default variable \"to\"\n    return to\n\nappend(1)\n# Out: [1]\n\nappend(2)  # Appends it to the internally stored list\n# Out: [1, 2]\n\nappend(3, [])  # Using a new created list gives the expected result\n# Out: [3]\n\n# Calling it again without argument will append to the internally stored list again\nappend(4)   \n# Out: [1, 2, 4]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def append(elem, to=[]):\n    to.append(elem)      # This call to append() mutates the default variable \"to\"\n    return to\n\nappend(1)\n# Out: [1]\n\nappend(2)  # Appends it to the internally stored list\n# Out: [1, 2]\n\nappend(3, [])  # Using a new created list gives the expected result\n# Out: [3]\n\n# Calling it again without argument will append to the internally stored list again\nappend(4)   \n# Out: [1, 2, 4]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261084269,
        "id": "e3a3712b-a10c-4d1a-80e7-bfc723957419",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261084269,
        "parent_id": "3d8ce671-a156-4ece-b290-891acdb44d9b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: Some IDEs like PyCharm will issue a warning when a mutable type is specified as a default attribute."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: Some IDEs like PyCharm will issue a warning when a mutable type is specified as a default attribute."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261084269,
        "id": "55424996-e069-47d6-9279-f697774a8edd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261084269,
        "parent_id": "3d8ce671-a156-4ece-b290-891acdb44d9b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Solution"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Solution"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261084269,
        "id": "2552e621-cb26-4ae4-9846-d410e8ce0ef4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261084269,
        "parent_id": "3d8ce671-a156-4ece-b290-891acdb44d9b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you want to ensure that the default argument is always the one you specify in the function definition, then the solution is to "
            ],
            [
              "always",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " use an immutable type as your default argument."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you want to ensure that the default argument is always the one you specify in the function definition, then the solution is to "
          },
          {
            "Text": "always",
            "AttrFlags": 1
          },
          {
            "Text": " use an immutable type as your default argument."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261084269,
        "id": "092ec6d7-7497-4b6f-9cde-290f33b6f7b3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261084269,
        "parent_id": "3d8ce671-a156-4ece-b290-891acdb44d9b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A common idiom to achieve this when a mutable type is needed as the default, is to use "
            ],
            [
              "None",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (immutable) as the default argument and then assign the actual default value to the argument variable if it is equal to "
            ],
            [
              "None",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A common idiom to achieve this when a mutable type is needed as the default, is to use "
          },
          {
            "Text": "None",
            "AttrFlags": 2
          },
          {
            "Text": " (immutable) as the default argument and then assign the actual default value to the argument variable if it is equal to "
          },
          {
            "Text": "None",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261084270,
        "id": "ecc99898-d4b8-483c-9e62-2831b8cc9d19",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262240000,
        "parent_id": "3d8ce671-a156-4ece-b290-891acdb44d9b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def append(elem, to=None):\n    if to is None:\n        to = []\n\n    to.append(elem)\n    return to"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def append(elem, to=None):\n    if to is None:\n        to = []\n\n    to.append(elem)\n    return to",
        "code_language": "Python"
      }
    ],
    "title": "Defining a function with optional mutable arguments",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}