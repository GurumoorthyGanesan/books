{
  "ID": "f292af99-1ba9-4d6b-a5be-8d2357d7de00",
  "Root": {
    "alive": true,
    "content": [
      "dff97c79-ee82-46a6-93fa-9e8141b06bfc",
      "6ab43454-86f2-437d-9f07-52d7b5c59244",
      "ee26a34a-99c4-46d1-81bf-6791bc023b9e",
      "ffed4665-cda3-47d8-b1db-b0f448535851",
      "cead71e9-b129-400c-a066-ebe1edbaf73f",
      "51629a11-9360-4671-a589-022e7a8cb385",
      "8a3a4b61-ac44-4362-becd-ea083157defb",
      "ac786595-3ea9-4068-ae46-6a54a324039a",
      "d9192909-d96f-4390-aa0a-705895ac75a2",
      "4c1c358a-6568-4cfb-b0c8-3c2d9f8db7b8",
      "f9890cc7-5aa6-4653-8341-72a7d4b6094a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550389319181,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "f292af99-1ba9-4d6b-a5be-8d2357d7de00",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550469480000,
    "parent_id": "0948c7f9-eb2d-4bcd-a594-61f186fbde1b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using Pickle to serialize and deserialize an object"
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389319177,
        "id": "dff97c79-ee82-46a6-93fa-9e8141b06bfc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389319177,
        "parent_id": "f292af99-1ba9-4d6b-a5be-8d2357d7de00",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "pickle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " module implements an algorithm for turning an arbitrary Python object into a series of bytes. This process is also called "
            ],
            [
              "serializing",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " the object. The byte stream representing the object can then be transmitted or stored, and later reconstructed to create a new object with the same characteristics."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "pickle",
            "AttrFlags": 2
          },
          {
            "Text": " module implements an algorithm for turning an arbitrary Python object into a series of bytes. This process is also called "
          },
          {
            "Text": "serializing",
            "AttrFlags": 1
          },
          {
            "Text": " the object. The byte stream representing the object can then be transmitted or stored, and later reconstructed to create a new object with the same characteristics."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389319180,
        "id": "6ab43454-86f2-437d-9f07-52d7b5c59244",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389319180,
        "parent_id": "f292af99-1ba9-4d6b-a5be-8d2357d7de00",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For the simplest code, we use the "
            ],
            [
              "dump()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "load()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " functions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For the simplest code, we use the "
          },
          {
            "Text": "dump()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "load()",
            "AttrFlags": 2
          },
          {
            "Text": " functions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389319180,
        "id": "ee26a34a-99c4-46d1-81bf-6791bc023b9e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389319180,
        "parent_id": "f292af99-1ba9-4d6b-a5be-8d2357d7de00",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To serialize the object"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "To serialize the object"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389319180,
        "id": "ffed4665-cda3-47d8-b1db-b0f448535851",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389319180,
        "parent_id": "f292af99-1ba9-4d6b-a5be-8d2357d7de00",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import pickle\n\n# An arbitrary collection of objects supported by pickle.\ndata = {\n    'a': [1, 2.0, 3, 4+6j],\n    'b': (\"character string\", b\"byte string\"),\n    'c': {None, True, False}\n}\n\nwith open('data.pickle', 'wb') as f:\n    # Pickle the 'data' dictionary using the highest protocol available.\n    pickle.dump(data, f, pickle.HIGHEST_PROTOCOL)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import pickle\n\n# An arbitrary collection of objects supported by pickle.\ndata = {\n    'a': [1, 2.0, 3, 4+6j],\n    'b': (\"character string\", b\"byte string\"),\n    'c': {None, True, False}\n}\n\nwith open('data.pickle', 'wb') as f:\n    # Pickle the 'data' dictionary using the highest protocol available.\n    pickle.dump(data, f, pickle.HIGHEST_PROTOCOL)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389319181,
        "id": "cead71e9-b129-400c-a066-ebe1edbaf73f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389319181,
        "parent_id": "f292af99-1ba9-4d6b-a5be-8d2357d7de00",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389319181,
        "id": "51629a11-9360-4671-a589-022e7a8cb385",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389319181,
        "parent_id": "f292af99-1ba9-4d6b-a5be-8d2357d7de00",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To deserialize the object"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "To deserialize the object"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389319181,
        "id": "8a3a4b61-ac44-4362-becd-ea083157defb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389319181,
        "parent_id": "f292af99-1ba9-4d6b-a5be-8d2357d7de00",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import pickle\n\nwith open('data.pickle', 'rb') as f:\n    # The protocol version used is detected automatically, so we do not\n    # have to specify it.\n    data = pickle.load(f)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import pickle\n\nwith open('data.pickle', 'rb') as f:\n    # The protocol version used is detected automatically, so we do not\n    # have to specify it.\n    data = pickle.load(f)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389319181,
        "id": "ac786595-3ea9-4068-ae46-6a54a324039a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389319181,
        "parent_id": "f292af99-1ba9-4d6b-a5be-8d2357d7de00",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389319181,
        "id": "d9192909-d96f-4390-aa0a-705895ac75a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389319181,
        "parent_id": "f292af99-1ba9-4d6b-a5be-8d2357d7de00",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using pickle and byte objects"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using pickle and byte objects"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389319181,
        "id": "4c1c358a-6568-4cfb-b0c8-3c2d9f8db7b8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389319181,
        "parent_id": "f292af99-1ba9-4d6b-a5be-8d2357d7de00",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is also possible to serialize into and deserialize out of byte objects, using the "
            ],
            [
              "dumps",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "loads",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function, which are equivalent to "
            ],
            [
              "dump",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "load",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is also possible to serialize into and deserialize out of byte objects, using the "
          },
          {
            "Text": "dumps",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "loads",
            "AttrFlags": 2
          },
          {
            "Text": " function, which are equivalent to "
          },
          {
            "Text": "dump",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "load",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389319181,
        "id": "f9890cc7-5aa6-4653-8341-72a7d4b6094a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389319181,
        "parent_id": "f292af99-1ba9-4d6b-a5be-8d2357d7de00",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "serialized_data = pickle.dumps(data, pickle.HIGHEST_PROTOCOL)\n# type(serialized_data) is bytes\n\ndeserialized_data = pickle.loads(serialized_data)\n# deserialized_data == data"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "serialized_data = pickle.dumps(data, pickle.HIGHEST_PROTOCOL)\n# type(serialized_data) is bytes\n\ndeserialized_data = pickle.loads(serialized_data)\n# deserialized_data == data",
        "code_language": "Plain Text"
      }
    ],
    "title": "Using Pickle to serialize and deserialize an object",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}