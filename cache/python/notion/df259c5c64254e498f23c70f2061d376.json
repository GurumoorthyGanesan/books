{
  "ID": "df259c5c-6425-4e49-8f23-c70f2061d376",
  "Root": {
    "alive": true,
    "content": [
      "382a4829-45d9-46b5-86b5-5bd1e450bf76",
      "dfcd5418-da92-4783-9746-b18199116ec5",
      "69f12fe3-5893-41dd-8031-a309f977aab2",
      "84138bac-f8d5-4cff-99e5-8ff77a1b71fc",
      "ca473fea-d866-417a-afee-bea3c6a10811",
      "e528e862-487e-41e4-80e1-9f9893e600ae",
      "bd8c62dd-b2d8-4500-81be-f378712e886f",
      "86421c97-8ae4-4c50-a09f-43e9349519a4",
      "076b8cbc-c559-43a0-89e0-61c330f73176",
      "d8163919-c9aa-40de-83ce-e474bb725492",
      "97e33188-647c-41cb-818b-1d44233a174e",
      "2a573f59-a362-42cd-95eb-dda86f0ce017"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550346205790,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "df259c5c-6425-4e49-8f23-c70f2061d376",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550346240000,
    "parent_id": "8e5d1469-2131-40f5-80a1-37775f6a92bf",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "C Extension Using c and Boost"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550346205788,
        "id": "382a4829-45d9-46b5-86b5-5bd1e450bf76",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550346205788,
        "parent_id": "df259c5c-6425-4e49-8f23-c70f2061d376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is a basic example of a "
            ],
            [
              "C Extension",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " using C++ and "
            ],
            [
              "Boost",
              [
                [
                  "a",
                  "http://www.boost.org/"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is a basic example of a "
          },
          {
            "Text": "C Extension",
            "AttrFlags": 4
          },
          {
            "Text": " using C++ and "
          },
          {
            "Text": "Boost",
            "Link": "http://www.boost.org/"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550346205789,
        "id": "dfcd5418-da92-4783-9746-b18199116ec5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550346205789,
        "parent_id": "df259c5c-6425-4e49-8f23-c70f2061d376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C++ Code"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "C++ Code"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550346205789,
        "id": "69f12fe3-5893-41dd-8031-a309f977aab2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550346205789,
        "parent_id": "df259c5c-6425-4e49-8f23-c70f2061d376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C++ code put in hello.cpp:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "C++ code put in hello.cpp:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550346205789,
        "id": "84138bac-f8d5-4cff-99e5-8ff77a1b71fc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550346240000,
        "parent_id": "df259c5c-6425-4e49-8f23-c70f2061d376",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "#include \u003cboost/python/module.hpp\u003e\n#include \u003cboost/python/list.hpp\u003e\n#include \u003cboost/python/class.hpp\u003e\n#include \u003cboost/python/def.hpp\u003e\n\n// Return a hello world string.\nstd::string get_hello_function()\n{\n   return \"Hello world!\";\n}\n\n// hello class that can return a list of count hello world strings.\nclass hello_class\n{\npublic:\n\n   // Taking the greeting message in the constructor.\n   hello_class(std::string message) : _message(message) {}\n\n   // Returns the message count times in a python list.\n   boost::python::list as_list(int count)\n   {\n      boost::python::list res;\n      for (int i = 0; i \u003c count; ++i) {\n         res.append(_message);\n      }\n      return res;\n   }\n   \nprivate:\n   std::string _message;\n};\n\n\n// Defining a python module naming it to \"hello\".\nBOOST_PYTHON_MODULE(hello)\n{\n   // Here you declare what functions and classes that should be exposed on the module.\n\n   // The get_hello_function exposed to python as a function.\n   boost::python::def(\"get_hello\", get_hello_function);\n\n   // The hello_class exposed to python as a class.\n   boost::python::class_\u003chello_class\u003e(\"Hello\", boost::python::init\u003cstd::string\u003e())\n      .def(\"as_list\", \u0026hello_class::as_list)\n      ;   \n}"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "#include \u003cboost/python/module.hpp\u003e\n#include \u003cboost/python/list.hpp\u003e\n#include \u003cboost/python/class.hpp\u003e\n#include \u003cboost/python/def.hpp\u003e\n\n// Return a hello world string.\nstd::string get_hello_function()\n{\n   return \"Hello world!\";\n}\n\n// hello class that can return a list of count hello world strings.\nclass hello_class\n{\npublic:\n\n   // Taking the greeting message in the constructor.\n   hello_class(std::string message) : _message(message) {}\n\n   // Returns the message count times in a python list.\n   boost::python::list as_list(int count)\n   {\n      boost::python::list res;\n      for (int i = 0; i \u003c count; ++i) {\n         res.append(_message);\n      }\n      return res;\n   }\n   \nprivate:\n   std::string _message;\n};\n\n\n// Defining a python module naming it to \"hello\".\nBOOST_PYTHON_MODULE(hello)\n{\n   // Here you declare what functions and classes that should be exposed on the module.\n\n   // The get_hello_function exposed to python as a function.\n   boost::python::def(\"get_hello\", get_hello_function);\n\n   // The hello_class exposed to python as a class.\n   boost::python::class_\u003chello_class\u003e(\"Hello\", boost::python::init\u003cstd::string\u003e())\n      .def(\"as_list\", \u0026hello_class::as_list)\n      ;   \n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550346205789,
        "id": "ca473fea-d866-417a-afee-bea3c6a10811",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550346205789,
        "parent_id": "df259c5c-6425-4e49-8f23-c70f2061d376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To compile this into a python module you will need the python headers and the boost libraries. This example was made on Ubuntu 12.04 using python 3.4 and gcc. Boost is supported on many platforms. In case of Ubuntu the needed packages was installed using:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To compile this into a python module you will need the python headers and the boost libraries. This example was made on Ubuntu 12.04 using python 3.4 and gcc. Boost is supported on many platforms. In case of Ubuntu the needed packages was installed using:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550346205789,
        "id": "e528e862-487e-41e4-80e1-9f9893e600ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550346240000,
        "parent_id": "df259c5c-6425-4e49-8f23-c70f2061d376",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Shell"
            ]
          ],
          "title": [
            [
              "sudo apt-get install gcc libboost-dev libpython3.4-dev"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "sudo apt-get install gcc libboost-dev libpython3.4-dev",
        "code_language": "Shell"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550346205790,
        "id": "bd8c62dd-b2d8-4500-81be-f378712e886f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550346205790,
        "parent_id": "df259c5c-6425-4e49-8f23-c70f2061d376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Compiling the source file into a .so-file that can later be imported as a module provided it is on the python path:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Compiling the source file into a .so-file that can later be imported as a module provided it is on the python path:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550346205790,
        "id": "86421c97-8ae4-4c50-a09f-43e9349519a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550346240000,
        "parent_id": "df259c5c-6425-4e49-8f23-c70f2061d376",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Shell"
            ]
          ],
          "title": [
            [
              "gcc -shared -o hello.so -fPIC -I/usr/include/python3.4 hello.cpp -lboost_python-py34 -lboost_system -l:libpython3.4m.so"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "gcc -shared -o hello.so -fPIC -I/usr/include/python3.4 hello.cpp -lboost_python-py34 -lboost_system -l:libpython3.4m.so",
        "code_language": "Shell"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550346205790,
        "id": "076b8cbc-c559-43a0-89e0-61c330f73176",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550346205790,
        "parent_id": "df259c5c-6425-4e49-8f23-c70f2061d376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The python code in the file example.py:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The python code in the file example.py:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550346205790,
        "id": "d8163919-c9aa-40de-83ce-e474bb725492",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550346240000,
        "parent_id": "df259c5c-6425-4e49-8f23-c70f2061d376",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "import hello\n\nprint(hello.get_hello())\n\nh = hello.Hello(\"World hello!\")\nprint(h.as_list(3))"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "import hello\n\nprint(hello.get_hello())\n\nh = hello.Hello(\"World hello!\")\nprint(h.as_list(3))",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550346205790,
        "id": "97e33188-647c-41cb-818b-1d44233a174e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550346205790,
        "parent_id": "df259c5c-6425-4e49-8f23-c70f2061d376",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Then "
            ],
            [
              "python3 example.py",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will give the following output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Then "
          },
          {
            "Text": "python3 example.py",
            "AttrFlags": 2
          },
          {
            "Text": " will give the following output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550346205790,
        "id": "2a573f59-a362-42cd-95eb-dda86f0ce017",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550346205790,
        "parent_id": "df259c5c-6425-4e49-8f23-c70f2061d376",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Hello world!\n['World hello!', 'World hello!', 'World hello!']"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Hello world!\n['World hello!', 'World hello!', 'World hello!']",
        "code_language": "Plain Text"
      }
    ],
    "title": "C Extension Using c and Boost",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}