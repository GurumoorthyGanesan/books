{
  "ID": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
  "Root": {
    "alive": true,
    "content": [
      "b8224e54-0902-4a17-84d0-c28593ab9edd",
      "169af690-9261-4dda-add0-62f8eaec87cd",
      "40dce1d3-9fb7-4bbb-898b-12b8fad2aa68",
      "c7bed397-d3f6-41c0-9258-909fbcaa2773",
      "a88db07e-97b9-4078-92b3-820182b140ac",
      "b4c8274a-4dab-4b61-b4a5-e4b945dad622",
      "faf8a3d5-e9f5-45e5-bb2d-b4f1853e4b1a",
      "dcb2468a-e87b-4d51-a516-3c5b0b65d11e",
      "6f02d3d8-22d3-4bc4-9a46-5b1bfa2cc3c7",
      "1c9b95a2-9ac6-4f4b-84e3-a995c4337d50",
      "07ab3da1-3d1c-4374-8e4a-688e5d75d6d2",
      "b3b4ae6d-4f17-4c87-8cba-314b9bccb910",
      "5928c1ba-ffef-4779-b240-876b2982cfc4",
      "74bb6646-e2db-44ac-bcab-1a95e17be65b",
      "08e7d8ec-bbfa-41b1-af50-be4a79305fbc",
      "97048324-0268-4d07-9266-d4960c34aee7",
      "18a59b70-9a60-4c9b-858f-51754ae83162",
      "2fba5849-eeb7-444f-8f35-46300b162542"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550390553347,
    "id": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550472900000,
    "parent_id": "d63754fb-7075-40e8-8a0b-d5c6c3159c14",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Looking before you leap with processor-intensive function"
        ]
      ]
    },
    "type": "page",
    "version": 6,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390553342,
        "id": "b8224e54-0902-4a17-84d0-c28593ab9edd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390553342,
        "parent_id": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A program can easily waste time by calling a processor-intensive function multiple times."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A program can easily waste time by calling a processor-intensive function multiple times."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390553343,
        "id": "169af690-9261-4dda-add0-62f8eaec87cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390553343,
        "parent_id": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example, take a function which looks like this: it returns an integer if the input "
            ],
            [
              "value",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can produce one, else "
            ],
            [
              "None",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example, take a function which looks like this: it returns an integer if the input "
          },
          {
            "Text": "value",
            "AttrFlags": 2
          },
          {
            "Text": " can produce one, else "
          },
          {
            "Text": "None",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390553343,
        "id": "40dce1d3-9fb7-4bbb-898b-12b8fad2aa68",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390553343,
        "parent_id": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def intensive_f(value): # int -\u003e Optional[int]\n   # complex, and time-consuming code\n   if process_has_failed:\n       return None\n   return integer_output"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def intensive_f(value): # int -\u003e Optional[int]\n   # complex, and time-consuming code\n   if process_has_failed:\n       return None\n   return integer_output",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390553343,
        "id": "c7bed397-d3f6-41c0-9258-909fbcaa2773",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390553343,
        "parent_id": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And it could be used in the following way:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And it could be used in the following way:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390553343,
        "id": "a88db07e-97b9-4078-92b3-820182b140ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390553343,
        "parent_id": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "x = 5\nif intensive_f(x) is not None:\n    print(intensive_f(x) / 2)\nelse:\n    print(x, \"could not be processed\")\n\nprint(x)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "x = 5\nif intensive_f(x) is not None:\n    print(intensive_f(x) / 2)\nelse:\n    print(x, \"could not be processed\")\n\nprint(x)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390553344,
        "id": "b4c8274a-4dab-4b61-b4a5-e4b945dad622",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390553344,
        "parent_id": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Whilst this will work, it has the problem of calling "
            ],
            [
              "intensive_f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which doubles the length of time for the code to run. A better solution would be to get the return value of the function beforehand."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Whilst this will work, it has the problem of calling "
          },
          {
            "Text": "intensive_f",
            "AttrFlags": 2
          },
          {
            "Text": ", which doubles the length of time for the code to run. A better solution would be to get the return value of the function beforehand."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390553344,
        "id": "faf8a3d5-e9f5-45e5-bb2d-b4f1853e4b1a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390553344,
        "parent_id": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "x = 5\nresult = intensive_f(x)\nif result is not None:\n    print(result / 2)\nelse:\n    print(x, \"could not be processed\")"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "x = 5\nresult = intensive_f(x)\nif result is not None:\n    print(result / 2)\nelse:\n    print(x, \"could not be processed\")",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390553345,
        "id": "dcb2468a-e87b-4d51-a516-3c5b0b65d11e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390553345,
        "parent_id": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, a clearer and "
            ],
            [
              "possibly more pythonic way",
              [
                [
                  "a",
                  "https://docs.python.org/3/glossary.html#term-eafp"
                ]
              ]
            ],
            [
              " is to use exceptions, for example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, a clearer and "
          },
          {
            "Text": "possibly more pythonic way",
            "Link": "https://docs.python.org/3/glossary.html#term-eafp"
          },
          {
            "Text": " is to use exceptions, for example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390553346,
        "id": "6f02d3d8-22d3-4bc4-9a46-5b1bfa2cc3c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390553346,
        "parent_id": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "x = 5\ntry:\n    print(intensive_f(x) / 2)\nexcept TypeError: # The exception raised if None + 1 is attempted\n    print(x, \"could not be processed\")"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "x = 5\ntry:\n    print(intensive_f(x) / 2)\nexcept TypeError: # The exception raised if None + 1 is attempted\n    print(x, \"could not be processed\")",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390553346,
        "id": "1c9b95a2-9ac6-4f4b-84e3-a995c4337d50",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390553346,
        "parent_id": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here no temporary variable is needed. It may often be preferable to use a "
            ],
            [
              "assert",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement, and to catch the "
            ],
            [
              "AssertionError",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instead."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here no temporary variable is needed. It may often be preferable to use a "
          },
          {
            "Text": "assert",
            "AttrFlags": 2
          },
          {
            "Text": " statement, and to catch the "
          },
          {
            "Text": "AssertionError",
            "AttrFlags": 2
          },
          {
            "Text": " instead."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390553346,
        "id": "07ab3da1-3d1c-4374-8e4a-688e5d75d6d2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390553346,
        "parent_id": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Dictionary keys"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Dictionary keys"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390553346,
        "id": "b3b4ae6d-4f17-4c87-8cba-314b9bccb910",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390553346,
        "parent_id": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A common example of where this may be found is accessing dictionary keys. For example compare:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A common example of where this may be found is accessing dictionary keys. For example compare:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390553346,
        "id": "5928c1ba-ffef-4779-b240-876b2982cfc4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390553346,
        "parent_id": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "bird_speeds = get_very_long_dictionary()\n\nif \"european swallow\" in bird_speeds:\n    speed = bird_speeds[\"european swallow\"]\nelse:\n    speed = input(\"What is the air-speed velocity of an unladen swallow?\")\n\nprint(speed)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "bird_speeds = get_very_long_dictionary()\n\nif \"european swallow\" in bird_speeds:\n    speed = bird_speeds[\"european swallow\"]\nelse:\n    speed = input(\"What is the air-speed velocity of an unladen swallow?\")\n\nprint(speed)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390553346,
        "id": "74bb6646-e2db-44ac-bcab-1a95e17be65b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390553346,
        "parent_id": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "with:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "with:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390553346,
        "id": "08e7d8ec-bbfa-41b1-af50-be4a79305fbc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390553346,
        "parent_id": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "bird_speeds = get_very_long_dictionary()\n\ntry:\n    speed = bird_speeds[\"european swallow\"]\nexcept KeyError:\n    speed = input(\"What is the air-speed velocity of an unladen swallow?\")\n\nprint(speed)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "bird_speeds = get_very_long_dictionary()\n\ntry:\n    speed = bird_speeds[\"european swallow\"]\nexcept KeyError:\n    speed = input(\"What is the air-speed velocity of an unladen swallow?\")\n\nprint(speed)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390553346,
        "id": "97048324-0268-4d07-9266-d4960c34aee7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390553346,
        "parent_id": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The first example has to look through the dictionary twice, and as this is a long dictionary, it may take a long time to do so each time. The second only requires one search through the dictionary, and thus saves a lot of processor time."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The first example has to look through the dictionary twice, and as this is a long dictionary, it may take a long time to do so each time. The second only requires one search through the dictionary, and thus saves a lot of processor time."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390553347,
        "id": "18a59b70-9a60-4c9b-858f-51754ae83162",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390553347,
        "parent_id": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An alternative to this is to use ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "dict.get(key, default)",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              ", however many circumstances may require more complex operations to be done in the case that the key is not present",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An alternative to this is to use ",
            "AttrFlags": 4
          },
          {
            "Text": "dict.get(key, default)",
            "AttrFlags": 6
          },
          {
            "Text": ", however many circumstances may require more complex operations to be done in the case that the key is not present",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390553347,
        "id": "2fba5849-eeb7-444f-8f35-46300b162542",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390553347,
        "parent_id": "8f9b9db9-71bf-4077-ac6f-02d556a37193",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code_language": "Plain Text"
      }
    ],
    "title": "Looking before you leap with processor-intensive function"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}