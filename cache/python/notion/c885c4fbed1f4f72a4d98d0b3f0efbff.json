{
  "ID": "c885c4fb-ed1f-4f72-a4d9-8d0b3f0efbff",
  "Root": {
    "alive": true,
    "content": [
      "535f6c2a-8dc1-408d-b3e7-349737c6f0b9",
      "631418cc-9b31-469b-956e-ce9dd08fdd32",
      "372f17e8-ee65-49cc-91b9-9e22d2a3ff88",
      "cd712dfe-2a84-41f8-8059-b719c0e1b434",
      "307136ab-6b87-4ce0-bc86-5412bb44e78f",
      "d8171706-1ece-4c9f-8695-58c8718b9b31",
      "7e8be1a1-c4a1-48ff-b700-e532ba3c6a7b",
      "9f069ee1-6e66-48c6-bfbb-861a8909dfb7",
      "4aed7490-7c36-4659-b640-5d11a981bba1"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550389564249,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c885c4fb-ed1f-4f72-a4d9-8d0b3f0efbff",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550470020000,
    "parent_id": "53044c34-0237-4d51-babf-695ec30cd5ea",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Two-way conversions"
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389564245,
        "id": "535f6c2a-8dc1-408d-b3e7-349737c6f0b9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389564245,
        "parent_id": "c885c4fb-ed1f-4f72-a4d9-8d0b3f0efbff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Descriptor objects can allow related object attributes to react to changes automatically."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Descriptor objects can allow related object attributes to react to changes automatically."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389564248,
        "id": "631418cc-9b31-469b-956e-ce9dd08fdd32",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389564248,
        "parent_id": "c885c4fb-ed1f-4f72-a4d9-8d0b3f0efbff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Suppose we want to model an oscillator with a given frequency (in Hertz) and period (in seconds). When we update the frequency we want the period to update, and when we update the period we want the frequency to update:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Suppose we want to model an oscillator with a given frequency (in Hertz) and period (in seconds). When we update the frequency we want the period to update, and when we update the period we want the frequency to update:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389564248,
        "id": "372f17e8-ee65-49cc-91b9-9e22d2a3ff88",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389564248,
        "parent_id": "c885c4fb-ed1f-4f72-a4d9-8d0b3f0efbff",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e oscillator = Oscillator(freq=100.0)  # Set frequency to 100.0 Hz\n\u003e\u003e\u003e oscillator.period  # Period is 1 / frequency, i.e. 0.01 seconds\n0.01\n\u003e\u003e\u003e oscillator.period = 0.02  # Set period to 0.02 seconds\n\u003e\u003e\u003e oscillator.freq # The frequency is automatically adjusted\n50.0\n\u003e\u003e\u003e oscillator.freq = 200.0  # Set the frequency to 200.0 Hz\n\u003e\u003e\u003e oscillator.period  # The period is automatically adjusted\n0.005"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003e\u003e\u003e oscillator = Oscillator(freq=100.0)  # Set frequency to 100.0 Hz\n\u003e\u003e\u003e oscillator.period  # Period is 1 / frequency, i.e. 0.01 seconds\n0.01\n\u003e\u003e\u003e oscillator.period = 0.02  # Set period to 0.02 seconds\n\u003e\u003e\u003e oscillator.freq # The frequency is automatically adjusted\n50.0\n\u003e\u003e\u003e oscillator.freq = 200.0  # Set the frequency to 200.0 Hz\n\u003e\u003e\u003e oscillator.period  # The period is automatically adjusted\n0.005",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389564248,
        "id": "cd712dfe-2a84-41f8-8059-b719c0e1b434",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389564248,
        "parent_id": "c885c4fb-ed1f-4f72-a4d9-8d0b3f0efbff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We pick one of the values (frequency, in Hertz) as the “anchor,” i.e. the one that can be set with no conversion, and write a descriptor class for it:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We pick one of the values (frequency, in Hertz) as the “anchor,” i.e. the one that can be set with no conversion, and write a descriptor class for it:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389564248,
        "id": "307136ab-6b87-4ce0-bc86-5412bb44e78f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389564248,
        "parent_id": "c885c4fb-ed1f-4f72-a4d9-8d0b3f0efbff",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Hertz(object):\n    def __get__(self, instance, owner):\n        return self.value\n\n    def __set__(self, instance, value):\n        self.value = float(value)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Hertz(object):\n    def __get__(self, instance, owner):\n        return self.value\n\n    def __set__(self, instance, value):\n        self.value = float(value)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389564249,
        "id": "d8171706-1ece-4c9f-8695-58c8718b9b31",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389564249,
        "parent_id": "c885c4fb-ed1f-4f72-a4d9-8d0b3f0efbff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The “other” value (period, in seconds) is defined in terms of the anchor. We write a descriptor class that does our conversions:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The “other” value (period, in seconds) is defined in terms of the anchor. We write a descriptor class that does our conversions:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389564249,
        "id": "7e8be1a1-c4a1-48ff-b700-e532ba3c6a7b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389564249,
        "parent_id": "c885c4fb-ed1f-4f72-a4d9-8d0b3f0efbff",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Second(object):\n    def __get__(self, instance, owner):\n        # When reading period, convert from frequency\n        return 1 / instance.freq\n    \n    def __set__(self, instance, value):\n        # When setting period, update the frequency\n        instance.freq = 1 / float(value)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Second(object):\n    def __get__(self, instance, owner):\n        # When reading period, convert from frequency\n        return 1 / instance.freq\n    \n    def __set__(self, instance, value):\n        # When setting period, update the frequency\n        instance.freq = 1 / float(value)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389564249,
        "id": "9f069ee1-6e66-48c6-bfbb-861a8909dfb7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389564249,
        "parent_id": "c885c4fb-ed1f-4f72-a4d9-8d0b3f0efbff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now we can write the Oscillator class:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now we can write the Oscillator class:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389564249,
        "id": "4aed7490-7c36-4659-b640-5d11a981bba1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389564249,
        "parent_id": "c885c4fb-ed1f-4f72-a4d9-8d0b3f0efbff",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Oscillator(object):\n    period = Second()  # Set the other value as a class attribute\n\n    def __init__(self, freq):\n        self.freq = Hertz()  # Set the anchor value as an instance attribute\n        self.freq = freq  # Assign the passed value - self.period will be adjusted"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Oscillator(object):\n    period = Second()  # Set the other value as a class attribute\n\n    def __init__(self, freq):\n        self.freq = Hertz()  # Set the anchor value as an instance attribute\n        self.freq = freq  # Assign the passed value - self.period will be adjusted",
        "code_language": "Plain Text"
      }
    ],
    "title": "Two-way conversions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}