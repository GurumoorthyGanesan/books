{
  "ID": "733b4e65-04bb-41d6-83c1-42194a24002f",
  "Root": {
    "alive": true,
    "content": [
      "1d35276b-e091-4d6b-92e6-c3885f14b927",
      "74f7f7ed-c6cb-4209-8ff2-3f320e45011b",
      "52b8b6a5-7c40-484c-9d29-144ae9490ec7",
      "aaf48298-b474-446a-8c92-31924b5ac2c1",
      "ce944d19-6fee-437e-a3c5-d0b4a59e24ec",
      "85945d21-1370-4d12-b946-bd117181e9a3",
      "961c1c14-d10d-4403-98c4-16fb07d046c9",
      "958ee0bf-7b4c-4241-9d5c-a9f1098daa0d",
      "39c4c900-2d6e-410b-ada5-3862db1abe16",
      "9d31e24d-9e2b-47b4-9482-b988aa41ffe4",
      "34667d97-9725-4ba0-9ae0-eabde552bfd0"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550391866776,
    "id": "733b4e65-04bb-41d6-83c1-42194a24002f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550474700000,
    "parent_id": "b488e901-dd9d-4c29-9888-3b6571294f72",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Proxy"
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391866773,
        "id": "1d35276b-e091-4d6b-92e6-c3885f14b927",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391866773,
        "parent_id": "733b4e65-04bb-41d6-83c1-42194a24002f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Proxy object is often used to ensure guarded access to another object, which internal business logic we don’t want to pollute with safety requirements."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Proxy object is often used to ensure guarded access to another object, which internal business logic we don’t want to pollute with safety requirements."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391866773,
        "id": "74f7f7ed-c6cb-4209-8ff2-3f320e45011b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391866773,
        "parent_id": "733b4e65-04bb-41d6-83c1-42194a24002f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Suppose we’d like to guarantee that only user of specific permissions can access resource."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Suppose we’d like to guarantee that only user of specific permissions can access resource."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391866773,
        "id": "52b8b6a5-7c40-484c-9d29-144ae9490ec7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391866773,
        "parent_id": "733b4e65-04bb-41d6-83c1-42194a24002f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Proxy definition: (it ensure that only users which actually can see reservations will be able to consumer reservation_service)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Proxy definition: (it ensure that only users which actually can see reservations will be able to consumer reservation_service)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391866774,
        "id": "aaf48298-b474-446a-8c92-31924b5ac2c1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550474700000,
        "parent_id": "733b4e65-04bb-41d6-83c1-42194a24002f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "from datetime import date\nfrom operator import attrgetter\n\nclass Proxy:\n    def __init__(self, current_user, reservation_service):\n        self.current_user = current_user\n        self.reservation_service = reservation_service\n\n    def highest_total_price_reservations(self, date_from, date_to, reservations_count):\n        if self.current_user.can_see_reservations:\n            return self.reservation_service.highest_total_price_reservations(\n                date_from,\n                date_to,\n                reservations_count\n              )\n        else:\n            return []\n\n#Models and ReservationService:\n\nclass Reservation:\n    def __init__(self, date, total_price):\n        self.date = date\n        self.total_price = total_price\n\nclass ReservationService:\n    def highest_total_price_reservations(self, date_from, date_to, reservations_count):\n        # normally it would be read from database/external service\n        reservations = [\n            Reservation(date(2014, 5, 15), 100),\n            Reservation(date(2017, 5, 15), 10),\n            Reservation(date(2017, 1, 15), 50)\n        ]\n\n        filtered_reservations = [r for r in reservations if (date_from \u003c= r.date \u003c= date_to)]\n\n        sorted_reservations = sorted(filtered_reservations, key=attrgetter('total_price'), reverse=True)\n\n        return sorted_reservations[0:reservations_count]\n\n\nclass User:\n    def __init__(self, can_see_reservations, name):\n        self.can_see_reservations = can_see_reservations\n        self.name = name\n\n#Consumer service:\n\nclass StatsService:\n    def __init__(self, reservation_service):\n        self.reservation_service = reservation_service\n\n    def year_top_100_reservations_average_total_price(self, year):\n        reservations = self.reservation_service.highest_total_price_reservations(\n            date(year, 1, 1),\n            date(year, 12, 31),\n            1\n        )\n\n        if len(reservations) \u003e 0:\n            total = sum(r.total_price for r in reservations)\n\n            return total / len(reservations)\n        else:\n            return 0\n\n#Test:\ndef test(user, year):\n    reservations_service = Proxy(user, ReservationService())\n    stats_service = StatsService(reservations_service)\n    average_price = stats_service.year_top_100_reservations_average_total_price(year)\n    print(\"{0} will see: {1}\".format(user.name, average_price))\n\ntest(User(True, \"John the Admin\"), 2017)\ntest(User(False, \"Guest\"),         2017)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "from datetime import date\nfrom operator import attrgetter\n\nclass Proxy:\n    def __init__(self, current_user, reservation_service):\n        self.current_user = current_user\n        self.reservation_service = reservation_service\n\n    def highest_total_price_reservations(self, date_from, date_to, reservations_count):\n        if self.current_user.can_see_reservations:\n            return self.reservation_service.highest_total_price_reservations(\n                date_from,\n                date_to,\n                reservations_count\n              )\n        else:\n            return []\n\n#Models and ReservationService:\n\nclass Reservation:\n    def __init__(self, date, total_price):\n        self.date = date\n        self.total_price = total_price\n\nclass ReservationService:\n    def highest_total_price_reservations(self, date_from, date_to, reservations_count):\n        # normally it would be read from database/external service\n        reservations = [\n            Reservation(date(2014, 5, 15), 100),\n            Reservation(date(2017, 5, 15), 10),\n            Reservation(date(2017, 1, 15), 50)\n        ]\n\n        filtered_reservations = [r for r in reservations if (date_from \u003c= r.date \u003c= date_to)]\n\n        sorted_reservations = sorted(filtered_reservations, key=attrgetter('total_price'), reverse=True)\n\n        return sorted_reservations[0:reservations_count]\n\n\nclass User:\n    def __init__(self, can_see_reservations, name):\n        self.can_see_reservations = can_see_reservations\n        self.name = name\n\n#Consumer service:\n\nclass StatsService:\n    def __init__(self, reservation_service):\n        self.reservation_service = reservation_service\n\n    def year_top_100_reservations_average_total_price(self, year):\n        reservations = self.reservation_service.highest_total_price_reservations(\n            date(year, 1, 1),\n            date(year, 12, 31),\n            1\n        )\n\n        if len(reservations) \u003e 0:\n            total = sum(r.total_price for r in reservations)\n\n            return total / len(reservations)\n        else:\n            return 0\n\n#Test:\ndef test(user, year):\n    reservations_service = Proxy(user, ReservationService())\n    stats_service = StatsService(reservations_service)\n    average_price = stats_service.year_top_100_reservations_average_total_price(year)\n    print(\"{0} will see: {1}\".format(user.name, average_price))\n\ntest(User(True, \"John the Admin\"), 2017)\ntest(User(False, \"Guest\"),         2017)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391866774,
        "id": "ce944d19-6fee-437e-a3c5-d0b4a59e24ec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391866774,
        "parent_id": "733b4e65-04bb-41d6-83c1-42194a24002f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "BENEFITS",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "BENEFITS",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391866775,
        "id": "85945d21-1370-4d12-b946-bd117181e9a3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391866775,
        "parent_id": "733b4e65-04bb-41d6-83c1-42194a24002f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "we’re avoiding any changes in ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "ReservationService",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " when access restrictions are changed.",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "we’re avoiding any changes in ",
            "AttrFlags": 1
          },
          {
            "Text": "ReservationService",
            "AttrFlags": 3
          },
          {
            "Text": " when access restrictions are changed.",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391866775,
        "id": "961c1c14-d10d-4403-98c4-16fb07d046c9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391866775,
        "parent_id": "733b4e65-04bb-41d6-83c1-42194a24002f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "we’re not mixing business related data (",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "date_from",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              ", ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "date_to",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              ", ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "reservations_count",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              ") with domain unrelated concepts (user permissions) in service.",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "we’re not mixing business related data (",
            "AttrFlags": 1
          },
          {
            "Text": "date_from",
            "AttrFlags": 3
          },
          {
            "Text": ", ",
            "AttrFlags": 1
          },
          {
            "Text": "date_to",
            "AttrFlags": 3
          },
          {
            "Text": ", ",
            "AttrFlags": 1
          },
          {
            "Text": "reservations_count",
            "AttrFlags": 3
          },
          {
            "Text": ") with domain unrelated concepts (user permissions) in service.",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391866775,
        "id": "958ee0bf-7b4c-4241-9d5c-a9f1098daa0d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391866775,
        "parent_id": "733b4e65-04bb-41d6-83c1-42194a24002f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consumer (",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "StatsService",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              ") is free from permissions related logic as well",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consumer (",
            "AttrFlags": 1
          },
          {
            "Text": "StatsService",
            "AttrFlags": 3
          },
          {
            "Text": ") is free from permissions related logic as well",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391866775,
        "id": "39c4c900-2d6e-410b-ada5-3862db1abe16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391866775,
        "parent_id": "733b4e65-04bb-41d6-83c1-42194a24002f",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391866775,
        "id": "9d31e24d-9e2b-47b4-9482-b988aa41ffe4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391866775,
        "parent_id": "733b4e65-04bb-41d6-83c1-42194a24002f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "CAVEATS",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "CAVEATS",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550391866776,
        "id": "34667d97-9725-4ba0-9ae0-eabde552bfd0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550391866776,
        "parent_id": "733b4e65-04bb-41d6-83c1-42194a24002f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Proxy interface is always exactly the same as the object it hides, so that user that consumes service wrapped by proxy wasn’t even aware of proxy presence."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Proxy interface is always exactly the same as the object it hides, so that user that consumes service wrapped by proxy wasn’t even aware of proxy presence."
          }
        ]
      }
    ],
    "title": "Proxy"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}