{
  "ID": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
  "Root": {
    "alive": true,
    "content": [
      "d85437e7-723d-4c5d-a090-6277441870fb",
      "37bf7066-8d56-42cb-8dc7-a25df4bd7abe",
      "5d60769c-4caa-4632-b7fa-6f94fdd91bcf",
      "56bacc31-0230-4397-a165-1958dd9c01ae",
      "a36b74d9-47f3-4b29-808d-de386301aa37",
      "541235af-a566-40a3-af4a-af7be5273205",
      "0b2c5ba1-43d8-4fda-8cd0-4770075787ad",
      "d1132a6d-8c61-42a9-a430-401846b0e36b",
      "876da4a4-f4f6-41d2-89a2-f837ff7b468c",
      "ad0d1b99-3cca-4662-95f6-d4475904c3a6",
      "c434ce63-9489-4341-b53c-506109d476ff",
      "dab07eaa-1a6c-4cd8-b7ae-022201ed9397",
      "34f52ef0-9db3-4577-bcea-9da034879adc",
      "4c92a8bb-41ae-451d-82b2-630d1063d4ac",
      "398aa526-50c4-4add-aeab-d1a15f499d42",
      "a3737059-a7c3-4c34-9d49-d0530a002668",
      "6e749358-68d3-407a-b6c3-ba7aa0e5d189",
      "6300000b-7c02-4cdb-8520-eb3d36cb08ee"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550310901364,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550310960000,
    "parent_id": "305111c8-efce-4cf2-b2ae-7b5e31a27b42",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Introduction to classes"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310901336,
        "id": "d85437e7-723d-4c5d-a090-6277441870fb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310901336,
        "parent_id": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A class, functions as a template that defines the basic characteristics of a particular object. Here’s an example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A class, functions as a template that defines the basic characteristics of a particular object. Here’s an example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310901340,
        "id": "37bf7066-8d56-42cb-8dc7-a25df4bd7abe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310960000,
        "parent_id": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "class Person(object):\n     \"\"\"A simple class.\"\"\"                            # docstring\n     species = \"Homo Sapiens\"                         # class attribute\n\n     def __init__(self, name):                        # special method\n         \"\"\"This is the initializer. It's a special\n         method (see below).\n         \"\"\"\n         self.name = name                             # instance attribute\n\n     def __str__(self):                               # special method\n         \"\"\"This method is run when Python tries \n         to cast the object to a string. Return \n         this string when using print(), etc.\n         \"\"\"\n         return self.name\n\n     def rename(self, renamed):                       # regular method\n         \"\"\"Reassign and print the name attribute.\"\"\"\n         self.name = renamed\n         print(\"Now my name is {}\".format(self.name))"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "class Person(object):\n     \"\"\"A simple class.\"\"\"                            # docstring\n     species = \"Homo Sapiens\"                         # class attribute\n\n     def __init__(self, name):                        # special method\n         \"\"\"This is the initializer. It's a special\n         method (see below).\n         \"\"\"\n         self.name = name                             # instance attribute\n\n     def __str__(self):                               # special method\n         \"\"\"This method is run when Python tries \n         to cast the object to a string. Return \n         this string when using print(), etc.\n         \"\"\"\n         return self.name\n\n     def rename(self, renamed):                       # regular method\n         \"\"\"Reassign and print the name attribute.\"\"\"\n         self.name = renamed\n         print(\"Now my name is {}\".format(self.name))",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310901340,
        "id": "5d60769c-4caa-4632-b7fa-6f94fdd91bcf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310901340,
        "parent_id": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are a few things to note when looking at the above example."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are a few things to note when looking at the above example."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310901340,
        "id": "56bacc31-0230-4397-a165-1958dd9c01ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310901340,
        "parent_id": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The class is made up of "
            ],
            [
              "attributes",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " (data) and "
            ],
            [
              "methods",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " (functions)."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The class is made up of "
          },
          {
            "Text": "attributes",
            "AttrFlags": 4
          },
          {
            "Text": " (data) and "
          },
          {
            "Text": "methods",
            "AttrFlags": 4
          },
          {
            "Text": " (functions)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310901341,
        "id": "a36b74d9-47f3-4b29-808d-de386301aa37",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310901341,
        "parent_id": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Attributes and methods are simply defined as normal variables and functions."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Attributes and methods are simply defined as normal variables and functions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310901341,
        "id": "541235af-a566-40a3-af4a-af7be5273205",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310901341,
        "parent_id": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As noted in the corresponding docstring, the "
            ],
            [
              "__init__()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method is called the "
            ],
            [
              "initializer",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". It’s equivalent to the constructor in other object oriented languages, and is the method that is first run when you create a new object, or new instance of the class."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "As noted in the corresponding docstring, the "
          },
          {
            "Text": "__init__()",
            "AttrFlags": 2
          },
          {
            "Text": " method is called the "
          },
          {
            "Text": "initializer",
            "AttrFlags": 4
          },
          {
            "Text": ". It’s equivalent to the constructor in other object oriented languages, and is the method that is first run when you create a new object, or new instance of the class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310901341,
        "id": "0b2c5ba1-43d8-4fda-8cd0-4770075787ad",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310901341,
        "parent_id": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Attributes that apply to the whole class are defined first, and are called "
            ],
            [
              "class attributes",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Attributes that apply to the whole class are defined first, and are called "
          },
          {
            "Text": "class attributes",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310901361,
        "id": "d1132a6d-8c61-42a9-a430-401846b0e36b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310901361,
        "parent_id": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Attributes that apply to a specific instance of a class (an object) are called "
            ],
            [
              "instance attributes",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". They are generally defined inside "
            ],
            [
              "__init__()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "; this is not necessary, but it is recommended (since attributes defined outside of "
            ],
            [
              "__init__()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " run the risk of being accessed before they are defined)."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Attributes that apply to a specific instance of a class (an object) are called "
          },
          {
            "Text": "instance attributes",
            "AttrFlags": 4
          },
          {
            "Text": ". They are generally defined inside "
          },
          {
            "Text": "__init__()",
            "AttrFlags": 2
          },
          {
            "Text": "; this is not necessary, but it is recommended (since attributes defined outside of "
          },
          {
            "Text": "__init__()",
            "AttrFlags": 2
          },
          {
            "Text": " run the risk of being accessed before they are defined)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310901361,
        "id": "876da4a4-f4f6-41d2-89a2-f837ff7b468c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310901361,
        "parent_id": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Every method, included in the class definition passes the object in question as its first parameter. The word "
            ],
            [
              "self",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is used for this parameter (usage of "
            ],
            [
              "self",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is actually by convention, as the word "
            ],
            [
              "self",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has no inherent meaning in Python, but this is one of Python’s most respected conventions, and you should always follow it)."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Every method, included in the class definition passes the object in question as its first parameter. The word "
          },
          {
            "Text": "self",
            "AttrFlags": 2
          },
          {
            "Text": " is used for this parameter (usage of "
          },
          {
            "Text": "self",
            "AttrFlags": 2
          },
          {
            "Text": " is actually by convention, as the word "
          },
          {
            "Text": "self",
            "AttrFlags": 2
          },
          {
            "Text": " has no inherent meaning in Python, but this is one of Python’s most respected conventions, and you should always follow it)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310901361,
        "id": "ad0d1b99-3cca-4662-95f6-d4475904c3a6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310901361,
        "parent_id": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Those used to object-oriented programming in other languages may be surprised by a few things. One is that Python has no real concept of "
            ],
            [
              "private",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " elements, so everything, by default, imitates the behavior of the C++/Java "
            ],
            [
              "public",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword. For more information, see the “Private Class Members” example on this page."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Those used to object-oriented programming in other languages may be surprised by a few things. One is that Python has no real concept of "
          },
          {
            "Text": "private",
            "AttrFlags": 2
          },
          {
            "Text": " elements, so everything, by default, imitates the behavior of the C++/Java "
          },
          {
            "Text": "public",
            "AttrFlags": 2
          },
          {
            "Text": " keyword. For more information, see the “Private Class Members” example on this page."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310901363,
        "id": "c434ce63-9489-4341-b53c-506109d476ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310901363,
        "parent_id": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Some of the class’s methods have the following form: "
            ],
            [
              "__functionname__(self, other_stuff)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". All such methods are called “magic methods” and are an important part of classes in Python. For instance, operator overloading in Python is implemented with magic methods. For more information, see "
            ],
            [
              "the relevant documentation",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/python/2063/overloading/1113/magic-dunder-methods#t=201608092225343955327"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Some of the class’s methods have the following form: "
          },
          {
            "Text": "__functionname__(self, other_stuff)",
            "AttrFlags": 2
          },
          {
            "Text": ". All such methods are called “magic methods” and are an important part of classes in Python. For instance, operator overloading in Python is implemented with magic methods. For more information, see "
          },
          {
            "Text": "the relevant documentation",
            "Link": "http://stackoverflow.com/documentation/python/2063/overloading/1113/magic-dunder-methods#t=201608092225343955327"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310901363,
        "id": "dab07eaa-1a6c-4cd8-b7ae-022201ed9397",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310901363,
        "parent_id": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now let’s make a few instances of our "
            ],
            [
              "Person",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class!"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now let’s make a few instances of our "
          },
          {
            "Text": "Person",
            "AttrFlags": 2
          },
          {
            "Text": " class!"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310901364,
        "id": "34f52ef0-9db3-4577-bcea-9da034879adc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310960000,
        "parent_id": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e # Instances\n\u003e\u003e\u003e kelly = Person(\"Kelly\")\n\u003e\u003e\u003e joseph = Person(\"Joseph\")\n\u003e\u003e\u003e john_doe = Person(\"John Doe\")"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e # Instances\n\u003e\u003e\u003e kelly = Person(\"Kelly\")\n\u003e\u003e\u003e joseph = Person(\"Joseph\")\n\u003e\u003e\u003e john_doe = Person(\"John Doe\")",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310901364,
        "id": "4c92a8bb-41ae-451d-82b2-630d1063d4ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310901364,
        "parent_id": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We currently have three "
            ],
            [
              "Person",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " objects, "
            ],
            [
              "kelly",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "joseph",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and "
            ],
            [
              "john_doe",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We currently have three "
          },
          {
            "Text": "Person",
            "AttrFlags": 2
          },
          {
            "Text": " objects, "
          },
          {
            "Text": "kelly",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "joseph",
            "AttrFlags": 2
          },
          {
            "Text": ", and "
          },
          {
            "Text": "john_doe",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310901364,
        "id": "398aa526-50c4-4add-aeab-d1a15f499d42",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310901364,
        "parent_id": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can access the attributes of the class from each instance using the dot operator "
            ],
            [
              ".",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " Note again the difference between class and instance attributes:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can access the attributes of the class from each instance using the dot operator "
          },
          {
            "Text": ".",
            "AttrFlags": 2
          },
          {
            "Text": " Note again the difference between class and instance attributes:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310901364,
        "id": "a3737059-a7c3-4c34-9d49-d0530a002668",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310960000,
        "parent_id": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e # Attributes\n\u003e\u003e\u003e kelly.species\n'Homo Sapiens'\n\u003e\u003e\u003e john_doe.species\n'Homo Sapiens'\n\u003e\u003e\u003e joseph.species\n'Homo Sapiens'\n\u003e\u003e\u003e kelly.name\n'Kelly'\n\u003e\u003e\u003e joseph.name\n'Joseph'"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e # Attributes\n\u003e\u003e\u003e kelly.species\n'Homo Sapiens'\n\u003e\u003e\u003e john_doe.species\n'Homo Sapiens'\n\u003e\u003e\u003e joseph.species\n'Homo Sapiens'\n\u003e\u003e\u003e kelly.name\n'Kelly'\n\u003e\u003e\u003e joseph.name\n'Joseph'",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310901364,
        "id": "6e749358-68d3-407a-b6c3-ba7aa0e5d189",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310901364,
        "parent_id": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can execute the methods of the class using the same dot operator "
            ],
            [
              ".",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can execute the methods of the class using the same dot operator "
          },
          {
            "Text": ".",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550310901364,
        "id": "6300000b-7c02-4cdb-8520-eb3d36cb08ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550310960000,
        "parent_id": "e62578a9-f1f0-477c-9520-a9e95332e0d8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e # Methods\n\u003e\u003e\u003e john_doe.__str__()\n'John Doe'\n\u003e\u003e\u003e  print(john_doe)\n'John Doe'\n\u003e\u003e\u003e  john_doe.rename(\"John\")\n'Now my name is John'"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e # Methods\n\u003e\u003e\u003e john_doe.__str__()\n'John Doe'\n\u003e\u003e\u003e  print(john_doe)\n'John Doe'\n\u003e\u003e\u003e  john_doe.rename(\"John\")\n'Now my name is John'",
        "code_language": "Python"
      }
    ],
    "title": "Introduction to classes",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}