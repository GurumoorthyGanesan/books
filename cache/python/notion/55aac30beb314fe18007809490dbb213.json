{
  "ID": "55aac30b-eb31-4fe1-8007-809490dbb213",
  "Root": {
    "alive": true,
    "content": [
      "730ab80c-d99b-41ab-b05d-0de72498e369",
      "7f376462-f472-4f6b-b9a4-a83d7c692663",
      "dbef72c0-ad04-4c37-bd29-035f765de549",
      "95ef7f3b-8893-4420-bbf8-f44d000e6f0f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550347310284,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "55aac30b-eb31-4fe1-8007-809490dbb213",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550347620000,
    "parent_id": "d0dd18a7-d6eb-4149-9290-6d2c0563e346",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Find All Non-Overlapping Matches"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347310279,
        "id": "730ab80c-d99b-41ab-b05d-0de72498e369",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347620000,
        "parent_id": "55aac30b-eb31-4fe1-8007-809490dbb213",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "re.findall(r\"[0-9]{2,3}\", \"some 1 text 12 is 945 here 4445588899\")\n# Out: ['12', '945', '444', '558', '889']"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "re.findall(r\"[0-9]{2,3}\", \"some 1 text 12 is 945 here 4445588899\")\n# Out: ['12', '945', '444', '558', '889']",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347310283,
        "id": "7f376462-f472-4f6b-b9a4-a83d7c692663",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347310283,
        "parent_id": "55aac30b-eb31-4fe1-8007-809490dbb213",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that the "
            ],
            [
              "r",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " before "
            ],
            [
              "\"[0-9]{2,3}\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " tells python to interpret the string as-is; as a “raw” string."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that the "
          },
          {
            "Text": "r",
            "AttrFlags": 2
          },
          {
            "Text": " before "
          },
          {
            "Text": "\"[0-9]{2,3}\"",
            "AttrFlags": 2
          },
          {
            "Text": " tells python to interpret the string as-is; as a “raw” string."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347310283,
        "id": "dbef72c0-ad04-4c37-bd29-035f765de549",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347310283,
        "parent_id": "55aac30b-eb31-4fe1-8007-809490dbb213",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You could also use "
            ],
            [
              "re.finditer()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which works in the same way as "
            ],
            [
              "re.findall()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " but returns an iterator with "
            ],
            [
              "SRE_Match",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " objects instead of a list of strings:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You could also use "
          },
          {
            "Text": "re.finditer()",
            "AttrFlags": 2
          },
          {
            "Text": " which works in the same way as "
          },
          {
            "Text": "re.findall()",
            "AttrFlags": 2
          },
          {
            "Text": " but returns an iterator with "
          },
          {
            "Text": "SRE_Match",
            "AttrFlags": 2
          },
          {
            "Text": " objects instead of a list of strings:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347310283,
        "id": "95ef7f3b-8893-4420-bbf8-f44d000e6f0f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347620000,
        "parent_id": "55aac30b-eb31-4fe1-8007-809490dbb213",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "results = re.finditer(r\"([0-9]{2,3})\", \"some 1 text 12 is 945 here 4445588899\")\nprint(results)\n# Out: \u003ccallable-iterator object at 0x105245890\u003e\nfor result in results:\n     print(result.group(0))\n''' Out:\n12\n945\n444\n558\n889\n'''"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "results = re.finditer(r\"([0-9]{2,3})\", \"some 1 text 12 is 945 here 4445588899\")\nprint(results)\n# Out: \u003ccallable-iterator object at 0x105245890\u003e\nfor result in results:\n     print(result.group(0))\n''' Out:\n12\n945\n444\n558\n889\n'''",
        "code_language": "Python"
      }
    ],
    "title": "Find All Non-Overlapping Matches",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}