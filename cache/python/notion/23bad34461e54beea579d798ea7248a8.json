{
  "ID": "23bad344-61e5-4bee-a579-d798ea7248a8",
  "Root": {
    "alive": true,
    "content": [
      "83b538da-8506-47df-b779-70cafdd96640",
      "b44de93b-5945-42ea-a888-711e5c053178",
      "7cc5155a-36f1-412e-816e-ad8715599db2",
      "f5d56ed8-675c-4ba5-96d0-5c3f56ec93c7"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550393503861,
    "id": "23bad344-61e5-4bee-a579-d798ea7248a8",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550477400000,
    "parent_id": "071421a0-386d-4ff3-917e-c9fec4f2e56e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Callback Mode Audio IO"
        ]
      ]
    },
    "type": "page",
    "version": 6,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550393503858,
        "id": "83b538da-8506-47df-b779-70cafdd96640",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550477400000,
        "parent_id": "23bad344-61e5-4bee-a579-d798ea7248a8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\"\"\"PyAudio Example: Play a wave file (callback version).\"\"\"\n\nimport pyaudio\nimport wave\nimport time\nimport sys\n\nif len(sys.argv) \u003c 2:\n    print(\"Plays a wave file.\\n\\nUsage: %s filename.wav\" % sys.argv[0])\n    sys.exit(-1)\n\nwf = wave.open(sys.argv[1], 'rb')\n\n# instantiate PyAudio (1)\np = pyaudio.PyAudio()\n\n# define callback (2)\ndef callback(in_data, frame_count, time_info, status):\n    data = wf.readframes(frame_count)\n    return (data, pyaudio.paContinue)\n\n# open stream using callback (3)\nstream = p.open(format=p.get_format_from_width(wf.getsampwidth()),\n                channels=wf.getnchannels(),\n                rate=wf.getframerate(),\n                output=True,\n                stream_callback=callback)\n\n# start the stream (4)\nstream.start_stream()\n\n# wait for stream to finish (5)\nwhile stream.is_active():\n    time.sleep(0.1)\n\n# stop stream (6)\nstream.stop_stream()\nstream.close()\nwf.close()\n\n# close PyAudio (7)\np.terminate()"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\"\"\"PyAudio Example: Play a wave file (callback version).\"\"\"\n\nimport pyaudio\nimport wave\nimport time\nimport sys\n\nif len(sys.argv) \u003c 2:\n    print(\"Plays a wave file.\\n\\nUsage: %s filename.wav\" % sys.argv[0])\n    sys.exit(-1)\n\nwf = wave.open(sys.argv[1], 'rb')\n\n# instantiate PyAudio (1)\np = pyaudio.PyAudio()\n\n# define callback (2)\ndef callback(in_data, frame_count, time_info, status):\n    data = wf.readframes(frame_count)\n    return (data, pyaudio.paContinue)\n\n# open stream using callback (3)\nstream = p.open(format=p.get_format_from_width(wf.getsampwidth()),\n                channels=wf.getnchannels(),\n                rate=wf.getframerate(),\n                output=True,\n                stream_callback=callback)\n\n# start the stream (4)\nstream.start_stream()\n\n# wait for stream to finish (5)\nwhile stream.is_active():\n    time.sleep(0.1)\n\n# stop stream (6)\nstream.stop_stream()\nstream.close()\nwf.close()\n\n# close PyAudio (7)\np.terminate()",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550393503860,
        "id": "b44de93b-5945-42ea-a888-711e5c053178",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550393503860,
        "parent_id": "23bad344-61e5-4bee-a579-d798ea7248a8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In callback mode, PyAudio will call a specified callback function (2) whenever it needs new audio data (to play) and/or when there is new (recorded) audio data available. Note that PyAudio calls the callback function in a separate thread. The function has the following signature "
            ],
            [
              "callback(\u003cinput_data\u003e, \u003cframe_count\u003e, \u003ctime_info\u003e, \u003cstatus_flag\u003e)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and must return a tuple containing "
            ],
            [
              "frame_count",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " frames of audio data and a flag signifying whether there are more frames to play/record."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In callback mode, PyAudio will call a specified callback function (2) whenever it needs new audio data (to play) and/or when there is new (recorded) audio data available. Note that PyAudio calls the callback function in a separate thread. The function has the following signature "
          },
          {
            "Text": "callback(\u003cinput_data\u003e, \u003cframe_count\u003e, \u003ctime_info\u003e, \u003cstatus_flag\u003e)",
            "AttrFlags": 2
          },
          {
            "Text": " and must return a tuple containing "
          },
          {
            "Text": "frame_count",
            "AttrFlags": 2
          },
          {
            "Text": " frames of audio data and a flag signifying whether there are more frames to play/record."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550393503861,
        "id": "7cc5155a-36f1-412e-816e-ad8715599db2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550393503861,
        "parent_id": "23bad344-61e5-4bee-a579-d798ea7248a8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Start processing the audio stream using "
            ],
            [
              "pyaudio.Stream.start_stream()",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " (4), which will call the callback function repeatedly until that function returns "
            ],
            [
              "pyaudio.paComplete",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Start processing the audio stream using "
          },
          {
            "Text": "pyaudio.Stream.start_stream()",
            "AttrFlags": 1
          },
          {
            "Text": " (4), which will call the callback function repeatedly until that function returns "
          },
          {
            "Text": "pyaudio.paComplete",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550393503861,
        "id": "f5d56ed8-675c-4ba5-96d0-5c3f56ec93c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550393503861,
        "parent_id": "23bad344-61e5-4bee-a579-d798ea7248a8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To keep the stream active, the main thread must not terminate, e.g., by sleeping (5)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To keep the stream active, the main thread must not terminate, e.g., by sleeping (5)."
          }
        ]
      }
    ],
    "title": "Callback Mode Audio IO"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}