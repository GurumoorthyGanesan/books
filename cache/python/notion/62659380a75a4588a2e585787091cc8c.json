{
  "ID": "62659380-a75a-4588-a2e5-85787091cc8c",
  "Root": {
    "alive": true,
    "content": [
      "8c27d877-2c44-48ee-855f-c283697c08c5",
      "49299d9a-634c-4f73-bdd6-3f6f0cca6db5",
      "6cdbdcd3-09d7-41ab-b93d-729acb200a89",
      "720b1a82-3428-48c1-808c-abab02263e36",
      "e0718486-5ec1-406d-9617-a3d821c04c17",
      "1d3ea9b8-2462-4b65-be8e-bf649bec84b0",
      "8b6bbffc-fd57-4288-93c6-58f24fe593cb",
      "c9c45a7b-cc7c-4de5-ae7d-151a9ac50734",
      "6321e4ae-d330-4207-9656-9c48cc65af16",
      "a5603f18-5b31-4cbd-9297-5a92ae55b76f",
      "b62c9f3b-b708-4200-807a-bd4a3fe63122",
      "cc6f6947-9b36-48e0-9fd4-a40ef17ab1df",
      "1f2791dd-d163-4cf2-8b48-c5c04207a6dd",
      "619e6b2d-92a4-4899-a3f0-6be530ec84a7",
      "da2f99a7-4f0d-4b2c-a532-04dfdeb6f17e",
      "985e3ea0-12a5-47ce-ae35-c8f68a311794",
      "ef039f77-d48d-4211-9b8d-2c7e0df18214",
      "18ed0b10-709c-4244-b15b-233657a2dcd7",
      "1ad4f91e-84ee-4dd1-a83f-622278a4e1ce",
      "7fef5268-9111-4685-8a8a-9fabfdaf810a",
      "35e69e51-859d-4d2a-b8cb-f7717be12c26",
      "a66db307-e80e-4442-b776-1e2a9f860f81",
      "5880dbe3-a98f-4c3f-8554-a97905e216ed",
      "1562a992-03b2-4921-a537-bc383e59cbc2",
      "32f17c02-c2f2-4768-a2f8-f862dde06708",
      "8fdbaadb-b727-4071-b7ea-7fd6a7d43b4b",
      "32040fd1-f261-4ddc-91e2-cc71e389b33d",
      "1e264a13-4352-4c2c-b9c8-9438837d8024",
      "e9682026-d88a-4899-a0bb-18752bfe66eb",
      "6e051915-0f3a-4652-878c-100c982ce9ba",
      "c3f85dc3-b7b0-4fb7-af20-7099f19ac968",
      "8044b4d0-2f8f-49c6-b9a6-075def35ffcc",
      "29482a6b-f8e2-4be3-b7bd-00c7fcb8bfce",
      "77fca245-ac1e-497b-a1d9-76990aa97510",
      "a9561ecb-1230-49d6-9580-21d64a8a1133",
      "5cf4a55b-1684-4ff0-ba6e-66984ffd02fc",
      "5106f260-87b1-40f5-8087-eb6313911910",
      "5ab55bad-749d-46d6-aa5a-12e2d912a41c",
      "5bfed651-4ef4-430a-bd44-1362cb98d2f5",
      "7f27695e-b29d-4f17-b710-8fba834ccea7",
      "ffe8ec40-dd68-43d1-a08a-5bfbb89fa7c2",
      "f94d6629-f7be-4327-b991-5f060d6ae337",
      "0ee12fac-8faf-4c21-bbc7-cb588aaca88d",
      "1633774c-9355-45bb-9b87-512bc766ce37",
      "3cafae05-072b-41c4-a5f7-d201e6f5251a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550261083152,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "62659380-a75a-4588-a2e5-85787091cc8c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550262180000,
    "parent_id": "e895cb09-a4b0-4965-a04d-695253fcf7c6",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Lambda Inline, Anonymous Functions"
        ]
      ]
    },
    "type": "page",
    "version": 13,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083142,
        "id": "8c27d877-2c44-48ee-855f-c283697c08c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083142,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "lambda",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword creates an inline function that contains a single expression. The value of this expression is what the function returns when invoked."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "lambda",
            "AttrFlags": 2
          },
          {
            "Text": " keyword creates an inline function that contains a single expression. The value of this expression is what the function returns when invoked."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083145,
        "id": "49299d9a-634c-4f73-bdd6-3f6f0cca6db5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083145,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consider the function:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consider the function:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083145,
        "id": "6cdbdcd3-09d7-41ab-b93d-729acb200a89",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262120000,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def greeting():\n    return \"Hello\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def greeting():\n    return \"Hello\"",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083145,
        "id": "720b1a82-3428-48c1-808c-abab02263e36",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083145,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "which, when called as:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "which, when called as:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083145,
        "id": "e0718486-5ec1-406d-9617-a3d821c04c17",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262120000,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "print(greeting())"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "print(greeting())",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083145,
        "id": "1d3ea9b8-2462-4b65-be8e-bf649bec84b0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083145,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "prints:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "prints:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083145,
        "id": "8b6bbffc-fd57-4288-93c6-58f24fe593cb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083145,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Hello"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Hello",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083145,
        "id": "c9c45a7b-cc7c-4de5-ae7d-151a9ac50734",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083145,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This can be written as a lambda function as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This can be written as a lambda function as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083146,
        "id": "6321e4ae-d330-4207-9656-9c48cc65af16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262120000,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "greet_me = lambda: \"Hello\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "greet_me = lambda: \"Hello\"",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083146,
        "id": "a5603f18-5b31-4cbd-9297-5a92ae55b76f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083146,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "See note at the bottom of this section regarding the assignment of lambdas to variables. Generally, don’t do it."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "See note at the bottom of this section regarding the assignment of lambdas to variables. Generally, don’t do it."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083146,
        "id": "b62c9f3b-b708-4200-807a-bd4a3fe63122",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083146,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This creates an inline function with the name "
            ],
            [
              "greet_me",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that returns "
            ],
            [
              "Hello",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Note that you don’t write "
            ],
            [
              "return",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when creating a function with lambda. The value after "
            ],
            [
              ":",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is automatically returned."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This creates an inline function with the name "
          },
          {
            "Text": "greet_me",
            "AttrFlags": 2
          },
          {
            "Text": " that returns "
          },
          {
            "Text": "Hello",
            "AttrFlags": 2
          },
          {
            "Text": ". Note that you don’t write "
          },
          {
            "Text": "return",
            "AttrFlags": 2
          },
          {
            "Text": " when creating a function with lambda. The value after "
          },
          {
            "Text": ":",
            "AttrFlags": 2
          },
          {
            "Text": " is automatically returned."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083146,
        "id": "cc6f6947-9b36-48e0-9fd4-a40ef17ab1df",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083146,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Once assigned to a variable, it can be used just like a regular function:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Once assigned to a variable, it can be used just like a regular function:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083146,
        "id": "1f2791dd-d163-4cf2-8b48-c5c04207a6dd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262120000,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "print(greet_me())"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "print(greet_me())",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083146,
        "id": "619e6b2d-92a4-4899-a3f0-6be530ec84a7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083146,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "prints:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "prints:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083146,
        "id": "da2f99a7-4f0d-4b2c-a532-04dfdeb6f17e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083146,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Hello"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Hello",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083147,
        "id": "985e3ea0-12a5-47ce-ae35-c8f68a311794",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083147,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "lambda",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s can take arguments, too:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "lambda",
            "AttrFlags": 2
          },
          {
            "Text": "s can take arguments, too:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083147,
        "id": "ef039f77-d48d-4211-9b8d-2c7e0df18214",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262120000,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "strip_and_upper_case = lambda s: s.strip().upper()\n\nstrip_and_upper_case(\"  Hello   \")"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "strip_and_upper_case = lambda s: s.strip().upper()\n\nstrip_and_upper_case(\"  Hello   \")",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083147,
        "id": "18ed0b10-709c-4244-b15b-233657a2dcd7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083147,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "returns the string:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "returns the string:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083147,
        "id": "1ad4f91e-84ee-4dd1-a83f-622278a4e1ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083147,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "HELLO"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "HELLO",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083147,
        "id": "7fef5268-9111-4685-8a8a-9fabfdaf810a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083147,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "They can also take arbitrary number of arguments / keyword arguments, like normal functions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "They can also take arbitrary number of arguments / keyword arguments, like normal functions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083147,
        "id": "35e69e51-859d-4d2a-b8cb-f7717be12c26",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262120000,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "greeting = lambda x, *args, **kwargs: print(x, args, kwargs)\ngreeting('hello', 'world', world='world')"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "greeting = lambda x, *args, **kwargs: print(x, args, kwargs)\ngreeting('hello', 'world', world='world')",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083147,
        "id": "a66db307-e80e-4442-b776-1e2a9f860f81",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083147,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "prints:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "prints:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083147,
        "id": "5880dbe3-a98f-4c3f-8554-a97905e216ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083147,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "hello ('world',) {'world': 'world'}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "hello ('world',) {'world': 'world'}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083148,
        "id": "1562a992-03b2-4921-a537-bc383e59cbc2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083148,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "lambda",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s are commonly used for short functions that are convenient to define at the point where they are called (typically with "
            ],
            [
              "sorted",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "filter",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "map",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "lambda",
            "AttrFlags": 2
          },
          {
            "Text": "s are commonly used for short functions that are convenient to define at the point where they are called (typically with "
          },
          {
            "Text": "sorted",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "filter",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "map",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083148,
        "id": "32f17c02-c2f2-4768-a2f8-f862dde06708",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083148,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example, this line sorts a list of strings ignoring their case and ignoring whitespace at the beginning and at the end:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example, this line sorts a list of strings ignoring their case and ignoring whitespace at the beginning and at the end:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083148,
        "id": "8fdbaadb-b727-4071-b7ea-7fd6a7d43b4b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262120000,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "sorted( [\" foo \", \"    bAR\", \"BaZ    \"], key=lambda s: s.strip().upper())\n# Out:\n# ['    bAR', 'BaZ    ', ' foo ']"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "sorted( [\" foo \", \"    bAR\", \"BaZ    \"], key=lambda s: s.strip().upper())\n# Out:\n# ['    bAR', 'BaZ    ', ' foo ']",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083148,
        "id": "32040fd1-f261-4ddc-91e2-cc71e389b33d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083148,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sort list just ignoring whitespaces:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sort list just ignoring whitespaces:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083148,
        "id": "1e264a13-4352-4c2c-b9c8-9438837d8024",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262120000,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "sorted( [\" foo \", \"    bAR\", \"BaZ    \"], key=lambda s: s.strip())\n# Out:\n# ['BaZ    ', '    bAR', ' foo ']"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "sorted( [\" foo \", \"    bAR\", \"BaZ    \"], key=lambda s: s.strip())\n# Out:\n# ['BaZ    ', '    bAR', ' foo ']",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083148,
        "id": "e9682026-d88a-4899-a0bb-18752bfe66eb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083148,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Examples with "
            ],
            [
              "map",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Examples with "
          },
          {
            "Text": "map",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083148,
        "id": "6e051915-0f3a-4652-878c-100c982ce9ba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262120000,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "sorted( map( lambda s: s.strip().upper(), [\" foo \", \"    bAR\", \"BaZ    \"]))\n# Out:\n# ['BAR', 'BAZ', 'FOO']\n\nsorted( map( lambda s: s.strip(), [\" foo \", \"    bAR\", \"BaZ    \"]))\n# Out:\n# ['BaZ', 'bAR', 'foo']"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "sorted( map( lambda s: s.strip().upper(), [\" foo \", \"    bAR\", \"BaZ    \"]))\n# Out:\n# ['BAR', 'BAZ', 'FOO']\n\nsorted( map( lambda s: s.strip(), [\" foo \", \"    bAR\", \"BaZ    \"]))\n# Out:\n# ['BaZ', 'bAR', 'foo']",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083148,
        "id": "c3f85dc3-b7b0-4fb7-af20-7099f19ac968",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083148,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Examples with numerical lists:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Examples with numerical lists:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083148,
        "id": "8044b4d0-2f8f-49c6-b9a6-075def35ffcc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262120000,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "my_list = [3, -4, -2, 5, 1, 7]\nsorted( my_list, key=lambda x: abs(x))\n# Out:\n# [1, -2, 3, -4, 5, 7]\n\nlist( filter( lambda x: x\u003e0, my_list))\n# Out:\n# [3, 5, 1, 7]\n\nlist( map( lambda x: abs(x), my_list))\n# Out:\n[3, 4, 2, 5, 1, 7]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "my_list = [3, -4, -2, 5, 1, 7]\nsorted( my_list, key=lambda x: abs(x))\n# Out:\n# [1, -2, 3, -4, 5, 7]\n\nlist( filter( lambda x: x\u003e0, my_list))\n# Out:\n# [3, 5, 1, 7]\n\nlist( map( lambda x: abs(x), my_list))\n# Out:\n[3, 4, 2, 5, 1, 7]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083149,
        "id": "29482a6b-f8e2-4be3-b7bd-00c7fcb8bfce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083149,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One can call other functions (with/without arguments) from inside a lambda function."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One can call other functions (with/without arguments) from inside a lambda function."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083149,
        "id": "77fca245-ac1e-497b-a1d9-76990aa97510",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262120000,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def foo(msg):\n    print(msg)\n\ngreet = lambda x = \"hello world\": foo(x)\ngreet()"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def foo(msg):\n    print(msg)\n\ngreet = lambda x = \"hello world\": foo(x)\ngreet()",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083149,
        "id": "a9561ecb-1230-49d6-9580-21d64a8a1133",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083149,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "prints:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "prints:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083149,
        "id": "5cf4a55b-1684-4ff0-ba6e-66984ffd02fc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083149,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "hello world"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "hello world",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083149,
        "id": "5106f260-87b1-40f5-8087-eb6313911910",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083149,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is useful because "
            ],
            [
              "lambda",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " may contain only one expression and by using a subsidiary function one can run multiple statements."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is useful because "
          },
          {
            "Text": "lambda",
            "AttrFlags": 2
          },
          {
            "Text": " may contain only one expression and by using a subsidiary function one can run multiple statements."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083149,
        "id": "5ab55bad-749d-46d6-aa5a-12e2d912a41c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083149,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "NOTE",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "NOTE",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083151,
        "id": "5bfed651-4ef4-430a-bd44-1362cb98d2f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083151,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Bear in mind that "
            ],
            [
              "PEP-8",
              [
                [
                  "a",
                  "https://www.python.org/dev/peps/pep-0008/#programming-recommendations"
                ]
              ]
            ],
            [
              " (the official Python style guide) does not recommend assigning lambdas to variables (as we did in the first two examples):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Bear in mind that "
          },
          {
            "Text": "PEP-8",
            "Link": "https://www.python.org/dev/peps/pep-0008/#programming-recommendations"
          },
          {
            "Text": " (the official Python style guide) does not recommend assigning lambdas to variables (as we did in the first two examples):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083151,
        "id": "7f27695e-b29d-4f17-b710-8fba834ccea7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083151,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Always use a def statement instead of an assignment statement that binds a lambda expression directly to an identifier."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Always use a def statement instead of an assignment statement that binds a lambda expression directly to an identifier."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083151,
        "id": "ffe8ec40-dd68-43d1-a08a-5bfbb89fa7c2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083151,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Yes:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Yes:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083151,
        "id": "f94d6629-f7be-4327-b991-5f060d6ae337",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262120000,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def f(x): return 2*x"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def f(x): return 2*x",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083151,
        "id": "0ee12fac-8faf-4c21-bbc7-cb588aaca88d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083151,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "No:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "No:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083151,
        "id": "1633774c-9355-45bb-9b87-512bc766ce37",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262180000,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "f = lambda x: 2*x"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "f = lambda x: 2*x",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261083152,
        "id": "3cafae05-072b-41c4-a5f7-d201e6f5251a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261083152,
        "parent_id": "62659380-a75a-4588-a2e5-85787091cc8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The first form means that the name of the resulting function object is specifically "
            ],
            [
              "f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instead of the generic "
            ],
            [
              "\u003clambda\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This is more useful for tracebacks and string representations in general. The use of the assignment statement eliminates the sole benefit a lambda expression can offer over an explicit "
            ],
            [
              "def",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement (i.e. that it can be embedded inside a larger expression)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The first form means that the name of the resulting function object is specifically "
          },
          {
            "Text": "f",
            "AttrFlags": 2
          },
          {
            "Text": " instead of the generic "
          },
          {
            "Text": "\u003clambda\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ". This is more useful for tracebacks and string representations in general. The use of the assignment statement eliminates the sole benefit a lambda expression can offer over an explicit "
          },
          {
            "Text": "def",
            "AttrFlags": 2
          },
          {
            "Text": " statement (i.e. that it can be embedded inside a larger expression)."
          }
        ]
      }
    ],
    "title": "Lambda Inline, Anonymous Functions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}