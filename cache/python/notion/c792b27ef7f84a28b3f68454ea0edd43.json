{
  "ID": "c792b27e-f7f8-4a28-b3f6-8454ea0edd43",
  "Root": {
    "alive": true,
    "content": [
      "c22b7983-668d-4cb2-8c4e-8fe4a6732961"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550388781979,
    "id": "c792b27e-f7f8-4a28-b3f6-8454ea0edd43",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550467860000,
    "parent_id": "b6889a68-481f-4717-ad92-69e3fbc6822b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Scraping using BeautifulSoup4"
        ]
      ]
    },
    "type": "page",
    "version": 6,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388781976,
        "id": "c22b7983-668d-4cb2-8c4e-8fe4a6732961",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388781976,
        "parent_id": "c792b27e-f7f8-4a28-b3f6-8454ea0edd43",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "from bs4 import BeautifulSoup\nimport requests\n\n# Use the requests module to obtain a page\nres = requests.get('https://www.codechef.com/problems/easy')\n\n# Create a BeautifulSoup object\npage = BeautifulSoup(res.text, 'lxml')   # the text field contains the source of the page\n\n# Now use a CSS selector in order to get the table containing the list of problems\ndatatable_tags = page.select('table.dataTable')  # The problems are in the \u003ctable\u003e tag,\n                                                 # with class \"dataTable\"\n# We extract the first tag from the list, since that's what we desire\ndatatable = datatable_tags[0]\n# Now since we want problem names, they are contained in \u003cb\u003e tags, which are\n# directly nested under \u003ca\u003e tags\nprob_tags = datatable.select('a \u003e b')\nprob_names = [tag.getText().strip() for tag in prob_tags]\n\nprint prob_names"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "from bs4 import BeautifulSoup\nimport requests\n\n# Use the requests module to obtain a page\nres = requests.get('https://www.codechef.com/problems/easy')\n\n# Create a BeautifulSoup object\npage = BeautifulSoup(res.text, 'lxml')   # the text field contains the source of the page\n\n# Now use a CSS selector in order to get the table containing the list of problems\ndatatable_tags = page.select('table.dataTable')  # The problems are in the \u003ctable\u003e tag,\n                                                 # with class \"dataTable\"\n# We extract the first tag from the list, since that's what we desire\ndatatable = datatable_tags[0]\n# Now since we want problem names, they are contained in \u003cb\u003e tags, which are\n# directly nested under \u003ca\u003e tags\nprob_tags = datatable.select('a \u003e b')\nprob_names = [tag.getText().strip() for tag in prob_tags]\n\nprint prob_names",
        "code_language": "Plain Text"
      }
    ],
    "title": "Scraping using BeautifulSoup4"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}