{
  "ID": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
  "Root": {
    "alive": true,
    "content": [
      "b760b297-95f1-491d-b99a-69a4de81c5a0",
      "e581bd0d-e3fc-44c2-8e0b-71d3f182236f",
      "4c399142-2be7-4c09-a442-dac60d01162d",
      "5c81b2c4-a75b-4542-87f5-c5762653708e",
      "e8bd5279-5047-4e06-9310-fc7943f58eb1",
      "78ef1996-aa13-420c-9f55-a5c8ab002d1c",
      "42599184-91ba-40ea-b2f6-f7d13c21a551",
      "3820a20a-4d81-4f07-a913-96bb4551648a",
      "fb79f8c4-21d1-4b07-b1a1-3663b739a2fd",
      "c1113f7b-985f-4fb1-b5c4-fa06f45e2d4e",
      "cfad497a-eabc-4cdb-949d-4dcf7c1921ad",
      "bd80ebe0-e4da-4a99-8094-0859f6ec165a",
      "bb1fe942-81c5-48fa-9da8-6a6589f1ec7a",
      "7c6171e5-b18b-4b46-b03b-36b27aa65aa2",
      "b771cdec-8403-41ec-9364-5cfa94533023",
      "6a516fb7-843b-45c6-831c-c3c016215983",
      "1293f8f7-a1e5-4dbc-9bb0-063206ca8afe",
      "cc733052-0f9d-4961-8857-7302d765ad00"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550303668732,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550303820000,
    "parent_id": "e7c7de31-d271-44c8-ac67-6bf3fe8fd35a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Input from a File"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303668729,
        "id": "b760b297-95f1-491d-b99a-69a4de81c5a0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303668729,
        "parent_id": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Input can also be read from files. Files can be opened using the built-in function "
            ],
            [
              "open",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Using a "
            ],
            [
              "with \u003ccommand\u003e as \u003cname\u003e",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/python/928/context-managers-with-statement#t=201612062300080479662"
                ]
              ]
            ],
            [
              " syntax (called a ‘Context Manager’) makes using "
            ],
            [
              "open",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and getting a handle for the file super easy:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Input can also be read from files. Files can be opened using the built-in function "
          },
          {
            "Text": "open",
            "AttrFlags": 2
          },
          {
            "Text": ". Using a "
          },
          {
            "Text": "with \u003ccommand\u003e as \u003cname\u003e",
            "AttrFlags": 2,
            "Link": "http://stackoverflow.com/documentation/python/928/context-managers-with-statement#t=201612062300080479662"
          },
          {
            "Text": " syntax (called a ‘Context Manager’) makes using "
          },
          {
            "Text": "open",
            "AttrFlags": 2
          },
          {
            "Text": " and getting a handle for the file super easy:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303668730,
        "id": "e581bd0d-e3fc-44c2-8e0b-71d3f182236f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303820000,
        "parent_id": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "with open('somefile.txt', 'r') as fileobj:\n    # write code here using fileobj"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "with open('somefile.txt', 'r') as fileobj:\n    # write code here using fileobj",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303668730,
        "id": "4c399142-2be7-4c09-a442-dac60d01162d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303668730,
        "parent_id": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This ensures that when code execution leaves the block the file is automatically closed."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This ensures that when code execution leaves the block the file is automatically closed."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303668730,
        "id": "5c81b2c4-a75b-4542-87f5-c5762653708e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303668730,
        "parent_id": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Files can be opened in different modes. In the above example the file is opened as read-only. To open an existing file for reading only use "
            ],
            [
              "r",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". If you want to read that file as bytes use "
            ],
            [
              "rb",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". To append data to an existing file use "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Use "
            ],
            [
              "w",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to create a file or overwrite any existing files of the same name. You can use "
            ],
            [
              "r+",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to open a file for both reading and writing. The first argument of "
            ],
            [
              "open()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the filename, the second is the mode. If mode is left blank, it will default to "
            ],
            [
              "r",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Files can be opened in different modes. In the above example the file is opened as read-only. To open an existing file for reading only use "
          },
          {
            "Text": "r",
            "AttrFlags": 2
          },
          {
            "Text": ". If you want to read that file as bytes use "
          },
          {
            "Text": "rb",
            "AttrFlags": 2
          },
          {
            "Text": ". To append data to an existing file use "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": ". Use "
          },
          {
            "Text": "w",
            "AttrFlags": 2
          },
          {
            "Text": " to create a file or overwrite any existing files of the same name. You can use "
          },
          {
            "Text": "r+",
            "AttrFlags": 2
          },
          {
            "Text": " to open a file for both reading and writing. The first argument of "
          },
          {
            "Text": "open()",
            "AttrFlags": 2
          },
          {
            "Text": " is the filename, the second is the mode. If mode is left blank, it will default to "
          },
          {
            "Text": "r",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303668730,
        "id": "e8bd5279-5047-4e06-9310-fc7943f58eb1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303820000,
        "parent_id": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "# let's create an example file:\nwith open('shoppinglist.txt', 'w') as fileobj:\n    fileobj.write('tomato\\npasta\\ngarlic')\n\nwith open('shoppinglist.txt', 'r') as fileobj:\n    # this method makes a list where each line \n    # of the file is an element in the list\n    lines = fileobj.readlines()\n\nprint(lines)\n# ['tomato\\n', 'pasta\\n', 'garlic']\n\nwith open('shoppinglist.txt', 'r') as fileobj:\n    # here we read the whole content into one string:\n    content = fileobj.read()\n    # get a list of lines, just like int the previous example:\n    lines = content.split('\\n')\n\nprint(lines)\n# ['tomato', 'pasta', 'garlic']"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "# let's create an example file:\nwith open('shoppinglist.txt', 'w') as fileobj:\n    fileobj.write('tomato\\npasta\\ngarlic')\n\nwith open('shoppinglist.txt', 'r') as fileobj:\n    # this method makes a list where each line \n    # of the file is an element in the list\n    lines = fileobj.readlines()\n\nprint(lines)\n# ['tomato\\n', 'pasta\\n', 'garlic']\n\nwith open('shoppinglist.txt', 'r') as fileobj:\n    # here we read the whole content into one string:\n    content = fileobj.read()\n    # get a list of lines, just like int the previous example:\n    lines = content.split('\\n')\n\nprint(lines)\n# ['tomato', 'pasta', 'garlic']",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303668730,
        "id": "78ef1996-aa13-420c-9f55-a5c8ab002d1c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303668730,
        "parent_id": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the size of the file is tiny, it is safe to read the whole file contents into memory. If the file is very large it is often better to read line-by-line or by chunks, and process the input in the same loop. To do that:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the size of the file is tiny, it is safe to read the whole file contents into memory. If the file is very large it is often better to read line-by-line or by chunks, and process the input in the same loop. To do that:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303668731,
        "id": "42599184-91ba-40ea-b2f6-f7d13c21a551",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303820000,
        "parent_id": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "with open('shoppinglist.txt', 'r') as fileobj:\n    # this method reads line by line:\n    lines = []\n    for line in fileobj:\n        lines.append(line.strip())"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "with open('shoppinglist.txt', 'r') as fileobj:\n    # this method reads line by line:\n    lines = []\n    for line in fileobj:\n        lines.append(line.strip())",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303668731,
        "id": "3820a20a-4d81-4f07-a913-96bb4551648a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303668731,
        "parent_id": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When reading files, be aware of the operating system-specific line-break characters. Although "
            ],
            [
              "for line in fileobj",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " automatically strips them off, it is always safe to call "
            ],
            [
              "strip()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " on the lines read, as it is shown above."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When reading files, be aware of the operating system-specific line-break characters. Although "
          },
          {
            "Text": "for line in fileobj",
            "AttrFlags": 2
          },
          {
            "Text": " automatically strips them off, it is always safe to call "
          },
          {
            "Text": "strip()",
            "AttrFlags": 2
          },
          {
            "Text": " on the lines read, as it is shown above."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303668731,
        "id": "fb79f8c4-21d1-4b07-b1a1-3663b739a2fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303668731,
        "parent_id": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Opened files ("
            ],
            [
              "fileobj",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the above examples) always point to a specific location in the file. When they are first opened the file handle points to the very beginning of the file, which is the position "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The file handle can display it’s current position with "
            ],
            [
              "tell",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Opened files ("
          },
          {
            "Text": "fileobj",
            "AttrFlags": 2
          },
          {
            "Text": " in the above examples) always point to a specific location in the file. When they are first opened the file handle points to the very beginning of the file, which is the position "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": ". The file handle can display it’s current position with "
          },
          {
            "Text": "tell",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303668731,
        "id": "c1113f7b-985f-4fb1-b5c4-fa06f45e2d4e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303820000,
        "parent_id": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "fileobj = open('shoppinglist.txt', 'r')\npos = fileobj.tell()\nprint('We are at %u.' % pos) # We are at 0."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "fileobj = open('shoppinglist.txt', 'r')\npos = fileobj.tell()\nprint('We are at %u.' % pos) # We are at 0.",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303668731,
        "id": "cfad497a-eabc-4cdb-949d-4dcf7c1921ad",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303668731,
        "parent_id": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Upon reading all the content, the file handler’s position will be pointed at the end of the file:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Upon reading all the content, the file handler’s position will be pointed at the end of the file:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303668731,
        "id": "bd80ebe0-e4da-4a99-8094-0859f6ec165a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303820000,
        "parent_id": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "content = fileobj.read()\nend = fileobj.tell()\nprint('This file was %u characters long.' % end)\n# This file was 22 characters long.\nfileobj.close()"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "content = fileobj.read()\nend = fileobj.tell()\nprint('This file was %u characters long.' % end)\n# This file was 22 characters long.\nfileobj.close()",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303668731,
        "id": "bb1fe942-81c5-48fa-9da8-6a6589f1ec7a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303668731,
        "parent_id": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The file handler position can be set to whatever is needed:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The file handler position can be set to whatever is needed:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303668731,
        "id": "7c6171e5-b18b-4b46-b03b-36b27aa65aa2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303820000,
        "parent_id": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "fileobj = open('shoppinglist.txt', 'r')\nfileobj.seek(7)\npos = fileobj.tell()\nprint('We are at character #%u.' % pos)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "fileobj = open('shoppinglist.txt', 'r')\nfileobj.seek(7)\npos = fileobj.tell()\nprint('We are at character #%u.' % pos)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303668732,
        "id": "b771cdec-8403-41ec-9364-5cfa94533023",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303668732,
        "parent_id": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can also read any length from the file content during a given call. To do this pass an argument for "
            ],
            [
              "read()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". When "
            ],
            [
              "read()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is called with no argument it will read until the end of the file. If you pass an argument it will read that number of bytes or characters, depending on the mode ("
            ],
            [
              "rb",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "r",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " respectively):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can also read any length from the file content during a given call. To do this pass an argument for "
          },
          {
            "Text": "read()",
            "AttrFlags": 2
          },
          {
            "Text": ". When "
          },
          {
            "Text": "read()",
            "AttrFlags": 2
          },
          {
            "Text": " is called with no argument it will read until the end of the file. If you pass an argument it will read that number of bytes or characters, depending on the mode ("
          },
          {
            "Text": "rb",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "r",
            "AttrFlags": 2
          },
          {
            "Text": " respectively):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303668732,
        "id": "6a516fb7-843b-45c6-831c-c3c016215983",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303820000,
        "parent_id": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "# reads the next 4 characters \n# starting at the current position\nnext4 = fileobj.read(4)\n# what we got?\nprint(next4) # 'cucu'\n# where we are now?\npos = fileobj.tell()\nprint('We are at %u.' % pos) # We are at 11, as we was at 7, and read 4 chars.\n\nfileobj.close()"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "# reads the next 4 characters \n# starting at the current position\nnext4 = fileobj.read(4)\n# what we got?\nprint(next4) # 'cucu'\n# where we are now?\npos = fileobj.tell()\nprint('We are at %u.' % pos) # We are at 11, as we was at 7, and read 4 chars.\n\nfileobj.close()",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303668732,
        "id": "1293f8f7-a1e5-4dbc-9bb0-063206ca8afe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303668732,
        "parent_id": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To demonstrate the difference between characters and bytes:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To demonstrate the difference between characters and bytes:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303668732,
        "id": "cc733052-0f9d-4961-8857-7302d765ad00",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303820000,
        "parent_id": "0cccd1ce-6cbc-4665-abee-3d122b14afe7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "with open('shoppinglist.txt', 'r') as fileobj:\n    print(type(fileobj.read())) # \u003cclass 'str'\u003e\n\nwith open('shoppinglist.txt', 'rb') as fileobj:\n    print(type(fileobj.read())) # \u003cclass 'bytes'\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "with open('shoppinglist.txt', 'r') as fileobj:\n    print(type(fileobj.read())) # \u003cclass 'str'\u003e\n\nwith open('shoppinglist.txt', 'rb') as fileobj:\n    print(type(fileobj.read())) # \u003cclass 'bytes'\u003e",
        "code_language": "Python"
      }
    ],
    "title": "Input from a File",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}