{
  "ID": "6cc2013a-9de8-42aa-ba6d-2097fac86bf6",
  "Root": {
    "alive": true,
    "content": [
      "712e9b54-b18f-4611-bf96-d11f5bb0fd38",
      "5a5b2df8-b24d-41f7-a4ce-78feaa55c783",
      "211f7225-1a17-4210-b8e9-774bd66692f8",
      "ea5a10eb-7c4e-45a7-8875-b2f41a0643a5",
      "8cf6556b-a0ba-475a-8452-19ab81befc44",
      "4c66c2d7-bfb2-4ea8-8ae9-2b578f84d552",
      "a77e5e54-8722-49a8-8938-031dc1c4dd0f",
      "771c3400-cb26-4676-a0eb-1e60aacabc45",
      "bdd99eeb-1472-433c-b837-1093cb6ecc98"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550350778148,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "6cc2013a-9de8-42aa-ba6d-2097fac86bf6",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550352180000,
    "parent_id": "71fc79ae-18b5-47de-ae64-7e006c4197b1",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Testing if an object is None and assigning it"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350778140,
        "id": "712e9b54-b18f-4611-bf96-d11f5bb0fd38",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350778140,
        "parent_id": "6cc2013a-9de8-42aa-ba6d-2097fac86bf6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You’ll often want to assign something to an object if it is "
            ],
            [
              "None",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", indicating it has not been assigned. We’ll use "
            ],
            [
              "aDate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You’ll often want to assign something to an object if it is "
          },
          {
            "Text": "None",
            "AttrFlags": 2
          },
          {
            "Text": ", indicating it has not been assigned. We’ll use "
          },
          {
            "Text": "aDate",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350778143,
        "id": "5a5b2df8-b24d-41f7-a4ce-78feaa55c783",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350778143,
        "parent_id": "6cc2013a-9de8-42aa-ba6d-2097fac86bf6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The simplest way to do this is to use the "
            ],
            [
              "is None",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " test."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The simplest way to do this is to use the "
          },
          {
            "Text": "is None",
            "AttrFlags": 2
          },
          {
            "Text": " test."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350778143,
        "id": "211f7225-1a17-4210-b8e9-774bd66692f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352180000,
        "parent_id": "6cc2013a-9de8-42aa-ba6d-2097fac86bf6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "if aDate is None:\n    aDate = datetime.date.today()"
            ]
          ]
        },
        "type": "code",
        "version": 5,
        "code": "if aDate is None:\n    aDate = datetime.date.today()",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350778144,
        "id": "ea5a10eb-7c4e-45a7-8875-b2f41a0643a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350778144,
        "parent_id": "6cc2013a-9de8-42aa-ba6d-2097fac86bf6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "(Note that it is more Pythonic to say "
            ],
            [
              "is None",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instead of "
            ],
            [
              "== None",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ".)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "(Note that it is more Pythonic to say "
          },
          {
            "Text": "is None",
            "AttrFlags": 2
          },
          {
            "Text": " instead of "
          },
          {
            "Text": "== None",
            "AttrFlags": 2
          },
          {
            "Text": ".)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350778144,
        "id": "8cf6556b-a0ba-475a-8452-19ab81befc44",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350778144,
        "parent_id": "6cc2013a-9de8-42aa-ba6d-2097fac86bf6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But this can be optimized slightly by exploiting the notion that "
            ],
            [
              "not None",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will evaluate to "
            ],
            [
              "True",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in a boolean expression. The following code is equivalent:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But this can be optimized slightly by exploiting the notion that "
          },
          {
            "Text": "not None",
            "AttrFlags": 2
          },
          {
            "Text": " will evaluate to "
          },
          {
            "Text": "True",
            "AttrFlags": 2
          },
          {
            "Text": " in a boolean expression. The following code is equivalent:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350778144,
        "id": "4c66c2d7-bfb2-4ea8-8ae9-2b578f84d552",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352180000,
        "parent_id": "6cc2013a-9de8-42aa-ba6d-2097fac86bf6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "if not aDate:\n    aDate = datetime.date.today()"
            ]
          ]
        },
        "type": "code",
        "version": 5,
        "code": "if not aDate:\n    aDate = datetime.date.today()",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350778144,
        "id": "a77e5e54-8722-49a8-8938-031dc1c4dd0f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350778144,
        "parent_id": "6cc2013a-9de8-42aa-ba6d-2097fac86bf6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But there is a more Pythonic way. The following code is also equivalent:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But there is a more Pythonic way. The following code is also equivalent:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350778144,
        "id": "771c3400-cb26-4676-a0eb-1e60aacabc45",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352180000,
        "parent_id": "6cc2013a-9de8-42aa-ba6d-2097fac86bf6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "aDate = aDate or datetime.date.today()"
            ]
          ]
        },
        "type": "code",
        "version": 5,
        "code": "aDate = aDate or datetime.date.today()",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350778148,
        "id": "bdd99eeb-1472-433c-b837-1093cb6ecc98",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350778148,
        "parent_id": "6cc2013a-9de8-42aa-ba6d-2097fac86bf6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This does a "
            ],
            [
              "Short Circuit evaluation",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/python/1731/boolean-operators/5836/short-circuit-evaluation#t=201703171928470318746"
                ]
              ]
            ],
            [
              ". If "
            ],
            [
              "aDate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is initialized and is "
            ],
            [
              "not None",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", then it gets assigned to itself with no net effect. If it "
            ],
            [
              "is None",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", then the "
            ],
            [
              "datetime.date.today()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " gets assigned to "
            ],
            [
              "aDate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This does a "
          },
          {
            "Text": "Short Circuit evaluation",
            "Link": "http://stackoverflow.com/documentation/python/1731/boolean-operators/5836/short-circuit-evaluation#t=201703171928470318746"
          },
          {
            "Text": ". If "
          },
          {
            "Text": "aDate",
            "AttrFlags": 2
          },
          {
            "Text": " is initialized and is "
          },
          {
            "Text": "not None",
            "AttrFlags": 2
          },
          {
            "Text": ", then it gets assigned to itself with no net effect. If it "
          },
          {
            "Text": "is None",
            "AttrFlags": 2
          },
          {
            "Text": ", then the "
          },
          {
            "Text": "datetime.date.today()",
            "AttrFlags": 2
          },
          {
            "Text": " gets assigned to "
          },
          {
            "Text": "aDate",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Testing if an object is None and assigning it",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}