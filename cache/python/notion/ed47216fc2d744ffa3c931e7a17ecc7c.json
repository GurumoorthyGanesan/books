{
  "ID": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
  "Root": {
    "alive": true,
    "content": [
      "e41bfbcc-b306-46cb-859e-58404d695c73",
      "000281d6-f211-4778-bd40-8f360fd1fdd3",
      "0a54aff8-37b0-4f11-b08f-d02753280338",
      "1cfb8760-4af1-4783-af4d-2713e6a0c6e4",
      "eb7f01f8-c864-4654-bd14-8aef7d91ae55",
      "5a956437-0dc5-406f-bfc9-9b48a1fa002f",
      "1eaaba86-d96a-4af9-867f-79ce0c9d74e6",
      "22e95d9e-5012-4c78-a3df-82a55a20da12",
      "16f64f20-a269-48ac-a335-b9d2c7a28426",
      "f3269a25-98ea-489e-ac7a-266e810acf41",
      "fa2cead4-4f3f-49c0-b364-4a46f6fa2891",
      "e7652a43-7e73-4d0c-bea4-1f60053543f9",
      "82f51050-a152-439b-94bd-3c498461318b",
      "b455793d-9283-4aa2-8671-7b72a74937ed",
      "3433cbf7-ec9d-461c-a289-485a5c989ea0",
      "e0a3bd8d-568c-4590-b387-39c5b2df41b2",
      "58b75226-20ae-4981-b9c0-5f1ee28543a0",
      "88c81851-8981-416a-bdf1-863ff4872949",
      "0828354b-042c-4b02-bf49-e1408c0699db",
      "150a8cfa-3eac-4b77-8bee-b7bc4eb8959e",
      "9c5b3e8a-a0ab-4f46-ace7-7697ff3e9fd4",
      "323b26c5-10e1-4ed4-850a-760254f827ec",
      "18041f71-d0c2-4202-a9cc-b02b861b801d",
      "66fcf1df-7a56-4e16-a9ee-a8163fd66766",
      "45c0a390-3014-44e2-925e-0464886227f5",
      "521cc311-6a01-43a5-b0d3-ec8441757b5a",
      "540b069e-6645-44f1-8af7-ee5c397dac80",
      "1e84e1b4-27bc-4e58-99ec-634b4cf2ad2b",
      "7f3fafbd-6301-41b7-8c61-e113e070da05",
      "a346fb34-75c7-4daf-b59d-3c38f70c60a9",
      "129dc412-9e0d-48a2-8754-065359da4920",
      "3a1093c1-9e77-47fe-ae26-e447f9e9ad88",
      "da98fce9-8862-47ad-9ff6-6034f4d83ba8",
      "4d47877d-97d4-4455-9a01-b436ca944983"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550261081972,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550262060000,
    "parent_id": "e895cb09-a4b0-4965-a04d-695253fcf7c6",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Defining a function with an arbitrary number of arguments"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081962,
        "id": "e41bfbcc-b306-46cb-859e-58404d695c73",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081962,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Arbitrary number of positional arguments:"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Arbitrary number of positional arguments:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081964,
        "id": "000281d6-f211-4778-bd40-8f360fd1fdd3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081964,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Defining a function capable of taking an arbitrary number of arguments can be done by prefixing one of the arguments with a "
            ],
            [
              "\\*",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Defining a function capable of taking an arbitrary number of arguments can be done by prefixing one of the arguments with a "
          },
          {
            "Text": "\\*",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081964,
        "id": "0a54aff8-37b0-4f11-b08f-d02753280338",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262060000,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def func(*args):\n    # args will be a tuple containing all values that are passed in\n    for i in args:\n        print(i)\n\nfunc(1, 2, 3)  # Calling it with 3 arguments\n# Out: 1\n#      2\n#      3\n\nlist_of_arg_values = [1, 2, 3]\nfunc(*list_of_arg_values)  # Calling it with list of values, * expands the list\n# Out: 1\n#      2\n#      3 \n\nfunc()  # Calling it without arguments\n# No Output"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def func(*args):\n    # args will be a tuple containing all values that are passed in\n    for i in args:\n        print(i)\n\nfunc(1, 2, 3)  # Calling it with 3 arguments\n# Out: 1\n#      2\n#      3\n\nlist_of_arg_values = [1, 2, 3]\nfunc(*list_of_arg_values)  # Calling it with list of values, * expands the list\n# Out: 1\n#      2\n#      3 \n\nfunc()  # Calling it without arguments\n# No Output",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081965,
        "id": "1cfb8760-4af1-4783-af4d-2713e6a0c6e4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081965,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You "
            ],
            [
              "can’t",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " provide a default for "
            ],
            [
              "args",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", for example "
            ],
            [
              "func(*args=[1, 2, 3])",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will raise a syntax error (won’t even compile)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You "
          },
          {
            "Text": "can’t",
            "AttrFlags": 1
          },
          {
            "Text": " provide a default for "
          },
          {
            "Text": "args",
            "AttrFlags": 2
          },
          {
            "Text": ", for example "
          },
          {
            "Text": "func(*args=[1, 2, 3])",
            "AttrFlags": 2
          },
          {
            "Text": " will raise a syntax error (won’t even compile)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081965,
        "id": "eb7f01f8-c864-4654-bd14-8aef7d91ae55",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081965,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You "
            ],
            [
              "can’t",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " provide these by name when calling the function, for example "
            ],
            [
              "func(*args=[1, 2, 3])",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will raise a "
            ],
            [
              "TypeError",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You "
          },
          {
            "Text": "can’t",
            "AttrFlags": 1
          },
          {
            "Text": " provide these by name when calling the function, for example "
          },
          {
            "Text": "func(*args=[1, 2, 3])",
            "AttrFlags": 2
          },
          {
            "Text": " will raise a "
          },
          {
            "Text": "TypeError",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081965,
        "id": "5a956437-0dc5-406f-bfc9-9b48a1fa002f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081965,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But if you already have your arguments in an array (or any other "
            ],
            [
              "Iterable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "), you "
            ],
            [
              "can",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " invoke your function like this: "
            ],
            [
              "func(*my_stuff)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But if you already have your arguments in an array (or any other "
          },
          {
            "Text": "Iterable",
            "AttrFlags": 2
          },
          {
            "Text": "), you "
          },
          {
            "Text": "can",
            "AttrFlags": 1
          },
          {
            "Text": " invoke your function like this: "
          },
          {
            "Text": "func(*my_stuff)",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081965,
        "id": "1eaaba86-d96a-4af9-867f-79ce0c9d74e6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081965,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These arguments ("
            ],
            [
              "*args",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") can be accessed by index, for example "
            ],
            [
              "args[0]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will return the first argument"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These arguments ("
          },
          {
            "Text": "*args",
            "AttrFlags": 2
          },
          {
            "Text": ") can be accessed by index, for example "
          },
          {
            "Text": "args[0]",
            "AttrFlags": 2
          },
          {
            "Text": " will return the first argument"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081965,
        "id": "22e95d9e-5012-4c78-a3df-82a55a20da12",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081965,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Arbitrary number of keyword arguments"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Arbitrary number of keyword arguments"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081966,
        "id": "16f64f20-a269-48ac-a335-b9d2c7a28426",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081966,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can take an arbitrary number of arguments with a name by defining an argument in the definition with "
            ],
            [
              "two",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in front of it:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can take an arbitrary number of arguments with a name by defining an argument in the definition with "
          },
          {
            "Text": "two",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "\\*",
            "AttrFlags": 2
          },
          {
            "Text": " in front of it:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081966,
        "id": "f3269a25-98ea-489e-ac7a-266e810acf41",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262060000,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def func(**kwargs):\n    # kwargs will be a dictionary containing the names as keys and the values as values\n    for name, value in kwargs.items():\n        print(name, value)\n\nfunc(value1=1, value2=2, value3=3)   # Calling it with 3 arguments\n# Out: value1 1\n#      value2 2\n#      value3 3\n\nfunc()                               # Calling it without arguments\n# No Out put\n\nmy_dict = {'foo': 1, 'bar': 2}\nfunc(**my_dict)                      # Calling it with a dictionary\n# Out: foo 1\n#      bar 2"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def func(**kwargs):\n    # kwargs will be a dictionary containing the names as keys and the values as values\n    for name, value in kwargs.items():\n        print(name, value)\n\nfunc(value1=1, value2=2, value3=3)   # Calling it with 3 arguments\n# Out: value1 1\n#      value2 2\n#      value3 3\n\nfunc()                               # Calling it without arguments\n# No Out put\n\nmy_dict = {'foo': 1, 'bar': 2}\nfunc(**my_dict)                      # Calling it with a dictionary\n# Out: foo 1\n#      bar 2",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081966,
        "id": "fa2cead4-4f3f-49c0-b364-4a46f6fa2891",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081966,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You "
            ],
            [
              "can’t",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " provide these "
            ],
            [
              "without",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " names, for example "
            ],
            [
              "func(1, 2, 3)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will raise a "
            ],
            [
              "TypeError",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You "
          },
          {
            "Text": "can’t",
            "AttrFlags": 1
          },
          {
            "Text": " provide these "
          },
          {
            "Text": "without",
            "AttrFlags": 1
          },
          {
            "Text": " names, for example "
          },
          {
            "Text": "func(1, 2, 3)",
            "AttrFlags": 2
          },
          {
            "Text": " will raise a "
          },
          {
            "Text": "TypeError",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081966,
        "id": "e7652a43-7e73-4d0c-bea4-1f60053543f9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081966,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "kwargs",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a plain native python dictionary. For example, "
            ],
            [
              "args['value1']",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will give the value for argument "
            ],
            [
              "value1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Be sure to check beforehand that there is such an argument or a "
            ],
            [
              "KeyError",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be raised."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "kwargs",
            "AttrFlags": 2
          },
          {
            "Text": " is a plain native python dictionary. For example, "
          },
          {
            "Text": "args['value1']",
            "AttrFlags": 2
          },
          {
            "Text": " will give the value for argument "
          },
          {
            "Text": "value1",
            "AttrFlags": 2
          },
          {
            "Text": ". Be sure to check beforehand that there is such an argument or a "
          },
          {
            "Text": "KeyError",
            "AttrFlags": 2
          },
          {
            "Text": " will be raised."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081966,
        "id": "82f51050-a152-439b-94bd-3c498461318b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081966,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Warning"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Warning"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081966,
        "id": "b455793d-9283-4aa2-8671-7b72a74937ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081966,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can mix these with other optional and required arguments but the order inside the definition matters."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can mix these with other optional and required arguments but the order inside the definition matters."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081967,
        "id": "3433cbf7-ec9d-461c-a289-485a5c989ea0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081967,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "positional/keyword",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " arguments come first. (Required arguments)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "positional/keyword",
            "AttrFlags": 1
          },
          {
            "Text": " arguments come first. (Required arguments)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081967,
        "id": "e0a3bd8d-568c-4590-b387-39c5b2df41b2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081967,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Then comes the "
            ],
            [
              "arbitrary",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "*arg",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " arguments. (Optional)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Then comes the "
          },
          {
            "Text": "arbitrary",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "*arg",
            "AttrFlags": 2
          },
          {
            "Text": " arguments. (Optional)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081967,
        "id": "58b75226-20ae-4981-b9c0-5f1ee28543a0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081967,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Then "
            ],
            [
              "keyword-only",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " arguments come next. (Required)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Then "
          },
          {
            "Text": "keyword-only",
            "AttrFlags": 1
          },
          {
            "Text": " arguments come next. (Required)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081967,
        "id": "88c81851-8981-416a-bdf1-863ff4872949",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081967,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finally the "
            ],
            [
              "arbitrary keyword",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "**kwargs",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " come. (Optional)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finally the "
          },
          {
            "Text": "arbitrary keyword",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "**kwargs",
            "AttrFlags": 2
          },
          {
            "Text": " come. (Optional)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081967,
        "id": "0828354b-042c-4b02-bf49-e1408c0699db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262060000,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "#       |-positional-|-optional-|---keyword-only--|-optional-|\ndef func(arg1, arg2=10 , *args, kwarg1, kwarg2=2, **kwargs):\n     pass"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "#       |-positional-|-optional-|---keyword-only--|-optional-|\ndef func(arg1, arg2=10 , *args, kwarg1, kwarg2=2, **kwargs):\n     pass",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081968,
        "id": "150a8cfa-3eac-4b77-8bee-b7bc4eb8959e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081968,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "arg1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " must be given, otherwise a "
            ],
            [
              "TypeError",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is raised. It can be given as positional ("
            ],
            [
              "func(10)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") or keyword argument ("
            ],
            [
              "func(arg1=10)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "arg1",
            "AttrFlags": 2
          },
          {
            "Text": " must be given, otherwise a "
          },
          {
            "Text": "TypeError",
            "AttrFlags": 2
          },
          {
            "Text": " is raised. It can be given as positional ("
          },
          {
            "Text": "func(10)",
            "AttrFlags": 2
          },
          {
            "Text": ") or keyword argument ("
          },
          {
            "Text": "func(arg1=10)",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081968,
        "id": "9c5b3e8a-a0ab-4f46-ace7-7697ff3e9fd4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081968,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "kwarg1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " must also be given, but it can only be provided as keyword-argument: "
            ],
            [
              "func(kwarg1=10)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "kwarg1",
            "AttrFlags": 2
          },
          {
            "Text": " must also be given, but it can only be provided as keyword-argument: "
          },
          {
            "Text": "func(kwarg1=10)",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081968,
        "id": "323b26c5-10e1-4ed4-850a-760254f827ec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081968,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "arg2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "kwarg2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are optional. If the value is to be changed the same rules as for "
            ],
            [
              "arg1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (either positional or keyword) and "
            ],
            [
              "kwarg1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (only keyword) apply."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "arg2",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "kwarg2",
            "AttrFlags": 2
          },
          {
            "Text": " are optional. If the value is to be changed the same rules as for "
          },
          {
            "Text": "arg1",
            "AttrFlags": 2
          },
          {
            "Text": " (either positional or keyword) and "
          },
          {
            "Text": "kwarg1",
            "AttrFlags": 2
          },
          {
            "Text": " (only keyword) apply."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081969,
        "id": "18041f71-d0c2-4202-a9cc-b02b861b801d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081969,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "*args",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " catches additional positional parameters. But note, that "
            ],
            [
              "arg1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "arg2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " must be provided as positional arguments to pass arguments to "
            ],
            [
              "*args",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": "
            ],
            [
              "func(1, 1, 1, 1)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "*args",
            "AttrFlags": 2
          },
          {
            "Text": " catches additional positional parameters. But note, that "
          },
          {
            "Text": "arg1",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "arg2",
            "AttrFlags": 2
          },
          {
            "Text": " must be provided as positional arguments to pass arguments to "
          },
          {
            "Text": "*args",
            "AttrFlags": 2
          },
          {
            "Text": ": "
          },
          {
            "Text": "func(1, 1, 1, 1)",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081969,
        "id": "66fcf1df-7a56-4e16-a9ee-a8163fd66766",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081969,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "**kwargs",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " catches all additional keyword parameters. In this case any parameter that is not "
            ],
            [
              "arg1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "arg2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "kwarg1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "kwarg2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". For example: "
            ],
            [
              "func(kwarg3=10)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "**kwargs",
            "AttrFlags": 2
          },
          {
            "Text": " catches all additional keyword parameters. In this case any parameter that is not "
          },
          {
            "Text": "arg1",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "arg2",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "kwarg1",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "kwarg2",
            "AttrFlags": 2
          },
          {
            "Text": ". For example: "
          },
          {
            "Text": "func(kwarg3=10)",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081970,
        "id": "45c0a390-3014-44e2-925e-0464886227f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081970,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Python 3, you can use "
            ],
            [
              "\\*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " alone to indicate that all subsequent arguments must be specified as keywords. For instance the "
            ],
            [
              "math.isclose",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function in Python 3.5 and higher is defined using "
            ],
            [
              "def math.isclose (a, b, *, rel_tol=1e-09, abs_tol=0.0)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which means the first two arguments can be supplied positionally but the optional third and fourth parameters can only be supplied as keyword arguments."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Python 3, you can use "
          },
          {
            "Text": "\\*",
            "AttrFlags": 2
          },
          {
            "Text": " alone to indicate that all subsequent arguments must be specified as keywords. For instance the "
          },
          {
            "Text": "math.isclose",
            "AttrFlags": 2
          },
          {
            "Text": " function in Python 3.5 and higher is defined using "
          },
          {
            "Text": "def math.isclose (a, b, *, rel_tol=1e-09, abs_tol=0.0)",
            "AttrFlags": 2
          },
          {
            "Text": ", which means the first two arguments can be supplied positionally but the optional third and fourth parameters can only be supplied as keyword arguments."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081970,
        "id": "521cc311-6a01-43a5-b0d3-ec8441757b5a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081970,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Python 2.x doesn’t support keyword-only parameters. This behavior can be emulated with "
            ],
            [
              "kwargs",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Python 2.x doesn’t support keyword-only parameters. This behavior can be emulated with "
          },
          {
            "Text": "kwargs",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081970,
        "id": "540b069e-6645-44f1-8af7-ee5c397dac80",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262060000,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def func(arg1, arg2=10, **kwargs):\n    try:\n        kwarg1 = kwargs.pop(\"kwarg1\")\n    except KeyError:\n        raise TypeError(\"missing required keyword-only argument: 'kwarg1'\")\n\n    kwarg2 = kwargs.pop(\"kwarg2\", 2)\n    # function body ..."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def func(arg1, arg2=10, **kwargs):\n    try:\n        kwarg1 = kwargs.pop(\"kwarg1\")\n    except KeyError:\n        raise TypeError(\"missing required keyword-only argument: 'kwarg1'\")\n\n    kwarg2 = kwargs.pop(\"kwarg2\", 2)\n    # function body ...",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081970,
        "id": "1e84e1b4-27bc-4e58-99ec-634b4cf2ad2b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081970,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note on Naming"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note on Naming"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081970,
        "id": "7f3fafbd-6301-41b7-8c61-e113e070da05",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081970,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The convention of naming optional positional arguments "
            ],
            [
              "args",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and optional keyword arguments "
            ],
            [
              "kwargs",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is just a convention you "
            ],
            [
              "can",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " use any names you like "
            ],
            [
              "but",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " it is useful to follow the convention so that others know what you are doing, "
            ],
            [
              "or even yourself later",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " so please do."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The convention of naming optional positional arguments "
          },
          {
            "Text": "args",
            "AttrFlags": 2
          },
          {
            "Text": " and optional keyword arguments "
          },
          {
            "Text": "kwargs",
            "AttrFlags": 2
          },
          {
            "Text": " is just a convention you "
          },
          {
            "Text": "can",
            "AttrFlags": 1
          },
          {
            "Text": " use any names you like "
          },
          {
            "Text": "but",
            "AttrFlags": 1
          },
          {
            "Text": " it is useful to follow the convention so that others know what you are doing, "
          },
          {
            "Text": "or even yourself later",
            "AttrFlags": 4
          },
          {
            "Text": " so please do."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081971,
        "id": "a346fb34-75c7-4daf-b59d-3c38f70c60a9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081971,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note on Uniqueness"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note on Uniqueness"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081971,
        "id": "129dc412-9e0d-48a2-8754-065359da4920",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081971,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Any function can be defined with "
            ],
            [
              "none or one",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "*args",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "none or one",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "**kwargs",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " but not with more than one of each. Also "
            ],
            [
              "*args",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "must",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " be the last positional argument and "
            ],
            [
              "**kwargs",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " must be the last parameter. Attempting to use more than one of either "
            ],
            [
              "will",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " result in a Syntax Error exception."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Any function can be defined with "
          },
          {
            "Text": "none or one",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "*args",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "none or one",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "**kwargs",
            "AttrFlags": 2
          },
          {
            "Text": " but not with more than one of each. Also "
          },
          {
            "Text": "*args",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "must",
            "AttrFlags": 1
          },
          {
            "Text": " be the last positional argument and "
          },
          {
            "Text": "**kwargs",
            "AttrFlags": 2
          },
          {
            "Text": " must be the last parameter. Attempting to use more than one of either "
          },
          {
            "Text": "will",
            "AttrFlags": 1
          },
          {
            "Text": " result in a Syntax Error exception."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081971,
        "id": "3a1093c1-9e77-47fe-ae26-e447f9e9ad88",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081971,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note on Nesting Functions with Optional Arguments"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note on Nesting Functions with Optional Arguments"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081971,
        "id": "da98fce9-8862-47ad-9ff6-6034f4d83ba8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081971,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is possible to nest such functions and the usual convention is to remove the items that the code has already handled "
            ],
            [
              "but",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " if you are passing down the parameters you need to pass optional positional args with a "
            ],
            [
              "\\*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " prefix and optional keyword args with a "
            ],
            [
              "**",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " prefix, otherwise args with be passed as a list or tuple and kwargs as a single dictionary. e.g.:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is possible to nest such functions and the usual convention is to remove the items that the code has already handled "
          },
          {
            "Text": "but",
            "AttrFlags": 1
          },
          {
            "Text": " if you are passing down the parameters you need to pass optional positional args with a "
          },
          {
            "Text": "\\*",
            "AttrFlags": 2
          },
          {
            "Text": " prefix and optional keyword args with a "
          },
          {
            "Text": "**",
            "AttrFlags": 2
          },
          {
            "Text": " prefix, otherwise args with be passed as a list or tuple and kwargs as a single dictionary. e.g.:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081972,
        "id": "4d47877d-97d4-4455-9a01-b436ca944983",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262060000,
        "parent_id": "ed47216f-c2d7-44ff-a3c9-31e7a17ecc7c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def fn(**kwargs):\n    print(kwargs)\n    f1(**kwargs)\n\ndef f1(**kwargs):\n    print(len(kwargs))\n\nfn(a=1, b=2)\n# Out:\n# {'a': 1, 'b': 2}\n# 2"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def fn(**kwargs):\n    print(kwargs)\n    f1(**kwargs)\n\ndef f1(**kwargs):\n    print(len(kwargs))\n\nfn(a=1, b=2)\n# Out:\n# {'a': 1, 'b': 2}\n# 2",
        "code_language": "Python"
      }
    ],
    "title": "Defining a function with an arbitrary number of arguments",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}