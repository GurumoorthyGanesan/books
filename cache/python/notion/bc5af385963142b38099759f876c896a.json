{
  "ID": "bc5af385-9631-42b3-8099-759f876c896a",
  "Root": {
    "alive": true,
    "content": [
      "6c86993d-7c00-45b8-b507-8eeb6897bdf8",
      "8e00113c-1395-414e-a4ab-ecbdb227be4d",
      "0dad5468-27ca-4f7b-bd36-82418891e92a",
      "f3f8687d-5e4f-4a15-9be7-545d180c64dd",
      "3a71f4e0-0642-4dba-b7bd-327242546ea1",
      "ab2f7c54-c37b-4b88-958f-27cf7de83039",
      "c993b7da-e3af-4d5d-9e5a-f511c279ea23"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550388852998,
    "id": "bc5af385-9631-42b3-8099-759f876c896a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550468280000,
    "parent_id": "2a4bdab1-4a05-4c5d-9f05-61c2e4d09b32",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Handling unimplemented behaviour"
        ]
      ]
    },
    "type": "page",
    "version": 6,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388852996,
        "id": "6c86993d-7c00-45b8-b507-8eeb6897bdf8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388852996,
        "parent_id": "bc5af385-9631-42b3-8099-759f876c896a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If your class doesn’t implement a specific overloaded operator for the argument types provided, it should "
            ],
            [
              "return NotImplemented",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " ("
            ],
            [
              "note",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " that this is a "
            ],
            [
              "special constant",
              [
                [
                  "a",
                  "https://docs.python.org/3/library/constants.html#NotImplemented"
                ]
              ]
            ],
            [
              ", not the same as "
            ],
            [
              "NotImplementedError",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "). This will allow Python to fall back to trying other methods to make the operation work:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If your class doesn’t implement a specific overloaded operator for the argument types provided, it should "
          },
          {
            "Text": "return NotImplemented",
            "AttrFlags": 2
          },
          {
            "Text": " ("
          },
          {
            "Text": "note",
            "AttrFlags": 1
          },
          {
            "Text": " that this is a "
          },
          {
            "Text": "special constant",
            "Link": "https://docs.python.org/3/library/constants.html#NotImplemented"
          },
          {
            "Text": ", not the same as "
          },
          {
            "Text": "NotImplementedError",
            "AttrFlags": 2
          },
          {
            "Text": "). This will allow Python to fall back to trying other methods to make the operation work:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388852997,
        "id": "8e00113c-1395-414e-a4ab-ecbdb227be4d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388852997,
        "parent_id": "bc5af385-9631-42b3-8099-759f876c896a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When NotImplemented is returned, the interpreter will then try the reflected operation on the other type, or some other fallback, depending on the operator. If all attempted operations return NotImplemented, the interpreter will raise an appropriate exception."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "When NotImplemented is returned, the interpreter will then try the reflected operation on the other type, or some other fallback, depending on the operator. If all attempted operations return NotImplemented, the interpreter will raise an appropriate exception."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388852997,
        "id": "0dad5468-27ca-4f7b-bd36-82418891e92a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388852997,
        "parent_id": "bc5af385-9631-42b3-8099-759f876c896a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example, given "
            ],
            [
              "x + y",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", if "
            ],
            [
              "x.__add__(y)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns unimplemented, "
            ],
            [
              "y.__radd__(x)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is attempted instead."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example, given "
          },
          {
            "Text": "x + y",
            "AttrFlags": 2
          },
          {
            "Text": ", if "
          },
          {
            "Text": "x.__add__(y)",
            "AttrFlags": 2
          },
          {
            "Text": " returns unimplemented, "
          },
          {
            "Text": "y.__radd__(x)",
            "AttrFlags": 2
          },
          {
            "Text": " is attempted instead."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388852997,
        "id": "f3f8687d-5e4f-4a15-9be7-545d180c64dd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550468280000,
        "parent_id": "bc5af385-9631-42b3-8099-759f876c896a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "class NotAddable(object):\n\n    def __init__(self, value):\n        self.value = value\n\n    def __add__(self, other):\n        return NotImplemented\n\n\nclass Addable(NotAddable):\n\n    def __add__(self, other):\n        return Addable(self.value + other.value)\n\n    __radd__ = __add__"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "class NotAddable(object):\n\n    def __init__(self, value):\n        self.value = value\n\n    def __add__(self, other):\n        return NotImplemented\n\n\nclass Addable(NotAddable):\n\n    def __add__(self, other):\n        return Addable(self.value + other.value)\n\n    __radd__ = __add__",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388852997,
        "id": "3a71f4e0-0642-4dba-b7bd-327242546ea1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388852997,
        "parent_id": "bc5af385-9631-42b3-8099-759f876c896a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As this is the "
            ],
            [
              "reflected",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " method we have to implement "
            ],
            [
              "__add__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "and",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "__radd__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to get the expected behaviour in all cases; fortunately, as they are both doing the same thing in this simple example, we can take a shortcut."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As this is the "
          },
          {
            "Text": "reflected",
            "AttrFlags": 4
          },
          {
            "Text": " method we have to implement "
          },
          {
            "Text": "__add__",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "and",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "__radd__",
            "AttrFlags": 2
          },
          {
            "Text": " to get the expected behaviour in all cases; fortunately, as they are both doing the same thing in this simple example, we can take a shortcut."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388852998,
        "id": "ab2f7c54-c37b-4b88-958f-27cf7de83039",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388852998,
        "parent_id": "bc5af385-9631-42b3-8099-759f876c896a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In use:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In use:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388852998,
        "id": "c993b7da-e3af-4d5d-9e5a-f511c279ea23",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388852998,
        "parent_id": "bc5af385-9631-42b3-8099-759f876c896a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e x = NotAddable(1)\n\u003e\u003e\u003e y = Addable(2)\n\u003e\u003e\u003e x + x\nTraceback (most recent call last):\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\nTypeError: unsupported operand type(s) for +: 'NotAddable' and 'NotAddable'\n\u003e\u003e\u003e y + y\n\u003cso.Addable object at 0x1095974d0\u003e\n\u003e\u003e\u003e z = x + y\n\u003e\u003e\u003e z\n\u003cso.Addable object at 0x109597510\u003e\n\u003e\u003e\u003e z.value\n3"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003e\u003e\u003e x = NotAddable(1)\n\u003e\u003e\u003e y = Addable(2)\n\u003e\u003e\u003e x + x\nTraceback (most recent call last):\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\nTypeError: unsupported operand type(s) for +: 'NotAddable' and 'NotAddable'\n\u003e\u003e\u003e y + y\n\u003cso.Addable object at 0x1095974d0\u003e\n\u003e\u003e\u003e z = x + y\n\u003e\u003e\u003e z\n\u003cso.Addable object at 0x109597510\u003e\n\u003e\u003e\u003e z.value\n3",
        "code_language": "Plain Text"
      }
    ],
    "title": "Handling unimplemented behaviour"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}