{
  "ID": "27b2c7d1-1e43-4956-98de-09605c36d82a",
  "Root": {
    "alive": true,
    "content": [
      "068362bd-1d03-4c48-a29f-03903ef2f937",
      "65f10cc5-b22f-4ecb-93d0-0b16206a04b1",
      "c658ac3a-a705-4555-a009-8c071fc90ad0",
      "720d6f3d-a5da-4b7b-a719-fdde7254f19e",
      "bdfdbc69-bedd-48f6-8c8c-30003449372b",
      "3eada951-8183-462d-804d-45eecd752aa8",
      "07c311ce-9e64-45ac-b498-447c17aca59f",
      "57b3983e-b168-471f-ab72-8ecf1f0a5f56"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550393504933,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "27b2c7d1-1e43-4956-98de-09605c36d82a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550477400000,
    "parent_id": "071421a0-386d-4ff3-917e-c9fec4f2e56e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Blocking Mode Audio IO"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550393504928,
        "id": "068362bd-1d03-4c48-a29f-03903ef2f937",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550477400000,
        "parent_id": "27b2c7d1-1e43-4956-98de-09605c36d82a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Play a wave file:"
            ]
          ]
        },
        "type": "text",
        "version": 27,
        "inline_content": [
          {
            "Text": "Play a wave file:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550393504931,
        "id": "65f10cc5-b22f-4ecb-93d0-0b16206a04b1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550477400000,
        "parent_id": "27b2c7d1-1e43-4956-98de-09605c36d82a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "import pyaudio\nimport wave\nimport sys\n\nCHUNK = 1024\n\nif len(sys.argv) \u003c 2:\n    print(\"Plays a wave file.\\n\\nUsage: %s filename.wav\" % sys.argv[0])\n    sys.exit(-1)\n\nwf = wave.open(sys.argv[1], 'rb')\n\n# instantiate PyAudio (1)\np = pyaudio.PyAudio()\n\n# open stream (2)\nstream = p.open(format=p.get_format_from_width(wf.getsampwidth()),\n                channels=wf.getnchannels(),\n                rate=wf.getframerate(),\n                output=True)\n\n# read data\ndata = wf.readframes(CHUNK)\n\n# play stream (3)\nwhile len(data) \u003e 0:\n    stream.write(data)\n    data = wf.readframes(CHUNK)\n\n# stop stream (4)\nstream.stop_stream()\nstream.close()\n\n# close PyAudio (5)\np.terminate()"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "import pyaudio\nimport wave\nimport sys\n\nCHUNK = 1024\n\nif len(sys.argv) \u003c 2:\n    print(\"Plays a wave file.\\n\\nUsage: %s filename.wav\" % sys.argv[0])\n    sys.exit(-1)\n\nwf = wave.open(sys.argv[1], 'rb')\n\n# instantiate PyAudio (1)\np = pyaudio.PyAudio()\n\n# open stream (2)\nstream = p.open(format=p.get_format_from_width(wf.getsampwidth()),\n                channels=wf.getnchannels(),\n                rate=wf.getframerate(),\n                output=True)\n\n# read data\ndata = wf.readframes(CHUNK)\n\n# play stream (3)\nwhile len(data) \u003e 0:\n    stream.write(data)\n    data = wf.readframes(CHUNK)\n\n# stop stream (4)\nstream.stop_stream()\nstream.close()\n\n# close PyAudio (5)\np.terminate()",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550393504931,
        "id": "c658ac3a-a705-4555-a009-8c071fc90ad0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550393504931,
        "parent_id": "27b2c7d1-1e43-4956-98de-09605c36d82a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To use PyAudio, first instantiate PyAudio using "
            ],
            [
              "pyaudio.PyAudio()",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " (1), which sets up the portaudio system."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To use PyAudio, first instantiate PyAudio using "
          },
          {
            "Text": "pyaudio.PyAudio()",
            "AttrFlags": 1
          },
          {
            "Text": " (1), which sets up the portaudio system."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550393504932,
        "id": "720d6f3d-a5da-4b7b-a719-fdde7254f19e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550393504932,
        "parent_id": "27b2c7d1-1e43-4956-98de-09605c36d82a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To record or play audio, open a stream on the desired device with the desired audio parameters using "
            ],
            [
              "pyaudio.PyAudio.open()",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " (2). This sets up a "
            ],
            [
              "pyaudio.Stream",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " to play or record audio."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To record or play audio, open a stream on the desired device with the desired audio parameters using "
          },
          {
            "Text": "pyaudio.PyAudio.open()",
            "AttrFlags": 1
          },
          {
            "Text": " (2). This sets up a "
          },
          {
            "Text": "pyaudio.Stream",
            "AttrFlags": 1
          },
          {
            "Text": " to play or record audio."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550393504932,
        "id": "bdfdbc69-bedd-48f6-8c8c-30003449372b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550393504932,
        "parent_id": "27b2c7d1-1e43-4956-98de-09605c36d82a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Play audio by writing audio data to the stream using "
            ],
            [
              "pyaudio.Stream.write()",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", or read audio data from the stream using "
            ],
            [
              "pyaudio.Stream.read()",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". (3)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Play audio by writing audio data to the stream using "
          },
          {
            "Text": "pyaudio.Stream.write()",
            "AttrFlags": 1
          },
          {
            "Text": ", or read audio data from the stream using "
          },
          {
            "Text": "pyaudio.Stream.read()",
            "AttrFlags": 1
          },
          {
            "Text": ". (3)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550393504932,
        "id": "3eada951-8183-462d-804d-45eecd752aa8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550393504932,
        "parent_id": "27b2c7d1-1e43-4956-98de-09605c36d82a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that in “"
            ],
            [
              "blocking mode",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "”, each "
            ],
            [
              "pyaudio.Stream.write()",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "pyaudio.Stream.read()",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " blocks until all the given/requested frames have been played/recorded. Alternatively, to generate audio data on the fly or immediately process recorded audio data, use the “callback mode”("
            ],
            [
              "refer the example on call back mode",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ")"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that in “"
          },
          {
            "Text": "blocking mode",
            "AttrFlags": 4
          },
          {
            "Text": "”, each "
          },
          {
            "Text": "pyaudio.Stream.write()",
            "AttrFlags": 1
          },
          {
            "Text": " or "
          },
          {
            "Text": "pyaudio.Stream.read()",
            "AttrFlags": 1
          },
          {
            "Text": " blocks until all the given/requested frames have been played/recorded. Alternatively, to generate audio data on the fly or immediately process recorded audio data, use the “callback mode”("
          },
          {
            "Text": "refer the example on call back mode",
            "AttrFlags": 4
          },
          {
            "Text": ")"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550393504933,
        "id": "07c311ce-9e64-45ac-b498-447c17aca59f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550393504933,
        "parent_id": "27b2c7d1-1e43-4956-98de-09605c36d82a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Use pyaudio.Stream.stop_stream() to pause playing/recording, and "
            ],
            [
              "pyaudio.Stream.close()",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " to terminate the stream. (4)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Use pyaudio.Stream.stop_stream() to pause playing/recording, and "
          },
          {
            "Text": "pyaudio.Stream.close()",
            "AttrFlags": 1
          },
          {
            "Text": " to terminate the stream. (4)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550393504933,
        "id": "57b3983e-b168-471f-ab72-8ecf1f0a5f56",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550393504933,
        "parent_id": "27b2c7d1-1e43-4956-98de-09605c36d82a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finally, terminate the portaudio session using "
            ],
            [
              "pyaudio.PyAudio.terminate()",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " (5)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finally, terminate the portaudio session using "
          },
          {
            "Text": "pyaudio.PyAudio.terminate()",
            "AttrFlags": 1
          },
          {
            "Text": " (5)"
          }
        ]
      }
    ],
    "title": "Blocking Mode Audio IO",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}