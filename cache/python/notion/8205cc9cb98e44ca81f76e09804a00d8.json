{
  "ID": "8205cc9c-b98e-44ca-81f7-6e09804a00d8",
  "Root": {
    "alive": true,
    "content": [
      "822f8244-d5db-4cd1-9f62-dcdad99c5ee3",
      "4dfe480f-efdc-47fd-95f8-b37ff7eab797",
      "716be03c-63eb-4965-a63c-c1d58f538bb1",
      "3880f2b5-e75a-4400-bdf5-c00e275c15df",
      "add6c768-93e3-465b-81d3-f168845d9408",
      "18992eb4-9781-4e4e-ae6a-7021506828cd",
      "36578919-3de0-40fe-9581-4b7146d3f1a3",
      "0de40d74-5690-4255-a048-c07a2e238a59",
      "7fd83770-a6c0-400d-a8ca-dd23c4215561",
      "4498321a-de07-4840-8c8f-9e4aef6b0622",
      "9951536d-1904-48e5-86c0-9c242b343adf",
      "0215d4e9-50b3-4e5d-a3ce-9d2dd7f02e02",
      "22efdfe6-2f1a-48d9-ad03-8b4a52f11008",
      "d442c849-f9e7-49f0-a191-64a31276e103",
      "1f265da8-b9d7-41ba-b523-965868e20109",
      "de1c3609-5f6f-4673-9813-735f9d7a56bf"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550301760479,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "8205cc9c-b98e-44ca-81f7-6e09804a00d8",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550302620000,
    "parent_id": "ded3913a-88c5-4173-b2a5-ee3d56b4fbd4",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Make custom classes orderable"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301760471,
        "id": "822f8244-d5db-4cd1-9f62-dcdad99c5ee3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550301760471,
        "parent_id": "8205cc9c-b98e-44ca-81f7-6e09804a00d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "min",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "max",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and "
            ],
            [
              "sorted",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " all need the objects to be orderable. To be properly orderable, the class needs to define all of the 6 methods "
            ],
            [
              "__lt__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "__gt__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "__ge__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "__le__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "__ne__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "__eq__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "min",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "max",
            "AttrFlags": 2
          },
          {
            "Text": ", and "
          },
          {
            "Text": "sorted",
            "AttrFlags": 2
          },
          {
            "Text": " all need the objects to be orderable. To be properly orderable, the class needs to define all of the 6 methods "
          },
          {
            "Text": "__lt__",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "__gt__",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "__ge__",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "__le__",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "__ne__",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "__eq__",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301760474,
        "id": "4dfe480f-efdc-47fd-95f8-b37ff7eab797",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550302620000,
        "parent_id": "8205cc9c-b98e-44ca-81f7-6e09804a00d8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "class IntegerContainer(object):\n    def __init__(self, value):\n        self.value = value\n        \n    def __repr__(self):\n        return \"{}({})\".format(self.__class__.__name__, self.value)\n    \n    def __lt__(self, other):\n        print('{!r} - Test less than {!r}'.format(self, other))\n        return self.value \u003c other.value\n    \n    def __le__(self, other):\n        print('{!r} - Test less than or equal to {!r}'.format(self, other))\n        return self.value \u003c= other.value\n\n    def __gt__(self, other):\n        print('{!r} - Test greater than {!r}'.format(self, other))\n        return self.value \u003e other.value\n\n    def __ge__(self, other):\n        print('{!r} - Test greater than or equal to {!r}'.format(self, other))\n        return self.value \u003e= other.value\n\n    def __eq__(self, other):\n        print('{!r} - Test equal to {!r}'.format(self, other))\n        return self.value == other.value\n\n    def __ne__(self, other):\n        print('{!r} - Test not equal to {!r}'.format(self, other))\n        return self.value != other.value"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "class IntegerContainer(object):\n    def __init__(self, value):\n        self.value = value\n        \n    def __repr__(self):\n        return \"{}({})\".format(self.__class__.__name__, self.value)\n    \n    def __lt__(self, other):\n        print('{!r} - Test less than {!r}'.format(self, other))\n        return self.value \u003c other.value\n    \n    def __le__(self, other):\n        print('{!r} - Test less than or equal to {!r}'.format(self, other))\n        return self.value \u003c= other.value\n\n    def __gt__(self, other):\n        print('{!r} - Test greater than {!r}'.format(self, other))\n        return self.value \u003e other.value\n\n    def __ge__(self, other):\n        print('{!r} - Test greater than or equal to {!r}'.format(self, other))\n        return self.value \u003e= other.value\n\n    def __eq__(self, other):\n        print('{!r} - Test equal to {!r}'.format(self, other))\n        return self.value == other.value\n\n    def __ne__(self, other):\n        print('{!r} - Test not equal to {!r}'.format(self, other))\n        return self.value != other.value",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301760476,
        "id": "716be03c-63eb-4965-a63c-c1d58f538bb1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550301760476,
        "parent_id": "8205cc9c-b98e-44ca-81f7-6e09804a00d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Though implementing all these methods would seem unnecessary, "
            ],
            [
              "omitting some of them will make your code prone to bugs",
              [
                [
                  "a",
                  "http://stackoverflow.com/a/8796908/918959"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Though implementing all these methods would seem unnecessary, "
          },
          {
            "Text": "omitting some of them will make your code prone to bugs",
            "Link": "http://stackoverflow.com/a/8796908/918959"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301760476,
        "id": "3880f2b5-e75a-4400-bdf5-c00e275c15df",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550301760476,
        "parent_id": "8205cc9c-b98e-44ca-81f7-6e09804a00d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Examples:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Examples:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301760476,
        "id": "add6c768-93e3-465b-81d3-f168845d9408",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550302620000,
        "parent_id": "8205cc9c-b98e-44ca-81f7-6e09804a00d8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "alist = [IntegerContainer(5), IntegerContainer(3),\n         IntegerContainer(10), IntegerContainer(7)\n        ]\n\nres = max(alist)\n# Out: IntegerContainer(3) - Test greater than IntegerContainer(5)\n#      IntegerContainer(10) - Test greater than IntegerContainer(5)\n#      IntegerContainer(7) - Test greater than IntegerContainer(10)\nprint(res)\n# Out: IntegerContainer(10)\n\nres = min(alist)   \n# Out: IntegerContainer(3) - Test less than IntegerContainer(5)\n#      IntegerContainer(10) - Test less than IntegerContainer(3)\n#      IntegerContainer(7) - Test less than IntegerContainer(3)\nprint(res)\n# Out: IntegerContainer(3)\n\nres = sorted(alist)\n# Out: IntegerContainer(3) - Test less than IntegerContainer(5)\n#      IntegerContainer(10) - Test less than IntegerContainer(3)\n#      IntegerContainer(10) - Test less than IntegerContainer(5)\n#      IntegerContainer(7) - Test less than IntegerContainer(5)\n#      IntegerContainer(7) - Test less than IntegerContainer(10)\nprint(res)\n# Out: [IntegerContainer(3), IntegerContainer(5), IntegerContainer(7), IntegerContainer(10)]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "alist = [IntegerContainer(5), IntegerContainer(3),\n         IntegerContainer(10), IntegerContainer(7)\n        ]\n\nres = max(alist)\n# Out: IntegerContainer(3) - Test greater than IntegerContainer(5)\n#      IntegerContainer(10) - Test greater than IntegerContainer(5)\n#      IntegerContainer(7) - Test greater than IntegerContainer(10)\nprint(res)\n# Out: IntegerContainer(10)\n\nres = min(alist)   \n# Out: IntegerContainer(3) - Test less than IntegerContainer(5)\n#      IntegerContainer(10) - Test less than IntegerContainer(3)\n#      IntegerContainer(7) - Test less than IntegerContainer(3)\nprint(res)\n# Out: IntegerContainer(3)\n\nres = sorted(alist)\n# Out: IntegerContainer(3) - Test less than IntegerContainer(5)\n#      IntegerContainer(10) - Test less than IntegerContainer(3)\n#      IntegerContainer(10) - Test less than IntegerContainer(5)\n#      IntegerContainer(7) - Test less than IntegerContainer(5)\n#      IntegerContainer(7) - Test less than IntegerContainer(10)\nprint(res)\n# Out: [IntegerContainer(3), IntegerContainer(5), IntegerContainer(7), IntegerContainer(10)]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301760477,
        "id": "18992eb4-9781-4e4e-ae6a-7021506828cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550301760477,
        "parent_id": "8205cc9c-b98e-44ca-81f7-6e09804a00d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "sorted",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with "
            ],
            [
              "reverse=True",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " also uses "
            ],
            [
              "__lt__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "sorted",
            "AttrFlags": 2
          },
          {
            "Text": " with "
          },
          {
            "Text": "reverse=True",
            "AttrFlags": 2
          },
          {
            "Text": " also uses "
          },
          {
            "Text": "__lt__",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301760477,
        "id": "36578919-3de0-40fe-9581-4b7146d3f1a3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550302620000,
        "parent_id": "8205cc9c-b98e-44ca-81f7-6e09804a00d8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "res = sorted(alist, reverse=True)\n# Out: IntegerContainer(10) - Test less than IntegerContainer(7)\n#      IntegerContainer(3) - Test less than IntegerContainer(10)\n#      IntegerContainer(3) - Test less than IntegerContainer(10)\n#      IntegerContainer(3) - Test less than IntegerContainer(7)\n#      IntegerContainer(5) - Test less than IntegerContainer(7)\n#      IntegerContainer(5) - Test less than IntegerContainer(3)\nprint(res)\n# Out: [IntegerContainer(10), IntegerContainer(7), IntegerContainer(5), IntegerContainer(3)]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "res = sorted(alist, reverse=True)\n# Out: IntegerContainer(10) - Test less than IntegerContainer(7)\n#      IntegerContainer(3) - Test less than IntegerContainer(10)\n#      IntegerContainer(3) - Test less than IntegerContainer(10)\n#      IntegerContainer(3) - Test less than IntegerContainer(7)\n#      IntegerContainer(5) - Test less than IntegerContainer(7)\n#      IntegerContainer(5) - Test less than IntegerContainer(3)\nprint(res)\n# Out: [IntegerContainer(10), IntegerContainer(7), IntegerContainer(5), IntegerContainer(3)]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301760477,
        "id": "0de40d74-5690-4255-a048-c07a2e238a59",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550301760477,
        "parent_id": "8205cc9c-b98e-44ca-81f7-6e09804a00d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But "
            ],
            [
              "sorted",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can use "
            ],
            [
              "__gt__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instead if the default is not implemented:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But "
          },
          {
            "Text": "sorted",
            "AttrFlags": 2
          },
          {
            "Text": " can use "
          },
          {
            "Text": "__gt__",
            "AttrFlags": 2
          },
          {
            "Text": " instead if the default is not implemented:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301760477,
        "id": "7fd83770-a6c0-400d-a8ca-dd23c4215561",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550302620000,
        "parent_id": "8205cc9c-b98e-44ca-81f7-6e09804a00d8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "del IntegerContainer.__lt__   # The IntegerContainer no longer implements \"less than\"\n\nres = min(alist) \n# Out: IntegerContainer(5) - Test greater than IntegerContainer(3)\n#      IntegerContainer(3) - Test greater than IntegerContainer(10)\n#      IntegerContainer(3) - Test greater than IntegerContainer(7)\nprint(res)\n# Out: IntegerContainer(3)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "del IntegerContainer.__lt__   # The IntegerContainer no longer implements \"less than\"\n\nres = min(alist) \n# Out: IntegerContainer(5) - Test greater than IntegerContainer(3)\n#      IntegerContainer(3) - Test greater than IntegerContainer(10)\n#      IntegerContainer(3) - Test greater than IntegerContainer(7)\nprint(res)\n# Out: IntegerContainer(3)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301760477,
        "id": "4498321a-de07-4840-8c8f-9e4aef6b0622",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550301760477,
        "parent_id": "8205cc9c-b98e-44ca-81f7-6e09804a00d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sorting methods will raise a "
            ],
            [
              "TypeError",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if neither "
            ],
            [
              "__lt__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " nor "
            ],
            [
              "__gt__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are implemented:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sorting methods will raise a "
          },
          {
            "Text": "TypeError",
            "AttrFlags": 2
          },
          {
            "Text": " if neither "
          },
          {
            "Text": "__lt__",
            "AttrFlags": 2
          },
          {
            "Text": " nor "
          },
          {
            "Text": "__gt__",
            "AttrFlags": 2
          },
          {
            "Text": " are implemented:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301760477,
        "id": "9951536d-1904-48e5-86c0-9c242b343adf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550302620000,
        "parent_id": "8205cc9c-b98e-44ca-81f7-6e09804a00d8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "del IntegerContainer.__gt__   # The IntegerContainer no longer implements \"greater then\"\n\nres = min(alist)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "del IntegerContainer.__gt__   # The IntegerContainer no longer implements \"greater then\"\n\nres = min(alist)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301760477,
        "id": "0215d4e9-50b3-4e5d-a3ce-9d2dd7f02e02",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550301760477,
        "parent_id": "8205cc9c-b98e-44ca-81f7-6e09804a00d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "TypeError: unorderable types: IntegerContainer() \u003c IntegerContainer()"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "TypeError: unorderable types: IntegerContainer() \u003c IntegerContainer()"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301760478,
        "id": "22efdfe6-2f1a-48d9-ad03-8b4a52f11008",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550301760478,
        "parent_id": "8205cc9c-b98e-44ca-81f7-6e09804a00d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "functools.total_ordering",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.python.org/3.3/library/functools.html#functools.total_ordering"
                ]
              ]
            ],
            [
              " decorator can be used simplifying the effort of writing these rich comparison methods. If you decorate your class with "
            ],
            [
              "total_ordering",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", you need to implement "
            ],
            [
              "__eq__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "__ne__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and only one of the "
            ],
            [
              "__lt__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "__le__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "__ge__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "__gt__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and the decorator will fill in the rest:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "functools.total_ordering",
            "AttrFlags": 2,
            "Link": "https://docs.python.org/3.3/library/functools.html#functools.total_ordering"
          },
          {
            "Text": " decorator can be used simplifying the effort of writing these rich comparison methods. If you decorate your class with "
          },
          {
            "Text": "total_ordering",
            "AttrFlags": 2
          },
          {
            "Text": ", you need to implement "
          },
          {
            "Text": "__eq__",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "__ne__",
            "AttrFlags": 2
          },
          {
            "Text": " and only one of the "
          },
          {
            "Text": "__lt__",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "__le__",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "__ge__",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "__gt__",
            "AttrFlags": 2
          },
          {
            "Text": ", and the decorator will fill in the rest:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301760478,
        "id": "d442c849-f9e7-49f0-a191-64a31276e103",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550302620000,
        "parent_id": "8205cc9c-b98e-44ca-81f7-6e09804a00d8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "import functools\n\n@functools.total_ordering\nclass IntegerContainer(object):\n    def __init__(self, value):\n        self.value = value\n        \n    def __repr__(self):\n        return \"{}({})\".format(self.__class__.__name__, self.value)\n    \n    def __lt__(self, other):\n        print('{!r} - Test less than {!r}'.format(self, other))\n        return self.value \u003c other.value\n    \n    def __eq__(self, other):\n        print('{!r} - Test equal to {!r}'.format(self, other))\n        return self.value == other.value\n    \n    def __ne__(self, other):\n        print('{!r} - Test not equal to {!r}'.format(self, other))\n        return self.value != other.value"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "import functools\n\n@functools.total_ordering\nclass IntegerContainer(object):\n    def __init__(self, value):\n        self.value = value\n        \n    def __repr__(self):\n        return \"{}({})\".format(self.__class__.__name__, self.value)\n    \n    def __lt__(self, other):\n        print('{!r} - Test less than {!r}'.format(self, other))\n        return self.value \u003c other.value\n    \n    def __eq__(self, other):\n        print('{!r} - Test equal to {!r}'.format(self, other))\n        return self.value == other.value\n    \n    def __ne__(self, other):\n        print('{!r} - Test not equal to {!r}'.format(self, other))\n        return self.value != other.value",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301760478,
        "id": "1f265da8-b9d7-41ba-b523-965868e20109",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550302620000,
        "parent_id": "8205cc9c-b98e-44ca-81f7-6e09804a00d8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "IntegerContainer(5) \u003e IntegerContainer(6)\n# Output: IntegerContainer(5) - Test less than IntegerContainer(6)\n# Returns: False\n\nIntegerContainer(6) \u003e IntegerContainer(5)\n# Output: IntegerContainer(6) - Test less than IntegerContainer(5)\n# Output: IntegerContainer(6) - Test equal to IntegerContainer(5)\n# Returns True"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "IntegerContainer(5) \u003e IntegerContainer(6)\n# Output: IntegerContainer(5) - Test less than IntegerContainer(6)\n# Returns: False\n\nIntegerContainer(6) \u003e IntegerContainer(5)\n# Output: IntegerContainer(6) - Test less than IntegerContainer(5)\n# Output: IntegerContainer(6) - Test equal to IntegerContainer(5)\n# Returns True",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550301760478,
        "id": "de1c3609-5f6f-4673-9813-735f9d7a56bf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550301760478,
        "parent_id": "8205cc9c-b98e-44ca-81f7-6e09804a00d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Notice how the "
            ],
            [
              "\\\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " ("
            ],
            [
              "greater than",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ") now ends up calling the "
            ],
            [
              "less than",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " method, and in some cases even the "
            ],
            [
              "__eq__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method. This also means that if speed is of great importance, you should implement each rich comparison method yourself."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Notice how the "
          },
          {
            "Text": "\\\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " ("
          },
          {
            "Text": "greater than",
            "AttrFlags": 4
          },
          {
            "Text": ") now ends up calling the "
          },
          {
            "Text": "less than",
            "AttrFlags": 4
          },
          {
            "Text": " method, and in some cases even the "
          },
          {
            "Text": "__eq__",
            "AttrFlags": 2
          },
          {
            "Text": " method. This also means that if speed is of great importance, you should implement each rich comparison method yourself."
          }
        ]
      }
    ],
    "title": "Make custom classes orderable",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}