{
  "ID": "25df4848-e4da-43ee-8bf7-97d196c7c371",
  "Root": {
    "alive": true,
    "content": [
      "211a3a02-490f-42f0-a1f4-574690b30844",
      "7e5d47dc-16b8-4546-82f7-726221364bb1",
      "b2c74081-9192-487a-b0d9-90ea8d150e1a",
      "0f649d49-63e0-45ac-a71a-5a6713ee6e48"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550344106210,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "25df4848-e4da-43ee-8bf7-97d196c7c371",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550344140000,
    "parent_id": "e69eaeab-d086-4d16-bfdf-ed205568003a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Counting all occurrence of all items in an iterable collections.Counter"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550344106206,
        "id": "211a3a02-490f-42f0-a1f4-574690b30844",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550344140000,
        "parent_id": "25df4848-e4da-43ee-8bf7-97d196c7c371",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "from collections import Counter\n\nc = Counter([\"a\", \"b\", \"c\", \"d\", \"a\", \"b\", \"a\", \"c\", \"d\"])\nc\n# Out: Counter({'a': 3, 'b': 2, 'c': 2, 'd': 2})\nc[\"a\"]\n# Out: 3\n\nc[7]     # not in the list (7 occurred 0 times!)\n# Out: 0"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "from collections import Counter\n\nc = Counter([\"a\", \"b\", \"c\", \"d\", \"a\", \"b\", \"a\", \"c\", \"d\"])\nc\n# Out: Counter({'a': 3, 'b': 2, 'c': 2, 'd': 2})\nc[\"a\"]\n# Out: 3\n\nc[7]     # not in the list (7 occurred 0 times!)\n# Out: 0",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550344106209,
        "id": "7e5d47dc-16b8-4546-82f7-726221364bb1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550344106209,
        "parent_id": "25df4848-e4da-43ee-8bf7-97d196c7c371",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "collections.Counter",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be used for any iterable and counts every occurrence for every element."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "collections.Counter",
            "AttrFlags": 2
          },
          {
            "Text": " can be used for any iterable and counts every occurrence for every element."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550344106209,
        "id": "b2c74081-9192-487a-b0d9-90ea8d150e1a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550344106209,
        "parent_id": "25df4848-e4da-43ee-8bf7-97d196c7c371",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": One exception is if a "
            ],
            [
              "dict",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or another "
            ],
            [
              "collections.Mapping",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "-like class is given, then it will not count them, rather it creates a Counter with these values:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note",
            "AttrFlags": 1
          },
          {
            "Text": ": One exception is if a "
          },
          {
            "Text": "dict",
            "AttrFlags": 2
          },
          {
            "Text": " or another "
          },
          {
            "Text": "collections.Mapping",
            "AttrFlags": 2
          },
          {
            "Text": "-like class is given, then it will not count them, rather it creates a Counter with these values:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550344106210,
        "id": "0f649d49-63e0-45ac-a71a-5a6713ee6e48",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550344140000,
        "parent_id": "25df4848-e4da-43ee-8bf7-97d196c7c371",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "Counter({\"e\": 2})\n# Out: Counter({\"e\": 2})\n\nCounter({\"e\": \"e\"})        # warning Counter does not verify the values are int\n# Out: Counter({\"e\": \"e\"})"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "Counter({\"e\": 2})\n# Out: Counter({\"e\": 2})\n\nCounter({\"e\": \"e\"})        # warning Counter does not verify the values are int\n# Out: Counter({\"e\": \"e\"})",
        "code_language": "Python"
      }
    ],
    "title": "Counting all occurrence of all items in an iterable collections.Counter",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}