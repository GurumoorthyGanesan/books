{
  "ID": "92f8d901-d69e-49bf-a627-260ffb65a08d",
  "Root": {
    "alive": true,
    "content": [
      "5d6ff2de-ec29-452f-b460-d21104c064be",
      "bc8791b4-27db-4fed-b7e2-b461fad7e674",
      "9b251004-beff-4bb3-a16e-c2912089957f",
      "94cfb604-4d00-43d2-9e1d-6dfcda207016",
      "684f65ce-4f7a-4e48-8072-c28cc6713a6d",
      "5b2f249e-d9d2-455d-bc58-634f525496bc",
      "ec4ed928-042f-427c-a613-30a16d943b2a",
      "00387fbc-6f76-4221-be6c-6e6e6ac8e7ab",
      "ad08c4a9-c719-4e1d-9fa4-105851240768"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550347966628,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "92f8d901-d69e-49bf-a627-260ffb65a08d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550348340000,
    "parent_id": "6b6906c1-a818-41da-b196-40ce5c79d75d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Comparison of different types"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347966627,
        "id": "5d6ff2de-ec29-452f-b460-d21104c064be",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347966627,
        "parent_id": "92f8d901-d69e-49bf-a627-260ffb65a08d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Objects of different types can be compared. The results are arbitrary, but consistent. They are ordered such that "
            ],
            [
              "None",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is less than anything else, numeric types are smaller than non-numeric types, and everything else is ordered lexicographically by type. Thus, an "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is less than a "
            ],
            [
              "str",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and a "
            ],
            [
              "tuple",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is greater than a "
            ],
            [
              "list",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Objects of different types can be compared. The results are arbitrary, but consistent. They are ordered such that "
          },
          {
            "Text": "None",
            "AttrFlags": 2
          },
          {
            "Text": " is less than anything else, numeric types are smaller than non-numeric types, and everything else is ordered lexicographically by type. Thus, an "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " is less than a "
          },
          {
            "Text": "str",
            "AttrFlags": 2
          },
          {
            "Text": " and a "
          },
          {
            "Text": "tuple",
            "AttrFlags": 2
          },
          {
            "Text": " is greater than a "
          },
          {
            "Text": "list",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347966627,
        "id": "bc8791b4-27db-4fed-b7e2-b461fad7e674",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550348340000,
        "parent_id": "92f8d901-d69e-49bf-a627-260ffb65a08d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "[1, 2] \u003e 'foo'\n# Out: False\n(1, 2) \u003e 'foo'\n# Out: True\n[1, 2] \u003e (1, 2)\n# Out: False\n100 \u003c [1, 'x'] \u003c 'xyz' \u003c (1, 'x')\n# Out: True"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "[1, 2] \u003e 'foo'\n# Out: False\n(1, 2) \u003e 'foo'\n# Out: True\n[1, 2] \u003e (1, 2)\n# Out: False\n100 \u003c [1, 'x'] \u003c 'xyz' \u003c (1, 'x')\n# Out: True",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347966627,
        "id": "9b251004-beff-4bb3-a16e-c2912089957f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347966627,
        "parent_id": "92f8d901-d69e-49bf-a627-260ffb65a08d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This was originally done so a list of mixed types could be sorted and objects would be grouped together by type:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This was originally done so a list of mixed types could be sorted and objects would be grouped together by type:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347966628,
        "id": "94cfb604-4d00-43d2-9e1d-6dfcda207016",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550348340000,
        "parent_id": "92f8d901-d69e-49bf-a627-260ffb65a08d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "l = [7, 'x', (1, 2), [5, 6], 5, 8.0, 'y', 1.2, [7, 8], 'z']\nsorted(l)\n# Out: [1.2, 5, 7, 8.0, [5, 6], [7, 8], 'x', 'y', 'z', (1, 2)]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "l = [7, 'x', (1, 2), [5, 6], 5, 8.0, 'y', 1.2, [7, 8], 'z']\nsorted(l)\n# Out: [1.2, 5, 7, 8.0, [5, 6], [7, 8], 'x', 'y', 'z', (1, 2)]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347966628,
        "id": "684f65ce-4f7a-4e48-8072-c28cc6713a6d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347966628,
        "parent_id": "92f8d901-d69e-49bf-a627-260ffb65a08d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An exception is raised when comparing different (non-numeric) types:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An exception is raised when comparing different (non-numeric) types:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347966628,
        "id": "5b2f249e-d9d2-455d-bc58-634f525496bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550348340000,
        "parent_id": "92f8d901-d69e-49bf-a627-260ffb65a08d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "1 \u003c 1.5\n# Out: True\n\n[1, 2] \u003e 'foo'\n# TypeError: unorderable types: list() \u003e str()\n(1, 2) \u003e 'foo'\n# TypeError: unorderable types: tuple() \u003e str()\n[1, 2] \u003e (1, 2)\n# TypeError: unorderable types: list() \u003e tuple()"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "1 \u003c 1.5\n# Out: True\n\n[1, 2] \u003e 'foo'\n# TypeError: unorderable types: list() \u003e str()\n(1, 2) \u003e 'foo'\n# TypeError: unorderable types: tuple() \u003e str()\n[1, 2] \u003e (1, 2)\n# TypeError: unorderable types: list() \u003e tuple()",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347966628,
        "id": "ec4ed928-042f-427c-a613-30a16d943b2a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347966628,
        "parent_id": "92f8d901-d69e-49bf-a627-260ffb65a08d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To sort mixed lists in Python 3 by types and to achieve compatibility between versions, you have to provide a key to the sorted function:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To sort mixed lists in Python 3 by types and to achieve compatibility between versions, you have to provide a key to the sorted function:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347966628,
        "id": "00387fbc-6f76-4221-be6c-6e6e6ac8e7ab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550348340000,
        "parent_id": "92f8d901-d69e-49bf-a627-260ffb65a08d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e list = [1, 'hello', [3, 4], {'python': 2}, 'stackoverflow', 8, {'python': 3}, [5, 6]]\n\u003e\u003e\u003e sorted(list, key=str)\n# Out: [1, 8, [3, 4], [5, 6], 'hello', 'stackoverflow', {'python': 2}, {'python': 3}]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e list = [1, 'hello', [3, 4], {'python': 2}, 'stackoverflow', 8, {'python': 3}, [5, 6]]\n\u003e\u003e\u003e sorted(list, key=str)\n# Out: [1, 8, [3, 4], [5, 6], 'hello', 'stackoverflow', {'python': 2}, {'python': 3}]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347966628,
        "id": "ad08c4a9-c719-4e1d-9fa4-105851240768",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347966628,
        "parent_id": "92f8d901-d69e-49bf-a627-260ffb65a08d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using "
            ],
            [
              "str",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as the "
            ],
            [
              "key",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function temporarily converts each item to a string only for the purposes of comparison. It then sees the string representation starting with either "
            ],
            [
              "\\[",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "\\'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "\\{",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "0-9",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and it’s able to sort those (and all the following characters)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using "
          },
          {
            "Text": "str",
            "AttrFlags": 2
          },
          {
            "Text": " as the "
          },
          {
            "Text": "key",
            "AttrFlags": 2
          },
          {
            "Text": " function temporarily converts each item to a string only for the purposes of comparison. It then sees the string representation starting with either "
          },
          {
            "Text": "\\[",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "\\'",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "\\{",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "0-9",
            "AttrFlags": 2
          },
          {
            "Text": " and it’s able to sort those (and all the following characters)."
          }
        ]
      }
    ],
    "title": "Comparison of different types",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}