{
  "ID": "91e7447a-e3b1-4a6c-a854-95e4fb528e82",
  "Root": {
    "alive": true,
    "content": [
      "c2d5bee7-7a78-4792-86dc-6ae6698bc124",
      "1419b1ea-5c06-4ff9-a958-ba1bfde9d41d",
      "5a424496-9741-40db-b09d-cc22e94ebffb",
      "6a84171c-c42d-4690-99d9-c95cb6b18514",
      "3945bf29-5a0d-4699-8db4-cb62047edceb",
      "4fd92bb3-3181-4ed6-90cb-f0a16e6450a0",
      "affb8fa9-cee1-4f87-921e-a2bf06d01e02",
      "efe89d10-fd17-45c9-97db-de598149d80a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550388759283,
    "id": "91e7447a-e3b1-4a6c-a854-95e4fb528e82",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550468100000,
    "parent_id": "69f0ba3a-4a7a-4d7e-b1e4-66175a2bc4a5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Exceptions are Objects too"
        ]
      ]
    },
    "type": "page",
    "version": 6,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388759278,
        "id": "c2d5bee7-7a78-4792-86dc-6ae6698bc124",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388759278,
        "parent_id": "91e7447a-e3b1-4a6c-a854-95e4fb528e82",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Exceptions are just regular Python objects that inherit from the built-in "
            ],
            [
              "BaseException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". A Python script can use the "
            ],
            [
              "raise",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement to interrupt execution, causing Python to print a stack trace of the call stack at that point and a representation of the exception instance. For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Exceptions are just regular Python objects that inherit from the built-in "
          },
          {
            "Text": "BaseException",
            "AttrFlags": 2
          },
          {
            "Text": ". A Python script can use the "
          },
          {
            "Text": "raise",
            "AttrFlags": 2
          },
          {
            "Text": " statement to interrupt execution, causing Python to print a stack trace of the call stack at that point and a representation of the exception instance. For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388759282,
        "id": "1419b1ea-5c06-4ff9-a958-ba1bfde9d41d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388759282,
        "parent_id": "91e7447a-e3b1-4a6c-a854-95e4fb528e82",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e def failing_function():\n...     raise ValueError('Example error!')\n\u003e\u003e\u003e failing_function()\nTraceback (most recent call last):\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\n  File \"\u003cstdin\u003e\", line 2, in failing_function\nValueError: Example error!"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003e\u003e\u003e def failing_function():\n...     raise ValueError('Example error!')\n\u003e\u003e\u003e failing_function()\nTraceback (most recent call last):\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\n  File \"\u003cstdin\u003e\", line 2, in failing_function\nValueError: Example error!",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388759282,
        "id": "5a424496-9741-40db-b09d-cc22e94ebffb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388759282,
        "parent_id": "91e7447a-e3b1-4a6c-a854-95e4fb528e82",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "which says that a "
            ],
            [
              "ValueError",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with the message "
            ],
            [
              "'Example error!'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " was raised by our "
            ],
            [
              "failing_function()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which was executed in the interpreter."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "which says that a "
          },
          {
            "Text": "ValueError",
            "AttrFlags": 2
          },
          {
            "Text": " with the message "
          },
          {
            "Text": "'Example error!'",
            "AttrFlags": 2
          },
          {
            "Text": " was raised by our "
          },
          {
            "Text": "failing_function()",
            "AttrFlags": 2
          },
          {
            "Text": ", which was executed in the interpreter."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388759282,
        "id": "6a84171c-c42d-4690-99d9-c95cb6b18514",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388759282,
        "parent_id": "91e7447a-e3b1-4a6c-a854-95e4fb528e82",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Calling code can choose to handle any and all types of exception that a call can raise:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Calling code can choose to handle any and all types of exception that a call can raise:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388759283,
        "id": "3945bf29-5a0d-4699-8db4-cb62047edceb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388759283,
        "parent_id": "91e7447a-e3b1-4a6c-a854-95e4fb528e82",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e try:\n...     failing_function()\n... except ValueError:\n...     print('Handled the error')\nHandled the error"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003e\u003e\u003e try:\n...     failing_function()\n... except ValueError:\n...     print('Handled the error')\nHandled the error",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388759283,
        "id": "4fd92bb3-3181-4ed6-90cb-f0a16e6450a0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388759283,
        "parent_id": "91e7447a-e3b1-4a6c-a854-95e4fb528e82",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can get hold of the exception objects by assigning them in the "
            ],
            [
              "except...",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " part of the exception handling code:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can get hold of the exception objects by assigning them in the "
          },
          {
            "Text": "except...",
            "AttrFlags": 2
          },
          {
            "Text": " part of the exception handling code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388759283,
        "id": "affb8fa9-cee1-4f87-921e-a2bf06d01e02",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388759283,
        "parent_id": "91e7447a-e3b1-4a6c-a854-95e4fb528e82",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e try:\n...     failing_function()\n... except ValueError as e:\n...     print('Caught exception', repr(e))\nCaught exception ValueError('Example error!',)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003e\u003e\u003e try:\n...     failing_function()\n... except ValueError as e:\n...     print('Caught exception', repr(e))\nCaught exception ValueError('Example error!',)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388759283,
        "id": "efe89d10-fd17-45c9-97db-de598149d80a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388759283,
        "parent_id": "91e7447a-e3b1-4a6c-a854-95e4fb528e82",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A complete list of built-in Python exceptions along with their descriptions can be found in the Python Documentation: https://docs.python.org/3.5/library/exceptions.html. And here is the full list arranged hierarchically: http://stackoverflow.com/documentation/python/1788/exceptions/5535/exception-hierarchy."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A complete list of built-in Python exceptions along with their descriptions can be found in the Python Documentation: https://docs.python.org/3.5/library/exceptions.html. And here is the full list arranged hierarchically: http://stackoverflow.com/documentation/python/1788/exceptions/5535/exception-hierarchy."
          }
        ]
      }
    ],
    "title": "Exceptions are Objects too"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}