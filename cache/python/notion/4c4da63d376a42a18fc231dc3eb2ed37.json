{
  "ID": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
  "Root": {
    "alive": true,
    "content": [
      "d1712169-9e67-47d3-a4e8-ca43da2147e0",
      "3aefb3b4-cf44-4576-8e50-7941112186ed",
      "51236b80-3cf7-4d22-9063-2a9ae08989c1",
      "fda5c42d-f306-47fb-8dcb-6bf4d35b85fe",
      "714d71d5-ade5-4c84-964d-0388b479f61c",
      "3683718d-49ea-4e7c-9ed1-34178749ee9f",
      "8f95b79b-8879-4636-a47e-ad75e96726f0",
      "3a3ba3c2-1ed5-49b7-9d2f-6c7043147578",
      "0d29b721-6956-4949-9f66-47265de91c08",
      "587b6723-2bfa-4752-91d4-2ff460636109",
      "21489734-7c28-4add-9221-829dda358126",
      "eca96b96-1e20-4fd8-be96-41d3e1710d56",
      "53e1e2df-3965-45ed-ab9c-6caab448acbc",
      "ca66388a-a9df-42f2-b31c-88637e9d4349",
      "ccfa3e19-50ca-42bf-8a12-f5d88e9fb3f8",
      "4ce34019-e945-47f2-85f5-8afb341d4c4f",
      "e305addd-d212-4b16-9fce-62adc18cd120",
      "2a0679e0-fd02-4d2b-a891-5c695336a52d",
      "fbaffbcf-1ec9-467d-ad20-1b92d47e5f0a",
      "205168c3-57f3-48e7-b317-43e3a508275b",
      "4255935c-3bd2-49f0-8604-56fc5b76d146",
      "278335aa-94a9-47e4-8816-a9f27f1b7449",
      "6d8d0ae9-f3e6-4b1c-a567-233b7aa7930b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550261081081,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550262000000,
    "parent_id": "e895cb09-a4b0-4965-a04d-695253fcf7c6",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Defining and calling simple functions"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081073,
        "id": "d1712169-9e67-47d3-a4e8-ca43da2147e0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081073,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using the "
            ],
            [
              "def",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement is the most common way to define a function in python. This statement is a so called "
            ],
            [
              "single clause compound statement",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " with the following syntax:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using the "
          },
          {
            "Text": "def",
            "AttrFlags": 2
          },
          {
            "Text": " statement is the most common way to define a function in python. This statement is a so called "
          },
          {
            "Text": "single clause compound statement",
            "AttrFlags": 4
          },
          {
            "Text": " with the following syntax:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081076,
        "id": "3aefb3b4-cf44-4576-8e50-7941112186ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262000000,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def function_name(parameters):\n    statement(s)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def function_name(parameters):\n    statement(s)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081076,
        "id": "51236b80-3cf7-4d22-9063-2a9ae08989c1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081076,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "function_name",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " is known as the "
            ],
            [
              "identifier",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " of the function. Since a function definition is an executable statement its execution "
            ],
            [
              "binds",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " the function name to the function object which can be called later on using the identifier."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "function_name",
            "AttrFlags": 6
          },
          {
            "Text": " is known as the "
          },
          {
            "Text": "identifier",
            "AttrFlags": 4
          },
          {
            "Text": " of the function. Since a function definition is an executable statement its execution "
          },
          {
            "Text": "binds",
            "AttrFlags": 4
          },
          {
            "Text": " the function name to the function object which can be called later on using the identifier."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081076,
        "id": "fda5c42d-f306-47fb-8dcb-6bf4d35b85fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081076,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "parameters",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " is an optional list of identifiers that get bound to the values supplied as arguments when the function is called. A function may have an arbitrary number of arguments which are separated by commas."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "parameters",
            "AttrFlags": 6
          },
          {
            "Text": " is an optional list of identifiers that get bound to the values supplied as arguments when the function is called. A function may have an arbitrary number of arguments which are separated by commas."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081079,
        "id": "714d71d5-ade5-4c84-964d-0388b479f61c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081079,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "statement(s)",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " – also known as the "
            ],
            [
              "function body",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " – are a nonempty sequence of statements executed each time the function is called. This means a function body cannot be empty, just like any "
            ],
            [
              "indented block",
              [
                [
                  "i"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/python/193/introduction-to-python/3952/block-indentation#t=201608020013139864421"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "statement(s)",
            "AttrFlags": 6
          },
          {
            "Text": " – also known as the "
          },
          {
            "Text": "function body",
            "AttrFlags": 4
          },
          {
            "Text": " – are a nonempty sequence of statements executed each time the function is called. This means a function body cannot be empty, just like any "
          },
          {
            "Text": "indented block",
            "AttrFlags": 4,
            "Link": "http://stackoverflow.com/documentation/python/193/introduction-to-python/3952/block-indentation#t=201608020013139864421"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081079,
        "id": "3683718d-49ea-4e7c-9ed1-34178749ee9f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081079,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here’s an example of a simple function definition which purpose is to print "
            ],
            [
              "Hello",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " each time it’s called:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here’s an example of a simple function definition which purpose is to print "
          },
          {
            "Text": "Hello",
            "AttrFlags": 2
          },
          {
            "Text": " each time it’s called:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081079,
        "id": "8f95b79b-8879-4636-a47e-ad75e96726f0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262000000,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def greet():\n    print(\"Hello\")"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def greet():\n    print(\"Hello\")",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081079,
        "id": "3a3ba3c2-1ed5-49b7-9d2f-6c7043147578",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081079,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now let’s call the defined "
            ],
            [
              "greet()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now let’s call the defined "
          },
          {
            "Text": "greet()",
            "AttrFlags": 2
          },
          {
            "Text": " function:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081079,
        "id": "0d29b721-6956-4949-9f66-47265de91c08",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262000000,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "greet()\n# Out: Hello"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "greet()\n# Out: Hello",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081079,
        "id": "587b6723-2bfa-4752-91d4-2ff460636109",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081079,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "That’s an other example of a function definition which takes one single argument and displays the passed in value each time the function is called:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "That’s an other example of a function definition which takes one single argument and displays the passed in value each time the function is called:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081080,
        "id": "21489734-7c28-4add-9221-829dda358126",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262000000,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def greet_two(greeting):\n    print(greeting)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def greet_two(greeting):\n    print(greeting)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081080,
        "id": "eca96b96-1e20-4fd8-be96-41d3e1710d56",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081080,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "After that the "
            ],
            [
              "greet_two()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function must be called with an argument:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "After that the "
          },
          {
            "Text": "greet_two()",
            "AttrFlags": 2
          },
          {
            "Text": " function must be called with an argument:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081080,
        "id": "53e1e2df-3965-45ed-ab9c-6caab448acbc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262000000,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "greet_two(\"Howdy\")\n# Out: Howdy"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "greet_two(\"Howdy\")\n# Out: Howdy",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081080,
        "id": "ca66388a-a9df-42f2-b31c-88637e9d4349",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081080,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Also you can give a default value to that function argument:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Also you can give a default value to that function argument:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081080,
        "id": "ccfa3e19-50ca-42bf-8a12-f5d88e9fb3f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262000000,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def greet_two(greeting=\"Howdy\"):\n    print(greeting)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def greet_two(greeting=\"Howdy\"):\n    print(greeting)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081080,
        "id": "4ce34019-e945-47f2-85f5-8afb341d4c4f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081080,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now you can call the function without giving a value:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now you can call the function without giving a value:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081080,
        "id": "e305addd-d212-4b16-9fce-62adc18cd120",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262000000,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "greet_two()\n# Out: Howdy"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "greet_two()\n# Out: Howdy",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081080,
        "id": "2a0679e0-fd02-4d2b-a891-5c695336a52d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081080,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You’ll notice that unlike many other languages, you do not need to explicitly declare a return type of the function. Python functions can return values of any type via the "
            ],
            [
              "return",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword. One function can return any number of different types!"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You’ll notice that unlike many other languages, you do not need to explicitly declare a return type of the function. Python functions can return values of any type via the "
          },
          {
            "Text": "return",
            "AttrFlags": 2
          },
          {
            "Text": " keyword. One function can return any number of different types!"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081081,
        "id": "fbaffbcf-1ec9-467d-ad20-1b92d47e5f0a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262000000,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def many_types(x):\n    if x \u003c 0:\n        return \"Hello!\"\n    else:\n        return 0\n\nprint(many_types(1))\nprint(many_types(-1))\n\n# Output:\n0\nHello!"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def many_types(x):\n    if x \u003c 0:\n        return \"Hello!\"\n    else:\n        return 0\n\nprint(many_types(1))\nprint(many_types(-1))\n\n# Output:\n0\nHello!",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081081,
        "id": "205168c3-57f3-48e7-b317-43e3a508275b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081081,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As long as this is handled correctly by the caller, this is perfectly valid Python code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As long as this is handled correctly by the caller, this is perfectly valid Python code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081081,
        "id": "4255935c-3bd2-49f0-8604-56fc5b76d146",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081081,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A function that reaches the end of execution without a return statement will always return "
            ],
            [
              "None",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A function that reaches the end of execution without a return statement will always return "
          },
          {
            "Text": "None",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081081,
        "id": "278335aa-94a9-47e4-8816-a9f27f1b7449",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550262000000,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def do_nothing():\n    pass\n\nprint(do_nothing())\n# Out: None"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def do_nothing():\n    pass\n\nprint(do_nothing())\n# Out: None",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550261081081,
        "id": "6d8d0ae9-f3e6-4b1c-a567-233b7aa7930b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550261081081,
        "parent_id": "4c4da63d-376a-42a1-8fc2-31dc3eb2ed37",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As mentioned previously a function definition must have a function body, a nonempty sequence of statements. Therefore the "
            ],
            [
              "pass",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement is used as function body, which is a null operation – when it is executed, nothing happens. It does what it means, it skips. It is useful as a placeholder when a statement is required syntactically, but no code needs to be executed."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As mentioned previously a function definition must have a function body, a nonempty sequence of statements. Therefore the "
          },
          {
            "Text": "pass",
            "AttrFlags": 2
          },
          {
            "Text": " statement is used as function body, which is a null operation – when it is executed, nothing happens. It does what it means, it skips. It is useful as a placeholder when a statement is required syntactically, but no code needs to be executed."
          }
        ]
      }
    ],
    "title": "Defining and calling simple functions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}