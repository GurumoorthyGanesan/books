{
  "ID": "ed3fed83-fd29-4866-bde5-e67c829ff612",
  "Root": {
    "alive": true,
    "content": [
      "cb9f1a26-f1e1-48f8-9fd5-d27d3b5b4517",
      "eb506c4f-06e5-49a5-8673-f4ab157d6c82",
      "76a678a5-db58-4be4-8f12-4d309418f0fb",
      "3d719626-e209-4801-9afb-dfbe1c3e84b7",
      "0ff4b117-f794-484f-a2fc-25c2c8c75966"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550354227103,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ed3fed83-fd29-4866-bde5-e67c829ff612",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550354280000,
    "parent_id": "ead7b4b8-21f1-44cb-985a-91d4177083c6",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Creating a UDP Server"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354227100,
        "id": "cb9f1a26-f1e1-48f8-9fd5-d27d3b5b4517",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354227100,
        "parent_id": "ed3fed83-fd29-4866-bde5-e67c829ff612",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A UDP server is easily created using the "
            ],
            [
              "socketserver",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " library."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A UDP server is easily created using the "
          },
          {
            "Text": "socketserver",
            "AttrFlags": 2
          },
          {
            "Text": " library."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354227103,
        "id": "eb506c4f-06e5-49a5-8673-f4ab157d6c82",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354227103,
        "parent_id": "ed3fed83-fd29-4866-bde5-e67c829ff612",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "a simple time server:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "a simple time server:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354227103,
        "id": "76a678a5-db58-4be4-8f12-4d309418f0fb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354280000,
        "parent_id": "ed3fed83-fd29-4866-bde5-e67c829ff612",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "import time\nfrom socketserver import BaseRequestHandler, UDPServer\n\nclass CtimeHandler(BaseRequestHandler):\n    def handle(self):\n    print('connection from: ', self.client_address)\n    # Get message and client socket\n    msg, sock = self.request\n    resp = time.ctime()\n    sock.sendto(resp.encode('ascii'), self.client_address)\n\nif __name__ == '__main__':\n    server = UDPServer(('', 5000), CtimeHandler)\n    server.serve_forever()"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "import time\nfrom socketserver import BaseRequestHandler, UDPServer\n\nclass CtimeHandler(BaseRequestHandler):\n    def handle(self):\n    print('connection from: ', self.client_address)\n    # Get message and client socket\n    msg, sock = self.request\n    resp = time.ctime()\n    sock.sendto(resp.encode('ascii'), self.client_address)\n\nif __name__ == '__main__':\n    server = UDPServer(('', 5000), CtimeHandler)\n    server.serve_forever()",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354227103,
        "id": "3d719626-e209-4801-9afb-dfbe1c3e84b7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354227103,
        "parent_id": "ed3fed83-fd29-4866-bde5-e67c829ff612",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Testing:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Testing:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354227103,
        "id": "0ff4b117-f794-484f-a2fc-25c2c8c75966",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354280000,
        "parent_id": "ed3fed83-fd29-4866-bde5-e67c829ff612",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e from socket import socket, AF_INET, SOCK_DGRAM\n\u003e\u003e\u003e sock = socket(AF_INET, SOCK_DGRAM)\n\u003e\u003e\u003e sick.sendto(b'', ('localhost', 5000))\n0\n\u003e\u003e\u003e sock.recvfrom(8192)\n(b'Wed Aug 15 20:35:08 2012', ('127.0.0.1', 5000))"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e from socket import socket, AF_INET, SOCK_DGRAM\n\u003e\u003e\u003e sock = socket(AF_INET, SOCK_DGRAM)\n\u003e\u003e\u003e sick.sendto(b'', ('localhost', 5000))\n0\n\u003e\u003e\u003e sock.recvfrom(8192)\n(b'Wed Aug 15 20:35:08 2012', ('127.0.0.1', 5000))",
        "code_language": "Python"
      }
    ],
    "title": "Creating a UDP Server",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}