{
  "ID": "946f0b3b-6b3a-4406-a488-c10e081f89cc",
  "Root": {
    "alive": true,
    "content": [
      "e8c0fa61-51ce-43fa-b964-68324921308c",
      "377a5fe4-45c8-4e12-a252-611b693c8c16",
      "cd062a88-af56-4deb-bb5c-0e17116b948a",
      "2505f2ee-a64f-4c71-a0dd-9bbcb1952552",
      "c7068948-5bce-4766-813a-2632d5d5e2c2",
      "f51a4654-cd85-4cbb-b574-3cf3bbfe2d03",
      "dd719d56-2a4f-468e-9889-f36d559b2592",
      "eaba15db-ca84-4847-b859-14f346df49fa",
      "41eca775-48c6-4c4f-b5af-9484bc84900f",
      "629c0172-4420-4dec-8580-1f318b9c0c18"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550356777173,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "946f0b3b-6b3a-4406-a488-c10e081f89cc",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550357220000,
    "parent_id": "36ec32ec-9810-403d-8744-950ef6ffd6e0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Multi-threaded TCP Socket Server"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550356777169,
        "id": "e8c0fa61-51ce-43fa-b964-68324921308c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550356777169,
        "parent_id": "946f0b3b-6b3a-4406-a488-c10e081f89cc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When run with no arguments, this program starts a TCP socket server that listens for connections to "
            ],
            [
              "127.0.0.1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " on port "
            ],
            [
              "5000",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The server handles each connection in a separate thread."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When run with no arguments, this program starts a TCP socket server that listens for connections to "
          },
          {
            "Text": "127.0.0.1",
            "AttrFlags": 2
          },
          {
            "Text": " on port "
          },
          {
            "Text": "5000",
            "AttrFlags": 2
          },
          {
            "Text": ". The server handles each connection in a separate thread."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550356777171,
        "id": "377a5fe4-45c8-4e12-a252-611b693c8c16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550356777171,
        "parent_id": "946f0b3b-6b3a-4406-a488-c10e081f89cc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When run with the "
            ],
            [
              "-c",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " argument, this program connects to the server, reads the client list, and prints it out. The client list is transferred as a JSON string. The client name may be specified by passing the "
            ],
            [
              "-n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " argument. By passing different names, the effect on the client list may be observed."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When run with the "
          },
          {
            "Text": "-c",
            "AttrFlags": 2
          },
          {
            "Text": " argument, this program connects to the server, reads the client list, and prints it out. The client list is transferred as a JSON string. The client name may be specified by passing the "
          },
          {
            "Text": "-n",
            "AttrFlags": 2
          },
          {
            "Text": " argument. By passing different names, the effect on the client list may be observed."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550356777172,
        "id": "cd062a88-af56-4deb-bb5c-0e17116b948a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550356777172,
        "parent_id": "946f0b3b-6b3a-4406-a488-c10e081f89cc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "client_list.py",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "client_list.py",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550356777172,
        "id": "2505f2ee-a64f-4c71-a0dd-9bbcb1952552",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550357220000,
        "parent_id": "946f0b3b-6b3a-4406-a488-c10e081f89cc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "import argparse\nimport json\nimport socket\nimport threading\n\ndef handle_client(client_list, conn, address):\n    name = conn.recv(1024)\n    entry = dict(zip(['name', 'address', 'port'], [name, address[0], address[1]]))\n    client_list[name] = entry\n    conn.sendall(json.dumps(client_list))\n    conn.shutdown(socket.SHUT_RDWR)\n    conn.close()\n\ndef server(client_list):\n    print \"Starting server...\"\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n    s.bind(('127.0.0.1', 5000))\n    s.listen(5)\n    while True:\n        (conn, address) = s.accept()\n        t = threading.Thread(target=handle_client, args=(client_list, conn, address))\n        t.daemon = True\n        t.start()\n\ndef client(name):\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    s.connect(('127.0.0.1', 5000))\n    s.send(name)\n    data = s.recv(1024)\n    result = json.loads(data)\n    print json.dumps(result, indent=4)\n\ndef parse_arguments():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('-c', dest='client', action='store_true')\n    parser.add_argument('-n', dest='name', type=str, default='name')\n    result = parser.parse_args()\n    return result\n\ndef main():\n    client_list = dict()\n    args = parse_arguments()\n    if args.client:\n        client(args.name)\n    else:\n        try:\n            server(client_list)\n        except KeyboardInterrupt:\n            print \"Keyboard interrupt\"\n\nif __name__ == '__main__':\n    main()"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "import argparse\nimport json\nimport socket\nimport threading\n\ndef handle_client(client_list, conn, address):\n    name = conn.recv(1024)\n    entry = dict(zip(['name', 'address', 'port'], [name, address[0], address[1]]))\n    client_list[name] = entry\n    conn.sendall(json.dumps(client_list))\n    conn.shutdown(socket.SHUT_RDWR)\n    conn.close()\n\ndef server(client_list):\n    print \"Starting server...\"\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n    s.bind(('127.0.0.1', 5000))\n    s.listen(5)\n    while True:\n        (conn, address) = s.accept()\n        t = threading.Thread(target=handle_client, args=(client_list, conn, address))\n        t.daemon = True\n        t.start()\n\ndef client(name):\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    s.connect(('127.0.0.1', 5000))\n    s.send(name)\n    data = s.recv(1024)\n    result = json.loads(data)\n    print json.dumps(result, indent=4)\n\ndef parse_arguments():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('-c', dest='client', action='store_true')\n    parser.add_argument('-n', dest='name', type=str, default='name')\n    result = parser.parse_args()\n    return result\n\ndef main():\n    client_list = dict()\n    args = parse_arguments()\n    if args.client:\n        client(args.name)\n    else:\n        try:\n            server(client_list)\n        except KeyboardInterrupt:\n            print \"Keyboard interrupt\"\n\nif __name__ == '__main__':\n    main()",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550356777172,
        "id": "c7068948-5bce-4766-813a-2632d5d5e2c2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550356777172,
        "parent_id": "946f0b3b-6b3a-4406-a488-c10e081f89cc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Server Output",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Server Output",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550356777172,
        "id": "f51a4654-cd85-4cbb-b574-3cf3bbfe2d03",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550357220000,
        "parent_id": "946f0b3b-6b3a-4406-a488-c10e081f89cc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Shell"
            ]
          ],
          "title": [
            [
              "$ python client_list.py\nStarting server..."
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "$ python client_list.py\nStarting server...",
        "code_language": "Shell"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550356777172,
        "id": "dd719d56-2a4f-468e-9889-f36d559b2592",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550356777172,
        "parent_id": "946f0b3b-6b3a-4406-a488-c10e081f89cc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Client Output",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Client Output",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550356777172,
        "id": "eaba15db-ca84-4847-b859-14f346df49fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550357220000,
        "parent_id": "946f0b3b-6b3a-4406-a488-c10e081f89cc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Shell"
            ]
          ],
          "title": [
            [
              "$ python client_list.py -c -n name1\n{\n    \"name1\": {\n        \"address\": \"127.0.0.1\", \n        \"port\": 62210, \n        \"name\": \"name1\"\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "$ python client_list.py -c -n name1\n{\n    \"name1\": {\n        \"address\": \"127.0.0.1\", \n        \"port\": 62210, \n        \"name\": \"name1\"\n    }\n}",
        "code_language": "Shell"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550356777172,
        "id": "41eca775-48c6-4c4f-b5af-9484bc84900f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550356777172,
        "parent_id": "946f0b3b-6b3a-4406-a488-c10e081f89cc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The receive buffers are limited to 1024 bytes. If the JSON string representation of the client list exceeds this size, it will be truncated. This will cause the following exception to be raised:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The receive buffers are limited to 1024 bytes. If the JSON string representation of the client list exceeds this size, it will be truncated. This will cause the following exception to be raised:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550356777173,
        "id": "629c0172-4420-4dec-8580-1f318b9c0c18",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550356777173,
        "parent_id": "946f0b3b-6b3a-4406-a488-c10e081f89cc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "ValueError: Unterminated string starting at: line 1 column 1023 (char 1022)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "ValueError: Unterminated string starting at: line 1 column 1023 (char 1022)",
        "code_language": "Plain Text"
      }
    ],
    "title": "Multi-threaded TCP Socket Server",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}