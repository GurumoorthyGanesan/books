{
  "ID": "e520aaef-eeca-4372-982e-5ee89126483d",
  "Root": {
    "alive": true,
    "content": [
      "5d2d3660-72e0-48c2-96c5-9835ee65d011",
      "63afd3c0-627a-45fe-8e37-8f6da1f7b8e4",
      "e32c9ddd-6efd-445b-8d52-4ea2f2e25560",
      "6465d507-d699-4fdb-aeba-fc29412d6b0a",
      "292b473d-2676-4ada-ab51-e5b04dae3ed4",
      "cff83b5b-64a6-4379-877c-c7cf3e67ad37"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550307141985,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e520aaef-eeca-4372-982e-5ee89126483d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550307360000,
    "parent_id": "a0d16770-ed43-43f6-8843-dfd332e9a62a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Refactoring list-building code"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307141984,
        "id": "5d2d3660-72e0-48c2-96c5-9835ee65d011",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307141984,
        "parent_id": "e520aaef-eeca-4372-982e-5ee89126483d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Suppose you have complex code that creates and returns a list by starting with a blank list and repeatedly appending to it:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Suppose you have complex code that creates and returns a list by starting with a blank list and repeatedly appending to it:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307141984,
        "id": "63afd3c0-627a-45fe-8e37-8f6da1f7b8e4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307360000,
        "parent_id": "e520aaef-eeca-4372-982e-5ee89126483d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def create():\n    result = []\n    # logic here...\n    result.append(value) # possibly in several places\n    # more logic...\n    return result # possibly in several places\n\nvalues = create()"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def create():\n    result = []\n    # logic here...\n    result.append(value) # possibly in several places\n    # more logic...\n    return result # possibly in several places\n\nvalues = create()",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307141985,
        "id": "e32c9ddd-6efd-445b-8d52-4ea2f2e25560",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307141985,
        "parent_id": "e520aaef-eeca-4372-982e-5ee89126483d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When it’s not practical to replace the inner logic with a list comprehension, you can turn the entire function into a generator in-place, and then collect the results:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When it’s not practical to replace the inner logic with a list comprehension, you can turn the entire function into a generator in-place, and then collect the results:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307141985,
        "id": "6465d507-d699-4fdb-aeba-fc29412d6b0a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307360000,
        "parent_id": "e520aaef-eeca-4372-982e-5ee89126483d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def create_gen():\n    # logic...\n    yield value\n    # more logic\n    return # not needed if at the end of the function, of course\n\nvalues = list(create_gen())"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def create_gen():\n    # logic...\n    yield value\n    # more logic\n    return # not needed if at the end of the function, of course\n\nvalues = list(create_gen())",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307141985,
        "id": "292b473d-2676-4ada-ab51-e5b04dae3ed4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307141985,
        "parent_id": "e520aaef-eeca-4372-982e-5ee89126483d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the logic is recursive, use "
            ],
            [
              "yield from",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to include all the values from the recursive call in a “flattened” result:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the logic is recursive, use "
          },
          {
            "Text": "yield from",
            "AttrFlags": 2
          },
          {
            "Text": " to include all the values from the recursive call in a “flattened” result:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307141985,
        "id": "cff83b5b-64a6-4379-877c-c7cf3e67ad37",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307360000,
        "parent_id": "e520aaef-eeca-4372-982e-5ee89126483d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def preorder_traversal(node):\n    yield node.value\n    for child in node.children:\n        yield from preorder_traversal(child)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def preorder_traversal(node):\n    yield node.value\n    for child in node.children:\n        yield from preorder_traversal(child)",
        "code_language": "Python"
      }
    ],
    "title": "Refactoring list-building code",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}