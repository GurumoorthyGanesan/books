{
  "ID": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
  "Root": {
    "alive": true,
    "content": [
      "b26e74f9-df76-4445-8ff1-0f674cc58043",
      "ffaa36fc-13e9-4ea2-8813-5602a32a88a2",
      "cb0b0495-17cb-4efa-91ca-090e9408e8d0",
      "0e448d8b-9895-47f6-a1ab-767e0e5c5752",
      "05c43704-af22-4fe6-a0fb-f47f86092bf7",
      "623b596c-0355-4051-90ba-231515b7b48c",
      "74244de8-07d1-4f3c-8e74-a19542312b54",
      "093f7309-0a18-4dd9-a6a0-f7ba4d1811bd",
      "be5602a7-ebb3-4464-8ba8-78c09c19ecb4",
      "b8196f41-f246-429b-88da-ac3db75f4ac1",
      "71dbc2b7-132e-4b38-8b68-3c072a6a4d72",
      "94b11ae9-5c99-4917-a34a-6d3416662f6c",
      "31309a06-090e-443b-9a2f-a042b7ecc107",
      "8a5060ac-a6a5-45dc-883d-cb98d353756c",
      "2bbd5314-972c-47bb-a383-b0c910afc8f2",
      "bfd2d945-d95f-43f3-af61-c3e07c24ba8a",
      "09441aaa-26d2-47ef-926d-ca948a98d830",
      "947feca5-7f69-46e0-8a4f-f863cc0159eb",
      "25b773e4-3955-4ba0-8bf3-078e75e2a3c5",
      "e0a9db69-68ab-4934-bb0e-00fa66f53b64",
      "aebf9511-8dfb-41b3-a54b-54e8334c1418"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550355480363,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550356140000,
    "parent_id": "a6af32a9-e16b-4cf0-b47b-d3233db8fe1c",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "More flexibility with Popen"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480354,
        "id": "b26e74f9-df76-4445-8ff1-0f674cc58043",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550355480354,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using "
            ],
            [
              "subprocess.Popen",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " give more fine-grained control over launched processes than "
            ],
            [
              "subprocess.call",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using "
          },
          {
            "Text": "subprocess.Popen",
            "AttrFlags": 2
          },
          {
            "Text": " give more fine-grained control over launched processes than "
          },
          {
            "Text": "subprocess.call",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480357,
        "id": "ffaa36fc-13e9-4ea2-8813-5602a32a88a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550355480357,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Launching a subprocess"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Launching a subprocess"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480357,
        "id": "cb0b0495-17cb-4efa-91ca-090e9408e8d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550356080000,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "process = subprocess.Popen([r'C:\\path\\to\\app.exe', 'arg1', '--flag', 'arg'])"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "process = subprocess.Popen([r'C:\\path\\to\\app.exe', 'arg1', '--flag', 'arg'])",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480358,
        "id": "0e448d8b-9895-47f6-a1ab-767e0e5c5752",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550355480358,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The signature for "
            ],
            [
              "Popen",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is very similar to the "
            ],
            [
              "call",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function; however, "
            ],
            [
              "Popen",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will return immediately instead of waiting for the subprocess to complete like "
            ],
            [
              "call",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " does."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The signature for "
          },
          {
            "Text": "Popen",
            "AttrFlags": 2
          },
          {
            "Text": " is very similar to the "
          },
          {
            "Text": "call",
            "AttrFlags": 2
          },
          {
            "Text": " function; however, "
          },
          {
            "Text": "Popen",
            "AttrFlags": 2
          },
          {
            "Text": " will return immediately instead of waiting for the subprocess to complete like "
          },
          {
            "Text": "call",
            "AttrFlags": 2
          },
          {
            "Text": " does."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480358,
        "id": "05c43704-af22-4fe6-a0fb-f47f86092bf7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550355480358,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Waiting on a subprocess to complete"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Waiting on a subprocess to complete"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480358,
        "id": "623b596c-0355-4051-90ba-231515b7b48c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550356080000,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "process = subprocess.Popen([r'C:\\path\\to\\app.exe', 'arg1', '--flag', 'arg'])\nprocess.wait()"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "process = subprocess.Popen([r'C:\\path\\to\\app.exe', 'arg1', '--flag', 'arg'])\nprocess.wait()",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480358,
        "id": "74244de8-07d1-4f3c-8e74-a19542312b54",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550355480358,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Reading output from a subprocess"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Reading output from a subprocess"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480358,
        "id": "093f7309-0a18-4dd9-a6a0-f7ba4d1811bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550356140000,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "process = subprocess.Popen([r'C:\\path\\to\\app.exe'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\n# This will block until process completes\nstdout, stderr = process.communicate()\nprint stdout\nprint stderr"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "process = subprocess.Popen([r'C:\\path\\to\\app.exe'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\n# This will block until process completes\nstdout, stderr = process.communicate()\nprint stdout\nprint stderr",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480358,
        "id": "be5602a7-ebb3-4464-8ba8-78c09c19ecb4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550355480358,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Interactive access to running subprocesses"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Interactive access to running subprocesses"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480359,
        "id": "b8196f41-f246-429b-88da-ac3db75f4ac1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550355480359,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can read and write on "
            ],
            [
              "stdin",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "stdout",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " even while the subprocess hasn’t completed. This could be useful when automating functionality in another program."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can read and write on "
          },
          {
            "Text": "stdin",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "stdout",
            "AttrFlags": 2
          },
          {
            "Text": " even while the subprocess hasn’t completed. This could be useful when automating functionality in another program."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480359,
        "id": "71dbc2b7-132e-4b38-8b68-3c072a6a4d72",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550355480359,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Writing to a subprocess"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Writing to a subprocess"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480359,
        "id": "94b11ae9-5c99-4917-a34a-6d3416662f6c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550356140000,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "process = subprocess.Popen([r'C:\\path\\to\\app.exe'], stdout = subprocess.PIPE, stdin = subprocess.PIPE)\n\n\nprocess.stdin.write('line of input\\n') # Write input\n\nline  = process.stdout.readline() # Read a line from stdout\n\n# Do logic on line read."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "process = subprocess.Popen([r'C:\\path\\to\\app.exe'], stdout = subprocess.PIPE, stdin = subprocess.PIPE)\n\n\nprocess.stdin.write('line of input\\n') # Write input\n\nline  = process.stdout.readline() # Read a line from stdout\n\n# Do logic on line read.",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480359,
        "id": "31309a06-090e-443b-9a2f-a042b7ecc107",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550355480359,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, if you only need one set of input and output, rather than dynamic interaction, you should use "
            ],
            [
              "communicate()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " rather than directly accessing "
            ],
            [
              "stdin",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "stdout",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, if you only need one set of input and output, rather than dynamic interaction, you should use "
          },
          {
            "Text": "communicate()",
            "AttrFlags": 2
          },
          {
            "Text": " rather than directly accessing "
          },
          {
            "Text": "stdin",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "stdout",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480359,
        "id": "8a5060ac-a6a5-45dc-883d-cb98d353756c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550355480359,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Reading a stream from a subprocess"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Reading a stream from a subprocess"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480359,
        "id": "2bbd5314-972c-47bb-a383-b0c910afc8f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550355480359,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In case you want to see the output of a subprocess line by line, you can use the following snippet:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In case you want to see the output of a subprocess line by line, you can use the following snippet:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480359,
        "id": "bfd2d945-d95f-43f3-af61-c3e07c24ba8a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550356140000,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "process = subprocess.Popen(\u003cyour_command\u003e, stdout=subprocess.PIPE)\nwhile process.poll() is None:\n    output_line = process.stdout.readline()"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "process = subprocess.Popen(\u003cyour_command\u003e, stdout=subprocess.PIPE)\nwhile process.poll() is None:\n    output_line = process.stdout.readline()",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480360,
        "id": "09441aaa-26d2-47ef-926d-ca948a98d830",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550355480360,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "in the case the subcommand output do not have EOL character, the above snippet does not work. You can then read the output character by character as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "in the case the subcommand output do not have EOL character, the above snippet does not work. You can then read the output character by character as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480360,
        "id": "947feca5-7f69-46e0-8a4f-f863cc0159eb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550356140000,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "process = subprocess.Popen(\u003cyour_command\u003e, stdout=subprocess.PIPE)\nwhile process.poll() is None:\n    output_line = process.stdout.read(1)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "process = subprocess.Popen(\u003cyour_command\u003e, stdout=subprocess.PIPE)\nwhile process.poll() is None:\n    output_line = process.stdout.read(1)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480362,
        "id": "25b773e4-3955-4ba0-8bf3-078e75e2a3c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550355480362,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " specified as argument to the "
            ],
            [
              "read",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method tells read to read 1 character at time. You can specify to read as many characters you want using a different number. Negative number or 0 tells to "
            ],
            [
              "read",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to read as a single string until the EOF is encountered ("
            ],
            [
              "see here",
              [
                [
                  "a",
                  "https://docs.python.org/2/library/io.html"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": " specified as argument to the "
          },
          {
            "Text": "read",
            "AttrFlags": 2
          },
          {
            "Text": " method tells read to read 1 character at time. You can specify to read as many characters you want using a different number. Negative number or 0 tells to "
          },
          {
            "Text": "read",
            "AttrFlags": 2
          },
          {
            "Text": " to read as a single string until the EOF is encountered ("
          },
          {
            "Text": "see here",
            "Link": "https://docs.python.org/2/library/io.html"
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480362,
        "id": "e0a9db69-68ab-4934-bb0e-00fa66f53b64",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550355480362,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In both the above snippets, the "
            ],
            [
              "process.poll()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is "
            ],
            [
              "None",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " until the subprocess finishes. This is used to exit the loop once there is no more output to read."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In both the above snippets, the "
          },
          {
            "Text": "process.poll()",
            "AttrFlags": 2
          },
          {
            "Text": " is "
          },
          {
            "Text": "None",
            "AttrFlags": 2
          },
          {
            "Text": " until the subprocess finishes. This is used to exit the loop once there is no more output to read."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550355480362,
        "id": "aebf9511-8dfb-41b3-a54b-54e8334c1418",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550355480362,
        "parent_id": "360d8ec9-5783-4fa5-9787-5b8700a34f3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The same procedure could be applied to the "
            ],
            [
              "stderr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " of the subprocess."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The same procedure could be applied to the "
          },
          {
            "Text": "stderr",
            "AttrFlags": 2
          },
          {
            "Text": " of the subprocess."
          }
        ]
      }
    ],
    "title": "More flexibility with Popen",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}