{
  "ID": "332cbfd9-5c6d-4425-9e10-d48a26b62391",
  "Root": {
    "alive": true,
    "content": [
      "38555721-5002-4549-9400-9064b0467abd",
      "a212bba8-dadf-410c-8d7c-d8f756c21611",
      "6565f27f-9e93-47fc-9f5c-d4de812ff0e5",
      "0f0bad9f-650b-416d-a244-53c1c8c52f29",
      "51a82046-3031-496d-bf61-569c61847ba5",
      "7371d1cd-8247-4275-b3d4-49fd5a1f2ccb"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550307145660,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "332cbfd9-5c6d-4425-9e10-d48a26b62391",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550307480000,
    "parent_id": "a0d16770-ed43-43f6-8843-dfd332e9a62a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Searching"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307145659,
        "id": "38555721-5002-4549-9400-9064b0467abd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307145659,
        "parent_id": "332cbfd9-5c6d-4425-9e10-d48a26b62391",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "next",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function is useful even without iterating. Passing a generator expression to "
            ],
            [
              "next",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a quick way to search for the first occurrence of an element matching some predicate. Procedural code like"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "next",
            "AttrFlags": 2
          },
          {
            "Text": " function is useful even without iterating. Passing a generator expression to "
          },
          {
            "Text": "next",
            "AttrFlags": 2
          },
          {
            "Text": " is a quick way to search for the first occurrence of an element matching some predicate. Procedural code like"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307145660,
        "id": "a212bba8-dadf-410c-8d7c-d8f756c21611",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307480000,
        "parent_id": "332cbfd9-5c6d-4425-9e10-d48a26b62391",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def find_and_transform(sequence, predicate, func):\n    for element in sequence:\n        if predicate(element):\n            return func(element)\n    raise ValueError\n\nitem = find_and_transform(my_sequence, my_predicate, my_func)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def find_and_transform(sequence, predicate, func):\n    for element in sequence:\n        if predicate(element):\n            return func(element)\n    raise ValueError\n\nitem = find_and_transform(my_sequence, my_predicate, my_func)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307145660,
        "id": "6565f27f-9e93-47fc-9f5c-d4de812ff0e5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307145660,
        "parent_id": "332cbfd9-5c6d-4425-9e10-d48a26b62391",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "can be replaced with:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "can be replaced with:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307145660,
        "id": "0f0bad9f-650b-416d-a244-53c1c8c52f29",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307480000,
        "parent_id": "332cbfd9-5c6d-4425-9e10-d48a26b62391",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "item = next(my_func(x) for x in my_sequence if my_predicate(x))\n# StopIteration will be raised if there are no matches; this exception can\n# be caught and transformed, if desired."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "item = next(my_func(x) for x in my_sequence if my_predicate(x))\n# StopIteration will be raised if there are no matches; this exception can\n# be caught and transformed, if desired.",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307145660,
        "id": "51a82046-3031-496d-bf61-569c61847ba5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307145660,
        "parent_id": "332cbfd9-5c6d-4425-9e10-d48a26b62391",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For this purpose, it may be desirable to create an alias, such as "
            ],
            [
              "first = next",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", or a wrapper function to convert the exception:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For this purpose, it may be desirable to create an alias, such as "
          },
          {
            "Text": "first = next",
            "AttrFlags": 2
          },
          {
            "Text": ", or a wrapper function to convert the exception:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307145660,
        "id": "7371d1cd-8247-4275-b3d4-49fd5a1f2ccb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307480000,
        "parent_id": "332cbfd9-5c6d-4425-9e10-d48a26b62391",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def first(generator):\n    try:\n        return next(generator)\n    except StopIteration:\n        raise ValueError"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def first(generator):\n    try:\n        return next(generator)\n    except StopIteration:\n        raise ValueError",
        "code_language": "Python"
      }
    ],
    "title": "Searching",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}