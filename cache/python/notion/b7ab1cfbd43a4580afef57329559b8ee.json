{
  "ID": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
  "Root": {
    "alive": true,
    "content": [
      "d1f9976b-b5c2-41c6-a6d8-1f1158013465",
      "94615bbe-fb12-422d-8eb4-3a4829e9bb52",
      "69301976-99e3-4750-ba87-83719a2c02a2",
      "29ea0ca8-8211-46bf-b88e-0ba5a4977e8f",
      "2b417d73-d6cc-4359-b256-e34b70ef2035",
      "c1c61cc1-6fee-4b4d-8a30-1948142ced2f",
      "71bba43c-1e9a-4454-9f82-847d74e15d09",
      "4a3b3ca8-42e5-4149-82e5-fde77cba3f3c",
      "236592c7-f257-499c-9b8c-7b542db3273b",
      "00d0dcb6-3f16-407c-af24-18eda5f1b77d",
      "2635d086-f54f-47e8-8432-778671e8c7f6",
      "20ef3f0c-1a06-4770-b4e0-4e87e59e611c",
      "376c042c-a443-40fb-bf8c-81b3ddebb497",
      "cbc468d7-d702-4e20-a555-1864ca6a0046",
      "419f7efc-9811-4a43-abe8-f11ed1512b04",
      "c2875282-39f7-47e4-a6f0-81d6c8bff856",
      "84c8fbad-93db-4fc6-b45c-56aede411613",
      "598db6ca-b7d6-4093-b315-1046196371cc",
      "eb04a183-2b0f-4580-a605-e8794763b04c",
      "1d738129-a8b2-4075-a72d-24ef05e36bd9",
      "e776796a-a2fb-44e7-a654-6895aa5166ca",
      "eb7dd9f7-5ab7-4135-9304-1b9573ca4a82",
      "235dabb0-14a4-4f6b-99c2-1cc8c6aa3b23",
      "9cb19d2c-1c87-4a5e-b0e8-19a61be81fdf",
      "9f682e33-1b0b-44cb-8f69-4271ea05cad1",
      "e4a42bce-7fb3-4734-b899-78ca22a478df",
      "557eb7c2-53ff-4291-8b7a-bf7e3bf86ee5",
      "f7558ec0-bd02-4ed8-b1c6-e983b48b89df",
      "eafc5bb7-6625-4533-81d0-09e46c433d0e",
      "eb233354-87d0-4e8c-90b8-9ed346af646e",
      "243be793-4543-432c-bd56-5ccc5e177cd6",
      "c04f7d08-d278-461f-be5b-4933aefa766c",
      "d8307775-df43-4fe5-8e21-6c2954090cdc",
      "2e8a2e1f-555a-4f93-8944-d6f154804665",
      "985df127-c54a-4483-801e-a6741521542f",
      "1ba82c7b-4cfc-4d7b-a044-f30bfbe87957",
      "260c281e-2234-485f-b9bf-6a304a66147a",
      "37048057-7282-4e91-8e14-6cd71babea73",
      "577021af-25cd-4500-a838-9252c7d6de56",
      "e28e9ac8-99e1-44c1-a1c9-b1c4e2eb6f2d",
      "775b080a-ccc8-4fd3-b570-2fde7468325c",
      "94a994d1-4b54-45a7-8117-69437dfa6742"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550392020000,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550475120000,
    "parent_id": "12e6f78e-68a5-4972-90c9-6e1365ae6259",
    "parent_table": "block",
    "permissions": [
      {
        "role": "editor",
        "type": "user_permission",
        "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
      }
    ],
    "properties": {
      "title": [
        [
          "base64 module"
        ]
      ]
    },
    "type": "page",
    "version": 118,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392020907,
        "id": "d1f9976b-b5c2-41c6-a6d8-1f1158013465",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475120000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Base 64 encoding represents a common scheme for encoding binary into ASCII string format using radix 64. The base64 module is part of the standard library, which means it installs along with Python. Understanding of bytes and strings is critical to this topic and can be reviewed "
            ],
            [
              "here",
              [
                [
                  "a",
                  "https://goo.gl/N4qIYd"
                ]
              ]
            ],
            [
              ". This topic explains how to use the various features and number bases of the base64 module."
            ]
          ]
        },
        "type": "text",
        "version": 5,
        "inline_content": [
          {
            "Text": "Base 64 encoding represents a common scheme for encoding binary into ASCII string format using radix 64. The base64 module is part of the standard library, which means it installs along with Python. Understanding of bytes and strings is critical to this topic and can be reviewed "
          },
          {
            "Text": "here",
            "Link": "https://goo.gl/N4qIYd"
          },
          {
            "Text": ". This topic explains how to use the various features and number bases of the base64 module."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392020912,
        "id": "94615bbe-fb12-422d-8eb4-3a4829e9bb52",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Up until Python 3.4 came out, base64 encoding and decoding functions only worked with "
            ],
            [
              "bytes",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "bytearray",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " types. Now these functions accept any "
            ],
            [
              "bytes-like object",
              [
                [
                  "a",
                  "https://docs.python.org/3/glossary.html#term-bytes-like-object"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 5,
        "inline_content": [
          {
            "Text": "Up until Python 3.4 came out, base64 encoding and decoding functions only worked with "
          },
          {
            "Text": "bytes",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "bytearray",
            "AttrFlags": 2
          },
          {
            "Text": " types. Now these functions accept any "
          },
          {
            "Text": "bytes-like object",
            "Link": "https://docs.python.org/3/glossary.html#term-bytes-like-object"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022173,
        "id": "69301976-99e3-4750-ba87-83719a2c02a2",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Encoding and Decoding Base64"
            ]
          ]
        },
        "type": "header",
        "version": 6,
        "inline_content": [
          {
            "Text": "Encoding and Decoding Base64"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022166,
        "id": "29ea0ca8-8211-46bf-b88e-0ba5a4977e8f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To include the base64 module in your script, you must import it first:"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "To include the base64 module in your script, you must import it first:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022169,
        "id": "2b417d73-d6cc-4359-b256-e34b70ef2035",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import base64"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "import base64",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022171,
        "id": "c1c61cc1-6fee-4b4d-8a30-1948142ced2f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The base64 encode and decode functions both require a "
            ],
            [
              "bytes-like object",
              [
                [
                  "a",
                  "https://docs.python.org/3/glossary.html#term-bytes-like-object"
                ]
              ]
            ],
            [
              ". To get our string into bytes, we must encode it using Pythonâ€™s built in encode function. Most commonly, the "
            ],
            [
              "UTF-8",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " encoding is used, however a full list of these standard encodings (including languages with different characters) can be found "
            ],
            [
              "here",
              [
                [
                  "a",
                  "https://docs.python.org/3/library/codecs.html#standard-encodings"
                ]
              ]
            ],
            [
              " in the official Python Documentation. Below is an example of encoding a string into bytes:"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "The base64 encode and decode functions both require a "
          },
          {
            "Text": "bytes-like object",
            "Link": "https://docs.python.org/3/glossary.html#term-bytes-like-object"
          },
          {
            "Text": ". To get our string into bytes, we must encode it using Pythonâ€™s built in encode function. Most commonly, the "
          },
          {
            "Text": "UTF-8",
            "AttrFlags": 2
          },
          {
            "Text": " encoding is used, however a full list of these standard encodings (including languages with different characters) can be found "
          },
          {
            "Text": "here",
            "Link": "https://docs.python.org/3/library/codecs.html#standard-encodings"
          },
          {
            "Text": " in the official Python Documentation. Below is an example of encoding a string into bytes:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022171,
        "id": "71bba43c-1e9a-4454-9f82-847d74e15d09",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "s = \"Hello World!\"\nb = s.encode(\"UTF-8\")"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "s = \"Hello World!\"\nb = s.encode(\"UTF-8\")",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022171,
        "id": "4a3b3ca8-42e5-4149-82e5-fde77cba3f3c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The output of the last line would be:"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "The output of the last line would be:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022171,
        "id": "236592c7-f257-499c-9b8c-7b542db3273b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "b'Hello World!'",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "b'Hello World!'",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022171,
        "id": "00d0dcb6-3f16-407c-af24-18eda5f1b77d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " prefix is used to denote the value is a bytes object."
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": " prefix is used to denote the value is a bytes object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022172,
        "id": "2635d086-f54f-47e8-8432-778671e8c7f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To Base64 encode these bytes, we use the "
            ],
            [
              "base64.b64encode()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function:"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "To Base64 encode these bytes, we use the "
          },
          {
            "Text": "base64.b64encode()",
            "AttrFlags": 2
          },
          {
            "Text": " function:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022172,
        "id": "20ef3f0c-1a06-4770-b4e0-4e87e59e611c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import base64\ns = \"Hello World!\"\nb = s.encode(\"UTF-8\")\ne = base64.b64encode(b)\nprint(e)"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "import base64\ns = \"Hello World!\"\nb = s.encode(\"UTF-8\")\ne = base64.b64encode(b)\nprint(e)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022172,
        "id": "376c042c-a443-40fb-bf8c-81b3ddebb497",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "That code would output the following:"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "That code would output the following:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022172,
        "id": "cbc468d7-d702-4e20-a555-1864ca6a0046",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "b'SGVsbG8gV29ybGQh'",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "b'SGVsbG8gV29ybGQh'",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022172,
        "id": "419f7efc-9811-4a43-abe8-f11ed1512b04",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "which is still in the bytes object. To get a string out of these bytes, we can use Pythonâ€™s "
            ],
            [
              "decode()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method with the "
            ],
            [
              "UTF-8",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " encoding:"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "which is still in the bytes object. To get a string out of these bytes, we can use Pythonâ€™s "
          },
          {
            "Text": "decode()",
            "AttrFlags": 2
          },
          {
            "Text": " method with the "
          },
          {
            "Text": "UTF-8",
            "AttrFlags": 2
          },
          {
            "Text": " encoding:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022172,
        "id": "c2875282-39f7-47e4-a6f0-81d6c8bff856",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import base64\ns = \"Hello World!\"\nb = s.encode(\"UTF-8\")\ne = base64.b64encode(b)\ns1 = e.decode(\"UTF-8\")\nprint(s1)"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "import base64\ns = \"Hello World!\"\nb = s.encode(\"UTF-8\")\ne = base64.b64encode(b)\ns1 = e.decode(\"UTF-8\")\nprint(s1)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022172,
        "id": "84c8fbad-93db-4fc6-b45c-56aede411613",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The output would then be:"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "The output would then be:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022172,
        "id": "598db6ca-b7d6-4093-b315-1046196371cc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "SGVsbG8gV29ybGQh",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "SGVsbG8gV29ybGQh",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022172,
        "id": "eb04a183-2b0f-4580-a605-e8794763b04c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If we wanted to encode the string and then decode we could use the "
            ],
            [
              "base64.b64decode()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method:"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "If we wanted to encode the string and then decode we could use the "
          },
          {
            "Text": "base64.b64decode()",
            "AttrFlags": 2
          },
          {
            "Text": " method:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022172,
        "id": "1d738129-a8b2-4075-a72d-24ef05e36bd9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import base64\n# Creating a string\ns = \"Hello World!\"\n# Encoding the string into bytes\nb = s.encode(\"UTF-8\")\n# Base64 Encode the bytes\ne = base64.b64encode(b)\n# Decoding the Base64 bytes to string\ns1 = e.decode(\"UTF-8\")\n# Printing Base64 encoded string\nprint(\"Base64 Encoded:\", s1)\n# Encoding the Base64 encoded string into bytes\nb1 = s1.encode(\"UTF-8\")\n# Decoding the Base64 bytes\nd = base64.b64decode(b1)\n# Decoding the bytes to string\ns2 = d.decode(\"UTF-8\")\nprint(s2)"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "import base64\n# Creating a string\ns = \"Hello World!\"\n# Encoding the string into bytes\nb = s.encode(\"UTF-8\")\n# Base64 Encode the bytes\ne = base64.b64encode(b)\n# Decoding the Base64 bytes to string\ns1 = e.decode(\"UTF-8\")\n# Printing Base64 encoded string\nprint(\"Base64 Encoded:\", s1)\n# Encoding the Base64 encoded string into bytes\nb1 = s1.encode(\"UTF-8\")\n# Decoding the Base64 bytes\nd = base64.b64decode(b1)\n# Decoding the bytes to string\ns2 = d.decode(\"UTF-8\")\nprint(s2)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022173,
        "id": "e776796a-a2fb-44e7-a654-6895aa5166ca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As you may have expected, the output would be the original string:"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "As you may have expected, the output would be the original string:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022173,
        "id": "eb7dd9f7-5ab7-4135-9304-1b9573ca4a82",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Base64 Encoded: SGVsbG8gV29ybGQh\nHello World!"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "Base64 Encoded: SGVsbG8gV29ybGQh\nHello World!",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022844,
        "id": "235dabb0-14a4-4f6b-99c2-1cc8c6aa3b23",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Encoding and Decoding Base32"
            ]
          ]
        },
        "type": "header",
        "version": 16,
        "inline_content": [
          {
            "Text": "Encoding and Decoding Base32"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022841,
        "id": "9cb19d2c-1c87-4a5e-b0e8-19a61be81fdf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The base64 module also includes encoding and decoding functions for Base32. These functions are very similar to the Base64 functions:"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "The base64 module also includes encoding and decoding functions for Base32. These functions are very similar to the Base64 functions:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022843,
        "id": "9f682e33-1b0b-44cb-8f69-4271ea05cad1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import base64\n# Creating a string\ns = \"Hello World!\"\n# Encoding the string into bytes\nb = s.encode(\"UTF-8\")\n# Base32 Encode the bytes\ne = base64.b32encode(b)\n# Decoding the Base32 bytes to string\ns1 = e.decode(\"UTF-8\")\n# Printing Base32 encoded string\nprint(\"Base32 Encoded:\", s1)\n# Encoding the Base32 encoded string into bytes\nb1 = s1.encode(\"UTF-8\")\n# Decoding the Base32 bytes\nd = base64.b32decode(b1)\n# Decoding the bytes to string\ns2 = d.decode(\"UTF-8\")\nprint(s2)"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "import base64\n# Creating a string\ns = \"Hello World!\"\n# Encoding the string into bytes\nb = s.encode(\"UTF-8\")\n# Base32 Encode the bytes\ne = base64.b32encode(b)\n# Decoding the Base32 bytes to string\ns1 = e.decode(\"UTF-8\")\n# Printing Base32 encoded string\nprint(\"Base32 Encoded:\", s1)\n# Encoding the Base32 encoded string into bytes\nb1 = s1.encode(\"UTF-8\")\n# Decoding the Base32 bytes\nd = base64.b32decode(b1)\n# Decoding the bytes to string\ns2 = d.decode(\"UTF-8\")\nprint(s2)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022843,
        "id": "e4a42bce-7fb3-4734-b899-78ca22a478df",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This would produce the following output:"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "This would produce the following output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392022844,
        "id": "557eb7c2-53ff-4291-8b7a-bf7e3bf86ee5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Base32 Encoded: JBSWY3DPEBLW64TMMQQQ====\nHello World!"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "Base32 Encoded: JBSWY3DPEBLW64TMMQQQ====\nHello World!",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392024113,
        "id": "f7558ec0-bd02-4ed8-b1c6-e983b48b89df",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Encoding and Decoding Base16"
            ]
          ]
        },
        "type": "header",
        "version": 16,
        "inline_content": [
          {
            "Text": "Encoding and Decoding Base16"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392024110,
        "id": "eafc5bb7-6625-4533-81d0-09e46c433d0e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The base64 module also includes encoding and decoding functions for Base16. Base 16 is most commonly referred to as "
            ],
            [
              "hexadecimal",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". These functions are very similar to the both the Base64 and Base32 functions:"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "The base64 module also includes encoding and decoding functions for Base16. Base 16 is most commonly referred to as "
          },
          {
            "Text": "hexadecimal",
            "AttrFlags": 1
          },
          {
            "Text": ". These functions are very similar to the both the Base64 and Base32 functions:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392024112,
        "id": "eb233354-87d0-4e8c-90b8-9ed346af646e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import base64\n# Creating a string\ns = \"Hello World!\"\n# Encoding the string into bytes\nb = s.encode(\"UTF-8\")\n# Base16 Encode the bytes\ne = base64.b16encode(b)\n# Decoding the Base16 bytes to string\ns1 = e.decode(\"UTF-8\")\n# Printing Base16 encoded string\nprint(\"Base16 Encoded:\", s1)\n# Encoding the Base16 encoded string into bytes\nb1 = s1.encode(\"UTF-8\")\n# Decoding the Base16 bytes\nd = base64.b16decode(b1)\n# Decoding the bytes to string\ns2 = d.decode(\"UTF-8\")\nprint(s2)"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "import base64\n# Creating a string\ns = \"Hello World!\"\n# Encoding the string into bytes\nb = s.encode(\"UTF-8\")\n# Base16 Encode the bytes\ne = base64.b16encode(b)\n# Decoding the Base16 bytes to string\ns1 = e.decode(\"UTF-8\")\n# Printing Base16 encoded string\nprint(\"Base16 Encoded:\", s1)\n# Encoding the Base16 encoded string into bytes\nb1 = s1.encode(\"UTF-8\")\n# Decoding the Base16 bytes\nd = base64.b16decode(b1)\n# Decoding the bytes to string\ns2 = d.decode(\"UTF-8\")\nprint(s2)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392024113,
        "id": "243be793-4543-432c-bd56-5ccc5e177cd6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This would produce the following output:"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "This would produce the following output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392024113,
        "id": "c04f7d08-d278-461f-be5b-4933aefa766c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Base16 Encoded: 48656C6C6F20576F726C6421\nHello World!3"
            ]
          ]
        },
        "type": "code",
        "version": 5,
        "code": "Base16 Encoded: 48656C6C6F20576F726C6421\nHello World!3",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392024772,
        "id": "d8307775-df43-4fe5-8e21-6c2954090cdc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Encoding and Decoding ASCII85"
            ]
          ]
        },
        "type": "header",
        "version": 16,
        "inline_content": [
          {
            "Text": "Encoding and Decoding ASCII85"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392024771,
        "id": "2e8a2e1f-555a-4f93-8944-d6f154804665",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Adobe created itâ€™s own encoding called "
            ],
            [
              "ASCII85",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " which is similar to Base85, but has its differences. This encoding is used frequently in Adobe PDF files. These functions were released in Python version 3.4. Otherwise, the functions "
            ],
            [
              "base64.a85encode()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "base64.a85encode()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are similar to the previous:"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "Adobe created itâ€™s own encoding called "
          },
          {
            "Text": "ASCII85",
            "AttrFlags": 1
          },
          {
            "Text": " which is similar to Base85, but has its differences. This encoding is used frequently in Adobe PDF files. These functions were released in Python version 3.4. Otherwise, the functions "
          },
          {
            "Text": "base64.a85encode()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "base64.a85encode()",
            "AttrFlags": 2
          },
          {
            "Text": " are similar to the previous:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392024771,
        "id": "985df127-c54a-4483-801e-a6741521542f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import base64\n# Creating a string\ns = \"Hello World!\"\n# Encoding the string into bytes\nb = s.encode(\"UTF-8\")\n# ASCII85 Encode the bytes\ne = base64.a85encode(b)\n# Decoding the ASCII85 bytes to string\ns1 = e.decode(\"UTF-8\")\n# Printing ASCII85 encoded string\nprint(\"ASCII85 Encoded:\", s1)\n# Encoding the ASCII85 encoded string into bytes\nb1 = s1.encode(\"UTF-8\")\n# Decoding the ASCII85 bytes\nd = base64.a85decode(b1)\n# Decoding the bytes to string\ns2 = d.decode(\"UTF-8\")\nprint(s2)"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "import base64\n# Creating a string\ns = \"Hello World!\"\n# Encoding the string into bytes\nb = s.encode(\"UTF-8\")\n# ASCII85 Encode the bytes\ne = base64.a85encode(b)\n# Decoding the ASCII85 bytes to string\ns1 = e.decode(\"UTF-8\")\n# Printing ASCII85 encoded string\nprint(\"ASCII85 Encoded:\", s1)\n# Encoding the ASCII85 encoded string into bytes\nb1 = s1.encode(\"UTF-8\")\n# Decoding the ASCII85 bytes\nd = base64.a85decode(b1)\n# Decoding the bytes to string\ns2 = d.decode(\"UTF-8\")\nprint(s2)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392024772,
        "id": "1ba82c7b-4cfc-4d7b-a044-f30bfbe87957",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This outputs the following:"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "This outputs the following:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392024772,
        "id": "260c281e-2234-485f-b9bf-6a304a66147a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "ASCII85 Encoded: 87cURD]i,\"Ebo80\nHello World!"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "ASCII85 Encoded: 87cURD]i,\"Ebo80\nHello World!",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392026109,
        "id": "37048057-7282-4e91-8e14-6cd71babea73",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Encoding and Decoding Base85"
            ]
          ]
        },
        "type": "header",
        "version": 16,
        "inline_content": [
          {
            "Text": "Encoding and Decoding Base85"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392026106,
        "id": "577021af-25cd-4500-a838-9252c7d6de56",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Just like the Base64, Base32, and Base16 functions, the Base85 encoding and decoding functions are "
            ],
            [
              "base64.b85encode()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "base64.b85decode()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "Just like the Base64, Base32, and Base16 functions, the Base85 encoding and decoding functions are "
          },
          {
            "Text": "base64.b85encode()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "base64.b85decode()",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392026109,
        "id": "e28e9ac8-99e1-44c1-a1c9-b1c4e2eb6f2d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import base64\n# Creating a string\ns = \"Hello World!\"\n# Encoding the string into bytes\nb = s.encode(\"UTF-8\")\n# Base85 Encode the bytes\ne = base64.b85encode(b)\n# Decoding the Base85 bytes to string\ns1 = e.decode(\"UTF-8\")\n# Printing Base85 encoded string\nprint(\"Base85 Encoded:\", s1)\n# Encoding the Base85 encoded string into bytes\nb1 = s1.encode(\"UTF-8\")\n# Decoding the Base85 bytes\nd = base64.b85decode(b1)\n# Decoding the bytes to string\ns2 = d.decode(\"UTF-8\")\nprint(s2)"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "import base64\n# Creating a string\ns = \"Hello World!\"\n# Encoding the string into bytes\nb = s.encode(\"UTF-8\")\n# Base85 Encode the bytes\ne = base64.b85encode(b)\n# Decoding the Base85 bytes to string\ns1 = e.decode(\"UTF-8\")\n# Printing Base85 encoded string\nprint(\"Base85 Encoded:\", s1)\n# Encoding the Base85 encoded string into bytes\nb1 = s1.encode(\"UTF-8\")\n# Decoding the Base85 bytes\nd = base64.b85decode(b1)\n# Decoding the bytes to string\ns2 = d.decode(\"UTF-8\")\nprint(s2)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392026109,
        "id": "775b080a-ccc8-4fd3-b570-2fde7468325c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "which outputs the following:"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "which outputs the following:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392026109,
        "id": "94a994d1-4b54-45a7-8117-69437dfa6742",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550475060000,
        "parent_id": "b7ab1cfb-d43a-4580-afef-57329559b8ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Base85 Encoded: NM\u0026qnZy;B1a%^NF\nHello World!"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "Base85 Encoded: NM\u0026qnZy;B1a%^NF\nHello World!",
        "code_language": "Plain Text"
      }
    ],
    "title": "base64 module",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}