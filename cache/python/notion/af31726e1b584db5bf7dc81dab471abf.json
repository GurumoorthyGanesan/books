{
  "ID": "af31726e-1b58-4db5-bf7d-c81dab471abf",
  "Root": {
    "alive": true,
    "content": [
      "9da8d278-a2e6-4049-85f1-2618d5a4ac06",
      "fea92ac5-a811-4229-90a5-687848d34864",
      "5bdf8bd8-511a-447f-87ae-d49e98ddd646",
      "7522005f-e7d0-43e5-a705-22cfcfc27a76",
      "c8bc6d0e-0f5b-438e-9cc4-cef491038127",
      "42dec2d7-25d5-43e0-ac71-04f06176fd2b",
      "3fa8ca55-6a03-499d-a899-f0b50e2af003",
      "355f9d55-37e3-4b17-b150-64288d9abf17",
      "78b4773e-5576-4970-af4b-5e83d12e62c2",
      "29cf228d-b6ae-423a-9817-82957c72d5b4",
      "88992a66-be9a-42aa-9d3f-c39d94068da1",
      "f5427fdf-0cb7-4b16-a14d-cd0faa27b94d",
      "6346fc9b-0da9-47fa-aef9-c4a453d2540e",
      "135e79f2-cdf9-4a30-8019-a46a116b6dcc",
      "b1aea270-e583-4d3f-8ac3-8eb5f5f2ef17",
      "7fe46e48-380b-46be-a0c7-d9f35659812d",
      "cef43855-cd33-4a9d-9714-bf5bf0f0272a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550347960299,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "af31726e-1b58-4db5-bf7d-c81dab471abf",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550348160000,
    "parent_id": "6b6906c1-a818-41da-b196-40ce5c79d75d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Print statement vs. Print function"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347960295,
        "id": "9da8d278-a2e6-4049-85f1-2618d5a4ac06",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347960295,
        "parent_id": "af31726e-1b58-4db5-bf7d-c81dab471abf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Python 2, "
            ],
            [
              "print",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.python.org/2/library/functions.html#print"
                ]
              ]
            ],
            [
              " is a statement:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Python 2, "
          },
          {
            "Text": "print",
            "AttrFlags": 2,
            "Link": "https://docs.python.org/2/library/functions.html#print"
          },
          {
            "Text": " is a statement:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347960296,
        "id": "fea92ac5-a811-4229-90a5-687848d34864",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550348160000,
        "parent_id": "af31726e-1b58-4db5-bf7d-c81dab471abf",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "print \"Hello World\"\nprint                         # print a newline\nprint \"No newline\",           # add trailing comma to remove newline \nprint \u003e\u003esys.stderr, \"Error\"   # print to stderr\nprint(\"hello\")                # print \"hello\", since (\"hello\") == \"hello\"\nprint()                       # print an empty tuple \"()\"\nprint 1, 2, 3                 # print space-separated arguments: \"1 2 3\"\nprint(1, 2, 3)                # print tuple \"(1, 2, 3)\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "print \"Hello World\"\nprint                         # print a newline\nprint \"No newline\",           # add trailing comma to remove newline \nprint \u003e\u003esys.stderr, \"Error\"   # print to stderr\nprint(\"hello\")                # print \"hello\", since (\"hello\") == \"hello\"\nprint()                       # print an empty tuple \"()\"\nprint 1, 2, 3                 # print space-separated arguments: \"1 2 3\"\nprint(1, 2, 3)                # print tuple \"(1, 2, 3)\"",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347960297,
        "id": "5bdf8bd8-511a-447f-87ae-d49e98ddd646",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347960297,
        "parent_id": "af31726e-1b58-4db5-bf7d-c81dab471abf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Python 3, "
            ],
            [
              "print()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.python.org/3/library/functions.html#print"
                ]
              ]
            ],
            [
              " is a function, with keyword arguments for common uses:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Python 3, "
          },
          {
            "Text": "print()",
            "AttrFlags": 2,
            "Link": "https://docs.python.org/3/library/functions.html#print"
          },
          {
            "Text": " is a function, with keyword arguments for common uses:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347960297,
        "id": "7522005f-e7d0-43e5-a705-22cfcfc27a76",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550348160000,
        "parent_id": "af31726e-1b58-4db5-bf7d-c81dab471abf",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "print \"Hello World\"              # SyntaxError\nprint(\"Hello World\")\nprint()                          # print a newline (must use parentheses)\nprint(\"No newline\", end=\"\")      # end specifies what to append (defaults to newline)\nprint(\"Error\", file=sys.stderr)  # file specifies the output buffer\nprint(\"Comma\", \"separated\", \"output\", sep=\",\")  # sep specifies the separator\nprint(\"A\", \"B\", \"C\", sep=\"\")     # null string for sep: prints as ABC\nprint(\"Flush this\", flush=True)  # flush the output buffer, added in Python 3.3\nprint(1, 2, 3)                   # print space-separated arguments: \"1 2 3\"\nprint((1, 2, 3))                 # print tuple \"(1, 2, 3)\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "print \"Hello World\"              # SyntaxError\nprint(\"Hello World\")\nprint()                          # print a newline (must use parentheses)\nprint(\"No newline\", end=\"\")      # end specifies what to append (defaults to newline)\nprint(\"Error\", file=sys.stderr)  # file specifies the output buffer\nprint(\"Comma\", \"separated\", \"output\", sep=\",\")  # sep specifies the separator\nprint(\"A\", \"B\", \"C\", sep=\"\")     # null string for sep: prints as ABC\nprint(\"Flush this\", flush=True)  # flush the output buffer, added in Python 3.3\nprint(1, 2, 3)                   # print space-separated arguments: \"1 2 3\"\nprint((1, 2, 3))                 # print tuple \"(1, 2, 3)\"",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347960297,
        "id": "c8bc6d0e-0f5b-438e-9cc4-cef491038127",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347960297,
        "parent_id": "af31726e-1b58-4db5-bf7d-c81dab471abf",
        "parent_table": "block",
        "type": "sub_header",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347960297,
        "id": "42dec2d7-25d5-43e0-ac71-04f06176fd2b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347960297,
        "parent_id": "af31726e-1b58-4db5-bf7d-c81dab471abf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The print function has the following parameters:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The print function has the following parameters:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347960297,
        "id": "3fa8ca55-6a03-499d-a899-f0b50e2af003",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550348160000,
        "parent_id": "af31726e-1b58-4db5-bf7d-c81dab471abf",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "print(*objects, sep=' ', end='\\n', file=sys.stdout, flush=False)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "print(*objects, sep=' ', end='\\n', file=sys.stdout, flush=False)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347960297,
        "id": "355f9d55-37e3-4b17-b150-64288d9abf17",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347960297,
        "parent_id": "af31726e-1b58-4db5-bf7d-c81dab471abf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "sep",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is what separates the objects you pass to print. For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "sep",
            "AttrFlags": 2
          },
          {
            "Text": " is what separates the objects you pass to print. For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347960297,
        "id": "78b4773e-5576-4970-af4b-5e83d12e62c2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550348160000,
        "parent_id": "af31726e-1b58-4db5-bf7d-c81dab471abf",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "print('foo', 'bar', sep='~') # out: foo~bar\nprint('foo', 'bar', sep='.') # out: foo.bar"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "print('foo', 'bar', sep='~') # out: foo~bar\nprint('foo', 'bar', sep='.') # out: foo.bar",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347960297,
        "id": "29cf228d-b6ae-423a-9817-82957c72d5b4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347960297,
        "parent_id": "af31726e-1b58-4db5-bf7d-c81dab471abf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "end",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is what the end of the print statement is followed by. For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "end",
            "AttrFlags": 2
          },
          {
            "Text": " is what the end of the print statement is followed by. For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347960297,
        "id": "88992a66-be9a-42aa-9d3f-c39d94068da1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550348160000,
        "parent_id": "af31726e-1b58-4db5-bf7d-c81dab471abf",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "print('foo', 'bar', end='!') # out: foo bar!"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "print('foo', 'bar', end='!') # out: foo bar!",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347960298,
        "id": "f5427fdf-0cb7-4b16-a14d-cd0faa27b94d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347960298,
        "parent_id": "af31726e-1b58-4db5-bf7d-c81dab471abf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Printing again following a non-newline ending print statement "
            ],
            [
              "will",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " print to the same line:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Printing again following a non-newline ending print statement "
          },
          {
            "Text": "will",
            "AttrFlags": 4
          },
          {
            "Text": " print to the same line:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347960298,
        "id": "6346fc9b-0da9-47fa-aef9-c4a453d2540e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550348160000,
        "parent_id": "af31726e-1b58-4db5-bf7d-c81dab471abf",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "print('foo', end='~')\nprint('bar')\n# out: foo~bar"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "print('foo', end='~')\nprint('bar')\n# out: foo~bar",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347960298,
        "id": "135e79f2-cdf9-4a30-8019-a46a116b6dcc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347960298,
        "parent_id": "af31726e-1b58-4db5-bf7d-c81dab471abf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note :",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " For future compatibility, "
            ],
            [
              "print",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.python.org/2/library/functions.html#print"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "function",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " is also available in Python 2.6 onwards; however it cannot be used unless parsing of the "
            ],
            [
              "print",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "statement",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " is disabled with"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note :",
            "AttrFlags": 1
          },
          {
            "Text": " For future compatibility, "
          },
          {
            "Text": "print",
            "AttrFlags": 2,
            "Link": "https://docs.python.org/2/library/functions.html#print"
          },
          {
            "Text": " "
          },
          {
            "Text": "function",
            "AttrFlags": 4
          },
          {
            "Text": " is also available in Python 2.6 onwards; however it cannot be used unless parsing of the "
          },
          {
            "Text": "print",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "statement",
            "AttrFlags": 4
          },
          {
            "Text": " is disabled with"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347960298,
        "id": "b1aea270-e583-4d3f-8ac3-8eb5f5f2ef17",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550348160000,
        "parent_id": "af31726e-1b58-4db5-bf7d-c81dab471abf",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "from __future__ import print_function"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "from __future__ import print_function",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347960298,
        "id": "7fe46e48-380b-46be-a0c7-d9f35659812d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347960298,
        "parent_id": "af31726e-1b58-4db5-bf7d-c81dab471abf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This function has exactly same format as Python 3’s, except that it lacks the "
            ],
            [
              "flush",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " parameter."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This function has exactly same format as Python 3’s, except that it lacks the "
          },
          {
            "Text": "flush",
            "AttrFlags": 2
          },
          {
            "Text": " parameter."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347960299,
        "id": "cef43855-cd33-4a9d-9714-bf5bf0f0272a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347960299,
        "parent_id": "af31726e-1b58-4db5-bf7d-c81dab471abf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "See PEP "
            ],
            [
              "3105",
              [
                [
                  "a",
                  "https://www.python.org/dev/peps/pep-3105/"
                ]
              ]
            ],
            [
              " for rationale."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "See PEP "
          },
          {
            "Text": "3105",
            "Link": "https://www.python.org/dev/peps/pep-3105/"
          },
          {
            "Text": " for rationale."
          }
        ]
      }
    ],
    "title": "Print statement vs. Print function",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}