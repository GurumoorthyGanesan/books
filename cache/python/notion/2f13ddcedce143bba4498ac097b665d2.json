{
  "ID": "2f13ddce-dce1-43bb-a449-8ac097b665d2",
  "Root": {
    "alive": true,
    "content": [
      "7c975a26-e359-4e07-917b-f241f11ce151",
      "446f00d3-c234-49d2-8b0a-28dd9dc175d5",
      "d3da6f5f-5b44-45ab-ba00-410261a10bd9",
      "622de047-500f-425f-9071-6a0fcb33f102",
      "59e3cafb-5808-459c-8c92-0f7dac2a22fd"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550354350417,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "2f13ddce-dce1-43bb-a449-8ac097b665d2",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550354700000,
    "parent_id": "36a317ca-78d0-4ecb-9b15-5ef93e80050a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Common Misconception about asyncio"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354350410,
        "id": "7c975a26-e359-4e07-917b-f241f11ce151",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354350410,
        "parent_id": "2f13ddce-dce1-43bb-a449-8ac097b665d2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "probably "
            ],
            [
              "the",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " most common misconception about "
            ],
            [
              "asnycio",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is that it lets you run any task in parallel - sidestepping the GIL (global interpreter lock) and therefore execute blocking jobs in parallel (on separate threads). it does "
            ],
            [
              "not",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "!"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "probably "
          },
          {
            "Text": "the",
            "AttrFlags": 4
          },
          {
            "Text": " most common misconception about "
          },
          {
            "Text": "asnycio",
            "AttrFlags": 2
          },
          {
            "Text": " is that it lets you run any task in parallel - sidestepping the GIL (global interpreter lock) and therefore execute blocking jobs in parallel (on separate threads). it does "
          },
          {
            "Text": "not",
            "AttrFlags": 1
          },
          {
            "Text": "!"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354350413,
        "id": "446f00d3-c234-49d2-8b0a-28dd9dc175d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354350413,
        "parent_id": "2f13ddce-dce1-43bb-a449-8ac097b665d2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "asyncio",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (and libraries that are built to collaborate with "
            ],
            [
              "asyncio",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") build on coroutines: functions that (collaboratively) yield the control flow back to the calling function. note "
            ],
            [
              "asyncio.sleep",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the examples above. this is an example of a non-blocking coroutine that waits ‘in the background’ and gives the control flow back to the calling function (when called with "
            ],
            [
              "await",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "). "
            ],
            [
              "time.sleep",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is an example of a blocking function. the execution flow of the program will just stop there and only return after "
            ],
            [
              "time.sleep",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has finished."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "asyncio",
            "AttrFlags": 2
          },
          {
            "Text": " (and libraries that are built to collaborate with "
          },
          {
            "Text": "asyncio",
            "AttrFlags": 2
          },
          {
            "Text": ") build on coroutines: functions that (collaboratively) yield the control flow back to the calling function. note "
          },
          {
            "Text": "asyncio.sleep",
            "AttrFlags": 2
          },
          {
            "Text": " in the examples above. this is an example of a non-blocking coroutine that waits ‘in the background’ and gives the control flow back to the calling function (when called with "
          },
          {
            "Text": "await",
            "AttrFlags": 2
          },
          {
            "Text": "). "
          },
          {
            "Text": "time.sleep",
            "AttrFlags": 2
          },
          {
            "Text": " is an example of a blocking function. the execution flow of the program will just stop there and only return after "
          },
          {
            "Text": "time.sleep",
            "AttrFlags": 2
          },
          {
            "Text": " has finished."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354350415,
        "id": "d3da6f5f-5b44-45ab-ba00-410261a10bd9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354350415,
        "parent_id": "2f13ddce-dce1-43bb-a449-8ac097b665d2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "a real-live example is the "
            ],
            [
              "requests",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://docs.python-requests.org/en/master/"
                ]
              ]
            ],
            [
              " library which consists (for the time being) on blocking functions only. there is no concurrency if you call any of its functions within "
            ],
            [
              "asyncio",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "aiohttp",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://aiohttp.readthedocs.io/en/stable/"
                ]
              ]
            ],
            [
              " on the other hand was built with "
            ],
            [
              "asyncio",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in mind. its coroutines will run concurrently."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "a real-live example is the "
          },
          {
            "Text": "requests",
            "AttrFlags": 2,
            "Link": "http://docs.python-requests.org/en/master/"
          },
          {
            "Text": " library which consists (for the time being) on blocking functions only. there is no concurrency if you call any of its functions within "
          },
          {
            "Text": "asyncio",
            "AttrFlags": 2
          },
          {
            "Text": ". "
          },
          {
            "Text": "aiohttp",
            "AttrFlags": 2,
            "Link": "https://aiohttp.readthedocs.io/en/stable/"
          },
          {
            "Text": " on the other hand was built with "
          },
          {
            "Text": "asyncio",
            "AttrFlags": 2
          },
          {
            "Text": " in mind. its coroutines will run concurrently."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354350417,
        "id": "622de047-500f-425f-9071-6a0fcb33f102",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354350417,
        "parent_id": "2f13ddce-dce1-43bb-a449-8ac097b665d2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "if you have long-running CPU-bound tasks you would like to run in parallel "
            ],
            [
              "asyncio",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is "
            ],
            [
              "not",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " for you. for that you need "
            ],
            [
              "threads",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.python.org/3/library/threading.html?highlight=threading#module-threading"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "multiprocessing",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.python.org/3/library/multiprocessing.html?#module-multiprocessing"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "if you have long-running CPU-bound tasks you would like to run in parallel "
          },
          {
            "Text": "asyncio",
            "AttrFlags": 2
          },
          {
            "Text": " is "
          },
          {
            "Text": "not",
            "AttrFlags": 1
          },
          {
            "Text": " for you. for that you need "
          },
          {
            "Text": "threads",
            "AttrFlags": 2,
            "Link": "https://docs.python.org/3/library/threading.html?highlight=threading#module-threading"
          },
          {
            "Text": " or "
          },
          {
            "Text": "multiprocessing",
            "AttrFlags": 2,
            "Link": "https://docs.python.org/3/library/multiprocessing.html?#module-multiprocessing"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354350417,
        "id": "59e3cafb-5808-459c-8c92-0f7dac2a22fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354350417,
        "parent_id": "2f13ddce-dce1-43bb-a449-8ac097b665d2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "if you have IO-bound jobs running, you "
            ],
            [
              "may",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " run them concurrently using "
            ],
            [
              "asyncio",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "if you have IO-bound jobs running, you "
          },
          {
            "Text": "may",
            "AttrFlags": 4
          },
          {
            "Text": " run them concurrently using "
          },
          {
            "Text": "asyncio",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Common Misconception about asyncio",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}