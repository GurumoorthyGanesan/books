{
  "ID": "63f2e38a-a842-4ea6-9b1c-465603fad808",
  "Root": {
    "alive": true,
    "content": [
      "307bdd4d-53ef-46f1-8905-99970a137607",
      "80340ba2-87ba-4a50-ba23-956955fe15db",
      "a2d99672-2cc6-4123-9d91-40d2c8cc1c70",
      "d8fd179b-47a7-4063-8e33-282141a74cf8",
      "a6ae2b67-6afd-4e34-adf5-a5784570d964",
      "4ad80e84-1bb8-4630-b2f5-86c9ac2ef0f8",
      "2ffcaa09-44ae-4bce-83bf-6f718bc9ba6f",
      "f42e38a2-4977-4e7d-bb6b-264bb6186b66",
      "d986ab8e-7487-4372-a496-958b44db9fcb"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550303364865,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "63f2e38a-a842-4ea6-9b1c-465603fad808",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550303520000,
    "parent_id": "5101a914-c687-4402-85e8-f60ea14e09d2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Functions skip class scope when looking up names"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303364863,
        "id": "307bdd4d-53ef-46f1-8905-99970a137607",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303364863,
        "parent_id": "63f2e38a-a842-4ea6-9b1c-465603fad808",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Classes have a local scope during definition, but functions inside the class do not use that scope when looking up names. Because lambdas are functions, and comprehensions are implemented using function scope, this can lead to some surprising behavior."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Classes have a local scope during definition, but functions inside the class do not use that scope when looking up names. Because lambdas are functions, and comprehensions are implemented using function scope, this can lead to some surprising behavior."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303364863,
        "id": "80340ba2-87ba-4a50-ba23-956955fe15db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303520000,
        "parent_id": "63f2e38a-a842-4ea6-9b1c-465603fad808",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "a = 'global'\n\nclass Fred:\n    a = 'class'  # class scope\n    b = (a for i in range(10))  # function scope\n    c = [a for i in range(10)]  # function scope\n    d = a  # class scope\n    e = lambda: a  # function scope\n    f = lambda a=a: a  # default argument uses class scope\n    \n    @staticmethod  # or @classmethod, or regular instance method\n    def g():  # function scope\n        return a\n\nprint(Fred.a)  # class\nprint(next(Fred.b))  # global\nprint(Fred.c[0])  # class in Python 2, global in Python 3\nprint(Fred.d)  # class\nprint(Fred.e())  # global\nprint(Fred.f())  # class\nprint(Fred.g()) # global"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "a = 'global'\n\nclass Fred:\n    a = 'class'  # class scope\n    b = (a for i in range(10))  # function scope\n    c = [a for i in range(10)]  # function scope\n    d = a  # class scope\n    e = lambda: a  # function scope\n    f = lambda a=a: a  # default argument uses class scope\n    \n    @staticmethod  # or @classmethod, or regular instance method\n    def g():  # function scope\n        return a\n\nprint(Fred.a)  # class\nprint(next(Fred.b))  # global\nprint(Fred.c[0])  # class in Python 2, global in Python 3\nprint(Fred.d)  # class\nprint(Fred.e())  # global\nprint(Fred.f())  # class\nprint(Fred.g()) # global",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303364863,
        "id": "a2d99672-2cc6-4123-9d91-40d2c8cc1c70",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303364863,
        "parent_id": "63f2e38a-a842-4ea6-9b1c-465603fad808",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Users unfamiliar with how this scope works might expect "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "c",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and "
            ],
            [
              "e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to print "
            ],
            [
              "class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Users unfamiliar with how this scope works might expect "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "c",
            "AttrFlags": 2
          },
          {
            "Text": ", and "
          },
          {
            "Text": "e",
            "AttrFlags": 2
          },
          {
            "Text": " to print "
          },
          {
            "Text": "class",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303364864,
        "id": "d8fd179b-47a7-4063-8e33-282141a74cf8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303364864,
        "parent_id": "63f2e38a-a842-4ea6-9b1c-465603fad808",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "From "
            ],
            [
              "PEP 227",
              [
                [
                  "a",
                  "http://www.python.org/dev/peps/pep-0227/"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "From "
          },
          {
            "Text": "PEP 227",
            "Link": "http://www.python.org/dev/peps/pep-0227/"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303364864,
        "id": "a6ae2b67-6afd-4e34-adf5-a5784570d964",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303364864,
        "parent_id": "63f2e38a-a842-4ea6-9b1c-465603fad808",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Names in class scope are not accessible. Names are resolved in the innermost enclosing function scope. If a class definition occurs in a chain of nested scopes, the resolution process skips class definitions."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Names in class scope are not accessible. Names are resolved in the innermost enclosing function scope. If a class definition occurs in a chain of nested scopes, the resolution process skips class definitions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303364865,
        "id": "4ad80e84-1bb8-4630-b2f5-86c9ac2ef0f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303364865,
        "parent_id": "63f2e38a-a842-4ea6-9b1c-465603fad808",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "From Python’s documentation on "
            ],
            [
              "naming and binding",
              [
                [
                  "a",
                  "http://docs.python.org/3/reference/executionmodel.html#naming"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "From Python’s documentation on "
          },
          {
            "Text": "naming and binding",
            "Link": "http://docs.python.org/3/reference/executionmodel.html#naming"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303364865,
        "id": "2ffcaa09-44ae-4bce-83bf-6f718bc9ba6f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303364865,
        "parent_id": "63f2e38a-a842-4ea6-9b1c-465603fad808",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The scope of names defined in a class block is limited to the class block; it does not extend to the code blocks of methods – this includes comprehensions and generator expressions since they are implemented using a function scope. This means that the following will fail:"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "The scope of names defined in a class block is limited to the class block; it does not extend to the code blocks of methods – this includes comprehensions and generator expressions since they are implemented using a function scope. This means that the following will fail:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303364865,
        "id": "f42e38a2-4977-4e7d-bb6b-264bb6186b66",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303520000,
        "parent_id": "63f2e38a-a842-4ea6-9b1c-465603fad808",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "class A:\n    a = 42\n    b = list(a + i for i in range(10))"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "class A:\n    a = 42\n    b = list(a + i for i in range(10))",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303364865,
        "id": "d986ab8e-7487-4372-a496-958b44db9fcb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303364865,
        "parent_id": "63f2e38a-a842-4ea6-9b1c-465603fad808",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example uses references from "
            ],
            [
              "this answer",
              [
                [
                  "a",
                  "http://stackoverflow.com/questions/13905741/accessing-class-variables-from-a-list-comprehension-in-the-class-definition/13913933#13913933"
                ]
              ]
            ],
            [
              " by Martijn Pieters, which contains more in depth analysis of this behavior."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example uses references from "
          },
          {
            "Text": "this answer",
            "Link": "http://stackoverflow.com/questions/13905741/accessing-class-variables-from-a-list-comprehension-in-the-class-definition/13913933#13913933"
          },
          {
            "Text": " by Martijn Pieters, which contains more in depth analysis of this behavior."
          }
        ]
      }
    ],
    "title": "Functions skip class scope when looking up names",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}