{
  "ID": "c09a3b37-c764-449b-87cb-f580d91ec761",
  "Root": {
    "alive": true,
    "content": [
      "f90d9abe-62c0-4044-8b76-b5a8656e3254",
      "87b06e03-b687-4f5b-8b41-27d122daa81c",
      "3675ff07-e106-4b3f-ad10-3067d4a659fe",
      "31f55947-7c6a-42c6-814c-a8d46554f572",
      "b230fcce-ff53-4c4f-bbf9-a63fd4201400",
      "e2245856-84eb-49a2-aaec-3fa4c3b3f10d",
      "e935f28d-9e04-4cae-869f-ef711dcb4a9a",
      "cde2c40e-e55a-4732-ad78-771616ecef30",
      "5f161a49-0c7a-42fd-b6fb-0d99cca1e010",
      "c7410fc8-ee2d-4967-8f0c-e6e97a792c14",
      "65ca44db-f40f-4c7b-a358-ca210f7094d0",
      "1de986e5-7400-4ad3-9cb3-d45a69c134b2",
      "65574425-0fa8-41a0-920d-2bc057c6fcf3",
      "57eedc8e-8c78-4e98-85bc-294fb907415e",
      "62098dbf-4f19-49bb-a867-8c3ef151b7c7",
      "b8b481ed-885e-470d-b64c-82b4a60975ce",
      "221978be-9a51-4675-9b76-445c75295b95",
      "4d117748-50f8-4369-99fb-206b3b49a1cc",
      "e99e23aa-78cc-4bf1-9e0f-442b06ee8fee",
      "351a26e1-b145-4297-9cd1-95cc4a1cd638",
      "6c8bb48b-09b1-400a-8aa0-8690efde4390",
      "48664dd0-a94e-4103-96be-bd168fad5bc7"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550388867017,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c09a3b37-c764-449b-87cb-f580d91ec761",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550468340000,
    "parent_id": "c8a5f087-4aec-4ab9-ae1b-32be0e8f2c03",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "The Python Debugger Step-through Debugging with pdb "
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867014,
        "id": "f90d9abe-62c0-4044-8b76-b5a8656e3254",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867014,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "Python Standard Library",
              [
                [
                  "a",
                  "https://docs.python.org/2/library/"
                ]
              ]
            ],
            [
              " includes an interactive debugging library called "
            ],
            [
              "pdb",
              [
                [
                  "i"
                ],
                [
                  "a",
                  "https://docs.python.org/2/library/pdb.html"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "pdb",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " has extensive capabilities, the most commonly used being the ability to ‘step-through’ a program."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "Python Standard Library",
            "Link": "https://docs.python.org/2/library/"
          },
          {
            "Text": " includes an interactive debugging library called "
          },
          {
            "Text": "pdb",
            "AttrFlags": 4,
            "Link": "https://docs.python.org/2/library/pdb.html"
          },
          {
            "Text": ". "
          },
          {
            "Text": "pdb",
            "AttrFlags": 4
          },
          {
            "Text": " has extensive capabilities, the most commonly used being the ability to ‘step-through’ a program."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867015,
        "id": "87b06e03-b687-4f5b-8b41-27d122daa81c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867015,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To immediately enter into step-through debugging use:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To immediately enter into step-through debugging use:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867015,
        "id": "3675ff07-e106-4b3f-ad10-3067d4a659fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867015,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "python -m pdb \u003cmy_file.py\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "python -m pdb \u003cmy_file.py\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867015,
        "id": "31f55947-7c6a-42c6-814c-a8d46554f572",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867015,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This will start the debugger at the first line of the program."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This will start the debugger at the first line of the program."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867015,
        "id": "b230fcce-ff53-4c4f-bbf9-a63fd4201400",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867015,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Usually you will want to target a specific section of the code for debugging. To do this we import the pdb library and use "
            ],
            [
              "set_trace()",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " to interrupt the flow of this troubled example code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Usually you will want to target a specific section of the code for debugging. To do this we import the pdb library and use "
          },
          {
            "Text": "set_trace()",
            "AttrFlags": 4
          },
          {
            "Text": " to interrupt the flow of this troubled example code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867015,
        "id": "e2245856-84eb-49a2-aaec-3fa4c3b3f10d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867015,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import pdb\n\ndef divide(a, b):\n    pdb.set_trace()\n    return a/b \n    # What's wrong with this? Hint: 2 != 3\n\nprint divide(1, 2)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import pdb\n\ndef divide(a, b):\n    pdb.set_trace()\n    return a/b \n    # What's wrong with this? Hint: 2 != 3\n\nprint divide(1, 2)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867015,
        "id": "e935f28d-9e04-4cae-869f-ef711dcb4a9a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867015,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Running this program will launch the interactive debugger."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Running this program will launch the interactive debugger."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867016,
        "id": "cde2c40e-e55a-4732-ad78-771616ecef30",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867016,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "python foo.py \n\u003e ~/scratch/foo.py(5)divide()\n-\u003e return a/b\n(Pdb)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "python foo.py \n\u003e ~/scratch/foo.py(5)divide()\n-\u003e return a/b\n(Pdb)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867016,
        "id": "5f161a49-0c7a-42fd-b6fb-0d99cca1e010",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867016,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Often this command is used on one line so it can be commented out with a single # character"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Often this command is used on one line so it can be commented out with a single # character"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867016,
        "id": "c7410fc8-ee2d-4967-8f0c-e6e97a792c14",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867016,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import pdf; pdb.set_trace()"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import pdf; pdb.set_trace()",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867016,
        "id": "65ca44db-f40f-4c7b-a358-ca210f7094d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867016,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "At the "
            ],
            [
              "(Pdb)",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " prompt commands can be entered. These commands can be debugger commands or python. To print variables we can use "
            ],
            [
              "p",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " from the debugger, or python’s "
            ],
            [
              "print",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "At the "
          },
          {
            "Text": "(Pdb)",
            "AttrFlags": 4
          },
          {
            "Text": " prompt commands can be entered. These commands can be debugger commands or python. To print variables we can use "
          },
          {
            "Text": "p",
            "AttrFlags": 4
          },
          {
            "Text": " from the debugger, or python’s "
          },
          {
            "Text": "print",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867016,
        "id": "1de986e5-7400-4ad3-9cb3-d45a69c134b2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867016,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "(Pdb) p a\n1\n(Pdb) print a\n1"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "(Pdb) p a\n1\n(Pdb) print a\n1",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867016,
        "id": "65574425-0fa8-41a0-920d-2bc057c6fcf3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867016,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To see list of all local variables use"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To see list of all local variables use"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867016,
        "id": "57eedc8e-8c78-4e98-85bc-294fb907415e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867016,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "locals"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "locals",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867016,
        "id": "62098dbf-4f19-49bb-a867-8c3ef151b7c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867016,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "build-in function"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "build-in function"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867016,
        "id": "b8b481ed-885e-470d-b64c-82b4a60975ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867016,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These are good debugger commands to know:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These are good debugger commands to know:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867017,
        "id": "221978be-9a51-4675-9b76-445c75295b95",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867017,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "b \u003cn\u003e | \u003cf\u003e: set breakpoint at line *n* or function named *f*.\n# b 3\n# b divide\nb: show all breakpoints.\nc: continue until the next breakpoint.\ns: step through this line (will enter a function).\nn: step over this line (jumps over a function).\nr: continue until the current function returns.\nl: list a window of code around this line.\np \u003cvar\u003e: print variable named *var*.\n# p x\nq: quit debugger.\nbt: print the traceback of the current execution call stack\nup: move your scope up the function call stack to the caller of the current function\ndown: Move your scope back down the function call stack one level\nstep: Run the program until the next line of execution in the program, then return control back to the debugger\nnext: run the program until the next line of execution in the current function, then return control back to the debugger\nreturn: run the program until the current function returns, then return control back to the debugger\ncontinue: continue running the program until the next breakpoint (or set_trace si called again)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "b \u003cn\u003e | \u003cf\u003e: set breakpoint at line *n* or function named *f*.\n# b 3\n# b divide\nb: show all breakpoints.\nc: continue until the next breakpoint.\ns: step through this line (will enter a function).\nn: step over this line (jumps over a function).\nr: continue until the current function returns.\nl: list a window of code around this line.\np \u003cvar\u003e: print variable named *var*.\n# p x\nq: quit debugger.\nbt: print the traceback of the current execution call stack\nup: move your scope up the function call stack to the caller of the current function\ndown: Move your scope back down the function call stack one level\nstep: Run the program until the next line of execution in the program, then return control back to the debugger\nnext: run the program until the next line of execution in the current function, then return control back to the debugger\nreturn: run the program until the current function returns, then return control back to the debugger\ncontinue: continue running the program until the next breakpoint (or set_trace si called again)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867017,
        "id": "4d117748-50f8-4369-99fb-206b3b49a1cc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867017,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The debugger can also evaluate python interactively:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The debugger can also evaluate python interactively:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867017,
        "id": "e99e23aa-78cc-4bf1-9e0f-442b06ee8fee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867017,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "-\u003e return a/b\n(Pdb) p a+b\n3\n(Pdb) [ str(m) for m in [a,b]] \n['1', '2']\n(Pdb) [ d for d in xrange(5)]\n[0, 1, 2, 3, 4]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "-\u003e return a/b\n(Pdb) p a+b\n3\n(Pdb) [ str(m) for m in [a,b]] \n['1', '2']\n(Pdb) [ d for d in xrange(5)]\n[0, 1, 2, 3, 4]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867017,
        "id": "351a26e1-b145-4297-9cd1-95cc4a1cd638",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867017,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867017,
        "id": "6c8bb48b-09b1-400a-8aa0-8690efde4390",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867017,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If any of your variable names coincide with the debugger commands, use an exclamation mark ‘"
            ],
            [
              "!",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "’ before the var to explicitly refer to the variable and not the debugger command. For example, often it might so happen that you use the variable name ‘"
            ],
            [
              "c",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "’ for a counter, and you might want to print it while in the debugger. a simple ‘"
            ],
            [
              "c",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "’ command would continue execution till the next breakpoint. Instead use ‘"
            ],
            [
              "!c",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "’ to print the value of the variable as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If any of your variable names coincide with the debugger commands, use an exclamation mark ‘"
          },
          {
            "Text": "!",
            "AttrFlags": 1
          },
          {
            "Text": "’ before the var to explicitly refer to the variable and not the debugger command. For example, often it might so happen that you use the variable name ‘"
          },
          {
            "Text": "c",
            "AttrFlags": 1
          },
          {
            "Text": "’ for a counter, and you might want to print it while in the debugger. a simple ‘"
          },
          {
            "Text": "c",
            "AttrFlags": 1
          },
          {
            "Text": "’ command would continue execution till the next breakpoint. Instead use ‘"
          },
          {
            "Text": "!c",
            "AttrFlags": 1
          },
          {
            "Text": "’ to print the value of the variable as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388867017,
        "id": "48664dd0-a94e-4103-96be-bd168fad5bc7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388867017,
        "parent_id": "c09a3b37-c764-449b-87cb-f580d91ec761",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "(Pdb) !c\n4"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "(Pdb) !c\n4",
        "code_language": "Plain Text"
      }
    ],
    "title": "The Python Debugger Step-through Debugging with pdb ",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}