{
  "ID": "b2d34bf9-1097-43ab-b99b-20116391149b",
  "Root": {
    "alive": true,
    "content": [
      "fcc53d23-a4de-4b0a-bc48-694ad3b93142",
      "d60d2de6-a7a8-4862-8ef7-c2e83c660b14",
      "a181da94-5839-4ab6-b7d9-937ada2b54e6",
      "dbeedf48-807b-4550-b4b7-d5053d405882",
      "751ba2c7-3c31-4a3f-bd68-f57ace30924c",
      "e7cf361e-d087-445e-8d02-4ce3179565fd",
      "8c4c91b8-7ac5-46c9-be11-2080daa8f2af",
      "f9abbbee-f76f-40f4-bc2e-2065179aaa30",
      "e2a88935-b33a-4652-9734-497108cda2d0",
      "baf72948-7772-4e75-bb3c-ceace7d36fe9",
      "29f372e4-b88e-4922-894f-0335752c1275",
      "50d95d45-4ec1-448e-aea9-ef21338dd0ce",
      "28d86487-621a-48f1-8d5a-0087d168bf11",
      "25245a36-28e3-469d-b9b1-ba1a63d9e124",
      "6526363b-7aff-4202-b538-1ef55594a3f0",
      "d4ea6d3e-4815-4063-9718-d68660999eb3",
      "49b8a1c4-3a1c-4fa2-b3c4-7f729fe3bb0f",
      "c3a923cb-23be-4cdc-855b-7edfc2ed4c77",
      "03ff185a-5b21-4abf-810e-f2ca9fe2c420",
      "e88803af-fce3-412e-a78a-21de4c841eeb",
      "58cace79-48e9-4dca-ba3b-54a4699fdc98",
      "a8d34ac9-3665-4675-85cc-b9319fc24aed",
      "2ded91ac-69d6-4e1d-81af-e25be5ace592"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550227908255,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "b2d34bf9-1097-43ab-b99b-20116391149b",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551693803878,
    "parent_id": "d0fd9252-d46d-4ec6-9727-60b1d9766b8a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Block Indentation"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908245,
        "id": "fcc53d23-a4de-4b0a-bc48-694ad3b93142",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550227908245,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Python uses indentation to define control and loop constructs. This contributes to Python’s readability, however, it requires the programmer to pay close attention to the use of whitespace. Thus, editor miscalibration could result in code that behaves in unexpected ways."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Python uses indentation to define control and loop constructs. This contributes to Python’s readability, however, it requires the programmer to pay close attention to the use of whitespace. Thus, editor miscalibration could result in code that behaves in unexpected ways."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908249,
        "id": "d60d2de6-a7a8-4862-8ef7-c2e83c660b14",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550227908249,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Python uses the colon symbol ("
            ],
            [
              ":",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") and indentation for showing where blocks of code begin and end (If you come from another language, do not confuse this with somehow being related to the "
            ],
            [
              "ternary operator",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/%3F:"
                ]
              ]
            ],
            [
              "). That is, blocks in Python, such as functions, loops, "
            ],
            [
              "if",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " clauses and other constructs, have no ending identifiers. All blocks start with a colon and then contain the indented lines below it."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Python uses the colon symbol ("
          },
          {
            "Text": ":",
            "AttrFlags": 2
          },
          {
            "Text": ") and indentation for showing where blocks of code begin and end (If you come from another language, do not confuse this with somehow being related to the "
          },
          {
            "Text": "ternary operator",
            "Link": "https://en.wikipedia.org/wiki/%3F:"
          },
          {
            "Text": "). That is, blocks in Python, such as functions, loops, "
          },
          {
            "Text": "if",
            "AttrFlags": 2
          },
          {
            "Text": " clauses and other constructs, have no ending identifiers. All blocks start with a colon and then contain the indented lines below it."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908249,
        "id": "a181da94-5839-4ab6-b7d9-937ada2b54e6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550227908249,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908249,
        "id": "dbeedf48-807b-4550-b4b7-d5053d405882",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550228280000,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def my_function():    # This is a function definition. Note the colon (:)\n    a = 2             # This line belongs to the function because it's indented\n    return a          # This line also belongs to the same function\nprint(my_function())  # This line is OUTSIDE the function block"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def my_function():    # This is a function definition. Note the colon (:)\n    a = 2             # This line belongs to the function because it's indented\n    return a          # This line also belongs to the same function\nprint(my_function())  # This line is OUTSIDE the function block",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908250,
        "id": "751ba2c7-3c31-4a3f-bd68-f57ace30924c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550227908250,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "or"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "or"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908250,
        "id": "e7cf361e-d087-445e-8d02-4ce3179565fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550228280000,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "if a \u003e b:             # If block starts here\n    print(a)          # This is part of the if block\nelse:                 # else must be at the same level as if\n    print(b)          # This line is part of the else block"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "if a \u003e b:             # If block starts here\n    print(a)          # This is part of the if block\nelse:                 # else must be at the same level as if\n    print(b)          # This line is part of the else block",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908250,
        "id": "8c4c91b8-7ac5-46c9-be11-2080daa8f2af",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550227908250,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Blocks that contain exactly one single-line statement may be put on the same line, though this form is generally not considered good style:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Blocks that contain exactly one single-line statement may be put on the same line, though this form is generally not considered good style:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908250,
        "id": "f9abbbee-f76f-40f4-bc2e-2065179aaa30",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550228280000,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "if a \u003e b: print(a)\nelse: print(b)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "if a \u003e b: print(a)\nelse: print(b)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908250,
        "id": "e2a88935-b33a-4652-9734-497108cda2d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550227908250,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Attempting to do this with more than a single statement will "
            ],
            [
              "not",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " work:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Attempting to do this with more than a single statement will "
          },
          {
            "Text": "not",
            "AttrFlags": 4
          },
          {
            "Text": " work:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908250,
        "id": "baf72948-7772-4e75-bb3c-ceace7d36fe9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550228280000,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "if x \u003e y: y = x\n    print(y) # IndentationError: unexpected indent\n\nif x \u003e y: while y != z: y -= 1  # SyntaxError: invalid syntax"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "if x \u003e y: y = x\n    print(y) # IndentationError: unexpected indent\n\nif x \u003e y: while y != z: y -= 1  # SyntaxError: invalid syntax",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908250,
        "id": "29f372e4-b88e-4922-894f-0335752c1275",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550227908250,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An empty block causes an "
            ],
            [
              "IndentationError",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Use "
            ],
            [
              "pass",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (a command that does nothing) when you have a block with no content:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An empty block causes an "
          },
          {
            "Text": "IndentationError",
            "AttrFlags": 2
          },
          {
            "Text": ". Use "
          },
          {
            "Text": "pass",
            "AttrFlags": 2
          },
          {
            "Text": " (a command that does nothing) when you have a block with no content:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908250,
        "id": "50d95d45-4ec1-448e-aea9-ef21338dd0ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550228280000,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def will_be_implemented_later():\n    pass"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def will_be_implemented_later():\n    pass",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908251,
        "id": "28d86487-621a-48f1-8d5a-0087d168bf11",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550227908251,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Spaces vs. Tabs"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Spaces vs. Tabs"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908251,
        "id": "25245a36-28e3-469d-b9b1-ba1a63d9e124",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550227908251,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In short: "
            ],
            [
              "always",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " use 4 spaces for indentation."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In short: "
          },
          {
            "Text": "always",
            "AttrFlags": 1
          },
          {
            "Text": " use 4 spaces for indentation."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908251,
        "id": "6526363b-7aff-4202-b538-1ef55594a3f0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550227908251,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using tabs exclusively is possible but "
            ],
            [
              "PEP 8",
              [
                [
                  "a",
                  "https://www.python.org/dev/peps/pep-0008/#tabs-or-spaces"
                ]
              ]
            ],
            [
              ", the style guide for Python code, states that spaces are preferred."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using tabs exclusively is possible but "
          },
          {
            "Text": "PEP 8",
            "Link": "https://www.python.org/dev/peps/pep-0008/#tabs-or-spaces"
          },
          {
            "Text": ", the style guide for Python code, states that spaces are preferred."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908251,
        "id": "d4ea6d3e-4815-4063-9718-d68660999eb3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550227908251,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Python 3 disallows mixing the use of tabs and spaces for indentation. In such case a compile-time error is generated: "
            ],
            [
              "Inconsistent use of tabs and spaces in indentation",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and the program will not run."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Python 3 disallows mixing the use of tabs and spaces for indentation. In such case a compile-time error is generated: "
          },
          {
            "Text": "Inconsistent use of tabs and spaces in indentation",
            "AttrFlags": 2
          },
          {
            "Text": " and the program will not run."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908253,
        "id": "49b8a1c4-3a1c-4fa2-b3c4-7f729fe3bb0f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550227908253,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Python 2 allows mixing tabs and spaces in indentation; this is strongly discouraged. The tab character completes the previous indentation to be a "
            ],
            [
              "multiple of ",
              [
                [
                  "a",
                  "https://docs.python.org/2/reference/lexical_analysis.html#indentation"
                ]
              ]
            ],
            [
              "8",
              [
                [
                  "b"
                ],
                [
                  "a",
                  "https://docs.python.org/2/reference/lexical_analysis.html#indentation"
                ]
              ]
            ],
            [
              " spaces",
              [
                [
                  "a",
                  "https://docs.python.org/2/reference/lexical_analysis.html#indentation"
                ]
              ]
            ],
            [
              ". Since it is common that editors are configured to show tabs as multiple of "
            ],
            [
              "4",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " spaces, this can cause subtle bugs."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Python 2 allows mixing tabs and spaces in indentation; this is strongly discouraged. The tab character completes the previous indentation to be a "
          },
          {
            "Text": "multiple of ",
            "Link": "https://docs.python.org/2/reference/lexical_analysis.html#indentation"
          },
          {
            "Text": "8",
            "AttrFlags": 1,
            "Link": "https://docs.python.org/2/reference/lexical_analysis.html#indentation"
          },
          {
            "Text": " spaces",
            "Link": "https://docs.python.org/2/reference/lexical_analysis.html#indentation"
          },
          {
            "Text": ". Since it is common that editors are configured to show tabs as multiple of "
          },
          {
            "Text": "4",
            "AttrFlags": 1
          },
          {
            "Text": " spaces, this can cause subtle bugs."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908253,
        "id": "c3a923cb-23be-4cdc-855b-7edfc2ed4c77",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550227908253,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Citing "
            ],
            [
              "PEP 8",
              [
                [
                  "a",
                  "https://www.python.org/dev/peps/pep-0008/#tabs-or-spaces"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Citing "
          },
          {
            "Text": "PEP 8",
            "Link": "https://www.python.org/dev/peps/pep-0008/#tabs-or-spaces"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908253,
        "id": "03ff185a-5b21-4abf-810e-f2ca9fe2c420",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550227908253,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When invoking the Python 2 command line interpreter with the -t option, it issues warnings about code that illegally mixes tabs and spaces. When using -tt these warnings become errors. These options are highly recommended!"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "When invoking the Python 2 command line interpreter with the -t option, it issues warnings about code that illegally mixes tabs and spaces. When using -tt these warnings become errors. These options are highly recommended!"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908253,
        "id": "e88803af-fce3-412e-a78a-21de4c841eeb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550227908253,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Many editors have “tabs to spaces” configuration. When configuring the editor, one should differentiate between the tab "
            ],
            [
              "character",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " (‘\\t’) and the Tab key."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Many editors have “tabs to spaces” configuration. When configuring the editor, one should differentiate between the tab "
          },
          {
            "Text": "character",
            "AttrFlags": 4
          },
          {
            "Text": " (‘\\t’) and the Tab key."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908254,
        "id": "58cace79-48e9-4dca-ba3b-54a4699fdc98",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550227908254,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The tab "
            ],
            [
              "character",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " should be configured to show 8 spaces, to match the language semantics - at least in cases when (accidental) mixed indentation is possible. Editors can also automatically convert the tab character to spaces."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The tab "
          },
          {
            "Text": "character",
            "AttrFlags": 4
          },
          {
            "Text": " should be configured to show 8 spaces, to match the language semantics - at least in cases when (accidental) mixed indentation is possible. Editors can also automatically convert the tab character to spaces."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908254,
        "id": "a8d34ac9-3665-4675-85cc-b9319fc24aed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550227908254,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, it might be helpful to configure the editor so that pressing the Tab key will insert 4 spaces, instead of inserting a tab character."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, it might be helpful to configure the editor so that pressing the Tab key will insert 4 spaces, instead of inserting a tab character."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550227908255,
        "id": "2ded91ac-69d6-4e1d-81af-e25be5ace592",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550227908255,
        "parent_id": "b2d34bf9-1097-43ab-b99b-20116391149b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Python source code written with a mix of tabs and spaces, or with non-standard number of indentation spaces can be made pep8-conformant using "
            ],
            [
              "autopep8",
              [
                [
                  "a",
                  "http://stackoverflow.com/questions/2625294/how-do-i-autoformat-some-python-code-to-be-correctly-formatted"
                ]
              ]
            ],
            [
              ". (A less powerful alternative comes with most Python installations: "
            ],
            [
              "reindent.py",
              [
                [
                  "a",
                  "https://pypi.python.org/pypi/Reindent/0.1.0"
                ]
              ]
            ],
            [
              ")"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Python source code written with a mix of tabs and spaces, or with non-standard number of indentation spaces can be made pep8-conformant using "
          },
          {
            "Text": "autopep8",
            "Link": "http://stackoverflow.com/questions/2625294/how-do-i-autoformat-some-python-code-to-be-correctly-formatted"
          },
          {
            "Text": ". (A less powerful alternative comes with most Python installations: "
          },
          {
            "Text": "reindent.py",
            "Link": "https://pypi.python.org/pypi/Reindent/0.1.0"
          },
          {
            "Text": ")"
          }
        ]
      }
    ],
    "title": "Block Indentation",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}