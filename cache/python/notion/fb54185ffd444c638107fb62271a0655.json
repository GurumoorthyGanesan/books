{
  "ID": "fb54185f-fd44-4c63-8107-fb62271a0655",
  "Root": {
    "alive": true,
    "content": [
      "ae93a300-63a1-441b-b217-c8a2ed8c9be5",
      "0627fa5e-6e19-47c0-a75b-1bca1de7327c",
      "aea17c97-be4c-45a9-ab59-9540248a9828",
      "14ca0650-6429-4656-8467-df379d88ed3b",
      "415a969a-d3d7-402c-b449-e5318d44c172",
      "5e04cd5c-14e3-43ee-b65c-4f84bdb88466",
      "539383a1-1b52-4812-bbc7-7a2ecc380aea",
      "7d56cb03-c289-468e-a1b0-738bf117f750",
      "959e12ea-3385-46dd-abd7-9b49ca6872d0"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550344298041,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "fb54185f-fd44-4c63-8107-fb62271a0655",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550344380000,
    "parent_id": "7e17d23d-5054-4107-ac76-16ed47a9bab9",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Opening and reading large XML files using iterparse incremental parsing"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550344298037,
        "id": "ae93a300-63a1-441b-b217-c8a2ed8c9be5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550344298037,
        "parent_id": "fb54185f-fd44-4c63-8107-fb62271a0655",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sometimes we don’t want to load the entire XML file in order to get the information we need. In these instances, being able to incrementally load the relevant sections and then delete them when we are finished is useful. With the iterparse function you can edit the element tree that is stored while parsing the XML."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sometimes we don’t want to load the entire XML file in order to get the information we need. In these instances, being able to incrementally load the relevant sections and then delete them when we are finished is useful. With the iterparse function you can edit the element tree that is stored while parsing the XML."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550344298039,
        "id": "0627fa5e-6e19-47c0-a75b-1bca1de7327c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550344298039,
        "parent_id": "fb54185f-fd44-4c63-8107-fb62271a0655",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Import the ElementTree object:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Import the ElementTree object:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550344298040,
        "id": "aea17c97-be4c-45a9-ab59-9540248a9828",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550344380000,
        "parent_id": "fb54185f-fd44-4c63-8107-fb62271a0655",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "import xml.etree.ElementTree as ET"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "import xml.etree.ElementTree as ET",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550344298040,
        "id": "14ca0650-6429-4656-8467-df379d88ed3b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550344298040,
        "parent_id": "fb54185f-fd44-4c63-8107-fb62271a0655",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Open the .xml file and iterate over all the elements:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Open the .xml file and iterate over all the elements:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550344298040,
        "id": "415a969a-d3d7-402c-b449-e5318d44c172",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550344380000,
        "parent_id": "fb54185f-fd44-4c63-8107-fb62271a0655",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "for event, elem in ET.iterparse(\"yourXMLfile.xml\"):\n    ... do something ..."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "for event, elem in ET.iterparse(\"yourXMLfile.xml\"):\n    ... do something ...",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550344298040,
        "id": "5e04cd5c-14e3-43ee-b65c-4f84bdb88466",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550344298040,
        "parent_id": "fb54185f-fd44-4c63-8107-fb62271a0655",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Alternatively, we can only look for specific events, such as start/end tags or namespaces. If this option is omitted (as above), only “end” events are returned:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Alternatively, we can only look for specific events, such as start/end tags or namespaces. If this option is omitted (as above), only “end” events are returned:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550344298040,
        "id": "539383a1-1b52-4812-bbc7-7a2ecc380aea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550344380000,
        "parent_id": "fb54185f-fd44-4c63-8107-fb62271a0655",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "events=(\"start\", \"end\", \"start-ns\", \"end-ns\")\nfor event, elem in ET.iterparse(\"yourXMLfile.xml\", events=events):\n    ... do something ..."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "events=(\"start\", \"end\", \"start-ns\", \"end-ns\")\nfor event, elem in ET.iterparse(\"yourXMLfile.xml\", events=events):\n    ... do something ...",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550344298040,
        "id": "7d56cb03-c289-468e-a1b0-738bf117f750",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550344298040,
        "parent_id": "fb54185f-fd44-4c63-8107-fb62271a0655",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here is the complete example showing how to clear elements from the in-memory tree when we are finished with them:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here is the complete example showing how to clear elements from the in-memory tree when we are finished with them:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550344298040,
        "id": "959e12ea-3385-46dd-abd7-9b49ca6872d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550344380000,
        "parent_id": "fb54185f-fd44-4c63-8107-fb62271a0655",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "for event, elem in ET.iterparse(\"yourXMLfile.xml\", events=(\"start\",\"end\")):        \n    if elem.tag == \"record_tag\" and event == \"end\":\n        print elem.text\n        elem.clear()\n    ... do something else ..."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "for event, elem in ET.iterparse(\"yourXMLfile.xml\", events=(\"start\",\"end\")):        \n    if elem.tag == \"record_tag\" and event == \"end\":\n        print elem.text\n        elem.clear()\n    ... do something else ...",
        "code_language": "Python"
      }
    ],
    "title": "Opening and reading large XML files using iterparse incremental parsing",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}