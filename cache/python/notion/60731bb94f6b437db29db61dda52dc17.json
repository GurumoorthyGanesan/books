{
  "ID": "60731bb9-4f6b-437d-b29d-b61dda52dc17",
  "Root": {
    "alive": true,
    "content": [
      "a03830a5-d717-456c-8846-485fefddb1d4",
      "f6d6a9e2-63e7-4a9e-8caf-c96a4044ecff",
      "290fa759-2328-495b-a806-ec5183138895",
      "ae16efc6-dace-4be0-8155-e05fc84ab69b",
      "0349f50f-3269-43e0-9686-856b8a44afa9",
      "2769c9e2-bd0b-43aa-bcd1-06c8493f919c",
      "28040f41-2726-4b28-8dbb-6b259c9fddd2",
      "80fcff98-b81c-4efe-b839-15f041abec54",
      "f8cf0592-7d26-40c4-8ccb-01ba684b9d74",
      "71992b7b-9f71-4e9b-93b8-a6508dee375d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550389580081,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "60731bb9-4f6b-437d-b29d-b61dda52dc17",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550470080000,
    "parent_id": "ec883772-3307-46a3-8831-ebcc8479e939",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Mutable default argument"
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389580077,
        "id": "a03830a5-d717-456c-8846-485fefddb1d4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389580077,
        "parent_id": "60731bb9-4f6b-437d-b29d-b61dda52dc17",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def foo(li=[]):\n    li.append(1)\n    print(li)\n\nfoo([2])\n# Out: [2, 1]\nfoo([3])\n# Out: [3, 1]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def foo(li=[]):\n    li.append(1)\n    print(li)\n\nfoo([2])\n# Out: [2, 1]\nfoo([3])\n# Out: [3, 1]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389580080,
        "id": "f6d6a9e2-63e7-4a9e-8caf-c96a4044ecff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389580080,
        "parent_id": "60731bb9-4f6b-437d-b29d-b61dda52dc17",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This code behaves as expected, but what if we don’t pass an argument?"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This code behaves as expected, but what if we don’t pass an argument?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389580080,
        "id": "290fa759-2328-495b-a806-ec5183138895",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389580080,
        "parent_id": "60731bb9-4f6b-437d-b29d-b61dda52dc17",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "foo()\n# Out: [1] As expected...\n\nfoo()\n# Out: [1, 1]  Not as expected..."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "foo()\n# Out: [1] As expected...\n\nfoo()\n# Out: [1, 1]  Not as expected...",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389580081,
        "id": "ae16efc6-dace-4be0-8155-e05fc84ab69b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389580081,
        "parent_id": "60731bb9-4f6b-437d-b29d-b61dda52dc17",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is because default arguments of functions and methods are evaluated at "
            ],
            [
              "definition",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " time rather than run time. So we only ever have a single instance of the "
            ],
            [
              "li",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " list."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is because default arguments of functions and methods are evaluated at "
          },
          {
            "Text": "definition",
            "AttrFlags": 1
          },
          {
            "Text": " time rather than run time. So we only ever have a single instance of the "
          },
          {
            "Text": "li",
            "AttrFlags": 2
          },
          {
            "Text": " list."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389580081,
        "id": "0349f50f-3269-43e0-9686-856b8a44afa9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389580081,
        "parent_id": "60731bb9-4f6b-437d-b29d-b61dda52dc17",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The way to get around it is to use only immutable types for default arguments:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The way to get around it is to use only immutable types for default arguments:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389580081,
        "id": "2769c9e2-bd0b-43aa-bcd1-06c8493f919c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389580081,
        "parent_id": "60731bb9-4f6b-437d-b29d-b61dda52dc17",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def foo(li=None):\n    if not li:\n        li = []\n    li.append(1)\n    print(li)\n\nfoo()\n# Out: [1]\n\nfoo()\n# Out: [1]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def foo(li=None):\n    if not li:\n        li = []\n    li.append(1)\n    print(li)\n\nfoo()\n# Out: [1]\n\nfoo()\n# Out: [1]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389580081,
        "id": "28040f41-2726-4b28-8dbb-6b259c9fddd2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389580081,
        "parent_id": "60731bb9-4f6b-437d-b29d-b61dda52dc17",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "While an improvement and although "
            ],
            [
              "if not li",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " correctly evaluates to "
            ],
            [
              "False",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", many other objects do as well, such as zero-length sequences. The following example arguments can cause unintended results:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "While an improvement and although "
          },
          {
            "Text": "if not li",
            "AttrFlags": 2
          },
          {
            "Text": " correctly evaluates to "
          },
          {
            "Text": "False",
            "AttrFlags": 2
          },
          {
            "Text": ", many other objects do as well, such as zero-length sequences. The following example arguments can cause unintended results:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389580081,
        "id": "80fcff98-b81c-4efe-b839-15f041abec54",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389580081,
        "parent_id": "60731bb9-4f6b-437d-b29d-b61dda52dc17",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "x = []\nfoo(li=x)\n# Out: [1]\n\nfoo(li=\"\")\n# Out: [1]\n\nfoo(li=0) \n# Out: [1]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "x = []\nfoo(li=x)\n# Out: [1]\n\nfoo(li=\"\")\n# Out: [1]\n\nfoo(li=0) \n# Out: [1]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389580081,
        "id": "f8cf0592-7d26-40c4-8ccb-01ba684b9d74",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389580081,
        "parent_id": "60731bb9-4f6b-437d-b29d-b61dda52dc17",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The idiomatic approach is to directly check the argument against the "
            ],
            [
              "None",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The idiomatic approach is to directly check the argument against the "
          },
          {
            "Text": "None",
            "AttrFlags": 2
          },
          {
            "Text": " object:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389580081,
        "id": "71992b7b-9f71-4e9b-93b8-a6508dee375d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389580081,
        "parent_id": "60731bb9-4f6b-437d-b29d-b61dda52dc17",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def foo(li=None):\n    if li is None:\n        li = []\n    li.append(1)\n    print(li)\n\nfoo()\n# Out: [1]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def foo(li=None):\n    if li is None:\n        li = []\n    li.append(1)\n    print(li)\n\nfoo()\n# Out: [1]",
        "code_language": "Plain Text"
      }
    ],
    "title": "Mutable default argument",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}