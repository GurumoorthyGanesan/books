{
  "ID": "deec4c78-e5fe-4714-a6be-dff4d292c187",
  "Root": {
    "alive": true,
    "content": [
      "68b27e8e-7dca-4f21-84e0-e7ed51fb9f20",
      "a917135d-19ce-4a3d-ae93-64b6b05f9a97",
      "49417699-4ef8-4c72-b305-41568f817f66",
      "60474a68-8956-48c3-b094-5575381d0241",
      "1f5f62ae-f19a-4613-a665-c9b2428f99d0",
      "9f32cee4-f720-42d1-8205-708ea507a0ba",
      "a9534767-ae88-4acc-8cad-7d9a6b610569",
      "002cd61f-2567-42b9-a3a7-a0bca6bbdc84",
      "16367684-442c-4dc4-80e8-7c8d24afe356",
      "8c3028a2-a7d4-4906-b016-16dc16a5d6e2",
      "c21070b7-7a5f-4ad6-acc2-98d0579a72b8",
      "218e3349-d3ef-4733-ab31-98fe38d64dbf",
      "8fd7d5f1-6deb-403a-9f7e-751731b1c7d8",
      "7c4b7ac3-91d9-41f9-95f8-26a12cc34817",
      "f9cb1698-111a-43b5-86f8-dd608e1da9f5",
      "f9cecc7f-d4cb-455e-92ac-1b2df685e6ae",
      "dc731e2e-85e0-4c67-b4fa-7b977e05adfa",
      "103c488b-787f-44ad-b9d7-c9299dd941db"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550307135836,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "deec4c78-e5fe-4714-a6be-dff4d292c187",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550307300000,
    "parent_id": "a0d16770-ed43-43f6-8843-dfd332e9a62a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Infinite sequences"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307135829,
        "id": "68b27e8e-7dca-4f21-84e0-e7ed51fb9f20",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307135829,
        "parent_id": "deec4c78-e5fe-4714-a6be-dff4d292c187",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Generators can be used to represent infinite sequences:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Generators can be used to represent infinite sequences:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307135831,
        "id": "a917135d-19ce-4a3d-ae93-64b6b05f9a97",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307240000,
        "parent_id": "deec4c78-e5fe-4714-a6be-dff4d292c187",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def integers_starting_from(n):\n    while True:\n        yield n\n        n += 1\n\nnatural_numbers = integers_starting_from(1)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def integers_starting_from(n):\n    while True:\n        yield n\n        n += 1\n\nnatural_numbers = integers_starting_from(1)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307135833,
        "id": "49417699-4ef8-4c72-b305-41568f817f66",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307135833,
        "parent_id": "deec4c78-e5fe-4714-a6be-dff4d292c187",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Infinite sequence of numbers as above can also be generated with the help of "
            ],
            [
              "itertools.count",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.python.org/3/library/itertools.html#itertools.count"
                ]
              ]
            ],
            [
              ". The above code could be written as below"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Infinite sequence of numbers as above can also be generated with the help of "
          },
          {
            "Text": "itertools.count",
            "AttrFlags": 2,
            "Link": "https://docs.python.org/3/library/itertools.html#itertools.count"
          },
          {
            "Text": ". The above code could be written as below"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307135833,
        "id": "60474a68-8956-48c3-b094-5575381d0241",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307240000,
        "parent_id": "deec4c78-e5fe-4714-a6be-dff4d292c187",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "natural_numbers = itertools.count(1)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "natural_numbers = itertools.count(1)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307135833,
        "id": "1f5f62ae-f19a-4613-a665-c9b2428f99d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307135833,
        "parent_id": "deec4c78-e5fe-4714-a6be-dff4d292c187",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can use generator comprehensions on infinite generators to produce new generators:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can use generator comprehensions on infinite generators to produce new generators:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307135834,
        "id": "9f32cee4-f720-42d1-8205-708ea507a0ba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307240000,
        "parent_id": "deec4c78-e5fe-4714-a6be-dff4d292c187",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "multiples_of_two = (x * 2 for x in natural_numbers)\nmultiples_of_three = (x for x in natural_numbers if x % 3 == 0)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "multiples_of_two = (x * 2 for x in natural_numbers)\nmultiples_of_three = (x for x in natural_numbers if x % 3 == 0)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307135834,
        "id": "a9534767-ae88-4acc-8cad-7d9a6b610569",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307135834,
        "parent_id": "deec4c78-e5fe-4714-a6be-dff4d292c187",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Be aware that an infinite generator does not have an end, so passing it to any function that will attempt to consume the generator entirely will have "
            ],
            [
              "dire consequences",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Be aware that an infinite generator does not have an end, so passing it to any function that will attempt to consume the generator entirely will have "
          },
          {
            "Text": "dire consequences",
            "AttrFlags": 1
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307135834,
        "id": "002cd61f-2567-42b9-a3a7-a0bca6bbdc84",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307240000,
        "parent_id": "deec4c78-e5fe-4714-a6be-dff4d292c187",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "list(multiples_of_two)  # will never terminate, or raise an OS-specific error"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "list(multiples_of_two)  # will never terminate, or raise an OS-specific error",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307135834,
        "id": "16367684-442c-4dc4-80e8-7c8d24afe356",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307135834,
        "parent_id": "deec4c78-e5fe-4714-a6be-dff4d292c187",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Instead, use list/set comprehensions with "
            ],
            [
              "range",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.python.org/3/library/functions.html#func-range"
                ]
              ]
            ],
            [
              " (or "
            ],
            [
              "xrange",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for python \u003c 3.0):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Instead, use list/set comprehensions with "
          },
          {
            "Text": "range",
            "AttrFlags": 2,
            "Link": "https://docs.python.org/3/library/functions.html#func-range"
          },
          {
            "Text": " (or "
          },
          {
            "Text": "xrange",
            "AttrFlags": 2
          },
          {
            "Text": " for python \u003c 3.0):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307135834,
        "id": "8c3028a2-a7d4-4906-b016-16dc16a5d6e2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307240000,
        "parent_id": "deec4c78-e5fe-4714-a6be-dff4d292c187",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "first_five_multiples_of_three = [next(multiples_of_three) for _ in range(5)] \n# [3, 6, 9, 12, 15]"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "first_five_multiples_of_three = [next(multiples_of_three) for _ in range(5)] \n# [3, 6, 9, 12, 15]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307135835,
        "id": "c21070b7-7a5f-4ad6-acc2-98d0579a72b8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307135835,
        "parent_id": "deec4c78-e5fe-4714-a6be-dff4d292c187",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "or use "
            ],
            [
              "itertools.islice()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.python.org/3/library/itertools.html#itertools.islice"
                ]
              ]
            ],
            [
              " to slice the iterator to a subset:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "or use "
          },
          {
            "Text": "itertools.islice()",
            "AttrFlags": 2,
            "Link": "https://docs.python.org/3/library/itertools.html#itertools.islice"
          },
          {
            "Text": " to slice the iterator to a subset:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307135835,
        "id": "218e3349-d3ef-4733-ab31-98fe38d64dbf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307240000,
        "parent_id": "deec4c78-e5fe-4714-a6be-dff4d292c187",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "from itertools import islice\nmultiples_of_four = (x * 4 for x in integers_starting_from(1))\nfirst_five_multiples_of_four = list(islice(multiples_of_four, 5))\n# [4, 8, 12, 16, 20]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "from itertools import islice\nmultiples_of_four = (x * 4 for x in integers_starting_from(1))\nfirst_five_multiples_of_four = list(islice(multiples_of_four, 5))\n# [4, 8, 12, 16, 20]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307135835,
        "id": "8fd7d5f1-6deb-403a-9f7e-751731b1c7d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307135835,
        "parent_id": "deec4c78-e5fe-4714-a6be-dff4d292c187",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that the original generator is updated too, just like all other generators coming from the same “root”:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that the original generator is updated too, just like all other generators coming from the same “root”:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307135835,
        "id": "7c4b7ac3-91d9-41f9-95f8-26a12cc34817",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307240000,
        "parent_id": "deec4c78-e5fe-4714-a6be-dff4d292c187",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "next(natural_numbers)    # yields 16\nnext(multiples_of_two)   # yields 34\nnext(multiples_of_four)  # yields 24"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "next(natural_numbers)    # yields 16\nnext(multiples_of_two)   # yields 34\nnext(multiples_of_four)  # yields 24",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307135836,
        "id": "f9cb1698-111a-43b5-86f8-dd608e1da9f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307135836,
        "parent_id": "deec4c78-e5fe-4714-a6be-dff4d292c187",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An infinite sequence can also be iterated with a "
            ],
            [
              "for",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/python/237/loops/862/for-loops"
                ]
              ]
            ],
            [
              "-loop",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/python/237/loops/862/for-loops"
                ]
              ]
            ],
            [
              ". Make sure to include a conditional "
            ],
            [
              "break",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement so that the loop would terminate eventually:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An infinite sequence can also be iterated with a "
          },
          {
            "Text": "for",
            "AttrFlags": 2,
            "Link": "http://stackoverflow.com/documentation/python/237/loops/862/for-loops"
          },
          {
            "Text": "-loop",
            "Link": "http://stackoverflow.com/documentation/python/237/loops/862/for-loops"
          },
          {
            "Text": ". Make sure to include a conditional "
          },
          {
            "Text": "break",
            "AttrFlags": 2
          },
          {
            "Text": " statement so that the loop would terminate eventually:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307135836,
        "id": "f9cecc7f-d4cb-455e-92ac-1b2df685e6ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307300000,
        "parent_id": "deec4c78-e5fe-4714-a6be-dff4d292c187",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "for idx, number in enumerate(multiplies_of_two):\n    print(number)\n    if idx == 9:\n        break  # stop after taking the first 10 multiplies of two"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "for idx, number in enumerate(multiplies_of_two):\n    print(number)\n    if idx == 9:\n        break  # stop after taking the first 10 multiplies of two",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307135836,
        "id": "dc731e2e-85e0-4c67-b4fa-7b977e05adfa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307135836,
        "parent_id": "deec4c78-e5fe-4714-a6be-dff4d292c187",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Classic example - Fibonacci numbers"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Classic example - Fibonacci numbers"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307135836,
        "id": "103c488b-787f-44ad-b9d7-c9299dd941db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307300000,
        "parent_id": "deec4c78-e5fe-4714-a6be-dff4d292c187",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "import itertools\n\ndef fibonacci():\n    a, b = 1, 1\n    while True:\n        yield a\n        a, b = b, a + b\n\nfirst_ten_fibs = list(itertools.islice(fibonacci(), 10))\n# [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\n\ndef nth_fib(n):\n    return next(itertools.islice(fibonacci(), n - 1, n))\n\nninety_nineth_fib = nth_fib(99)  # 354224848179261915075"
            ]
          ]
        },
        "type": "code",
        "version": 7,
        "code": "import itertools\n\ndef fibonacci():\n    a, b = 1, 1\n    while True:\n        yield a\n        a, b = b, a + b\n\nfirst_ten_fibs = list(itertools.islice(fibonacci(), 10))\n# [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\n\ndef nth_fib(n):\n    return next(itertools.islice(fibonacci(), n - 1, n))\n\nninety_nineth_fib = nth_fib(99)  # 354224848179261915075",
        "code_language": "Python"
      }
    ],
    "title": "Infinite sequences",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}