{
  "ID": "f51e6354-b436-4cd1-9599-9099c74893d7",
  "Root": {
    "alive": true,
    "content": [
      "39870ca7-2784-423d-ae5a-f0bedf83979e",
      "4b83bcb7-ff63-4cf5-97d2-2fbddd945084",
      "a4605003-0755-436d-9379-778907d11129"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550230995807,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "f51e6354-b436-4cd1-9599-9099c74893d7",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550260800000,
    "parent_id": "ae9aef3d-dc0a-4b63-9830-5e3b3a5fffd4",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Concatenate and Merge lists"
        ]
      ]
    },
    "type": "page",
    "version": 16,
    "content_resolved": [
      {
        "alive": true,
        "content": [
          "e5ff7fcf-c6d1-43b2-98b9-94e1635d04ad"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550230995805,
        "id": "39870ca7-2784-423d-ae5a-f0bedf83979e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550260740000,
        "parent_id": "f51e6354-b436-4cd1-9599-9099c74893d7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The simplest way to concatenate",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "list1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "list2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 3,
        "content_resolved": [
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550230995805,
            "id": "e5ff7fcf-c6d1-43b2-98b9-94e1635d04ad",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550260740000,
            "parent_id": "39870ca7-2784-423d-ae5a-f0bedf83979e",
            "parent_table": "block",
            "properties": {
              "language": [
                [
                  "Python"
                ]
              ],
              "title": [
                [
                  "merged = list1 + list2"
                ]
              ]
            },
            "type": "code",
            "version": 5,
            "code": "merged = list1 + list2",
            "code_language": "Python"
          }
        ],
        "inline_content": [
          {
            "Text": "The simplest way to concatenate",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "list1",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "list2",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "content": [
          "12262d99-cbe4-488e-8ce9-f2d4816c172c",
          "032e7f48-bac2-4060-9a83-00a1a71cc8ee",
          "19a4d01d-5e17-481f-a0c9-acca1a85dacc",
          "1f8dde89-4df9-4ffb-89e7-2a58056636f3"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550230995806,
        "id": "4b83bcb7-ff63-4cf5-97d2-2fbddd945084",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550260800000,
        "parent_id": "f51e6354-b436-4cd1-9599-9099c74893d7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "zip",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " returns a list of tuples",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", where the i-th tuple contains the i-th element from each of the argument sequences or iterables:"
            ]
          ]
        },
        "type": "numbered_list",
        "version": 7,
        "content_resolved": [
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550230995806,
            "id": "12262d99-cbe4-488e-8ce9-f2d4816c172c",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550260740000,
            "parent_id": "4b83bcb7-ff63-4cf5-97d2-2fbddd945084",
            "parent_table": "block",
            "properties": {
              "language": [
                [
                  "Python"
                ]
              ],
              "title": [
                [
                  "alist = ['a1', 'a2', 'a3']\nblist = ['b1', 'b2', 'b3']\n\nfor a, b in zip(alist, blist):\n    print(a, b)\n \n# Output:\n# a1 b1\n# a2 b2\n# a3 b3"
                ]
              ]
            },
            "type": "code",
            "version": 5,
            "code": "alist = ['a1', 'a2', 'a3']\nblist = ['b1', 'b2', 'b3']\n\nfor a, b in zip(alist, blist):\n    print(a, b)\n \n# Output:\n# a1 b1\n# a2 b2\n# a3 b3",
            "code_language": "Python"
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550230995806,
            "id": "032e7f48-bac2-4060-9a83-00a1a71cc8ee",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550260800000,
            "parent_id": "4b83bcb7-ff63-4cf5-97d2-2fbddd945084",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "If the lists have different lengths then the result will include only as many elements as the shortest one:"
                ]
              ]
            },
            "type": "text",
            "version": 4,
            "inline_content": [
              {
                "Text": "If the lists have different lengths then the result will include only as many elements as the shortest one:"
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550230995806,
            "id": "19a4d01d-5e17-481f-a0c9-acca1a85dacc",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550260800000,
            "parent_id": "4b83bcb7-ff63-4cf5-97d2-2fbddd945084",
            "parent_table": "block",
            "properties": {
              "language": [
                [
                  "Python"
                ]
              ],
              "title": [
                [
                  "alist = ['a1', 'a2', 'a3']\nblist = ['b1', 'b2', 'b3', 'b4']\nfor a, b in zip(alist, blist):\n    print(a, b)\n\n# Output:\n# a1 b1\n# a2 b2\n# a3 b3\n\nalist = []\nlen(list(zip(alist, blist)))\n\n# Output:\n# 0\n\nFor padding lists of unequal length to the longest one with `None`s use `itertools.zip_longest` (`itertools.izip_longest` in Python 2)\n\nalist = ['a1', 'a2', 'a3']\nblist = ['b1']\nclist = ['c1', 'c2', 'c3', 'c4']\n\nfor a,b,c in itertools.zip_longest(alist, blist, clist):\n    print(a, b, c)\n\n# Output: \n# a1 b1 c1\n# a2 None c2\n# a3 None c3\n# None None c4"
                ]
              ]
            },
            "type": "code",
            "version": 5,
            "code": "alist = ['a1', 'a2', 'a3']\nblist = ['b1', 'b2', 'b3', 'b4']\nfor a, b in zip(alist, blist):\n    print(a, b)\n\n# Output:\n# a1 b1\n# a2 b2\n# a3 b3\n\nalist = []\nlen(list(zip(alist, blist)))\n\n# Output:\n# 0\n\nFor padding lists of unequal length to the longest one with `None`s use `itertools.zip_longest` (`itertools.izip_longest` in Python 2)\n\nalist = ['a1', 'a2', 'a3']\nblist = ['b1']\nclist = ['c1', 'c2', 'c3', 'c4']\n\nfor a,b,c in itertools.zip_longest(alist, blist, clist):\n    print(a, b, c)\n\n# Output: \n# a1 b1 c1\n# a2 None c2\n# a3 None c3\n# None None c4",
            "code_language": "Python"
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550260800000,
            "id": "1f8dde89-4df9-4ffb-89e7-2a58056636f3",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550260800000,
            "parent_id": "4b83bcb7-ff63-4cf5-97d2-2fbddd945084",
            "parent_table": "block",
            "type": "text",
            "version": 3
          }
        ],
        "inline_content": [
          {
            "Text": "zip",
            "AttrFlags": 3
          },
          {
            "Text": " returns a list of tuples",
            "AttrFlags": 1
          },
          {
            "Text": ", where the i-th tuple contains the i-th element from each of the argument sequences or iterables:"
          }
        ]
      },
      {
        "alive": true,
        "content": [
          "0ace676a-ee9b-4179-a0fb-b113a51dafa4",
          "3b7272a0-bd1a-4a7c-9b8b-313ff71539dd",
          "6e69a343-375c-4639-8a1b-a5bc85a56585"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550230995806,
        "id": "a4605003-0755-436d-9379-778907d11129",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550260800000,
        "parent_id": "f51e6354-b436-4cd1-9599-9099c74893d7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Insert to a specific index values:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 5,
        "content_resolved": [
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550230995806,
            "id": "0ace676a-ee9b-4179-a0fb-b113a51dafa4",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550260800000,
            "parent_id": "a4605003-0755-436d-9379-778907d11129",
            "parent_table": "block",
            "properties": {
              "language": [
                [
                  "Python"
                ]
              ],
              "title": [
                [
                  "alist = [123, 'xyz', 'zara', 'abc']\nalist.insert(3, [2009])\nprint(\"Final List :\", alist)"
                ]
              ]
            },
            "type": "code",
            "version": 5,
            "code": "alist = [123, 'xyz', 'zara', 'abc']\nalist.insert(3, [2009])\nprint(\"Final List :\", alist)",
            "code_language": "Python"
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550230995807,
            "id": "3b7272a0-bd1a-4a7c-9b8b-313ff71539dd",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550260800000,
            "parent_id": "a4605003-0755-436d-9379-778907d11129",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "Output:"
                ]
              ]
            },
            "type": "text",
            "version": 4,
            "inline_content": [
              {
                "Text": "Output:"
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550230995807,
            "id": "6e69a343-375c-4639-8a1b-a5bc85a56585",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550260800000,
            "parent_id": "a4605003-0755-436d-9379-778907d11129",
            "parent_table": "block",
            "properties": {
              "language": [
                [
                  "Plain Text"
                ]
              ],
              "title": [
                [
                  "Final List : [123, 'xyz', 'zara', 2009, 'abc']"
                ]
              ]
            },
            "type": "code",
            "version": 4,
            "code": "Final List : [123, 'xyz', 'zara', 2009, 'abc']",
            "code_language": "Plain Text"
          }
        ],
        "inline_content": [
          {
            "Text": "Insert to a specific index values:",
            "AttrFlags": 1
          }
        ]
      }
    ],
    "title": "Concatenate and Merge lists",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}