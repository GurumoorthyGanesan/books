{
  "ID": "6cd95eea-cc6d-44cd-83b7-6d14efe95391",
  "Root": {
    "alive": true,
    "content": [
      "0d25f507-0f26-4c8d-9b7e-c4559ef84a91",
      "68cc5eb1-ee28-4a06-826b-3042c4cd4b5e",
      "d8fbcb2d-7c17-43fb-9038-0041c26f717b",
      "c0ae4766-d970-4f0e-b4d9-8f17089c2546",
      "c9f9253b-753e-4037-bb64-b009c307758e",
      "bcdeee92-60cc-4782-bb7b-f8c03636797a",
      "87abeac8-93db-47ad-b2a6-dfc605cf7620",
      "5716be73-4fde-47e8-9d0e-8f319e82dbcd",
      "5336c70e-7455-4b5f-b015-151e9eca2431",
      "283aa7f8-0246-42ea-a72d-b56cfefd2bb4",
      "0c4488d0-bee2-4f22-8a9b-18f359fe12d1",
      "d4e5fa1c-3bc5-4465-a7e2-9df02e8766c5",
      "aba746e8-36ac-4734-9f50-8f12ecf16a9e",
      "e5e104bc-5482-4bea-ac75-ba401e9c327b",
      "d9dfca94-df1a-433a-9d46-a6c2d8c3dbac"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550350779265,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "6cd95eea-cc6d-44cd-83b7-6d14efe95391",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550352240000,
    "parent_id": "71fc79ae-18b5-47de-ae64-7e006c4197b1",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Conditional Expression Evaluation Using List Comprehensions"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350779262,
        "id": "0d25f507-0f26-4c8d-9b7e-c4559ef84a91",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350779262,
        "parent_id": "6cd95eea-cc6d-44cd-83b7-6d14efe95391",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Python allows you to hack list comprehensions to evaluate conditional expressions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Python allows you to hack list comprehensions to evaluate conditional expressions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350779263,
        "id": "68cc5eb1-ee28-4a06-826b-3042c4cd4b5e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350779263,
        "parent_id": "6cd95eea-cc6d-44cd-83b7-6d14efe95391",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For instance,"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For instance,"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350779263,
        "id": "d8fbcb2d-7c17-43fb-9038-0041c26f717b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352180000,
        "parent_id": "6cd95eea-cc6d-44cd-83b7-6d14efe95391",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "[value_false, value_true][\u003cconditional-test\u003e]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "[value_false, value_true][\u003cconditional-test\u003e]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350779263,
        "id": "c0ae4766-d970-4f0e-b4d9-8f17089c2546",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350779263,
        "parent_id": "6cd95eea-cc6d-44cd-83b7-6d14efe95391",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350779263,
        "id": "c9f9253b-753e-4037-bb64-b009c307758e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352240000,
        "parent_id": "6cd95eea-cc6d-44cd-83b7-6d14efe95391",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e n = 16\n\u003e\u003e print [10, 20][n \u003c= 15]\n10"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e n = 16\n\u003e\u003e print [10, 20][n \u003c= 15]\n10",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350779264,
        "id": "bcdeee92-60cc-4782-bb7b-f8c03636797a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350779264,
        "parent_id": "6cd95eea-cc6d-44cd-83b7-6d14efe95391",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here "
            ],
            [
              "n\u003c=15",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns "
            ],
            [
              "False",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (which equates to 0 in Python). So what Python is evaluating is:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here "
          },
          {
            "Text": "n\u003c=15",
            "AttrFlags": 2
          },
          {
            "Text": " returns "
          },
          {
            "Text": "False",
            "AttrFlags": 2
          },
          {
            "Text": " (which equates to 0 in Python). So what Python is evaluating is:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350779264,
        "id": "87abeac8-93db-47ad-b2a6-dfc605cf7620",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352240000,
        "parent_id": "6cd95eea-cc6d-44cd-83b7-6d14efe95391",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "[10, 20][n \u003c= 15]\n==\u003e [10, 20][False] \n==\u003e [10, 20][0]     #False==0, True==1 (Check Boolean Equivalencies in Python)\n==\u003e 10"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "[10, 20][n \u003c= 15]\n==\u003e [10, 20][False] \n==\u003e [10, 20][0]     #False==0, True==1 (Check Boolean Equivalencies in Python)\n==\u003e 10",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350779264,
        "id": "5716be73-4fde-47e8-9d0e-8f319e82dbcd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350779264,
        "parent_id": "6cd95eea-cc6d-44cd-83b7-6d14efe95391",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The inbuilt "
            ],
            [
              "__cmp__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method returned 3 possible values: 0, 1, -1, where cmp(x,y) returned 0: if both objecs were the same 1: x \u003e y -1: x \u003c y"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The inbuilt "
          },
          {
            "Text": "__cmp__",
            "AttrFlags": 2
          },
          {
            "Text": " method returned 3 possible values: 0, 1, -1, where cmp(x,y) returned 0: if both objecs were the same 1: x \u003e y -1: x \u003c y"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350779264,
        "id": "5336c70e-7455-4b5f-b015-151e9eca2431",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350779264,
        "parent_id": "6cd95eea-cc6d-44cd-83b7-6d14efe95391",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This could be used with list comprehensions to return the first(ie. index 0), second(ie. index 1) and last(ie. index -1) element of the list. Giving us a conditional of this type:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This could be used with list comprehensions to return the first(ie. index 0), second(ie. index 1) and last(ie. index -1) element of the list. Giving us a conditional of this type:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350779264,
        "id": "283aa7f8-0246-42ea-a72d-b56cfefd2bb4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352240000,
        "parent_id": "6cd95eea-cc6d-44cd-83b7-6d14efe95391",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "[value_equals, value_greater, value_less][\u003cconditional-test\u003e]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "[value_equals, value_greater, value_less][\u003cconditional-test\u003e]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350779264,
        "id": "0c4488d0-bee2-4f22-8a9b-18f359fe12d1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350779264,
        "parent_id": "6cd95eea-cc6d-44cd-83b7-6d14efe95391",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finally, in all the examples above Python evaluates both branches before choosing one. To only evaluate the chosen branch:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finally, in all the examples above Python evaluates both branches before choosing one. To only evaluate the chosen branch:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350779264,
        "id": "d4e5fa1c-3bc5-4465-a7e2-9df02e8766c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352240000,
        "parent_id": "6cd95eea-cc6d-44cd-83b7-6d14efe95391",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "[lambda: value_false, lambda: value_true][\u003ctest\u003e]()"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "[lambda: value_false, lambda: value_true][\u003ctest\u003e]()",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350779264,
        "id": "aba746e8-36ac-4734-9f50-8f12ecf16a9e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350779264,
        "parent_id": "6cd95eea-cc6d-44cd-83b7-6d14efe95391",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "where adding the "
            ],
            [
              "()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " at the end ensures that the lambda functions are only called/evaluated at the end. Thus, we only evaluate the chosen branch."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "where adding the "
          },
          {
            "Text": "()",
            "AttrFlags": 2
          },
          {
            "Text": " at the end ensures that the lambda functions are only called/evaluated at the end. Thus, we only evaluate the chosen branch."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350779265,
        "id": "e5e104bc-5482-4bea-ac75-ba401e9c327b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350779265,
        "parent_id": "6cd95eea-cc6d-44cd-83b7-6d14efe95391",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350779265,
        "id": "d9dfca94-df1a-433a-9d46-a6c2d8c3dbac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352240000,
        "parent_id": "6cd95eea-cc6d-44cd-83b7-6d14efe95391",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "count = [lambda:0, lambda:N+1][count==N]()"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "count = [lambda:0, lambda:N+1][count==N]()",
        "code_language": "Python"
      }
    ],
    "title": "Conditional Expression Evaluation Using List Comprehensions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}