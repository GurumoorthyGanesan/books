{
  "ID": "5709d95d-87ae-4dc3-b542-75870c0c631d",
  "Root": {
    "alive": true,
    "content": [
      "d5876212-3ad8-49aa-b730-2dcb4c0a63b7",
      "02c6899d-e90c-451c-972c-e7779a8680a8",
      "68a5d078-b5c3-444d-a045-b6a570effe3e",
      "614b7855-0218-4961-b473-e94562cdea4b",
      "abe8619a-9ade-4df6-aa0d-6c64a05d301c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550303105320,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "5709d95d-87ae-4dc3-b542-75870c0c631d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550303280000,
    "parent_id": "e679da23-62f3-4936-a885-358039351210",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Operators as alternative to an infix operator"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303105315,
        "id": "d5876212-3ad8-49aa-b730-2dcb4c0a63b7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303105315,
        "parent_id": "5709d95d-87ae-4dc3-b542-75870c0c631d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For every infix operator, e.g. "
            ],
            [
              "\\+",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " there is a "
            ],
            [
              "operator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "-function ("
            ],
            [
              "operator.add",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for "
            ],
            [
              "\\+",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For every infix operator, e.g. "
          },
          {
            "Text": "\\+",
            "AttrFlags": 2
          },
          {
            "Text": " there is a "
          },
          {
            "Text": "operator",
            "AttrFlags": 2
          },
          {
            "Text": "-function ("
          },
          {
            "Text": "operator.add",
            "AttrFlags": 2
          },
          {
            "Text": " for "
          },
          {
            "Text": "\\+",
            "AttrFlags": 2
          },
          {
            "Text": "):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303105318,
        "id": "02c6899d-e90c-451c-972c-e7779a8680a8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303280000,
        "parent_id": "5709d95d-87ae-4dc3-b542-75870c0c631d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "1 + 1\n# Output: 2\nfrom operator import add\nadd(1, 1)\n# Output: 2"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "1 + 1\n# Output: 2\nfrom operator import add\nadd(1, 1)\n# Output: 2",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303105318,
        "id": "68a5d078-b5c3-444d-a045-b6a570effe3e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303105318,
        "parent_id": "5709d95d-87ae-4dc3-b542-75870c0c631d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "even though the main documentation states that for the arithmetic operators only numerical input is allowed it "
            ],
            [
              "is",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " possible:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "even though the main documentation states that for the arithmetic operators only numerical input is allowed it "
          },
          {
            "Text": "is",
            "AttrFlags": 4
          },
          {
            "Text": " possible:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303105318,
        "id": "614b7855-0218-4961-b473-e94562cdea4b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303280000,
        "parent_id": "5709d95d-87ae-4dc3-b542-75870c0c631d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "from operator import mul\nmul('a', 10)\n# Output: 'aaaaaaaaaa'\nmul([3], 3)\n# Output: [3, 3, 3]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "from operator import mul\nmul('a', 10)\n# Output: 'aaaaaaaaaa'\nmul([3], 3)\n# Output: [3, 3, 3]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550303105320,
        "id": "abe8619a-9ade-4df6-aa0d-6c64a05d301c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550303105320,
        "parent_id": "5709d95d-87ae-4dc3-b542-75870c0c631d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "See also: "
            ],
            [
              "mapping from operation to operator function in the official Python documentation",
              [
                [
                  "a",
                  "https://docs.python.org/3/library/operator.html#mapping-operators-to-functions"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "See also: "
          },
          {
            "Text": "mapping from operation to operator function in the official Python documentation",
            "Link": "https://docs.python.org/3/library/operator.html#mapping-operators-to-functions"
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Operators as alternative to an infix operator",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}