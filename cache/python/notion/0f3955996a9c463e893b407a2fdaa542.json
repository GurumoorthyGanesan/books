{
  "ID": "0f395599-6a9c-463e-893b-407a2fdaa542",
  "Root": {
    "alive": true,
    "content": [
      "5e9d86e4-1ed7-4eea-97d8-cfa12a8a04bc",
      "9b118abb-133d-493a-af04-d8885f304922",
      "0e3566c8-a21c-419d-8cf3-110a16fcf8a8",
      "b81e0615-114f-4da1-b1ae-5840a25347b9",
      "be561107-3965-4ade-a41f-c7cfc9a353ff"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550307143707,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "0f395599-6a9c-463e-893b-407a2fdaa542",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550307420000,
    "parent_id": "a0d16770-ed43-43f6-8843-dfd332e9a62a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Generator expressions"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307143706,
        "id": "5e9d86e4-1ed7-4eea-97d8-cfa12a8a04bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307143706,
        "parent_id": "0f395599-6a9c-463e-893b-407a2fdaa542",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It’s possible to create generator iterators using a comprehension-like syntax."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It’s possible to create generator iterators using a comprehension-like syntax."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307143707,
        "id": "9b118abb-133d-493a-af04-d8885f304922",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307420000,
        "parent_id": "0f395599-6a9c-463e-893b-407a2fdaa542",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "generator = (i * 2 for i in range(3))\n\nnext(generator)  # 0\nnext(generator)  # 2\nnext(generator)  # 4\nnext(generator)  # raises StopIteration"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "generator = (i * 2 for i in range(3))\n\nnext(generator)  # 0\nnext(generator)  # 2\nnext(generator)  # 4\nnext(generator)  # raises StopIteration",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307143707,
        "id": "0e3566c8-a21c-419d-8cf3-110a16fcf8a8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307143707,
        "parent_id": "0f395599-6a9c-463e-893b-407a2fdaa542",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If a function doesn’t necessarily need to be passed a list, you can save on characters (and improve readability) by placing a generator expression inside a function call. The parenthesis from the function call implicitly make your expression a generator expression."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If a function doesn’t necessarily need to be passed a list, you can save on characters (and improve readability) by placing a generator expression inside a function call. The parenthesis from the function call implicitly make your expression a generator expression."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307143707,
        "id": "b81e0615-114f-4da1-b1ae-5840a25347b9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307420000,
        "parent_id": "0f395599-6a9c-463e-893b-407a2fdaa542",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "sum(i ** 2 for i in range(4))  # 0^2 + 1^2 + 2^2 + 3^2 = 0 + 1 + 4 + 9 = 14"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "sum(i ** 2 for i in range(4))  # 0^2 + 1^2 + 2^2 + 3^2 = 0 + 1 + 4 + 9 = 14",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550307143707,
        "id": "be561107-3965-4ade-a41f-c7cfc9a353ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550307143707,
        "parent_id": "0f395599-6a9c-463e-893b-407a2fdaa542",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Additionally, you will save on memory because instead of loading the entire list you are iterating over ("
            ],
            [
              "[0, 1, 2, 3]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the above example), the generator allows Python to use values as needed."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Additionally, you will save on memory because instead of loading the entire list you are iterating over ("
          },
          {
            "Text": "[0, 1, 2, 3]",
            "AttrFlags": 2
          },
          {
            "Text": " in the above example), the generator allows Python to use values as needed."
          }
        ]
      }
    ],
    "title": "Generator expressions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}