{
  "ID": "302daf30-e450-4471-a21a-cfb5f0e7d594",
  "Root": {
    "alive": true,
    "content": [
      "7e02060c-adc7-443b-8b08-0cb6a7274121",
      "a06c8b85-9772-4c45-bcf1-9e8d87facdf2",
      "1081ee29-90d1-4e41-b29d-af598f1f3611",
      "c8c04db2-b9fe-4e8d-b5a8-bb223e829bdd",
      "fc06d87a-e75b-4d6d-9794-d07cd20ca757",
      "668ede80-4263-455d-afc6-0d4f019f1ab7",
      "1509286a-6429-452c-9168-6912dac38d63"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550346324049,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "302daf30-e450-4471-a21a-cfb5f0e7d594",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550347080000,
    "parent_id": "9a8d08e0-a7fc-4734-b98e-c6aa502c0296",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Mocking functions with unittest.mock.create autospec"
        ]
      ]
    },
    "type": "page",
    "version": 11,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550346324047,
        "id": "7e02060c-adc7-443b-8b08-0cb6a7274121",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550346324047,
        "parent_id": "302daf30-e450-4471-a21a-cfb5f0e7d594",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One way to mock a function is to use the "
            ],
            [
              "create_autospec",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function, which will mock out an object according to its specs. With functions, we can use this to ensure that they are called appropriately."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One way to mock a function is to use the "
          },
          {
            "Text": "create_autospec",
            "AttrFlags": 2
          },
          {
            "Text": " function, which will mock out an object according to its specs. With functions, we can use this to ensure that they are called appropriately."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550346324047,
        "id": "a06c8b85-9772-4c45-bcf1-9e8d87facdf2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550346324047,
        "parent_id": "302daf30-e450-4471-a21a-cfb5f0e7d594",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With a function "
            ],
            [
              "multiply",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in "
            ],
            [
              "custom_math.py",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With a function "
          },
          {
            "Text": "multiply",
            "AttrFlags": 2
          },
          {
            "Text": " in "
          },
          {
            "Text": "custom_math.py",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550346324048,
        "id": "1081ee29-90d1-4e41-b29d-af598f1f3611",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347020000,
        "parent_id": "302daf30-e450-4471-a21a-cfb5f0e7d594",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def multiply(a, b):\n    return a * b"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def multiply(a, b):\n    return a * b",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550346324048,
        "id": "c8c04db2-b9fe-4e8d-b5a8-bb223e829bdd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550346324048,
        "parent_id": "302daf30-e450-4471-a21a-cfb5f0e7d594",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And a function "
            ],
            [
              "multiples_of",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in "
            ],
            [
              "process_math.py",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And a function "
          },
          {
            "Text": "multiples_of",
            "AttrFlags": 2
          },
          {
            "Text": " in "
          },
          {
            "Text": "process_math.py",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550346324048,
        "id": "fc06d87a-e75b-4d6d-9794-d07cd20ca757",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347020000,
        "parent_id": "302daf30-e450-4471-a21a-cfb5f0e7d594",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "from custom_math import multiply\n\ndef multiples_of(integer, *args, num_multiples=0, **kwargs):\n    \"\"\"\n    :rtype: list\n    \"\"\"\n    multiples = []\n    \n    for x in range(1, num_multiples + 1):\n        \"\"\"\n        Passing in args and kwargs here will only raise TypeError if values were \n        passed to multiples_of function, otherwise they are ignored. This way we can \n        test that multiples_of is used correctly. This is here for an illustration\n        of how create_autospec works. Not recommended for production code.\n        \"\"\"\n        multiple = multiply(integer,x, *args, **kwargs)\n        multiples.append(multiple)\n    \n    return multiples"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "from custom_math import multiply\n\ndef multiples_of(integer, *args, num_multiples=0, **kwargs):\n    \"\"\"\n    :rtype: list\n    \"\"\"\n    multiples = []\n    \n    for x in range(1, num_multiples + 1):\n        \"\"\"\n        Passing in args and kwargs here will only raise TypeError if values were \n        passed to multiples_of function, otherwise they are ignored. This way we can \n        test that multiples_of is used correctly. This is here for an illustration\n        of how create_autospec works. Not recommended for production code.\n        \"\"\"\n        multiple = multiply(integer,x, *args, **kwargs)\n        multiples.append(multiple)\n    \n    return multiples",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550346324048,
        "id": "668ede80-4263-455d-afc6-0d4f019f1ab7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550346324048,
        "parent_id": "302daf30-e450-4471-a21a-cfb5f0e7d594",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can test "
            ],
            [
              "multiples_of",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " alone by mocking out "
            ],
            [
              "multiply",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The below example uses the Python standard library unittest, but this can be used with other testing frameworks as well, like pytest or nose:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can test "
          },
          {
            "Text": "multiples_of",
            "AttrFlags": 2
          },
          {
            "Text": " alone by mocking out "
          },
          {
            "Text": "multiply",
            "AttrFlags": 2
          },
          {
            "Text": ". The below example uses the Python standard library unittest, but this can be used with other testing frameworks as well, like pytest or nose:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550346324048,
        "id": "1509286a-6429-452c-9168-6912dac38d63",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347020000,
        "parent_id": "302daf30-e450-4471-a21a-cfb5f0e7d594",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "from unittest.mock import create_autospec\nimport unittest\n\n# we import the entire module so we can mock out multiply\nimport custom_math \ncustom_math.multiply = create_autospec(custom_math.multiply)\nfrom process_math import multiples_of\n\nclass TestCustomMath(unittest.TestCase):\n    def test_multiples_of(self):\n        multiples = multiples_of(3, num_multiples=1)\n        custom_math.multiply.assert_called_with(3, 1)\n    \n    def test_multiples_of_with_bad_inputs(self):\n        with self.assertRaises(TypeError) as e:\n            multiples_of(1, \"extra arg\",  num_multiples=1) # this should raise a TypeError"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "from unittest.mock import create_autospec\nimport unittest\n\n# we import the entire module so we can mock out multiply\nimport custom_math \ncustom_math.multiply = create_autospec(custom_math.multiply)\nfrom process_math import multiples_of\n\nclass TestCustomMath(unittest.TestCase):\n    def test_multiples_of(self):\n        multiples = multiples_of(3, num_multiples=1)\n        custom_math.multiply.assert_called_with(3, 1)\n    \n    def test_multiples_of_with_bad_inputs(self):\n        with self.assertRaises(TypeError) as e:\n            multiples_of(1, \"extra arg\",  num_multiples=1) # this should raise a TypeError",
        "code_language": "Python"
      }
    ],
    "title": "Mocking functions with unittest.mock.create autospec",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}