{
  "ID": "71c9e461-f8d3-4787-958b-94b44c9d2a76",
  "Root": {
    "alive": true,
    "content": [
      "c03c59e0-e4ae-46dc-8c69-f8f74fe6ec27",
      "94683e8e-e1f6-4ce9-936d-4a8a02d6306e",
      "af0f307e-ef9c-420e-980a-1436dbfe097b",
      "82c42866-6e94-457e-a851-6d6fc6c75324",
      "36d0bc71-303c-40a8-b7a6-42947e8e7500",
      "fbbc23ac-9462-4992-a2d7-399096cd0f9c",
      "8773b26f-8ca4-4084-931a-2880cc7f3f65",
      "9abce455-cccb-4119-bc25-cf03d8aacbc3",
      "1cb8763b-db44-4334-8a2c-eb4b9b4051ed",
      "11eadf53-025a-46cb-a93c-91d299d26959",
      "b83e05b4-7179-4761-91ee-93e0ee2d0beb"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550392495385,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "71c9e461-f8d3-4787-958b-94b44c9d2a76",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550475540000,
    "parent_id": "e0ba4ef1-e15c-4c90-9f33-a87e69b01ebc",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Wrapping functions for ctypes"
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392495381,
        "id": "c03c59e0-e4ae-46dc-8c69-f8f74fe6ec27",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392495381,
        "parent_id": "71c9e461-f8d3-4787-958b-94b44c9d2a76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In some cases, a C function accepts a function pointer. As avid "
            ],
            [
              "ctypes",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " users, we would like to use those functions, and even pass python function as arguments."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In some cases, a C function accepts a function pointer. As avid "
          },
          {
            "Text": "ctypes",
            "AttrFlags": 2
          },
          {
            "Text": " users, we would like to use those functions, and even pass python function as arguments."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392495383,
        "id": "94683e8e-e1f6-4ce9-936d-4a8a02d6306e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392495383,
        "parent_id": "71c9e461-f8d3-4787-958b-94b44c9d2a76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s define a function:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s define a function:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392495384,
        "id": "af0f307e-ef9c-420e-980a-1436dbfe097b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392495384,
        "parent_id": "71c9e461-f8d3-4787-958b-94b44c9d2a76",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e def max(x, y):\n        return x if x \u003e= y else y"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003e\u003e\u003e def max(x, y):\n        return x if x \u003e= y else y",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392495384,
        "id": "82c42866-6e94-457e-a851-6d6fc6c75324",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392495384,
        "parent_id": "71c9e461-f8d3-4787-958b-94b44c9d2a76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now, that function takes two arguments and returns a result of the same type. For the sake of the example, let’s assume that type is an int."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now, that function takes two arguments and returns a result of the same type. For the sake of the example, let’s assume that type is an int."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392495384,
        "id": "36d0bc71-303c-40a8-b7a6-42947e8e7500",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392495384,
        "parent_id": "71c9e461-f8d3-4787-958b-94b44c9d2a76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Like we did on the array example, we can define an object that denotes that prototype:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Like we did on the array example, we can define an object that denotes that prototype:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392495384,
        "id": "fbbc23ac-9462-4992-a2d7-399096cd0f9c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392495384,
        "parent_id": "71c9e461-f8d3-4787-958b-94b44c9d2a76",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e CFUNCTYPE(c_int, c_int, c_int)\n\u003cCFunctionType object at 0xdeadbeef\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003e\u003e\u003e CFUNCTYPE(c_int, c_int, c_int)\n\u003cCFunctionType object at 0xdeadbeef\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392495384,
        "id": "8773b26f-8ca4-4084-931a-2880cc7f3f65",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392495384,
        "parent_id": "71c9e461-f8d3-4787-958b-94b44c9d2a76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "That prototype denotes a function that returns an "
            ],
            [
              "c_int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (the first argument), and accepts two "
            ],
            [
              "c_int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " arguments (the other arguments)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "That prototype denotes a function that returns an "
          },
          {
            "Text": "c_int",
            "AttrFlags": 2
          },
          {
            "Text": " (the first argument), and accepts two "
          },
          {
            "Text": "c_int",
            "AttrFlags": 2
          },
          {
            "Text": " arguments (the other arguments)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392495384,
        "id": "9abce455-cccb-4119-bc25-cf03d8aacbc3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392495384,
        "parent_id": "71c9e461-f8d3-4787-958b-94b44c9d2a76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now let’s wrap the function:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now let’s wrap the function:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392495385,
        "id": "1cb8763b-db44-4334-8a2c-eb4b9b4051ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392495385,
        "parent_id": "71c9e461-f8d3-4787-958b-94b44c9d2a76",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e CFUNCTYPE(c_int, c_int, c_int)(max)\n\u003cCFunctionType object at 0xdeadbeef\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003e\u003e\u003e CFUNCTYPE(c_int, c_int, c_int)(max)\n\u003cCFunctionType object at 0xdeadbeef\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392495385,
        "id": "11eadf53-025a-46cb-a93c-91d299d26959",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392495385,
        "parent_id": "71c9e461-f8d3-4787-958b-94b44c9d2a76",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Function prototypes have on more usage: They can wrap "
            ],
            [
              "ctypes",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function (like "
            ],
            [
              "libc.ntohl",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") and verify that the correct arguments are used when invoking the function."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Function prototypes have on more usage: They can wrap "
          },
          {
            "Text": "ctypes",
            "AttrFlags": 2
          },
          {
            "Text": " function (like "
          },
          {
            "Text": "libc.ntohl",
            "AttrFlags": 2
          },
          {
            "Text": ") and verify that the correct arguments are used when invoking the function."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550392495385,
        "id": "b83e05b4-7179-4761-91ee-93e0ee2d0beb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550392495385,
        "parent_id": "71c9e461-f8d3-4787-958b-94b44c9d2a76",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e libc.ntohl() # garbage in - garbage out\n\u003e\u003e\u003e CFUNCTYPE(c_int, c_int)(libc.ntohl)()\nTraceback (most recent call last):\n    File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\nTypeError: this function takes at least 1 argument (0 given)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003e\u003e\u003e libc.ntohl() # garbage in - garbage out\n\u003e\u003e\u003e CFUNCTYPE(c_int, c_int)(libc.ntohl)()\nTraceback (most recent call last):\n    File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\nTypeError: this function takes at least 1 argument (0 given)",
        "code_language": "Plain Text"
      }
    ],
    "title": "Wrapping functions for ctypes",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}