{
  "ID": "6993a623-73b1-48f1-96ab-315ada827486",
  "Root": {
    "alive": true,
    "content": [
      "9a96c04f-f253-4c66-9b59-e5ec13a26a99",
      "41188690-e537-427e-b770-09b54bee7ef0"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550388980276,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "6993a623-73b1-48f1-96ab-315ada827486",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550469060000,
    "parent_id": "6d63d0c5-50ae-4db4-9f07-35143758ec99",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Command line arguments"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388980272,
        "id": "9a96c04f-f253-4c66-9b59-e5ec13a26a99",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388980272,
        "parent_id": "6993a623-73b1-48f1-96ab-315ada827486",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Python has a variety of command-line switches which can be passed to "
            ],
            [
              "py",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". These can be found by performing "
            ],
            [
              "py --help",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which gives this output on Python 3.4:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Python has a variety of command-line switches which can be passed to "
          },
          {
            "Text": "py",
            "AttrFlags": 2
          },
          {
            "Text": ". These can be found by performing "
          },
          {
            "Text": "py --help",
            "AttrFlags": 2
          },
          {
            "Text": ", which gives this output on Python 3.4:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388980275,
        "id": "41188690-e537-427e-b770-09b54bee7ef0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388980275,
        "parent_id": "6993a623-73b1-48f1-96ab-315ada827486",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Python Launcher\n\nusage: py [ launcher-arguments ] [ python-arguments ] script [ script-arguments ]\n\nLauncher arguments:\n\n-2     : Launch the latest Python 2.x version\n-3     : Launch the latest Python 3.x version\n-X.Y   : Launch the specified Python version\n-X.Y-32: Launch the specified 32bit Python version\n\nThe following help text is from Python:\n\nusage: G:\\Python34\\python.exe [option] ... [-c cmd | -m mod | file | -] [arg] ...\nOptions and arguments (and corresponding environment variables):\n-b     : issue warnings about str(bytes_instance), str(bytearray_instance)\n         and comparing bytes/bytearray with str. (-bb: issue errors)\n-B     : don't write .py[co] files on import; also PYTHONDONTWRITEBYTECODE=x\n-c cmd : program passed in as string (terminates option list)\n-d     : debug output from parser; also PYTHONDEBUG=x\n-E     : ignore PYTHON* environment variables (such as PYTHONPATH)\n-h     : print this help message and exit (also --help)\n-i     : inspect interactively after running script; forces a prompt even\n         if stdin does not appear to be a terminal; also PYTHONINSPECT=x\n-I     : isolate Python from the user's environment (implies -E and -s)\n-m mod : run library module as a script (terminates option list)\n-O     : optimize generated bytecode slightly; also PYTHONOPTIMIZE=x\n-OO    : remove doc-strings in addition to the -O optimizations\n-q     : don't print version and copyright messages on interactive startup\n-s     : don't add user site directory to sys.path; also PYTHONNOUSERSITE\n-S     : don't imply 'import site' on initialization\n-u     : unbuffered binary stdout and stderr, stdin always buffered;\n         also PYTHONUNBUFFERED=x\n         see man page for details on internal buffering relating to '-u'\n-v     : verbose (trace import statements); also PYTHONVERBOSE=x\n         can be supplied multiple times to increase verbosity\n-V     : print the Python version number and exit (also --version)\n-W arg : warning control; arg is action:message:category:module:lineno\n         also PYTHONWARNINGS=arg\n-x     : skip first line of source, allowing use of non-Unix forms of #!cmd\n-X opt : set implementation-specific option\nfile   : program read from script file\n-      : program read from stdin (default; interactive mode if a tty)\narg ...: arguments passed to program in sys.argv[1:]\n\nOther environment variables:\nPYTHONSTARTUP: file executed on interactive startup (no default)\nPYTHONPATH   : ';'-separated list of directories prefixed to the\n               default module search path.  The result is sys.path.\nPYTHONHOME   : alternate \u003cprefix\u003e directory (or \u003cprefix\u003e;\u003cexec_prefix\u003e).\n               The default module search path uses \u003cprefix\u003e\\lib.\nPYTHONCASEOK : ignore case in 'import' statements (Windows).\nPYTHONIOENCODING: Encoding[:errors] used for stdin/stdout/stderr.\nPYTHONFAULTHANDLER: dump the Python traceback on fatal errors.\nPYTHONHASHSEED: if this variable is set to 'random', a random value is used\n   to seed the hashes of str, bytes and datetime objects.  It can also be\n   set to an integer in the range [0,4294967295] to get hash values with a\n   predictable seed."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Python Launcher\n\nusage: py [ launcher-arguments ] [ python-arguments ] script [ script-arguments ]\n\nLauncher arguments:\n\n-2     : Launch the latest Python 2.x version\n-3     : Launch the latest Python 3.x version\n-X.Y   : Launch the specified Python version\n-X.Y-32: Launch the specified 32bit Python version\n\nThe following help text is from Python:\n\nusage: G:\\Python34\\python.exe [option] ... [-c cmd | -m mod | file | -] [arg] ...\nOptions and arguments (and corresponding environment variables):\n-b     : issue warnings about str(bytes_instance), str(bytearray_instance)\n         and comparing bytes/bytearray with str. (-bb: issue errors)\n-B     : don't write .py[co] files on import; also PYTHONDONTWRITEBYTECODE=x\n-c cmd : program passed in as string (terminates option list)\n-d     : debug output from parser; also PYTHONDEBUG=x\n-E     : ignore PYTHON* environment variables (such as PYTHONPATH)\n-h     : print this help message and exit (also --help)\n-i     : inspect interactively after running script; forces a prompt even\n         if stdin does not appear to be a terminal; also PYTHONINSPECT=x\n-I     : isolate Python from the user's environment (implies -E and -s)\n-m mod : run library module as a script (terminates option list)\n-O     : optimize generated bytecode slightly; also PYTHONOPTIMIZE=x\n-OO    : remove doc-strings in addition to the -O optimizations\n-q     : don't print version and copyright messages on interactive startup\n-s     : don't add user site directory to sys.path; also PYTHONNOUSERSITE\n-S     : don't imply 'import site' on initialization\n-u     : unbuffered binary stdout and stderr, stdin always buffered;\n         also PYTHONUNBUFFERED=x\n         see man page for details on internal buffering relating to '-u'\n-v     : verbose (trace import statements); also PYTHONVERBOSE=x\n         can be supplied multiple times to increase verbosity\n-V     : print the Python version number and exit (also --version)\n-W arg : warning control; arg is action:message:category:module:lineno\n         also PYTHONWARNINGS=arg\n-x     : skip first line of source, allowing use of non-Unix forms of #!cmd\n-X opt : set implementation-specific option\nfile   : program read from script file\n-      : program read from stdin (default; interactive mode if a tty)\narg ...: arguments passed to program in sys.argv[1:]\n\nOther environment variables:\nPYTHONSTARTUP: file executed on interactive startup (no default)\nPYTHONPATH   : ';'-separated list of directories prefixed to the\n               default module search path.  The result is sys.path.\nPYTHONHOME   : alternate \u003cprefix\u003e directory (or \u003cprefix\u003e;\u003cexec_prefix\u003e).\n               The default module search path uses \u003cprefix\u003e\\lib.\nPYTHONCASEOK : ignore case in 'import' statements (Windows).\nPYTHONIOENCODING: Encoding[:errors] used for stdin/stdout/stderr.\nPYTHONFAULTHANDLER: dump the Python traceback on fatal errors.\nPYTHONHASHSEED: if this variable is set to 'random', a random value is used\n   to seed the hashes of str, bytes and datetime objects.  It can also be\n   set to an integer in the range [0,4294967295] to get hash values with a\n   predictable seed.",
        "code_language": "Plain Text"
      }
    ],
    "title": "Command line arguments",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}