{
  "ID": "c81d05bf-9e8e-41a8-829b-ea56c8290760",
  "Root": {
    "alive": true,
    "content": [
      "ef4b93f3-48f3-4230-b1f7-7480f1006788",
      "1869c83c-52c2-4bae-93a8-dc61483d7557",
      "025de1eb-ccae-4477-a4fe-220cfbb9a9b1",
      "abe13a80-3d48-4bd0-b7ce-ee9f16cfaf8c",
      "37839ceb-34a4-4744-9ee4-f8cc55df2590",
      "7bdec32c-b49b-4c55-afb7-769335214d35",
      "3e72a598-f581-484a-b19a-52cb953cc3bf",
      "95ff6a57-96d2-4eec-b8a1-5f8ab8276fe0",
      "78ab1bd0-1cbb-47e4-ac94-8cacd3fd1f02",
      "1a5ff1a5-dcc1-4097-bfd4-ae0881739057",
      "f24b602f-db95-46c9-b90b-b2166ca5dd2c",
      "b4f45caa-49b8-4541-8535-8adf18589356",
      "c7adc536-4411-428f-9afc-12045f6f76a7",
      "41d4f78f-eca7-4112-8efc-3570e8f65d78"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550229434059,
    "id": "c81d05bf-9e8e-41a8-829b-ea56c8290760",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550230260000,
    "parent_id": "eecffaeb-508c-45b9-93c4-ae07958e5f67",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Refactoring filter and map to list comprehensions"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229434056,
        "id": "ef4b93f3-48f3-4230-b1f7-7480f1006788",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229434056,
        "parent_id": "c81d05bf-9e8e-41a8-829b-ea56c8290760",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "filter",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "map",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " functions should often be replaced by "
            ],
            [
              "list comprehensions",
              [
                [
                  "a",
                  "https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions"
                ]
              ]
            ],
            [
              ". Guido Van Rossum describes this well in an "
            ],
            [
              "open letter in 2005",
              [
                [
                  "a",
                  "http://www.artima.com/weblogs/viewpost.jsp?thread=98196"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "filter",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "map",
            "AttrFlags": 2
          },
          {
            "Text": " functions should often be replaced by "
          },
          {
            "Text": "list comprehensions",
            "Link": "https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions"
          },
          {
            "Text": ". Guido Van Rossum describes this well in an "
          },
          {
            "Text": "open letter in 2005",
            "Link": "http://www.artima.com/weblogs/viewpost.jsp?thread=98196"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229434057,
        "id": "1869c83c-52c2-4bae-93a8-dc61483d7557",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229434057,
        "parent_id": "c81d05bf-9e8e-41a8-829b-ea56c8290760",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "filter(P, S) is almost always written clearer as [x for x in S if P(x)], and this has the huge advantage that the most common usages involve predicates that are comparisons, e.g. x==42, and defining a lambda for that just requires much more effort for the reader (plus the lambda is slower than the list comprehension). Even more so for map(F, S) which becomes [F(x) for x in S]. Of course, in many cases you’d be able to use generator expressions instead."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "filter(P, S) is almost always written clearer as [x for x in S if P(x)], and this has the huge advantage that the most common usages involve predicates that are comparisons, e.g. x==42, and defining a lambda for that just requires much more effort for the reader (plus the lambda is slower than the list comprehension). Even more so for map(F, S) which becomes [F(x) for x in S]. Of course, in many cases you’d be able to use generator expressions instead."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229434057,
        "id": "025de1eb-ccae-4477-a4fe-220cfbb9a9b1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229434057,
        "parent_id": "c81d05bf-9e8e-41a8-829b-ea56c8290760",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following lines of code are considered “"
            ],
            [
              "not pythonic",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "” and will raise errors in many python linters."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following lines of code are considered “"
          },
          {
            "Text": "not pythonic",
            "AttrFlags": 4
          },
          {
            "Text": "” and will raise errors in many python linters."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229434057,
        "id": "abe13a80-3d48-4bd0-b7ce-ee9f16cfaf8c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550230260000,
        "parent_id": "c81d05bf-9e8e-41a8-829b-ea56c8290760",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "filter(lambda x: x % 2 == 0, range(10)) # even numbers \u003c 10\nmap(lambda x: 2*x, range(10)) # multiply each number by two\nreduce(lambda x,y: x+y, range(10)) # sum of all elements in list"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "filter(lambda x: x % 2 == 0, range(10)) # even numbers \u003c 10\nmap(lambda x: 2*x, range(10)) # multiply each number by two\nreduce(lambda x,y: x+y, range(10)) # sum of all elements in list",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229434057,
        "id": "37839ceb-34a4-4744-9ee4-f8cc55df2590",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229434057,
        "parent_id": "c81d05bf-9e8e-41a8-829b-ea56c8290760",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Taking what we have learned from the previous quote, we can break down these "
            ],
            [
              "filter",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "map",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " expressions into their equivalent "
            ],
            [
              "list comprehensions",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "; also removing the "
            ],
            [
              "lambda",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " functions from each - making the code more readable in the process."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Taking what we have learned from the previous quote, we can break down these "
          },
          {
            "Text": "filter",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "map",
            "AttrFlags": 2
          },
          {
            "Text": " expressions into their equivalent "
          },
          {
            "Text": "list comprehensions",
            "AttrFlags": 4
          },
          {
            "Text": "; also removing the "
          },
          {
            "Text": "lambda",
            "AttrFlags": 4
          },
          {
            "Text": " functions from each - making the code more readable in the process."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229434057,
        "id": "7bdec32c-b49b-4c55-afb7-769335214d35",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550230260000,
        "parent_id": "c81d05bf-9e8e-41a8-829b-ea56c8290760",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "# Filter:\n# P(x) = x % 2 == 0\n# S = range(10)\n[x for x in range(10) if x % 2 == 0]\n\n# Map\n# F(x) = 2*x\n# S = range(10)\n[2*x for x in range(10)]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "# Filter:\n# P(x) = x % 2 == 0\n# S = range(10)\n[x for x in range(10) if x % 2 == 0]\n\n# Map\n# F(x) = 2*x\n# S = range(10)\n[2*x for x in range(10)]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229434058,
        "id": "3e72a598-f581-484a-b19a-52cb953cc3bf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229434058,
        "parent_id": "c81d05bf-9e8e-41a8-829b-ea56c8290760",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Readability becomes even more apparent when dealing with chaining functions. Where due to readability, the results of one map or filter function should be passed as a result to the next; with simple cases, these can be replaced with a single list comprehension. Further, we can easily tell from the list comprehension what the outcome of our process is, where there is more cognitive load when reasoning about the chained Map \u0026 Filter process."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Readability becomes even more apparent when dealing with chaining functions. Where due to readability, the results of one map or filter function should be passed as a result to the next; with simple cases, these can be replaced with a single list comprehension. Further, we can easily tell from the list comprehension what the outcome of our process is, where there is more cognitive load when reasoning about the chained Map \u0026 Filter process."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229434058,
        "id": "95ff6a57-96d2-4eec-b8a1-5f8ab8276fe0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550230260000,
        "parent_id": "c81d05bf-9e8e-41a8-829b-ea56c8290760",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "# Map \u0026 Filter\nfiltered = filter(lambda x: x % 2 == 0, range(10))\nresults = map(lambda x: 2*x, filtered)\n\n# List comprehension\nresults = [2*x for x in range(10) if x % 2 == 0]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "# Map \u0026 Filter\nfiltered = filter(lambda x: x % 2 == 0, range(10))\nresults = map(lambda x: 2*x, filtered)\n\n# List comprehension\nresults = [2*x for x in range(10) if x % 2 == 0]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229434058,
        "id": "78ab1bd0-1cbb-47e4-ac94-8cacd3fd1f02",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229434058,
        "parent_id": "c81d05bf-9e8e-41a8-829b-ea56c8290760",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Refactoring - Quick Reference"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Refactoring - Quick Reference"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229434058,
        "id": "1a5ff1a5-dcc1-4097-bfd4-ae0881739057",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229434058,
        "parent_id": "c81d05bf-9e8e-41a8-829b-ea56c8290760",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Map",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Map",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229434058,
        "id": "f24b602f-db95-46c9-b90b-b2166ca5dd2c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550230260000,
        "parent_id": "c81d05bf-9e8e-41a8-829b-ea56c8290760",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "map(F, S) == [F(x) for x in S]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "map(F, S) == [F(x) for x in S]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229434059,
        "id": "b4f45caa-49b8-4541-8535-8adf18589356",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229434059,
        "parent_id": "c81d05bf-9e8e-41a8-829b-ea56c8290760",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Filter",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Filter",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229434059,
        "id": "c7adc536-4411-428f-9afc-12045f6f76a7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550230260000,
        "parent_id": "c81d05bf-9e8e-41a8-829b-ea56c8290760",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "filter(P, S) == [x for x in S if P(x)]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "filter(P, S) == [x for x in S if P(x)]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229434059,
        "id": "41d4f78f-eca7-4112-8efc-3570e8f65d78",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229434059,
        "parent_id": "c81d05bf-9e8e-41a8-829b-ea56c8290760",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "where ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "F",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " and ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "P",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " are functions which respectively transform input values and return a ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "bool",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "where ",
            "AttrFlags": 4
          },
          {
            "Text": "F",
            "AttrFlags": 6
          },
          {
            "Text": " and ",
            "AttrFlags": 4
          },
          {
            "Text": "P",
            "AttrFlags": 6
          },
          {
            "Text": " are functions which respectively transform input values and return a ",
            "AttrFlags": 4
          },
          {
            "Text": "bool",
            "AttrFlags": 6
          }
        ]
      }
    ],
    "title": "Refactoring filter and map to list comprehensions"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}