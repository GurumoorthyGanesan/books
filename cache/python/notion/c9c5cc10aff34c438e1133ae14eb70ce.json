{
  "ID": "c9c5cc10-aff3-4c43-8e11-33ae14eb70ce",
  "Root": {
    "alive": true,
    "content": [
      "74ea3589-887b-42e9-be73-8f8a71c00d3f",
      "b929b2e1-c192-41bf-8225-e1a4357f8683",
      "29b1877b-6d67-4780-84a4-2738fa8dd154",
      "2fe19546-34ee-46b1-b0fe-eefaf5936f75",
      "92094a7c-4020-4069-b7a7-505a8fd2e3f3",
      "e855198b-6998-4130-804d-e55fa595cf84",
      "b9cb8d07-f191-405b-8e43-ba0448eb1b0c",
      "ce20731f-112d-4e2a-9920-ebdb17320dde",
      "3c822d88-cdbe-408b-910f-d3cab8da47f2",
      "9e0957fe-c0ff-4090-a87b-3dce4f87fbf3",
      "687ac592-da8f-4c51-8292-3815a1fd3ef0",
      "3044c9c2-2d84-4b51-9350-dc75e7cca43e",
      "07d34860-b856-476c-aa8c-ab60409ef437",
      "47e8871a-bccf-4329-a038-4e938cab68f0"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550389528191,
    "id": "c9c5cc10-aff3-4c43-8e11-33ae14eb70ce",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550469960000,
    "parent_id": "0b9e0e51-5eaf-4610-9728-abc0e494ca3d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "How to consume messages from RabbitMQ"
        ]
      ]
    },
    "type": "page",
    "version": 6,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389528187,
        "id": "74ea3589-887b-42e9-be73-8f8a71c00d3f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389528187,
        "parent_id": "c9c5cc10-aff3-4c43-8e11-33ae14eb70ce",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Start with importing the library."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Start with importing the library."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389528189,
        "id": "b929b2e1-c192-41bf-8225-e1a4357f8683",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389528189,
        "parent_id": "c9c5cc10-aff3-4c43-8e11-33ae14eb70ce",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "from amqpstorm import Connection"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "from amqpstorm import Connection",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389528189,
        "id": "29b1877b-6d67-4780-84a4-2738fa8dd154",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389528189,
        "parent_id": "c9c5cc10-aff3-4c43-8e11-33ae14eb70ce",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When consuming messages, we first need to define a function to handle the incoming messages. This can be any callable function, and has to take a message object, or a message tuple (depending on the "
            ],
            [
              "to_tuple",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " parameter defined in "
            ],
            [
              "start_consuming",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When consuming messages, we first need to define a function to handle the incoming messages. This can be any callable function, and has to take a message object, or a message tuple (depending on the "
          },
          {
            "Text": "to_tuple",
            "AttrFlags": 2
          },
          {
            "Text": " parameter defined in "
          },
          {
            "Text": "start_consuming",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389528189,
        "id": "2fe19546-34ee-46b1-b0fe-eefaf5936f75",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389528189,
        "parent_id": "c9c5cc10-aff3-4c43-8e11-33ae14eb70ce",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Besides processing the data from the incoming message, we will also have to Acknowledge or Reject the message. This is important, as we need to let RabbitMQ know that we properly received and processed the message."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Besides processing the data from the incoming message, we will also have to Acknowledge or Reject the message. This is important, as we need to let RabbitMQ know that we properly received and processed the message."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389528189,
        "id": "92094a7c-4020-4069-b7a7-505a8fd2e3f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389528189,
        "parent_id": "c9c5cc10-aff3-4c43-8e11-33ae14eb70ce",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "def on_message(message):\n    \"\"\"This function is called on message received.\n\n    :param message: Delivered message.\n    :return:\n    \"\"\"\n    print(\"Message:\", message.body)\n\n    # Acknowledge that we handled the message without any issues.\n    message.ack()\n\n    # Reject the message.\n    # message.reject()\n\n    # Reject the message, and put it back in the queue.\n    # message.reject(requeue=True)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def on_message(message):\n    \"\"\"This function is called on message received.\n\n    :param message: Delivered message.\n    :return:\n    \"\"\"\n    print(\"Message:\", message.body)\n\n    # Acknowledge that we handled the message without any issues.\n    message.ack()\n\n    # Reject the message.\n    # message.reject()\n\n    # Reject the message, and put it back in the queue.\n    # message.reject(requeue=True)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389528190,
        "id": "e855198b-6998-4130-804d-e55fa595cf84",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389528190,
        "parent_id": "c9c5cc10-aff3-4c43-8e11-33ae14eb70ce",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Next we need to set up the connection to the RabbitMQ server."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Next we need to set up the connection to the RabbitMQ server."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389528190,
        "id": "b9cb8d07-f191-405b-8e43-ba0448eb1b0c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389528190,
        "parent_id": "c9c5cc10-aff3-4c43-8e11-33ae14eb70ce",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "connection = Connection('127.0.0.1', 'guest', 'guest')"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "connection = Connection('127.0.0.1', 'guest', 'guest')",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389528190,
        "id": "ce20731f-112d-4e2a-9920-ebdb17320dde",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389528190,
        "parent_id": "c9c5cc10-aff3-4c43-8e11-33ae14eb70ce",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "After that we need to set up a channel. Each connection can have multiple channels, and in general when performing multi-threaded tasks, it’s recommended (but not required) to have one per thread."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "After that we need to set up a channel. Each connection can have multiple channels, and in general when performing multi-threaded tasks, it’s recommended (but not required) to have one per thread."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389528190,
        "id": "3c822d88-cdbe-408b-910f-d3cab8da47f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389528190,
        "parent_id": "c9c5cc10-aff3-4c43-8e11-33ae14eb70ce",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "channel = connection.channel()"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "channel = connection.channel()",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389528190,
        "id": "9e0957fe-c0ff-4090-a87b-3dce4f87fbf3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389528190,
        "parent_id": "c9c5cc10-aff3-4c43-8e11-33ae14eb70ce",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Once we have our channel set up, we need to let RabbitMQ know that we want to start consuming messages. In this case we will use our previously defined "
            ],
            [
              "on_message",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function to handle all our consumed messages."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Once we have our channel set up, we need to let RabbitMQ know that we want to start consuming messages. In this case we will use our previously defined "
          },
          {
            "Text": "on_message",
            "AttrFlags": 2
          },
          {
            "Text": " function to handle all our consumed messages."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389528190,
        "id": "687ac592-da8f-4c51-8292-3815a1fd3ef0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389528190,
        "parent_id": "c9c5cc10-aff3-4c43-8e11-33ae14eb70ce",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The queue we will be listening to on the RabbitMQ server is going to be "
            ],
            [
              "simple_queue",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and we are also telling RabbitMQ that we will be acknowledging all incoming messages once we are done with them."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The queue we will be listening to on the RabbitMQ server is going to be "
          },
          {
            "Text": "simple_queue",
            "AttrFlags": 2
          },
          {
            "Text": ", and we are also telling RabbitMQ that we will be acknowledging all incoming messages once we are done with them."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389528190,
        "id": "3044c9c2-2d84-4b51-9350-dc75e7cca43e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389528190,
        "parent_id": "c9c5cc10-aff3-4c43-8e11-33ae14eb70ce",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "channel.basic.consume(callback=on_message, queue='simple_queue', no_ack=False)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "channel.basic.consume(callback=on_message, queue='simple_queue', no_ack=False)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389528190,
        "id": "07d34860-b856-476c-aa8c-ab60409ef437",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389528190,
        "parent_id": "c9c5cc10-aff3-4c43-8e11-33ae14eb70ce",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finally we need to start the IO loop to start processing messages delivered by the RabbitMQ server."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finally we need to start the IO loop to start processing messages delivered by the RabbitMQ server."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550389528190,
        "id": "47e8871a-bccf-4329-a038-4e938cab68f0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550389528190,
        "parent_id": "c9c5cc10-aff3-4c43-8e11-33ae14eb70ce",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "channel.start_consuming(to_tuple=False)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "channel.start_consuming(to_tuple=False)",
        "code_language": "Plain Text"
      }
    ],
    "title": "How to consume messages from RabbitMQ"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}