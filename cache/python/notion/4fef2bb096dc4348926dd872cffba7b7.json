{
  "ID": "4fef2bb0-96dc-4348-926d-d872cffba7b7",
  "Root": {
    "alive": true,
    "content": [
      "e634efea-0953-48fc-8fd2-8b291f8642fe",
      "de59d222-8802-46fb-98ca-e14046ed5702",
      "c24fa19f-9ca9-47c5-9906-ce74478fadf7",
      "0b463770-369b-4d64-97bf-f6af0e00ffef",
      "f937c23c-6611-41eb-927b-85d77c5de843",
      "4fd65831-cee0-4dd0-99ec-7101922e740c",
      "c859fd64-942e-4082-957c-738e38374b9d",
      "de4fb288-d286-4d60-bb6a-bd735d3fc610",
      "9fff965d-213a-4fe0-9475-b6462dd5a37c",
      "1da13cf4-a073-4f75-ac88-8260e38a5d0e",
      "1f2376e8-6a5b-4a3c-9091-0d4b102f4aa6",
      "3f71ec14-ea23-431b-bb9a-0bf22b395584",
      "1016e74b-7dc5-4c7c-a8aa-6e803a9286af",
      "b8989e28-f538-4a04-ad71-27cf98eca45a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550390571383,
    "id": "4fef2bb0-96dc-4348-926d-d872cffba7b7",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550472960000,
    "parent_id": "622ea0d5-eb28-479d-b491-0064b7bd3e2b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Mixins"
        ]
      ]
    },
    "type": "page",
    "version": 6,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390571381,
        "id": "e634efea-0953-48fc-8fd2-8b291f8642fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390571381,
        "parent_id": "4fef2bb0-96dc-4348-926d-d872cffba7b7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Object oriented programming language, a mixin is a class that contains methods for use by other classes without having to be the parent class of those other classes. How those other classes gain access to the mixin’s methods depends on the language."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Object oriented programming language, a mixin is a class that contains methods for use by other classes without having to be the parent class of those other classes. How those other classes gain access to the mixin’s methods depends on the language."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390571382,
        "id": "de59d222-8802-46fb-98ca-e14046ed5702",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390571382,
        "parent_id": "4fef2bb0-96dc-4348-926d-d872cffba7b7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It provides a mechanism for multiple inheritance by allowing multiple classes to use the common functionality, but without the complex semantics of multiple inheritance. Mixins are useful when a programmer wants to share functionality between different classes. Instead of repeating the same code over and over again, the common functionality can simply be grouped into a mixin and then inherited into each class that requires it."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It provides a mechanism for multiple inheritance by allowing multiple classes to use the common functionality, but without the complex semantics of multiple inheritance. Mixins are useful when a programmer wants to share functionality between different classes. Instead of repeating the same code over and over again, the common functionality can simply be grouped into a mixin and then inherited into each class that requires it."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390571382,
        "id": "c24fa19f-9ca9-47c5-9906-ce74478fadf7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390571382,
        "parent_id": "4fef2bb0-96dc-4348-926d-d872cffba7b7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When we use more than one mixins, Order of mixins are important. here is a simple example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When we use more than one mixins, Order of mixins are important. here is a simple example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390571382,
        "id": "0b463770-369b-4d64-97bf-f6af0e00ffef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390571382,
        "parent_id": "4fef2bb0-96dc-4348-926d-d872cffba7b7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Mixin1(object):\n    def test(self):\n        print \"Mixin1\"\n\nclass Mixin2(object):\n    def test(self):\n        print \"Mixin2\"\n\nclass MyClass(Mixin1, Mixin2):\n    pass"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Mixin1(object):\n    def test(self):\n        print \"Mixin1\"\n\nclass Mixin2(object):\n    def test(self):\n        print \"Mixin2\"\n\nclass MyClass(Mixin1, Mixin2):\n    pass",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390571382,
        "id": "f937c23c-6611-41eb-927b-85d77c5de843",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390571382,
        "parent_id": "4fef2bb0-96dc-4348-926d-d872cffba7b7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example we call "
            ],
            [
              "MyClass",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "test",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method,"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example we call "
          },
          {
            "Text": "MyClass",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "test",
            "AttrFlags": 2
          },
          {
            "Text": " method,"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390571382,
        "id": "4fd65831-cee0-4dd0-99ec-7101922e740c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390571382,
        "parent_id": "4fef2bb0-96dc-4348-926d-d872cffba7b7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e obj = MyClass()\n\u003e\u003e\u003e obj.test()\nMixin1"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003e\u003e\u003e obj = MyClass()\n\u003e\u003e\u003e obj.test()\nMixin1",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390571382,
        "id": "c859fd64-942e-4082-957c-738e38374b9d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390571382,
        "parent_id": "4fef2bb0-96dc-4348-926d-d872cffba7b7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Result must be Mixin1 because Order is left to right. This could be show unexpected results when super classes add with it. So reverse order is more good just like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Result must be Mixin1 because Order is left to right. This could be show unexpected results when super classes add with it. So reverse order is more good just like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390571383,
        "id": "de4fb288-d286-4d60-bb6a-bd735d3fc610",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390571383,
        "parent_id": "4fef2bb0-96dc-4348-926d-d872cffba7b7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class MyClass(Mixin2, Mixin1):\n    pass"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class MyClass(Mixin2, Mixin1):\n    pass",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390571383,
        "id": "9fff965d-213a-4fe0-9475-b6462dd5a37c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390571383,
        "parent_id": "4fef2bb0-96dc-4348-926d-d872cffba7b7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Result will be:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Result will be:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390571383,
        "id": "1da13cf4-a073-4f75-ac88-8260e38a5d0e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390571383,
        "parent_id": "4fef2bb0-96dc-4348-926d-d872cffba7b7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e obj = MyClass()\n\u003e\u003e\u003e obj.test()\nMixin2"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003e\u003e\u003e obj = MyClass()\n\u003e\u003e\u003e obj.test()\nMixin2",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390571383,
        "id": "1f2376e8-6a5b-4a3c-9091-0d4b102f4aa6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390571383,
        "parent_id": "4fef2bb0-96dc-4348-926d-d872cffba7b7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Mixins can be used to define custom plugins."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Mixins can be used to define custom plugins."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390571383,
        "id": "3f71ec14-ea23-431b-bb9a-0bf22b395584",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390571383,
        "parent_id": "4fef2bb0-96dc-4348-926d-d872cffba7b7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Base(object):\n    def test(self):\n        print(\"Base.\")\n\nclass PluginA(object):\n    def test(self):\n        super().test()\n        print(\"Plugin A.\")\n\nclass PluginB(object):\n    def test(self):\n        super().test()\n        print(\"Plugin B.\")\n\nplugins = PluginA, PluginB\n\nclass PluginSystemA(PluginA, Base):\n    pass"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Base(object):\n    def test(self):\n        print(\"Base.\")\n\nclass PluginA(object):\n    def test(self):\n        super().test()\n        print(\"Plugin A.\")\n\nclass PluginB(object):\n    def test(self):\n        super().test()\n        print(\"Plugin B.\")\n\nplugins = PluginA, PluginB\n\nclass PluginSystemA(PluginA, Base):\n    pass",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390571383,
        "id": "1016e74b-7dc5-4c7c-a8aa-6e803a9286af",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390571383,
        "parent_id": "4fef2bb0-96dc-4348-926d-d872cffba7b7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class PluginSystemB(PluginB, Base):\n    pass\n\nPluginSystemA().test()\n# Base.\n# Plugin A."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class PluginSystemB(PluginB, Base):\n    pass\n\nPluginSystemA().test()\n# Base.\n# Plugin A.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550390571383,
        "id": "b8989e28-f538-4a04-ad71-27cf98eca45a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550390571383,
        "parent_id": "4fef2bb0-96dc-4348-926d-d872cffba7b7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "PluginSystemB().test()\n# Base.\n# Plugin B."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "PluginSystemB().test()\n# Base.\n# Plugin B.",
        "code_language": "Plain Text"
      }
    ],
    "title": "Mixins"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}