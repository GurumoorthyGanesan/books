{
  "ID": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
  "Root": {
    "alive": true,
    "content": [
      "d2c92522-e937-46ce-91cf-37df4b6fe736",
      "f17b5479-8e68-4fad-a01e-ffea97f7ae94",
      "2302037d-b54d-4099-a763-513737ce5841",
      "b4f90364-3da0-4db0-bfd3-6bf7c6134c35",
      "ea7116af-c0aa-491b-a8b7-3cd561a5e390",
      "2c92935b-62dc-4e25-b35d-e260dcc41c55",
      "cf6d8d6e-853e-484e-ba24-d193f4f58154",
      "b1a4f282-7cbf-41b3-a571-ab287e4e0b8d",
      "a6c130e5-49bd-41f1-890c-3121149d7930",
      "5b567059-f3fe-4a19-86c8-f6811700c19f",
      "3f0c744c-ae5c-4383-ba33-3218ecd19f8d",
      "b7bac300-7838-429a-b4a6-70b0c30d0201",
      "b6855172-2d71-45f7-9ed6-3ecf4acd5f08",
      "c0bf68f6-d723-499e-94ee-548901d72a7f",
      "90679e9e-a70a-4aa4-b079-388f9ddd40bd",
      "8e089cbb-5bca-48ba-bc55-7d0677e9da0b",
      "6f9279c0-4d0d-4734-9974-7da328881ba1",
      "ca7dacca-e296-46d5-a52f-c11d9998a312",
      "2ef73650-caf8-4492-bcc5-231381049090",
      "3a6c8f74-422c-4eb8-be62-d04933fcd4f3",
      "d2961ae0-3ff1-4558-b115-03cd1ad2d918",
      "a961239b-6e2e-43e8-af3f-5e01a08f2dca",
      "bf14de1e-f543-4699-9f8d-1fbfe1c830ac"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550347957065,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550348040000,
    "parent_id": "6b6906c1-a818-41da-b196-40ce5c79d75d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Integer Division"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550348040000,
        "id": "d2c92522-e937-46ce-91cf-37df4b6fe736",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550348040000,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "@Needs tweaking"
            ]
          ]
        },
        "type": "text",
        "version": 19,
        "inline_content": [
          {
            "Text": "@Needs tweaking"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957052,
        "id": "f17b5479-8e68-4fad-a01e-ffea97f7ae94",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957052,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The standard "
            ],
            [
              "division symbol",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " ("
            ],
            [
              "/",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") operates differently in Python 3 and Python 2 when applied to integers."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The standard "
          },
          {
            "Text": "division symbol",
            "AttrFlags": 1
          },
          {
            "Text": " ("
          },
          {
            "Text": "/",
            "AttrFlags": 2
          },
          {
            "Text": ") operates differently in Python 3 and Python 2 when applied to integers."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957058,
        "id": "2302037d-b54d-4099-a763-513737ce5841",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957058,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When dividing an integer by another integer in Python 3, the division operation "
            ],
            [
              "x / y",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " represents a "
            ],
            [
              "true division",
              [
                [
                  "b"
                ],
                [
                  "a",
                  "https://docs.python.org/2.2/whatsnew/node7.html"
                ]
              ]
            ],
            [
              " (uses "
            ],
            [
              "__truediv__",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.python.org/3/library/operator.html#operator.__truediv__"
                ]
              ]
            ],
            [
              " method) and produces a floating point result. Meanwhile, the same operation in Python 2 represents a "
            ],
            [
              "classic division",
              [
                [
                  "b"
                ],
                [
                  "a",
                  "https://docs.python.org/2.2/whatsnew/node7.html"
                ]
              ]
            ],
            [
              " that rounds the result down toward negative infinity (also known as taking the "
            ],
            [
              "floor",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When dividing an integer by another integer in Python 3, the division operation "
          },
          {
            "Text": "x / y",
            "AttrFlags": 2
          },
          {
            "Text": " represents a "
          },
          {
            "Text": "true division",
            "AttrFlags": 1,
            "Link": "https://docs.python.org/2.2/whatsnew/node7.html"
          },
          {
            "Text": " (uses "
          },
          {
            "Text": "__truediv__",
            "AttrFlags": 2,
            "Link": "https://docs.python.org/3/library/operator.html#operator.__truediv__"
          },
          {
            "Text": " method) and produces a floating point result. Meanwhile, the same operation in Python 2 represents a "
          },
          {
            "Text": "classic division",
            "AttrFlags": 1,
            "Link": "https://docs.python.org/2.2/whatsnew/node7.html"
          },
          {
            "Text": " that rounds the result down toward negative infinity (also known as taking the "
          },
          {
            "Text": "floor",
            "AttrFlags": 4
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957058,
        "id": "b4f90364-3da0-4db0-bfd3-6bf7c6134c35",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957058,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957058,
        "id": "ea7116af-c0aa-491b-a8b7-3cd561a5e390",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957058,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "| Code | Python 2 output | Python 3 output | |–––––|——————|—————––| |"
            ],
            [
              "3 / 2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |1 |1.5 | |"
            ],
            [
              "2 / 3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |0 |0.6666666666666666 | |"
            ],
            [
              "-3 / 2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |-2 |-1.5 |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "| Code | Python 2 output | Python 3 output | |–––––|——————|—————––| |"
          },
          {
            "Text": "3 / 2",
            "AttrFlags": 2
          },
          {
            "Text": " |1 |1.5 | |"
          },
          {
            "Text": "2 / 3",
            "AttrFlags": 2
          },
          {
            "Text": " |0 |0.6666666666666666 | |"
          },
          {
            "Text": "-3 / 2",
            "AttrFlags": 2
          },
          {
            "Text": " |-2 |-1.5 |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957059,
        "id": "2c92935b-62dc-4e25-b35d-e260dcc41c55",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957059,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The rounding-towards-zero behavior was deprecated in "
            ],
            [
              "Python 2.2",
              [
                [
                  "a",
                  "https://www.python.org/download/releases/2.2/"
                ]
              ]
            ],
            [
              ", but remains in Python 2.7 for the sake of backward compatibility and was removed in Python 3."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The rounding-towards-zero behavior was deprecated in "
          },
          {
            "Text": "Python 2.2",
            "Link": "https://www.python.org/download/releases/2.2/"
          },
          {
            "Text": ", but remains in Python 2.7 for the sake of backward compatibility and was removed in Python 3."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957059,
        "id": "cf6d8d6e-853e-484e-ba24-d193f4f58154",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957059,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " To get a "
            ],
            [
              "float",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " result in Python 2 (without floor rounding) we can specify one of the operands with the decimal point. The above example of "
            ],
            [
              "2/3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which gives "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in Python 2 shall be used as "
            ],
            [
              "2 / 3.0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "2.0 / 3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "2.0/3.0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to get "
            ],
            [
              "0.6666666666666666",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note:",
            "AttrFlags": 1
          },
          {
            "Text": " To get a "
          },
          {
            "Text": "float",
            "AttrFlags": 4
          },
          {
            "Text": " result in Python 2 (without floor rounding) we can specify one of the operands with the decimal point. The above example of "
          },
          {
            "Text": "2/3",
            "AttrFlags": 2
          },
          {
            "Text": " which gives "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": " in Python 2 shall be used as "
          },
          {
            "Text": "2 / 3.0",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "2.0 / 3",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "2.0/3.0",
            "AttrFlags": 2
          },
          {
            "Text": " to get "
          },
          {
            "Text": "0.6666666666666666",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957060,
        "id": "b1a4f282-7cbf-41b3-a571-ab287e4e0b8d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957060,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "| Code | Python 2 output | Python 3 output | |———–|——————|——————| |"
            ],
            [
              "3.0 / 2.0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "|1.5 |1.5 | |"
            ],
            [
              "2 / 3.0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |0.6666666666666666|0.6666666666666666| |"
            ],
            [
              "-3.0 / 2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |-1.5 |-1.5 |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "| Code | Python 2 output | Python 3 output | |———–|——————|——————| |"
          },
          {
            "Text": "3.0 / 2.0",
            "AttrFlags": 2
          },
          {
            "Text": "|1.5 |1.5 | |"
          },
          {
            "Text": "2 / 3.0",
            "AttrFlags": 2
          },
          {
            "Text": " |0.6666666666666666|0.6666666666666666| |"
          },
          {
            "Text": "-3.0 / 2",
            "AttrFlags": 2
          },
          {
            "Text": " |-1.5 |-1.5 |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957060,
        "id": "a6c130e5-49bd-41f1-890c-3121149d7930",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957060,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957061,
        "id": "5b567059-f3fe-4a19-86c8-f6811700c19f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957061,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There is also the "
            ],
            [
              "floor division operator",
              [
                [
                  "b"
                ],
                [
                  "a",
                  "http://python-reference.readthedocs.io/en/latest/docs/operators/floor_division.html"
                ]
              ]
            ],
            [
              " ("
            ],
            [
              "//",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "), which works the same way in both versions: it rounds down to the nearest integer. (although a float is returned when used with floats) In both versions the "
            ],
            [
              "//",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator maps to "
            ],
            [
              "__floordiv__",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.python.org/3/library/operator.html#operator.__floordiv__"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There is also the "
          },
          {
            "Text": "floor division operator",
            "AttrFlags": 1,
            "Link": "http://python-reference.readthedocs.io/en/latest/docs/operators/floor_division.html"
          },
          {
            "Text": " ("
          },
          {
            "Text": "//",
            "AttrFlags": 2
          },
          {
            "Text": "), which works the same way in both versions: it rounds down to the nearest integer. (although a float is returned when used with floats) In both versions the "
          },
          {
            "Text": "//",
            "AttrFlags": 2
          },
          {
            "Text": " operator maps to "
          },
          {
            "Text": "__floordiv__",
            "AttrFlags": 2,
            "Link": "https://docs.python.org/3/library/operator.html#operator.__floordiv__"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957061,
        "id": "3f0c744c-ae5c-4383-ba33-3218ecd19f8d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957061,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "| Code | Python 2 output | Python 3 output | |———––|—————–|—————–| |"
            ],
            [
              "3 // 2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |1 |1 | |"
            ],
            [
              "2 // 3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |0 |0 | |"
            ],
            [
              "-3 // 2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |-2 |-2 | |"
            ],
            [
              "3.0 // 2.0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "|1.0 |1.0 | |"
            ],
            [
              "2.0 // 3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |0.0 |0.0 | |"
            ],
            [
              "-3 // 2.0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |-2.0 |-2.0 |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "| Code | Python 2 output | Python 3 output | |———––|—————–|—————–| |"
          },
          {
            "Text": "3 // 2",
            "AttrFlags": 2
          },
          {
            "Text": " |1 |1 | |"
          },
          {
            "Text": "2 // 3",
            "AttrFlags": 2
          },
          {
            "Text": " |0 |0 | |"
          },
          {
            "Text": "-3 // 2",
            "AttrFlags": 2
          },
          {
            "Text": " |-2 |-2 | |"
          },
          {
            "Text": "3.0 // 2.0",
            "AttrFlags": 2
          },
          {
            "Text": "|1.0 |1.0 | |"
          },
          {
            "Text": "2.0 // 3",
            "AttrFlags": 2
          },
          {
            "Text": " |0.0 |0.0 | |"
          },
          {
            "Text": "-3 // 2.0",
            "AttrFlags": 2
          },
          {
            "Text": " |-2.0 |-2.0 |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957061,
        "id": "b7bac300-7838-429a-b4a6-70b0c30d0201",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957061,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One can explicitly enforce true division or floor division using native functions in the "
            ],
            [
              "operator",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://docs.python.org/3/library/operator.html"
                ]
              ]
            ],
            [
              " module:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One can explicitly enforce true division or floor division using native functions in the "
          },
          {
            "Text": "operator",
            "AttrFlags": 2,
            "Link": "https://docs.python.org/3/library/operator.html"
          },
          {
            "Text": " module:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957062,
        "id": "b6855172-2d71-45f7-9ed6-3ecf4acd5f08",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550348040000,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "from operator import truediv, floordiv\nassert truediv(10, 8) == 1.25            # equivalent to `/` in Python 3\nassert floordiv(10, 8) == 1              # equivalent to `//`"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "from operator import truediv, floordiv\nassert truediv(10, 8) == 1.25            # equivalent to `/` in Python 3\nassert floordiv(10, 8) == 1              # equivalent to `//`",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957062,
        "id": "c0bf68f6-d723-499e-94ee-548901d72a7f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957062,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "While clear and explicit, using operator functions for every division can be tedious. Changing the behavior of the "
            ],
            [
              "/",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator will often be preferred. A common practice is to eliminate typical division behavior by adding "
            ],
            [
              "from __future__ import division",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as the first statement in each module:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "While clear and explicit, using operator functions for every division can be tedious. Changing the behavior of the "
          },
          {
            "Text": "/",
            "AttrFlags": 2
          },
          {
            "Text": " operator will often be preferred. A common practice is to eliminate typical division behavior by adding "
          },
          {
            "Text": "from __future__ import division",
            "AttrFlags": 2
          },
          {
            "Text": " as the first statement in each module:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957062,
        "id": "90679e9e-a70a-4aa4-b079-388f9ddd40bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550348040000,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "# needs to be the first statement in a module\nfrom __future__ import division"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "# needs to be the first statement in a module\nfrom __future__ import division",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957062,
        "id": "8e089cbb-5bca-48ba-bc55-7d0677e9da0b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957062,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "| Code | Python 2 output | Python 3 output | |––––|——————|——————| |"
            ],
            [
              "3 / 2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "|1.5 |1.5 | |"
            ],
            [
              "2 / 3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "|0.6666666666666666|0.6666666666666666| |"
            ],
            [
              "-3 / 2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "|-1.5 |-1.5 |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "| Code | Python 2 output | Python 3 output | |––––|——————|——————| |"
          },
          {
            "Text": "3 / 2",
            "AttrFlags": 2
          },
          {
            "Text": "|1.5 |1.5 | |"
          },
          {
            "Text": "2 / 3",
            "AttrFlags": 2
          },
          {
            "Text": "|0.6666666666666666|0.6666666666666666| |"
          },
          {
            "Text": "-3 / 2",
            "AttrFlags": 2
          },
          {
            "Text": "|-1.5 |-1.5 |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957063,
        "id": "6f9279c0-4d0d-4734-9974-7da328881ba1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957063,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "from __future__ import division",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " guarantees that the "
            ],
            [
              "/",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator represents true division and only within the modules that contain the "
            ],
            [
              "__future__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " import, so there are no compelling reasons for not enabling it in all new modules."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "from __future__ import division",
            "AttrFlags": 2
          },
          {
            "Text": " guarantees that the "
          },
          {
            "Text": "/",
            "AttrFlags": 2
          },
          {
            "Text": " operator represents true division and only within the modules that contain the "
          },
          {
            "Text": "__future__",
            "AttrFlags": 2
          },
          {
            "Text": " import, so there are no compelling reasons for not enabling it in all new modules."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957063,
        "id": "ca7dacca-e296-46d5-a52f-c11d9998a312",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957063,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": Some other programming languages use "
            ],
            [
              "rounding toward zero",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " (truncation) rather than "
            ],
            [
              "rounding down toward negative infinity",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " as Python does (i.e. in those languages "
            ],
            [
              "-3 / 2 == -1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "). This behavior may create confusion when porting or comparing code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note",
            "AttrFlags": 1
          },
          {
            "Text": ": Some other programming languages use "
          },
          {
            "Text": "rounding toward zero",
            "AttrFlags": 4
          },
          {
            "Text": " (truncation) rather than "
          },
          {
            "Text": "rounding down toward negative infinity",
            "AttrFlags": 4
          },
          {
            "Text": " as Python does (i.e. in those languages "
          },
          {
            "Text": "-3 / 2 == -1",
            "AttrFlags": 2
          },
          {
            "Text": "). This behavior may create confusion when porting or comparing code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957063,
        "id": "2ef73650-caf8-4492-bcc5-231381049090",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957063,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957063,
        "id": "3a6c8f74-422c-4eb8-be62-d04933fcd4f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957063,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note on float operands",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": As an alternative to "
            ],
            [
              "from __future__ import division",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", one could use the usual division symbol "
            ],
            [
              "/",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and ensure that at least one of the operands is a float: "
            ],
            [
              "3 / 2.0 == 1.5",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". However, this can be considered bad practice. It is just too easy to write "
            ],
            [
              "average = sum(items) / len(items)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and forget to cast one of the arguments to float. Moreover, such cases may frequently evade notice during testing, e.g., if you test on an array containing "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s but receive an array of "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s in production. Additionally, if the same code is used in Python 3, programs that expect "
            ],
            [
              "3 / 2 == 1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to be True will not work correctly."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note on float operands",
            "AttrFlags": 1
          },
          {
            "Text": ": As an alternative to "
          },
          {
            "Text": "from __future__ import division",
            "AttrFlags": 2
          },
          {
            "Text": ", one could use the usual division symbol "
          },
          {
            "Text": "/",
            "AttrFlags": 2
          },
          {
            "Text": " and ensure that at least one of the operands is a float: "
          },
          {
            "Text": "3 / 2.0 == 1.5",
            "AttrFlags": 2
          },
          {
            "Text": ". However, this can be considered bad practice. It is just too easy to write "
          },
          {
            "Text": "average = sum(items) / len(items)",
            "AttrFlags": 2
          },
          {
            "Text": " and forget to cast one of the arguments to float. Moreover, such cases may frequently evade notice during testing, e.g., if you test on an array containing "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": "s but receive an array of "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": "s in production. Additionally, if the same code is used in Python 3, programs that expect "
          },
          {
            "Text": "3 / 2 == 1",
            "AttrFlags": 2
          },
          {
            "Text": " to be True will not work correctly."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957064,
        "id": "d2961ae0-3ff1-4558-b115-03cd1ad2d918",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957064,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "See "
            ],
            [
              "PEP 238",
              [
                [
                  "a",
                  "https://www.python.org/dev/peps/pep-0238/"
                ]
              ]
            ],
            [
              " for more detailed rationale why the division operator was changed in Python 3 and why old-style division should be avoided."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "See "
          },
          {
            "Text": "PEP 238",
            "Link": "https://www.python.org/dev/peps/pep-0238/"
          },
          {
            "Text": " for more detailed rationale why the division operator was changed in Python 3 and why old-style division should be avoided."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957064,
        "id": "a961239b-6e2e-43e8-af3f-5e01a08f2dca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957064,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550347957065,
        "id": "bf14de1e-f543-4699-9f8d-1fbfe1c830ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550347957065,
        "parent_id": "10b9fe9a-d2db-41b5-93af-6423960bdaba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "See the "
            ],
            [
              "Simple Math",
              [
                [
                  "i"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/python/298/simple-math/1065/division"
                ]
              ]
            ],
            [
              " topic",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/python/298/simple-math/1065/division"
                ]
              ]
            ],
            [
              " for more about division."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "See the "
          },
          {
            "Text": "Simple Math",
            "AttrFlags": 4,
            "Link": "http://stackoverflow.com/documentation/python/298/simple-math/1065/division"
          },
          {
            "Text": " topic",
            "Link": "http://stackoverflow.com/documentation/python/298/simple-math/1065/division"
          },
          {
            "Text": " for more about division."
          }
        ]
      }
    ],
    "title": "Integer Division",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}