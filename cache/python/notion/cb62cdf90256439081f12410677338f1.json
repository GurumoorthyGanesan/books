{
  "ID": "cb62cdf9-0256-4390-81f1-2410677338f1",
  "Root": {
    "alive": true,
    "content": [
      "af3bc4dd-d98c-4e27-af2b-9eafc2d4a520",
      "9f5e7935-ce6c-4eab-a38a-f9f1e1cfe939",
      "73f78501-df23-44bd-9828-add48a102d03",
      "879ac301-00bf-483c-94d0-e377d6875f05",
      "a5510114-074d-4098-b473-2b0eb1f684d9",
      "a3ca9552-9486-4be5-b151-dfd39900e990",
      "e32c3701-5934-4c9b-b1cd-5b175c1bc847",
      "dca79daa-9f33-4cca-80ca-f410c2a8e605",
      "e46c9c9e-1fe1-4925-a13a-40019aebaa14",
      "5cb71302-c66a-4deb-a0f8-4fe312e0e4cd",
      "76467098-3d78-4791-99c0-a8b99ac01074"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550354772902,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "cb62cdf9-0256-4390-81f1-2410677338f1",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550354820000,
    "parent_id": "58a3d205-85cc-4e4c-b6a7-120ac6ffe8c2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Print parameters"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354772898,
        "id": "af3bc4dd-d98c-4e27-af2b-9eafc2d4a520",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354772898,
        "parent_id": "cb62cdf9-0256-4390-81f1-2410677338f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can do more than just print text. "
            ],
            [
              "print",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " also has several parameters to help you."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can do more than just print text. "
          },
          {
            "Text": "print",
            "AttrFlags": 2
          },
          {
            "Text": " also has several parameters to help you."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354772901,
        "id": "9f5e7935-ce6c-4eab-a38a-f9f1e1cfe939",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354772901,
        "parent_id": "cb62cdf9-0256-4390-81f1-2410677338f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Argument "
            ],
            [
              "sep",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": place a string between arguments."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Argument "
          },
          {
            "Text": "sep",
            "AttrFlags": 2
          },
          {
            "Text": ": place a string between arguments."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354772901,
        "id": "73f78501-df23-44bd-9828-add48a102d03",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354772901,
        "parent_id": "cb62cdf9-0256-4390-81f1-2410677338f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Do you need to print a list of words separated by a comma or some other string?"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Do you need to print a list of words separated by a comma or some other string?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354772901,
        "id": "879ac301-00bf-483c-94d0-e377d6875f05",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354820000,
        "parent_id": "cb62cdf9-0256-4390-81f1-2410677338f1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e print('apples','bannas', 'cherries', sep=', ')\napple, bannas, cherries\n\u003e\u003e\u003e print('apple','banna', 'cherries', sep=', ')\napple, banna, cherries\n\u003e\u003e\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e print('apples','bannas', 'cherries', sep=', ')\napple, bannas, cherries\n\u003e\u003e\u003e print('apple','banna', 'cherries', sep=', ')\napple, banna, cherries\n\u003e\u003e\u003e",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354772901,
        "id": "a5510114-074d-4098-b473-2b0eb1f684d9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354772901,
        "parent_id": "cb62cdf9-0256-4390-81f1-2410677338f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Argument "
            ],
            [
              "end",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": use something other than a newline at the end"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Argument "
          },
          {
            "Text": "end",
            "AttrFlags": 2
          },
          {
            "Text": ": use something other than a newline at the end"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354772901,
        "id": "a3ca9552-9486-4be5-b151-dfd39900e990",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354772901,
        "parent_id": "cb62cdf9-0256-4390-81f1-2410677338f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Without the "
            ],
            [
              "end",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " argument, all "
            ],
            [
              "print()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " functions write a line and then go to the beginning of the next line. You can change it to do nothing (use an empty string of ‘’), or double spacing between paragraphs by using two newlines."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Without the "
          },
          {
            "Text": "end",
            "AttrFlags": 2
          },
          {
            "Text": " argument, all "
          },
          {
            "Text": "print()",
            "AttrFlags": 2
          },
          {
            "Text": " functions write a line and then go to the beginning of the next line. You can change it to do nothing (use an empty string of ‘’), or double spacing between paragraphs by using two newlines."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354772902,
        "id": "e32c3701-5934-4c9b-b1cd-5b175c1bc847",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354820000,
        "parent_id": "cb62cdf9-0256-4390-81f1-2410677338f1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e print(\"\u003ca\", end=''); print(\" class='jidn'\" if 1 else \"\", end=''); print(\"/\u003e\")\n\u003ca class='jidn'/\u003e\n\u003e\u003e\u003e print(\"paragraph1\", end=\"\\n\\n\"); print(\"paragraph2\")\nparagraph1\n\nparagraph2\n\u003e\u003e\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e print(\"\u003ca\", end=''); print(\" class='jidn'\" if 1 else \"\", end=''); print(\"/\u003e\")\n\u003ca class='jidn'/\u003e\n\u003e\u003e\u003e print(\"paragraph1\", end=\"\\n\\n\"); print(\"paragraph2\")\nparagraph1\n\nparagraph2\n\u003e\u003e\u003e",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354772902,
        "id": "dca79daa-9f33-4cca-80ca-f410c2a8e605",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354772902,
        "parent_id": "cb62cdf9-0256-4390-81f1-2410677338f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Argument "
            ],
            [
              "file",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": send output to someplace other than sys.stdout."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Argument "
          },
          {
            "Text": "file",
            "AttrFlags": 2
          },
          {
            "Text": ": send output to someplace other than sys.stdout."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354772902,
        "id": "e46c9c9e-1fe1-4925-a13a-40019aebaa14",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354772902,
        "parent_id": "cb62cdf9-0256-4390-81f1-2410677338f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now you can send your text to either stdout, a file, or StringIO and not care which you are given. If it quacks like a file, it works like a file."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now you can send your text to either stdout, a file, or StringIO and not care which you are given. If it quacks like a file, it works like a file."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354772902,
        "id": "5cb71302-c66a-4deb-a0f8-4fe312e0e4cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354820000,
        "parent_id": "cb62cdf9-0256-4390-81f1-2410677338f1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e def sendit(out, *values, sep=' ', end='\\n'):\n...     print(*values, sep=sep, end=end, file=out)\n... \n\u003e\u003e\u003e sendit(sys.stdout, 'apples', 'bannas', 'cherries', sep='\\t')\napples    bannas    cherries\n\u003e\u003e\u003e with open(\"delete-me.txt\", \"w+\") as f:\n...    sendit(f, 'apples', 'bannas', 'cherries', sep=' ', end='\\n')\n... \n\u003e\u003e\u003e with open(\"delete-me.txt\", \"rt\") as f:\n...     print(f.read())\n... \napples bannas cherries\n\n\u003e\u003e\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e def sendit(out, *values, sep=' ', end='\\n'):\n...     print(*values, sep=sep, end=end, file=out)\n... \n\u003e\u003e\u003e sendit(sys.stdout, 'apples', 'bannas', 'cherries', sep='\\t')\napples    bannas    cherries\n\u003e\u003e\u003e with open(\"delete-me.txt\", \"w+\") as f:\n...    sendit(f, 'apples', 'bannas', 'cherries', sep=' ', end='\\n')\n... \n\u003e\u003e\u003e with open(\"delete-me.txt\", \"rt\") as f:\n...     print(f.read())\n... \napples bannas cherries\n\n\u003e\u003e\u003e",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550354772902,
        "id": "76467098-3d78-4791-99c0-a8b99ac01074",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550354772902,
        "parent_id": "cb62cdf9-0256-4390-81f1-2410677338f1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There is a fourth parameter "
            ],
            [
              "flush",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which will forcibly flush the stream."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There is a fourth parameter "
          },
          {
            "Text": "flush",
            "AttrFlags": 2
          },
          {
            "Text": " which will forcibly flush the stream."
          }
        ]
      }
    ],
    "title": "Print parameters",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}