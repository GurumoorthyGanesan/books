{
  "ID": "6767b5b5-3349-4196-89d9-809b7778ef0a",
  "Root": {
    "alive": true,
    "content": [
      "4784751d-648e-4191-bfee-34f9a4e6b402",
      "605b687b-9a30-4a65-9b2b-eb73e9ff0781",
      "ec5068be-fbee-4de7-a562-8cdef22dab44",
      "d68af923-2dc6-43da-ba74-bfbcc19dedf1",
      "b653607a-57f9-47bb-afd6-d1e1099dc549"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550345945101,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "6767b5b5-3349-4196-89d9-809b7778ef0a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550346000000,
    "parent_id": "5111db63-ec34-48fa-9385-65f1ed412544",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using Parent and Children scripts to execute code in parallel"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550345945098,
        "id": "4784751d-648e-4191-bfee-34f9a4e6b402",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550345945098,
        "parent_id": "6767b5b5-3349-4196-89d9-809b7778ef0a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "child.py",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "child.py",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550345945101,
        "id": "605b687b-9a30-4a65-9b2b-eb73e9ff0781",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550346000000,
        "parent_id": "6767b5b5-3349-4196-89d9-809b7778ef0a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "import time\n\ndef main():\n    print \"starting work\"\n    time.sleep(1)\n    print \"work work work work work\"\n    time.sleep(1)\n    print \"done working\"\n\nif __name__ == '__main__':\n    main()"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "import time\n\ndef main():\n    print \"starting work\"\n    time.sleep(1)\n    print \"work work work work work\"\n    time.sleep(1)\n    print \"done working\"\n\nif __name__ == '__main__':\n    main()",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550345945101,
        "id": "ec5068be-fbee-4de7-a562-8cdef22dab44",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550345945101,
        "parent_id": "6767b5b5-3349-4196-89d9-809b7778ef0a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "parent.py",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "parent.py",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550345945101,
        "id": "d68af923-2dc6-43da-ba74-bfbcc19dedf1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550346000000,
        "parent_id": "6767b5b5-3349-4196-89d9-809b7778ef0a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "import os\n\ndef main():\n    for i in range(5):\n        os.system(\"python child.py \u0026\")\n\nif __name__ == '__main__':\n    main()"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "import os\n\ndef main():\n    for i in range(5):\n        os.system(\"python child.py \u0026\")\n\nif __name__ == '__main__':\n    main()",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550345945101,
        "id": "b653607a-57f9-47bb-afd6-d1e1099dc549",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550345945101,
        "parent_id": "6767b5b5-3349-4196-89d9-809b7778ef0a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is useful for parallel, independent HTTP request/response tasks or Database select/inserts. Command line arguments can be given to the "
            ],
            [
              "child.py",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " script as well. Synchronization between scripts can be achieved by all scripts regularly checking a separate server (like a Redis instance)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is useful for parallel, independent HTTP request/response tasks or Database select/inserts. Command line arguments can be given to the "
          },
          {
            "Text": "child.py",
            "AttrFlags": 1
          },
          {
            "Text": " script as well. Synchronization between scripts can be achieved by all scripts regularly checking a separate server (like a Redis instance)."
          }
        ]
      }
    ],
    "title": "Using Parent and Children scripts to execute code in parallel",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}