{
  "ID": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
  "Root": {
    "alive": true,
    "content": [
      "a3c2b0d3-d456-493c-81ca-ad975fc7d8cb",
      "dd35a4e5-8600-4b9c-ab13-8ddd0242001b",
      "a686c337-cbad-4b37-a2c6-48d371a5e3f7",
      "20373db8-c524-46ea-8b30-3ea25d51eb50",
      "589edc18-353e-46ed-b41a-1b53c54c706f",
      "9c218542-c1bc-48d6-9d23-32e878a029cc",
      "793e5702-ef69-4a99-bc9c-d99ec75abe61",
      "e73134a8-e79b-4e2c-8d73-6cfba5793c2f",
      "1f45ec57-77d9-4aa5-9534-c6f8b4520b5b",
      "5af4a792-4661-475d-b9ba-761019d6a325",
      "ab70eb45-989a-4bd0-bb41-7e9770187c3f",
      "06dde916-e4cb-4fcc-810a-1b29e9f499a5",
      "e3531ea1-53f2-45ca-b638-9976a2f85da8",
      "018b0716-6aef-401c-8df6-3a2042621d55",
      "06e69334-857f-4c74-bda8-962957b60075",
      "ed6963d2-45a3-455d-8e48-31b63e8953bb",
      "8357ca06-31d2-4d87-9aee-9d92b31288ef",
      "60a5aca8-b24e-4cc9-a475-7264dfdaf9f6",
      "cd4e6a98-eff3-431a-8b64-4b9f15492b00",
      "a782022a-ed37-4fb4-ba9b-86c720122412",
      "564ce0a3-35b5-40da-a1dd-6e4943dc533a",
      "f3634a94-0834-4d69-86ed-43d05244dabf",
      "39542b0d-a7f2-4133-9bc1-abf02fdf1f12",
      "12f414fb-2dd4-4ce6-b769-2969dbe7b024",
      "7ff0bc66-d65b-4eb7-8f78-06dcc0a3d853"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550229431968,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550230200000,
    "parent_id": "eecffaeb-508c-45b9-93c4-ae07958e5f67",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Generator Expressions"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431963,
        "id": "a3c2b0d3-d456-493c-81ca-ad975fc7d8cb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229431963,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Generator expressions are very similar to list comprehensions. The main difference is that it does not create a full set of results at once; it creates a "
            ],
            [
              "generator object",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/python/292/generators#t=201604261541588197979"
                ]
              ]
            ],
            [
              " which can then be iterated over."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Generator expressions are very similar to list comprehensions. The main difference is that it does not create a full set of results at once; it creates a "
          },
          {
            "Text": "generator object",
            "Link": "http://stackoverflow.com/documentation/python/292/generators#t=201604261541588197979"
          },
          {
            "Text": " which can then be iterated over."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431964,
        "id": "dd35a4e5-8600-4b9c-ab13-8ddd0242001b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229431964,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For instance, see the difference in the following code:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For instance, see the difference in the following code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431964,
        "id": "a686c337-cbad-4b37-a2c6-48d371a5e3f7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550230140000,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "# list comprehension\n[x**2 for x in range(10)]\n# Output: [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "# list comprehension\n[x**2 for x in range(10)]\n# Output: [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431964,
        "id": "20373db8-c524-46ea-8b30-3ea25d51eb50",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550230140000,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "# generator comprehension\n(x**2 for x in xrange(10))\n# Output: \u003cgenerator object \u003cgenexpr\u003e at 0x11b4b7c80\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "# generator comprehension\n(x**2 for x in xrange(10))\n# Output: \u003cgenerator object \u003cgenexpr\u003e at 0x11b4b7c80\u003e",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431964,
        "id": "589edc18-353e-46ed-b41a-1b53c54c706f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229431964,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These are two very different objects:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These are two very different objects:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431965,
        "id": "9c218542-c1bc-48d6-9d23-32e878a029cc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229431965,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the list comprehension returns a "
            ],
            [
              "list",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object whereas the generator comprehension returns a "
            ],
            [
              "generator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "the list comprehension returns a "
          },
          {
            "Text": "list",
            "AttrFlags": 2
          },
          {
            "Text": " object whereas the generator comprehension returns a "
          },
          {
            "Text": "generator",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431966,
        "id": "793e5702-ef69-4a99-bc9c-d99ec75abe61",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229431966,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "generator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " objects cannot be indexed and makes use of the "
            ],
            [
              "next",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function to get items in order."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "generator",
            "AttrFlags": 2
          },
          {
            "Text": " objects cannot be indexed and makes use of the "
          },
          {
            "Text": "next",
            "AttrFlags": 2
          },
          {
            "Text": " function to get items in order."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431967,
        "id": "e73134a8-e79b-4e2c-8d73-6cfba5793c2f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229431967,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": We use "
            ],
            [
              "xrange",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " since it too creates a generator object. If we would use range, a list would be created. Also, "
            ],
            [
              "xrange",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " exists only in later version of python 2. In python 3, "
            ],
            [
              "range",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " just returns a generator. For more information, see the "
            ],
            [
              "Differences between range and xrange functions",
              [
                [
                  "i"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/python/809/compatibility-between-python-3-and-python-2/2840/differences-between-range-and-xrange-functions#t=201609152155552299304"
                ]
              ]
            ],
            [
              " example",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/python/809/compatibility-between-python-3-and-python-2/2840/differences-between-range-and-xrange-functions#t=201609152155552299304"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note",
            "AttrFlags": 1
          },
          {
            "Text": ": We use "
          },
          {
            "Text": "xrange",
            "AttrFlags": 2
          },
          {
            "Text": " since it too creates a generator object. If we would use range, a list would be created. Also, "
          },
          {
            "Text": "xrange",
            "AttrFlags": 2
          },
          {
            "Text": " exists only in later version of python 2. In python 3, "
          },
          {
            "Text": "range",
            "AttrFlags": 2
          },
          {
            "Text": " just returns a generator. For more information, see the "
          },
          {
            "Text": "Differences between range and xrange functions",
            "AttrFlags": 4,
            "Link": "http://stackoverflow.com/documentation/python/809/compatibility-between-python-3-and-python-2/2840/differences-between-range-and-xrange-functions#t=201609152155552299304"
          },
          {
            "Text": " example",
            "Link": "http://stackoverflow.com/documentation/python/809/compatibility-between-python-3-and-python-2/2840/differences-between-range-and-xrange-functions#t=201609152155552299304"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431967,
        "id": "1f45ec57-77d9-4aa5-9534-c6f8b4520b5b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229431967,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "—"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "—"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431967,
        "id": "5af4a792-4661-475d-b9ba-761019d6a325",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550230140000,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "g = (x**2 for x in xrange(10))\nprint(g[0])"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "g = (x**2 for x in xrange(10))\nprint(g[0])",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431967,
        "id": "ab70eb45-989a-4bd0-bb41-7e9770187c3f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229431967,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Traceback (most recent call last):\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\nTypeError: 'generator' object has no attribute '__getitem__'"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Traceback (most recent call last):\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\nTypeError: 'generator' object has no attribute '__getitem__'",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431967,
        "id": "06dde916-e4cb-4fcc-810a-1b29e9f499a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550230200000,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "g.next()  # 0\ng.next()  # 1\ng.next()  # 4\n...\ng.next()  # 81\n\ng.next()  # Throws StopIteration Exception"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "g.next()  # 0\ng.next()  # 1\ng.next()  # 4\n...\ng.next()  # 81\n\ng.next()  # Throws StopIteration Exception",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431967,
        "id": "e3531ea1-53f2-45ca-b638-9976a2f85da8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229431967,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Traceback (most recent call last):\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\nStopIteration"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Traceback (most recent call last):\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\nStopIteration",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431967,
        "id": "018b0716-6aef-401c-8df6-3a2042621d55",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229431967,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "NOTE: The function g.next() should be substituted by next(g) and xrange with range since Iterator.next() and xrange() do not exist in Python 3."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "NOTE: The function g.next() should be substituted by next(g) and xrange with range since Iterator.next() and xrange() do not exist in Python 3."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431967,
        "id": "06e69334-857f-4c74-bda8-962957b60075",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550230200000,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "type": "text",
        "version": 3
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431967,
        "id": "ed6963d2-45a3-455d-8e48-31b63e8953bb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229431967,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Although both of these can be iterated in a similar way:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Although both of these can be iterated in a similar way:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431968,
        "id": "8357ca06-31d2-4d87-9aee-9d92b31288ef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550230200000,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "for i in [x**2 for x in range(10)]:\n    print(i)\n\n\"\"\"\nOut:\n0\n1\n4\n...\n81\n\"\"\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "for i in [x**2 for x in range(10)]:\n    print(i)\n\n\"\"\"\nOut:\n0\n1\n4\n...\n81\n\"\"\"",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431968,
        "id": "60a5aca8-b24e-4cc9-a475-7264dfdaf9f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550230200000,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "for i in (x**2 for x in xrange(10)):\n    print(i)\n\n\"\"\"\nOut:\n0\n1\n4\n.\n.\n.\n81\n\"\"\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "for i in (x**2 for x in xrange(10)):\n    print(i)\n\n\"\"\"\nOut:\n0\n1\n4\n.\n.\n.\n81\n\"\"\"",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431968,
        "id": "cd4e6a98-eff3-431a-8b64-4b9f15492b00",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550230200000,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "type": "text",
        "version": 3
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431968,
        "id": "a782022a-ed37-4fb4-ba9b-86c720122412",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229431968,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Use cases"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Use cases"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431968,
        "id": "564ce0a3-35b5-40da-a1dd-6e4943dc533a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229431968,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Generator expressions are lazily evaluated, which means that they generate and return each value only when the generator is iterated. This is often useful when iterating through large datasets, avoiding the need to create a duplicate of the dataset in memory:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Generator expressions are lazily evaluated, which means that they generate and return each value only when the generator is iterated. This is often useful when iterating through large datasets, avoiding the need to create a duplicate of the dataset in memory:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431968,
        "id": "f3634a94-0834-4d69-86ed-43d05244dabf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550230200000,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "for square in (x**2 for x in range(1000000)):\n    # do something"
            ]
          ]
        },
        "type": "code",
        "version": 4,
        "code": "for square in (x**2 for x in range(1000000)):\n    # do something",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431968,
        "id": "39542b0d-a7f2-4133-9bc1-abf02fdf1f12",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550229431968,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another common use case is to avoid iterating over an entire iterable if doing so is not necessary. In this example, an item is retrieved from a remote API with each iteration of "
            ],
            [
              "get_objects()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Thousands of objects may exist, must be retrieved one-by-one, and we only need to know if an object matching a pattern exists. By using a generator expression, when we encounter an object matching the pattern."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another common use case is to avoid iterating over an entire iterable if doing so is not necessary. In this example, an item is retrieved from a remote API with each iteration of "
          },
          {
            "Text": "get_objects()",
            "AttrFlags": 2
          },
          {
            "Text": ". Thousands of objects may exist, must be retrieved one-by-one, and we only need to know if an object matching a pattern exists. By using a generator expression, when we encounter an object matching the pattern."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431968,
        "id": "12f414fb-2dd4-4ce6-b769-2969dbe7b024",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550230200000,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def get_objects():\n    \"\"\"Gets objects from an API one by one\"\"\"\n    while True:\n        yield get_next_item()\n\ndef object_matches_pattern(obj):\n    # perform potentially complex calculation\n    return matches_pattern\n\ndef right_item_exists():\n    items = (object_matched_pattern(each) for each in get_objects())\n    for item in items:\n        if item.is_the_right_one:"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def get_objects():\n    \"\"\"Gets objects from an API one by one\"\"\"\n    while True:\n        yield get_next_item()\n\ndef object_matches_pattern(obj):\n    # perform potentially complex calculation\n    return matches_pattern\n\ndef right_item_exists():\n    items = (object_matched_pattern(each) for each in get_objects())\n    for item in items:\n        if item.is_the_right_one:",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550229431968,
        "id": "7ff0bc66-d65b-4eb7-8f78-06dcc0a3d853",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550230200000,
        "parent_id": "5feb0834-8945-42fc-a40b-4c27bb45f8fe",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "return True\nreturn False"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "return True\nreturn False",
        "code_language": "Python"
      }
    ],
    "title": "Generator Expressions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}