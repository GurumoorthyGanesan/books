{
  "ID": "00a58318-1b56-4bc4-a816-2e3aab09f746",
  "Root": {
    "alive": true,
    "content": [
      "e66bce0e-3fbc-4a4b-9f5e-d4a69a18c3e7",
      "e663fa15-49af-42da-af57-1e50ba0808de",
      "c384fab9-bf74-48ae-a698-16c96d80832f",
      "25c3f52e-428c-4a62-a5ba-7bf3c9a6d66e",
      "679a00ac-8bfa-4f79-8949-7f8c16033aa5",
      "a7ee042c-017e-49e2-91ce-fa22641c440b",
      "08dfc2e2-cfc4-45df-bf8c-c6b45747451d",
      "42117fb1-9441-4873-84c1-ffffafbdfe0d",
      "f6ab461f-0a91-4b82-b83f-d4905d4ab651"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550305636747,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "00a58318-1b56-4bc4-a816-2e3aab09f746",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550306160000,
    "parent_id": "61d34cb1-e32c-45a0-89c4-f6bcc8106406",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Replace all occurrences of one substring with another substring"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305636744,
        "id": "e66bce0e-3fbc-4a4b-9f5e-d4a69a18c3e7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305636744,
        "parent_id": "00a58318-1b56-4bc4-a816-2e3aab09f746",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Python’s "
            ],
            [
              "str",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " type also has a method for replacing occurences of one sub-string with another sub-string in a given string. For more demanding cases, one can use "
            ],
            [
              "re.sub",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/python/632/regular-expressions/2068/replacing-with-a-string#t=201607231554255817393"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Python’s "
          },
          {
            "Text": "str",
            "AttrFlags": 2
          },
          {
            "Text": " type also has a method for replacing occurences of one sub-string with another sub-string in a given string. For more demanding cases, one can use "
          },
          {
            "Text": "re.sub",
            "AttrFlags": 2,
            "Link": "http://stackoverflow.com/documentation/python/632/regular-expressions/2068/replacing-with-a-string#t=201607231554255817393"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305636746,
        "id": "e663fa15-49af-42da-af57-1e50ba0808de",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305636746,
        "parent_id": "00a58318-1b56-4bc4-a816-2e3aab09f746",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "str.replace(old, new[, count])",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "str.replace(old, new[, count])",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305636746,
        "id": "c384fab9-bf74-48ae-a698-16c96d80832f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305636746,
        "parent_id": "00a58318-1b56-4bc4-a816-2e3aab09f746",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "str.replace",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " takes two arguments "
            ],
            [
              "old",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "new",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " containing the "
            ],
            [
              "old",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " sub-string which is to be replaced by the "
            ],
            [
              "new",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " sub-string. The optional argument "
            ],
            [
              "count",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " specifies the number of replacements to be made:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "str.replace",
            "AttrFlags": 2
          },
          {
            "Text": " takes two arguments "
          },
          {
            "Text": "old",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "new",
            "AttrFlags": 2
          },
          {
            "Text": " containing the "
          },
          {
            "Text": "old",
            "AttrFlags": 2
          },
          {
            "Text": " sub-string which is to be replaced by the "
          },
          {
            "Text": "new",
            "AttrFlags": 2
          },
          {
            "Text": " sub-string. The optional argument "
          },
          {
            "Text": "count",
            "AttrFlags": 2
          },
          {
            "Text": " specifies the number of replacements to be made:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305636746,
        "id": "25c3f52e-428c-4a62-a5ba-7bf3c9a6d66e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305636746,
        "parent_id": "00a58318-1b56-4bc4-a816-2e3aab09f746",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example, in order to replace "
            ],
            [
              "'foo'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with "
            ],
            [
              "'spam'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the following string, we can call "
            ],
            [
              "str.replace",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with "
            ],
            [
              "old = 'foo'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "new = 'spam'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example, in order to replace "
          },
          {
            "Text": "'foo'",
            "AttrFlags": 2
          },
          {
            "Text": " with "
          },
          {
            "Text": "'spam'",
            "AttrFlags": 2
          },
          {
            "Text": " in the following string, we can call "
          },
          {
            "Text": "str.replace",
            "AttrFlags": 2
          },
          {
            "Text": " with "
          },
          {
            "Text": "old = 'foo'",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "new = 'spam'",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305636746,
        "id": "679a00ac-8bfa-4f79-8949-7f8c16033aa5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550306160000,
        "parent_id": "00a58318-1b56-4bc4-a816-2e3aab09f746",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e \"Make sure to foo your sentence.\".replace('foo', 'spam')\n\"Make sure to spam your sentence.\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e \"Make sure to foo your sentence.\".replace('foo', 'spam')\n\"Make sure to spam your sentence.\"",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305636747,
        "id": "a7ee042c-017e-49e2-91ce-fa22641c440b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305636747,
        "parent_id": "00a58318-1b56-4bc4-a816-2e3aab09f746",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the given string contains multiple examples that match the "
            ],
            [
              "old",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " argument, "
            ],
            [
              "all",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " occurrences are replaced with the value supplied in "
            ],
            [
              "new",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the given string contains multiple examples that match the "
          },
          {
            "Text": "old",
            "AttrFlags": 2
          },
          {
            "Text": " argument, "
          },
          {
            "Text": "all",
            "AttrFlags": 1
          },
          {
            "Text": " occurrences are replaced with the value supplied in "
          },
          {
            "Text": "new",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305636747,
        "id": "08dfc2e2-cfc4-45df-bf8c-c6b45747451d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550306160000,
        "parent_id": "00a58318-1b56-4bc4-a816-2e3aab09f746",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e \"It can foo multiple examples of foo if you want.\".replace('foo', 'spam')\n\"It can spam multiple examples of spam if you want.\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e \"It can foo multiple examples of foo if you want.\".replace('foo', 'spam')\n\"It can spam multiple examples of spam if you want.\"",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305636747,
        "id": "42117fb1-9441-4873-84c1-ffffafbdfe0d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305636747,
        "parent_id": "00a58318-1b56-4bc4-a816-2e3aab09f746",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "unless, of course, we supply a value for "
            ],
            [
              "count",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". In this case "
            ],
            [
              "count",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " occurrences are going to get replaced:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "unless, of course, we supply a value for "
          },
          {
            "Text": "count",
            "AttrFlags": 2
          },
          {
            "Text": ". In this case "
          },
          {
            "Text": "count",
            "AttrFlags": 2
          },
          {
            "Text": " occurrences are going to get replaced:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305636747,
        "id": "f6ab461f-0a91-4b82-b83f-d4905d4ab651",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550306160000,
        "parent_id": "00a58318-1b56-4bc4-a816-2e3aab09f746",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e \"\"\"It can foo multiple examples of foo if you want, \\\n... or you can limit the foo with the third argument.\"\"\".replace('foo', 'spam', 1)\n'It can spam multiple examples of foo if you want, or you can limit the foo with the third argument.'"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e \"\"\"It can foo multiple examples of foo if you want, \\\n... or you can limit the foo with the third argument.\"\"\".replace('foo', 'spam', 1)\n'It can spam multiple examples of foo if you want, or you can limit the foo with the third argument.'",
        "code_language": "Python"
      }
    ],
    "title": "Replace all occurrences of one substring with another substring",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}