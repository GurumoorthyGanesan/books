{
  "ID": "354214b8-ba3b-4db4-b21b-92cce9e5488c",
  "Root": {
    "alive": true,
    "content": [
      "195c9eb8-40e9-4b79-a7c2-61fe8d1e91b0",
      "eb1c82a9-c25b-477f-8a08-f54f4174ba76",
      "7357cb14-f92b-4d62-b724-5bb2d3ff8463",
      "d2a3b53e-7253-4a29-abb5-1cc1d48ed9ad",
      "28121f91-ca3d-412a-b0c1-23435df0d7f4",
      "691bc087-a642-4497-a8ae-047de49c381e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550305646806,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "354214b8-ba3b-4db4-b21b-92cce9e5488c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550306460000,
    "parent_id": "61d34cb1-e32c-45a0-89c4-f6bcc8106406",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Justify strings"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305646802,
        "id": "195c9eb8-40e9-4b79-a7c2-61fe8d1e91b0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305646802,
        "parent_id": "354214b8-ba3b-4db4-b21b-92cce9e5488c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Python provides functions for justifying strings, enabling text padding to make aligning various strings much easier."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Python provides functions for justifying strings, enabling text padding to make aligning various strings much easier."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305646805,
        "id": "eb1c82a9-c25b-477f-8a08-f54f4174ba76",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305646805,
        "parent_id": "354214b8-ba3b-4db4-b21b-92cce9e5488c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Below is an example of "
            ],
            [
              "str.ljust",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "str.rjust",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Below is an example of "
          },
          {
            "Text": "str.ljust",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "str.rjust",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305646805,
        "id": "7357cb14-f92b-4d62-b724-5bb2d3ff8463",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550306460000,
        "parent_id": "354214b8-ba3b-4db4-b21b-92cce9e5488c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "interstates_lengths = {\n    5: (1381, 2222),\n    19: (63, 102),\n    40: (2555, 4112),\n    93: (189,305),\n}\nfor road, length in interstates_lengths.items():\n    miles,kms = length\n    print('{} -\u003e {} mi. ({} km.)'.format(str(road).rjust(4), str(miles).ljust(4), str(kms).ljust(4)))"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "interstates_lengths = {\n    5: (1381, 2222),\n    19: (63, 102),\n    40: (2555, 4112),\n    93: (189,305),\n}\nfor road, length in interstates_lengths.items():\n    miles,kms = length\n    print('{} -\u003e {} mi. ({} km.)'.format(str(road).rjust(4), str(miles).ljust(4), str(kms).ljust(4)))",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305646805,
        "id": "d2a3b53e-7253-4a29-abb5-1cc1d48ed9ad",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305646805,
        "parent_id": "354214b8-ba3b-4db4-b21b-92cce9e5488c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "40 -\u003e 2555 mi. (4112 km.)\n19 -\u003e 63   mi. (102  km.)\n 5 -\u003e 1381 mi. (2222 km.)\n93 -\u003e 189  mi. (305  km.)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "40 -\u003e 2555 mi. (4112 km.)\n19 -\u003e 63   mi. (102  km.)\n 5 -\u003e 1381 mi. (2222 km.)\n93 -\u003e 189  mi. (305  km.)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305646806,
        "id": "28121f91-ca3d-412a-b0c1-23435df0d7f4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305646806,
        "parent_id": "354214b8-ba3b-4db4-b21b-92cce9e5488c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "ljust",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "rjust",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are very similar. Both have a "
            ],
            [
              "width",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " parameter and an optional "
            ],
            [
              "fillchar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " parameter. Any string created by these functions is at least as long as the "
            ],
            [
              "width",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " parameter that was passed into the function. If the string is longer than "
            ],
            [
              "width",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " alread, it is not truncated. The "
            ],
            [
              "fillchar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " argument, which defaults to the space character "
            ],
            [
              "' '",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " must be a single character, not a multicharacter string."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "ljust",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "rjust",
            "AttrFlags": 2
          },
          {
            "Text": " are very similar. Both have a "
          },
          {
            "Text": "width",
            "AttrFlags": 2
          },
          {
            "Text": " parameter and an optional "
          },
          {
            "Text": "fillchar",
            "AttrFlags": 2
          },
          {
            "Text": " parameter. Any string created by these functions is at least as long as the "
          },
          {
            "Text": "width",
            "AttrFlags": 2
          },
          {
            "Text": " parameter that was passed into the function. If the string is longer than "
          },
          {
            "Text": "width",
            "AttrFlags": 2
          },
          {
            "Text": " alread, it is not truncated. The "
          },
          {
            "Text": "fillchar",
            "AttrFlags": 2
          },
          {
            "Text": " argument, which defaults to the space character "
          },
          {
            "Text": "' '",
            "AttrFlags": 2
          },
          {
            "Text": " must be a single character, not a multicharacter string."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305646806,
        "id": "691bc087-a642-4497-a8ae-047de49c381e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305646806,
        "parent_id": "354214b8-ba3b-4db4-b21b-92cce9e5488c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "ljust",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function pads the end of the string it is called on with the "
            ],
            [
              "fillchar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " until it is "
            ],
            [
              "width",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " characters long. The "
            ],
            [
              "rjust",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function pads the beginning of the string in a similar fashion. Therefore, the "
            ],
            [
              "l",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "r",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the names of these functions refer to the side that the original string, "
            ],
            [
              "not the ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "fillchar",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              ", is positioned in the output string."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "ljust",
            "AttrFlags": 2
          },
          {
            "Text": " function pads the end of the string it is called on with the "
          },
          {
            "Text": "fillchar",
            "AttrFlags": 2
          },
          {
            "Text": " until it is "
          },
          {
            "Text": "width",
            "AttrFlags": 2
          },
          {
            "Text": " characters long. The "
          },
          {
            "Text": "rjust",
            "AttrFlags": 2
          },
          {
            "Text": " function pads the beginning of the string in a similar fashion. Therefore, the "
          },
          {
            "Text": "l",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "r",
            "AttrFlags": 2
          },
          {
            "Text": " in the names of these functions refer to the side that the original string, "
          },
          {
            "Text": "not the ",
            "AttrFlags": 4
          },
          {
            "Text": "fillchar",
            "AttrFlags": 6
          },
          {
            "Text": ", is positioned in the output string."
          }
        ]
      }
    ],
    "title": "Justify strings",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}