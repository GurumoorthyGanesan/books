{
  "ID": "87336419-b832-4b49-a52d-6bd671ec1969",
  "Root": {
    "alive": true,
    "content": [
      "55ea86c4-1e6c-4ef3-87fa-90b222a34c26",
      "ef3064d0-0e18-43df-b682-4dd47b232a83",
      "1878447b-0e47-4c79-b778-57b5847d3dd2",
      "0c2748a0-6e0b-45bc-ad25-7a4f915c056e",
      "d94d721a-84ed-423a-bfb2-6ed5a32f55bc",
      "4cc7f28d-350f-452c-92a9-a608b36e4dbe",
      "bffb4e25-4c49-43d0-87cf-b5a3d48dea60",
      "bea0bb38-0bd7-45be-b09e-7a3766da8875",
      "8f7b1303-a38d-426b-bb64-f0b95be456d5",
      "e705589b-b144-4e33-84e4-e6aa4e8459e3",
      "ec897774-72dd-418e-b8ec-84d864e81d86",
      "29818696-c3ec-4b07-83e9-5684616c1eea",
      "57bfa673-6428-4e0a-af55-08efcc87164e",
      "c5f51d85-5462-45f6-9467-8a1964d86cf7",
      "a63adff5-db8d-43d2-abb7-748e7d91d4ec",
      "7103c449-d379-49bc-9b92-21b1c09e5e92",
      "4f3505d9-0b05-4e22-9d23-7e71bf5843f6",
      "507bbfad-416b-438e-add9-55c74d15e2a4",
      "2a111399-1b39-42cc-b55e-ccdd45c02f4b",
      "1ec8c75c-bba2-4038-891f-bf01967c7a70",
      "58866e81-1c7c-4d9f-b055-c2de12a7becf",
      "4790fa83-3c60-4b2e-85e5-3f15b39cd25b",
      "3d84d64c-0fd5-430f-9049-e8bf282ba722",
      "1b2a4df5-8e1c-47f1-a2a1-f4773b443fd8",
      "ecea1f8a-bf99-47e2-800c-626e8b76e8a2",
      "c062337f-c612-4adc-90fb-2f63099ca446"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550308271132,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "87336419-b832-4b49-a52d-6bd671ec1969",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550308560000,
    "parent_id": "a27718c5-df77-4fd4-b80b-880f0a024099",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Series and Parallel Mapping"
        ]
      ]
    },
    "type": "page",
    "version": 11,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271130,
        "id": "55ea86c4-1e6c-4ef3-87fa-90b222a34c26",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308560000,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "map()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a built-in function, which means that it is available everywhere without the need to use an ‘import’ statement. It is available everywhere just like "
            ],
            [
              "print()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " If you look at Example 5 you will see that I had to use an import statement before I could use pretty print ("
            ],
            [
              "import pprint",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "). Thus "
            ],
            [
              "pprint",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not a built-in function"
            ]
          ]
        },
        "type": "text",
        "version": 6,
        "inline_content": [
          {
            "Text": "map()",
            "AttrFlags": 2
          },
          {
            "Text": " is a built-in function, which means that it is available everywhere without the need to use an ‘import’ statement. It is available everywhere just like "
          },
          {
            "Text": "print()",
            "AttrFlags": 2
          },
          {
            "Text": " If you look at Example 5 you will see that I had to use an import statement before I could use pretty print ("
          },
          {
            "Text": "import pprint",
            "AttrFlags": 2
          },
          {
            "Text": "). Thus "
          },
          {
            "Text": "pprint",
            "AttrFlags": 2
          },
          {
            "Text": " is not a built-in function"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271130,
        "id": "ef3064d0-0e18-43df-b682-4dd47b232a83",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308271130,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Series mapping"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Series mapping"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271130,
        "id": "1878447b-0e47-4c79-b778-57b5847d3dd2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308271130,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this case each argument of the iterable is supplied as argument to the mapping function in ascending order. This arises when we have just one iterable to map and the mapping function requires a single argument."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this case each argument of the iterable is supplied as argument to the mapping function in ascending order. This arises when we have just one iterable to map and the mapping function requires a single argument."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271130,
        "id": "0c2748a0-6e0b-45bc-ad25-7a4f915c056e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308271130,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example 1"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example 1"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271130,
        "id": "d94d721a-84ed-423a-bfb2-6ed5a32f55bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308500000,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "insects = ['fly', 'ant', 'beetle', 'cankerworm']\nf = lambda x: x + ' is an insect'\nprint(list(map(f, insects))) # the function defined by f is executed on each item of the iterable insects"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "insects = ['fly', 'ant', 'beetle', 'cankerworm']\nf = lambda x: x + ' is an insect'\nprint(list(map(f, insects))) # the function defined by f is executed on each item of the iterable insects",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271131,
        "id": "4cc7f28d-350f-452c-92a9-a608b36e4dbe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308271131,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "results in"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "results in"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271131,
        "id": "bffb4e25-4c49-43d0-87cf-b5a3d48dea60",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308500000,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "['fly is an insect', 'ant is an insect', 'beetle is an insect', 'cankerworm is an insect']"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "['fly is an insect', 'ant is an insect', 'beetle is an insect', 'cankerworm is an insect']",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271131,
        "id": "bea0bb38-0bd7-45be-b09e-7a3766da8875",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308271131,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example 2"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example 2"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271131,
        "id": "8f7b1303-a38d-426b-bb64-f0b95be456d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308500000,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "print(list(map(len, insects))) # the len function is executed each item in the insect list"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "print(list(map(len, insects))) # the len function is executed each item in the insect list",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271131,
        "id": "e705589b-b144-4e33-84e4-e6aa4e8459e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308271131,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "results in"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "results in"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271131,
        "id": "ec897774-72dd-418e-b8ec-84d864e81d86",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308500000,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "[3, 3, 6, 10]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "[3, 3, 6, 10]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271131,
        "id": "29818696-c3ec-4b07-83e9-5684616c1eea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308271131,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parallel mapping"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parallel mapping"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271131,
        "id": "57bfa673-6428-4e0a-af55-08efcc87164e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308271131,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this case each argument of the mapping function is pulled from across all iterables (one from each iterable) in parallel. Thus the number of iterables supplied must match the number of arguments required by the function."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this case each argument of the mapping function is pulled from across all iterables (one from each iterable) in parallel. Thus the number of iterables supplied must match the number of arguments required by the function."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271131,
        "id": "c5f51d85-5462-45f6-9467-8a1964d86cf7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308500000,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "carnivores = ['lion', 'tiger', 'leopard', 'arctic fox']\nherbivores = ['african buffalo', 'moose', 'okapi', 'parakeet']\nomnivores = ['chicken', 'dove', 'mouse', 'pig']\n\ndef animals(w, x, y, z):\n    return '{0}, {1}, {2}, and {3} ARE ALL ANIMALS'.format(w.title(), x, y, z)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "carnivores = ['lion', 'tiger', 'leopard', 'arctic fox']\nherbivores = ['african buffalo', 'moose', 'okapi', 'parakeet']\nomnivores = ['chicken', 'dove', 'mouse', 'pig']\n\ndef animals(w, x, y, z):\n    return '{0}, {1}, {2}, and {3} ARE ALL ANIMALS'.format(w.title(), x, y, z)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271131,
        "id": "a63adff5-db8d-43d2-abb7-748e7d91d4ec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308271131,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example 3"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example 3"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271131,
        "id": "7103c449-d379-49bc-9b92-21b1c09e5e92",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308500000,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "# Too many arguments\n# observe here that map is trying to pass one item each from each of the four iterables to len. This leads len to complain that\n# it is being fed too many arguments\nprint(list(map(len, insects, carnivores, herbivores, omnivores)))"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "# Too many arguments\n# observe here that map is trying to pass one item each from each of the four iterables to len. This leads len to complain that\n# it is being fed too many arguments\nprint(list(map(len, insects, carnivores, herbivores, omnivores)))",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271131,
        "id": "4f3505d9-0b05-4e22-9d23-7e71bf5843f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308271131,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "results in"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "results in"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271131,
        "id": "507bbfad-416b-438e-add9-55c74d15e2a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308560000,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "TypeError: len() takes exactly one argument (4 given)"
            ]
          ]
        },
        "type": "code",
        "version": 5,
        "code": "TypeError: len() takes exactly one argument (4 given)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271131,
        "id": "2a111399-1b39-42cc-b55e-ccdd45c02f4b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308271131,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example 4"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example 4"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271132,
        "id": "1ec8c75c-bba2-4038-891f-bf01967c7a70",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308500000,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "# Too few arguments\n# observe here that map is suppose to execute animal on individual elements of insects one-by-one. But animals complain when\n# it only gets one argument, whereas it was expecting four.\nprint(list(map(animals, insects)))"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "# Too few arguments\n# observe here that map is suppose to execute animal on individual elements of insects one-by-one. But animals complain when\n# it only gets one argument, whereas it was expecting four.\nprint(list(map(animals, insects)))",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271132,
        "id": "58866e81-1c7c-4d9f-b055-c2de12a7becf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308271132,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "results in"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "results in"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271132,
        "id": "4790fa83-3c60-4b2e-85e5-3f15b39cd25b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308500000,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "TypeError: animals() missing 3 required positional arguments: 'x', 'y', and 'z'"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "TypeError: animals() missing 3 required positional arguments: 'x', 'y', and 'z'",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271132,
        "id": "3d84d64c-0fd5-430f-9049-e8bf282ba722",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308271132,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example 5"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example 5"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271132,
        "id": "1b2a4df5-8e1c-47f1-a2a1-f4773b443fd8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308500000,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "# here map supplies w, x, y, z with one value from across the list\nimport pprint\npprint.pprint(list(map(animals, insects, carnivores, herbivores, omnivores)))"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "# here map supplies w, x, y, z with one value from across the list\nimport pprint\npprint.pprint(list(map(animals, insects, carnivores, herbivores, omnivores)))",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271132,
        "id": "ecea1f8a-bf99-47e2-800c-626e8b76e8a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308271132,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "results in"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "results in"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308271132,
        "id": "c062337f-c612-4adc-90fb-2f63099ca446",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308500000,
        "parent_id": "87336419-b832-4b49-a52d-6bd671ec1969",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "['Fly, lion, african buffalo, and chicken ARE ALL ANIMALS',\n'Ant, tiger, moose, and dove ARE ALL ANIMALS',\n'Beetle, leopard, okapi, and mouse ARE ALL ANIMALS',\n'Cankerworm, arctic fox, parakeet, and pig ARE ALL ANIMALS']"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "['Fly, lion, african buffalo, and chicken ARE ALL ANIMALS',\n'Ant, tiger, moose, and dove ARE ALL ANIMALS',\n'Beetle, leopard, okapi, and mouse ARE ALL ANIMALS',\n'Cankerworm, arctic fox, parakeet, and pig ARE ALL ANIMALS']",
        "code_language": "Python"
      }
    ],
    "title": "Series and Parallel Mapping",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}