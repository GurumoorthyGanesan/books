{
  "ID": "0014fea1-1c3f-4b8f-a396-fa12c2bd1192",
  "Root": {
    "alive": true,
    "content": [
      "0b829577-0065-41c3-bf52-40c3a8cc725e",
      "df3b8c7e-1e77-4e68-bb88-19d2fc982a3f",
      "dcd10d89-98ce-4276-8f09-3b2192fcd119",
      "bd2f0c8f-8f4b-4135-aab7-9fd8f69d171d",
      "a01f0653-4ab9-40a2-8e00-986ba42e2396",
      "88fc5a79-e1ea-4d3b-8626-4ac9263be544",
      "101315c4-4f1b-44a7-83be-baf3584e01f0",
      "33c42c63-88ff-41e2-9c9d-c0ea12155f19",
      "5112b8d3-2465-4c34-965d-e43b766164fa",
      "1420979f-e2cf-43af-8c4b-33afe4741504",
      "432b1477-6c0b-424c-bdc6-65c1ded5a3b9",
      "17fbb445-4ff0-47ce-9fc3-c2a7587cd213",
      "77909612-dfc1-462f-8096-d3d1302d6c61",
      "6b162860-af44-4864-93ed-f5feb99f1f37",
      "03b8f73f-5a7a-4e23-bae3-578b5f312e0e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550305644665,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "0014fea1-1c3f-4b8f-a396-fa12c2bd1192",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550306400000,
    "parent_id": "61d34cb1-e32c-45a0-89c4-f6bcc8106406",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Case insensitive string comparisons"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305644660,
        "id": "0b829577-0065-41c3-bf52-40c3a8cc725e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305644660,
        "parent_id": "0014fea1-1c3f-4b8f-a396-fa12c2bd1192",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Comparing string in a case insensitive way seems like something that’s trivial, but it’s not. This section only considers unicode strings (the default in Python 3). Note that Python 2 may have subtle weaknesses relative to Python 3 - the later’s unicode handling is much more complete."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Comparing string in a case insensitive way seems like something that’s trivial, but it’s not. This section only considers unicode strings (the default in Python 3). Note that Python 2 may have subtle weaknesses relative to Python 3 - the later’s unicode handling is much more complete."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305644662,
        "id": "df3b8c7e-1e77-4e68-bb88-19d2fc982a3f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305644662,
        "parent_id": "0014fea1-1c3f-4b8f-a396-fa12c2bd1192",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The first thing to note it that case-removing conversions in unicode aren’t trivial. There is text for which "
            ],
            [
              "text.lower() != text.upper().lower()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", such as "
            ],
            [
              "\"ß\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The first thing to note it that case-removing conversions in unicode aren’t trivial. There is text for which "
          },
          {
            "Text": "text.lower() != text.upper().lower()",
            "AttrFlags": 2
          },
          {
            "Text": ", such as "
          },
          {
            "Text": "\"ß\"",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305644663,
        "id": "dcd10d89-98ce-4276-8f09-3b2192fcd119",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550306400000,
        "parent_id": "0014fea1-1c3f-4b8f-a396-fa12c2bd1192",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e \"ß\".lower()\n'ß'\n\n\u003e\u003e\u003e \"ß\".upper().lower()\n'ss'"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e \"ß\".lower()\n'ß'\n\n\u003e\u003e\u003e \"ß\".upper().lower()\n'ss'",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305644663,
        "id": "bd2f0c8f-8f4b-4135-aab7-9fd8f69d171d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305644663,
        "parent_id": "0014fea1-1c3f-4b8f-a396-fa12c2bd1192",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But let’s say you wanted to caselessly compare "
            ],
            [
              "\"BUSSE\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "\"Buße\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Heck, you probably also want to compare "
            ],
            [
              "\"BUSSE\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "\"BUẞE\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equal - that’s the newer capital form. The recommended way is to use "
            ],
            [
              "casefold",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But let’s say you wanted to caselessly compare "
          },
          {
            "Text": "\"BUSSE\"",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "\"Buße\"",
            "AttrFlags": 2
          },
          {
            "Text": ". Heck, you probably also want to compare "
          },
          {
            "Text": "\"BUSSE\"",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "\"BUẞE\"",
            "AttrFlags": 2
          },
          {
            "Text": " equal - that’s the newer capital form. The recommended way is to use "
          },
          {
            "Text": "casefold",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305644663,
        "id": "a01f0653-4ab9-40a2-8e00-986ba42e2396",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550306400000,
        "parent_id": "0014fea1-1c3f-4b8f-a396-fa12c2bd1192",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e help(str.casefold)\n\"\"\"\nHelp on method_descriptor:\n\ncasefold(...)\n      S.casefold() -\u003e str\n    \n     Return a version of S suitable for caseless comparisons.\n\"\"\""
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e help(str.casefold)\n\"\"\"\nHelp on method_descriptor:\n\ncasefold(...)\n      S.casefold() -\u003e str\n    \n     Return a version of S suitable for caseless comparisons.\n\"\"\"",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305644663,
        "id": "88fc5a79-e1ea-4d3b-8626-4ac9263be544",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305644663,
        "parent_id": "0014fea1-1c3f-4b8f-a396-fa12c2bd1192",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Do not just use "
            ],
            [
              "lower",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". If "
            ],
            [
              "casefold",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not available, doing "
            ],
            [
              ".upper().lower()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " helps (but only somewhat)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Do not just use "
          },
          {
            "Text": "lower",
            "AttrFlags": 2
          },
          {
            "Text": ". If "
          },
          {
            "Text": "casefold",
            "AttrFlags": 2
          },
          {
            "Text": " is not available, doing "
          },
          {
            "Text": ".upper().lower()",
            "AttrFlags": 2
          },
          {
            "Text": " helps (but only somewhat)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305644664,
        "id": "101315c4-4f1b-44a7-83be-baf3584e01f0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305644664,
        "parent_id": "0014fea1-1c3f-4b8f-a396-fa12c2bd1192",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Then you should consider accents. If your font renderer is good, you probably think "
            ],
            [
              "\"ê\" == \"ê\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " - but it doesn’t:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Then you should consider accents. If your font renderer is good, you probably think "
          },
          {
            "Text": "\"ê\" == \"ê\"",
            "AttrFlags": 2
          },
          {
            "Text": " - but it doesn’t:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305644664,
        "id": "33c42c63-88ff-41e2-9c9d-c0ea12155f19",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550306400000,
        "parent_id": "0014fea1-1c3f-4b8f-a396-fa12c2bd1192",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e \"ê\" == \"ê\"\nFalse"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e \"ê\" == \"ê\"\nFalse",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305644664,
        "id": "5112b8d3-2465-4c34-965d-e43b766164fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305644664,
        "parent_id": "0014fea1-1c3f-4b8f-a396-fa12c2bd1192",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is because they are actually"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is because they are actually"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305644665,
        "id": "1420979f-e2cf-43af-8c4b-33afe4741504",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550306400000,
        "parent_id": "0014fea1-1c3f-4b8f-a396-fa12c2bd1192",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e import unicodedata\n\n\u003e\u003e\u003e [unicodedata.name(char) for char in \"ê\"]\n['LATIN SMALL LETTER E WITH CIRCUMFLEX']"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e import unicodedata\n\n\u003e\u003e\u003e [unicodedata.name(char) for char in \"ê\"]\n['LATIN SMALL LETTER E WITH CIRCUMFLEX']",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305644665,
        "id": "432b1477-6c0b-424c-bdc6-65c1ded5a3b9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550306400000,
        "parent_id": "0014fea1-1c3f-4b8f-a396-fa12c2bd1192",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e [unicodedata.name(char) for char in \"ê\"]\n['LATIN SMALL LETTER E', 'COMBINING CIRCUMFLEX ACCENT']"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e [unicodedata.name(char) for char in \"ê\"]\n['LATIN SMALL LETTER E', 'COMBINING CIRCUMFLEX ACCENT']",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305644665,
        "id": "17fbb445-4ff0-47ce-9fc3-c2a7587cd213",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305644665,
        "parent_id": "0014fea1-1c3f-4b8f-a396-fa12c2bd1192",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The simplest way to deal with this is "
            ],
            [
              "unicodedata.normalize",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". You probably want to use "
            ],
            [
              "NFKD",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " normalization, but feel free to check the documentation. Then one does"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The simplest way to deal with this is "
          },
          {
            "Text": "unicodedata.normalize",
            "AttrFlags": 2
          },
          {
            "Text": ". You probably want to use "
          },
          {
            "Text": "NFKD",
            "AttrFlags": 1
          },
          {
            "Text": " normalization, but feel free to check the documentation. Then one does"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305644665,
        "id": "77909612-dfc1-462f-8096-d3d1302d6c61",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550306400000,
        "parent_id": "0014fea1-1c3f-4b8f-a396-fa12c2bd1192",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e unicodedata.normalize(\"NFKD\", \"ê\") == unicodedata.normalize(\"NFKD\", \"ê\")\nTrue"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e unicodedata.normalize(\"NFKD\", \"ê\") == unicodedata.normalize(\"NFKD\", \"ê\")\nTrue",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305644665,
        "id": "6b162860-af44-4864-93ed-f5feb99f1f37",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550305644665,
        "parent_id": "0014fea1-1c3f-4b8f-a396-fa12c2bd1192",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To finish up, here this is expressed in functions:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To finish up, here this is expressed in functions:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550305644665,
        "id": "03b8f73f-5a7a-4e23-bae3-578b5f312e0e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550306400000,
        "parent_id": "0014fea1-1c3f-4b8f-a396-fa12c2bd1192",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "import unicodedata\n\ndef normalize_caseless(text):\n    return unicodedata.normalize(\"NFKD\", text.casefold())\n\ndef caseless_equal(left, right):\n    return normalize_caseless(left) == normalize_caseless(right)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "import unicodedata\n\ndef normalize_caseless(text):\n    return unicodedata.normalize(\"NFKD\", text.casefold())\n\ndef caseless_equal(left, right):\n    return normalize_caseless(left) == normalize_caseless(right)",
        "code_language": "Python"
      }
    ],
    "title": "Case insensitive string comparisons",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}