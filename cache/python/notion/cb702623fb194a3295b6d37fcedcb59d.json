{
  "ID": "cb702623-fb19-4a32-95b6-d37fcedcb59d",
  "Root": {
    "alive": true,
    "content": [
      "51203df3-6d0a-49c2-9be0-7146f32586f9",
      "5a539613-d347-4bcd-9bba-9db80a8a996a",
      "c74dfc8a-a08f-4c82-b4f5-1d40030740f8",
      "58389e0a-8134-4e56-a8aa-a8a443fc36de",
      "b53b794a-29cb-4190-ab4a-86471ed255e7",
      "498b89cb-1923-4f41-8c53-74fe49ba824f",
      "5156523d-286d-42bc-83c3-e4456ca430e0",
      "40225159-a1dc-4ae2-9571-c7367429cf21",
      "ea532334-6017-4dfa-82da-55b5867f94f8",
      "8413b91d-ed6c-4f35-9795-eea44e08caaf",
      "9149f4db-7d73-4d1c-8be8-da93fe161f9c",
      "7c0d3770-ca0b-4f40-8799-361f09778944",
      "11c81255-6e9d-4595-85bd-7e3b26b29956",
      "b2d3cb1c-243a-4567-addc-727eb1c939e2",
      "50fc0443-9b75-4f24-933e-d8966508fea6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550308268714,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "cb702623-fb19-4a32-95b6-d37fcedcb59d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550308440000,
    "parent_id": "a27718c5-df77-4fd4-b80b-880f0a024099",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Mapping values of different iterables"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308268711,
        "id": "51203df3-6d0a-49c2-9be0-7146f32586f9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308268711,
        "parent_id": "cb702623-fb19-4a32-95b6-d37fcedcb59d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example calculating the average of each "
            ],
            [
              "i",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "-th element of multiple iterables:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example calculating the average of each "
          },
          {
            "Text": "i",
            "AttrFlags": 2
          },
          {
            "Text": "-th element of multiple iterables:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308268711,
        "id": "5a539613-d347-4bcd-9bba-9db80a8a996a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308440000,
        "parent_id": "cb702623-fb19-4a32-95b6-d37fcedcb59d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def average(*args):\n    return float(sum(args)) / len(args)  # cast to float - only mandatory for python 2.x\n\nmeasurement1 = [100, 111, 99, 97]\nmeasurement2 = [102, 117, 91, 102]\nmeasurement3 = [104, 102, 95, 101]\n\nlist(map(average, measurement1, measurement2, measurement3))\n# Out: [102.0, 110.0, 95.0, 100.0]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def average(*args):\n    return float(sum(args)) / len(args)  # cast to float - only mandatory for python 2.x\n\nmeasurement1 = [100, 111, 99, 97]\nmeasurement2 = [102, 117, 91, 102]\nmeasurement3 = [104, 102, 95, 101]\n\nlist(map(average, measurement1, measurement2, measurement3))\n# Out: [102.0, 110.0, 95.0, 100.0]",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308268712,
        "id": "c74dfc8a-a08f-4c82-b4f5-1d40030740f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308268712,
        "parent_id": "cb702623-fb19-4a32-95b6-d37fcedcb59d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are different requirements if more than one iterable is passed to "
            ],
            [
              "map",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " depending on the version of python:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are different requirements if more than one iterable is passed to "
          },
          {
            "Text": "map",
            "AttrFlags": 2
          },
          {
            "Text": " depending on the version of python:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308268712,
        "id": "58389e0a-8134-4e56-a8aa-a8a443fc36de",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308268712,
        "parent_id": "cb702623-fb19-4a32-95b6-d37fcedcb59d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The function must take as many parameters as there are iterables:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The function must take as many parameters as there are iterables:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308268712,
        "id": "b53b794a-29cb-4190-ab4a-86471ed255e7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308440000,
        "parent_id": "cb702623-fb19-4a32-95b6-d37fcedcb59d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def median_of_three(a, b, c):\n    return sorted((a, b, c))[1]\n\nlist(map(median_of_three, measurement1, measurement2))"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "def median_of_three(a, b, c):\n    return sorted((a, b, c))[1]\n\nlist(map(median_of_three, measurement1, measurement2))",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308268712,
        "id": "498b89cb-1923-4f41-8c53-74fe49ba824f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308268712,
        "parent_id": "cb702623-fb19-4a32-95b6-d37fcedcb59d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "TypeError: median_of_three() missing 1 required positional argument: ‘c’"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "TypeError: median_of_three() missing 1 required positional argument: ‘c’"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308268712,
        "id": "5156523d-286d-42bc-83c3-e4456ca430e0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308440000,
        "parent_id": "cb702623-fb19-4a32-95b6-d37fcedcb59d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "list(map(median_of_three, measurement1, measurement2, measurement3, measurement3))"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "list(map(median_of_three, measurement1, measurement2, measurement3, measurement3))",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308268712,
        "id": "40225159-a1dc-4ae2-9571-c7367429cf21",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308268712,
        "parent_id": "cb702623-fb19-4a32-95b6-d37fcedcb59d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "TypeError: median_of_three() takes 3 positional arguments but 4 were given"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "TypeError: median_of_three() takes 3 positional arguments but 4 were given"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308268713,
        "id": "ea532334-6017-4dfa-82da-55b5867f94f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308268713,
        "parent_id": "cb702623-fb19-4a32-95b6-d37fcedcb59d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "map",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": The mapping iterates as long as one iterable is still not fully consumed but assumes "
            ],
            [
              "None",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " from the fully consumed iterables:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "map",
            "AttrFlags": 2
          },
          {
            "Text": ": The mapping iterates as long as one iterable is still not fully consumed but assumes "
          },
          {
            "Text": "None",
            "AttrFlags": 2
          },
          {
            "Text": " from the fully consumed iterables:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308268713,
        "id": "8413b91d-ed6c-4f35-9795-eea44e08caaf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308440000,
        "parent_id": "cb702623-fb19-4a32-95b6-d37fcedcb59d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "import operator\n\nmeasurement1 = [100, 111, 99, 97]\nmeasurement2 = [102, 117]\n\n# Calculate difference between elements\nlist(map(operator.sub, measurement1, measurement2))"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "import operator\n\nmeasurement1 = [100, 111, 99, 97]\nmeasurement2 = [102, 117]\n\n# Calculate difference between elements\nlist(map(operator.sub, measurement1, measurement2))",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308268713,
        "id": "9149f4db-7d73-4d1c-8be8-da93fe161f9c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308268713,
        "parent_id": "cb702623-fb19-4a32-95b6-d37fcedcb59d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "TypeError: unsupported operand type(s) for -: ‘int’ and ‘NoneType’"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "TypeError: unsupported operand type(s) for -: ‘int’ and ‘NoneType’"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308268713,
        "id": "7c0d3770-ca0b-4f40-8799-361f09778944",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308268713,
        "parent_id": "cb702623-fb19-4a32-95b6-d37fcedcb59d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "itertools.imap",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "future_builtins.map",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": The mapping stops as soon as one iterable stops:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "itertools.imap",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "future_builtins.map",
            "AttrFlags": 2
          },
          {
            "Text": ": The mapping stops as soon as one iterable stops:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308268713,
        "id": "11c81255-6e9d-4595-85bd-7e3b26b29956",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308440000,
        "parent_id": "cb702623-fb19-4a32-95b6-d37fcedcb59d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import operator\nfrom itertools import imap\n\nmeasurement1 = [100, 111, 99, 97]\nmeasurement2 = [102, 117]\n\n# Calculate difference between elements\nlist(imap(operator.sub, measurement1, measurement2))\n# Out: [-2, -6]\nlist(imap(operator.sub, measurement2, measurement1))\n# Out: [2, 6]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "import operator\nfrom itertools import imap\n\nmeasurement1 = [100, 111, 99, 97]\nmeasurement2 = [102, 117]\n\n# Calculate difference between elements\nlist(imap(operator.sub, measurement1, measurement2))\n# Out: [-2, -6]\nlist(imap(operator.sub, measurement2, measurement1))\n# Out: [2, 6]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308268713,
        "id": "b2d3cb1c-243a-4567-addc-727eb1c939e2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308268713,
        "parent_id": "cb702623-fb19-4a32-95b6-d37fcedcb59d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The mapping stops as soon as one iterable stops:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The mapping stops as soon as one iterable stops:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550308268713,
        "id": "50fc0443-9b75-4f24-933e-d8966508fea6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550308440000,
        "parent_id": "cb702623-fb19-4a32-95b6-d37fcedcb59d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "import operator\n\nmeasurement1 = [100, 111, 99, 97]\nmeasurement2 = [102, 117]\n\n# Calculate difference between elements\nlist(map(operator.sub, measurement1, measurement2))\n# Out: [-2, -6]\nlist(map(operator.sub, measurement2, measurement1))\n# Out: [2, 6]"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "import operator\n\nmeasurement1 = [100, 111, 99, 97]\nmeasurement2 = [102, 117]\n\n# Calculate difference between elements\nlist(map(operator.sub, measurement1, measurement2))\n# Out: [-2, -6]\nlist(map(operator.sub, measurement2, measurement1))\n# Out: [2, 6]",
        "code_language": "Python"
      }
    ],
    "title": "Mapping values of different iterables",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}