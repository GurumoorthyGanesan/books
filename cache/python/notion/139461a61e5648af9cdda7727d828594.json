{
  "ID": "139461a6-1e56-48af-9cdd-a7727d828594",
  "Root": {
    "alive": true,
    "content": [
      "e6fd3b89-3953-4e54-8485-4540cef8a2bc",
      "68f48116-ada8-4df9-be60-b4ef1f4d3d69",
      "21c4cf47-5d27-497f-a191-b5cbe1917f0a",
      "f7b2881b-e22f-4c1e-914e-c3b766bea4c8",
      "4b813371-f0cb-44b5-8d3a-82609225491a",
      "a77b7026-bfa2-4317-819d-0bf2f70b72ae",
      "ef6ad232-9cce-4c99-8d96-71e8fe11237a",
      "2c00713c-addd-402c-b73a-ecf36e41ccb7",
      "c35ee367-0c05-4bfc-bab5-aa543966de63"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550388757981,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "139461a6-1e56-48af-9cdd-a7727d828594",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550468100000,
    "parent_id": "69f0ba3a-4a7a-4d7e-b1e4-66175a2bc4a5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Practical examples of exception handling"
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388757976,
        "id": "e6fd3b89-3953-4e54-8485-4540cef8a2bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388757976,
        "parent_id": "139461a6-1e56-48af-9cdd-a7727d828594",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "User input"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "User input"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388757979,
        "id": "68f48116-ada8-4df9-be60-b4ef1f4d3d69",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388757979,
        "parent_id": "139461a6-1e56-48af-9cdd-a7727d828594",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Imagine you want a user to enter a number via "
            ],
            [
              "input",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". You want to ensure that the input is a number. You can use "
            ],
            [
              "try",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "/"
            ],
            [
              "except",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Imagine you want a user to enter a number via "
          },
          {
            "Text": "input",
            "AttrFlags": 2
          },
          {
            "Text": ". You want to ensure that the input is a number. You can use "
          },
          {
            "Text": "try",
            "AttrFlags": 2
          },
          {
            "Text": "/"
          },
          {
            "Text": "except",
            "AttrFlags": 2
          },
          {
            "Text": " for this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388757979,
        "id": "21c4cf47-5d27-497f-a191-b5cbe1917f0a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550468100000,
        "parent_id": "139461a6-1e56-48af-9cdd-a7727d828594",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "while True:\n    try:\n        nb = int(input('Enter a number: '))\n        break\n    except ValueError:\n        print('This is not a number, try again.')"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "while True:\n    try:\n        nb = int(input('Enter a number: '))\n        break\n    except ValueError:\n        print('This is not a number, try again.')",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388757980,
        "id": "f7b2881b-e22f-4c1e-914e-c3b766bea4c8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388757980,
        "parent_id": "139461a6-1e56-48af-9cdd-a7727d828594",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: Python 2.x would use "
            ],
            [
              "raw_input",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instead; the function "
            ],
            [
              "input",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " exists in Python 2.x but has different semantics. In the above example, "
            ],
            [
              "input",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " would also accept expressions such as "
            ],
            [
              "2 + 2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which evaluate to a number."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: Python 2.x would use "
          },
          {
            "Text": "raw_input",
            "AttrFlags": 2
          },
          {
            "Text": " instead; the function "
          },
          {
            "Text": "input",
            "AttrFlags": 2
          },
          {
            "Text": " exists in Python 2.x but has different semantics. In the above example, "
          },
          {
            "Text": "input",
            "AttrFlags": 2
          },
          {
            "Text": " would also accept expressions such as "
          },
          {
            "Text": "2 + 2",
            "AttrFlags": 2
          },
          {
            "Text": " which evaluate to a number."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388757980,
        "id": "4b813371-f0cb-44b5-8d3a-82609225491a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388757980,
        "parent_id": "139461a6-1e56-48af-9cdd-a7727d828594",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the input could not be converted to an integer, a "
            ],
            [
              "ValueError",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is raised. You can catch it with "
            ],
            [
              "except",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". If no exception is raised, "
            ],
            [
              "break",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " jumps out of the loop. After the loop, "
            ],
            [
              "nb",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " contains an integer."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the input could not be converted to an integer, a "
          },
          {
            "Text": "ValueError",
            "AttrFlags": 2
          },
          {
            "Text": " is raised. You can catch it with "
          },
          {
            "Text": "except",
            "AttrFlags": 2
          },
          {
            "Text": ". If no exception is raised, "
          },
          {
            "Text": "break",
            "AttrFlags": 2
          },
          {
            "Text": " jumps out of the loop. After the loop, "
          },
          {
            "Text": "nb",
            "AttrFlags": 2
          },
          {
            "Text": " contains an integer."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388757980,
        "id": "a77b7026-bfa2-4317-819d-0bf2f70b72ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388757980,
        "parent_id": "139461a6-1e56-48af-9cdd-a7727d828594",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Dictionaries"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Dictionaries"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388757981,
        "id": "ef6ad232-9cce-4c99-8d96-71e8fe11237a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388757981,
        "parent_id": "139461a6-1e56-48af-9cdd-a7727d828594",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Imagine you are iterating over a list of consecutive integers, like "
            ],
            [
              "range(n)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and you have a list of dictionaries "
            ],
            [
              "d",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that contains information about things to do when you encounter some particular integers, say "
            ],
            [
              "skip the ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "d[i]",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " next ones",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Imagine you are iterating over a list of consecutive integers, like "
          },
          {
            "Text": "range(n)",
            "AttrFlags": 2
          },
          {
            "Text": ", and you have a list of dictionaries "
          },
          {
            "Text": "d",
            "AttrFlags": 2
          },
          {
            "Text": " that contains information about things to do when you encounter some particular integers, say "
          },
          {
            "Text": "skip the ",
            "AttrFlags": 4
          },
          {
            "Text": "d[i]",
            "AttrFlags": 6
          },
          {
            "Text": " next ones",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388757981,
        "id": "2c00713c-addd-402c-b73a-ecf36e41ccb7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550468100000,
        "parent_id": "139461a6-1e56-48af-9cdd-a7727d828594",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "d = [{7: 3}, {25: 9}, {38: 5}]\n\nfor i in range(len(d)):\n    do_stuff(i)\n    try:\n       dic = d[i]\n       i += dic[i]\n    except KeyError:\n       i += 1"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "d = [{7: 3}, {25: 9}, {38: 5}]\n\nfor i in range(len(d)):\n    do_stuff(i)\n    try:\n       dic = d[i]\n       i += dic[i]\n    except KeyError:\n       i += 1",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550388757981,
        "id": "c35ee367-0c05-4bfc-bab5-aa543966de63",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550388757981,
        "parent_id": "139461a6-1e56-48af-9cdd-a7727d828594",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A "
            ],
            [
              "KeyError",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be raised when you try to get a value from a dictionary for a key that doesn’t exist."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A "
          },
          {
            "Text": "KeyError",
            "AttrFlags": 2
          },
          {
            "Text": " will be raised when you try to get a value from a dictionary for a key that doesn’t exist."
          }
        ]
      }
    ],
    "title": "Practical examples of exception handling",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}