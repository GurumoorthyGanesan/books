{
  "ID": "16a3bd83-4e54-443d-9f10-07a6bc217516",
  "Root": {
    "alive": true,
    "content": [
      "bfcf2312-9162-45f7-836d-a66b61b88083",
      "67330355-75f2-484a-a6b5-7d64ba47678d",
      "f3f4b040-1393-4ad3-a1cb-ddb465e81cd7",
      "a7c075ac-ea9e-4979-92e6-7151c9a7a0a6",
      "57a574d7-9912-4150-a60a-341f5cf610b6",
      "a06cf4f6-1331-4563-8816-112b7285410a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550350069332,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "16a3bd83-4e54-443d-9f10-07a6bc217516",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550350200000,
    "parent_id": "2f958caa-d35e-4318-8653-1bc5b9dd8d29",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Introduction to context managers and the with statement"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350069331,
        "id": "bfcf2312-9162-45f7-836d-a66b61b88083",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350069331,
        "parent_id": "16a3bd83-4e54-443d-9f10-07a6bc217516",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A context manager is an object that is notified when a context (a block of code) "
            ],
            [
              "starts",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "ends",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". You commonly use one with the "
            ],
            [
              "with",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement. It takes care of the notifying."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A context manager is an object that is notified when a context (a block of code) "
          },
          {
            "Text": "starts",
            "AttrFlags": 4
          },
          {
            "Text": " and "
          },
          {
            "Text": "ends",
            "AttrFlags": 4
          },
          {
            "Text": ". You commonly use one with the "
          },
          {
            "Text": "with",
            "AttrFlags": 2
          },
          {
            "Text": " statement. It takes care of the notifying."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350069331,
        "id": "67330355-75f2-484a-a6b5-7d64ba47678d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350069331,
        "parent_id": "16a3bd83-4e54-443d-9f10-07a6bc217516",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example, file objects are context managers. When a context ends, the file object is closed automatically:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example, file objects are context managers. When a context ends, the file object is closed automatically:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350069331,
        "id": "f3f4b040-1393-4ad3-a1cb-ddb465e81cd7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350200000,
        "parent_id": "16a3bd83-4e54-443d-9f10-07a6bc217516",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "open_file = open(filename)\nwith open_file:\n    file_contents = open_file.read()\n\n# the open_file object has automatically been closed."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "open_file = open(filename)\nwith open_file:\n    file_contents = open_file.read()\n\n# the open_file object has automatically been closed.",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350069332,
        "id": "a7c075ac-ea9e-4979-92e6-7151c9a7a0a6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350069332,
        "parent_id": "16a3bd83-4e54-443d-9f10-07a6bc217516",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The above example is usually simplified by using the "
            ],
            [
              "as",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The above example is usually simplified by using the "
          },
          {
            "Text": "as",
            "AttrFlags": 2
          },
          {
            "Text": " keyword:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350069332,
        "id": "57a574d7-9912-4150-a60a-341f5cf610b6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350200000,
        "parent_id": "16a3bd83-4e54-443d-9f10-07a6bc217516",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "with open(filename) as open_file:\n    file_contents = open_file.read()\n\n# the open_file object has automatically been closed."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "with open(filename) as open_file:\n    file_contents = open_file.read()\n\n# the open_file object has automatically been closed.",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550350069332,
        "id": "a06cf4f6-1331-4563-8816-112b7285410a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550350069332,
        "parent_id": "16a3bd83-4e54-443d-9f10-07a6bc217516",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Anything that ends execution of the block causes the context manager’s exit method to be called. This includes exceptions, and can be useful when an error causes you to prematurely exit from an open file or connection. Exiting a script without properly closing files/connections is a bad idea, that may cause data loss or other problems. By using a context manager you can ensure that precautions are always taken to prevent damage or loss in this way. This feature was added in Python 2.5."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Anything that ends execution of the block causes the context manager’s exit method to be called. This includes exceptions, and can be useful when an error causes you to prematurely exit from an open file or connection. Exiting a script without properly closing files/connections is a bad idea, that may cause data loss or other problems. By using a context manager you can ensure that precautions are always taken to prevent damage or loss in this way. This feature was added in Python 2.5."
          }
        ]
      }
    ],
    "title": "Introduction to context managers and the with statement",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}