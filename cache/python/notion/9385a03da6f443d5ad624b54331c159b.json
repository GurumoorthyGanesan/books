{
  "ID": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
  "Root": {
    "alive": true,
    "content": [
      "3bcde268-0a8a-4aee-bf3b-106ff0284c93",
      "bba0e0f6-98e1-407b-8e8c-91c07b68af9d",
      "a44e8557-9d07-4883-a0b5-c8bc629be8ec",
      "7b516ddb-d9d4-4b98-8b5b-7aa7077ee432",
      "c837101e-8e00-41eb-bea5-acd7d2689112",
      "53a8d13d-95e4-4563-9af6-1cb50726743a",
      "a12abe42-c24d-42fa-82fc-b253954c17f7",
      "fad499e5-7dce-4b5b-a3d9-2c3ff270a658",
      "05f42199-04df-460c-89eb-6b5644096ab0",
      "6e57cf9d-4dfb-4a78-954b-b4ee2230188f",
      "056cef35-e197-416a-971f-e92d6a90893d",
      "eda029da-63bc-43f0-ba08-2abe178b173d",
      "6a3ff699-4836-4411-b4a2-58454c9cbe45",
      "3ab94c91-b165-4045-80c2-5bb11bab8fde",
      "3f03f52d-d206-47ba-be66-d07fbb4b4151",
      "98e00f08-3c2f-4257-980c-3306aae077b1",
      "e70354c4-4e0a-4cbb-8a82-c7e3888b7c53",
      "1fbcfc3e-6c05-4c38-982f-f56f486775e0",
      "b08f12fa-96c1-4143-a5fa-612db182aeae"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550352417507,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550352540000,
    "parent_id": "db51fd68-7539-4de8-9163-adf389315acf",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Basics"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550352417501,
        "id": "3bcde268-0a8a-4aee-bf3b-106ff0284c93",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352417501,
        "parent_id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Python 3",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "str",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the type for unicode-enabled strings, while "
            ],
            [
              "bytes",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the type for sequences of raw bytes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Python 3",
            "AttrFlags": 1
          },
          {
            "Text": " "
          },
          {
            "Text": "str",
            "AttrFlags": 2
          },
          {
            "Text": " is the type for unicode-enabled strings, while "
          },
          {
            "Text": "bytes",
            "AttrFlags": 2
          },
          {
            "Text": " is the type for sequences of raw bytes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550352417504,
        "id": "bba0e0f6-98e1-407b-8e8c-91c07b68af9d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352480000,
        "parent_id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "type(\"f\") == type(u\"f\")  # True, \u003cclass 'str'\u003e\ntype(b\"f\")               # \u003cclass 'bytes'\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "type(\"f\") == type(u\"f\")  # True, \u003cclass 'str'\u003e\ntype(b\"f\")               # \u003cclass 'bytes'\u003e",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550352417504,
        "id": "a44e8557-9d07-4883-a0b5-c8bc629be8ec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352417504,
        "parent_id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Python 2",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " a casual string was a sequence of raw bytes by default and the unicode string was every string with “u” prefix."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Python 2",
            "AttrFlags": 1
          },
          {
            "Text": " a casual string was a sequence of raw bytes by default and the unicode string was every string with “u” prefix."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550352417505,
        "id": "7b516ddb-d9d4-4b98-8b5b-7aa7077ee432",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352540000,
        "parent_id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "type(\"f\") == type(b\"f\")  # True, \u003ctype 'str'\u003e\ntype(u\"f\")               # \u003ctype 'unicode'\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "type(\"f\") == type(b\"f\")  # True, \u003ctype 'str'\u003e\ntype(u\"f\")               # \u003ctype 'unicode'\u003e",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550352417505,
        "id": "c837101e-8e00-41eb-bea5-acd7d2689112",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352417505,
        "parent_id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Unicode to bytes"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Unicode to bytes"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550352417505,
        "id": "53a8d13d-95e4-4563-9af6-1cb50726743a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352417505,
        "parent_id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Unicode strings can be converted to bytes with "
            ],
            [
              ".encode(encoding)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Unicode strings can be converted to bytes with "
          },
          {
            "Text": ".encode(encoding)",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550352417505,
        "id": "a12abe42-c24d-42fa-82fc-b253954c17f7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352417505,
        "parent_id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Python 3",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Python 3",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550352417505,
        "id": "fad499e5-7dce-4b5b-a3d9-2c3ff270a658",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352540000,
        "parent_id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e \"£13.55\".encode('utf8')\nb'\\xc2\\xa313.55'\n\u003e\u003e\u003e \"£13.55\".encode('utf16')\nb'\\xff\\xfe\\xa3\\x001\\x003\\x00.\\x005\\x005\\x00'"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e \"£13.55\".encode('utf8')\nb'\\xc2\\xa313.55'\n\u003e\u003e\u003e \"£13.55\".encode('utf16')\nb'\\xff\\xfe\\xa3\\x001\\x003\\x00.\\x005\\x005\\x00'",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550352417505,
        "id": "05f42199-04df-460c-89eb-6b5644096ab0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352417505,
        "parent_id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Python 2",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Python 2",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550352417506,
        "id": "6e57cf9d-4dfb-4a78-954b-b4ee2230188f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352417506,
        "parent_id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "in py2 the default console encoding is "
            ],
            [
              "sys.getdefaultencoding() == 'ascii'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and not "
            ],
            [
              "utf-8",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as in py3, therefore printing it as in the previous example is not directly possible."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "in py2 the default console encoding is "
          },
          {
            "Text": "sys.getdefaultencoding() == 'ascii'",
            "AttrFlags": 2
          },
          {
            "Text": " and not "
          },
          {
            "Text": "utf-8",
            "AttrFlags": 2
          },
          {
            "Text": " as in py3, therefore printing it as in the previous example is not directly possible."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550352417506,
        "id": "056cef35-e197-416a-971f-e92d6a90893d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352540000,
        "parent_id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e print type(u\"£13.55\".encode('utf8'))\n\u003ctype 'str'\u003e\n\u003e\u003e\u003e print u\"£13.55\".encode('utf8')\nSyntaxError: Non-ASCII character '\\xc2' in...\n\n# with encoding set inside a file\n\n# -*- coding: utf-8 -*-\n\u003e\u003e\u003e print u\"£13.55\".encode('utf8')\n┬ú13.55"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e print type(u\"£13.55\".encode('utf8'))\n\u003ctype 'str'\u003e\n\u003e\u003e\u003e print u\"£13.55\".encode('utf8')\nSyntaxError: Non-ASCII character '\\xc2' in...\n\n# with encoding set inside a file\n\n# -*- coding: utf-8 -*-\n\u003e\u003e\u003e print u\"£13.55\".encode('utf8')\n┬ú13.55",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550352417506,
        "id": "eda029da-63bc-43f0-ba08-2abe178b173d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352417506,
        "parent_id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the encoding can’t handle the string, a "
            ],
            [
              "UnicodeEncodeError",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is raised:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the encoding can’t handle the string, a "
          },
          {
            "Text": "UnicodeEncodeError",
            "AttrFlags": 2
          },
          {
            "Text": " is raised:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550352417506,
        "id": "6a3ff699-4836-4411-b4a2-58454c9cbe45",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352540000,
        "parent_id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e \"£13.55\".encode('ascii')\nTraceback (most recent call last):\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\nUnicodeEncodeError: 'ascii' codec can't encode character '\\xa3' in position 0: ordinal not in range(128)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e \"£13.55\".encode('ascii')\nTraceback (most recent call last):\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\nUnicodeEncodeError: 'ascii' codec can't encode character '\\xa3' in position 0: ordinal not in range(128)",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550352417506,
        "id": "3ab94c91-b165-4045-80c2-5bb11bab8fde",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352417506,
        "parent_id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Bytes to unicode"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Bytes to unicode"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550352417506,
        "id": "3f03f52d-d206-47ba-be66-d07fbb4b4151",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352417506,
        "parent_id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Bytes can be converted to unicode strings with "
            ],
            [
              ".decode(encoding)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Bytes can be converted to unicode strings with "
          },
          {
            "Text": ".decode(encoding)",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550352417506,
        "id": "98e00f08-3c2f-4257-980c-3306aae077b1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352417506,
        "parent_id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A sequence of bytes can only be converted into a unicode string via the appropriate encoding!",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A sequence of bytes can only be converted into a unicode string via the appropriate encoding!",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550352417507,
        "id": "e70354c4-4e0a-4cbb-8a82-c7e3888b7c53",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352540000,
        "parent_id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e b'\\xc2\\xa313.55'.decode('utf8')\n'£13.55'"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e b'\\xc2\\xa313.55'.decode('utf8')\n'£13.55'",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550352417507,
        "id": "1fbcfc3e-6c05-4c38-982f-f56f486775e0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352417507,
        "parent_id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the encoding can’t handle the string, a "
            ],
            [
              "UnicodeDecodeError",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is raised:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the encoding can’t handle the string, a "
          },
          {
            "Text": "UnicodeDecodeError",
            "AttrFlags": 2
          },
          {
            "Text": " is raised:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550352417507,
        "id": "b08f12fa-96c1-4143-a5fa-612db182aeae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550352540000,
        "parent_id": "9385a03d-a6f4-43d5-ad62-4b54331c159b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "\u003e\u003e\u003e b'\\xc2\\xa313.55'.decode('utf16')\nTraceback (most recent call last):\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\n  File \"/Users/csaftoiu/csaftoiu-github/yahoo-groups-backup/.virtualenv/bin/../lib/python3.5/encodings/utf_16.py\", line 16, in decode\n    return codecs.utf_16_decode(input, errors, True)\nUnicodeDecodeError: 'utf-16-le' codec can't decode byte 0x35 in position 6: truncated data"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e\u003e\u003e b'\\xc2\\xa313.55'.decode('utf16')\nTraceback (most recent call last):\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\n  File \"/Users/csaftoiu/csaftoiu-github/yahoo-groups-backup/.virtualenv/bin/../lib/python3.5/encodings/utf_16.py\", line 16, in decode\n    return codecs.utf_16_decode(input, errors, True)\nUnicodeDecodeError: 'utf-16-le' codec can't decode byte 0x35 in position 6: truncated data",
        "code_language": "Python"
      }
    ],
    "title": "Basics",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}