{
  "ID": "ce467032-b529-44a6-b270-3ec028e4f386",
  "Root": {
    "alive": true,
    "content": [
      "6427a97c-7950-49c8-9230-445baf481bdb",
      "911df478-7779-4a0c-b12b-404c7eadb7db",
      "6aaa147e-bc41-4a70-b508-97e938e6065c",
      "08341156-ef95-4e82-b352-3a015d326d2b",
      "772b8504-74af-49bc-a5ce-c2027f5de1f5",
      "945396cc-ebb5-45d7-9a97-d85e84ab19e6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550356774439,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ce467032-b529-44a6-b270-3ec028e4f386",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550357160000,
    "parent_id": "36ec32ec-9810-403d-8744-950ef6ffd6e0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Receiving data via UDP"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550356774435,
        "id": "6427a97c-7950-49c8-9230-445baf481bdb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550356774435,
        "parent_id": "ce467032-b529-44a6-b270-3ec028e4f386",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "UDP is a connectionless protocol. This means that peers sending messages do not require establishing a connection before sending messages. "
            ],
            [
              "socket.recvfrom",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "thus returns a tuple ("
            ],
            [
              "msg",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " [the message the socket received], "
            ],
            [
              "addr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " [the address of the sender])"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "UDP is a connectionless protocol. This means that peers sending messages do not require establishing a connection before sending messages. "
          },
          {
            "Text": "socket.recvfrom",
            "AttrFlags": 2
          },
          {
            "Text": "thus returns a tuple ("
          },
          {
            "Text": "msg",
            "AttrFlags": 2
          },
          {
            "Text": " [the message the socket received], "
          },
          {
            "Text": "addr",
            "AttrFlags": 2
          },
          {
            "Text": " [the address of the sender])"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550356774438,
        "id": "911df478-7779-4a0c-b12b-404c7eadb7db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550356774438,
        "parent_id": "ce467032-b529-44a6-b270-3ec028e4f386",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A UDP server using solely the "
            ],
            [
              "socket",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " module:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A UDP server using solely the "
          },
          {
            "Text": "socket",
            "AttrFlags": 2
          },
          {
            "Text": " module:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550356774439,
        "id": "6aaa147e-bc41-4a70-b508-97e938e6065c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550357160000,
        "parent_id": "ce467032-b529-44a6-b270-3ec028e4f386",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "from socket import socket, AF_INET, SOCK_DGRAM\nsock = socket(AF_INET, SOCK_DGRAM)\nsock.bind(('localhost', 6667))\n\nwhile True:\n    msg, addr = sock.recvfrom(8192)  # This is the amount of bytes to read at maximum\n    print(\"Got message from %s: %s\" % (addr, msg))"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "from socket import socket, AF_INET, SOCK_DGRAM\nsock = socket(AF_INET, SOCK_DGRAM)\nsock.bind(('localhost', 6667))\n\nwhile True:\n    msg, addr = sock.recvfrom(8192)  # This is the amount of bytes to read at maximum\n    print(\"Got message from %s: %s\" % (addr, msg))",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550356774439,
        "id": "08341156-ef95-4e82-b352-3a015d326d2b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550356774439,
        "parent_id": "ce467032-b529-44a6-b270-3ec028e4f386",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Below is an alternative implementation using "
            ],
            [
              "socketserver.UDPServer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Below is an alternative implementation using "
          },
          {
            "Text": "socketserver.UDPServer",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550356774439,
        "id": "772b8504-74af-49bc-a5ce-c2027f5de1f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550357160000,
        "parent_id": "ce467032-b529-44a6-b270-3ec028e4f386",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "from socketserver import BaseRequestHandler, UDPServer\n\nclass MyHandler(BaseRequestHandler):\n    def handle(self):\n        print(\"Got connection from: %s\" % self.client_address)\n        msg, sock = self.request\n        print(\"It said: %s\" % msg)\n        sock.sendto(\"Got your message!\".encode(), self.client_address) # Send reply\n\nserv = UDPServer(('localhost', 6667), MyHandler)\nserv.serve_forever()"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "from socketserver import BaseRequestHandler, UDPServer\n\nclass MyHandler(BaseRequestHandler):\n    def handle(self):\n        print(\"Got connection from: %s\" % self.client_address)\n        msg, sock = self.request\n        print(\"It said: %s\" % msg)\n        sock.sendto(\"Got your message!\".encode(), self.client_address) # Send reply\n\nserv = UDPServer(('localhost', 6667), MyHandler)\nserv.serve_forever()",
        "code_language": "Python"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550356774439,
        "id": "945396cc-ebb5-45d7-9a97-d85e84ab19e6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550356774439,
        "parent_id": "ce467032-b529-44a6-b270-3ec028e4f386",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By default, "
            ],
            [
              "sockets",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block. This means that execution of the script will wait until the socket receives data."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By default, "
          },
          {
            "Text": "sockets",
            "AttrFlags": 2
          },
          {
            "Text": " block. This means that execution of the script will wait until the socket receives data."
          }
        ]
      }
    ],
    "title": "Receiving data via UDP",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}