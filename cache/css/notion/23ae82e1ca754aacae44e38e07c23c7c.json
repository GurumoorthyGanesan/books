{
  "ID": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
  "Root": {
    "alive": true,
    "content": [
      "3ff4911d-9ea8-40f2-9dad-3ec8c0c5d8ad",
      "bbe372da-b438-4745-bc2f-bffe3113deff",
      "0f6c9c60-fe50-4baa-967e-42cf09f68a1e",
      "59432041-b3bb-4b32-952a-8a9efb85c54d",
      "ced9296d-39b0-4fd0-a50f-911b8b6f4b5f",
      "ef3fe217-d79e-4b48-908c-5ead3c36d3b8",
      "da8ba75d-1809-4a72-8e68-254f1b959817",
      "27ffc89b-c7a0-461d-bb94-82a920b369e2",
      "900e63eb-c93f-45fb-9e5a-a926fab292c9",
      "08d8e155-f430-4e0c-b438-bf6ed8319acb",
      "0605b1f8-02fe-4036-bd59-09aa0b7fc2d8",
      "61aee850-eb9d-4fd6-be10-8592fe9c7e2f",
      "81a0f78e-f1a3-452b-a14f-b546be3825a5",
      "fa43b30d-afa0-4f2c-a6c5-6704617edeb1",
      "b0063d65-452a-438b-b0e2-dec21eb4fda0",
      "c4e26df4-45fe-46d0-9ecc-449dd3d5bb24",
      "56036d2c-9bc0-4286-b8ad-fb35fa83f387",
      "e79794ac-4eb9-4148-8c1f-a5f2023b905c",
      "c4df51d3-8079-421a-a9e9-749a822f32c8",
      "a4eef493-cfcc-46c6-be9b-79e1a43e25d8",
      "233b5862-f2e3-4c87-af8a-080b0640a47c",
      "e3de2e62-f3b9-434b-a58b-161b9a6530b2",
      "9fe607d6-c9e1-472b-9a86-e3c51c919efa",
      "35973905-eb4d-4a72-b1fe-16706a91bce6",
      "026553b6-f8ca-42b7-8249-cb58f0454a2d",
      "91bcfb6e-8204-41db-b12a-3d10e1a7a08e",
      "c7d4a13e-2d8d-4a87-83ac-782ddbd16664",
      "06351b19-eba1-40a0-87f6-d1f528d2c497",
      "d6d92f9e-91e5-435a-970d-55b3b89e122b",
      "473cf360-bc90-4fa2-90db-447c7acf0b7c",
      "99c375ca-c412-4b67-9399-8db1d07f31e5",
      "c318489a-6ca5-4bc7-8ddb-6e27e172e6f4",
      "0f2e8b5e-6007-4b76-beb3-f0af52fa482c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551945055475,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551945055475,
    "parent_id": "a532af1c-38ff-4edb-a80f-44aaf3ccc3dc",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Calculating Selector Specificity"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055463,
        "id": "3ff4911d-9ea8-40f2-9dad-3ec8c0c5d8ad",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055463,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Each individual CSS Selector has its own specificity value. Every selector in a sequence increases the sequence’s overall specificity. Selectors fall into one of three different specificity groups: "
            ],
            [
              "A",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "B",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "c",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". When multiple selector sequences select a given element, the browser uses the styles applied by the sequence with the highest overall specificity."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Each individual CSS Selector has its own specificity value. Every selector in a sequence increases the sequence’s overall specificity. Selectors fall into one of three different specificity groups: "
          },
          {
            "Text": "A",
            "AttrFlags": 4
          },
          {
            "Text": ", "
          },
          {
            "Text": "B",
            "AttrFlags": 4
          },
          {
            "Text": " and "
          },
          {
            "Text": "c",
            "AttrFlags": 4
          },
          {
            "Text": ". When multiple selector sequences select a given element, the browser uses the styles applied by the sequence with the highest overall specificity."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055466,
        "id": "bbe372da-b438-4745-bc2f-bffe3113deff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055466,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Group | Comprised of | Examples |\n—— | –––––––––––––––––––– | ––––– |"
            ],
            [
              "A",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " | id selectors | "
            ],
            [
              "#foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "B",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " | class selectors attribute selectors pseudo-classes | "
            ],
            [
              ".bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "[title]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "[colspan=\"2\"]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              ":hover",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              ":nth-child(2)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "c",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " | type selectors pseudo-elements | "
            ],
            [
              "div",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "li",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "::before",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "::first-letter",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Group | Comprised of | Examples |\n—— | –––––––––––––––––––– | ––––– |"
          },
          {
            "Text": "A",
            "AttrFlags": 4
          },
          {
            "Text": " | id selectors | "
          },
          {
            "Text": "#foo",
            "AttrFlags": 2
          },
          {
            "Text": " |"
          },
          {
            "Text": "B",
            "AttrFlags": 4
          },
          {
            "Text": " | class selectors attribute selectors pseudo-classes | "
          },
          {
            "Text": ".bar",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "[title]",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "[colspan=\"2\"]",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": ":hover",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": ":nth-child(2)",
            "AttrFlags": 2
          },
          {
            "Text": " |"
          },
          {
            "Text": "c",
            "AttrFlags": 4
          },
          {
            "Text": " | type selectors pseudo-elements | "
          },
          {
            "Text": "div",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "li",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "::before",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "::first-letter",
            "AttrFlags": 2
          },
          {
            "Text": " |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055466,
        "id": "0f6c9c60-fe50-4baa-967e-42cf09f68a1e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055466,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Group "
            ],
            [
              "A",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " is the most specific, followed by Group "
            ],
            [
              "B",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", then finally Group "
            ],
            [
              "c",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Group "
          },
          {
            "Text": "A",
            "AttrFlags": 4
          },
          {
            "Text": " is the most specific, followed by Group "
          },
          {
            "Text": "B",
            "AttrFlags": 4
          },
          {
            "Text": ", then finally Group "
          },
          {
            "Text": "c",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055467,
        "id": "59432041-b3bb-4b32-952a-8a9efb85c54d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055467,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The universal selector ("
            ],
            [
              "\\*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") and combinators (like "
            ],
            [
              "\\\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "~",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") have no specificity."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The universal selector ("
          },
          {
            "Text": "\\*",
            "AttrFlags": 2
          },
          {
            "Text": ") and combinators (like "
          },
          {
            "Text": "\\\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "~",
            "AttrFlags": 2
          },
          {
            "Text": ") have no specificity."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055467,
        "id": "ced9296d-39b0-4fd0-a50f-911b8b6f4b5f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055467,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example 1: Specificity of various selector sequences"
            ]
          ]
        },
        "type": "sub_sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example 1: Specificity of various selector sequences"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055467,
        "id": "ef3fe217-d79e-4b48-908c-5ead3c36d3b8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055467,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#foo #baz {}      /* a=2, b=0, c=0 */\n\n#foo.bar {}       /* a=1, b=1, c=0 */\n\n#foo {}           /* a=1, b=0, c=0 */\n\n.bar:hover {}     /* a=0, b=2, c=0 */\n\ndiv.bar {}        /* a=0, b=1, c=1 */\n\n:hover {}         /* a=0, b=1, c=0 */\n\n[title] {}        /* a=0, b=1, c=0 */\n\n.bar {}           /* a=0, b=1, c=0 */\n\ndiv ul + li {}    /* a=0, b=0, c=3 */\n\np::after {}       /* a=0, b=0, c=2 */\n\n*::before {}      /* a=0, b=0, c=1 */\n\n::before {}       /* a=0, b=0, c=1 */\n\ndiv {}            /* a=0, b=0, c=1 */\n\n* {}              /* a=0, b=0, c=0 */"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#foo #baz {}      /* a=2, b=0, c=0 */\n\n#foo.bar {}       /* a=1, b=1, c=0 */\n\n#foo {}           /* a=1, b=0, c=0 */\n\n.bar:hover {}     /* a=0, b=2, c=0 */\n\ndiv.bar {}        /* a=0, b=1, c=1 */\n\n:hover {}         /* a=0, b=1, c=0 */\n\n[title] {}        /* a=0, b=1, c=0 */\n\n.bar {}           /* a=0, b=1, c=0 */\n\ndiv ul + li {}    /* a=0, b=0, c=3 */\n\np::after {}       /* a=0, b=0, c=2 */\n\n*::before {}      /* a=0, b=0, c=1 */\n\n::before {}       /* a=0, b=0, c=1 */\n\ndiv {}            /* a=0, b=0, c=1 */\n\n* {}              /* a=0, b=0, c=0 */",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055467,
        "id": "da8ba75d-1809-4a72-8e68-254f1b959817",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055467,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example 2: How specificity is used by the browser"
            ]
          ]
        },
        "type": "sub_sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example 2: How specificity is used by the browser"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055467,
        "id": "27ffc89b-c7a0-461d-bb94-82a920b369e2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055467,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Imagine the following CSS implementation:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Imagine the following CSS implementation:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055467,
        "id": "900e63eb-c93f-45fb-9e5a-a926fab292c9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055467,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#foo {\n  color: blue;\n}\n\n.bar {\n  color: red;\n  background: black;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#foo {\n  color: blue;\n}\n\n.bar {\n  color: red;\n  background: black;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055468,
        "id": "08d8e155-f430-4e0c-b438-bf6ed8319acb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055468,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here we have an ID selector which declares "
            ],
            [
              "color",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as "
            ],
            [
              "blue",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", and a class selector which declares "
            ],
            [
              "color",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as "
            ],
            [
              "red",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "background",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as "
            ],
            [
              "black",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here we have an ID selector which declares "
          },
          {
            "Text": "color",
            "AttrFlags": 2
          },
          {
            "Text": " as "
          },
          {
            "Text": "blue",
            "AttrFlags": 4
          },
          {
            "Text": ", and a class selector which declares "
          },
          {
            "Text": "color",
            "AttrFlags": 2
          },
          {
            "Text": " as "
          },
          {
            "Text": "red",
            "AttrFlags": 4
          },
          {
            "Text": " and "
          },
          {
            "Text": "background",
            "AttrFlags": 2
          },
          {
            "Text": " as "
          },
          {
            "Text": "black",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055468,
        "id": "0605b1f8-02fe-4036-bd59-09aa0b7fc2d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055468,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An element with an ID of "
            ],
            [
              "#foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and a class of "
            ],
            [
              ".bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be selected by both declarations. ID selectors have a Group "
            ],
            [
              "A",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " specificity and class selectors have a Group "
            ],
            [
              "B",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " specificity. An ID selector outweighs any number of class selectors. Because of this, "
            ],
            [
              "color:blue;",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " from the "
            ],
            [
              "#foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " selector and the "
            ],
            [
              "background:black;",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " from the "
            ],
            [
              ".bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " selector will be applied to the element. The higher specificity of the ID selector will cause the browser to ignore the "
            ],
            [
              ".bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " selector’s "
            ],
            [
              "color",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " declaration."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An element with an ID of "
          },
          {
            "Text": "#foo",
            "AttrFlags": 2
          },
          {
            "Text": " and a class of "
          },
          {
            "Text": ".bar",
            "AttrFlags": 2
          },
          {
            "Text": " will be selected by both declarations. ID selectors have a Group "
          },
          {
            "Text": "A",
            "AttrFlags": 4
          },
          {
            "Text": " specificity and class selectors have a Group "
          },
          {
            "Text": "B",
            "AttrFlags": 4
          },
          {
            "Text": " specificity. An ID selector outweighs any number of class selectors. Because of this, "
          },
          {
            "Text": "color:blue;",
            "AttrFlags": 2
          },
          {
            "Text": " from the "
          },
          {
            "Text": "#foo",
            "AttrFlags": 2
          },
          {
            "Text": " selector and the "
          },
          {
            "Text": "background:black;",
            "AttrFlags": 2
          },
          {
            "Text": " from the "
          },
          {
            "Text": ".bar",
            "AttrFlags": 2
          },
          {
            "Text": " selector will be applied to the element. The higher specificity of the ID selector will cause the browser to ignore the "
          },
          {
            "Text": ".bar",
            "AttrFlags": 2
          },
          {
            "Text": " selector’s "
          },
          {
            "Text": "color",
            "AttrFlags": 2
          },
          {
            "Text": " declaration."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055468,
        "id": "61aee850-eb9d-4fd6-be10-8592fe9c7e2f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055468,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now imagine a different CSS implementation:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now imagine a different CSS implementation:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055468,
        "id": "81a0f78e-f1a3-452b-a14f-b546be3825a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055468,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              ".bar {\n  color: red;\n  background: black;\n}\n\n.baz {\n  background: white;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": ".bar {\n  color: red;\n  background: black;\n}\n\n.baz {\n  background: white;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055469,
        "id": "fa43b30d-afa0-4f2c-a6c5-6704617edeb1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055469,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here we have two class selectors; one of which declares "
            ],
            [
              "color",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as "
            ],
            [
              "red",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "background",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as "
            ],
            [
              "black",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", and the other declares "
            ],
            [
              "background",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as "
            ],
            [
              "white",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here we have two class selectors; one of which declares "
          },
          {
            "Text": "color",
            "AttrFlags": 2
          },
          {
            "Text": " as "
          },
          {
            "Text": "red",
            "AttrFlags": 4
          },
          {
            "Text": " and "
          },
          {
            "Text": "background",
            "AttrFlags": 2
          },
          {
            "Text": " as "
          },
          {
            "Text": "black",
            "AttrFlags": 4
          },
          {
            "Text": ", and the other declares "
          },
          {
            "Text": "background",
            "AttrFlags": 2
          },
          {
            "Text": " as "
          },
          {
            "Text": "white",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055469,
        "id": "b0063d65-452a-438b-b0e2-dec21eb4fda0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055469,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An element with both the "
            ],
            [
              ".bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              ".baz",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " classes will be affected by both of these declarations, however the problem we have now is that both "
            ],
            [
              ".bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              ".baz",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " have an identical Group "
            ],
            [
              "B",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " specificity. The cascading nature of CSS resolves this for us: as "
            ],
            [
              ".baz",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is defined "
            ],
            [
              "after",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              ".bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", our element ends up with the "
            ],
            [
              "red",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "color",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " from "
            ],
            [
              ".bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " but the "
            ],
            [
              "white",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "background",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " from "
            ],
            [
              ".baz",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An element with both the "
          },
          {
            "Text": ".bar",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": ".baz",
            "AttrFlags": 2
          },
          {
            "Text": " classes will be affected by both of these declarations, however the problem we have now is that both "
          },
          {
            "Text": ".bar",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": ".baz",
            "AttrFlags": 2
          },
          {
            "Text": " have an identical Group "
          },
          {
            "Text": "B",
            "AttrFlags": 4
          },
          {
            "Text": " specificity. The cascading nature of CSS resolves this for us: as "
          },
          {
            "Text": ".baz",
            "AttrFlags": 2
          },
          {
            "Text": " is defined "
          },
          {
            "Text": "after",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": ".bar",
            "AttrFlags": 2
          },
          {
            "Text": ", our element ends up with the "
          },
          {
            "Text": "red",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "color",
            "AttrFlags": 2
          },
          {
            "Text": " from "
          },
          {
            "Text": ".bar",
            "AttrFlags": 2
          },
          {
            "Text": " but the "
          },
          {
            "Text": "white",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "background",
            "AttrFlags": 2
          },
          {
            "Text": " from "
          },
          {
            "Text": ".baz",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055469,
        "id": "c4e26df4-45fe-46d0-9ecc-449dd3d5bb24",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055469,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example 3: How to manipulate specificity"
            ]
          ]
        },
        "type": "sub_sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example 3: How to manipulate specificity"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055470,
        "id": "56036d2c-9bc0-4286-b8ad-fb35fa83f387",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055470,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The last snippet from Example 2 above can be manipulated to ensure our "
            ],
            [
              ".bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class selector’s "
            ],
            [
              "color",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " declaration is used instead of that of the "
            ],
            [
              ".baz",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class selector."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The last snippet from Example 2 above can be manipulated to ensure our "
          },
          {
            "Text": ".bar",
            "AttrFlags": 2
          },
          {
            "Text": " class selector’s "
          },
          {
            "Text": "color",
            "AttrFlags": 2
          },
          {
            "Text": " declaration is used instead of that of the "
          },
          {
            "Text": ".baz",
            "AttrFlags": 2
          },
          {
            "Text": " class selector."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055470,
        "id": "e79794ac-4eb9-4148-8c1f-a5f2023b905c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055470,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              ".bar {}        /* a=0, b=1, c=0 */\n.baz {}        /* a=0, b=1, c=0 */"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": ".bar {}        /* a=0, b=1, c=0 */\n.baz {}        /* a=0, b=1, c=0 */",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055470,
        "id": "c4df51d3-8079-421a-a9e9-749a822f32c8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055470,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The most common way to achieve this would be to find out what other selectors can be applied to the "
            ],
            [
              ".bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " selector sequence. For example, if the "
            ],
            [
              ".bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class was only ever applied to "
            ],
            [
              "span",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " elements, we could modify the "
            ],
            [
              ".bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " selector to "
            ],
            [
              "span.bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This would give it a new Group "
            ],
            [
              "C",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " specificity, which would override the "
            ],
            [
              ".baz",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " selector’s lack thereof:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The most common way to achieve this would be to find out what other selectors can be applied to the "
          },
          {
            "Text": ".bar",
            "AttrFlags": 2
          },
          {
            "Text": " selector sequence. For example, if the "
          },
          {
            "Text": ".bar",
            "AttrFlags": 2
          },
          {
            "Text": " class was only ever applied to "
          },
          {
            "Text": "span",
            "AttrFlags": 2
          },
          {
            "Text": " elements, we could modify the "
          },
          {
            "Text": ".bar",
            "AttrFlags": 2
          },
          {
            "Text": " selector to "
          },
          {
            "Text": "span.bar",
            "AttrFlags": 2
          },
          {
            "Text": ". This would give it a new Group "
          },
          {
            "Text": "C",
            "AttrFlags": 4
          },
          {
            "Text": " specificity, which would override the "
          },
          {
            "Text": ".baz",
            "AttrFlags": 2
          },
          {
            "Text": " selector’s lack thereof:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055470,
        "id": "a4eef493-cfcc-46c6-be9b-79e1a43e25d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055470,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "span.bar {}    /* a=0, b=1, c=1 */\n.baz {}        /* a=0, b=1, c=0 */"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "span.bar {}    /* a=0, b=1, c=1 */\n.baz {}        /* a=0, b=1, c=0 */",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055472,
        "id": "233b5862-f2e3-4c87-af8a-080b0640a47c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055472,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However it may not always possible to find another common selector which is shared between any element which uses the "
            ],
            [
              ".bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class. Because of this, CSS allows us to duplicate selectors to increase specificity. Instead of just "
            ],
            [
              ".bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", we can use "
            ],
            [
              ".bar.bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instead (See "
            ],
            [
              "The grammar of Selectors, W3C Recommendation",
              [
                [
                  "a",
                  "https://www.w3.org/TR/css3-selectors/#grammar"
                ]
              ]
            ],
            [
              "). This still selects any element with a class of "
            ],
            [
              ".bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", but now has double the Group "
            ],
            [
              "B",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " specificity:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However it may not always possible to find another common selector which is shared between any element which uses the "
          },
          {
            "Text": ".bar",
            "AttrFlags": 2
          },
          {
            "Text": " class. Because of this, CSS allows us to duplicate selectors to increase specificity. Instead of just "
          },
          {
            "Text": ".bar",
            "AttrFlags": 2
          },
          {
            "Text": ", we can use "
          },
          {
            "Text": ".bar.bar",
            "AttrFlags": 2
          },
          {
            "Text": " instead (See "
          },
          {
            "Text": "The grammar of Selectors, W3C Recommendation",
            "Link": "https://www.w3.org/TR/css3-selectors/#grammar"
          },
          {
            "Text": "). This still selects any element with a class of "
          },
          {
            "Text": ".bar",
            "AttrFlags": 2
          },
          {
            "Text": ", but now has double the Group "
          },
          {
            "Text": "B",
            "AttrFlags": 4
          },
          {
            "Text": " specificity:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055472,
        "id": "e3de2e62-f3b9-434b-a58b-161b9a6530b2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055472,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              ".bar.bar {}    /* a=0, b=2, c=0 */\n.baz {}        /* a=0, b=1, c=0 */"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": ".bar.bar {}    /* a=0, b=2, c=0 */\n.baz {}        /* a=0, b=1, c=0 */",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055473,
        "id": "9fe607d6-c9e1-472b-9a86-e3c51c919efa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055473,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "!important",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and inline style declarations"
            ]
          ]
        },
        "type": "sub_sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "!important",
            "AttrFlags": 2
          },
          {
            "Text": " and inline style declarations"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055473,
        "id": "35973905-eb4d-4a72-b1fe-16706a91bce6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055473,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "!important",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " flag on a style declaration and styles declared by the HTML "
            ],
            [
              "style",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " attribute are considered to have a greater specificity than any selector. If these exist, the style declaration they affect will overrule other declarations regardless of their specificity. That is, unless you have more than one declaration that contains an "
            ],
            [
              "!important",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " flag for the same property that apply to the same element. Then, normal specificity rules will apply to those properties in reference to each other."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "!important",
            "AttrFlags": 2
          },
          {
            "Text": " flag on a style declaration and styles declared by the HTML "
          },
          {
            "Text": "style",
            "AttrFlags": 2
          },
          {
            "Text": " attribute are considered to have a greater specificity than any selector. If these exist, the style declaration they affect will overrule other declarations regardless of their specificity. That is, unless you have more than one declaration that contains an "
          },
          {
            "Text": "!important",
            "AttrFlags": 2
          },
          {
            "Text": " flag for the same property that apply to the same element. Then, normal specificity rules will apply to those properties in reference to each other."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055473,
        "id": "026553b6-f8ca-42b7-8249-cb58f0454a2d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055473,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Because they completely override specificity, the use of "
            ],
            [
              "!important",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is frowned upon in most use cases. One should use it as little as possible. To keep CSS code efficient and maintainable in the long run, it’s almost always better to increase the specificity of the surrounding selector than to use "
            ],
            [
              "!important",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Because they completely override specificity, the use of "
          },
          {
            "Text": "!important",
            "AttrFlags": 2
          },
          {
            "Text": " is frowned upon in most use cases. One should use it as little as possible. To keep CSS code efficient and maintainable in the long run, it’s almost always better to increase the specificity of the surrounding selector than to use "
          },
          {
            "Text": "!important",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055473,
        "id": "91bcfb6e-8204-41db-b12a-3d10e1a7a08e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055473,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One of those rare exceptions where "
            ],
            [
              "!important",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not frowned upon, is when implementing generic helper classes like a "
            ],
            [
              ".hidden",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              ".background-yellow",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class that are supposed to always override one or more properties wherever they are encountered. And even then, you need to know what you’re doing. The last thing you want, when writing maintainable CSS, is to have "
            ],
            [
              "!important",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " flags throughout your CSS."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One of those rare exceptions where "
          },
          {
            "Text": "!important",
            "AttrFlags": 2
          },
          {
            "Text": " is not frowned upon, is when implementing generic helper classes like a "
          },
          {
            "Text": ".hidden",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": ".background-yellow",
            "AttrFlags": 2
          },
          {
            "Text": " class that are supposed to always override one or more properties wherever they are encountered. And even then, you need to know what you’re doing. The last thing you want, when writing maintainable CSS, is to have "
          },
          {
            "Text": "!important",
            "AttrFlags": 2
          },
          {
            "Text": " flags throughout your CSS."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055474,
        "id": "c7d4a13e-2d8d-4a87-83ac-782ddbd16664",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055474,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A final note"
            ]
          ]
        },
        "type": "sub_sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "A final note"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055474,
        "id": "06351b19-eba1-40a0-87f6-d1f528d2c497",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055474,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A common misconception about CSS specificity is that the Group "
            ],
            [
              "A",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "B",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "c",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " values should be combined with each other ("
            ],
            [
              "a=1, b=5, c=1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " =\u003e 151). This is "
            ],
            [
              "not",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " the case. If this were the case, having 20 of a Group "
            ],
            [
              "B",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "c",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " selector would be enough to override a single Group "
            ],
            [
              "A",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "B",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " selector respectively. The three groups should be regarded as individual levels of specificity. Specificity cannot be represented by a single value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A common misconception about CSS specificity is that the Group "
          },
          {
            "Text": "A",
            "AttrFlags": 4
          },
          {
            "Text": ", "
          },
          {
            "Text": "B",
            "AttrFlags": 4
          },
          {
            "Text": " and "
          },
          {
            "Text": "c",
            "AttrFlags": 4
          },
          {
            "Text": " values should be combined with each other ("
          },
          {
            "Text": "a=1, b=5, c=1",
            "AttrFlags": 2
          },
          {
            "Text": " =\u003e 151). This is "
          },
          {
            "Text": "not",
            "AttrFlags": 1
          },
          {
            "Text": " the case. If this were the case, having 20 of a Group "
          },
          {
            "Text": "B",
            "AttrFlags": 4
          },
          {
            "Text": " or "
          },
          {
            "Text": "c",
            "AttrFlags": 4
          },
          {
            "Text": " selector would be enough to override a single Group "
          },
          {
            "Text": "A",
            "AttrFlags": 4
          },
          {
            "Text": " or "
          },
          {
            "Text": "B",
            "AttrFlags": 4
          },
          {
            "Text": " selector respectively. The three groups should be regarded as individual levels of specificity. Specificity cannot be represented by a single value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055474,
        "id": "d6d92f9e-91e5-435a-970d-55b3b89e122b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055474,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When creating your CSS style sheet, you should maintain the lowest specificity as possible. If you need to make the specificity a little higher to overwrite another method, make it higher but as low as possible to make it higher. You shouldn’t need to have a selector like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When creating your CSS style sheet, you should maintain the lowest specificity as possible. If you need to make the specificity a little higher to overwrite another method, make it higher but as low as possible to make it higher. You shouldn’t need to have a selector like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055474,
        "id": "473cf360-bc90-4fa2-90db-447c7acf0b7c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055474,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "body.page header.container nav div#main-nav li a {}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "body.page header.container nav div#main-nav li a {}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055474,
        "id": "99c375ca-c412-4b67-9399-8db1d07f31e5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055474,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This makes future changes harder and pollutes that css page."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This makes future changes harder and pollutes that css page."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055474,
        "id": "c318489a-6ca5-4bc7-8ddb-6e27e172e6f4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055474,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551945055475,
        "id": "0f2e8b5e-6007-4b76-beb3-f0af52fa482c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551945055475,
        "parent_id": "23ae82e1-ca75-4aac-ae44-e38e07c23c7c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can calculate the specificity of your selector "
            ],
            [
              "here",
              [
                [
                  "a",
                  "http://specificity.keegan.st/"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can calculate the specificity of your selector "
          },
          {
            "Text": "here",
            "Link": "http://specificity.keegan.st/"
          }
        ]
      }
    ],
    "title": "Calculating Selector Specificity",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}