{
  "ID": "3baf60ad-7158-4be4-841d-932bb67697d8",
  "Root": {
    "alive": true,
    "content": [
      "290c8e51-6397-46ea-b24f-f3771ceeac78",
      "3f30fa24-2c99-47c9-8f6b-bb20a546018a",
      "81d2ea08-4bcc-46a9-8170-c0559cfbad59"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523887661,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "3baf60ad-7158-4be4-841d-932bb67697d8",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552301700000,
    "parent_id": "193b149e-733b-4344-8898-29dc4a2ef0b0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "typename"
        ]
      ]
    },
    "type": "page",
    "version": 14,
    "content_resolved": [
      {
        "alive": true,
        "content": [
          "5adab5db-1c5e-4dad-ad53-1b549ba10b91"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523887659,
        "id": "290c8e51-6397-46ea-b24f-f3771ceeac78",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552301640000,
        "parent_id": "3baf60ad-7158-4be4-841d-932bb67697d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When followed by a qualified name, "
            ],
            [
              "typename",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " specifies that it is the name of a type. This is often required in templates, in particular, when the nested name specifier is a dependent type other than the current instantiation. In this example, "
            ],
            [
              "std::decay\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " depends on the template parameter "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", so in order to name the nested type "
            ],
            [
              "type",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", we need to prefix the entire qualified name with "
            ],
            [
              "typename",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". For more details, see "
            ],
            [
              "Where and why do I have to put the “template” and “typename” keywords?",
              [
                [
                  "a",
                  "http://stackoverflow.com/questions/610245/where-and-why-do-i-have-to-put-the-template-and-typename-keywords"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 8,
        "content_resolved": [
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550523887659,
            "id": "5adab5db-1c5e-4dad-ad53-1b549ba10b91",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550799240000,
            "parent_id": "290c8e51-6397-46ea-b24f-f3771ceeac78",
            "parent_table": "block",
            "properties": {
              "language": [
                [
                  "C++"
                ]
              ],
              "title": [
                [
                  "template \u003cclass T\u003e\nauto decay_copy(T\u0026\u0026 r) -\u003e typename std::decay\u003cT\u003e::type;"
                ]
              ]
            },
            "type": "code",
            "version": 6,
            "code": "template \u003cclass T\u003e\nauto decay_copy(T\u0026\u0026 r) -\u003e typename std::decay\u003cT\u003e::type;",
            "code_language": "C++"
          }
        ],
        "inline_content": [
          {
            "Text": "When followed by a qualified name, "
          },
          {
            "Text": "typename",
            "AttrFlags": 2
          },
          {
            "Text": " specifies that it is the name of a type. This is often required in templates, in particular, when the nested name specifier is a dependent type other than the current instantiation. In this example, "
          },
          {
            "Text": "std::decay\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " depends on the template parameter "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": ", so in order to name the nested type "
          },
          {
            "Text": "type",
            "AttrFlags": 2
          },
          {
            "Text": ", we need to prefix the entire qualified name with "
          },
          {
            "Text": "typename",
            "AttrFlags": 2
          },
          {
            "Text": ". For more details, see "
          },
          {
            "Text": "Where and why do I have to put the “template” and “typename” keywords?",
            "Link": "http://stackoverflow.com/questions/610245/where-and-why-do-i-have-to-put-the-template-and-typename-keywords"
          }
        ]
      },
      {
        "alive": true,
        "content": [
          "4590bc80-aa5f-4c5c-a1b8-0e3769d8b952"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523887660,
        "id": "3f30fa24-2c99-47c9-8f6b-bb20a546018a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552301640000,
        "parent_id": "3baf60ad-7158-4be4-841d-932bb67697d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduces a type parameter in the declaration of a "
            ],
            [
              "template",
              [
                [
                  "a",
                  "https://www.notion.so/kjkpublic/Templates-94bfa8684e024b90841b817c34132524"
                ]
              ]
            ],
            [
              ". In this context, it is interchangeable with "
            ],
            [
              "class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 6,
        "content_resolved": [
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550523887660,
            "id": "4590bc80-aa5f-4c5c-a1b8-0e3769d8b952",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550799240000,
            "parent_id": "3f30fa24-2c99-47c9-8f6b-bb20a546018a",
            "parent_table": "block",
            "properties": {
              "language": [
                [
                  "C++"
                ]
              ],
              "title": [
                [
                  "template \u003ctypename T\u003e\nconst T\u0026 min(const T\u0026 x, const T\u0026 y) {\n    return b \u003c a ? b : a;\n}"
                ]
              ]
            },
            "type": "code",
            "version": 5,
            "code": "template \u003ctypename T\u003e\nconst T\u0026 min(const T\u0026 x, const T\u0026 y) {\n    return b \u003c a ? b : a;\n}",
            "code_language": "C++"
          }
        ],
        "inline_content": [
          {
            "Text": "Introduces a type parameter in the declaration of a "
          },
          {
            "Text": "template",
            "Link": "https://www.notion.so/kjkpublic/Templates-94bfa8684e024b90841b817c34132524"
          },
          {
            "Text": ". In this context, it is interchangeable with "
          },
          {
            "Text": "class",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "content": [
          "db1b9ee6-0f07-4fdb-9158-8fd3722f3d59"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523887661,
        "id": "81d2ea08-4bcc-46a9-8170-c0559cfbad59",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552301700000,
        "parent_id": "3baf60ad-7158-4be4-841d-932bb67697d8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "typename",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can also be used when declaring a "
            ],
            [
              "template template parameter",
              [
                [
                  "a",
                  "https://www.notion.so/kjkpublic/Template-template-parameters-f1bd470ff5a8468bbff44bb1e330b9c6"
                ]
              ]
            ],
            [
              ", preceding the name of the parameter, just like "
            ],
            [
              "class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 6,
        "content_resolved": [
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550523887661,
            "id": "db1b9ee6-0f07-4fdb-9158-8fd3722f3d59",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550799240000,
            "parent_id": "81d2ea08-4bcc-46a9-8170-c0559cfbad59",
            "parent_table": "block",
            "properties": {
              "language": [
                [
                  "C++"
                ]
              ],
              "title": [
                [
                  "template \u003ctemplate \u003cclass T\u003e typename U\u003e\nvoid f() {\n    U\u003cint\u003e::do_it();\n    U\u003cdouble\u003e::do_it();\n}"
                ]
              ]
            },
            "type": "code",
            "version": 5,
            "code": "template \u003ctemplate \u003cclass T\u003e typename U\u003e\nvoid f() {\n    U\u003cint\u003e::do_it();\n    U\u003cdouble\u003e::do_it();\n}",
            "code_language": "C++"
          }
        ],
        "inline_content": [
          {
            "Text": "typename",
            "AttrFlags": 2
          },
          {
            "Text": " can also be used when declaring a "
          },
          {
            "Text": "template template parameter",
            "Link": "https://www.notion.so/kjkpublic/Template-template-parameters-f1bd470ff5a8468bbff44bb1e330b9c6"
          },
          {
            "Text": ", preceding the name of the parameter, just like "
          },
          {
            "Text": "class",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "typename",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}