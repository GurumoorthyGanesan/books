{
  "ID": "ff4cab1d-649c-4630-9ef7-b398d3d26fad",
  "Root": {
    "alive": true,
    "content": [
      "ee275f3d-6c2c-4978-9b69-078458d6875f",
      "12380bf9-72af-4744-8945-e50a3f2f4f6f",
      "21869163-6fc8-49fa-876a-d6f11840d700",
      "1d3fcee4-d7c8-4134-b4d0-0fe0ed0a86f1",
      "371482f2-bf1a-4759-b744-077f613df2f2",
      "3bf25ef1-07fd-41f5-993c-9c762da711b7"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522014575,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ff4cab1d-649c-4630-9ef7-b398d3d26fad",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550780340000,
    "parent_id": "b96c747c-3d87-49a0-b2bb-264f7c11b216",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Reading a struct from a formatted text file"
        ]
      ]
    },
    "type": "page",
    "version": 14,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522014572,
        "id": "ee275f3d-6c2c-4978-9b69-078458d6875f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550780340000,
        "parent_id": "ff4cab1d-649c-4630-9ef7-b398d3d26fad",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "struct info_type\n{\n    std::string name;\n    int age;\n    float height;\n    \n    // we define an overload of operator\u003e\u003e as a friend function which\n    // gives in privileged access to private data members \n    friend std::istream\u0026 operator\u003e\u003e(std::istream\u0026 is, info_type\u0026 info)\n    {\n        // skip whitespace\n        is \u003e\u003e std::ws;\n        std::getline(is, info.name);\n        is \u003e\u003e info.age;\n        is \u003e\u003e info.height;\n        return is;\n    }\n};\n\nvoid func4()\n{\n    auto file = std::ifstream(\"file4.txt\");\n\n    std::vector\u003cinfo_type\u003e v;\n\n    for(info_type info; file \u003e\u003e info;) // keep reading until we run out\n    {\n        // we only get here if the read succeeded\n        v.push_back(info);\n    }\n\n    for(auto const\u0026 info: v)\n    {\n        std::cout \u003c\u003c \"  name: \" \u003c\u003c info.name \u003c\u003c '\\n';\n        std::cout \u003c\u003c \"   age: \" \u003c\u003c info.age \u003c\u003c \" years\" \u003c\u003c '\\n';\n        std::cout \u003c\u003c \"height: \" \u003c\u003c info.height \u003c\u003c \"lbs\" \u003c\u003c '\\n';\n        std::cout \u003c\u003c '\\n';\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "struct info_type\n{\n    std::string name;\n    int age;\n    float height;\n    \n    // we define an overload of operator\u003e\u003e as a friend function which\n    // gives in privileged access to private data members \n    friend std::istream\u0026 operator\u003e\u003e(std::istream\u0026 is, info_type\u0026 info)\n    {\n        // skip whitespace\n        is \u003e\u003e std::ws;\n        std::getline(is, info.name);\n        is \u003e\u003e info.age;\n        is \u003e\u003e info.height;\n        return is;\n    }\n};\n\nvoid func4()\n{\n    auto file = std::ifstream(\"file4.txt\");\n\n    std::vector\u003cinfo_type\u003e v;\n\n    for(info_type info; file \u003e\u003e info;) // keep reading until we run out\n    {\n        // we only get here if the read succeeded\n        v.push_back(info);\n    }\n\n    for(auto const\u0026 info: v)\n    {\n        std::cout \u003c\u003c \"  name: \" \u003c\u003c info.name \u003c\u003c '\\n';\n        std::cout \u003c\u003c \"   age: \" \u003c\u003c info.age \u003c\u003c \" years\" \u003c\u003c '\\n';\n        std::cout \u003c\u003c \"height: \" \u003c\u003c info.height \u003c\u003c \"lbs\" \u003c\u003c '\\n';\n        std::cout \u003c\u003c '\\n';\n    }\n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522014575,
        "id": "12380bf9-72af-4744-8945-e50a3f2f4f6f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522014575,
        "parent_id": "ff4cab1d-649c-4630-9ef7-b398d3d26fad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "file4.txt",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "file4.txt",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522014575,
        "id": "21869163-6fc8-49fa-876a-d6f11840d700",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522014575,
        "parent_id": "ff4cab1d-649c-4630-9ef7-b398d3d26fad",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Wogger Wabbit\n2\n6.2\nBilbo Baggins\n111\n81.3\nMary Poppins\n29\n154.8"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Wogger Wabbit\n2\n6.2\nBilbo Baggins\n111\n81.3\nMary Poppins\n29\n154.8",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522014575,
        "id": "1d3fcee4-d7c8-4134-b4d0-0fe0ed0a86f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522014575,
        "parent_id": "ff4cab1d-649c-4630-9ef7-b398d3d26fad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522014575,
        "id": "371482f2-bf1a-4759-b744-077f613df2f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522014575,
        "parent_id": "ff4cab1d-649c-4630-9ef7-b398d3d26fad",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "name: Wogger Wabbit\n age: 2 years\nheight: 6.2lbs\n\nname: Bilbo Baggins\n age: 111 years\nheight: 81.3lbs\n\nname: Mary Poppins\n age: 29 years\nheight: 154.8lbs"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "name: Wogger Wabbit\n age: 2 years\nheight: 6.2lbs\n\nname: Bilbo Baggins\n age: 111 years\nheight: 81.3lbs\n\nname: Mary Poppins\n age: 29 years\nheight: 154.8lbs",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550780340000,
        "id": "3bf25ef1-07fd-41f5-993c-9c762da711b7",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550780340000,
        "parent_id": "ff4cab1d-649c-4630-9ef7-b398d3d26fad",
        "parent_table": "block",
        "type": "text",
        "version": 3
      }
    ],
    "title": "Reading a struct from a formatted text file",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}