{
  "ID": "7ed1172a-e891-48da-98e3-040c9e294361",
  "Root": {
    "alive": true,
    "content": [
      "a6293710-6979-40e7-8224-7b618e1db909",
      "860dea0c-ac4a-4873-9997-b58096cde720",
      "ab947d3f-3696-4d24-96e6-fc51f4ddbb76",
      "98b1fafc-e649-419f-b1b9-332b71142b4c",
      "d7394f03-310e-4777-a5b8-c7c5acabbef3",
      "feb19080-036d-4f8c-b216-145385028bb6",
      "0cf9fc6e-c58a-4dd2-a6b4-384c0ec2176d",
      "e4256514-8170-4e71-b442-6b5e6ae6f7d2",
      "f1616e7e-638b-4440-ad92-bf7f861e2c5e",
      "e82103b2-2aba-4947-80fc-e55dfc621872",
      "a8268e0c-3478-4a44-807d-df3aed4efb1c",
      "ad7d93b2-40ec-49ec-b738-bde54a8b50b0",
      "a54d4920-a3fd-4b7d-94d7-ebe0798ad229",
      "8e94271c-ecd7-4810-a735-b1591a818d4f",
      "5c8942c6-a9ba-4a43-a80b-a3180bf654a7"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522027685,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "7ed1172a-e891-48da-98e3-040c9e294361",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552303260000,
    "parent_id": "40e8450d-4736-4ad0-be7d-a2d9307ddf4f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Non-static member functions"
        ]
      ]
    },
    "type": "page",
    "version": 14,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522027682,
        "id": "a6293710-6979-40e7-8224-7b618e1db909",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552303080000,
        "parent_id": "7ed1172a-e891-48da-98e3-040c9e294361",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A class can have "
            ],
            [
              "non-static member functions",
              [
                [
                  "a",
                  "https://www.notion.so/kjkpublic/Non-static-member-functions-2f06e16467454c46940292f51f9f9266"
                ]
              ]
            ],
            [
              ", which operate on individual instances of the class."
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "A class can have "
          },
          {
            "Text": "non-static member functions",
            "Link": "https://www.notion.so/kjkpublic/Non-static-member-functions-2f06e16467454c46940292f51f9f9266"
          },
          {
            "Text": ", which operate on individual instances of the class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522027682,
        "id": "860dea0c-ac4a-4873-9997-b58096cde720",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550801700000,
        "parent_id": "7ed1172a-e891-48da-98e3-040c9e294361",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "class CL {\n  public:\n    void member_function() {}\n};"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "class CL {\n  public:\n    void member_function() {}\n};",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522027682,
        "id": "ab947d3f-3696-4d24-96e6-fc51f4ddbb76",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522027682,
        "parent_id": "7ed1172a-e891-48da-98e3-040c9e294361",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These functions are called on an instance of the class, like so:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These functions are called on an instance of the class, like so:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522027682,
        "id": "98b1fafc-e649-419f-b1b9-332b71142b4c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550801760000,
        "parent_id": "7ed1172a-e891-48da-98e3-040c9e294361",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "CL instance;\ninstance.member_function();"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "CL instance;\ninstance.member_function();",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522027682,
        "id": "d7394f03-310e-4777-a5b8-c7c5acabbef3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522027682,
        "parent_id": "7ed1172a-e891-48da-98e3-040c9e294361",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "They can be defined either inside or outside the class definition; if defined outside, they are specified as being in the class’ scope."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "They can be defined either inside or outside the class definition; if defined outside, they are specified as being in the class’ scope."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522027682,
        "id": "feb19080-036d-4f8c-b216-145385028bb6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550801760000,
        "parent_id": "7ed1172a-e891-48da-98e3-040c9e294361",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct ST {\n    void  defined_inside() {}\n    void defined_outside();\n};\nvoid ST::defined_outside() {}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "struct ST {\n    void  defined_inside() {}\n    void defined_outside();\n};\nvoid ST::defined_outside() {}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522027683,
        "id": "0cf9fc6e-c58a-4dd2-a6b4-384c0ec2176d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552303200000,
        "parent_id": "7ed1172a-e891-48da-98e3-040c9e294361",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "They can be "
            ],
            [
              "CV-qualified",
              [
                [
                  "a",
                  "https://www.notion.so/kjkpublic/this-Pointer-CV-Qualifiers-8cb5829035354b28b01f81262ac0be66"
                ]
              ]
            ],
            [
              " and/or "
            ],
            [
              "ref-qualified",
              [
                [
                  "a",
                  "https://www.notion.so/kjkpublic/this-Pointer-Ref-Qualifiers-caf51e30f41f433eae69415061293786"
                ]
              ]
            ],
            [
              ", affecting how they see the instance they’re called upon; the function will see the instance as having the specified cv-qualifier(s), if any. Which version is called will be based on the instance’s cv-qualifiers. If there is no version with the same cv-qualifiers as the instance, then a more-cv-qualified version will be called if available."
            ]
          ]
        },
        "type": "text",
        "version": 7,
        "inline_content": [
          {
            "Text": "They can be "
          },
          {
            "Text": "CV-qualified",
            "Link": "https://www.notion.so/kjkpublic/this-Pointer-CV-Qualifiers-8cb5829035354b28b01f81262ac0be66"
          },
          {
            "Text": " and/or "
          },
          {
            "Text": "ref-qualified",
            "Link": "https://www.notion.so/kjkpublic/this-Pointer-Ref-Qualifiers-caf51e30f41f433eae69415061293786"
          },
          {
            "Text": ", affecting how they see the instance they’re called upon; the function will see the instance as having the specified cv-qualifier(s), if any. Which version is called will be based on the instance’s cv-qualifiers. If there is no version with the same cv-qualifiers as the instance, then a more-cv-qualified version will be called if available."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522027684,
        "id": "e4256514-8170-4e71-b442-6b5e6ae6f7d2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550801760000,
        "parent_id": "7ed1172a-e891-48da-98e3-040c9e294361",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "struct CVQualifiers {\n    void func()                   {} // 1: Instance is non-cv-qualified.\n    void func() const             {} // 2: Instance is const.\n\n    void cv_only() const volatile {}\n};\n\nCVQualifiers       non_cv_instance;\nconst CVQualifiers      c_instance;\n\nnon_cv_instance.func(); // Calls #1.\nc_instance.func();      // Calls #2.\n\nnon_cv_instance.cv_only(); // Calls const volatile version.\nc_instance.cv_only();      // Calls const volatile version."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "struct CVQualifiers {\n    void func()                   {} // 1: Instance is non-cv-qualified.\n    void func() const             {} // 2: Instance is const.\n\n    void cv_only() const volatile {}\n};\n\nCVQualifiers       non_cv_instance;\nconst CVQualifiers      c_instance;\n\nnon_cv_instance.func(); // Calls #1.\nc_instance.func();      // Calls #2.\n\nnon_cv_instance.cv_only(); // Calls const volatile version.\nc_instance.cv_only();      // Calls const volatile version.",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522027684,
        "id": "f1616e7e-638b-4440-ad92-bf7f861e2c5e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522027684,
        "parent_id": "7ed1172a-e891-48da-98e3-040c9e294361",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Member function ref-qualifiers indicate whether or not the function is intended to be called on rvalue instances, and use the same syntax as function cv-qualifiers."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Member function ref-qualifiers indicate whether or not the function is intended to be called on rvalue instances, and use the same syntax as function cv-qualifiers."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522027684,
        "id": "e82103b2-2aba-4947-80fc-e55dfc621872",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550801760000,
        "parent_id": "7ed1172a-e891-48da-98e3-040c9e294361",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "struct RefQualifiers {\n    void func() \u0026  {} // 1: Called on normal instances.\n    void func() \u0026\u0026 {} // 2: Called on rvalue (temporary) instances.\n};\n\nRefQualifiers rf;\nrf.func();              // Calls #1.\nRefQualifiers{}.func(); // Calls #2."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "struct RefQualifiers {\n    void func() \u0026  {} // 1: Called on normal instances.\n    void func() \u0026\u0026 {} // 2: Called on rvalue (temporary) instances.\n};\n\nRefQualifiers rf;\nrf.func();              // Calls #1.\nRefQualifiers{}.func(); // Calls #2.",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522027684,
        "id": "a8268e0c-3478-4a44-807d-df3aed4efb1c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522027684,
        "parent_id": "7ed1172a-e891-48da-98e3-040c9e294361",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "CV-qualifiers and ref-qualifiers can also be combined if necessary."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "CV-qualifiers and ref-qualifiers can also be combined if necessary."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522027684,
        "id": "ad7d93b2-40ec-49ec-b738-bde54a8b50b0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550801760000,
        "parent_id": "7ed1172a-e891-48da-98e3-040c9e294361",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "struct BothCVAndRef {\n    void func() const\u0026 {} // Called on normal instances.  Sees instance as const.\n    void func() \u0026\u0026     {} // Called on temporary instances.\n};"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "struct BothCVAndRef {\n    void func() const\u0026 {} // Called on normal instances.  Sees instance as const.\n    void func() \u0026\u0026     {} // Called on temporary instances.\n};",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522027685,
        "id": "a54d4920-a3fd-4b7d-94d7-ebe0798ad229",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552303260000,
        "parent_id": "7ed1172a-e891-48da-98e3-040c9e294361",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "They can also be "
            ],
            [
              "virtual",
              [
                [
                  "a",
                  "https://www.notion.so/kjkpublic/Virutual-member-functions-d0bc06f8edea49a0bdbbc1bef0d073bd"
                ]
              ]
            ],
            [
              "; this is fundamental to polymorphism, and allows a child class(es) to provide the same interface as the parent class, while supplying their own functionality."
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "They can also be "
          },
          {
            "Text": "virtual",
            "Link": "https://www.notion.so/kjkpublic/Virutual-member-functions-d0bc06f8edea49a0bdbbc1bef0d073bd"
          },
          {
            "Text": "; this is fundamental to polymorphism, and allows a child class(es) to provide the same interface as the parent class, while supplying their own functionality."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522027685,
        "id": "8e94271c-ecd7-4810-a735-b1591a818d4f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550801760000,
        "parent_id": "7ed1172a-e891-48da-98e3-040c9e294361",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "struct Base {\n    virtual void func() {}\n};\nstruct Derived {\n    virtual void func() {}\n};\n\nBase* bp = new Base;\nBase* dp = new Derived;\nbp.func(); // Calls Base::func().\ndp.func(); // Calls Derived::func()."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "struct Base {\n    virtual void func() {}\n};\nstruct Derived {\n    virtual void func() {}\n};\n\nBase* bp = new Base;\nBase* dp = new Derived;\nbp.func(); // Calls Base::func().\ndp.func(); // Calls Derived::func().",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522027685,
        "id": "5c8942c6-a9ba-4a43-a80b-a3180bf654a7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552303200000,
        "parent_id": "7ed1172a-e891-48da-98e3-040c9e294361",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For more information, see "
            ],
            [
              "non-static member function",
              [
                [
                  "a",
                  "https://www.notion.so/kjkpublic/Non-static-member-functions-2f06e16467454c46940292f51f9f9266"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 30,
        "inline_content": [
          {
            "Text": "For more information, see "
          },
          {
            "Text": "non-static member function",
            "Link": "https://www.notion.so/kjkpublic/Non-static-member-functions-2f06e16467454c46940292f51f9f9266"
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Non-static member functions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}