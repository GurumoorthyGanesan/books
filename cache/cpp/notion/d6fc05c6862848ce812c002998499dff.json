{
  "ID": "d6fc05c6-8628-48ce-812c-002998499dff",
  "Root": {
    "alive": true,
    "content": [
      "7c3d7831-005e-44a5-9f80-76ffd964677c",
      "7fb14a4a-94a9-409c-b013-ef653ea990a4",
      "262f160c-0100-4493-81e8-d92dae663398",
      "70a91e34-e01f-422f-8bb3-7e731f9e1ade",
      "8e97517e-06f1-4f98-b3a3-ba86a85e8ed9",
      "77e03791-287f-4a9c-a942-41d3cdfddf28",
      "532cc56a-bdeb-4af6-95a4-d5f06f262f13",
      "652e79ab-e74f-47bc-84af-3d8df67934c9",
      "312c0118-bba1-4861-a709-c13d32a2484c",
      "45b4bed7-b491-494d-a0a3-1248046d3d43",
      "374f6bd3-e737-4aa7-a535-69b3d941d970",
      "0de23395-3f75-45ba-bcff-a9b1b16fd32f",
      "2fb25e4a-56f6-4d20-a9b6-ffb3d26aa4f0",
      "078c69bd-63e5-49fb-9846-ab3d0b7030ea",
      "8b33b5c3-3f40-4432-8c0e-ae64b1aa8fca",
      "b9342a9d-14a8-4c70-95fd-02706a994875",
      "47d9ccb2-a390-4d6f-a097-f6b34b5e6251",
      "b24237e8-8c75-4d74-bdef-12880fe42619",
      "921c151a-0020-4a86-b940-eb53b0adda23",
      "12785846-80a3-488b-a2e9-4badddeff15f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522018641,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d6fc05c6-8628-48ce-812c-002998499dff",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550656080000,
    "parent_id": "40e8450d-4736-4ad0-be7d-a2d9307ddf4f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Inheritance"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018630,
        "id": "7c3d7831-005e-44a5-9f80-76ffd964677c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018630,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Classes/structs can have inheritance relations."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Classes/structs can have inheritance relations."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018633,
        "id": "7fb14a4a-94a9-409c-b013-ef653ea990a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018633,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If a class/struct "
            ],
            [
              "B",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " inherits from a class/struct "
            ],
            [
              "A",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", this means that "
            ],
            [
              "B",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has as a parent "
            ],
            [
              "A",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". We say that "
            ],
            [
              "B",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a derived class/struct from "
            ],
            [
              "A",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and "
            ],
            [
              "A",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the base class/struct."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If a class/struct "
          },
          {
            "Text": "B",
            "AttrFlags": 2
          },
          {
            "Text": " inherits from a class/struct "
          },
          {
            "Text": "A",
            "AttrFlags": 2
          },
          {
            "Text": ", this means that "
          },
          {
            "Text": "B",
            "AttrFlags": 2
          },
          {
            "Text": " has as a parent "
          },
          {
            "Text": "A",
            "AttrFlags": 2
          },
          {
            "Text": ". We say that "
          },
          {
            "Text": "B",
            "AttrFlags": 2
          },
          {
            "Text": " is a derived class/struct from "
          },
          {
            "Text": "A",
            "AttrFlags": 2
          },
          {
            "Text": ", and "
          },
          {
            "Text": "A",
            "AttrFlags": 2
          },
          {
            "Text": " is the base class/struct."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018634,
        "id": "262f160c-0100-4493-81e8-d92dae663398",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018634,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct A\n{\npublic:\n    int p1;\nprotected:\n    int p2;\nprivate:\n    int p3;\n};\n\n//Make B inherit publicly (default) from A\nstruct B : A\n{\n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct A\n{\npublic:\n    int p1;\nprotected:\n    int p2;\nprivate:\n    int p3;\n};\n\n//Make B inherit publicly (default) from A\nstruct B : A\n{\n};",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018634,
        "id": "70a91e34-e01f-422f-8bb3-7e731f9e1ade",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018634,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are 3 forms of inheritance for a class/struct:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are 3 forms of inheritance for a class/struct:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018636,
        "id": "8e97517e-06f1-4f98-b3a3-ba86a85e8ed9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018636,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "public",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "public",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018636,
        "id": "77e03791-287f-4a9c-a942-41d3cdfddf28",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018636,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "private",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "private",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018636,
        "id": "532cc56a-bdeb-4af6-95a4-d5f06f262f13",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018636,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "protected",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "protected",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018637,
        "id": "652e79ab-e74f-47bc-84af-3d8df67934c9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018637,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that the default inheritance is the same as the default visibility of members: "
            ],
            [
              "public",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if you use the "
            ],
            [
              "struct",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword, and "
            ],
            [
              "private",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for the "
            ],
            [
              "class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that the default inheritance is the same as the default visibility of members: "
          },
          {
            "Text": "public",
            "AttrFlags": 2
          },
          {
            "Text": " if you use the "
          },
          {
            "Text": "struct",
            "AttrFlags": 2
          },
          {
            "Text": " keyword, and "
          },
          {
            "Text": "private",
            "AttrFlags": 2
          },
          {
            "Text": " for the "
          },
          {
            "Text": "class",
            "AttrFlags": 2
          },
          {
            "Text": " keyword."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018637,
        "id": "312c0118-bba1-4861-a709-c13d32a2484c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018637,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It’s even possible to have a "
            ],
            [
              "class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " derive from a "
            ],
            [
              "struct",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (or vice versa). In this case, the default inheritance is controlled by the child, so a "
            ],
            [
              "struct",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that derives from a "
            ],
            [
              "class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will default to public inheritance, and a "
            ],
            [
              "class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that derives from a "
            ],
            [
              "struct",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will have private inheritance by default."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It’s even possible to have a "
          },
          {
            "Text": "class",
            "AttrFlags": 2
          },
          {
            "Text": " derive from a "
          },
          {
            "Text": "struct",
            "AttrFlags": 2
          },
          {
            "Text": " (or vice versa). In this case, the default inheritance is controlled by the child, so a "
          },
          {
            "Text": "struct",
            "AttrFlags": 2
          },
          {
            "Text": " that derives from a "
          },
          {
            "Text": "class",
            "AttrFlags": 2
          },
          {
            "Text": " will default to public inheritance, and a "
          },
          {
            "Text": "class",
            "AttrFlags": 2
          },
          {
            "Text": " that derives from a "
          },
          {
            "Text": "struct",
            "AttrFlags": 2
          },
          {
            "Text": " will have private inheritance by default."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018637,
        "id": "45b4bed7-b491-494d-a0a3-1248046d3d43",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018637,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "public",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " inheritance:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "public",
            "AttrFlags": 2
          },
          {
            "Text": " inheritance:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018637,
        "id": "374f6bd3-e737-4aa7-a535-69b3d941d970",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018637,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct B : public A // or just `struct B : A`\n{\n    void foo()\n    {\n        p1 = 0; //well formed, p1 is public in B\n        p2 = 0; //well formed, p2 is protected in B\n        p3 = 0; //ill formed, p3 is private in A\n    }\n};\n\nB b;\nb.p1 = 1; //well formed, p1 is public\nb.p2 = 1; //ill formed, p2 is protected\nb.p3 = 1; //ill formed, p3 is inaccessible"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct B : public A // or just `struct B : A`\n{\n    void foo()\n    {\n        p1 = 0; //well formed, p1 is public in B\n        p2 = 0; //well formed, p2 is protected in B\n        p3 = 0; //ill formed, p3 is private in A\n    }\n};\n\nB b;\nb.p1 = 1; //well formed, p1 is public\nb.p2 = 1; //ill formed, p2 is protected\nb.p3 = 1; //ill formed, p3 is inaccessible",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018638,
        "id": "0de23395-3f75-45ba-bcff-a9b1b16fd32f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018638,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "private",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " inheritance:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "private",
            "AttrFlags": 2
          },
          {
            "Text": " inheritance:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018638,
        "id": "2fb25e4a-56f6-4d20-a9b6-ffb3d26aa4f0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018638,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct B : private A\n{\n    void foo()\n    {\n        p1 = 0; //well formed, p1 is private in B\n        p2 = 0; //well formed, p2 is private in B\n        p3 = 0; //ill formed, p3 is private in A\n    }\n};\n\nB b;\nb.p1 = 1; //ill formed, p1 is private\nb.p2 = 1; //ill formed, p2 is private\nb.p3 = 1; //ill formed, p3 is inaccessible"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct B : private A\n{\n    void foo()\n    {\n        p1 = 0; //well formed, p1 is private in B\n        p2 = 0; //well formed, p2 is private in B\n        p3 = 0; //ill formed, p3 is private in A\n    }\n};\n\nB b;\nb.p1 = 1; //ill formed, p1 is private\nb.p2 = 1; //ill formed, p2 is private\nb.p3 = 1; //ill formed, p3 is inaccessible",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018638,
        "id": "078c69bd-63e5-49fb-9846-ab3d0b7030ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018638,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "protected",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " inheritance:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "protected",
            "AttrFlags": 2
          },
          {
            "Text": " inheritance:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018638,
        "id": "8b33b5c3-3f40-4432-8c0e-ae64b1aa8fca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018638,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct B : protected A\n{\n    void foo()\n    {\n        p1 = 0; //well formed, p1 is protected in B\n        p2 = 0; //well formed, p2 is protected in B\n        p3 = 0; //ill formed, p3 is private in A\n    }\n};\n\nB b;\nb.p1 = 1; //ill formed, p1 is protected\nb.p2 = 1; //ill formed, p2 is protected\nb.p3 = 1; //ill formed, p3 is inaccessible"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct B : protected A\n{\n    void foo()\n    {\n        p1 = 0; //well formed, p1 is protected in B\n        p2 = 0; //well formed, p2 is protected in B\n        p3 = 0; //ill formed, p3 is private in A\n    }\n};\n\nB b;\nb.p1 = 1; //ill formed, p1 is protected\nb.p2 = 1; //ill formed, p2 is protected\nb.p3 = 1; //ill formed, p3 is inaccessible",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018638,
        "id": "b9342a9d-14a8-4c70-95fd-02706a994875",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018638,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that although "
            ],
            [
              "protected",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " inheritance is allowed, the actual use of it is rare. One instance of how "
            ],
            [
              "protected",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " inheritance is used in application is in partial base class specialization (usually referred to as “controlled polymorphism”)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that although "
          },
          {
            "Text": "protected",
            "AttrFlags": 2
          },
          {
            "Text": " inheritance is allowed, the actual use of it is rare. One instance of how "
          },
          {
            "Text": "protected",
            "AttrFlags": 2
          },
          {
            "Text": " inheritance is used in application is in partial base class specialization (usually referred to as “controlled polymorphism”)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018638,
        "id": "47d9ccb2-a390-4d6f-a097-f6b34b5e6251",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018638,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When OOP was relatively new, (public) inheritance was frequently said to model an “IS-A” relationship. That is, public inheritance is correct only if an instance of the derived class "
            ],
            [
              "is also an",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " instance of the base class."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When OOP was relatively new, (public) inheritance was frequently said to model an “IS-A” relationship. That is, public inheritance is correct only if an instance of the derived class "
          },
          {
            "Text": "is also an",
            "AttrFlags": 4
          },
          {
            "Text": " instance of the base class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018640,
        "id": "b24237e8-8c75-4d74-bdef-12880fe42619",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018640,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This was later refined into the "
            ],
            [
              "Liskov Substitution Principle",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Liskov_substitution_principle"
                ]
              ]
            ],
            [
              ": public inheritance should only be used when/if an instance of the derived class can be substituted for an instance of the base class under any possible circumstance (and still make sense)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This was later refined into the "
          },
          {
            "Text": "Liskov Substitution Principle",
            "Link": "https://en.wikipedia.org/wiki/Liskov_substitution_principle"
          },
          {
            "Text": ": public inheritance should only be used when/if an instance of the derived class can be substituted for an instance of the base class under any possible circumstance (and still make sense)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018641,
        "id": "921c151a-0020-4a86-b940-eb53b0adda23",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018641,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Private inheritance is typically said to embody a completely different relationship: “is implemented in terms of” (sometimes called a “HAS-A” relationship). For example, a "
            ],
            [
              "Stack",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class could inherit privately from a "
            ],
            [
              "Vector",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class. Private inheritance bears a much greater similarity to aggregation than to public inheritance."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Private inheritance is typically said to embody a completely different relationship: “is implemented in terms of” (sometimes called a “HAS-A” relationship). For example, a "
          },
          {
            "Text": "Stack",
            "AttrFlags": 2
          },
          {
            "Text": " class could inherit privately from a "
          },
          {
            "Text": "Vector",
            "AttrFlags": 2
          },
          {
            "Text": " class. Private inheritance bears a much greater similarity to aggregation than to public inheritance."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522018641,
        "id": "12785846-80a3-488b-a2e9-4badddeff15f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522018641,
        "parent_id": "d6fc05c6-8628-48ce-812c-002998499dff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Protected inheritance is almost never used, and there’s no general agreement on what sort of relationship it embodies."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Protected inheritance is almost never used, and there’s no general agreement on what sort of relationship it embodies."
          }
        ]
      }
    ],
    "title": "Inheritance",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}