{
  "ID": "1d77d9d2-8977-49bc-a2de-a053d5fc16bd",
  "Root": {
    "alive": true,
    "content": [
      "19c1e39f-3e44-4f62-b9d0-fb34be9bcdbc",
      "994ec565-d67b-468a-aafa-35d57e59c736",
      "b68c6e3e-533a-458c-9be1-ad58f88f7d3a",
      "4a411a98-0417-4c64-a91e-412e2eff3105",
      "6cc79729-d87e-45fb-8621-59506cbf68f3",
      "145b5237-e2ae-4f5c-9f09-b5f9f2bc212d",
      "93f1a30f-158f-4ced-be62-0a886764a4a2",
      "6cfcf6c4-5f96-41da-995f-2adbcc56eb4d",
      "53930794-0be6-436b-8b41-a584b5439da2",
      "64979fe7-7f3a-4b25-827f-2cd70026e62f",
      "a72dd14a-8c74-4d08-9a63-03cdaffe034e",
      "73bc8bf0-722c-4c52-b479-b5202b1df6d8",
      "b12a485c-5321-4257-a71c-2e9b32c2ea2a",
      "583f3458-6983-4760-af4c-238062d2d189",
      "38f12fc1-498f-4bcc-825f-20fee32f2ba2"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522006549,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1d77d9d2-8977-49bc-a2de-a053d5fc16bd",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550779620000,
    "parent_id": "b96c747c-3d87-49a0-b2bb-264f7c11b216",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Opening a file"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522006545,
        "id": "19c1e39f-3e44-4f62-b9d0-fb34be9bcdbc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522006545,
        "parent_id": "1d77d9d2-8977-49bc-a2de-a053d5fc16bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Opening a file is done in the same way for all 3 file streams ("
            ],
            [
              "ifstream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "ofstream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and "
            ],
            [
              "fstream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Opening a file is done in the same way for all 3 file streams ("
          },
          {
            "Text": "ifstream",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "ofstream",
            "AttrFlags": 2
          },
          {
            "Text": ", and "
          },
          {
            "Text": "fstream",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522006545,
        "id": "994ec565-d67b-468a-aafa-35d57e59c736",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522006545,
        "parent_id": "1d77d9d2-8977-49bc-a2de-a053d5fc16bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can open the file directly in the constructor:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can open the file directly in the constructor:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522006546,
        "id": "b68c6e3e-533a-458c-9be1-ad58f88f7d3a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550779560000,
        "parent_id": "1d77d9d2-8977-49bc-a2de-a053d5fc16bd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "std::ifstream ifs(\"foo.txt\");  // ifstream: Opens file \"foo.txt\" for reading only.\n\nstd::ofstream ofs(\"foo.txt\");  // ofstream: Opens file \"foo.txt\" for writing only.\n\nstd::fstream iofs(\"foo.txt\");  // fstream:  Opens file \"foo.txt\" for reading and writing."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "std::ifstream ifs(\"foo.txt\");  // ifstream: Opens file \"foo.txt\" for reading only.\n\nstd::ofstream ofs(\"foo.txt\");  // ofstream: Opens file \"foo.txt\" for writing only.\n\nstd::fstream iofs(\"foo.txt\");  // fstream:  Opens file \"foo.txt\" for reading and writing.",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522006547,
        "id": "4a411a98-0417-4c64-a91e-412e2eff3105",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522006547,
        "parent_id": "1d77d9d2-8977-49bc-a2de-a053d5fc16bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Alternatively, you can use the file stream’s member function "
            ],
            [
              "open()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Alternatively, you can use the file stream’s member function "
          },
          {
            "Text": "open()",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522006547,
        "id": "6cc79729-d87e-45fb-8621-59506cbf68f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550779560000,
        "parent_id": "1d77d9d2-8977-49bc-a2de-a053d5fc16bd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "std::ifstream ifs;\nifs.open(\"bar.txt\");           // ifstream: Opens file \"bar.txt\" for reading only.\n\nstd::ofstream ofs;\nofs.open(\"bar.txt\");           // ofstream: Opens file \"bar.txt\" for writing only.\n\nstd::fstream iofs;\niofs.open(\"bar.txt\");          // fstream:  Opens file \"bar.txt\" for reading and writing."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "std::ifstream ifs;\nifs.open(\"bar.txt\");           // ifstream: Opens file \"bar.txt\" for reading only.\n\nstd::ofstream ofs;\nofs.open(\"bar.txt\");           // ofstream: Opens file \"bar.txt\" for writing only.\n\nstd::fstream iofs;\niofs.open(\"bar.txt\");          // fstream:  Opens file \"bar.txt\" for reading and writing.",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522006548,
        "id": "145b5237-e2ae-4f5c-9f09-b5f9f2bc212d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522006548,
        "parent_id": "1d77d9d2-8977-49bc-a2de-a053d5fc16bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You should "
            ],
            [
              "always",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " check if a file has been opened successfully (even when writing). Failures can include: the file doesn’t exist, file hasn’t the right access rights, file is already in use, disk errors occurred, drive disconnected … Checking can be done as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You should "
          },
          {
            "Text": "always",
            "AttrFlags": 1
          },
          {
            "Text": " check if a file has been opened successfully (even when writing). Failures can include: the file doesn’t exist, file hasn’t the right access rights, file is already in use, disk errors occurred, drive disconnected … Checking can be done as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522006548,
        "id": "93f1a30f-158f-4ced-be62-0a886764a4a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550779560000,
        "parent_id": "1d77d9d2-8977-49bc-a2de-a053d5fc16bd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "// Try to read the file 'foo.txt'.\nstd::ifstream ifs(\"fooo.txt\");  // Note the typo; the file can't be opened.\n\n// Check if the file has been opened successfully.\nif (!ifs.is_open()) {\n    // The file hasn't been opened; take appropriate actions here.\n    throw CustomException(ifs, \"File could not be opened\");\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// Try to read the file 'foo.txt'.\nstd::ifstream ifs(\"fooo.txt\");  // Note the typo; the file can't be opened.\n\n// Check if the file has been opened successfully.\nif (!ifs.is_open()) {\n    // The file hasn't been opened; take appropriate actions here.\n    throw CustomException(ifs, \"File could not be opened\");\n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522006548,
        "id": "6cfcf6c4-5f96-41da-995f-2adbcc56eb4d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522006548,
        "parent_id": "1d77d9d2-8977-49bc-a2de-a053d5fc16bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When file path contains backslashes (for example, on Windows system) you should properly escape them:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When file path contains backslashes (for example, on Windows system) you should properly escape them:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522006548,
        "id": "53930794-0be6-436b-8b41-a584b5439da2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550779620000,
        "parent_id": "1d77d9d2-8977-49bc-a2de-a053d5fc16bd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "// Open the file 'c:\\folder\\foo.txt' on Windows.\nstd::ifstream ifs(\"c:\\\\folder\\\\foo.txt\"); // using escaped backslashes"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// Open the file 'c:\\folder\\foo.txt' on Windows.\nstd::ifstream ifs(\"c:\\\\folder\\\\foo.txt\"); // using escaped backslashes",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522006548,
        "id": "64979fe7-7f3a-4b25-827f-2cd70026e62f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522006548,
        "parent_id": "1d77d9d2-8977-49bc-a2de-a053d5fc16bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "or use raw literal:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "or use raw literal:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522006548,
        "id": "a72dd14a-8c74-4d08-9a63-03cdaffe034e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550779620000,
        "parent_id": "1d77d9d2-8977-49bc-a2de-a053d5fc16bd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "// Open the file 'c:\\folder\\foo.txt' on Windows.\nstd::ifstream ifs(R\"(c:\\folder\\foo.txt)\"); // using raw literal"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// Open the file 'c:\\folder\\foo.txt' on Windows.\nstd::ifstream ifs(R\"(c:\\folder\\foo.txt)\"); // using raw literal",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522006548,
        "id": "73bc8bf0-722c-4c52-b479-b5202b1df6d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522006548,
        "parent_id": "1d77d9d2-8977-49bc-a2de-a053d5fc16bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "or use forward slashes instead:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "or use forward slashes instead:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522006548,
        "id": "b12a485c-5321-4257-a71c-2e9b32c2ea2a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550779620000,
        "parent_id": "1d77d9d2-8977-49bc-a2de-a053d5fc16bd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "// Open the file 'c:\\folder\\foo.txt' on Windows.\nstd::ifstream ifs(\"c:/folder/foo.txt\");"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// Open the file 'c:\\folder\\foo.txt' on Windows.\nstd::ifstream ifs(\"c:/folder/foo.txt\");",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522006549,
        "id": "583f3458-6983-4760-af4c-238062d2d189",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522006549,
        "parent_id": "1d77d9d2-8977-49bc-a2de-a053d5fc16bd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you want to open file with non-ASCII characters in path on Windows currently you can use "
            ],
            [
              "non-standard",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " wide character path argument:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you want to open file with non-ASCII characters in path on Windows currently you can use "
          },
          {
            "Text": "non-standard",
            "AttrFlags": 1
          },
          {
            "Text": " wide character path argument:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522006549,
        "id": "38f12fc1-498f-4bcc-825f-20fee32f2ba2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550779620000,
        "parent_id": "1d77d9d2-8977-49bc-a2de-a053d5fc16bd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "// Open the file 'пример\\foo.txt' on Windows.\nstd::ifstream ifs(LR\"(пример\\foo.txt)\"); // using wide characters with raw literal"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// Open the file 'пример\\foo.txt' on Windows.\nstd::ifstream ifs(LR\"(пример\\foo.txt)\"); // using wide characters with raw literal",
        "code_language": "C++"
      }
    ],
    "title": "Opening a file",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}