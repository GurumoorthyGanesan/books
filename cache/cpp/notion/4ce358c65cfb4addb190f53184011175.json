{
  "ID": "4ce358c6-5cfb-4add-b190-f53184011175",
  "Root": {
    "alive": true,
    "content": [
      "88c01c7b-019a-4e8a-aeec-be5467e91bb1",
      "4ac63908-3718-4496-aa7a-aa65428bf743",
      "ac59fb3d-ed59-4a29-9b84-11f0d9d90501",
      "6361efba-6548-4fc9-b1c1-8ad7601e9452",
      "84ebf26b-c159-4930-b3e3-fc12dc7f0535",
      "41d2c383-bd59-4f16-a1f7-7a336e32c6af",
      "5baea5e6-2d65-426d-8d87-6898f849c8a7",
      "df01f4a8-9e4c-4c08-b977-231348795c16",
      "31d96e14-2b84-4849-bfd4-e68060c5b83b",
      "ebc309b7-3322-450e-9b64-a2e09954398d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523031468,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "4ce358c6-5cfb-4add-b190-f53184011175",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552302120000,
    "parent_id": "89d591b2-5143-487b-8a09-144b6b266e4c",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Iteration over an enum"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523031464,
        "id": "88c01c7b-019a-4e8a-aeec-be5467e91bb1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523031464,
        "parent_id": "4ce358c6-5cfb-4add-b190-f53184011175",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There is no built-in to iterate over enumeration."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There is no built-in to iterate over enumeration."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523031466,
        "id": "4ac63908-3718-4496-aa7a-aa65428bf743",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523031466,
        "parent_id": "4ce358c6-5cfb-4add-b190-f53184011175",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But there are several ways"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But there are several ways"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523031467,
        "id": "ac59fb3d-ed59-4a29-9b84-11f0d9d90501",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523031467,
        "parent_id": "4ce358c6-5cfb-4add-b190-f53184011175",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "for "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with only consecutive values:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "for "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " with only consecutive values:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523031467,
        "id": "6361efba-6548-4fc9-b1c1-8ad7601e9452",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552302120000,
        "parent_id": "4ce358c6-5cfb-4add-b190-f53184011175",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "enum E {\n    Begin,\n    E1 = Begin,\n    E2,\n    // ..\n    En,\n    End\n};\n\nfor (E e = E::Begin; e != E::End; ++e) {\n    // Do job with e\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "enum E {\n    Begin,\n    E1 = Begin,\n    E2,\n    // ..\n    En,\n    End\n};\n\nfor (E e = E::Begin; e != E::End; ++e) {\n    // Do job with e\n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523031467,
        "id": "84ebf26b-c159-4930-b3e3-fc12dc7f0535",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523031467,
        "parent_id": "4ce358c6-5cfb-4add-b190-f53184011175",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "with "
            ],
            [
              "enum class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "operator ++",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has to be implemented:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "with "
          },
          {
            "Text": "enum class",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "operator ++",
            "AttrFlags": 2
          },
          {
            "Text": " has to be implemented:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523031467,
        "id": "41d2c383-bd59-4f16-a1f7-7a336e32c6af",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552302120000,
        "parent_id": "4ce358c6-5cfb-4add-b190-f53184011175",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "E\u0026 operator ++ (E\u0026 e)\n{\n    if (e == E::End) {\n        throw std::out_of_range(\"for E\u0026 operator ++ (E\u0026)\");\n    }\n    e = E(static_cast\u003cstd::underlying_type\u003cE\u003e::type\u003e(e) + 1);\n    return e;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "E\u0026 operator ++ (E\u0026 e)\n{\n    if (e == E::End) {\n        throw std::out_of_range(\"for E\u0026 operator ++ (E\u0026)\");\n    }\n    e = E(static_cast\u003cstd::underlying_type\u003cE\u003e::type\u003e(e) + 1);\n    return e;\n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523031468,
        "id": "5baea5e6-2d65-426d-8d87-6898f849c8a7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523031468,
        "parent_id": "4ce358c6-5cfb-4add-b190-f53184011175",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "using a container as "
            ],
            [
              "std::vector",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "using a container as "
          },
          {
            "Text": "std::vector",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523031468,
        "id": "df01f4a8-9e4c-4c08-b977-231348795c16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552302120000,
        "parent_id": "4ce358c6-5cfb-4add-b190-f53184011175",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "enum E {\n    E1 = 4,\n    E2 = 8,\n    // ..\n    En\n};\n\nstd::vector\u003cE\u003e build_all_E()\n{\n    const E all[] = {E1, E2, /*..*/ En};\n    \n    return std::vector\u003cE\u003e(all, all + sizeof(all) / sizeof(E));\n}\n\nstd::vector\u003cE\u003e all_E = build_all_E();\n\nand then\n\nfor (std::vector\u003cE\u003e::const_iterator it = all_E.begin(); it != all_E.end(); ++it) {\n    E e = *it;\n    // Do job with e;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "enum E {\n    E1 = 4,\n    E2 = 8,\n    // ..\n    En\n};\n\nstd::vector\u003cE\u003e build_all_E()\n{\n    const E all[] = {E1, E2, /*..*/ En};\n    \n    return std::vector\u003cE\u003e(all, all + sizeof(all) / sizeof(E));\n}\n\nstd::vector\u003cE\u003e all_E = build_all_E();\n\nand then\n\nfor (std::vector\u003cE\u003e::const_iterator it = all_E.begin(); it != all_E.end(); ++it) {\n    E e = *it;\n    // Do job with e;\n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523031468,
        "id": "31d96e14-2b84-4849-bfd4-e68060c5b83b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523031468,
        "parent_id": "4ce358c6-5cfb-4add-b190-f53184011175",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "or "
            ],
            [
              "std::initializer_list",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and a simpler syntax:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "or "
          },
          {
            "Text": "std::initializer_list",
            "AttrFlags": 2
          },
          {
            "Text": " and a simpler syntax:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523031468,
        "id": "ebc309b7-3322-450e-9b64-a2e09954398d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552302120000,
        "parent_id": "4ce358c6-5cfb-4add-b190-f53184011175",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "enum E {\n    E1 = 4,\n    E2 = 8,\n    // ..\n    En\n};\n\nconstexpr std::initializer_list\u003cE\u003e all_E = {E1, E2, /*..*/ En};\n\nand then\n\nfor (auto e : all_E) {\n    // Do job with e\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "enum E {\n    E1 = 4,\n    E2 = 8,\n    // ..\n    En\n};\n\nconstexpr std::initializer_list\u003cE\u003e all_E = {E1, E2, /*..*/ En};\n\nand then\n\nfor (auto e : all_E) {\n    // Do job with e\n}",
        "code_language": "C++"
      }
    ],
    "title": "Iteration over an enum",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}