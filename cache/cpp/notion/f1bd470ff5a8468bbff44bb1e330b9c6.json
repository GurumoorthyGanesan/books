{
  "ID": "f1bd470f-f5a8-468b-bff4-4bb1e330b9c6",
  "Root": {
    "alive": true,
    "content": [
      "029cb4c0-3133-441e-aefe-75faf8e51403",
      "7440414f-1e87-40f5-9b62-90e0cc8eb5ed",
      "5deb2c0b-e838-4120-a2d2-304ed5a76cdd"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550521958609,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "f1bd470f-f5a8-468b-bff4-4bb1e330b9c6",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552300800000,
    "parent_id": "94bfa868-4e02-4b90-841b-817c34132524",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Template template parameters"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521958608,
        "id": "029cb4c0-3133-441e-aefe-75faf8e51403",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521958608,
        "parent_id": "f1bd470f-f5a8-468b-bff4-4bb1e330b9c6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sometimes we would like to pass into the template a template type without fixing its values. This is what template template parameters are created for. Very simple template template parameter examples:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sometimes we would like to pass into the template a template type without fixing its values. This is what template template parameters are created for. Very simple template template parameter examples:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521958609,
        "id": "7440414f-1e87-40f5-9b62-90e0cc8eb5ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552300800000,
        "parent_id": "f1bd470f-f5a8-468b-bff4-4bb1e330b9c6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "template \u003cclass T\u003e\nstruct Tag1 { };\n\ntemplate \u003cclass T\u003e\nstruct Tag2 { };\n\ntemplate \u003ctemplate \u003cclass\u003e class Tag\u003e\nstruct IntTag {\n   typedef Tag\u003cint\u003e type;\n};\n\nint main() {\n   IntTag\u003cTag1\u003e::type t;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "template \u003cclass T\u003e\nstruct Tag1 { };\n\ntemplate \u003cclass T\u003e\nstruct Tag2 { };\n\ntemplate \u003ctemplate \u003cclass\u003e class Tag\u003e\nstruct IntTag {\n   typedef Tag\u003cint\u003e type;\n};\n\nint main() {\n   IntTag\u003cTag1\u003e::type t;\n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521958609,
        "id": "5deb2c0b-e838-4120-a2d2-304ed5a76cdd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552300800000,
        "parent_id": "f1bd470f-f5a8-468b-bff4-4bb1e330b9c6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "#include \u003cvector\u003e\n#include \u003ciostream\u003e\n\ntemplate \u003cclass T, template \u003cclass...\u003e class C, class U\u003e\nC\u003cT\u003e cast_all(const C\u003cU\u003e \u0026c) {\n   C\u003cT\u003e result(c.begin(), c.end());\n   return result;\n}\n\nint main() {\n   std::vector\u003cfloat\u003e vf = {1.2, 2.6, 3.7};\n   auto vi = cast_all\u003cint\u003e(vf);\n   for(auto \u0026\u0026i: vi) {\n      std::cout \u003c\u003c i \u003c\u003c std::endl;\n   }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "#include \u003cvector\u003e\n#include \u003ciostream\u003e\n\ntemplate \u003cclass T, template \u003cclass...\u003e class C, class U\u003e\nC\u003cT\u003e cast_all(const C\u003cU\u003e \u0026c) {\n   C\u003cT\u003e result(c.begin(), c.end());\n   return result;\n}\n\nint main() {\n   std::vector\u003cfloat\u003e vf = {1.2, 2.6, 3.7};\n   auto vi = cast_all\u003cint\u003e(vf);\n   for(auto \u0026\u0026i: vi) {\n      std::cout \u003c\u003c i \u003c\u003c std::endl;\n   }\n}",
        "code_language": "C++"
      }
    ],
    "title": "Template template parameters",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}