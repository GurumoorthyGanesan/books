{
  "ID": "5c96e2b5-f1c2-4825-a71b-5b8c55e174c5",
  "Root": {
    "alive": true,
    "content": [
      "1859bbf7-8d94-4f8a-86a6-b3fe6147a062",
      "822a97d4-41e2-4ce3-ba55-d97ec129bc24",
      "721d8f4f-2ba8-40d4-af4f-6a542ae0d37e",
      "509c6d7d-0d75-4c40-a3d6-9d45556b8570",
      "4ceae9d7-81ce-4056-a7e1-e2fc9a07b2d1",
      "a077f10a-c578-46de-bc57-a8ea59a923ed",
      "0b35c1d6-004c-41ed-a2a7-c36a568664c7",
      "09350512-786e-4e42-b0a3-c43f01cc1d8e",
      "ad1cf6c2-1e44-439d-b689-d8563f6a1fff",
      "3f020b93-7541-4ec5-b69b-10e637e3d68b",
      "db37c711-50f6-4c97-9a9a-7b3e51bbb940",
      "b3c5b7b0-2a1a-4686-adf0-369cdc189614"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550521932446,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "5c96e2b5-f1c2-4825-a71b-5b8c55e174c5",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550656860000,
    "parent_id": "069713c9-355d-43e5-bbe3-fe65ccc5d89f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Hello World"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521932437,
        "id": "1859bbf7-8d94-4f8a-86a6-b3fe6147a062",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521932437,
        "parent_id": "5c96e2b5-f1c2-4825-a71b-5b8c55e174c5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This program prints "
            ],
            [
              "Hello World!",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to the standard output stream:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This program prints "
          },
          {
            "Text": "Hello World!",
            "AttrFlags": 2
          },
          {
            "Text": " to the standard output stream:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521932440,
        "id": "822a97d4-41e2-4ce3-ba55-d97ec129bc24",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521932440,
        "parent_id": "5c96e2b5-f1c2-4825-a71b-5b8c55e174c5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003ciostream\u003e\n\nint main()\n{\n    std::cout \u003c\u003c \"Hello World!\" \u003c\u003c std::endl;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003ciostream\u003e\n\nint main()\n{\n    std::cout \u003c\u003c \"Hello World!\" \u003c\u003c std::endl;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521932442,
        "id": "721d8f4f-2ba8-40d4-af4f-6a542ae0d37e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521932442,
        "parent_id": "5c96e2b5-f1c2-4825-a71b-5b8c55e174c5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "See it "
            ],
            [
              "live on Coliru",
              [
                [
                  "a",
                  "http://coliru.stacked-crooked.com/a/ba766ad8ca2fae56"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "See it "
          },
          {
            "Text": "live on Coliru",
            "Link": "http://coliru.stacked-crooked.com/a/ba766ad8ca2fae56"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521932442,
        "id": "509c6d7d-0d75-4c40-a3d6-9d45556b8570",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521932442,
        "parent_id": "5c96e2b5-f1c2-4825-a71b-5b8c55e174c5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Analysis"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Analysis"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521932442,
        "id": "4ceae9d7-81ce-4056-a7e1-e2fc9a07b2d1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521932442,
        "parent_id": "5c96e2b5-f1c2-4825-a71b-5b8c55e174c5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s examine each part of this code in detail:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s examine each part of this code in detail:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521932443,
        "id": "a077f10a-c578-46de-bc57-a8ea59a923ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521932443,
        "parent_id": "5c96e2b5-f1c2-4825-a71b-5b8c55e174c5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "#include \u003ciostream\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a "
            ],
            [
              "preprocessor directive",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " that includes the content of the standard C++ header file "
            ],
            [
              "iostream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "#include \u003ciostream\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " is a "
          },
          {
            "Text": "preprocessor directive",
            "AttrFlags": 1
          },
          {
            "Text": " that includes the content of the standard C++ header file "
          },
          {
            "Text": "iostream",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521932443,
        "id": "0b35c1d6-004c-41ed-a2a7-c36a568664c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521932443,
        "parent_id": "5c96e2b5-f1c2-4825-a71b-5b8c55e174c5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "`iostream` is a **standard library header file** that contains definitions of the standard input and output streams. These definitions are included in the `std` namespace, explained below.\n\nThe **standard input/output (I/O) streams** provide ways for programs to get input from and output to an external system -- usually the terminal."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "`iostream` is a **standard library header file** that contains definitions of the standard input and output streams. These definitions are included in the `std` namespace, explained below.\n\nThe **standard input/output (I/O) streams** provide ways for programs to get input from and output to an external system -- usually the terminal.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521932445,
        "id": "09350512-786e-4e42-b0a3-c43f01cc1d8e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521932445,
        "parent_id": "5c96e2b5-f1c2-4825-a71b-5b8c55e174c5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "int main() { ... }",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " defines a new "
            ],
            [
              "function",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/206/getting-started-with-c-language/25460/function"
                ]
              ]
            ],
            [
              " named "
            ],
            [
              "main",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". By convention, the "
            ],
            [
              "main",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function is called upon execution of the program. There must be only one "
            ],
            [
              "main",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function in a C++ program, and it must always return a number of the "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " type."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "int main() { ... }",
            "AttrFlags": 2
          },
          {
            "Text": " defines a new "
          },
          {
            "Text": "function",
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/206/getting-started-with-c-language/25460/function"
          },
          {
            "Text": " named "
          },
          {
            "Text": "main",
            "AttrFlags": 2
          },
          {
            "Text": ". By convention, the "
          },
          {
            "Text": "main",
            "AttrFlags": 2
          },
          {
            "Text": " function is called upon execution of the program. There must be only one "
          },
          {
            "Text": "main",
            "AttrFlags": 2
          },
          {
            "Text": " function in a C++ program, and it must always return a number of the "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " type."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521932445,
        "id": "ad1cf6c2-1e44-439d-b689-d8563f6a1fff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521932445,
        "parent_id": "5c96e2b5-f1c2-4825-a71b-5b8c55e174c5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here, the "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is what is called the function’s "
            ],
            [
              "return type",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/572/lambdas/1855/specifying-the-return-type#t=20170126184705835537"
                ]
              ]
            ],
            [
              ". The value returned by the "
            ],
            [
              "main",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function is an "
            ],
            [
              "exit code.",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here, the "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " is what is called the function’s "
          },
          {
            "Text": "return type",
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/572/lambdas/1855/specifying-the-return-type#t=20170126184705835537"
          },
          {
            "Text": ". The value returned by the "
          },
          {
            "Text": "main",
            "AttrFlags": 2
          },
          {
            "Text": " function is an "
          },
          {
            "Text": "exit code.",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521932445,
        "id": "3f020b93-7541-4ec5-b69b-10e637e3d68b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521932445,
        "parent_id": "5c96e2b5-f1c2-4825-a71b-5b8c55e174c5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "By convention, a program exit code of `0` or `EXIT_SUCCESS` is interpreted as success by a system that executes the program. Any other return code is associated with an error.\n\nIf no `return` statement is present, the `main` function (and thus, the program itself) returns `0` by default. In this example, we don't need to explicitly write `return 0;`. \n\nAll other functions, except those that return the `void` type, must explicitly return a value according to their return type, or else must not return at all."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "By convention, a program exit code of `0` or `EXIT_SUCCESS` is interpreted as success by a system that executes the program. Any other return code is associated with an error.\n\nIf no `return` statement is present, the `main` function (and thus, the program itself) returns `0` by default. In this example, we don't need to explicitly write `return 0;`. \n\nAll other functions, except those that return the `void` type, must explicitly return a value according to their return type, or else must not return at all.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521932446,
        "id": "db37c711-50f6-4c97-9a9a-7b3e51bbb940",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521932446,
        "parent_id": "5c96e2b5-f1c2-4825-a71b-5b8c55e174c5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::cout \u003c\u003c \"Hello World!\" \u003c\u003c std::endl;",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " prints “Hello World!” to the standard output stream:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::cout \u003c\u003c \"Hello World!\" \u003c\u003c std::endl;",
            "AttrFlags": 2
          },
          {
            "Text": " prints “Hello World!” to the standard output stream:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521932446,
        "id": "b3c5b7b0-2a1a-4686-adf0-369cdc189614",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521932446,
        "parent_id": "5c96e2b5-f1c2-4825-a71b-5b8c55e174c5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "- `std` is a [namespace][3], and `::` is the **scope resolution operator** that allows look-ups for objects by name within a namespace.\n\n   There are many namespaces. Here, we use `::` to show we want to use `cout` from the `std` namespace. For more information refer to [Scope Resolution Operator - Microsoft Documentation][4]. \n\n- `std::cout` is the **standard output stream** object, defined in `iostream`, and it prints to the standard output (`stdout`). \n\n- `\u003c\u003c` is, *in this context*, the **stream insertion operator**, so called because it *inserts* an object into the *stream* object.  \n\n   The standard library defines the `\u003c\u003c` operator to perform data insertion for certain data types into output streams. `stream \u003c\u003c content` inserts `content` into the stream and returns the same, but updated stream. This allows stream insertions to be chained:\n     `std::cout \u003c\u003c \"Foo\" \u003c\u003c \" Bar\";`\n   prints \"FooBar\" to the console.\n\n- `\"Hello World!\"` is a **character string literal**, or a \"text literal.\" The stream insertion operator for character string literals is defined in file `iostream`. \n\n- [`std::endl`](http://en.cppreference.com/w/cpp/io/manip/endl) is a special **I/O stream manipulator** object, also defined in file `iostream`. Inserting a manipulator into a stream changes the state of the stream.\n\n   The stream manipulator `std::endl` does two things: first it inserts the end-of-line character and then it flushes the stream buffer to force the text to show up on the console. This ensures that the data inserted into the stream actually appear on your console. (Stream data is usually stored in a buffer and then \"flushed\" in batches unless you force a flush immediately.)\n\n   An alternate method that avoids the flush is:\n\n      std::cout \u003c\u003c \"Hello World!\\n\";\n\n   where `\\n` is the **character escape sequence** for the newline character.\n\n- The semicolon (`;`) notifies the compiler that a statement has ended. All C++ statements and class definitions require an ending/terminating semicolon."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "- `std` is a [namespace][3], and `::` is the **scope resolution operator** that allows look-ups for objects by name within a namespace.\n\n   There are many namespaces. Here, we use `::` to show we want to use `cout` from the `std` namespace. For more information refer to [Scope Resolution Operator - Microsoft Documentation][4]. \n\n- `std::cout` is the **standard output stream** object, defined in `iostream`, and it prints to the standard output (`stdout`). \n\n- `\u003c\u003c` is, *in this context*, the **stream insertion operator**, so called because it *inserts* an object into the *stream* object.  \n\n   The standard library defines the `\u003c\u003c` operator to perform data insertion for certain data types into output streams. `stream \u003c\u003c content` inserts `content` into the stream and returns the same, but updated stream. This allows stream insertions to be chained:\n     `std::cout \u003c\u003c \"Foo\" \u003c\u003c \" Bar\";`\n   prints \"FooBar\" to the console.\n\n- `\"Hello World!\"` is a **character string literal**, or a \"text literal.\" The stream insertion operator for character string literals is defined in file `iostream`. \n\n- [`std::endl`](http://en.cppreference.com/w/cpp/io/manip/endl) is a special **I/O stream manipulator** object, also defined in file `iostream`. Inserting a manipulator into a stream changes the state of the stream.\n\n   The stream manipulator `std::endl` does two things: first it inserts the end-of-line character and then it flushes the stream buffer to force the text to show up on the console. This ensures that the data inserted into the stream actually appear on your console. (Stream data is usually stored in a buffer and then \"flushed\" in batches unless you force a flush immediately.)\n\n   An alternate method that avoids the flush is:\n\n      std::cout \u003c\u003c \"Hello World!\\n\";\n\n   where `\\n` is the **character escape sequence** for the newline character.\n\n- The semicolon (`;`) notifies the compiler that a statement has ended. All C++ statements and class definitions require an ending/terminating semicolon.",
        "code_language": "Plain Text"
      }
    ],
    "title": "Hello World",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}