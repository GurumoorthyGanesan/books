{
  "ID": "8c55b85a-8422-4925-8276-26a10afccfee",
  "Root": {
    "alive": true,
    "content": [
      "56a296ee-40d8-446e-b8f9-3bce98e6306c",
      "6162dea3-e53c-4395-aee1-d562766b3457",
      "fd790ffa-dcc6-4ed7-aedc-efee83e702c3",
      "c61bd9d6-c1eb-4f4c-aa04-33cb0c87bfa7",
      "3c3662d7-2fd6-4dce-b6cd-cfbbc78336bd",
      "acb5c542-958e-4620-8918-e9f9bd8a507a",
      "769e57ff-26ee-456b-8f3e-08c441258af4",
      "fa646bba-eacb-4572-9dc4-3ecc347ca74d",
      "a1c6036a-304f-488d-9a60-9b6dcc8520f2",
      "617e670b-da4d-4ec8-bb16-606e5c756b80"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550521961571,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "8c55b85a-8422-4925-8276-26a10afccfee",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552347600000,
    "parent_id": "94bfa868-4e02-4b90-841b-817c34132524",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Explicit instantiation"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521961565,
        "id": "56a296ee-40d8-446e-b8f9-3bce98e6306c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521961565,
        "parent_id": "8c55b85a-8422-4925-8276-26a10afccfee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An explicit instantiation definition creates and declares a concrete class, function, or variable from a template, without using it just yet. An explicit instantiation can be referenced from other translation units. This can be used to avoid defining a template in a header file, if it will only be instantiated with a finite set of arguments. For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An explicit instantiation definition creates and declares a concrete class, function, or variable from a template, without using it just yet. An explicit instantiation can be referenced from other translation units. This can be used to avoid defining a template in a header file, if it will only be instantiated with a finite set of arguments. For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521961568,
        "id": "6162dea3-e53c-4395-aee1-d562766b3457",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552347540000,
        "parent_id": "8c55b85a-8422-4925-8276-26a10afccfee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "// print_string.h\ntemplate \u003cclass T\u003e\nvoid print_string(const T* str);\n\n// print_string.cpp\n#include \"print_string.h\"\ntemplate void print_string(const char*);\ntemplate void print_string(const wchar_t*);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// print_string.h\ntemplate \u003cclass T\u003e\nvoid print_string(const T* str);\n\n// print_string.cpp\n#include \"print_string.h\"\ntemplate void print_string(const char*);\ntemplate void print_string(const wchar_t*);",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521961568,
        "id": "fd790ffa-dcc6-4ed7-aedc-efee83e702c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521961568,
        "parent_id": "8c55b85a-8422-4925-8276-26a10afccfee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Because "
            ],
            [
              "print_string\u003cchar\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "print_string\u003cwchar_t\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are explicitly instantiated in "
            ],
            [
              "print_string.cpp",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the linker will be able to find them even though the "
            ],
            [
              "print_string",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " template is not defined in the header. If these explicit instantiation declarations were not present, a linker error would likely occur. See http://stackoverflow.com/questions/495021/why-can-templates-only-be-implemented-in-the-header-file"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Because "
          },
          {
            "Text": "print_string\u003cchar\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "print_string\u003cwchar_t\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " are explicitly instantiated in "
          },
          {
            "Text": "print_string.cpp",
            "AttrFlags": 2
          },
          {
            "Text": ", the linker will be able to find them even though the "
          },
          {
            "Text": "print_string",
            "AttrFlags": 2
          },
          {
            "Text": " template is not defined in the header. If these explicit instantiation declarations were not present, a linker error would likely occur. See http://stackoverflow.com/questions/495021/why-can-templates-only-be-implemented-in-the-header-file"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521961570,
        "id": "c61bd9d6-c1eb-4f4c-aa04-33cb0c87bfa7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521961570,
        "parent_id": "8c55b85a-8422-4925-8276-26a10afccfee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If an explicit instantiation definition is preceded by the "
            ],
            [
              "extern",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "keyword",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/4891/keywords"
                ]
              ]
            ],
            [
              ", it becomes an explicit instantiation "
            ],
            [
              "declaration",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " instead. The presence of an explicit instantiation declaration for a given specialization prevents the implicit instantiation of the given specialization within the current translation unit. Instead, a reference to that specialization that would otherwise cause an implicit instantiation can refer to an explicit instantiation definition in the same or another TU."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If an explicit instantiation definition is preceded by the "
          },
          {
            "Text": "extern",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "keyword",
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/4891/keywords"
          },
          {
            "Text": ", it becomes an explicit instantiation "
          },
          {
            "Text": "declaration",
            "AttrFlags": 4
          },
          {
            "Text": " instead. The presence of an explicit instantiation declaration for a given specialization prevents the implicit instantiation of the given specialization within the current translation unit. Instead, a reference to that specialization that would otherwise cause an implicit instantiation can refer to an explicit instantiation definition in the same or another TU."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521961570,
        "id": "3c3662d7-2fd6-4dce-b6cd-cfbbc78336bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521961570,
        "parent_id": "8c55b85a-8422-4925-8276-26a10afccfee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "foo.h",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "foo.h",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521961570,
        "id": "acb5c542-958e-4620-8918-e9f9bd8a507a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552347600000,
        "parent_id": "8c55b85a-8422-4925-8276-26a10afccfee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "#ifndef FOO_H\n#define FOO_H\ntemplate \u003cclass T\u003e void foo(T x) {\n    // complicated implementation\n}\n#endif"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "#ifndef FOO_H\n#define FOO_H\ntemplate \u003cclass T\u003e void foo(T x) {\n    // complicated implementation\n}\n#endif",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521961571,
        "id": "769e57ff-26ee-456b-8f3e-08c441258af4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521961571,
        "parent_id": "8c55b85a-8422-4925-8276-26a10afccfee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "foo.cpp",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "foo.cpp",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521961571,
        "id": "fa646bba-eacb-4572-9dc4-3ecc347ca74d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552347600000,
        "parent_id": "8c55b85a-8422-4925-8276-26a10afccfee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "#include \"foo.h\"\n// explicit instantiation definitions for common cases\ntemplate void foo(int);\ntemplate void foo(double);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "#include \"foo.h\"\n// explicit instantiation definitions for common cases\ntemplate void foo(int);\ntemplate void foo(double);",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521961571,
        "id": "a1c6036a-304f-488d-9a60-9b6dcc8520f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521961571,
        "parent_id": "8c55b85a-8422-4925-8276-26a10afccfee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "main.cpp",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "main.cpp",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521961571,
        "id": "617e670b-da4d-4ec8-bb16-606e5c756b80",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552347600000,
        "parent_id": "8c55b85a-8422-4925-8276-26a10afccfee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "#include \"foo.h\"\n// we already know foo.cpp has explicit instantiation definitions for these\nextern template void foo(double);\nint main() {\n    foo(42);   // instantiates foo\u003cint\u003e here;\n               // wasteful since foo.cpp provides an explicit instantiation already!\n    foo(3.14); // does not instantiate foo\u003cdouble\u003e here;\n               // uses instantiation of foo\u003cdouble\u003e in foo.cpp instead\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "#include \"foo.h\"\n// we already know foo.cpp has explicit instantiation definitions for these\nextern template void foo(double);\nint main() {\n    foo(42);   // instantiates foo\u003cint\u003e here;\n               // wasteful since foo.cpp provides an explicit instantiation already!\n    foo(3.14); // does not instantiate foo\u003cdouble\u003e here;\n               // uses instantiation of foo\u003cdouble\u003e in foo.cpp instead\n}",
        "code_language": "C++"
      }
    ],
    "title": "Explicit instantiation",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}