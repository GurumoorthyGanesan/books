{
  "ID": "b24a9f78-8ae2-4e75-9cf3-364fa0ffc4f6",
  "Root": {
    "alive": true,
    "content": [
      "55e7eabd-6c1f-4a55-8aa1-02b9b8b32ce6",
      "55f5ea66-0f18-42c9-a9ad-31818db1edae",
      "3eda6f86-8cf5-4d91-bfaf-28ca3437d48d",
      "fbfff34c-a15f-4c6a-8510-8b47a67e8a1e",
      "f2f77ce3-233a-49ed-a6e7-3a1f6e51be6b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522062593,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "b24a9f78-8ae2-4e75-9cf3-364fa0ffc4f6",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550655720000,
    "parent_id": "2be9c7d5-be12-439a-8968-ad057c67187a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Function call operator"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522062588,
        "id": "55e7eabd-6c1f-4a55-8aa1-02b9b8b32ce6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522062588,
        "parent_id": "b24a9f78-8ae2-4e75-9cf3-364fa0ffc4f6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can overload the function call operator "
            ],
            [
              "()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can overload the function call operator "
          },
          {
            "Text": "()",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522062593,
        "id": "55f5ea66-0f18-42c9-a9ad-31818db1edae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522062593,
        "parent_id": "b24a9f78-8ae2-4e75-9cf3-364fa0ffc4f6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Overloading must be done inside of a "
            ],
            [
              "class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "/"
            ],
            [
              "struct",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Overloading must be done inside of a "
          },
          {
            "Text": "class",
            "AttrFlags": 2
          },
          {
            "Text": "/"
          },
          {
            "Text": "struct",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522062593,
        "id": "3eda6f86-8cf5-4d91-bfaf-28ca3437d48d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522062593,
        "parent_id": "b24a9f78-8ae2-4e75-9cf3-364fa0ffc4f6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//R -\u003e Return type\n//Types -\u003e any different type\nR operator()(Type name, Type2 name2, ...)\n{\n    //Do something\n    //return something\n}\n\n//Use it like this (R is return type, a and b are variables)\nR foo = object(a, b, ...);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//R -\u003e Return type\n//Types -\u003e any different type\nR operator()(Type name, Type2 name2, ...)\n{\n    //Do something\n    //return something\n}\n\n//Use it like this (R is return type, a and b are variables)\nR foo = object(a, b, ...);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522062593,
        "id": "fbfff34c-a15f-4c6a-8510-8b47a67e8a1e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522062593,
        "parent_id": "b24a9f78-8ae2-4e75-9cf3-364fa0ffc4f6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522062593,
        "id": "f2f77ce3-233a-49ed-a6e7-3a1f6e51be6b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522062593,
        "parent_id": "b24a9f78-8ae2-4e75-9cf3-364fa0ffc4f6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct Sum\n{\n    int operator()(int a, int b)\n    {\n        return a + b;\n    }\n};\n\n//Create instance of struct\nSum sum;\nint result = sum(1, 1); //result == 2"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct Sum\n{\n    int operator()(int a, int b)\n    {\n        return a + b;\n    }\n};\n\n//Create instance of struct\nSum sum;\nint result = sum(1, 1); //result == 2",
        "code_language": "Plain Text"
      }
    ],
    "title": "Function call operator",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}