{
  "ID": "c81d1f88-482a-485c-89a7-211773fc9e85",
  "Root": {
    "alive": true,
    "content": [
      "f6340468-32f9-4a7a-88e3-0c0e02111cb2",
      "745ab44b-14da-4068-9579-c162492319fd"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550524764769,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c81d1f88-482a-485c-89a7-211773fc9e85",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551688810612,
    "parent_id": "333099ca-9ef1-4569-b9ad-a7a9275c368b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Turn a sequence of indices into copies of an element"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524764768,
        "id": "f6340468-32f9-4a7a-88e3-0c0e02111cb2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524764768,
        "parent_id": "c81d1f88-482a-485c-89a7-211773fc9e85",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Expanding the parameter pack of indices in a comma expression with a value creates a copy of the value for each of the indices. Sadly, "
            ],
            [
              "gcc",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://gcc.gnu.org/"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "clang",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://clang.llvm.org/"
                ]
              ]
            ],
            [
              " think the index has no effect and warn about it ("
            ],
            [
              "gcc",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://gcc.gnu.org/"
                ]
              ]
            ],
            [
              " can be silenced by casting the index to "
            ],
            [
              "void",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Expanding the parameter pack of indices in a comma expression with a value creates a copy of the value for each of the indices. Sadly, "
          },
          {
            "Text": "gcc",
            "AttrFlags": 2,
            "Link": "http://gcc.gnu.org/"
          },
          {
            "Text": " and "
          },
          {
            "Text": "clang",
            "AttrFlags": 2,
            "Link": "http://clang.llvm.org/"
          },
          {
            "Text": " think the index has no effect and warn about it ("
          },
          {
            "Text": "gcc",
            "AttrFlags": 2,
            "Link": "http://gcc.gnu.org/"
          },
          {
            "Text": " can be silenced by casting the index to "
          },
          {
            "Text": "void",
            "AttrFlags": 2
          },
          {
            "Text": "):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524764769,
        "id": "745ab44b-14da-4068-9579-c162492319fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524764769,
        "parent_id": "c81d1f88-482a-485c-89a7-211773fc9e85",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003calgorithm\u003e\n#include \u003carray\u003e\n#include \u003ciostream\u003e\n#include \u003citerator\u003e\n#include \u003cstring\u003e\n#include \u003cutility\u003e\n\ntemplate \u003ctypename T, std::size_t... I\u003e\nstd::array\u003cT, sizeof...(I)\u003e make_array(T const\u0026 value, std::index_sequence\u003cI...\u003e) {\n    return std::array\u003cT, sizeof...(I)\u003e{ (I, value)... };\n}\n\ntemplate \u003cint N, typename T\u003e\nstd::array\u003cT, N\u003e make_array(T const\u0026 value) {\n    return make_array(value, std::make_index_sequence\u003cN\u003e());\n}\n\nint main() {\n    auto array = make_array\u003c20\u003e(std::string(\"value\"));\n    std::copy(array.begin(), array.end(),\n              std::ostream_iterator\u003cstd::string\u003e(std::cout, \" \"));\n    std::cout \u003c\u003c \"\\n\";\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003calgorithm\u003e\n#include \u003carray\u003e\n#include \u003ciostream\u003e\n#include \u003citerator\u003e\n#include \u003cstring\u003e\n#include \u003cutility\u003e\n\ntemplate \u003ctypename T, std::size_t... I\u003e\nstd::array\u003cT, sizeof...(I)\u003e make_array(T const\u0026 value, std::index_sequence\u003cI...\u003e) {\n    return std::array\u003cT, sizeof...(I)\u003e{ (I, value)... };\n}\n\ntemplate \u003cint N, typename T\u003e\nstd::array\u003cT, N\u003e make_array(T const\u0026 value) {\n    return make_array(value, std::make_index_sequence\u003cN\u003e());\n}\n\nint main() {\n    auto array = make_array\u003c20\u003e(std::string(\"value\"));\n    std::copy(array.begin(), array.end(),\n              std::ostream_iterator\u003cstd::string\u003e(std::cout, \" \"));\n    std::cout \u003c\u003c \"\\n\";\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Turn a sequence of indices into copies of an element",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}