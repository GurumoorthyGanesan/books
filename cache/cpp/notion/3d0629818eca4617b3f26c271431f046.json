{
  "ID": "3d062981-8eca-4617-b3f2-6c271431f046",
  "Root": {
    "alive": true,
    "content": [
      "e4e41d76-225f-4983-9a72-b611eb9a464c",
      "3a0953c3-aeba-4e20-b93b-3f6c0f83b3f6",
      "d7c2cb9a-eed1-4e27-a03b-40a95911f114",
      "e8237679-980b-405e-acbf-8f453105efcc",
      "7a77e221-7f69-4a57-92b3-f0f7b61235d9",
      "75168dd1-0b4a-4a50-b584-acb0547b50ea",
      "c688dbff-7813-4875-bce2-b5a6ee6336f4",
      "cad2116f-d2e2-4e15-ae23-f19015ae703f",
      "0bcfc1ed-7bda-4a34-aca3-2dfd39810cad",
      "ddbe9541-48ec-401e-9b11-584f9cfeb536"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550521994586,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "3d062981-8eca-4617-b3f2-6c271431f046",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550656440000,
    "parent_id": "b886ff5d-614b-4aa9-9e99-851b7998439b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Converting to std::string"
        ]
      ]
    },
    "type": "page",
    "version": 11,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521994582,
        "id": "e4e41d76-225f-4983-9a72-b611eb9a464c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521994582,
        "parent_id": "3d062981-8eca-4617-b3f2-6c271431f046",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::ostringstream",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/basic_ostringstream"
                ]
              ]
            ],
            [
              " can be used to convert any streamable type to a string representation, by inserting the object into a "
            ],
            [
              "std::ostringstream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object (with the stream insertion operator "
            ],
            [
              "\u003c\u003c",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") and then converting the whole "
            ],
            [
              "std::ostringstream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to a "
            ],
            [
              "std::string",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::ostringstream",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/basic_ostringstream"
          },
          {
            "Text": " can be used to convert any streamable type to a string representation, by inserting the object into a "
          },
          {
            "Text": "std::ostringstream",
            "AttrFlags": 2
          },
          {
            "Text": " object (with the stream insertion operator "
          },
          {
            "Text": "\u003c\u003c",
            "AttrFlags": 2
          },
          {
            "Text": ") and then converting the whole "
          },
          {
            "Text": "std::ostringstream",
            "AttrFlags": 2
          },
          {
            "Text": " to a "
          },
          {
            "Text": "std::string",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521994583,
        "id": "3a0953c3-aeba-4e20-b93b-3f6c0f83b3f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521994583,
        "parent_id": "3d062981-8eca-4617-b3f2-6c271431f046",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for instance:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " for instance:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521994583,
        "id": "d7c2cb9a-eed1-4e27-a03b-40a95911f114",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521994583,
        "parent_id": "3d062981-8eca-4617-b3f2-6c271431f046",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003csstream\u003e\n\nint main()\n{\n    int val = 4;\n    std::ostringstream str;\n    str \u003c\u003c val;\n    std::string converted = str.str();\n    return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003csstream\u003e\n\nint main()\n{\n    int val = 4;\n    std::ostringstream str;\n    str \u003c\u003c val;\n    std::string converted = str.str();\n    return 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521994583,
        "id": "e8237679-980b-405e-acbf-8f453105efcc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521994583,
        "parent_id": "3d062981-8eca-4617-b3f2-6c271431f046",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Writing your own conversion function, the simple:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Writing your own conversion function, the simple:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521994583,
        "id": "7a77e221-7f69-4a57-92b3-f0f7b61235d9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521994583,
        "parent_id": "3d062981-8eca-4617-b3f2-6c271431f046",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "template\u003cclass T\u003e\nstd::string toString(const T\u0026 x)\n{\n  std::ostringstream ss;\n  ss \u003c\u003c x;\n  return ss.str();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "template\u003cclass T\u003e\nstd::string toString(const T\u0026 x)\n{\n  std::ostringstream ss;\n  ss \u003c\u003c x;\n  return ss.str();\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521994583,
        "id": "75168dd1-0b4a-4a50-b584-acb0547b50ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521994583,
        "parent_id": "3d062981-8eca-4617-b3f2-6c271431f046",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "works but isn’t suitable for performance critical code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "works but isn’t suitable for performance critical code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521994584,
        "id": "c688dbff-7813-4875-bce2-b5a6ee6336f4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521994584,
        "parent_id": "3d062981-8eca-4617-b3f2-6c271431f046",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "User-defined classes may implement the stream insertion operator if desired:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "User-defined classes may implement the stream insertion operator if desired:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521994584,
        "id": "cad2116f-d2e2-4e15-ae23-f19015ae703f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521994584,
        "parent_id": "3d062981-8eca-4617-b3f2-6c271431f046",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::ostream operator\u003c\u003c( std::ostream\u0026 out, const A\u0026 a )\n{\n    // write a string representation of a to out\n    return out; \n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::ostream operator\u003c\u003c( std::ostream\u0026 out, const A\u0026 a )\n{\n    // write a string representation of a to out\n    return out; \n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521994586,
        "id": "0bcfc1ed-7bda-4a34-aca3-2dfd39810cad",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521994586,
        "parent_id": "3d062981-8eca-4617-b3f2-6c271431f046",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Aside from streams, since C++11 you can also use the "
            ],
            [
              "std::to_string",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/string/basic_string/to_string"
                ]
              ]
            ],
            [
              " (and "
            ],
            [
              "std::to_wstring",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/string/basic_string/to_wstring"
                ]
              ]
            ],
            [
              ") function which is overloaded for all fundamental types and returns the string representation of its parameter."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Aside from streams, since C++11 you can also use the "
          },
          {
            "Text": "std::to_string",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/string/basic_string/to_string"
          },
          {
            "Text": " (and "
          },
          {
            "Text": "std::to_wstring",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/string/basic_string/to_wstring"
          },
          {
            "Text": ") function which is overloaded for all fundamental types and returns the string representation of its parameter."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521994586,
        "id": "ddbe9541-48ec-401e-9b11-584f9cfeb536",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521994586,
        "parent_id": "3d062981-8eca-4617-b3f2-6c271431f046",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::string s = to_string(0x12f3);  // after this the string s contains \"4851\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::string s = to_string(0x12f3);  // after this the string s contains \"4851\"",
        "code_language": "Plain Text"
      }
    ],
    "title": "Converting to std::string",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}