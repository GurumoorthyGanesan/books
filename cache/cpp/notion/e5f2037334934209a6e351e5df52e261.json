{
  "ID": "e5f20373-3493-4209-a6e3-51e5df52e261",
  "Root": {
    "alive": true,
    "content": [
      "77a4d07b-42de-4165-b2cd-be5f8108029e",
      "8f8e1ee0-79d1-4007-a563-67ca38477d51",
      "9ec2714a-2546-4633-a08a-c05d6dfc1b89",
      "10b6e693-1c45-4c9f-8047-1ed1c5083ad8"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523901956,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e5f20373-3493-4209-a6e3-51e5df52e261",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551688254390,
    "parent_id": "b41d10e9-7c12-482e-a1ff-612580407bc1",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "fallthrough"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523901951,
        "id": "77a4d07b-42de-4165-b2cd-be5f8108029e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523901951,
        "parent_id": "e5f20373-3493-4209-a6e3-51e5df52e261",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Whenever a "
            ],
            [
              "case",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is ended in a "
            ],
            [
              "switch",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the code of the next case will get executed. This last one can be prevented by using the ´break` statement. As this so-called fallthrough behavior can introduce bugs when not intended, several compilers and static analyzers give a warning on this."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Whenever a "
          },
          {
            "Text": "case",
            "AttrFlags": 2
          },
          {
            "Text": " is ended in a "
          },
          {
            "Text": "switch",
            "AttrFlags": 2
          },
          {
            "Text": ", the code of the next case will get executed. This last one can be prevented by using the ´break` statement. As this so-called fallthrough behavior can introduce bugs when not intended, several compilers and static analyzers give a warning on this."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523901954,
        "id": "8f8e1ee0-79d1-4007-a563-67ca38477d51",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523901954,
        "parent_id": "e5f20373-3493-4209-a6e3-51e5df52e261",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "From C++17 on, a standard attribute was introduced to indicate that the warning is not needed when the code is meant to fall through. Compilers can safely give warnings when a case is ended without "
            ],
            [
              "break",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "[[fallthrough]]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and has at least one statement."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "From C++17 on, a standard attribute was introduced to indicate that the warning is not needed when the code is meant to fall through. Compilers can safely give warnings when a case is ended without "
          },
          {
            "Text": "break",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "[[fallthrough]]",
            "AttrFlags": 2
          },
          {
            "Text": " and has at least one statement."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523901955,
        "id": "9ec2714a-2546-4633-a08a-c05d6dfc1b89",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523901955,
        "parent_id": "e5f20373-3493-4209-a6e3-51e5df52e261",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "switch(input) {\n    case 2011:\n    case 2014:\n    case 2017:\n        std::cout \u003c\u003c \"Using modern C++\" \u003c\u003c std::endl;\n        [[fallthrough]]; // \u003e No warning\n    case 1998:\n    case 2003:\n        standard = input;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "switch(input) {\n    case 2011:\n    case 2014:\n    case 2017:\n        std::cout \u003c\u003c \"Using modern C++\" \u003c\u003c std::endl;\n        [[fallthrough]]; // \u003e No warning\n    case 1998:\n    case 2003:\n        standard = input;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523901956,
        "id": "10b6e693-1c45-4c9f-8047-1ed1c5083ad8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523901956,
        "parent_id": "e5f20373-3493-4209-a6e3-51e5df52e261",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "See "
            ],
            [
              "the proposal",
              [
                [
                  "a",
                  "https://isocpp.org/files/papers/P0188R0.pdf"
                ]
              ]
            ],
            [
              " for more detailed examples on how "
            ],
            [
              "[[fallthrough]]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be used."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "See "
          },
          {
            "Text": "the proposal",
            "Link": "https://isocpp.org/files/papers/P0188R0.pdf"
          },
          {
            "Text": " for more detailed examples on how "
          },
          {
            "Text": "[[fallthrough]]",
            "AttrFlags": 2
          },
          {
            "Text": " can be used."
          }
        ]
      }
    ],
    "title": "fallthrough",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}