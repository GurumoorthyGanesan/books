{
  "ID": "47b97e1b-c57a-4ebb-854d-b5c25a70fd9a",
  "Root": {
    "alive": true,
    "content": [
      "a650aa53-8289-4897-854d-189f3276b23e",
      "ba402073-b19a-474e-b67e-fde7fd5b033e",
      "3ae1f645-fa35-443f-9388-dfb3dd51f9bd",
      "35d898a8-75e8-411e-bf27-1ba164553a76",
      "8ec96864-c5af-44a7-bf55-c481c08e805a",
      "1e1c2daa-7862-473d-9a08-926bbb78f3f1",
      "93e4ec4c-2a00-4223-932b-e9ae9e4a44dc",
      "30ad23bb-2d6f-4fca-88d4-3ed7998c8c11",
      "38a139dc-f6a8-402d-93f2-5859dba04b8e",
      "89556f3a-b836-4464-8f70-f78ccd0ab22b",
      "c928049a-44a9-41da-9010-7279df2609f5"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522755504,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "47b97e1b-c57a-4ebb-854d-b5c25a70fd9a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552296600000,
    "parent_id": "c48a63c8-822c-4a23-a960-60de4face6ae",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "^ - bitwise XOR (exclusive OR)"
        ]
      ]
    },
    "type": "page",
    "version": 28,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522755498,
        "id": "a650aa53-8289-4897-854d-189f3276b23e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552296600000,
        "parent_id": "47b97e1b-c57a-4ebb-854d-b5c25a70fd9a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "// :glot\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n\nint main(int argc, char **argv) {\n    int a = 5;     // 0101b  (0x05)\n    int b = 9;     // 1001b  (0x09)\n    int c = a ^ b; // 1100b  (0x0C)\n    \n    std::cout \u003c\u003c \"a = \" \u003c\u003c a \u003c\u003c \", b = \" \u003c\u003c b \u003c\u003c \", c = \" \u003c\u003c c \u003c\u003c std::endl;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 17,
        "code": "// :glot\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n\nint main(int argc, char **argv) {\n    int a = 5;     // 0101b  (0x05)\n    int b = 9;     // 1001b  (0x09)\n    int c = a ^ b; // 1100b  (0x0C)\n    \n    std::cout \u003c\u003c \"a = \" \u003c\u003c a \u003c\u003c \", b = \" \u003c\u003c b \u003c\u003c \", c = \" \u003c\u003c c \u003c\u003c std::endl;\n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522755501,
        "id": "ba402073-b19a-474e-b67e-fde7fd5b033e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522755501,
        "parent_id": "47b97e1b-c57a-4ebb-854d-b5c25a70fd9a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Why",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Why",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522755501,
        "id": "3ae1f645-fa35-443f-9388-dfb3dd51f9bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522755501,
        "parent_id": "47b97e1b-c57a-4ebb-854d-b5c25a70fd9a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A bit wise "
            ],
            [
              "XOR",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (exclusive or) operates on the bit level and uses the following Boolean truth table:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A bit wise "
          },
          {
            "Text": "XOR",
            "AttrFlags": 2
          },
          {
            "Text": " (exclusive or) operates on the bit level and uses the following Boolean truth table:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522755501,
        "id": "35d898a8-75e8-411e-bf27-1ba164553a76",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550736420000,
        "parent_id": "47b97e1b-c57a-4ebb-854d-b5c25a70fd9a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "true OR true = false\ntrue OR false = true\nfalse OR false = false"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "true OR true = false\ntrue OR false = true\nfalse OR false = false",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522755502,
        "id": "8ec96864-c5af-44a7-bf55-c481c08e805a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522755502,
        "parent_id": "47b97e1b-c57a-4ebb-854d-b5c25a70fd9a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Notice that with an XOR operation "
            ],
            [
              "true OR true = false",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " where as with operations "
            ],
            [
              "true AND/OR true = true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", hence the exclusive nature of the XOR operation."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Notice that with an XOR operation "
          },
          {
            "Text": "true OR true = false",
            "AttrFlags": 2
          },
          {
            "Text": " where as with operations "
          },
          {
            "Text": "true AND/OR true = true",
            "AttrFlags": 2
          },
          {
            "Text": ", hence the exclusive nature of the XOR operation."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522755502,
        "id": "1e1c2daa-7862-473d-9a08-926bbb78f3f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522755502,
        "parent_id": "47b97e1b-c57a-4ebb-854d-b5c25a70fd9a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using this, when the binary value for "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " ("
            ],
            [
              "0101",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") and the binary value for "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " ("
            ],
            [
              "1001",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") are "
            ],
            [
              "XOR",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "’ed together we get the binary value of "
            ],
            [
              "1100",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using this, when the binary value for "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " ("
          },
          {
            "Text": "0101",
            "AttrFlags": 2
          },
          {
            "Text": ") and the binary value for "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": " ("
          },
          {
            "Text": "1001",
            "AttrFlags": 2
          },
          {
            "Text": ") are "
          },
          {
            "Text": "XOR",
            "AttrFlags": 2
          },
          {
            "Text": "’ed together we get the binary value of "
          },
          {
            "Text": "1100",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522755502,
        "id": "93e4ec4c-2a00-4223-932b-e9ae9e4a44dc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550736420000,
        "parent_id": "47b97e1b-c57a-4ebb-854d-b5c25a70fd9a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "int a = 0 1 0 1\nint b = 1 0 0 1 ^\n        ---------\nint c = 1 1 0 0"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "int a = 0 1 0 1\nint b = 1 0 0 1 ^\n        ---------\nint c = 1 1 0 0",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522755502,
        "id": "30ad23bb-2d6f-4fca-88d4-3ed7998c8c11",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522755502,
        "parent_id": "47b97e1b-c57a-4ebb-854d-b5c25a70fd9a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The bit wise XOR does not change the value of the original values unless specifically assigned to using the bit wise assignment compound operator "
            ],
            [
              "^=",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The bit wise XOR does not change the value of the original values unless specifically assigned to using the bit wise assignment compound operator "
          },
          {
            "Text": "^=",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522755502,
        "id": "38a139dc-f6a8-402d-93f2-5859dba04b8e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552296060000,
        "parent_id": "47b97e1b-c57a-4ebb-854d-b5c25a70fd9a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "// :glot\n#include \u003ciostream\u003e\n\nint main(int argc, char **argv) {\n    int a = 5;  // 0101b  (0x05)\n    a ^= 9;    // a = 0101b ^ 1001b\n\n    std::cout \u003c\u003c \"a = \" \u003c\u003c a \u003c\u003c std::endl;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 15,
        "code": "// :glot\n#include \u003ciostream\u003e\n\nint main(int argc, char **argv) {\n    int a = 5;  // 0101b  (0x05)\n    a ^= 9;    // a = 0101b ^ 1001b\n\n    std::cout \u003c\u003c \"a = \" \u003c\u003c a \u003c\u003c std::endl;\n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522755503,
        "id": "89556f3a-b836-4464-8f70-f78ccd0ab22b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522755503,
        "parent_id": "47b97e1b-c57a-4ebb-854d-b5c25a70fd9a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "also in 2015+ compilers variables may be assigned as binary:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "also in 2015+ compilers variables may be assigned as binary:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522755504,
        "id": "c928049a-44a9-41da-9010-7279df2609f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550736540000,
        "parent_id": "47b97e1b-c57a-4ebb-854d-b5c25a70fd9a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "int cn = 0b0111;"
            ]
          ]
        },
        "type": "code",
        "version": 5,
        "code": "int cn = 0b0111;",
        "code_language": "C++"
      }
    ],
    "title": "^ - bitwise XOR (exclusive OR)",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}