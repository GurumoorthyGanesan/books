{
  "ID": "3e467b63-a165-4614-b2d8-53137d4dce70",
  "Root": {
    "alive": true,
    "content": [
      "37ad338e-bdd8-4bf9-bf65-eebfd307d3c1",
      "265eac62-12c6-4651-a5b4-ccf84ee092d9",
      "b7592079-9c6a-470a-9491-556ac1f0a7ae",
      "d35a5cdc-7778-42d4-9927-df4592f78445",
      "816c0236-5a4b-4266-9eab-7169b138a476",
      "2cf8f343-189a-4dd5-b6f6-412c7c317ee7",
      "4b849fd1-b338-4d70-bf73-e4758efe6202",
      "6055bbb3-09e5-4c78-9916-a29dfffd1344",
      "0f4a1b8f-18e3-49fc-b15f-4239b715d3a7",
      "a7f10009-1949-4144-b671-9a47796bce57",
      "694c689b-0b73-4608-9e4a-ffd48296cb26",
      "c9cef561-9231-4514-b42d-ed99fd35f324",
      "513e331b-d0f3-469c-a2a4-27dfe82c86a4",
      "7365044d-add0-49b5-bc19-2f5ff7cd4c18",
      "ac39d36e-d286-4910-8b45-bd719fed36b7",
      "0fa8bbff-3d94-499e-86e5-1fb50c82d392",
      "f1d2a47d-432d-4062-9ba6-8dbadc2d6a9e",
      "40872e0d-0f64-49f1-9a4e-d1107668f366",
      "e8cd9176-2968-4f7c-b15b-d8428b0edd70",
      "05d3f3fe-8e6a-4c58-bc36-7f75cffd345a",
      "c47215ff-5d9e-4093-b54d-6a3b4783f9d3",
      "c506ebbd-a619-44fc-8c9e-fe61a8ef7216"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523448492,
    "id": "3e467b63-a165-4614-b2d8-53137d4dce70",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550523448492,
    "parent_id": "02d273f3-3937-4a5b-86af-fbaa7082fc98",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "030 constexpr functions"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448485,
        "id": "37ad338e-bdd8-4bf9-bf65-eebfd307d3c1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448485,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A function that is declared "
            ],
            [
              "constexpr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is implicitly inline and calls to such a function potentially yield constant expressions. For example, the following function, if called with constant expression arguments, yields a constant expression too:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A function that is declared "
          },
          {
            "Text": "constexpr",
            "AttrFlags": 2
          },
          {
            "Text": " is implicitly inline and calls to such a function potentially yield constant expressions. For example, the following function, if called with constant expression arguments, yields a constant expression too:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448488,
        "id": "265eac62-12c6-4651-a5b4-ccf84ee092d9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448488,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "constexpr int Sum(int a, int b)\n{\n    return a + b;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "constexpr int Sum(int a, int b)\n{\n    return a + b;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448488,
        "id": "b7592079-9c6a-470a-9491-556ac1f0a7ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448488,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Thus, the result of the function call may be used as an array bound or a template argument, or to initialize a "
            ],
            [
              "constexpr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variable:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Thus, the result of the function call may be used as an array bound or a template argument, or to initialize a "
          },
          {
            "Text": "constexpr",
            "AttrFlags": 2
          },
          {
            "Text": " variable:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448488,
        "id": "d35a5cdc-7778-42d4-9927-df4592f78445",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448488,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int main()\n{\n    constexpr int S = Sum(10,20);\n   \n    int Array[S];\n    int Array2[Sum(20,30)]; // 50 array size, compile time\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int main()\n{\n    constexpr int S = Sum(10,20);\n   \n    int Array[S];\n    int Array2[Sum(20,30)]; // 50 array size, compile time\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448489,
        "id": "816c0236-5a4b-4266-9eab-7169b138a476",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448489,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that if you remove "
            ],
            [
              "constexpr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " from function’s return type specification, assignment to "
            ],
            [
              "S",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will not work, as "
            ],
            [
              "S",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a "
            ],
            [
              "constexpr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variable, and must be assigned a compile-time const. Similarly, size of array will also not be a constant-expression, if function "
            ],
            [
              "Sum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not "
            ],
            [
              "constexpr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that if you remove "
          },
          {
            "Text": "constexpr",
            "AttrFlags": 2
          },
          {
            "Text": " from function’s return type specification, assignment to "
          },
          {
            "Text": "S",
            "AttrFlags": 2
          },
          {
            "Text": " will not work, as "
          },
          {
            "Text": "S",
            "AttrFlags": 2
          },
          {
            "Text": " is a "
          },
          {
            "Text": "constexpr",
            "AttrFlags": 2
          },
          {
            "Text": " variable, and must be assigned a compile-time const. Similarly, size of array will also not be a constant-expression, if function "
          },
          {
            "Text": "Sum",
            "AttrFlags": 2
          },
          {
            "Text": " is not "
          },
          {
            "Text": "constexpr",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448489,
        "id": "2cf8f343-189a-4dd5-b6f6-412c7c317ee7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448489,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Interesting thing about "
            ],
            [
              "constexpr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " functions is that you may also use it like ordinary functions:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Interesting thing about "
          },
          {
            "Text": "constexpr",
            "AttrFlags": 2
          },
          {
            "Text": " functions is that you may also use it like ordinary functions:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448489,
        "id": "4b849fd1-b338-4d70-bf73-e4758efe6202",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448489,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int a = 20;\nauto sum = Sum(a, abs(-20));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int a = 20;\nauto sum = Sum(a, abs(-20));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448489,
        "id": "6055bbb3-09e5-4c78-9916-a29dfffd1344",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448489,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will not be a "
            ],
            [
              "constexpr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function now, it will be compiled as an ordinary function, taking variable (non-constant) arguments, and returning non-constant value. You need not to write two functions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sum",
            "AttrFlags": 2
          },
          {
            "Text": " will not be a "
          },
          {
            "Text": "constexpr",
            "AttrFlags": 2
          },
          {
            "Text": " function now, it will be compiled as an ordinary function, taking variable (non-constant) arguments, and returning non-constant value. You need not to write two functions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448489,
        "id": "0f4a1b8f-18e3-49fc-b15f-4239b715d3a7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448489,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It also means that if you try to assign such call to a non-const variable, it won’t compile:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It also means that if you try to assign such call to a non-const variable, it won’t compile:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448489,
        "id": "a7f10009-1949-4144-b671-9a47796bce57",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448489,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int a = 20;\nconstexpr auto sum = Sum(a, abs(-20));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int a = 20;\nconstexpr auto sum = Sum(a, abs(-20));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448490,
        "id": "694c689b-0b73-4608-9e4a-ffd48296cb26",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448490,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The reason is simple: "
            ],
            [
              "constexpr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " must only be assigned a compile-time constant. However, the above function call makes "
            ],
            [
              "Sum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " a non-"
            ],
            [
              "constexpr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (R-value is non-const, but L-value is declaring itself to be "
            ],
            [
              "constexpr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The reason is simple: "
          },
          {
            "Text": "constexpr",
            "AttrFlags": 2
          },
          {
            "Text": " must only be assigned a compile-time constant. However, the above function call makes "
          },
          {
            "Text": "Sum",
            "AttrFlags": 2
          },
          {
            "Text": " a non-"
          },
          {
            "Text": "constexpr",
            "AttrFlags": 2
          },
          {
            "Text": " (R-value is non-const, but L-value is declaring itself to be "
          },
          {
            "Text": "constexpr",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448490,
        "id": "c9cef561-9231-4514-b42d-ed99fd35f324",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448490,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448490,
        "id": "513e331b-d0f3-469c-a2a4-27dfe82c86a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448490,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "constexpr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function "
            ],
            [
              "must",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " also return a compile-time constant. Following will not compile:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "constexpr",
            "AttrFlags": 2
          },
          {
            "Text": " function "
          },
          {
            "Text": "must",
            "AttrFlags": 1
          },
          {
            "Text": " also return a compile-time constant. Following will not compile:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448490,
        "id": "7365044d-add0-49b5-bc19-2f5ff7cd4c18",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448490,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "constexpr int Sum(int a, int b)\n{\n    int a1 = a;     // ERROR\n    return a + b;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "constexpr int Sum(int a, int b)\n{\n    int a1 = a;     // ERROR\n    return a + b;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448491,
        "id": "ac39d36e-d286-4910-8b45-bd719fed36b7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448491,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Because "
            ],
            [
              "a1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a non-constexpr "
            ],
            [
              "variable",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", and prohibits the function from being a true "
            ],
            [
              "constexpr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function. Making it "
            ],
            [
              "constexpr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and assigning it "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will also not work - since value of "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (incoming parameter) is still not yet known:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Because "
          },
          {
            "Text": "a1",
            "AttrFlags": 2
          },
          {
            "Text": " is a non-constexpr "
          },
          {
            "Text": "variable",
            "AttrFlags": 4
          },
          {
            "Text": ", and prohibits the function from being a true "
          },
          {
            "Text": "constexpr",
            "AttrFlags": 2
          },
          {
            "Text": " function. Making it "
          },
          {
            "Text": "constexpr",
            "AttrFlags": 2
          },
          {
            "Text": " and assigning it "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " will also not work - since value of "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " (incoming parameter) is still not yet known:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448491,
        "id": "0fa8bbff-3d94-499e-86e5-1fb50c82d392",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448491,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "constexpr int Sum(int a, int b)\n{\n   constexpr int a1 = a;     // ERROR\n   .."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "constexpr int Sum(int a, int b)\n{\n   constexpr int a1 = a;     // ERROR\n   ..",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448491,
        "id": "f1d2a47d-432d-4062-9ba6-8dbadc2d6a9e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448491,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Furthermore, following will also not compile:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Furthermore, following will also not compile:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448491,
        "id": "40872e0d-0f64-49f1-9a4e-d1107668f366",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448491,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "constexpr int Sum(int a, int b)\n{\n   return abs(a) + b; // or abs(a) + abs(b)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "constexpr int Sum(int a, int b)\n{\n   return abs(a) + b; // or abs(a) + abs(b)\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448491,
        "id": "e8cd9176-2968-4f7c-b15b-d8428b0edd70",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448491,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Since "
            ],
            [
              "abs(a)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not a constant expression (even "
            ],
            [
              "abs(10)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will not work, since "
            ],
            [
              "abs",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not returning a "
            ],
            [
              "constexpr int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " !"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Since "
          },
          {
            "Text": "abs(a)",
            "AttrFlags": 2
          },
          {
            "Text": " is not a constant expression (even "
          },
          {
            "Text": "abs(10)",
            "AttrFlags": 2
          },
          {
            "Text": " will not work, since "
          },
          {
            "Text": "abs",
            "AttrFlags": 2
          },
          {
            "Text": " is not returning a "
          },
          {
            "Text": "constexpr int",
            "AttrFlags": 2
          },
          {
            "Text": " !"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448491,
        "id": "05d3f3fe-8e6a-4c58-bc36-7f75cffd345a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448491,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "What about this?"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "What about this?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448491,
        "id": "c47215ff-5d9e-4093-b54d-6a3b4783f9d3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448491,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "constexpr int Abs(int v)\n{\n    return v \u003e= 0 ? v : -v;\n}\n\nconstexpr int Sum(int a, int b)\n{\n    return Abs(a) + b;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "constexpr int Abs(int v)\n{\n    return v \u003e= 0 ? v : -v;\n}\n\nconstexpr int Sum(int a, int b)\n{\n    return Abs(a) + b;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523448492,
        "id": "c506ebbd-a619-44fc-8c9e-fe61a8ef7216",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523448492,
        "parent_id": "3e467b63-a165-4614-b2d8-53137d4dce70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We crafted our own "
            ],
            [
              "Abs",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function which is a "
            ],
            [
              "constexpr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and the body of "
            ],
            [
              "Abs",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " also doesn’t break any rule. Also, at the call site (inside "
            ],
            [
              "Sum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "), the expression evaluates to a "
            ],
            [
              "constexpr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Hence, the call to "
            ],
            [
              "Sum(-10, 20)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be a compile-time constant expression resulting to "
            ],
            [
              "30",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We crafted our own "
          },
          {
            "Text": "Abs",
            "AttrFlags": 2
          },
          {
            "Text": " function which is a "
          },
          {
            "Text": "constexpr",
            "AttrFlags": 2
          },
          {
            "Text": ", and the body of "
          },
          {
            "Text": "Abs",
            "AttrFlags": 2
          },
          {
            "Text": " also doesn’t break any rule. Also, at the call site (inside "
          },
          {
            "Text": "Sum",
            "AttrFlags": 2
          },
          {
            "Text": "), the expression evaluates to a "
          },
          {
            "Text": "constexpr",
            "AttrFlags": 2
          },
          {
            "Text": ". Hence, the call to "
          },
          {
            "Text": "Sum(-10, 20)",
            "AttrFlags": 2
          },
          {
            "Text": " will be a compile-time constant expression resulting to "
          },
          {
            "Text": "30",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "030 constexpr functions"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}