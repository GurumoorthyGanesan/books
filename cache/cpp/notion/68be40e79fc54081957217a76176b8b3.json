{
  "ID": "68be40e7-9fc5-4081-9572-17a76176b8b3",
  "Root": {
    "alive": true,
    "content": [
      "85ce36ae-b88b-41af-b8c4-f4880ddd3643",
      "a9a4c0b0-1bf3-48c8-8559-e80d1486f7d8",
      "bedc2a16-1188-4f26-88f9-9fb0160faab0",
      "e6653d73-d6a5-4cb0-a84c-ea4deb2aafca",
      "bc149658-bb3f-4689-95d2-8caf6cae8cc2",
      "6f00d6d8-b4a2-4f4f-a22f-a2c55d94244c",
      "25ee8c7e-e127-4e6e-93af-b306f7ce9015",
      "49063aae-f6db-4446-aae9-1dca771c5dc5",
      "eb389551-a820-4ba7-9023-26adfb8f95e7",
      "c1a24e8b-a165-4c33-813e-d64ab66f1603",
      "05b540be-431c-4dc7-b771-9c062fcee676",
      "7f60e827-d3c9-4ef0-91ea-8bd7f0dbb60b",
      "59f61b02-e080-4335-9f71-f470902eb9da",
      "c943caaf-02d7-476d-a553-e9474882c009",
      "34287a52-ec2d-4ddb-9be0-a078b49700ed"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550524379955,
    "id": "68be40e7-9fc5-4081-9572-17a76176b8b3",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550524379955,
    "parent_id": "2457e2b5-2a2a-4489-9eac-adb5cebfd9b8",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "040 Parsing files"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524379951,
        "id": "85ce36ae-b88b-41af-b8c4-f4880ddd3643",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524379951,
        "parent_id": "68be40e7-9fc5-4081-9572-17a76176b8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parsing files into STL containers"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parsing files into STL containers"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524379953,
        "id": "a9a4c0b0-1bf3-48c8-8559-e80d1486f7d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524379953,
        "parent_id": "68be40e7-9fc5-4081-9572-17a76176b8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "istream_iterator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s are very useful for reading sequences of numbers or other parsable data into STL containers without explicit loops in the code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "istream_iterator",
            "AttrFlags": 2
          },
          {
            "Text": "s are very useful for reading sequences of numbers or other parsable data into STL containers without explicit loops in the code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524379953,
        "id": "bedc2a16-1188-4f26-88f9-9fb0160faab0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524379953,
        "parent_id": "68be40e7-9fc5-4081-9572-17a76176b8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using explicit container size:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using explicit container size:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524379954,
        "id": "e6653d73-d6a5-4cb0-a84c-ea4deb2aafca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524379954,
        "parent_id": "68be40e7-9fc5-4081-9572-17a76176b8b3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::vector\u003cint\u003e v(100);\nstd::copy(std::istream_iterator\u003cint\u003e(ifs), std::istream_iterator\u003cint\u003e(),\n    v.begin());"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::vector\u003cint\u003e v(100);\nstd::copy(std::istream_iterator\u003cint\u003e(ifs), std::istream_iterator\u003cint\u003e(),\n    v.begin());",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524379954,
        "id": "bc149658-bb3f-4689-95d2-8caf6cae8cc2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524379954,
        "parent_id": "68be40e7-9fc5-4081-9572-17a76176b8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "or with inserting iterator:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "or with inserting iterator:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524379954,
        "id": "6f00d6d8-b4a2-4f4f-a22f-a2c55d94244c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524379954,
        "parent_id": "68be40e7-9fc5-4081-9572-17a76176b8b3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::vector\u003cint\u003e v;\nstd::copy(std::istream_iterator\u003cint\u003e(ifs), std::istream_iterator\u003cint\u003e(),\n    std::back_inserter(v));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::vector\u003cint\u003e v;\nstd::copy(std::istream_iterator\u003cint\u003e(ifs), std::istream_iterator\u003cint\u003e(),\n    std::back_inserter(v));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524379954,
        "id": "25ee8c7e-e127-4e6e-93af-b306f7ce9015",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524379954,
        "parent_id": "68be40e7-9fc5-4081-9572-17a76176b8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that the numbers in the input file may be divided by any number of any whitespace characters and newlines."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that the numbers in the input file may be divided by any number of any whitespace characters and newlines."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524379954,
        "id": "49063aae-f6db-4446-aae9-1dca771c5dc5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524379954,
        "parent_id": "68be40e7-9fc5-4081-9572-17a76176b8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parsing heterogeneous text tables"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parsing heterogeneous text tables"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524379954,
        "id": "eb389551-a820-4ba7-9023-26adfb8f95e7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524379954,
        "parent_id": "68be40e7-9fc5-4081-9572-17a76176b8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As "
            ],
            [
              "istream::operator\u003e\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " reads text until a whitespace symbol, it may be used in "
            ],
            [
              "while",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " condition to parse complex data tables. For example, if we have a file with two real numbers followed by a string (without spaces) on each line:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As "
          },
          {
            "Text": "istream::operator\u003e\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " reads text until a whitespace symbol, it may be used in "
          },
          {
            "Text": "while",
            "AttrFlags": 2
          },
          {
            "Text": " condition to parse complex data tables. For example, if we have a file with two real numbers followed by a string (without spaces) on each line:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524379954,
        "id": "c1a24e8b-a165-4c33-813e-d64ab66f1603",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524379954,
        "parent_id": "68be40e7-9fc5-4081-9572-17a76176b8b3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "1.12 3.14 foo\n2.1 2.2 barr"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "1.12 3.14 foo\n2.1 2.2 barr",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524379955,
        "id": "05b540be-431c-4dc7-b771-9c062fcee676",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524379955,
        "parent_id": "68be40e7-9fc5-4081-9572-17a76176b8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "it may be parsed like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "it may be parsed like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524379955,
        "id": "7f60e827-d3c9-4ef0-91ea-8bd7f0dbb60b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524379955,
        "parent_id": "68be40e7-9fc5-4081-9572-17a76176b8b3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::string s;\ndouble a, b;\nwhile(ifs \u003e\u003e a \u003e\u003e b \u003e\u003e s) {\n    std::cout \u003c\u003c a \u003c\u003c \" \" \u003c\u003c b \u003c\u003c \" \" \u003c\u003c s \u003c\u003c std::endl;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::string s;\ndouble a, b;\nwhile(ifs \u003e\u003e a \u003e\u003e b \u003e\u003e s) {\n    std::cout \u003c\u003c a \u003c\u003c \" \" \u003c\u003c b \u003c\u003c \" \" \u003c\u003c s \u003c\u003c std::endl;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524379955,
        "id": "59f61b02-e080-4335-9f71-f470902eb9da",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524379955,
        "parent_id": "68be40e7-9fc5-4081-9572-17a76176b8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Transformation"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Transformation"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524379955,
        "id": "c943caaf-02d7-476d-a553-e9474882c009",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524379955,
        "parent_id": "68be40e7-9fc5-4081-9572-17a76176b8b3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Any range-manipulating function may be used with "
            ],
            [
              "std::istream_iterator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " ranges. One of them is "
            ],
            [
              "std::transform",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which allows to process data on-the-fly. For example, let’s read integer values, multiply them by 3.14 and store the result into floating-point container:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Any range-manipulating function may be used with "
          },
          {
            "Text": "std::istream_iterator",
            "AttrFlags": 2
          },
          {
            "Text": " ranges. One of them is "
          },
          {
            "Text": "std::transform",
            "AttrFlags": 2
          },
          {
            "Text": ", which allows to process data on-the-fly. For example, let’s read integer values, multiply them by 3.14 and store the result into floating-point container:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524379955,
        "id": "34287a52-ec2d-4ddb-9be0-a078b49700ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524379955,
        "parent_id": "68be40e7-9fc5-4081-9572-17a76176b8b3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::vector\u003cdouble\u003e v(100);\nstd::transform(std::istream_iterator\u003cint\u003e(ifs), std::istream_iterator\u003cint\u003e(),\nv.begin(),\n[](int val) {\n    return val * 3.14;\n});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::vector\u003cdouble\u003e v(100);\nstd::transform(std::istream_iterator\u003cint\u003e(ifs), std::istream_iterator\u003cint\u003e(),\nv.begin(),\n[](int val) {\n    return val * 3.14;\n});",
        "code_language": "Plain Text"
      }
    ],
    "title": "040 Parsing files"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}