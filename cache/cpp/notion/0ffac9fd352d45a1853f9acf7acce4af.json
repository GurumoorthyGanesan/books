{
  "ID": "0ffac9fd-352d-45a1-853f-9acf7acce4af",
  "Root": {
    "alive": true,
    "content": [
      "91a90ec0-7757-48e7-9db8-ae0332838a9f",
      "5670fbbe-b9dc-4d81-aab9-d3ee68422be3",
      "847ce061-ab19-4281-a4e2-8e95f2bbc77d",
      "d561e2ca-83e1-4a53-9795-1326afcc5f16",
      "5e3dbb4a-fa4e-41d5-8963-97341d76176e",
      "1edf7c77-271a-4ee4-8fb1-299b513addcd",
      "bc7ddc8b-da56-46c8-a6e1-8d92b459fea0",
      "100900f0-e743-423d-9f95-0b8dc309e153"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522758781,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "0ffac9fd-352d-45a1-853f-9acf7acce4af",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552296420000,
    "parent_id": "c48a63c8-822c-4a23-a960-60de4face6ae",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "\u003e\u003e - right shift"
        ]
      ]
    },
    "type": "page",
    "version": 16,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522758778,
        "id": "91a90ec0-7757-48e7-9db8-ae0332838a9f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552296360000,
        "parent_id": "0ffac9fd-352d-45a1-853f-9acf7acce4af",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "// :glot\n#include \u003ciostream\u003e\n\nint main(int argc, char **argv) {\n    int a = 2;      // 0010b\n    int b = a \u003e\u003e 1; // 0001b\n    \n    std::cout \u003c\u003c \"a = \" \u003c\u003c a \u003c\u003c \", b = \" \u003c\u003c b \u003c\u003c std::endl;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 16,
        "code": "// :glot\n#include \u003ciostream\u003e\n\nint main(int argc, char **argv) {\n    int a = 2;      // 0010b\n    int b = a \u003e\u003e 1; // 0001b\n    \n    std::cout \u003c\u003c \"a = \" \u003c\u003c a \u003c\u003c \", b = \" \u003c\u003c b \u003c\u003c std::endl;\n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522758780,
        "id": "5670fbbe-b9dc-4d81-aab9-d3ee68422be3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550736660000,
        "parent_id": "0ffac9fd-352d-45a1-853f-9acf7acce4af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Why",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "Why",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522758780,
        "id": "847ce061-ab19-4281-a4e2-8e95f2bbc77d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522758780,
        "parent_id": "0ffac9fd-352d-45a1-853f-9acf7acce4af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The right bit wise shift will shift the bits of the left hand value ("
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") the number specified on the right ("
            ],
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "); it should be noted that while the operation of a right shift is standard, what happens to the bits of a right shift on a signed negative number is implementation defined and thus cannot be guaranteed to be portable, example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The right bit wise shift will shift the bits of the left hand value ("
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": ") the number specified on the right ("
          },
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": "); it should be noted that while the operation of a right shift is standard, what happens to the bits of a right shift on a signed negative number is implementation defined and thus cannot be guaranteed to be portable, example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522758781,
        "id": "d561e2ca-83e1-4a53-9795-1326afcc5f16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550736660000,
        "parent_id": "0ffac9fd-352d-45a1-853f-9acf7acce4af",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "int a = -2;    \nint b = a \u003e\u003e 1; // the value of b will be depend on the compiler"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "int a = -2;    \nint b = a \u003e\u003e 1; // the value of b will be depend on the compiler",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522758781,
        "id": "5e3dbb4a-fa4e-41d5-8963-97341d76176e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522758781,
        "parent_id": "0ffac9fd-352d-45a1-853f-9acf7acce4af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is also undefined if the number of bits you wish to shift by is a negative number, example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is also undefined if the number of bits you wish to shift by is a negative number, example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522758781,
        "id": "1edf7c77-271a-4ee4-8fb1-299b513addcd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550736660000,
        "parent_id": "0ffac9fd-352d-45a1-853f-9acf7acce4af",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "int a = 1;\nint b = a \u003e\u003e -1;  // undefined behavior"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "int a = 1;\nint b = a \u003e\u003e -1;  // undefined behavior",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522758781,
        "id": "bc7ddc8b-da56-46c8-a6e1-8d92b459fea0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522758781,
        "parent_id": "0ffac9fd-352d-45a1-853f-9acf7acce4af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The bit wise right shift does not change the value of the original values unless specifically assigned to using the bit wise assignment compound operator "
            ],
            [
              "\u003e\u003e=",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The bit wise right shift does not change the value of the original values unless specifically assigned to using the bit wise assignment compound operator "
          },
          {
            "Text": "\u003e\u003e=",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522758781,
        "id": "100900f0-e743-423d-9f95-0b8dc309e153",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552296420000,
        "parent_id": "0ffac9fd-352d-45a1-853f-9acf7acce4af",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "// :glot\n#include \u003ciostream\u003e\n\nint main(int argc, char **argv) {\n    int a = 2;  // 0010b\n    a \u003e\u003e= 1;    // a = a \u003e\u003e 1;\n\n    std::cout \u003c\u003c \"a = \" \u003c\u003c a  \u003c\u003c std::endl;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 15,
        "code": "// :glot\n#include \u003ciostream\u003e\n\nint main(int argc, char **argv) {\n    int a = 2;  // 0010b\n    a \u003e\u003e= 1;    // a = a \u003e\u003e 1;\n\n    std::cout \u003c\u003c \"a = \" \u003c\u003c a  \u003c\u003c std::endl;\n}",
        "code_language": "C++"
      }
    ],
    "title": "\u003e\u003e - right shift",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}