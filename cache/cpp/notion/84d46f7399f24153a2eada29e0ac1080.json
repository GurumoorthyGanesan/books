{
  "ID": "84d46f73-99f2-4153-a2ea-da29e0ac1080",
  "Root": {
    "alive": true,
    "content": [
      "616845f8-2c8d-4d4f-8787-74ed68299cd5",
      "f32e8e8a-1d3b-47fa-8600-3b0c6f2cf881",
      "a0fcb8d0-44f4-4631-b9da-8fbadfb354db",
      "a236d0c5-787b-401d-aca7-a0a7a25403b9",
      "fd37083d-b083-4f71-aca1-c8456de73502",
      "c634ad54-af1c-4a3a-b592-a0f1e03cbbfc"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523096560,
    "id": "84d46f73-99f2-4153-a2ea-da29e0ac1080",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550523096560,
    "parent_id": "10c1e1fe-bf0e-4f71-b1f2-173539570a03",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "070 Implicit conversion"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523096557,
        "id": "616845f8-2c8d-4d4f-8787-74ed68299cd5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523096557,
        "parent_id": "84d46f73-99f2-4153-a2ea-da29e0ac1080",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "static_cast",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can perform any implicit conversion. This use of "
            ],
            [
              "static_cast",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can occasionally be useful, such as in the following examples:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "static_cast",
            "AttrFlags": 2
          },
          {
            "Text": " can perform any implicit conversion. This use of "
          },
          {
            "Text": "static_cast",
            "AttrFlags": 2
          },
          {
            "Text": " can occasionally be useful, such as in the following examples:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523096559,
        "id": "f32e8e8a-1d3b-47fa-8600-3b0c6f2cf881",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523096559,
        "parent_id": "84d46f73-99f2-4153-a2ea-da29e0ac1080",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When passing arguments to an ellipsis, the “expected” argument type is not statically known, so no implicit conversion will occur."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "When passing arguments to an ellipsis, the “expected” argument type is not statically known, so no implicit conversion will occur."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523096559,
        "id": "a0fcb8d0-44f4-4631-b9da-8fbadfb354db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523096559,
        "parent_id": "84d46f73-99f2-4153-a2ea-da29e0ac1080",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const double x = 3.14;\nprintf(\"%d\\n\", static_cast\u003cint\u003e(x)); // prints 3\n// printf(\"%d\\n\", x); // undefined behaviour; printf is expecting an int here\n// alternative:\n// const int y = x; printf(\"%d\\n\", y);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const double x = 3.14;\nprintf(\"%d\\n\", static_cast\u003cint\u003e(x)); // prints 3\n// printf(\"%d\\n\", x); // undefined behaviour; printf is expecting an int here\n// alternative:\n// const int y = x; printf(\"%d\\n\", y);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523096560,
        "id": "a236d0c5-787b-401d-aca7-a0a7a25403b9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523096560,
        "parent_id": "84d46f73-99f2-4153-a2ea-da29e0ac1080",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Without the explicit type conversion, a "
            ],
            [
              "double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object would be passed to the ellipsis, and undefined behaviour would occur."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Without the explicit type conversion, a "
          },
          {
            "Text": "double",
            "AttrFlags": 2
          },
          {
            "Text": " object would be passed to the ellipsis, and undefined behaviour would occur."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523096560,
        "id": "fd37083d-b083-4f71-aca1-c8456de73502",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523096560,
        "parent_id": "84d46f73-99f2-4153-a2ea-da29e0ac1080",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A derived class assignment operator can call a base class assignment operator like so:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "A derived class assignment operator can call a base class assignment operator like so:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523096560,
        "id": "c634ad54-af1c-4a3a-b592-a0f1e03cbbfc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523096560,
        "parent_id": "84d46f73-99f2-4153-a2ea-da29e0ac1080",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct Base { /* ... */ };\nstruct Derived : Base {\n    Derived\u0026 operator=(const Derived\u0026 other) {\n        static_cast\u003cBase\u0026\u003e(*this) = other;\n        // alternative:\n        // Base\u0026 this_base_ref = *this; this_base_ref = other;\n    }\n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct Base { /* ... */ };\nstruct Derived : Base {\n    Derived\u0026 operator=(const Derived\u0026 other) {\n        static_cast\u003cBase\u0026\u003e(*this) = other;\n        // alternative:\n        // Base\u0026 this_base_ref = *this; this_base_ref = other;\n    }\n};",
        "code_language": "Plain Text"
      }
    ],
    "title": "070 Implicit conversion"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}