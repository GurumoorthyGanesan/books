{
  "ID": "c97907f7-fa71-4e5e-a622-5e3b3135d9d1",
  "Root": {
    "alive": true,
    "content": [
      "e5da4e5d-20a3-4fe6-a6bc-936347c53434",
      "13ab3c42-1d3b-4d4d-8f7b-4f60aa912bc7",
      "9da80daf-6592-4875-bd22-7711653651cc",
      "6b1c0d2b-984d-4865-94ce-980db6290853",
      "6777fbb9-743a-4837-8cc0-30b2aca12c2d",
      "3d04af01-f61d-42e1-9884-a28ec8856771",
      "e8cc222c-58ce-4e6f-ae4f-f9641962b752",
      "52fc48c7-853d-404e-acbe-9ebecc6383c8",
      "4dac0b8e-dfcd-45ff-9568-fe6c7c678d5f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522666619,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c97907f7-fa71-4e5e-a622-5e3b3135d9d1",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550710380000,
    "parent_id": "6c5aa9dd-7698-4690-bd9e-644763376917",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Accessing an object as the wrong type"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522666617,
        "id": "e5da4e5d-20a3-4fe6-a6bc-936347c53434",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522666617,
        "parent_id": "c97907f7-fa71-4e5e-a622-5e3b3135d9d1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In most cases, it is illegal to access an object of one type as though it were a different type (disregarding cv-qualifiers). Example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In most cases, it is illegal to access an object of one type as though it were a different type (disregarding cv-qualifiers). Example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522666617,
        "id": "13ab3c42-1d3b-4d4d-8f7b-4f60aa912bc7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550710380000,
        "parent_id": "c97907f7-fa71-4e5e-a622-5e3b3135d9d1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "float x = 42;\nint y = reinterpret_cast\u003cint\u0026\u003e(x);"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "float x = 42;\nint y = reinterpret_cast\u003cint\u0026\u003e(x);",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522666617,
        "id": "9da80daf-6592-4875-bd22-7711653651cc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522666617,
        "parent_id": "c97907f7-fa71-4e5e-a622-5e3b3135d9d1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The result is undefined behavior."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The result is undefined behavior."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522666618,
        "id": "6b1c0d2b-984d-4865-94ce-980db6290853",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522666618,
        "parent_id": "c97907f7-fa71-4e5e-a622-5e3b3135d9d1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are some exceptions to this "
            ],
            [
              "strict aliasing",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " rule:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are some exceptions to this "
          },
          {
            "Text": "strict aliasing",
            "AttrFlags": 4
          },
          {
            "Text": " rule:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522666618,
        "id": "6777fbb9-743a-4837-8cc0-30b2aca12c2d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522666618,
        "parent_id": "c97907f7-fa71-4e5e-a622-5e3b3135d9d1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An object of class type can be accessed as though it were of a type that is a base class of the actual class type."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "An object of class type can be accessed as though it were of a type that is a base class of the actual class type."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522666618,
        "id": "3d04af01-f61d-42e1-9884-a28ec8856771",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522666618,
        "parent_id": "c97907f7-fa71-4e5e-a622-5e3b3135d9d1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Any type can be accessed as a "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "unsigned char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", but the reverse is not true: a char array cannot be accessed as though it were an arbitrary type."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Any type can be accessed as a "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "unsigned char",
            "AttrFlags": 2
          },
          {
            "Text": ", but the reverse is not true: a char array cannot be accessed as though it were an arbitrary type."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522666619,
        "id": "e8cc222c-58ce-4e6f-ae4f-f9641962b752",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522666619,
        "parent_id": "c97907f7-fa71-4e5e-a622-5e3b3135d9d1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A signed integer type can be accessed as the corresponding unsigned type and "
            ],
            [
              "vice versa",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "A signed integer type can be accessed as the corresponding unsigned type and "
          },
          {
            "Text": "vice versa",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522666619,
        "id": "52fc48c7-853d-404e-acbe-9ebecc6383c8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522666619,
        "parent_id": "c97907f7-fa71-4e5e-a622-5e3b3135d9d1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A related rule is that if a non-static member function is called on an object that does not actually have the same type as the defining class of the function, or a derived class, then undefined behavior occurs. This is true even if the function does not access the object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A related rule is that if a non-static member function is called on an object that does not actually have the same type as the defining class of the function, or a derived class, then undefined behavior occurs. This is true even if the function does not access the object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522666619,
        "id": "4dac0b8e-dfcd-45ff-9568-fe6c7c678d5f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550710380000,
        "parent_id": "c97907f7-fa71-4e5e-a622-5e3b3135d9d1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "struct Base {\n};\nstruct Derived : Base {\n    void f() {}\n};\nstruct Unrelated {};\nUnrelated u;\nDerived\u0026 r1 = reinterpret_cast\u003cDerived\u0026\u003e(u); // ok\nr1.f();                                      // UB\nBase b;\nDerived\u0026 r2 = reinterpret_cast\u003cDerived\u0026\u003e(b); // ok\nr2.f();                                      // UB"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "struct Base {\n};\nstruct Derived : Base {\n    void f() {}\n};\nstruct Unrelated {};\nUnrelated u;\nDerived\u0026 r1 = reinterpret_cast\u003cDerived\u0026\u003e(u); // ok\nr1.f();                                      // UB\nBase b;\nDerived\u0026 r2 = reinterpret_cast\u003cDerived\u0026\u003e(b); // ok\nr2.f();                                      // UB",
        "code_language": "C++"
      }
    ],
    "title": "Accessing an object as the wrong type",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}