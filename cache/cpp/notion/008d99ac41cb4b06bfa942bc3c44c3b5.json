{
  "ID": "008d99ac-41cb-4b06-bfa9-42bc3c44c3b5",
  "Root": {
    "alive": true,
    "content": [
      "70c41d1e-f6ec-4790-8030-a21fc09bf4d3",
      "b8fd0ef2-8326-4061-bd58-f04cfc35bae1",
      "eeacf564-f32c-4f0a-a912-2b6e22600853",
      "75eb0825-ce4b-4248-b2aa-f0a47a3d9fcd",
      "d37618ca-4622-4586-be28-ed1f9036bf97",
      "655cf7e3-49d6-4177-8f91-ffa23dd047a3",
      "5c44960e-36a1-4814-b00e-357111101c38"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522082004,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "008d99ac-41cb-4b06-bfa9-42bc3c44c3b5",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550655480000,
    "parent_id": "ee10cf45-84c7-467c-8068-ea9076a2401a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Range-for over a sub-range"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522082000,
        "id": "70c41d1e-f6ec-4790-8030-a21fc09bf4d3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522082000,
        "parent_id": "008d99ac-41cb-4b06-bfa9-42bc3c44c3b5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using range-base loops, you can loop over a sub-part of a given container or other range by generating a proxy object that qualifies for range-based for loops."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using range-base loops, you can loop over a sub-part of a given container or other range by generating a proxy object that qualifies for range-based for loops."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522082003,
        "id": "b8fd0ef2-8326-4061-bd58-f04cfc35bae1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522082003,
        "parent_id": "008d99ac-41cb-4b06-bfa9-42bc3c44c3b5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "template\u003cclass Iterator, class Sentinel=Iterator\u003e\nstruct range_t {\n  Iterator b;\n  Sentinel e;\n  Iterator begin() const { return b; }\n  Sentinel end() const { return e; }\n  bool empty() const { return begin()==end(); }\n  range_t without_front( std::size_t count=1 ) const {\n    if (std::is_same\u003c std::random_access_iterator_tag, typename std::iterator_traits\u003cIterator\u003e::iterator_category \u003e{} ) {\n      count = (std::min)(std::size_t(std::distance(b,e)), count);\n    }\n    return {std::next(b, count), e};\n  }\n  range_t without_back( std::size_t count=1 ) const {\n    if (std::is_same\u003c std::random_access_iterator_tag, typename std::iterator_traits\u003cIterator\u003e::iterator_category \u003e{} ) {\n      count = (std::min)(std::size_t(std::distance(b,e)), count);\n    }\n    return {b, std::prev(e, count)};\n  }\n};\n\ntemplate\u003cclass Iterator, class Sentinel\u003e\nrange_t\u003cIterator, Sentinel\u003e range( Iterator b, Sentinal e ) {\n  return {b,e};\n}\ntemplate\u003cclass Iterable\u003e\nauto range( Iterable\u0026 r ) {\n  using std::begin; using std::end;\n  return range(begin(r),end(r));\n}\n\ntemplate\u003cclass C\u003e\nauto except_first( C\u0026 c ) {\n  auto r = range(c);\n  if (r.empty()) return r;\n  return r.without_front();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "template\u003cclass Iterator, class Sentinel=Iterator\u003e\nstruct range_t {\n  Iterator b;\n  Sentinel e;\n  Iterator begin() const { return b; }\n  Sentinel end() const { return e; }\n  bool empty() const { return begin()==end(); }\n  range_t without_front( std::size_t count=1 ) const {\n    if (std::is_same\u003c std::random_access_iterator_tag, typename std::iterator_traits\u003cIterator\u003e::iterator_category \u003e{} ) {\n      count = (std::min)(std::size_t(std::distance(b,e)), count);\n    }\n    return {std::next(b, count), e};\n  }\n  range_t without_back( std::size_t count=1 ) const {\n    if (std::is_same\u003c std::random_access_iterator_tag, typename std::iterator_traits\u003cIterator\u003e::iterator_category \u003e{} ) {\n      count = (std::min)(std::size_t(std::distance(b,e)), count);\n    }\n    return {b, std::prev(e, count)};\n  }\n};\n\ntemplate\u003cclass Iterator, class Sentinel\u003e\nrange_t\u003cIterator, Sentinel\u003e range( Iterator b, Sentinal e ) {\n  return {b,e};\n}\ntemplate\u003cclass Iterable\u003e\nauto range( Iterable\u0026 r ) {\n  using std::begin; using std::end;\n  return range(begin(r),end(r));\n}\n\ntemplate\u003cclass C\u003e\nauto except_first( C\u0026 c ) {\n  auto r = range(c);\n  if (r.empty()) return r;\n  return r.without_front();\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522082003,
        "id": "eeacf564-f32c-4f0a-a912-2b6e22600853",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522082003,
        "parent_id": "008d99ac-41cb-4b06-bfa9-42bc3c44c3b5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "now we can do:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "now we can do:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522082004,
        "id": "75eb0825-ce4b-4248-b2aa-f0a47a3d9fcd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522082004,
        "parent_id": "008d99ac-41cb-4b06-bfa9-42bc3c44c3b5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::vector\u003cint\u003e v = {1,2,3,4};\n\nfor (auto i : except_first(v))\n  std::cout \u003c\u003c i \u003c\u003c '\\n';"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::vector\u003cint\u003e v = {1,2,3,4};\n\nfor (auto i : except_first(v))\n  std::cout \u003c\u003c i \u003c\u003c '\\n';",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522082004,
        "id": "d37618ca-4622-4586-be28-ed1f9036bf97",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522082004,
        "parent_id": "008d99ac-41cb-4b06-bfa9-42bc3c44c3b5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "and print out"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "and print out"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522082004,
        "id": "655cf7e3-49d6-4177-8f91-ffa23dd047a3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522082004,
        "parent_id": "008d99ac-41cb-4b06-bfa9-42bc3c44c3b5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "2\n3\n4"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "2\n3\n4",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522082004,
        "id": "5c44960e-36a1-4814-b00e-357111101c38",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522082004,
        "parent_id": "008d99ac-41cb-4b06-bfa9-42bc3c44c3b5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Be aware that intermediate objects generated in the "
            ],
            [
              "for(:range_expression)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " part of the "
            ],
            [
              "for",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " loop will have expired by the time the "
            ],
            [
              "for",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " loop starts."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Be aware that intermediate objects generated in the "
          },
          {
            "Text": "for(:range_expression)",
            "AttrFlags": 2
          },
          {
            "Text": " part of the "
          },
          {
            "Text": "for",
            "AttrFlags": 2
          },
          {
            "Text": " loop will have expired by the time the "
          },
          {
            "Text": "for",
            "AttrFlags": 2
          },
          {
            "Text": " loop starts."
          }
        ]
      }
    ],
    "title": "Range-for over a sub-range",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}