{
  "ID": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
  "Root": {
    "alive": true,
    "content": [
      "d7a19b28-8c4a-411f-960e-d4308ffb7eab",
      "81402454-b501-4f80-b99e-696b697d7457",
      "7dc2f8a3-0614-488b-a4f2-3147ed15049b",
      "1756a0e1-005c-4bf6-8ada-e2181774d956",
      "a0b97823-34d4-4971-acb3-e389e393fcae",
      "adb173ba-d71e-4f0a-a878-a312426c8fd7",
      "9fc48d0c-ebc0-4b1f-bed6-819540d84aa4",
      "a69e7cb0-7e44-47dd-97b3-457cbef760e8",
      "7d907929-80f5-4ca8-b2f7-bb3012a2f760",
      "da725d17-9038-4f37-8c7e-0cb3f16b9650",
      "0c5fe364-f220-4739-982e-e5a57d6bd7cb",
      "2c2ec97c-bbb0-495f-a733-1e89980ff653",
      "4d2bceac-37b5-4cc0-8fd1-af30932631b5",
      "b0affdeb-e22b-4b88-90ba-e9bdef693c59",
      "7e64586e-1cf0-4f94-b663-d5a486e2b412",
      "4f6ba85b-e158-4308-a21e-c7da7f111c05",
      "fb6fd891-42b9-401e-bea7-0f59d3be6f9b",
      "8f4d556c-7bcc-452e-9748-ffa1f8857b40",
      "4eb10aaa-720a-4d37-98ab-f9ba764b8273",
      "3c54b25b-1558-45ce-a173-b4c0fc231a04",
      "aef6116c-73c3-4498-8814-fc061fc49042",
      "9b1f7a90-785c-4078-bb2d-3210b6acc532",
      "b9d869da-9892-42c6-8adc-1fa373e0130c",
      "c9adf5a4-1fb5-4662-b88d-685d16649e82",
      "6055fe70-0231-47ed-b19c-bff6bff32e08",
      "e8b19087-ac8c-44d2-a01b-7ecd9755f88f",
      "92395f34-3b3b-43f9-b45a-78d634fcda29",
      "4c230d7f-6524-40f0-96cb-46d25254ad9c",
      "64ac654b-4671-43fa-aaba-7bb225737e6d",
      "9932b1ad-3d2f-444a-9151-8ac5f1b8f7ab",
      "1735e395-3c8f-4c13-ab0c-2f621a602187",
      "fe882a0d-7489-48b2-9a8f-127a3289d2a2"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523089391,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551687219616,
    "parent_id": "10c1e1fe-bf0e-4f71-b1f2-173539570a03",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Explicit type conversions"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089371,
        "id": "d7a19b28-8c4a-411f-960e-d4308ffb7eab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089371,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089375,
        "id": "81402454-b501-4f80-b99e-696b697d7457",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089375,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An expression can be "
            ],
            [
              "explicitly converted",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "cast",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " to type "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " using "
            ],
            [
              "dynamic_cast\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "static_cast\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "reinterpret_cast\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", or "
            ],
            [
              "const_cast\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", depending on what type of cast is intended."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An expression can be "
          },
          {
            "Text": "explicitly converted",
            "AttrFlags": 4
          },
          {
            "Text": " or "
          },
          {
            "Text": "cast",
            "AttrFlags": 4
          },
          {
            "Text": " to type "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": " using "
          },
          {
            "Text": "dynamic_cast\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "static_cast\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "reinterpret_cast\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ", or "
          },
          {
            "Text": "const_cast\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ", depending on what type of cast is intended."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089375,
        "id": "7dc2f8a3-0614-488b-a4f2-3147ed15049b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089375,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C++ also supports function-style cast notation, "
            ],
            [
              "T(expr)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and C-style cast notation, "
            ],
            [
              "(T)expr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "C++ also supports function-style cast notation, "
          },
          {
            "Text": "T(expr)",
            "AttrFlags": 2
          },
          {
            "Text": ", and C-style cast notation, "
          },
          {
            "Text": "(T)expr",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089375,
        "id": "1756a0e1-005c-4bf6-8ada-e2181774d956",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089375,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Syntax"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Syntax"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089376,
        "id": "a0b97823-34d4-4971-acb3-e389e393fcae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089376,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "simple-type-specifier",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\(",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\)",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "simple-type-specifier",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "\\(",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "\\)",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089376,
        "id": "adb173ba-d71e-4f0a-a878-a312426c8fd7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089376,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "simple-type-specifier",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\(",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "expression-list",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\)",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "simple-type-specifier",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "\\(",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "expression-list",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "\\)",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089377,
        "id": "9fc48d0c-ebc0-4b1f-bed6-819540d84aa4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089377,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "simple-type-specifier",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "braced-init-list",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "simple-type-specifier",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "braced-init-list",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089377,
        "id": "a69e7cb0-7e44-47dd-97b3-457cbef760e8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089377,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "typename-specifier",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\(",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\)",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "typename-specifier",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "\\(",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "\\)",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089377,
        "id": "7d907929-80f5-4ca8-b2f7-bb3012a2f760",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089377,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "typename-specifier",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\(",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "expression-list",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\)",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "typename-specifier",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "\\(",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "expression-list",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "\\)",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089377,
        "id": "da725d17-9038-4f37-8c7e-0cb3f16b9650",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089377,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "typename-specifier",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "braced-init-list",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "typename-specifier",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "braced-init-list",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089378,
        "id": "0c5fe364-f220-4739-982e-e5a57d6bd7cb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089378,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "dynamic_cast",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\\u003c",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "type-id",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\(",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "expression",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\)",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "dynamic_cast",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "\\\u003c",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "type-id",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "\\\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "\\(",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "expression",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "\\)",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089378,
        "id": "2c2ec97c-bbb0-495f-a733-1e89980ff653",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089378,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "static_cast",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\\u003c",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "type-id",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\(",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "expression",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\)",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "static_cast",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "\\\u003c",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "type-id",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "\\\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "\\(",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "expression",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "\\)",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089379,
        "id": "4d2bceac-37b5-4cc0-8fd1-af30932631b5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089379,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "reinterpret_cast",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\\u003c",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "type-id",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\(",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "expression",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\)",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "reinterpret_cast",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "\\\u003c",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "type-id",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "\\\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "\\(",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "expression",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "\\)",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089379,
        "id": "b0affdeb-e22b-4b88-90ba-e9bdef693c59",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089379,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "const_cast",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\\u003c",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "type-id",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\(",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "expression",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\)",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "const_cast",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "\\\u003c",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "type-id",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "\\\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "\\(",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "expression",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "\\)",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089380,
        "id": "7e64586e-1cf0-4f94-b663-d5a486e2b412",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089380,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "\\(",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "type-id",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\\)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "cast-expression",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "\\(",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "type-id",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "\\)",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "cast-expression",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089380,
        "id": "4f6ba85b-e158-4308-a21e-c7da7f111c05",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089380,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089380,
        "id": "fb6fd891-42b9-401e-bea7-0f59d3be6f9b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089380,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All six cast notations have one thing in common:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All six cast notations have one thing in common:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089380,
        "id": "8f4d556c-7bcc-452e-9748-ffa1f8857b40",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089380,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Casting to an lvalue reference type, as in "
            ],
            [
              "dynamic_cast\u003cDerived\u0026\u003e(base)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", yields an lvalue. Therefore, when you want to do something with the same object but treat it as a different type, you would cast to an lvalue reference type."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Casting to an lvalue reference type, as in "
          },
          {
            "Text": "dynamic_cast\u003cDerived\u0026\u003e(base)",
            "AttrFlags": 2
          },
          {
            "Text": ", yields an lvalue. Therefore, when you want to do something with the same object but treat it as a different type, you would cast to an lvalue reference type."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089381,
        "id": "4eb10aaa-720a-4d37-98ab-f9ba764b8273",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089381,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Casting to an rvalue reference type, as in "
            ],
            [
              "static_cast\u003cstring\u0026\u0026\u003e(s)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", yields an rvalue."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Casting to an rvalue reference type, as in "
          },
          {
            "Text": "static_cast\u003cstring\u0026\u0026\u003e(s)",
            "AttrFlags": 2
          },
          {
            "Text": ", yields an rvalue."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089381,
        "id": "3c54b25b-1558-45ce-a173-b4c0fc231a04",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089381,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Casting to a non-reference type, as in "
            ],
            [
              "(int)x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", yields a prvalue, which may be thought of as a "
            ],
            [
              "copy",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " of the value being cast, but with a different type from the original."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Casting to a non-reference type, as in "
          },
          {
            "Text": "(int)x",
            "AttrFlags": 2
          },
          {
            "Text": ", yields a prvalue, which may be thought of as a "
          },
          {
            "Text": "copy",
            "AttrFlags": 4
          },
          {
            "Text": " of the value being cast, but with a different type from the original."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089381,
        "id": "aef6116c-73c3-4498-8814-fc061fc49042",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089381,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "reinterpret_cast",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword is responsible for performing two different kinds of “unsafe” conversions:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "reinterpret_cast",
            "AttrFlags": 2
          },
          {
            "Text": " keyword is responsible for performing two different kinds of “unsafe” conversions:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089383,
        "id": "9b1f7a90-785c-4078-bb2d-3210b6acc532",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089383,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "“type punning”",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/12169/type-punning-conversion"
                ]
              ]
            ],
            [
              " conversions, which can be used to access memory of one type as though it is of a different type."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "“type punning”",
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/12169/type-punning-conversion"
          },
          {
            "Text": " conversions, which can be used to access memory of one type as though it is of a different type."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089384,
        "id": "b9d869da-9892-42c6-8adc-1fa373e0130c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089384,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Conversions "
            ],
            [
              "between integer types and pointer types",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/13555/conversion-between-pointer-and-integer"
                ]
              ]
            ],
            [
              ", in either direction."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Conversions "
          },
          {
            "Text": "between integer types and pointer types",
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/13555/conversion-between-pointer-and-integer"
          },
          {
            "Text": ", in either direction."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089384,
        "id": "c9adf5a4-1fb5-4662-b88d-685d16649e82",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089384,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "static_cast",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword can perform a variety of different conversions:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "static_cast",
            "AttrFlags": 2
          },
          {
            "Text": " keyword can perform a variety of different conversions:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089385,
        "id": "6055fe70-0231-47ed-b19c-bff6bff32e08",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089385,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Base to derived",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/10518/base-to-derived-conversion"
                ]
              ]
            ],
            [
              " conversions"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Base to derived",
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/10518/base-to-derived-conversion"
          },
          {
            "Text": " conversions"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089386,
        "id": "e8b19087-ac8c-44d2-a01b-7ecd9755f88f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089386,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Any conversion that can be done by a direct initialization, including both implicit conversions and conversions that call an explicit constructor or conversion function. See "
            ],
            [
              "here",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/18732/implicit-conversion"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "here",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/18731/conversion-by-explicit-constructor-or-explicit-conversion-function"
                ]
              ]
            ],
            [
              " for more details."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Any conversion that can be done by a direct initialization, including both implicit conversions and conversions that call an explicit constructor or conversion function. See "
          },
          {
            "Text": "here",
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/18732/implicit-conversion"
          },
          {
            "Text": " and "
          },
          {
            "Text": "here",
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/18731/conversion-by-explicit-constructor-or-explicit-conversion-function"
          },
          {
            "Text": " for more details."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089387,
        "id": "92395f34-3b3b-43f9-b45a-78d634fcda29",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089387,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To "
            ],
            [
              "void",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which discards the value of the expression."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "To "
          },
          {
            "Text": "void",
            "AttrFlags": 2
          },
          {
            "Text": ", which discards the value of the expression."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089387,
        "id": "4c230d7f-6524-40f0-96cb-46d25254ad9c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089387,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// on some compilers, suppresses warning about x being unused\nstatic_cast\u003cvoid\u003e(x);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// on some compilers, suppresses warning about x being unused\nstatic_cast\u003cvoid\u003e(x);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089387,
        "id": "64ac654b-4671-43fa-aaba-7bb225737e6d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089387,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Between arithmetic and enumeration types, and between different enumeration types. See "
            ],
            [
              "enum conversions",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/18751/enum-conversions"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Between arithmetic and enumeration types, and between different enumeration types. See "
          },
          {
            "Text": "enum conversions",
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/18751/enum-conversions"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089388,
        "id": "9932b1ad-3d2f-444a-9151-8ac5f1b8f7ab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089388,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "From pointer to member of derived class, to pointer to member of base class. The types pointed to must match. See "
            ],
            [
              "derived to base conversion for pointers to members",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/18752/derived-to-base-conversion-for-pointers-to-members"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "From pointer to member of derived class, to pointer to member of base class. The types pointed to must match. See "
          },
          {
            "Text": "derived to base conversion for pointers to members",
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/18752/derived-to-base-conversion-for-pointers-to-members"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089390,
        "id": "1735e395-3c8f-4c13-ab0c-2f621a602187",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089390,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "void*",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/18753/void-to-t"
                ]
              ]
            ],
            [
              " to ",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/18753/void-to-t"
                ]
              ]
            ],
            [
              "T*",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/18753/void-to-t"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "void*",
            "AttrFlags": 2,
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/18753/void-to-t"
          },
          {
            "Text": " to ",
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/18753/void-to-t"
          },
          {
            "Text": "T*",
            "AttrFlags": 2,
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/3090/explicit-type-conversions/18753/void-to-t"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523089391,
        "id": "fe882a0d-7489-48b2-9a8f-127a3289d2a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523089391,
        "parent_id": "ab2f6c9b-055b-4b4f-943b-47e3184265af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "From an lvalue to an xvalue, as in "
            ],
            [
              "std::move",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". See "
            ],
            [
              "move semantics",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/2129/move-semantics"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "From an lvalue to an xvalue, as in "
          },
          {
            "Text": "std::move",
            "AttrFlags": 2
          },
          {
            "Text": ". See "
          },
          {
            "Text": "move semantics",
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/2129/move-semantics"
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Explicit type conversions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}