{
  "ID": "9fc75370-0610-46aa-89e0-c421b661a7b2",
  "Root": {
    "alive": true,
    "content": [
      "76af1c23-2266-4840-b47c-c111131d68f8",
      "e5c9507e-54a8-4e9f-8227-f986385790fc",
      "a9337c89-e5f2-4f85-ba3f-e1f2335affaa",
      "8f91f299-6b1b-4ad8-a395-3949a636932d",
      "da600238-06df-4b1c-bba6-00410af3a36f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550524752518,
    "id": "9fc75370-0610-46aa-89e0-c421b661a7b2",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550524752518,
    "parent_id": "69b8fd2c-ca44-4dcb-84cc-49ed820592d4",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Lambda auto"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524752514,
        "id": "76af1c23-2266-4840-b47c-c111131d68f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524752514,
        "parent_id": "9fc75370-0610-46aa-89e0-c421b661a7b2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The data type auto keyword is a convenient way for programmers to declare lambda functions. It helps by shortening the amount of text programmers need to type to declare a function pointer."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The data type auto keyword is a convenient way for programmers to declare lambda functions. It helps by shortening the amount of text programmers need to type to declare a function pointer."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524752517,
        "id": "e5c9507e-54a8-4e9f-8227-f986385790fc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524752517,
        "parent_id": "9fc75370-0610-46aa-89e0-c421b661a7b2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "auto DoThis = [](int a, int b) { return a + b; };\n//    Do this is of type (int)(*DoThis)(int, int)\n//    else we would have to write this long\nint(*pDoThis)(int, int)= [](int a, int b) { return a + b; };\n\nauto c = Dothis(1, 2);    //    c = int\nauto d = pDothis(1, 2);   //    d = int\n\n//    using 'auto' shortens the definition for lambda functions"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "auto DoThis = [](int a, int b) { return a + b; };\n//    Do this is of type (int)(*DoThis)(int, int)\n//    else we would have to write this long\nint(*pDoThis)(int, int)= [](int a, int b) { return a + b; };\n\nauto c = Dothis(1, 2);    //    c = int\nauto d = pDothis(1, 2);   //    d = int\n\n//    using 'auto' shortens the definition for lambda functions",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524752517,
        "id": "a9337c89-e5f2-4f85-ba3f-e1f2335affaa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524752517,
        "parent_id": "9fc75370-0610-46aa-89e0-c421b661a7b2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By default, if the return type of lambda functions is not defined, it will be automatically inferred from the return expression types."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By default, if the return type of lambda functions is not defined, it will be automatically inferred from the return expression types."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524752517,
        "id": "8f91f299-6b1b-4ad8-a395-3949a636932d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524752517,
        "parent_id": "9fc75370-0610-46aa-89e0-c421b661a7b2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These 3 is basically the same thing"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These 3 is basically the same thing"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524752518,
        "id": "da600238-06df-4b1c-bba6-00410af3a36f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524752518,
        "parent_id": "9fc75370-0610-46aa-89e0-c421b661a7b2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "[](int a, int b) -\u003e int  { return a + b; };\n[](int a, int b) -\u003e auto { return a + b; };\n[](int a, int b) { return a + b; };"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "[](int a, int b) -\u003e int  { return a + b; };\n[](int a, int b) -\u003e auto { return a + b; };\n[](int a, int b) { return a + b; };",
        "code_language": "Plain Text"
      }
    ],
    "title": "020 Lambda auto"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}