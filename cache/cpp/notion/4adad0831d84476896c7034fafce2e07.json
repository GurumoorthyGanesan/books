{
  "ID": "4adad083-1d84-4768-96c7-034fafce2e07",
  "Root": {
    "alive": true,
    "content": [
      "3a6bf4ca-cb81-4dbb-90ce-fc62d80baed6",
      "58ea81a3-9900-4933-b5e8-4bf8da6d1d0c",
      "5483040d-c72b-4234-8bff-160a7da353cd"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550521962479,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "4adad083-1d84-4768-96c7-034fafce2e07",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550656740000,
    "parent_id": "94bfa868-4e02-4b90-841b-817c34132524",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Default template parameter value"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521962479,
        "id": "3a6bf4ca-cb81-4dbb-90ce-fc62d80baed6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521962479,
        "parent_id": "4adad083-1d84-4768-96c7-034fafce2e07",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Just like in case of the function arguments, template parameters can have their default values. All template parameters with a default value have to be declared at the end of the template parameter list. The basic idea is that the template parameters with default value can be omitted while template instantiation."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Just like in case of the function arguments, template parameters can have their default values. All template parameters with a default value have to be declared at the end of the template parameter list. The basic idea is that the template parameters with default value can be omitted while template instantiation."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521962479,
        "id": "58ea81a3-9900-4933-b5e8-4bf8da6d1d0c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521962479,
        "parent_id": "4adad083-1d84-4768-96c7-034fafce2e07",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Simple example of default template parameter value usage:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Simple example of default template parameter value usage:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521962479,
        "id": "5483040d-c72b-4234-8bff-160a7da353cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550656740000,
        "parent_id": "4adad083-1d84-4768-96c7-034fafce2e07",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "template \u003cclass T, size_t N = 10\u003e\nstruct my_array {\n    T arr[N];\n};\n\nint main() {\n    /* Default parameter is ignored, N = 5 */\n    my_array\u003cint, 5\u003e a;\n\n    /* Print the length of a.arr: 5 */\n    std::cout \u003c\u003c sizeof(a.arr) / sizeof(int) \u003c\u003c std::endl;\n\n    /* Last parameter is omitted, N = 10 */\n    my_array\u003cint\u003e b;\n\n    /* Print the length of a.arr: 10 */\n    std::cout \u003c\u003c sizeof(b.arr) / sizeof(int) \u003c\u003c std::endl;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "template \u003cclass T, size_t N = 10\u003e\nstruct my_array {\n    T arr[N];\n};\n\nint main() {\n    /* Default parameter is ignored, N = 5 */\n    my_array\u003cint, 5\u003e a;\n\n    /* Print the length of a.arr: 5 */\n    std::cout \u003c\u003c sizeof(a.arr) / sizeof(int) \u003c\u003c std::endl;\n\n    /* Last parameter is omitted, N = 10 */\n    my_array\u003cint\u003e b;\n\n    /* Print the length of a.arr: 10 */\n    std::cout \u003c\u003c sizeof(b.arr) / sizeof(int) \u003c\u003c std::endl;\n}",
        "code_language": "C++"
      }
    ],
    "title": "Default template parameter value",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}