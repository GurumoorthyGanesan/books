{
  "ID": "5b2abebf-3430-4366-a3d9-393f4016647d",
  "Root": {
    "alive": true,
    "content": [
      "4224ce0c-0703-4bb4-a5b5-7d5529110eb6",
      "baae74a5-3f0e-42f1-9076-5ae8aa75a1b9"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550524753480,
    "id": "5b2abebf-3430-4366-a3d9-393f4016647d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551688798958,
    "parent_id": "69b8fd2c-ca44-4dcb-84cc-49ed820592d4",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Loops and auto"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524753477,
        "id": "4224ce0c-0703-4bb4-a5b5-7d5529110eb6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524753477,
        "parent_id": "5b2abebf-3430-4366-a3d9-393f4016647d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example shows how auto can be used to shorten type declaration for for loops"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example shows how auto can be used to shorten type declaration for for loops"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524753480,
        "id": "baae74a5-3f0e-42f1-9076-5ae8aa75a1b9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524753480,
        "parent_id": "5b2abebf-3430-4366-a3d9-393f4016647d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::map\u003cint, std::string\u003e Map;\nfor (auto pair : Map)            //    pair = std::pair\u003cint, std::string\u003e\nfor (const auto pair : Map)      //    pair = const std::pair\u003cint, std::string\u003e    \nfor (const auto\u0026 pair : Map)     //    pair = const std::pair\u003cint, std::string\u003e\u0026\nfor (auto i = 0; i \u003c 1000; ++i)        //    i = int\nfor (auto i = 0; i \u003c Map.size(); ++i)  //    Note that i = int and not size_t\nfor (auto i = Map.size(); i \u003e 0; --i)  //    i = size_t"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::map\u003cint, std::string\u003e Map;\nfor (auto pair : Map)            //    pair = std::pair\u003cint, std::string\u003e\nfor (const auto pair : Map)      //    pair = const std::pair\u003cint, std::string\u003e    \nfor (const auto\u0026 pair : Map)     //    pair = const std::pair\u003cint, std::string\u003e\u0026\nfor (auto i = 0; i \u003c 1000; ++i)        //    i = int\nfor (auto i = 0; i \u003c Map.size(); ++i)  //    Note that i = int and not size_t\nfor (auto i = Map.size(); i \u003e 0; --i)  //    i = size_t",
        "code_language": "Plain Text"
      }
    ],
    "title": "Loops and auto"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}