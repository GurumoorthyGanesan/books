{
  "ID": "5bf47277-93b2-4048-8cdd-9b674f52734b",
  "Root": {
    "alive": true,
    "content": [
      "14f8edc7-1192-457a-95f2-5a8e17b039eb",
      "b22e37dc-cc8d-4491-a2ca-b662c9592651",
      "4a2be9f4-911c-4fb6-9956-0225fbc20cfa",
      "db6d058c-b2aa-4094-b307-7280ffbc3d00",
      "bcfc4663-2499-4571-b7cb-b65a48b62590",
      "eaf701b8-97ce-4c78-9ed4-e198b570bdff"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522665440,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "5bf47277-93b2-4048-8cdd-9b674f52734b",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550710560000,
    "parent_id": "5fbdea23-a3bd-48e3-9bb9-c7ca69fd9aa2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Name lookup and access checking"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522665435,
        "id": "14f8edc7-1192-457a-95f2-5a8e17b039eb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522665435,
        "parent_id": "5bf47277-93b2-4048-8cdd-9b674f52734b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Overload resolution occurs "
            ],
            [
              "after",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " name lookup. This means that a better-matching function will not be selected by overload resolution if it loses name lookup:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Overload resolution occurs "
          },
          {
            "Text": "after",
            "AttrFlags": 4
          },
          {
            "Text": " name lookup. This means that a better-matching function will not be selected by overload resolution if it loses name lookup:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522665438,
        "id": "b22e37dc-cc8d-4491-a2ca-b662c9592651",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522665438,
        "parent_id": "5bf47277-93b2-4048-8cdd-9b674f52734b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void f(int x);\nstruct S {\n    void f(double x);\n    void g() { f(42); } // calls S::f because global f is not visible here,\n                        // even though it would be a better match\n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void f(int x);\nstruct S {\n    void f(double x);\n    void g() { f(42); } // calls S::f because global f is not visible here,\n                        // even though it would be a better match\n};",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522665439,
        "id": "4a2be9f4-911c-4fb6-9956-0225fbc20cfa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522665439,
        "parent_id": "5bf47277-93b2-4048-8cdd-9b674f52734b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Overload resolution occurs "
            ],
            [
              "before",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " access checking. An inaccessible function might be selected by overload resolution if it is a better match than an accessible function."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Overload resolution occurs "
          },
          {
            "Text": "before",
            "AttrFlags": 4
          },
          {
            "Text": " access checking. An inaccessible function might be selected by overload resolution if it is a better match than an accessible function."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522665439,
        "id": "db6d058c-b2aa-4094-b307-7280ffbc3d00",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522665439,
        "parent_id": "5bf47277-93b2-4048-8cdd-9b674f52734b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class C {\n  public:\n    static void f(double x);\n  private:\n    static void f(int x);\n};\nC::f(42); // Error! Calls private C::f(int) even though public C::f(double) is viable."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class C {\n  public:\n    static void f(double x);\n  private:\n    static void f(int x);\n};\nC::f(42); // Error! Calls private C::f(int) even though public C::f(double) is viable.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522665440,
        "id": "bcfc4663-2499-4571-b7cb-b65a48b62590",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522665440,
        "parent_id": "5bf47277-93b2-4048-8cdd-9b674f52734b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Similarly, overload resolution happens without checking whether the resulting call is well-formed with regards to "
            ],
            [
              "explicit",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Similarly, overload resolution happens without checking whether the resulting call is well-formed with regards to "
          },
          {
            "Text": "explicit",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522665440,
        "id": "eaf701b8-97ce-4c78-9ed4-e198b570bdff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522665440,
        "parent_id": "5bf47277-93b2-4048-8cdd-9b674f52734b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct X {\n    explicit X(int );\n    X(char );\n};\n\nvoid foo(X );\nfoo({4}); // X(int) is better much, but expression is \n          // ill-formed because selected constructor is explicit"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct X {\n    explicit X(int );\n    X(char );\n};\n\nvoid foo(X );\nfoo({4}); // X(int) is better much, but expression is \n          // ill-formed because selected constructor is explicit",
        "code_language": "Plain Text"
      }
    ],
    "title": "Name lookup and access checking",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}