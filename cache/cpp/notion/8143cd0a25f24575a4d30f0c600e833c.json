{
  "ID": "8143cd0a-25f2-4575-a4d3-0f0c600e833c",
  "Root": {
    "alive": true,
    "content": [
      "2149bd67-f8dd-47bf-b464-53ad71d9ce70",
      "a0a7bc5b-e9c7-47c3-84a6-eeb74d068fee",
      "152e7f8e-3fc4-4b21-a7f8-b65d56dc5842",
      "45d516a6-e99b-4dd5-8216-de15747aafd2"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550524751485,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "8143cd0a-25f2-4575-a4d3-0f0c600e833c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551688790310,
    "parent_id": "69b8fd2c-ca44-4dcb-84cc-49ed820592d4",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Data Type Auto"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524751482,
        "id": "2149bd67-f8dd-47bf-b464-53ad71d9ce70",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524751482,
        "parent_id": "8143cd0a-25f2-4575-a4d3-0f0c600e833c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example shows the basic type inferences the compiler can perform."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example shows the basic type inferences the compiler can perform."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524751484,
        "id": "a0a7bc5b-e9c7-47c3-84a6-eeb74d068fee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524751484,
        "parent_id": "8143cd0a-25f2-4575-a4d3-0f0c600e833c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "auto a = 1;        //    a = int\nauto b = 2u;       //    b = unsigned int\nauto c = \u0026a;       //    c = int*\nconst auto  d = c; //    d = const int*\nconst auto\u0026 e = b; //    e = const unsigned int\u0026 \n\nauto x = a + b     //    x = int, #compiler warning unsigned and signed\n\nauto v = std::vector\u003cint\u003e;    //    v = std::vector\u003cint\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "auto a = 1;        //    a = int\nauto b = 2u;       //    b = unsigned int\nauto c = \u0026a;       //    c = int*\nconst auto  d = c; //    d = const int*\nconst auto\u0026 e = b; //    e = const unsigned int\u0026 \n\nauto x = a + b     //    x = int, #compiler warning unsigned and signed\n\nauto v = std::vector\u003cint\u003e;    //    v = std::vector\u003cint\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524751485,
        "id": "152e7f8e-3fc4-4b21-a7f8-b65d56dc5842",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524751485,
        "parent_id": "8143cd0a-25f2-4575-a4d3-0f0c600e833c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, the auto keyword does not always perform the expected type inference without additional hints for "
            ],
            [
              "\u0026",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "constexpr",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, the auto keyword does not always perform the expected type inference without additional hints for "
          },
          {
            "Text": "\u0026",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "constexpr",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524751485,
        "id": "45d516a6-e99b-4dd5-8216-de15747aafd2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524751485,
        "parent_id": "8143cd0a-25f2-4575-a4d3-0f0c600e833c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//    y = unsigned int, \n//    note that y does not infer as const unsigned int\u0026\n//    The compiler would have generated a copy instead of a reference value to e or b\nauto y = e;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//    y = unsigned int, \n//    note that y does not infer as const unsigned int\u0026\n//    The compiler would have generated a copy instead of a reference value to e or b\nauto y = e;",
        "code_language": "Plain Text"
      }
    ],
    "title": "Data Type Auto",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}