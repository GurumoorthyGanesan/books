{
  "ID": "11cfa3df-e406-45c3-9d97-634d2f69f1e4",
  "Root": {
    "alive": true,
    "content": [
      "4e450fcc-7cce-45ea-81c4-26bb343de403",
      "0150ac12-d577-43bb-8ef8-bb3aa8ef9ca1",
      "ad6550fb-e128-49a0-9208-b0261b3a446f",
      "e5ce482a-27a3-4cc8-b012-17a82003a078",
      "455d3098-db93-4ff1-baae-f2492f14f236",
      "b713574a-07ba-4a6f-b6a8-2f96e0fc0454",
      "8560e731-a095-4c08-983c-c459e4b64725",
      "7d480f13-5a8c-4f8f-9f5e-b6f9fc4d084b",
      "421cf288-f14c-448e-9eff-746ef65b30fe"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522358505,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "11cfa3df-e406-45c3-9d97-634d2f69f1e4",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550709780000,
    "parent_id": "2ed71a30-e220-47b0-b0e7-1bc14fce30c0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Virtual and Protected Destructors"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522358501,
        "id": "4e450fcc-7cce-45ea-81c4-26bb343de403",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522358501,
        "parent_id": "11cfa3df-e406-45c3-9d97-634d2f69f1e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A class designed to be inherited-from is called a Base class. Care should be taken with the special member functions of such a class."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A class designed to be inherited-from is called a Base class. Care should be taken with the special member functions of such a class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522358504,
        "id": "0150ac12-d577-43bb-8ef8-bb3aa8ef9ca1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522358504,
        "parent_id": "11cfa3df-e406-45c3-9d97-634d2f69f1e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A class designed to be used polymorphically at run-time (through a pointer to the base class) should declare the destructor "
            ],
            [
              "virtual",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This allows the derived parts of the object to be properly destroyed, even when the object is destroyed through a pointer to the base class."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A class designed to be used polymorphically at run-time (through a pointer to the base class) should declare the destructor "
          },
          {
            "Text": "virtual",
            "AttrFlags": 2
          },
          {
            "Text": ". This allows the derived parts of the object to be properly destroyed, even when the object is destroyed through a pointer to the base class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522358504,
        "id": "ad6550fb-e128-49a0-9208-b0261b3a446f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522358504,
        "parent_id": "11cfa3df-e406-45c3-9d97-634d2f69f1e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Base {\npublic:\n    virtual ~Base() = default;\n\nprivate:\n    //    data members etc.\n};\n\nclass Derived : public Base { //  models Is-A relationship\npublic:\n    //    some methods\n\nprivate:\n    //    more data members\n};\n\n//    virtual destructor in Base ensures that derived destructors\n//    are also called when the object is destroyed\nstd::unique_ptr\u003cBase\u003e base = std::make_unique\u003cDerived\u003e();\nbase = nullptr;  //    safe, doesn't leak Derived's members"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Base {\npublic:\n    virtual ~Base() = default;\n\nprivate:\n    //    data members etc.\n};\n\nclass Derived : public Base { //  models Is-A relationship\npublic:\n    //    some methods\n\nprivate:\n    //    more data members\n};\n\n//    virtual destructor in Base ensures that derived destructors\n//    are also called when the object is destroyed\nstd::unique_ptr\u003cBase\u003e base = std::make_unique\u003cDerived\u003e();\nbase = nullptr;  //    safe, doesn't leak Derived's members",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522358504,
        "id": "e5ce482a-27a3-4cc8-b012-17a82003a078",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522358504,
        "parent_id": "11cfa3df-e406-45c3-9d97-634d2f69f1e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the class does not need to be polymorphic, but still needs to allow its interface to be inherited, use a non-virtual "
            ],
            [
              "protected",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " destructor."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the class does not need to be polymorphic, but still needs to allow its interface to be inherited, use a non-virtual "
          },
          {
            "Text": "protected",
            "AttrFlags": 2
          },
          {
            "Text": " destructor."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522358504,
        "id": "455d3098-db93-4ff1-baae-f2492f14f236",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522358504,
        "parent_id": "11cfa3df-e406-45c3-9d97-634d2f69f1e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class NonPolymorphicBase {\npublic:\n    //    some methods\n\nprotected:\n    ~NonPolymorphicBase() = default; //    note: non-virtual\n\nprivate:\n    //    etc.\n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class NonPolymorphicBase {\npublic:\n    //    some methods\n\nprotected:\n    ~NonPolymorphicBase() = default; //    note: non-virtual\n\nprivate:\n    //    etc.\n};",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522358504,
        "id": "b713574a-07ba-4a6f-b6a8-2f96e0fc0454",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522358504,
        "parent_id": "11cfa3df-e406-45c3-9d97-634d2f69f1e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Such a class can never be destroyed through a pointer, avoiding silent leaks due to slicing."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Such a class can never be destroyed through a pointer, avoiding silent leaks due to slicing."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522358505,
        "id": "8560e731-a095-4c08-983c-c459e4b64725",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522358505,
        "parent_id": "11cfa3df-e406-45c3-9d97-634d2f69f1e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This technique especially applies to classes designed to be "
            ],
            [
              "private",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " base classes. Such a class might be used to encapsulate some common implementation details, while providing "
            ],
            [
              "virtual",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " methods as customisation points. This kind of class should never be used polymorphically, and a "
            ],
            [
              "protected",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " destructor helps to document this requirement directly in the code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This technique especially applies to classes designed to be "
          },
          {
            "Text": "private",
            "AttrFlags": 2
          },
          {
            "Text": " base classes. Such a class might be used to encapsulate some common implementation details, while providing "
          },
          {
            "Text": "virtual",
            "AttrFlags": 2
          },
          {
            "Text": " methods as customisation points. This kind of class should never be used polymorphically, and a "
          },
          {
            "Text": "protected",
            "AttrFlags": 2
          },
          {
            "Text": " destructor helps to document this requirement directly in the code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522358505,
        "id": "7d480f13-5a8c-4f8f-9f5e-b6f9fc4d084b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522358505,
        "parent_id": "11cfa3df-e406-45c3-9d97-634d2f69f1e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finally, some classes may require that they are "
            ],
            [
              "never",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " used as a base class. In this case, the class can be marked "
            ],
            [
              "final",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". A normal non-virtual public destructor is fine in this case."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finally, some classes may require that they are "
          },
          {
            "Text": "never",
            "AttrFlags": 4
          },
          {
            "Text": " used as a base class. In this case, the class can be marked "
          },
          {
            "Text": "final",
            "AttrFlags": 2
          },
          {
            "Text": ". A normal non-virtual public destructor is fine in this case."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522358505,
        "id": "421cf288-f14c-448e-9eff-746ef65b30fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522358505,
        "parent_id": "11cfa3df-e406-45c3-9d97-634d2f69f1e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class FinalClass final {  //    marked final here\npublic:\n    ~FinalClass() = default;\n\nprivate:\n    //    etc.\n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class FinalClass final {  //    marked final here\npublic:\n    ~FinalClass() = default;\n\nprivate:\n    //    etc.\n};",
        "code_language": "Plain Text"
      }
    ],
    "title": "Virtual and Protected Destructors",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}