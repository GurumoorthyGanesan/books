{
  "ID": "0c235abf-fe1d-4687-955e-96f7ab084497",
  "Root": {
    "alive": true,
    "content": [
      "1a839104-cc67-4e28-acdc-9b6eb7d6a8e8",
      "7c1904e4-c597-4429-ad0d-e9877bff259a",
      "93e5bb5f-51de-4cde-b9fc-cea25c400ca6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550525102764,
    "id": "0c235abf-fe1d-4687-955e-96f7ab084497",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550525102764,
    "parent_id": "e3f32187-64e1-4609-b294-74d479b50a70",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "050 auto"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525102759,
        "id": "1a839104-cc67-4e28-acdc-9b6eb7d6a8e8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525102759,
        "parent_id": "0c235abf-fe1d-4687-955e-96f7ab084497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Declares a variable to have automatic storage duration. It is redundant, since automatic storage duration is already the default at block scope, and the auto specifier is not allowed at namespace scope."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Declares a variable to have automatic storage duration. It is redundant, since automatic storage duration is already the default at block scope, and the auto specifier is not allowed at namespace scope."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525102762,
        "id": "7c1904e4-c597-4429-ad0d-e9877bff259a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525102762,
        "parent_id": "0c235abf-fe1d-4687-955e-96f7ab084497",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void f() {\n    auto int x; // equivalent to: int x;\n    auto y;     // illegal in C++; legal in C89\n}\nauto int z;     // illegal: namespace-scope variable cannot be automatic"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void f() {\n    auto int x; // equivalent to: int x;\n    auto y;     // illegal in C++; legal in C89\n}\nauto int z;     // illegal: namespace-scope variable cannot be automatic",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525102764,
        "id": "93e5bb5f-51de-4cde-b9fc-cea25c400ca6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525102764,
        "parent_id": "0c235abf-fe1d-4687-955e-96f7ab084497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In C++11, "
            ],
            [
              "auto",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " changed meaning completely, and is no longer a storage class specifier, but is instead used for "
            ],
            [
              "type deduction",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/7863/type-deduction/25567/auto-type-deduction"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In C++11, "
          },
          {
            "Text": "auto",
            "AttrFlags": 2
          },
          {
            "Text": " changed meaning completely, and is no longer a storage class specifier, but is instead used for "
          },
          {
            "Text": "type deduction",
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/7863/type-deduction/25567/auto-type-deduction"
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "050 auto"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}