{
  "ID": "2382c521-c528-4dc4-a462-5a74ffef0f38",
  "Root": {
    "alive": true,
    "content": [
      "8bcd6b0f-8caa-4689-a096-8d727a9b3123",
      "4994a319-aa98-46d3-8eaf-ed92dfe8a3dc",
      "a962ec77-5ed5-440f-ac51-572ea8dfd418",
      "6b86d7e2-8754-4dd0-8dbe-6f6f4af95783",
      "a4fc6666-5aed-4515-b570-294e3ab29449",
      "0a2a7952-d57b-4a18-b16c-4870c2eaa3e4",
      "fdb8caa6-c165-4ec7-9f09-b89f8f40debe",
      "3d6fdfa3-c64c-48f7-be4a-62eb606f6e19",
      "1defc7a7-df12-444c-a79a-a4176fe24af2",
      "3b6d600f-bea0-4739-90b0-7485a8a2d805"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522023621,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "2382c521-c528-4dc4-a462-5a74ffef0f38",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550655960000,
    "parent_id": "402ef4da-a4e3-4503-ab08-9a4aa56821b5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Smart Pointers"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522023618,
        "id": "8bcd6b0f-8caa-4689-a096-8d727a9b3123",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522023618,
        "parent_id": "2382c521-c528-4dc4-a462-5a74ffef0f38",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Syntax"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Syntax"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522023619,
        "id": "4994a319-aa98-46d3-8eaf-ed92dfe8a3dc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522023619,
        "parent_id": "2382c521-c528-4dc4-a462-5a74ffef0f38",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::shared_ptr\u003cClassType\u003e variableName = std::make_shared\u003cClassType\u003e(arg1, arg2, ...);",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::shared_ptr\u003cClassType\u003e variableName = std::make_shared\u003cClassType\u003e(arg1, arg2, ...);",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522023620,
        "id": "a962ec77-5ed5-440f-ac51-572ea8dfd418",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522023620,
        "parent_id": "2382c521-c528-4dc4-a462-5a74ffef0f38",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::shared_ptr\u003cClassType\u003e variableName (new ClassType(arg1, arg2, ...));",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::shared_ptr\u003cClassType\u003e variableName (new ClassType(arg1, arg2, ...));",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522023620,
        "id": "6b86d7e2-8754-4dd0-8dbe-6f6f4af95783",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522023620,
        "parent_id": "2382c521-c528-4dc4-a462-5a74ffef0f38",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::unique_ptr\u003cClassType\u003e variableName = std::make_unique\u003cClassType\u003e(arg1, arg2, ...);",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " // C++14"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::unique_ptr\u003cClassType\u003e variableName = std::make_unique\u003cClassType\u003e(arg1, arg2, ...);",
            "AttrFlags": 2
          },
          {
            "Text": " // C++14"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522023620,
        "id": "a4fc6666-5aed-4515-b570-294e3ab29449",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522023620,
        "parent_id": "2382c521-c528-4dc4-a462-5a74ffef0f38",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::unique_ptr\u003cClassType\u003e variableName (new ClassType(arg1, arg2, ...));",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::unique_ptr\u003cClassType\u003e variableName (new ClassType(arg1, arg2, ...));",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522023620,
        "id": "0a2a7952-d57b-4a18-b16c-4870c2eaa3e4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522023620,
        "parent_id": "2382c521-c528-4dc4-a462-5a74ffef0f38",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522023620,
        "id": "fdb8caa6-c165-4ec7-9f09-b89f8f40debe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522023620,
        "parent_id": "2382c521-c528-4dc4-a462-5a74ffef0f38",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C++ is not a memory-managed language. Dynamically allocated memory (i.e. objects created with "
            ],
            [
              "new",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") will be “leaked” if it is not explicitly deallocated (with "
            ],
            [
              "delete",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "). It is the programmer’s responsibility to ensure that the dynamically allocated memory is freed before discarding the last pointer to that object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "C++ is not a memory-managed language. Dynamically allocated memory (i.e. objects created with "
          },
          {
            "Text": "new",
            "AttrFlags": 2
          },
          {
            "Text": ") will be “leaked” if it is not explicitly deallocated (with "
          },
          {
            "Text": "delete",
            "AttrFlags": 2
          },
          {
            "Text": "). It is the programmer’s responsibility to ensure that the dynamically allocated memory is freed before discarding the last pointer to that object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522023620,
        "id": "3d6fdfa3-c64c-48f7-be4a-62eb606f6e19",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522023620,
        "parent_id": "2382c521-c528-4dc4-a462-5a74ffef0f38",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Smart pointers can be used to automatically manage the scope of dynamically allocated memory (i.e. when the last pointer reference goes out of scope it is deleted)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Smart pointers can be used to automatically manage the scope of dynamically allocated memory (i.e. when the last pointer reference goes out of scope it is deleted)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522023621,
        "id": "1defc7a7-df12-444c-a79a-a4176fe24af2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522023621,
        "parent_id": "2382c521-c528-4dc4-a462-5a74ffef0f38",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Smart pointers are preferred over “raw” pointers in most cases. They make the ownership semantics of dynamically allocated memory explicit, by communicating in their names whether an object is intended to be shared or uniquely owned."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Smart pointers are preferred over “raw” pointers in most cases. They make the ownership semantics of dynamically allocated memory explicit, by communicating in their names whether an object is intended to be shared or uniquely owned."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522023621,
        "id": "3b6d600f-bea0-4739-90b0-7485a8a2d805",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522023621,
        "parent_id": "2382c521-c528-4dc4-a462-5a74ffef0f38",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Use "
            ],
            [
              "#include \u003cmemory\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to be able to use smart pointers."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Use "
          },
          {
            "Text": "#include \u003cmemory\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " to be able to use smart pointers."
          }
        ]
      }
    ],
    "title": "Smart Pointers",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}