{
  "ID": "74e90604-3ef4-41f9-805e-1debafbc436e",
  "Root": {
    "alive": true,
    "content": [
      "e66dddbd-0e82-4caf-869a-3e5c16dd5d50",
      "5b9f341b-050e-43a3-9a24-f6027b04ca3b",
      "86d3c1c9-cd3a-4416-98b4-9d358da940c9"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550525189464,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "74e90604-3ef4-41f9-805e-1debafbc436e",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551689050337,
    "parent_id": "4e04587c-419b-4bb3-bcb4-efe6a43e35e9",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Inline ExpansionInlining"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525189461,
        "id": "e66dddbd-0e82-4caf-869a-3e5c16dd5d50",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525189461,
        "parent_id": "74e90604-3ef4-41f9-805e-1debafbc436e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Inline expansion (also known as inlining) is compiler optimisation that replaces a call to a function with the body of that function. This saves the function call overhead, but at the cost of space, since the function may be duplicated several times."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Inline expansion (also known as inlining) is compiler optimisation that replaces a call to a function with the body of that function. This saves the function call overhead, but at the cost of space, since the function may be duplicated several times."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525189463,
        "id": "5b9f341b-050e-43a3-9a24-f6027b04ca3b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525189463,
        "parent_id": "74e90604-3ef4-41f9-805e-1debafbc436e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// source:\n\nint process(int value)\n{\n    return 2 * value;\n}\n\nint foo(int a)\n{\n    return process(a);\n}\n\n// program, after inlining:\n\nint foo(int a)\n{\n    return 2 * a; // the body of process() is copied into foo()\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// source:\n\nint process(int value)\n{\n    return 2 * value;\n}\n\nint foo(int a)\n{\n    return process(a);\n}\n\n// program, after inlining:\n\nint foo(int a)\n{\n    return 2 * a; // the body of process() is copied into foo()\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525189464,
        "id": "86d3c1c9-cd3a-4416-98b4-9d358da940c9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525189464,
        "parent_id": "74e90604-3ef4-41f9-805e-1debafbc436e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Inlining is most commonly done for small functions, where the function call overhead is significant compared to the size of the function body."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Inlining is most commonly done for small functions, where the function call overhead is significant compared to the size of the function body."
          }
        ]
      }
    ],
    "title": "Inline ExpansionInlining",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}