{
  "ID": "6b9e3cbe-6c1b-4b0a-8555-5916f5bfb5dc",
  "Root": {
    "alive": true,
    "content": [
      "069eeed3-42d7-4a55-9116-e2a8e34f0647",
      "a904bfcd-03da-4c98-a178-489cd809a09c",
      "ce472bb0-8aa4-4699-addb-3bbc8efc7a1b",
      "39521121-9fbb-4d83-a54d-daff19d15095",
      "acb79489-6831-4771-8605-96f784960aaa",
      "b21d7226-d8c2-49b1-8ceb-1784c870f1e2",
      "aedf1438-542f-42ca-8417-74ce39bf7fac",
      "61b73e25-97ca-4814-8e79-a618992f8321"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550521970536,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "6b9e3cbe-6c1b-4b0a-8555-5916f5bfb5dc",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550778720000,
    "parent_id": "ee86edbe-8dd9-497a-a24c-fa516272404e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Reverse Iterators"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521970533,
        "id": "069eeed3-42d7-4a55-9116-e2a8e34f0647",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521970533,
        "parent_id": "6b9e3cbe-6c1b-4b0a-8555-5916f5bfb5dc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If we want to iterate backwards through a list or vector we can use a "
            ],
            [
              "reverse_iterator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". A reverse iterator is made from a bidirectional, or random access iterator which it keeps as a member which can be accessed through "
            ],
            [
              "base()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If we want to iterate backwards through a list or vector we can use a "
          },
          {
            "Text": "reverse_iterator",
            "AttrFlags": 2
          },
          {
            "Text": ". A reverse iterator is made from a bidirectional, or random access iterator which it keeps as a member which can be accessed through "
          },
          {
            "Text": "base()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521970535,
        "id": "a904bfcd-03da-4c98-a178-489cd809a09c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521970535,
        "parent_id": "6b9e3cbe-6c1b-4b0a-8555-5916f5bfb5dc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To iterate backwards use "
            ],
            [
              "rbegin()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "rend()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as the iterators for the end of the collection, and the start of the collection respectively."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To iterate backwards use "
          },
          {
            "Text": "rbegin()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "rend()",
            "AttrFlags": 2
          },
          {
            "Text": " as the iterators for the end of the collection, and the start of the collection respectively."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521970536,
        "id": "ce472bb0-8aa4-4699-addb-3bbc8efc7a1b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521970536,
        "parent_id": "6b9e3cbe-6c1b-4b0a-8555-5916f5bfb5dc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For instance, to iterate backwards use:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For instance, to iterate backwards use:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521970536,
        "id": "39521121-9fbb-4d83-a54d-daff19d15095",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550778720000,
        "parent_id": "6b9e3cbe-6c1b-4b0a-8555-5916f5bfb5dc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "std::vector\u003cint\u003e v{1, 2, 3, 4, 5};\nfor (std::vector\u003cint\u003e::reverse_iterator it = v.rbegin(); it != v.rend(); ++it)\n{\n    cout \u003c\u003c *it;\n} // prints 54321"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "std::vector\u003cint\u003e v{1, 2, 3, 4, 5};\nfor (std::vector\u003cint\u003e::reverse_iterator it = v.rbegin(); it != v.rend(); ++it)\n{\n    cout \u003c\u003c *it;\n} // prints 54321",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521970536,
        "id": "acb79489-6831-4771-8605-96f784960aaa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521970536,
        "parent_id": "6b9e3cbe-6c1b-4b0a-8555-5916f5bfb5dc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A reverse iterator can be converted to a forward iterator via the "
            ],
            [
              "base()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " member function. The relationship is that the reverse iterator references one element past the "
            ],
            [
              "base()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " iterator:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A reverse iterator can be converted to a forward iterator via the "
          },
          {
            "Text": "base()",
            "AttrFlags": 2
          },
          {
            "Text": " member function. The relationship is that the reverse iterator references one element past the "
          },
          {
            "Text": "base()",
            "AttrFlags": 2
          },
          {
            "Text": " iterator:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521970536,
        "id": "b21d7226-d8c2-49b1-8ceb-1784c870f1e2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550778720000,
        "parent_id": "6b9e3cbe-6c1b-4b0a-8555-5916f5bfb5dc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "std::vector\u003cint\u003e::reverse_iterator r = v.rbegin();\nstd::vector\u003cint\u003e::iterator i = r.base();\nassert(\u0026*r == \u0026*(i-1)); // always true if r, (i-1) are dereferenceable\n                        // and are not proxy iterators\n\n +---+---+---+---+---+---+---+\n |   | 1 | 2 | 3 | 4 | 5 |   |\n +---+---+---+---+---+---+---+\n   ↑   ↑               ↑   ↑\n   |   |               |   |\nrend() |         rbegin()  end()\n       |                   rbegin().base()\n     begin()\n     rend().base()"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "std::vector\u003cint\u003e::reverse_iterator r = v.rbegin();\nstd::vector\u003cint\u003e::iterator i = r.base();\nassert(\u0026*r == \u0026*(i-1)); // always true if r, (i-1) are dereferenceable\n                        // and are not proxy iterators\n\n +---+---+---+---+---+---+---+\n |   | 1 | 2 | 3 | 4 | 5 |   |\n +---+---+---+---+---+---+---+\n   ↑   ↑               ↑   ↑\n   |   |               |   |\nrend() |         rbegin()  end()\n       |                   rbegin().base()\n     begin()\n     rend().base()",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521970536,
        "id": "aedf1438-542f-42ca-8417-74ce39bf7fac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521970536,
        "parent_id": "6b9e3cbe-6c1b-4b0a-8555-5916f5bfb5dc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the visualization where iterators mark positions between elements, the relationship is simpler:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the visualization where iterators mark positions between elements, the relationship is simpler:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521970536,
        "id": "61b73e25-97ca-4814-8e79-a618992f8321",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521970536,
        "parent_id": "6b9e3cbe-6c1b-4b0a-8555-5916f5bfb5dc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "+---+---+---+---+---+\n| 1 | 2 | 3 | 4 | 5 |\n+---+---+---+---+---+\n↑                   ↑\n|                   |\n|                 end()\n|                 rbegin()\nbegin()             rbegin().base()\nrend()\nrend().base()"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "+---+---+---+---+---+\n| 1 | 2 | 3 | 4 | 5 |\n+---+---+---+---+---+\n↑                   ↑\n|                   |\n|                 end()\n|                 rbegin()\nbegin()             rbegin().base()\nrend()\nrend().base()",
        "code_language": "Plain Text"
      }
    ],
    "title": "Reverse Iterators",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}