{
  "ID": "39cac0d7-a6d3-4ca5-8ffd-281d8b340323",
  "Root": {
    "alive": true,
    "content": [
      "0cbe7ffe-b348-4718-a362-22ccce0f5f4b",
      "628b5422-7cac-4fc6-bbce-908e11882902",
      "76b2b076-1c4d-4d2d-8d2d-84b008fac851",
      "1e65792b-efbd-461b-a92d-836e3f442c84",
      "631b5c27-a389-4ed1-a9ac-4c6338bdf651"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550521956427,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "39cac0d7-a6d3-4ca5-8ffd-281d8b340323",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550656800000,
    "parent_id": "94bfa868-4e02-4b90-841b-817c34132524",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Template parameter deduction for constructors"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521956426,
        "id": "0cbe7ffe-b348-4718-a362-22ccce0f5f4b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521956426,
        "parent_id": "39cac0d7-a6d3-4ca5-8ffd-281d8b340323",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Prior to C++17, template deduction cannot deduce the class type for you in a constructor. It must be explicitly specified. Sometimes, however, these types can be very cumbersome or (in the case of lambdas) impossible to name, so we got a proliferation of type factories (like "
            ],
            [
              "make_pair()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "make_tuple()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "back_inserter()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", etc.)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Prior to C++17, template deduction cannot deduce the class type for you in a constructor. It must be explicitly specified. Sometimes, however, these types can be very cumbersome or (in the case of lambdas) impossible to name, so we got a proliferation of type factories (like "
          },
          {
            "Text": "make_pair()",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "make_tuple()",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "back_inserter()",
            "AttrFlags": 2
          },
          {
            "Text": ", etc.)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521956426,
        "id": "628b5422-7cac-4fc6-bbce-908e11882902",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521956426,
        "parent_id": "39cac0d7-a6d3-4ca5-8ffd-281d8b340323",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is no longer necessary:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is no longer necessary:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521956426,
        "id": "76b2b076-1c4d-4d2d-8d2d-84b008fac851",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521956426,
        "parent_id": "39cac0d7-a6d3-4ca5-8ffd-281d8b340323",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::pair p(2, 4.5);     // std::pair\u003cint, double\u003e\nstd::tuple t(4, 3, 2.5); // std::tuple\u003cint, int, double\u003e\nstd::copy_n(vi1.begin(), 3,\n    std::back_insert_iterator(vi2)); // constructs a back_insert_iterator\u003cstd::vector\u003cint\u003e\u003e\nstd::lock_guard lk(mtx); // std::lock_guard\u003cdecltype(mtx)\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::pair p(2, 4.5);     // std::pair\u003cint, double\u003e\nstd::tuple t(4, 3, 2.5); // std::tuple\u003cint, int, double\u003e\nstd::copy_n(vi1.begin(), 3,\n    std::back_insert_iterator(vi2)); // constructs a back_insert_iterator\u003cstd::vector\u003cint\u003e\u003e\nstd::lock_guard lk(mtx); // std::lock_guard\u003cdecltype(mtx)\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521956427,
        "id": "1e65792b-efbd-461b-a92d-836e3f442c84",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521956427,
        "parent_id": "39cac0d7-a6d3-4ca5-8ffd-281d8b340323",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Constructors are considered to deduce the class template parameters, but in some cases this is insufficient and we can provide explicit deduction guides:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Constructors are considered to deduce the class template parameters, but in some cases this is insufficient and we can provide explicit deduction guides:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521956427,
        "id": "631b5c27-a389-4ed1-a9ac-4c6338bdf651",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521956427,
        "parent_id": "39cac0d7-a6d3-4ca5-8ffd-281d8b340323",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "template \u003cclass Iter\u003e\nvector(Iter, Iter) -\u003e vector\u003ctypename iterator_traits\u003cIter\u003e::value_type\u003e\n\nint array[] = {1, 2, 3};\nstd::vector v(std::begin(array), std::end(array)); // deduces std::vector\u003cint\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "template \u003cclass Iter\u003e\nvector(Iter, Iter) -\u003e vector\u003ctypename iterator_traits\u003cIter\u003e::value_type\u003e\n\nint array[] = {1, 2, 3};\nstd::vector v(std::begin(array), std::end(array)); // deduces std::vector\u003cint\u003e",
        "code_language": "Plain Text"
      }
    ],
    "title": "Template parameter deduction for constructors",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}