{
  "ID": "260314a8-fc13-4e2a-bf4b-4ba43e456698",
  "Root": {
    "alive": true,
    "content": [
      "751d0ad9-8923-4946-be01-65a1e6e65ded",
      "2d144245-6ae0-48e6-b483-cd7c1f765421",
      "f623712f-092e-4928-abd8-deb008b22ae1",
      "883fc51d-a9cc-4be4-87d4-02c9cc6eb3f2",
      "2762593a-4e05-4150-b817-8a110ca160cc"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523093491,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "260314a8-fc13-4e2a-bf4b-4ba43e456698",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551687255297,
    "parent_id": "10c1e1fe-bf0e-4f71-b1f2-173539570a03",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Conversion between pointer and integer"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523093488,
        "id": "751d0ad9-8923-4946-be01-65a1e6e65ded",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523093488,
        "parent_id": "260314a8-fc13-4e2a-bf4b-4ba43e456698",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An object pointer (including "
            ],
            [
              "void*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") or function pointer can be converted to an integer type using "
            ],
            [
              "reinterpret_cast",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This will only compile if the destination type is long enough. The result is implementation-defined and typically yields the numeric address of the byte in memory that the pointer pointers to."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An object pointer (including "
          },
          {
            "Text": "void*",
            "AttrFlags": 2
          },
          {
            "Text": ") or function pointer can be converted to an integer type using "
          },
          {
            "Text": "reinterpret_cast",
            "AttrFlags": 2
          },
          {
            "Text": ". This will only compile if the destination type is long enough. The result is implementation-defined and typically yields the numeric address of the byte in memory that the pointer pointers to."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523093490,
        "id": "2d144245-6ae0-48e6-b483-cd7c1f765421",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523093490,
        "parent_id": "260314a8-fc13-4e2a-bf4b-4ba43e456698",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Typically, "
            ],
            [
              "long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "unsigned long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is long enough to hold any pointer value, but this is not guaranteed by the standard."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Typically, "
          },
          {
            "Text": "long",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "unsigned long",
            "AttrFlags": 2
          },
          {
            "Text": " is long enough to hold any pointer value, but this is not guaranteed by the standard."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523093490,
        "id": "f623712f-092e-4928-abd8-deb008b22ae1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523093490,
        "parent_id": "260314a8-fc13-4e2a-bf4b-4ba43e456698",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the types "
            ],
            [
              "std::intptr_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "std::uintptr_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " exist, they are guaranteed to be long enough to hold a "
            ],
            [
              "void*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (and hence any pointer to object type). However, they are not guaranteed to be long enough to hold a function pointer."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the types "
          },
          {
            "Text": "std::intptr_t",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "std::uintptr_t",
            "AttrFlags": 2
          },
          {
            "Text": " exist, they are guaranteed to be long enough to hold a "
          },
          {
            "Text": "void*",
            "AttrFlags": 2
          },
          {
            "Text": " (and hence any pointer to object type). However, they are not guaranteed to be long enough to hold a function pointer."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523093491,
        "id": "883fc51d-a9cc-4be4-87d4-02c9cc6eb3f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523093491,
        "parent_id": "260314a8-fc13-4e2a-bf4b-4ba43e456698",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Similarly, "
            ],
            [
              "reinterpret_cast",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be used to convert an integer type into a pointer type. Again the result is implementation-defined, but a pointer value is guaranteed to be unchanged by a round trip through an integer type. The standard does not guarantee that the value zero is converted to a null pointer."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Similarly, "
          },
          {
            "Text": "reinterpret_cast",
            "AttrFlags": 2
          },
          {
            "Text": " can be used to convert an integer type into a pointer type. Again the result is implementation-defined, but a pointer value is guaranteed to be unchanged by a round trip through an integer type. The standard does not guarantee that the value zero is converted to a null pointer."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523093491,
        "id": "2762593a-4e05-4150-b817-8a110ca160cc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523093491,
        "parent_id": "260314a8-fc13-4e2a-bf4b-4ba43e456698",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void register_callback(void (*fp)(void*), void* arg); // probably a C API\nvoid my_callback(void* x) {\n    std::cout \u003c\u003c \"the value is: \" \u003c\u003c reinterpret_cast\u003clong\u003e(x); // will probably compile\n}\nlong x;\nstd::cin \u003e\u003e x;\nregister_callback(my_callback,\n                  reinterpret_cast\u003cvoid*\u003e(x)); // hopefully this doesn't lose information..."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void register_callback(void (*fp)(void*), void* arg); // probably a C API\nvoid my_callback(void* x) {\n    std::cout \u003c\u003c \"the value is: \" \u003c\u003c reinterpret_cast\u003clong\u003e(x); // will probably compile\n}\nlong x;\nstd::cin \u003e\u003e x;\nregister_callback(my_callback,\n                  reinterpret_cast\u003cvoid*\u003e(x)); // hopefully this doesn't lose information...",
        "code_language": "Plain Text"
      }
    ],
    "title": "Conversion between pointer and integer",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}