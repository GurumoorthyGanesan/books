{
  "ID": "b1f4c785-8071-4e71-82ea-35681a2d07c4",
  "Root": {
    "alive": true,
    "content": [
      "48a6f53a-8443-4f05-8014-f5dc30d2e30e",
      "354df706-8d93-49ef-b105-37e26446cb34",
      "4311173a-918c-4838-960f-84da8343b6c0",
      "d6d5e097-493d-45dd-8b5a-7bf3adda49d4"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522387456,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "b1f4c785-8071-4e71-82ea-35681a2d07c4",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550709900000,
    "parent_id": "899c3027-a75e-4a44-9144-10a53c6a2c11",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Sorting sequence containers with specifed ordering"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522387453,
        "id": "48a6f53a-8443-4f05-8014-f5dc30d2e30e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522387453,
        "parent_id": "b1f4c785-8071-4e71-82ea-35681a2d07c4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the values in a container have certain operators already overloaded, "
            ],
            [
              "std::sort",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be used with specialized functors to sort in either ascending or descending order:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the values in a container have certain operators already overloaded, "
          },
          {
            "Text": "std::sort",
            "AttrFlags": 2
          },
          {
            "Text": " can be used with specialized functors to sort in either ascending or descending order:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522387456,
        "id": "354df706-8d93-49ef-b105-37e26446cb34",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522387456,
        "parent_id": "b1f4c785-8071-4e71-82ea-35681a2d07c4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003cvector\u003e\n#include \u003calgorithm\u003e\n#include \u003cfunctional\u003e\n\nstd::vector\u003cint\u003e v = {5,1,2,4,3};\n\n//sort in ascending order (1,2,3,4,5)\nstd::sort(v.begin(), v.end(), std::less\u003cint\u003e());\n\n// Or just:\nstd::sort(v.begin(), v.end());\n\n//sort in descending order (5,4,3,2,1)\nstd::sort(v.begin(), v.end(), std::greater\u003cint\u003e());\n\n//Or just:\nstd::sort(v.rbegin(), v.rend());"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003cvector\u003e\n#include \u003calgorithm\u003e\n#include \u003cfunctional\u003e\n\nstd::vector\u003cint\u003e v = {5,1,2,4,3};\n\n//sort in ascending order (1,2,3,4,5)\nstd::sort(v.begin(), v.end(), std::less\u003cint\u003e());\n\n// Or just:\nstd::sort(v.begin(), v.end());\n\n//sort in descending order (5,4,3,2,1)\nstd::sort(v.begin(), v.end(), std::greater\u003cint\u003e());\n\n//Or just:\nstd::sort(v.rbegin(), v.rend());",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522387456,
        "id": "4311173a-918c-4838-960f-84da8343b6c0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522387456,
        "parent_id": "b1f4c785-8071-4e71-82ea-35681a2d07c4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In C++14, we don’t need to provide the template argument for the comparison function objects and instead let the object deduce based on what it gets passed in:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In C++14, we don’t need to provide the template argument for the comparison function objects and instead let the object deduce based on what it gets passed in:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522387456,
        "id": "d6d5e097-493d-45dd-8b5a-7bf3adda49d4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522387456,
        "parent_id": "b1f4c785-8071-4e71-82ea-35681a2d07c4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::sort(v.begin(), v.end(), std::less\u003c\u003e());     // ascending order\nstd::sort(v.begin(), v.end(), std::greater\u003c\u003e());  // descending order"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::sort(v.begin(), v.end(), std::less\u003c\u003e());     // ascending order\nstd::sort(v.begin(), v.end(), std::greater\u003c\u003e());  // descending order",
        "code_language": "Plain Text"
      }
    ],
    "title": "Sorting sequence containers with specifed ordering",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}