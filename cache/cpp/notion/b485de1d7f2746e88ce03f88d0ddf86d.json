{
  "ID": "b485de1d-7f27-46e8-8ce0-3f88d0ddf86d",
  "Root": {
    "alive": true,
    "content": [
      "b93025a9-2e27-4304-9f04-43f4072c6903",
      "87f9a945-b50b-4191-8209-932ceb2709aa"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523494822,
    "id": "b485de1d-7f27-46e8-8ce0-3f88d0ddf86d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551687670806,
    "parent_id": "4a738092-15a0-42a9-8178-c62e1f86c80c",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Factory Pattern"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523494820,
        "id": "b93025a9-2e27-4304-9f04-43f4072c6903",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523494820,
        "parent_id": "b485de1d-7f27-46e8-8ce0-3f88d0ddf86d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Factory pattern decouples object creation and allows creation by name using a common interface:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Factory pattern decouples object creation and allows creation by name using a common interface:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523494822,
        "id": "87f9a945-b50b-4191-8209-932ceb2709aa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523494822,
        "parent_id": "b485de1d-7f27-46e8-8ce0-3f88d0ddf86d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Animal{\npublic:\n    virtual std::shared_ptr\u003cAnimal\u003e clone() const = 0;\n    virtual std::string  getname() const = 0;\n};\n\nclass Bear: public Animal{\npublic:\n    virtual std::shared_ptr\u003cAnimal\u003e clone() const override\n    {\n        return std::make_shared\u003cBear\u003e(*this);\n    }\n    virtual std::string getname() const override\n    {\n        return \"bear\";\n    }\n};\n\n\nclass Cat: public Animal{\npublic:\n    virtual std::shared_ptr\u003cAnimal\u003e clone() const override\n    {\n        return std::make_shared\u003cCat\u003e(*this);\n    }\n    virtual std::string  getname() const override\n    {\n        return \"cat\";\n    }\n};\n\nclass AnimalFactory{\npublic:\n    static std::shared_ptr\u003cAnimal\u003e getAnimal( const std::string\u0026   name )\n    {\n      if ( name == \"bear\" )\n        return std::make_shared\u003cBear\u003e();\n      if ( name == \"cat\" )\n        return std::shared_ptr\u003cCat\u003e();\n     \n    return nullptr;\n    }\n\n\n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Animal{\npublic:\n    virtual std::shared_ptr\u003cAnimal\u003e clone() const = 0;\n    virtual std::string  getname() const = 0;\n};\n\nclass Bear: public Animal{\npublic:\n    virtual std::shared_ptr\u003cAnimal\u003e clone() const override\n    {\n        return std::make_shared\u003cBear\u003e(*this);\n    }\n    virtual std::string getname() const override\n    {\n        return \"bear\";\n    }\n};\n\n\nclass Cat: public Animal{\npublic:\n    virtual std::shared_ptr\u003cAnimal\u003e clone() const override\n    {\n        return std::make_shared\u003cCat\u003e(*this);\n    }\n    virtual std::string  getname() const override\n    {\n        return \"cat\";\n    }\n};\n\nclass AnimalFactory{\npublic:\n    static std::shared_ptr\u003cAnimal\u003e getAnimal( const std::string\u0026   name )\n    {\n      if ( name == \"bear\" )\n        return std::make_shared\u003cBear\u003e();\n      if ( name == \"cat\" )\n        return std::shared_ptr\u003cCat\u003e();\n     \n    return nullptr;\n    }\n\n\n};",
        "code_language": "Plain Text"
      }
    ],
    "title": "Factory Pattern"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}