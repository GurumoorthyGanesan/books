{
  "ID": "56fc197c-300b-4b4c-9f8c-ba9fa1bf0f33",
  "Root": {
    "alive": true,
    "content": [
      "7dc33b75-8a62-4206-b6ed-459d09f69ff8"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522389416,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "56fc197c-300b-4b4c-9f8c-ba9fa1bf0f33",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550709900000,
    "parent_id": "899c3027-a75e-4a44-9144-10a53c6a2c11",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Sorting sequence containers using compare function"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522389416,
        "id": "7dc33b75-8a62-4206-b6ed-459d09f69ff8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522389416,
        "parent_id": "56fc197c-300b-4b4c-9f8c-ba9fa1bf0f33",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Include sequence containers\n#include \u003cvector\u003e\n#include \u003cdeque\u003e\n#include \u003clist\u003e\n\n// Insert sorting algorithm\n#include \u003calgorithm\u003e\n\nclass Base {\n public:\n\n    // Constructor that set variable to the value of v\n    Base(int v): variable(v) {\n    }\n       \n    int variable;\n};\n\nbool compare(const Base \u0026a, const Base \u0026b) {\n    return a.variable \u003c b.variable;\n}\n\nint main() {\n    std::vector \u003cBase\u003e vector;\n    std::deque \u003cBase\u003e deque;\n    std::list \u003cBase\u003e list;\n    \n    // Create 2 elements to sort\n    Base a(10);\n    Base b(5);\n    \n    // Insert them into backs of containers\n    vector.push_back(a);\n    vector.push_back(b);\n    \n    deque.push_back(a);\n    deque.push_back(b);\n    \n    list.push_back(a);\n    list.push_back(b);\n    \n    // Now sort data using comparing function\n    std::sort(vector.begin(), vector.end(), compare);\n    std::sort(deque.begin(), deque.end(), compare);\n    list.sort(compare);\n\n    return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Include sequence containers\n#include \u003cvector\u003e\n#include \u003cdeque\u003e\n#include \u003clist\u003e\n\n// Insert sorting algorithm\n#include \u003calgorithm\u003e\n\nclass Base {\n public:\n\n    // Constructor that set variable to the value of v\n    Base(int v): variable(v) {\n    }\n       \n    int variable;\n};\n\nbool compare(const Base \u0026a, const Base \u0026b) {\n    return a.variable \u003c b.variable;\n}\n\nint main() {\n    std::vector \u003cBase\u003e vector;\n    std::deque \u003cBase\u003e deque;\n    std::list \u003cBase\u003e list;\n    \n    // Create 2 elements to sort\n    Base a(10);\n    Base b(5);\n    \n    // Insert them into backs of containers\n    vector.push_back(a);\n    vector.push_back(b);\n    \n    deque.push_back(a);\n    deque.push_back(b);\n    \n    list.push_back(a);\n    list.push_back(b);\n    \n    // Now sort data using comparing function\n    std::sort(vector.begin(), vector.end(), compare);\n    std::sort(deque.begin(), deque.end(), compare);\n    list.sort(compare);\n\n    return 0;\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Sorting sequence containers using compare function",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}