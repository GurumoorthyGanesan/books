{
  "ID": "9c241338-cf55-4949-8b59-08ac9dc16c3d",
  "Root": {
    "alive": true,
    "content": [
      "5875ef2d-5804-4657-b714-106b2676d1f3",
      "0f8f9aed-86cf-4212-96ea-afa9c1a1a129",
      "d82d5b51-9952-45e6-9d77-c13960083631",
      "8e174791-4bc0-49e0-acad-78cec12635be",
      "a0d76157-8581-46ef-8e25-9f31362ab777"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523447653,
    "id": "9c241338-cf55-4949-8b59-08ac9dc16c3d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550523447653,
    "parent_id": "02d273f3-3937-4a5b-86af-fbaa7082fc98",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Static if statement"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523447650,
        "id": "5875ef2d-5804-4657-b714-106b2676d1f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523447650,
        "parent_id": "9c241338-cf55-4949-8b59-08ac9dc16c3d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "if constexpr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement can be used to conditionally compile code. The condition must be a constant expression. The branch not selected is "
            ],
            [
              "discarded.",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " A discarded statement inside a template is not instantiated. For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "if constexpr",
            "AttrFlags": 2
          },
          {
            "Text": " statement can be used to conditionally compile code. The condition must be a constant expression. The branch not selected is "
          },
          {
            "Text": "discarded.",
            "AttrFlags": 4
          },
          {
            "Text": " A discarded statement inside a template is not instantiated. For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523447652,
        "id": "0f8f9aed-86cf-4212-96ea-afa9c1a1a129",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523447652,
        "parent_id": "9c241338-cf55-4949-8b59-08ac9dc16c3d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "template\u003cclass T, class ... Rest\u003e\nvoid g(T \u0026\u0026p, Rest \u0026\u0026...rs)\n{\n  // ... handle p\n  if constexpr (sizeof...(rs) \u003e 0)\n    g(rs...);  // never instantiated with an empty argument list\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "template\u003cclass T, class ... Rest\u003e\nvoid g(T \u0026\u0026p, Rest \u0026\u0026...rs)\n{\n  // ... handle p\n  if constexpr (sizeof...(rs) \u003e 0)\n    g(rs...);  // never instantiated with an empty argument list\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523447653,
        "id": "d82d5b51-9952-45e6-9d77-c13960083631",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523447653,
        "parent_id": "9c241338-cf55-4949-8b59-08ac9dc16c3d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In addition, variables and functions that are odr-used only inside discarded statements are not required to be defined, and discarded "
            ],
            [
              "return",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statements are not used for function return type deduction."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In addition, variables and functions that are odr-used only inside discarded statements are not required to be defined, and discarded "
          },
          {
            "Text": "return",
            "AttrFlags": 2
          },
          {
            "Text": " statements are not used for function return type deduction."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523447653,
        "id": "8e174791-4bc0-49e0-acad-78cec12635be",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523447653,
        "parent_id": "9c241338-cf55-4949-8b59-08ac9dc16c3d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "if constexpr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is distinct from "
            ],
            [
              "#ifdef",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "#ifdef",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " conditionally compiles code, but only based on conditions that can be evaluated at preprocessing time. For example, "
            ],
            [
              "#ifdef",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " could not be used to conditionally compile code depending on the value of a template parameter. On the other hand, "
            ],
            [
              "if constexpr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " cannot be used to discard syntactically invalid code, while "
            ],
            [
              "#ifdef",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "if constexpr",
            "AttrFlags": 2
          },
          {
            "Text": " is distinct from "
          },
          {
            "Text": "#ifdef",
            "AttrFlags": 2
          },
          {
            "Text": ". "
          },
          {
            "Text": "#ifdef",
            "AttrFlags": 2
          },
          {
            "Text": " conditionally compiles code, but only based on conditions that can be evaluated at preprocessing time. For example, "
          },
          {
            "Text": "#ifdef",
            "AttrFlags": 2
          },
          {
            "Text": " could not be used to conditionally compile code depending on the value of a template parameter. On the other hand, "
          },
          {
            "Text": "if constexpr",
            "AttrFlags": 2
          },
          {
            "Text": " cannot be used to discard syntactically invalid code, while "
          },
          {
            "Text": "#ifdef",
            "AttrFlags": 2
          },
          {
            "Text": " can."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523447653,
        "id": "a0d76157-8581-46ef-8e25-9f31362ab777",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523447653,
        "parent_id": "9c241338-cf55-4949-8b59-08ac9dc16c3d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if constexpr(false) {\n    foobar;  // error; foobar has not been declared\n    std::vector\u003cint\u003e v(\"hello, world\");  // error; no matching constructor\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if constexpr(false) {\n    foobar;  // error; foobar has not been declared\n    std::vector\u003cint\u003e v(\"hello, world\");  // error; no matching constructor\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "020 Static if statement"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}