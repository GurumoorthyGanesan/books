{
  "ID": "bacd118e-ab23-4e10-9164-e21d6946331d",
  "Root": {
    "alive": true,
    "content": [
      "88cb01a4-b8d4-4125-b039-471d11c0c2db",
      "305d9370-e3a4-4098-9595-66b8b01faff0",
      "e79be719-4004-49bf-834d-48a38b479b07",
      "910b0618-46eb-4e15-9bf3-0c10b4e84668",
      "adebe2e2-e3b9-4223-9983-8a3ef086c903",
      "840b9666-5561-47f7-bc57-2a87af4b6d1d",
      "74b6d073-0b73-4ed8-93f3-1596c6f18c88",
      "c40fe277-8d2e-4bfd-bb8b-719f650fb8d7",
      "95432b5b-c650-41e3-a4dd-94556ba99fca",
      "56a8159c-3037-4db2-b406-40d29182cd6e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550525105780,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "bacd118e-ab23-4e10-9164-e21d6946331d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551688899208,
    "parent_id": "dadb2eed-6939-4a7d-9afa-46a0514a66be",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Alignment"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525105775,
        "id": "88cb01a4-b8d4-4125-b039-471d11c0c2db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525105775,
        "parent_id": "bacd118e-ab23-4e10-9164-e21d6946331d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525105777,
        "id": "305d9370-e3a4-4098-9595-66b8b01faff0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525105777,
        "parent_id": "bacd118e-ab23-4e10-9164-e21d6946331d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All types in C++ have an alignment. This is a restriction on the memory address that objects of that type can be created within. A memory address is valid for an object’s creation if dividing that address by the object’s alignment is a whole number."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All types in C++ have an alignment. This is a restriction on the memory address that objects of that type can be created within. A memory address is valid for an object’s creation if dividing that address by the object’s alignment is a whole number."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525105778,
        "id": "e79be719-4004-49bf-834d-48a38b479b07",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525105778,
        "parent_id": "bacd118e-ab23-4e10-9164-e21d6946331d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Type alignments are always a power of two (including 1)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Type alignments are always a power of two (including 1)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525105778,
        "id": "910b0618-46eb-4e15-9bf3-0c10b4e84668",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525105778,
        "parent_id": "bacd118e-ab23-4e10-9164-e21d6946331d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525105778,
        "id": "adebe2e2-e3b9-4223-9983-8a3ef086c903",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525105778,
        "parent_id": "bacd118e-ab23-4e10-9164-e21d6946331d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The standard guarantees the following:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The standard guarantees the following:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525105779,
        "id": "840b9666-5561-47f7-bc57-2a87af4b6d1d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525105779,
        "parent_id": "bacd118e-ab23-4e10-9164-e21d6946331d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The alignment requirement of a type is a divisor of its size. For example, a class with size 16 bytes could have an alignment of 1, 2, 4, 8, or 16, but not 32. (If a class’s members only total 14 bytes in size, but the class needs to have an alignment requirement of 8, the compiler will insert 2 padding bytes to make the class’s size equal to 16.)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The alignment requirement of a type is a divisor of its size. For example, a class with size 16 bytes could have an alignment of 1, 2, 4, 8, or 16, but not 32. (If a class’s members only total 14 bytes in size, but the class needs to have an alignment requirement of 8, the compiler will insert 2 padding bytes to make the class’s size equal to 16.)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525105779,
        "id": "74b6d073-0b73-4ed8-93f3-1596c6f18c88",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525105779,
        "parent_id": "bacd118e-ab23-4e10-9164-e21d6946331d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The signed and unsigned versions of an integer type have the same alignment requirement."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The signed and unsigned versions of an integer type have the same alignment requirement."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525105780,
        "id": "c40fe277-8d2e-4bfd-bb8b-719f650fb8d7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525105780,
        "parent_id": "bacd118e-ab23-4e10-9164-e21d6946331d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A pointer to "
            ],
            [
              "void",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has the same alignment requirement as a pointer to "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "A pointer to "
          },
          {
            "Text": "void",
            "AttrFlags": 2
          },
          {
            "Text": " has the same alignment requirement as a pointer to "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525105780,
        "id": "95432b5b-c650-41e3-a4dd-94556ba99fca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525105780,
        "parent_id": "bacd118e-ab23-4e10-9164-e21d6946331d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The cv-qualified and cv-unqualified versions of a type have the same alignment requirement."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The cv-qualified and cv-unqualified versions of a type have the same alignment requirement."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525105780,
        "id": "56a8159c-3037-4db2-b406-40d29182cd6e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525105780,
        "parent_id": "bacd118e-ab23-4e10-9164-e21d6946331d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that while alignment exists in C++03, it was not until C++11 that it became possible to query alignment (using "
            ],
            [
              "alignof",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") and control alignment (using "
            ],
            [
              "alignas",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that while alignment exists in C++03, it was not until C++11 that it became possible to query alignment (using "
          },
          {
            "Text": "alignof",
            "AttrFlags": 2
          },
          {
            "Text": ") and control alignment (using "
          },
          {
            "Text": "alignas",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      }
    ],
    "title": "Alignment",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}