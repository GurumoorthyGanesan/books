{
  "ID": "e85079e7-f628-47a2-a64b-89f98aa625e0",
  "Root": {
    "alive": true,
    "content": [
      "6978fb62-7e36-4f26-b979-7bd93141abe3",
      "c626483e-8ff7-40ab-92ea-8c91779e267d",
      "1ca73f98-7b85-4b04-96f4-e12809e9f465",
      "ee2ba5b3-e5db-437a-b136-992b94cdd90c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550524343637,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e85079e7-f628-47a2-a64b-89f98aa625e0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551688552523,
    "parent_id": "1e648ce1-cc7e-4997-bf6e-9a33d2ac504d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Const Correct Function Parameters"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524343634,
        "id": "6978fb62-7e36-4f26-b979-7bd93141abe3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524343634,
        "parent_id": "e85079e7-f628-47a2-a64b-89f98aa625e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In a "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "-correct function, all passed-by-reference parameters are marked as "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " unless the function directly or indirectly modifies them, preventing the programmer from inadvertently changing something they didn’t mean to change. This allows the function to take both "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and non-cv-qualified instances, and in turn, causes the instance’s "
            ],
            [
              "this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to be of type "
            ],
            [
              "const T*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when a member function is called, where "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the class’ type."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In a "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": "-correct function, all passed-by-reference parameters are marked as "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " unless the function directly or indirectly modifies them, preventing the programmer from inadvertently changing something they didn’t mean to change. This allows the function to take both "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " and non-cv-qualified instances, and in turn, causes the instance’s "
          },
          {
            "Text": "this",
            "AttrFlags": 2
          },
          {
            "Text": " to be of type "
          },
          {
            "Text": "const T*",
            "AttrFlags": 2
          },
          {
            "Text": " when a member function is called, where "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": " is the class’ type."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524343636,
        "id": "c626483e-8ff7-40ab-92ea-8c91779e267d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524343636,
        "parent_id": "e85079e7-f628-47a2-a64b-89f98aa625e0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct Example {\n    void func()       { std::cout \u003c\u003c 3 \u003c\u003c std::endl; }\n    void func() const { std::cout \u003c\u003c 5 \u003c\u003c std::endl; }\n};\n\nvoid const_incorrect_function(Example\u0026 one, Example* two) {\n    one.func();\n    two-\u003efunc();\n}\n\nvoid const_correct_function(const Example\u0026 one, const Example* two) {\n    one.func();\n    two-\u003efunc();\n}\n\nint main() {\n    Example a, b;\n    const_incorrect_function(a, \u0026b);\n    const_correct_function(a, \u0026b);\n}\n\n// Output:\n3\n3\n5\n5"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct Example {\n    void func()       { std::cout \u003c\u003c 3 \u003c\u003c std::endl; }\n    void func() const { std::cout \u003c\u003c 5 \u003c\u003c std::endl; }\n};\n\nvoid const_incorrect_function(Example\u0026 one, Example* two) {\n    one.func();\n    two-\u003efunc();\n}\n\nvoid const_correct_function(const Example\u0026 one, const Example* two) {\n    one.func();\n    two-\u003efunc();\n}\n\nint main() {\n    Example a, b;\n    const_incorrect_function(a, \u0026b);\n    const_correct_function(a, \u0026b);\n}\n\n// Output:\n3\n3\n5\n5",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524343637,
        "id": "1ca73f98-7b85-4b04-96f4-e12809e9f465",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524343637,
        "parent_id": "e85079e7-f628-47a2-a64b-89f98aa625e0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "While the effects of this are less immediately visible than those of "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " correct class design (in that "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "-correct functions and "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "-incorrect classes will cause compilation errors, while "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "-correct classes and "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "-incorrect functions will compile properly), "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " correct functions will catch a lot of errors that "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " incorrect functions would let slip through, such as the one below. [Note, however, that a "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "-incorrect function "
            ],
            [
              "will",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " cause compilation errors if passed a "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instance when it expected a non-"
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " one.]"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "While the effects of this are less immediately visible than those of "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " correct class design (in that "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": "-correct functions and "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": "-incorrect classes will cause compilation errors, while "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": "-correct classes and "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": "-incorrect functions will compile properly), "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " correct functions will catch a lot of errors that "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " incorrect functions would let slip through, such as the one below. [Note, however, that a "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": "-incorrect function "
          },
          {
            "Text": "will",
            "AttrFlags": 4
          },
          {
            "Text": " cause compilation errors if passed a "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " instance when it expected a non-"
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " one.]"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524343637,
        "id": "ee2ba5b3-e5db-437a-b136-992b94cdd90c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524343637,
        "parent_id": "e85079e7-f628-47a2-a64b-89f98aa625e0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Read value from vector, then compute \u0026 return a value.\n// Caches return values for speed.\ntemplate\u003ctypename T\u003e\nconst T\u0026 bad_func(std::vector\u003cT\u003e\u0026 v, Helper\u003cT\u003e\u0026 h) {\n    // Cache values, for future use.\n    // Once a return value has been calculated, it's cached \u0026 its index is registered.\n    static std::vector\u003cT\u003e vals = {};\n\n    int v_ind = h.get_index();               // Current working index for v.\n    int vals_ind = h.get_cache_index(v_ind); // Will be -1 if cache index isn't registered.\n\n    if (vals.size() \u0026\u0026 (vals_ind != -1) \u0026\u0026 (vals_ind \u003c vals.size()) \u0026\u0026 !(h.needs_recalc())) {\n        return vals[h.get_cache_index(v_ind)];\n    }\n\n    T temp = v[v_ind];\n\n    temp -= h.poll_device();\n    temp *= h.obtain_random();\n    temp += h.do_tedious_calculation(temp, v[h.get_last_handled_index()]);\n\n    // We're feeling tired all of a sudden, and this happens.\n    if (vals_ind != -1) {\n        vals[vals_ind] = temp;\n    } else {\n        v.push_back(temp);  // Oops.  Should've been accessing vals.\n        vals_ind = vals.size() - 1;\n        h.register_index(v_ind, vals_ind);\n    }\n\n    return vals[vals_ind];\n}\n\n// Const correct version.  Is identical to above version, so most of it shall be skipped.\ntemplate\u003ctypename T\u003e\nconst T\u0026 good_func(const std::vector\u003cT\u003e\u0026 v, Helper\u003cT\u003e\u0026 h) {\n    // ...\n\n    // We're feeling tired all of a sudden, and this happens.\n    if (vals_ind != -1) {\n        vals[vals_ind] = temp;\n    } else {\n        v.push_back(temp);  // Error: discards qualifiers.\n        vals_ind = vals.size() - 1;\n        h.register_index(v_ind, vals_ind);\n    }\n\n    return vals[vals_ind];\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Read value from vector, then compute \u0026 return a value.\n// Caches return values for speed.\ntemplate\u003ctypename T\u003e\nconst T\u0026 bad_func(std::vector\u003cT\u003e\u0026 v, Helper\u003cT\u003e\u0026 h) {\n    // Cache values, for future use.\n    // Once a return value has been calculated, it's cached \u0026 its index is registered.\n    static std::vector\u003cT\u003e vals = {};\n\n    int v_ind = h.get_index();               // Current working index for v.\n    int vals_ind = h.get_cache_index(v_ind); // Will be -1 if cache index isn't registered.\n\n    if (vals.size() \u0026\u0026 (vals_ind != -1) \u0026\u0026 (vals_ind \u003c vals.size()) \u0026\u0026 !(h.needs_recalc())) {\n        return vals[h.get_cache_index(v_ind)];\n    }\n\n    T temp = v[v_ind];\n\n    temp -= h.poll_device();\n    temp *= h.obtain_random();\n    temp += h.do_tedious_calculation(temp, v[h.get_last_handled_index()]);\n\n    // We're feeling tired all of a sudden, and this happens.\n    if (vals_ind != -1) {\n        vals[vals_ind] = temp;\n    } else {\n        v.push_back(temp);  // Oops.  Should've been accessing vals.\n        vals_ind = vals.size() - 1;\n        h.register_index(v_ind, vals_ind);\n    }\n\n    return vals[vals_ind];\n}\n\n// Const correct version.  Is identical to above version, so most of it shall be skipped.\ntemplate\u003ctypename T\u003e\nconst T\u0026 good_func(const std::vector\u003cT\u003e\u0026 v, Helper\u003cT\u003e\u0026 h) {\n    // ...\n\n    // We're feeling tired all of a sudden, and this happens.\n    if (vals_ind != -1) {\n        vals[vals_ind] = temp;\n    } else {\n        v.push_back(temp);  // Error: discards qualifiers.\n        vals_ind = vals.size() - 1;\n        h.register_index(v_ind, vals_ind);\n    }\n\n    return vals[vals_ind];\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Const Correct Function Parameters",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}