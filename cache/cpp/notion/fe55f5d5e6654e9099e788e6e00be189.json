{
  "ID": "fe55f5d5-e665-4e90-99e7-88e6e00be189",
  "Root": {
    "alive": true,
    "content": [
      "e85aad6d-2219-4008-aa2a-dccf7515c1ea",
      "c90fc450-1906-4c7f-862f-c6cf60837792",
      "e46f60f2-0648-4412-a868-042df0f57d22",
      "15d83098-abfd-48f3-9a9d-5d9f450460e5",
      "bef80684-f9a6-4592-9f3f-bd476ddf233f",
      "9ddc06bb-9a57-4d11-a432-bcc6fc037169",
      "16636468-7fc7-4120-a034-9317c2aeb1db"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550525090909,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "fe55f5d5-e665-4e90-99e7-88e6e00be189",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551688852458,
    "parent_id": "0789dc55-0210-4292-957d-ed83df8e73af",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Inserting values in a set"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525090904,
        "id": "e85aad6d-2219-4008-aa2a-dccf7515c1ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525090904,
        "parent_id": "fe55f5d5-e665-4e90-99e7-88e6e00be189",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Three different methods of insertion can used with sets."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Three different methods of insertion can used with sets."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525090908,
        "id": "c90fc450-1906-4c7f-862f-c6cf60837792",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525090908,
        "parent_id": "fe55f5d5-e665-4e90-99e7-88e6e00be189",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "First, a simple insert of the value. This method returns a pair allowing the caller to check whether the insert really occurred."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "First, a simple insert of the value. This method returns a pair allowing the caller to check whether the insert really occurred."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525090909,
        "id": "e46f60f2-0648-4412-a868-042df0f57d22",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525090909,
        "parent_id": "fe55f5d5-e665-4e90-99e7-88e6e00be189",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Second, an insert by giving a hint of where the value will be inserted. The objective is to optimize the insertion time in such a case, but knowing where a value should be inserted is not the common case. "
            ],
            [
              "Be careful in that case; the way to give a hint differs with compiler versions",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Second, an insert by giving a hint of where the value will be inserted. The objective is to optimize the insertion time in such a case, but knowing where a value should be inserted is not the common case. "
          },
          {
            "Text": "Be careful in that case; the way to give a hint differs with compiler versions",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525090909,
        "id": "15d83098-abfd-48f3-9a9d-5d9f450460e5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525090909,
        "parent_id": "fe55f5d5-e665-4e90-99e7-88e6e00be189",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finally you can insert a range of values by giving a starting and an ending pointer. The starting one will be included in the insertion, the ending one is excluded."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finally you can insert a range of values by giving a starting and an ending pointer. The starting one will be included in the insertion, the ending one is excluded."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525090909,
        "id": "bef80684-f9a6-4592-9f3f-bd476ddf233f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525090909,
        "parent_id": "fe55f5d5-e665-4e90-99e7-88e6e00be189",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003ciostream\u003e\n#include \u003cset\u003e\n\nint main ()\n{\n  std::set\u003cint\u003e sut;\n  std::set\u003cint\u003e::iterator it;\n  std::pair\u003cstd::set\u003cint\u003e::iterator,bool\u003e ret;\n\n  // Basic insert\n  sut.insert(7);\n  sut.insert(5);\n  sut.insert(12);\n  \n  ret = sut.insert(23);\n  if (ret.second==true)\n    std::cout \u003c\u003c \"# 23 has been inserted!\" \u003c\u003c std::endl;\n    \n  ret = sut.insert(23); // since it's a set and 23 is already present in it, this insert should fail\n  if (ret.second==false)\n    std::cout \u003c\u003c \"# 23 already present in set!\" \u003c\u003c std::endl;\n \n  // Insert with hint for optimization\n  it = sut.end();\n  // This case is optimized for C++11 and above\n  // For earlier version, point to the element preceding your insertion\n  sut.insert(it, 30); \n\n  // inserting a range of values\n  std::set\u003cint\u003e sut2;\n  sut2.insert(20);\n  sut2.insert(30);\n  sut2.insert(45);\n  std::set\u003cint\u003e::iterator itStart = sut2.begin();\n  std::set\u003cint\u003e::iterator itEnd = sut2.end();\n  \n  sut.insert (itStart, itEnd); // second iterator is excluded from insertion\n\n  std::cout \u003c\u003c std::endl \u003c\u003c \"Set under test contains:\" \u003c\u003c std::endl;\n  for (it = sut.begin(); it != sut.end(); ++it)\n  {\n    std::cout \u003c\u003c *it \u003c\u003c std::endl;\n  }\n\n  return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003ciostream\u003e\n#include \u003cset\u003e\n\nint main ()\n{\n  std::set\u003cint\u003e sut;\n  std::set\u003cint\u003e::iterator it;\n  std::pair\u003cstd::set\u003cint\u003e::iterator,bool\u003e ret;\n\n  // Basic insert\n  sut.insert(7);\n  sut.insert(5);\n  sut.insert(12);\n  \n  ret = sut.insert(23);\n  if (ret.second==true)\n    std::cout \u003c\u003c \"# 23 has been inserted!\" \u003c\u003c std::endl;\n    \n  ret = sut.insert(23); // since it's a set and 23 is already present in it, this insert should fail\n  if (ret.second==false)\n    std::cout \u003c\u003c \"# 23 already present in set!\" \u003c\u003c std::endl;\n \n  // Insert with hint for optimization\n  it = sut.end();\n  // This case is optimized for C++11 and above\n  // For earlier version, point to the element preceding your insertion\n  sut.insert(it, 30); \n\n  // inserting a range of values\n  std::set\u003cint\u003e sut2;\n  sut2.insert(20);\n  sut2.insert(30);\n  sut2.insert(45);\n  std::set\u003cint\u003e::iterator itStart = sut2.begin();\n  std::set\u003cint\u003e::iterator itEnd = sut2.end();\n  \n  sut.insert (itStart, itEnd); // second iterator is excluded from insertion\n\n  std::cout \u003c\u003c std::endl \u003c\u003c \"Set under test contains:\" \u003c\u003c std::endl;\n  for (it = sut.begin(); it != sut.end(); ++it)\n  {\n    std::cout \u003c\u003c *it \u003c\u003c std::endl;\n  }\n\n  return 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525090909,
        "id": "9ddc06bb-9a57-4d11-a432-bcc6fc037169",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525090909,
        "parent_id": "fe55f5d5-e665-4e90-99e7-88e6e00be189",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output will be:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output will be:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525090909,
        "id": "16636468-7fc7-4120-a034-9317c2aeb1db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525090909,
        "parent_id": "fe55f5d5-e665-4e90-99e7-88e6e00be189",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "# 23 has been inserted!                                                                                                                                                                                                                                                                                                   \n# 23 already present in set!                                                                                                                                                                                                                                                                                              \n                                                                                                                                                                                                                                                                                                                          \nSet under test contains:                                                                                                                                                                                                                                                                                                  \n5                                                                                                                                                                                                                                                                                                                         \n7                                                                                                                                                                                                                                                                                                                         \n12                                                                                                                                                                                                                                                                                                                        \n20                                                                                                                                                                                                                                                                                                                        \n23                                                                                                                                                                                                                                                                                                                        \n30                                                                                                                                                                                                                                                                                                                        \n45"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "# 23 has been inserted!                                                                                                                                                                                                                                                                                                   \n# 23 already present in set!                                                                                                                                                                                                                                                                                              \n                                                                                                                                                                                                                                                                                                                          \nSet under test contains:                                                                                                                                                                                                                                                                                                  \n5                                                                                                                                                                                                                                                                                                                         \n7                                                                                                                                                                                                                                                                                                                         \n12                                                                                                                                                                                                                                                                                                                        \n20                                                                                                                                                                                                                                                                                                                        \n23                                                                                                                                                                                                                                                                                                                        \n30                                                                                                                                                                                                                                                                                                                        \n45",
        "code_language": "Plain Text"
      }
    ],
    "title": "Inserting values in a set",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}