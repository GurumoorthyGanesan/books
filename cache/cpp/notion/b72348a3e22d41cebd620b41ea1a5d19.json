{
  "ID": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
  "Root": {
    "alive": true,
    "content": [
      "33010c73-6029-44c3-af08-c710bee195f3",
      "6d315a2e-4a8f-46a0-9f3d-b87607429cc9",
      "998c83aa-576c-4dda-904b-5a85889312d6",
      "1f150339-53f2-4579-8fca-d794ec49a0d4",
      "f5710322-2d87-4826-97a6-8da78c462295",
      "136ca51b-8ecf-4435-bc5a-843d7eb1752c",
      "332d9789-5967-4d2f-9757-331d1a909482",
      "cca1267d-815a-406d-9d07-5f751f3b71fa",
      "dec90ae0-b635-4001-96bb-5df5436e8c84",
      "fd7109d1-68eb-403c-a1be-9c9f45111c1b",
      "17fdd8fc-a14e-41ac-b0ff-6f31d86f23ea",
      "43d6d4c9-bbf4-4a62-b8da-1df6e396e617",
      "0463cdce-0218-40c6-9edd-a936579ab78c",
      "96c51d07-1c7f-40eb-9247-51a6847b964b",
      "fad19c8b-eedc-4ec6-87b7-fd898f4105ee",
      "fbb2d24b-231c-44a5-bedc-dde89d58b130",
      "c2e32172-163f-4f07-b8fa-ea667c4940a4",
      "93ab0cb5-c8c3-4b62-a619-2cb18037cabb",
      "8c6a5b88-0968-46a8-a4fe-ceb58deda126",
      "7fd2d635-1086-4d5b-804f-932bfda89ba2",
      "a05324e8-2f0e-4293-a485-e8bd9d63a21c",
      "00871b04-03c0-441d-9cbb-047223685e8a",
      "4a284d45-ac95-49fe-a109-54b1b6eb870f",
      "149b2457-f705-4484-8e5a-58463e389f0e",
      "0f120e70-e0e4-4836-aa62-596b23f2d40f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522995460,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551686927663,
    "parent_id": "f2a0f008-68d4-4ef0-b159-b4601056dc66",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Element access"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995456,
        "id": "33010c73-6029-44c3-af08-c710bee195f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995456,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "1. ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "at(pos)",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "1. ",
            "AttrFlags": 1
          },
          {
            "Text": "at(pos)",
            "AttrFlags": 3
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995456,
        "id": "6d315a2e-4a8f-46a0-9f3d-b87607429cc9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995456,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Returns a reference to the element at position "
            ],
            [
              "pos",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with bounds checking. If "
            ],
            [
              "pos",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not within the range of the container, an exception of type "
            ],
            [
              "std::out_of_range",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is thrown."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Returns a reference to the element at position "
          },
          {
            "Text": "pos",
            "AttrFlags": 2
          },
          {
            "Text": " with bounds checking. If "
          },
          {
            "Text": "pos",
            "AttrFlags": 2
          },
          {
            "Text": " is not within the range of the container, an exception of type "
          },
          {
            "Text": "std::out_of_range",
            "AttrFlags": 2
          },
          {
            "Text": " is thrown."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995457,
        "id": "998c83aa-576c-4dda-904b-5a85889312d6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995457,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The complexity is constant O(1)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The complexity is constant O(1)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995457,
        "id": "1f150339-53f2-4579-8fca-d794ec49a0d4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995457,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003carray\u003e\n\nint main()\n{\n    std::array\u003cint, 3\u003e arr;\n\n    // write values\n    arr.at(0) = 2;\n    arr.at(1) = 4;\n    arr.at(2) = 6;\n        \n    // read values\n    int a = arr.at(0); // a is now 2\n    int b = arr.at(1); // b is now 4\n    int c = arr.at(2); // c is now 6\n\n    return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003carray\u003e\n\nint main()\n{\n    std::array\u003cint, 3\u003e arr;\n\n    // write values\n    arr.at(0) = 2;\n    arr.at(1) = 4;\n    arr.at(2) = 6;\n        \n    // read values\n    int a = arr.at(0); // a is now 2\n    int b = arr.at(1); // b is now 4\n    int c = arr.at(2); // c is now 6\n\n    return 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995457,
        "id": "f5710322-2d87-4826-97a6-8da78c462295",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995457,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "2) ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "operator[pos]",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "2) ",
            "AttrFlags": 1
          },
          {
            "Text": "operator[pos]",
            "AttrFlags": 3
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995457,
        "id": "136ca51b-8ecf-4435-bc5a-843d7eb1752c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995457,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Returns a reference to the element at position "
            ],
            [
              "pos",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " without bounds checking. If "
            ],
            [
              "pos",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not within the range of the container, a runtime "
            ],
            [
              "segmentation violation",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " error can occur. This method provides element access equivalent to classic arrays and thereof more efficient than "
            ],
            [
              "at(pos)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Returns a reference to the element at position "
          },
          {
            "Text": "pos",
            "AttrFlags": 2
          },
          {
            "Text": " without bounds checking. If "
          },
          {
            "Text": "pos",
            "AttrFlags": 2
          },
          {
            "Text": " is not within the range of the container, a runtime "
          },
          {
            "Text": "segmentation violation",
            "AttrFlags": 4
          },
          {
            "Text": " error can occur. This method provides element access equivalent to classic arrays and thereof more efficient than "
          },
          {
            "Text": "at(pos)",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995457,
        "id": "332d9789-5967-4d2f-9757-331d1a909482",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995457,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The complexity is constant O(1)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The complexity is constant O(1)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995457,
        "id": "cca1267d-815a-406d-9d07-5f751f3b71fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995457,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003carray\u003e\n\nint main()\n{\n    std::array\u003cint, 3\u003e arr;\n\n    // write values\n    arr[0] = 2;\n    arr[1] = 4;\n    arr[2] = 6;\n        \n    // read values\n    int a = arr[0]; // a is now 2\n    int b = arr[1]; // b is now 4\n    int c = arr[2]; // c is now 6\n\n    return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003carray\u003e\n\nint main()\n{\n    std::array\u003cint, 3\u003e arr;\n\n    // write values\n    arr[0] = 2;\n    arr[1] = 4;\n    arr[2] = 6;\n        \n    // read values\n    int a = arr[0]; // a is now 2\n    int b = arr[1]; // b is now 4\n    int c = arr[2]; // c is now 6\n\n    return 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995457,
        "id": "dec90ae0-b635-4001-96bb-5df5436e8c84",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995457,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "3) ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "std::get\u003cpos\u003e",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "3) ",
            "AttrFlags": 1
          },
          {
            "Text": "std::get\u003cpos\u003e",
            "AttrFlags": 3
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995458,
        "id": "fd7109d1-68eb-403c-a1be-9c9f45111c1b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995458,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This "
            ],
            [
              "non-member",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " function returns a reference to the element at "
            ],
            [
              "compile-time constant",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " position "
            ],
            [
              "pos",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " without bounds checking. If "
            ],
            [
              "pos",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not within the range of the container, a runtime "
            ],
            [
              "segmentation violation",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " error can occur."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This "
          },
          {
            "Text": "non-member",
            "AttrFlags": 1
          },
          {
            "Text": " function returns a reference to the element at "
          },
          {
            "Text": "compile-time constant",
            "AttrFlags": 1
          },
          {
            "Text": " position "
          },
          {
            "Text": "pos",
            "AttrFlags": 2
          },
          {
            "Text": " without bounds checking. If "
          },
          {
            "Text": "pos",
            "AttrFlags": 2
          },
          {
            "Text": " is not within the range of the container, a runtime "
          },
          {
            "Text": "segmentation violation",
            "AttrFlags": 4
          },
          {
            "Text": " error can occur."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995458,
        "id": "17fdd8fc-a14e-41ac-b0ff-6f31d86f23ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995458,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The complexity is constant O(1)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The complexity is constant O(1)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995458,
        "id": "43d6d4c9-bbf4-4a62-b8da-1df6e396e617",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995458,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003carray\u003e\n\nint main()\n{\n    std::array\u003cint, 3\u003e arr;\n\n    // write values\n    std::get\u003c0\u003e(arr) = 2;\n    std::get\u003c1\u003e(arr) = 4;\n    std::get\u003c2\u003e(arr) = 6;\n        \n    // read values\n    int a = std::get\u003c0\u003e(arr); // a is now 2\n    int b = std::get\u003c1\u003e(arr); // b is now 4\n    int c = std::get\u003c2\u003e(arr); // c is now 6\n\n    return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003carray\u003e\n\nint main()\n{\n    std::array\u003cint, 3\u003e arr;\n\n    // write values\n    std::get\u003c0\u003e(arr) = 2;\n    std::get\u003c1\u003e(arr) = 4;\n    std::get\u003c2\u003e(arr) = 6;\n        \n    // read values\n    int a = std::get\u003c0\u003e(arr); // a is now 2\n    int b = std::get\u003c1\u003e(arr); // b is now 4\n    int c = std::get\u003c2\u003e(arr); // c is now 6\n\n    return 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995458,
        "id": "0463cdce-0218-40c6-9edd-a936579ab78c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995458,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "4) ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "front()",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "4) ",
            "AttrFlags": 1
          },
          {
            "Text": "front()",
            "AttrFlags": 3
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995458,
        "id": "96c51d07-1c7f-40eb-9247-51a6847b964b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995458,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Returns a reference to the first element in container. Calling "
            ],
            [
              "front()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " on an empty container is undefined."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Returns a reference to the first element in container. Calling "
          },
          {
            "Text": "front()",
            "AttrFlags": 2
          },
          {
            "Text": " on an empty container is undefined."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995458,
        "id": "fad19c8b-eedc-4ec6-87b7-fd898f4105ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995458,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The complexity is constant O(1)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The complexity is constant O(1)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995459,
        "id": "fbb2d24b-231c-44a5-bedc-dde89d58b130",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995459,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " For a container c, the expression "
            ],
            [
              "c.front()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is equivalent to "
            ],
            [
              "*c.begin()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note:",
            "AttrFlags": 1
          },
          {
            "Text": " For a container c, the expression "
          },
          {
            "Text": "c.front()",
            "AttrFlags": 2
          },
          {
            "Text": " is equivalent to "
          },
          {
            "Text": "*c.begin()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995459,
        "id": "c2e32172-163f-4f07-b8fa-ea667c4940a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995459,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003carray\u003e\n\nint main()\n{\n    std::array\u003cint, 3\u003e arr{ 2, 4, 6 };\n\n    int a = arr.front(); // a is now 2\n\n    return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003carray\u003e\n\nint main()\n{\n    std::array\u003cint, 3\u003e arr{ 2, 4, 6 };\n\n    int a = arr.front(); // a is now 2\n\n    return 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995459,
        "id": "93ab0cb5-c8c3-4b62-a619-2cb18037cabb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995459,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "5) ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "back()",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "5) ",
            "AttrFlags": 1
          },
          {
            "Text": "back()",
            "AttrFlags": 3
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995459,
        "id": "8c6a5b88-0968-46a8-a4fe-ceb58deda126",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995459,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Returns reference to the last element in the container. Calling "
            ],
            [
              "back()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " on an empty container is undefined."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Returns reference to the last element in the container. Calling "
          },
          {
            "Text": "back()",
            "AttrFlags": 2
          },
          {
            "Text": " on an empty container is undefined."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995459,
        "id": "7fd2d635-1086-4d5b-804f-932bfda89ba2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995459,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The complexity is constant O(1)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The complexity is constant O(1)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995459,
        "id": "a05324e8-2f0e-4293-a485-e8bd9d63a21c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995459,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003carray\u003e\n\nint main()\n{\n    std::array\u003cint, 3\u003e arr{ 2, 4, 6 };\n\n    int a = arr.back(); // a is now 6\n\n    return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003carray\u003e\n\nint main()\n{\n    std::array\u003cint, 3\u003e arr{ 2, 4, 6 };\n\n    int a = arr.back(); // a is now 6\n\n    return 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995459,
        "id": "00871b04-03c0-441d-9cbb-047223685e8a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995459,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "6) ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "data()",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "6) ",
            "AttrFlags": 1
          },
          {
            "Text": "data()",
            "AttrFlags": 3
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995459,
        "id": "4a284d45-ac95-49fe-a109-54b1b6eb870f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995459,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Returns pointer to the underlying array serving as element storage. The pointer is such that "
            ],
            [
              "range [data(); data() + size())",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is always a valid range, even if the container is empty ("
            ],
            [
              "data()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not dereferenceable in that case)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Returns pointer to the underlying array serving as element storage. The pointer is such that "
          },
          {
            "Text": "range [data(); data() + size())",
            "AttrFlags": 2
          },
          {
            "Text": " is always a valid range, even if the container is empty ("
          },
          {
            "Text": "data()",
            "AttrFlags": 2
          },
          {
            "Text": " is not dereferenceable in that case)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995460,
        "id": "149b2457-f705-4484-8e5a-58463e389f0e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995460,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The complexity is constant O(1)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The complexity is constant O(1)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522995460,
        "id": "0f120e70-e0e4-4836-aa62-596b23f2d40f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522995460,
        "parent_id": "b72348a3-e22d-41ce-bd62-0b41ea1a5d19",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003ciostream\u003e\n#include \u003ccstring\u003e\n#include \u003carray\u003e\n\nint main ()\n{\n    const char* cstr = \"Test string\";\n    std::array\u003cchar, 12\u003e arr;\n    \n    std::memcpy(arr.data(), cstr, 12); // copy cstr to arr\n    \n    std::cout \u003c\u003c arr.data(); // outputs: Test string\n    \n    return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003ciostream\u003e\n#include \u003ccstring\u003e\n#include \u003carray\u003e\n\nint main ()\n{\n    const char* cstr = \"Test string\";\n    std::array\u003cchar, 12\u003e arr;\n    \n    std::memcpy(arr.data(), cstr, 12); // copy cstr to arr\n    \n    std::cout \u003c\u003c arr.data(); // outputs: Test string\n    \n    return 0;\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Element access",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}