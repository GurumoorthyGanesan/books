{
  "ID": "47da2357-d604-4e99-aefe-54da1dbcf725",
  "Root": {
    "alive": true,
    "content": [
      "808b0850-d75e-4d32-93ed-7dbf8591e589",
      "427d3846-de33-42fa-8bb3-1c16e4e88705",
      "b0600003-fccb-4419-baf1-3c8bea0b37a3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523366523,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "47da2357-d604-4e99-aefe-54da1dbcf725",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551687296919,
    "parent_id": "bd2b6b7e-15fe-4593-9be0-b9cb97312af0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "dynamic cast"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523366521,
        "id": "808b0850-d75e-4d32-93ed-7dbf8591e589",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523366521,
        "parent_id": "47da2357-d604-4e99-aefe-54da1dbcf725",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Use "
            ],
            [
              "dynamic_cast\u003c\u003e()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as a function, which helps you to cast down through an inheritance hierarchy ("
            ],
            [
              "main description",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/5660/casts/20075/dynamic-cast-for-safely-casting-within-a-class-hierarchy#t=201611081029314553455"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Use "
          },
          {
            "Text": "dynamic_cast\u003c\u003e()",
            "AttrFlags": 2
          },
          {
            "Text": " as a function, which helps you to cast down through an inheritance hierarchy ("
          },
          {
            "Text": "main description",
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/5660/casts/20075/dynamic-cast-for-safely-casting-within-a-class-hierarchy#t=201611081029314553455"
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523366522,
        "id": "427d3846-de33-42fa-8bb3-1c16e4e88705",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523366522,
        "parent_id": "47da2357-d604-4e99-aefe-54da1dbcf725",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you must do some non-polymorphic work on some derived classes "
            ],
            [
              "B",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "C",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", but received the base "
            ],
            [
              "class A",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", then write like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you must do some non-polymorphic work on some derived classes "
          },
          {
            "Text": "B",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "C",
            "AttrFlags": 2
          },
          {
            "Text": ", but received the base "
          },
          {
            "Text": "class A",
            "AttrFlags": 2
          },
          {
            "Text": ", then write like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523366522,
        "id": "b0600003-fccb-4419-baf1-3c8bea0b37a3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523366522,
        "parent_id": "47da2357-d604-4e99-aefe-54da1dbcf725",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class A { public: virtual ~A(){} };\n\nclass B: public A\n{ public: void work4B(){} };\n\nclass C: public A\n{ public: void work4C(){} };\n\nvoid non_polymorphic_work(A* ap)\n{\n  if (B* bp =dynamic_cast\u003cB*\u003e(ap))\n    bp-\u003ework4B(); \n  if (C* cp =dynamic_cast\u003cC*\u003e(ap))\n    cp-\u003ework4C(); \n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class A { public: virtual ~A(){} };\n\nclass B: public A\n{ public: void work4B(){} };\n\nclass C: public A\n{ public: void work4C(){} };\n\nvoid non_polymorphic_work(A* ap)\n{\n  if (B* bp =dynamic_cast\u003cB*\u003e(ap))\n    bp-\u003ework4B(); \n  if (C* cp =dynamic_cast\u003cC*\u003e(ap))\n    cp-\u003ework4C(); \n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "dynamic cast",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}