{
  "ID": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
  "Root": {
    "alive": true,
    "content": [
      "457fc513-ef04-490d-a5a1-a95d7bb99ca8",
      "ac96bff4-bebc-4070-a6af-a5c340260991",
      "608a564d-8520-4eac-8ae0-c195a16663a1",
      "b8e0dbfd-6b57-4cce-a64e-ee7524e1c56e",
      "020f926e-9123-4a4b-83ec-be4a13f1e899",
      "48587d19-b14d-4613-ac1b-77f879bc0ce8",
      "c8666a5e-3e51-4093-bb78-07021b9bf569",
      "46f9ca21-c322-4716-a6f8-a4f14fb04d47",
      "a640b0d0-25f0-4993-8063-a3308d7c9f25",
      "c9e51333-af1a-4913-929c-509f53b92c33",
      "447ad048-2482-4eba-82fc-73d808c137b0",
      "5dfdfcd3-fadb-4dbf-99bb-92d7a8e70db5",
      "aa75082a-5059-4052-b7cf-28694dfdd152",
      "bf151a39-78f0-44d6-9b2c-235e3eec703c",
      "ffab149f-4842-445b-993d-2524b61e6baa",
      "9882fdcc-33f0-4e8d-8a26-1b52dc884199",
      "72158614-17c7-4883-ade7-aba30b3a43a8",
      "b02f5bbb-86bb-43ad-8d96-ce2c5e4963be",
      "b517d439-5992-47fb-85a6-88bab5532f5c",
      "a0a48976-baf4-4ba1-90ca-a3f6518b45e0",
      "3f8fb731-38ac-4909-8d04-ede09f063e47",
      "a2679979-02c4-41e2-9e8d-eb14c6351dfa",
      "372da726-d502-4fc1-9cd3-07d55e4f6173",
      "ee4f46f0-ba62-41f7-847d-77501599bd80",
      "379d8dcc-366d-43ec-bca5-4d94b63aaf6d",
      "de9cf994-f839-47a3-9dbe-5c0621576e2f",
      "994d3ba4-c471-4734-882a-6078dc8d7807",
      "01ad182b-28aa-48be-99f8-6bab108bd051",
      "01e6a886-c10b-4c85-ae47-8ebb42db5951",
      "dd620b58-e676-4731-aa31-fb637a499eac",
      "da9de521-9155-4385-bfbc-9f178c4ca37a",
      "b8b8449d-f964-4c7d-84fe-c0b0acb287bc",
      "4e6f305a-fd04-4a6b-b9d8-30b601b85066",
      "3236db24-8e06-487c-9e9a-2d8d9f2f9e4b",
      "aa5fd487-5a56-461b-8a5e-fd343beaf66a",
      "bfdfe520-264f-499f-ada0-e54fd46fd01e",
      "c61b9ef4-fc12-41d7-a84a-db1ccf83c38f",
      "dc8c1c7d-9300-4384-b5a9-cbc07f6f3552",
      "6356e718-3ca1-4dec-aef9-19023ac35217",
      "2ae74079-f1e7-4068-b43b-575327a39910",
      "b36e404e-ea9e-4a12-be17-8f07b8cee677",
      "4ed88ae2-2bea-4e1d-b98d-5556be7ef261",
      "712f8649-a24e-40e4-b60f-e40844b750d3",
      "6f4b8f3c-34f8-4d97-b8a1-02722b92ff81",
      "35a1a5ad-4b59-4e55-ad60-7fd0c44a4b00",
      "e85a5333-1c4e-4ad5-9e9f-172388246738",
      "0a638695-f49c-4d0f-a071-f6929221369e",
      "7ff7c935-8b65-4008-beeb-e3a2f226e5bf",
      "e2c589bb-5a53-402c-9217-6816579c2255",
      "c9661d6c-1d6e-428a-b57f-abe82df601eb",
      "4a339140-7e92-4c14-8d0d-80fba073091d",
      "8b4ffa5b-9d74-4450-9a81-ad809ccdf966",
      "26634af8-0aff-43c7-80c5-92a5fa8611c6",
      "1b4ed21f-1a35-4ead-b3dd-b1a3d72c4914",
      "b4ea64c8-5a77-4d40-80af-9a50fb162e39",
      "10546a3f-9e11-41e3-9526-7534c0901e05",
      "376b88fb-8722-4692-a9ab-7498df3f5aac",
      "8fda41fc-782b-4c32-8bc6-354de359f94e",
      "e5c5b7c5-99a2-4953-a3d0-0b240a7e642c",
      "be5a2f00-51d5-44b0-a378-c353cf785a9f",
      "5e68a602-f6f8-4ef5-9e66-20ca19567ab1",
      "dadddf03-d4f4-4c47-a718-46027a0180f4",
      "4f31a245-ef35-4085-a06d-5b82483ac3d1",
      "ad975768-52cb-498b-85f3-b74cb7e2b1e7",
      "ab417367-cd28-4ab8-9bb7-224015fa00e0",
      "f2641429-1599-4933-b09a-be3da2022dcf"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550525495665,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550781360000,
    "parent_id": "ecf8cc46-eac4-4c36-a422-ed2cca054451",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Stream manipulators"
        ]
      ]
    },
    "type": "page",
    "version": 64,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495639,
        "id": "457fc513-ef04-490d-a5a1-a95d7bb99ca8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495639,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::boolalpha",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/booalpha"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "std::noboolalpha",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/booalpha"
                ]
              ]
            ],
            [
              " - switch between textual and numeric representation of booleans."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::boolalpha",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/booalpha"
          },
          {
            "Text": " and "
          },
          {
            "Text": "std::noboolalpha",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/booalpha"
          },
          {
            "Text": " - switch between textual and numeric representation of booleans."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495639,
        "id": "ac96bff4-bebc-4070-a6af-a5c340260991",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550780880000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "std::cout \u003c\u003c std::boolalpha \u003c\u003c 1;\n// Output: true\n\nstd::cout \u003c\u003c std::noboolalpha \u003c\u003c false;\n// Output: 0\n\nbool boolValue;\nstd::cin \u003e\u003e std::boolalpha \u003e\u003e boolValue;\nstd::cout \u003c\u003c \"Value \\\"\" \u003c\u003c std::boolalpha \u003c\u003c boolValue\n          \u003c\u003c \"\\\" was parsed as \" \u003c\u003c std::noboolalpha \u003c\u003c boolValue;\n// Input: true\n// Output: Value \"true\" was parsed as 0"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "std::cout \u003c\u003c std::boolalpha \u003c\u003c 1;\n// Output: true\n\nstd::cout \u003c\u003c std::noboolalpha \u003c\u003c false;\n// Output: 0\n\nbool boolValue;\nstd::cin \u003e\u003e std::boolalpha \u003e\u003e boolValue;\nstd::cout \u003c\u003c \"Value \\\"\" \u003c\u003c std::boolalpha \u003c\u003c boolValue\n          \u003c\u003c \"\\\" was parsed as \" \u003c\u003c std::noboolalpha \u003c\u003c boolValue;\n// Input: true\n// Output: Value \"true\" was parsed as 0",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495640,
        "id": "608a564d-8520-4eac-8ae0-c195a16663a1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495640,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::showbase",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/showbase"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "std::noshowbase",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/showbase"
                ]
              ]
            ],
            [
              " - control whether prefix indicating numeric base is used."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::showbase",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/showbase"
          },
          {
            "Text": " and "
          },
          {
            "Text": "std::noshowbase",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/showbase"
          },
          {
            "Text": " - control whether prefix indicating numeric base is used."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495641,
        "id": "b8e0dbfd-6b57-4cce-a64e-ee7524e1c56e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495641,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::dec",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/hex"
                ]
              ]
            ],
            [
              " (decimal), "
            ],
            [
              "std::hex",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/hex"
                ]
              ]
            ],
            [
              " (hexadecimal) and "
            ],
            [
              "std::oct",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/hex"
                ]
              ]
            ],
            [
              " (octal) - are used for changing base for integers."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::dec",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/hex"
          },
          {
            "Text": " (decimal), "
          },
          {
            "Text": "std::hex",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/hex"
          },
          {
            "Text": " (hexadecimal) and "
          },
          {
            "Text": "std::oct",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/hex"
          },
          {
            "Text": " (octal) - are used for changing base for integers."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495641,
        "id": "020f926e-9123-4a4b-83ec-be4a13f1e899",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550780940000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "#include \u003csstream\u003e\n\nstd::cout \u003c\u003c std::dec \u003c\u003c 29 \u003c\u003c ' - '\n          \u003c\u003c std::hex \u003c\u003c 29 \u003c\u003c ' - '\n          \u003c\u003c std::showbase \u003c\u003c std::oct \u003c\u003c 29 \u003c\u003c ' - '\n          \u003c\u003c std::noshowbase \u003c\u003c 29  '\\n';\nint number;\nstd::istringstream(\"3B\") \u003e\u003e std::hex \u003e\u003e number;\nstd::cout \u003c\u003c std::dec \u003c\u003c 10;\n// Output: 22 - 1D - 35 - 035\n// 59"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "#include \u003csstream\u003e\n\nstd::cout \u003c\u003c std::dec \u003c\u003c 29 \u003c\u003c ' - '\n          \u003c\u003c std::hex \u003c\u003c 29 \u003c\u003c ' - '\n          \u003c\u003c std::showbase \u003c\u003c std::oct \u003c\u003c 29 \u003c\u003c ' - '\n          \u003c\u003c std::noshowbase \u003c\u003c 29  '\\n';\nint number;\nstd::istringstream(\"3B\") \u003e\u003e std::hex \u003e\u003e number;\nstd::cout \u003c\u003c std::dec \u003c\u003c 10;\n// Output: 22 - 1D - 35 - 035\n// 59",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495642,
        "id": "48587d19-b14d-4613-ac1b-77f879bc0ce8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495642,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Default values are "
            ],
            [
              "std::ios_base::noshowbase",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "std::ios_base::dec",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Default values are "
          },
          {
            "Text": "std::ios_base::noshowbase",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
          },
          {
            "Text": " and "
          },
          {
            "Text": "std::ios_base::dec",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495643,
        "id": "c8666a5e-3e51-4093-bb78-07021b9bf569",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495643,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you want to see more about "
            ],
            [
              "std::istringstream",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " check out the \u003c"
            ],
            [
              "sstream",
              [
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/header/sstream"
                ]
              ]
            ],
            [
              "\u003e header."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you want to see more about "
          },
          {
            "Text": "std::istringstream",
            "AttrFlags": 2
          },
          {
            "Text": " check out the \u003c"
          },
          {
            "Text": "sstream",
            "Link": "http://en.cppreference.com/w/cpp/header/sstream"
          },
          {
            "Text": "\u003e header."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495644,
        "id": "46f9ca21-c322-4716-a6f8-a4f14fb04d47",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495644,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::uppercase",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/uppercase"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "std::nouppercase",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/uppercase"
                ]
              ]
            ],
            [
              " - control whether uppercase characters are used in floating-point and hexadecimal integer output. Have no effect on input streams."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::uppercase",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/uppercase"
          },
          {
            "Text": " and "
          },
          {
            "Text": "std::nouppercase",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/uppercase"
          },
          {
            "Text": " - control whether uppercase characters are used in floating-point and hexadecimal integer output. Have no effect on input streams."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495644,
        "id": "a640b0d0-25f0-4993-8063-a3308d7c9f25",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550780940000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "std::cout \u003c\u003c std::hex \u003c\u003c std::showbase\n              \u003c\u003c \"0x2a with nouppercase: \" \u003c\u003c std::nouppercase \u003c\u003c 0x2a \u003c\u003c '\\n'\n              \u003c\u003c \"1e-10 with uppercase: \" \u003c\u003c std::uppercase \u003c\u003c 1e-10 \u003c\u003c '\\n'\n}\n// Output: 0x2a with nouppercase: 0x2a\n// 1e-10 with uppercase: 1E-10"
            ]
          ]
        },
        "type": "code",
        "version": 5,
        "code": "std::cout \u003c\u003c std::hex \u003c\u003c std::showbase\n              \u003c\u003c \"0x2a with nouppercase: \" \u003c\u003c std::nouppercase \u003c\u003c 0x2a \u003c\u003c '\\n'\n              \u003c\u003c \"1e-10 with uppercase: \" \u003c\u003c std::uppercase \u003c\u003c 1e-10 \u003c\u003c '\\n'\n}\n// Output: 0x2a with nouppercase: 0x2a\n// 1e-10 with uppercase: 1E-10",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495644,
        "id": "c9e51333-af1a-4913-929c-509f53b92c33",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495644,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Default is "
            ],
            [
              "std::nouppercase",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Default is "
          },
          {
            "Text": "std::nouppercase",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495645,
        "id": "447ad048-2482-4eba-82fc-73d808c137b0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495645,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::setw(n)",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/setw"
                ]
              ]
            ],
            [
              " - changes the width of the next input/output field to exactly "
            ],
            [
              "n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::setw(n)",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/setw"
          },
          {
            "Text": " - changes the width of the next input/output field to exactly "
          },
          {
            "Text": "n",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495646,
        "id": "5dfdfcd3-fadb-4dbf-99bb-92d7a8e70db5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495646,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The width property "
            ],
            [
              "n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is resetting to "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when some functions are called (full list is "
            ],
            [
              "here",
              [
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/setw"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The width property "
          },
          {
            "Text": "n",
            "AttrFlags": 2
          },
          {
            "Text": " is resetting to "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": " when some functions are called (full list is "
          },
          {
            "Text": "here",
            "Link": "http://en.cppreference.com/w/cpp/io/manip/setw"
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495646,
        "id": "aa75082a-5059-4052-b7cf-28694dfdd152",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781000000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "std::cout \u003c\u003c \"no setw:\" \u003c\u003c 51 \u003c\u003c '\\n'\n          \u003c\u003c \"setw(7): \" \u003c\u003c std::setw(7) \u003c\u003c 51 \u003c\u003c '\\n'\n          \u003c\u003c \"setw(7), more output: \" \u003c\u003c 13\n          \u003c\u003c std::setw(7) \u003c\u003c std::setfill('*') \u003c\u003c 67 \u003c\u003c ' ' \u003c\u003c 94 \u003c\u003c '\\n';\n\nchar* input = \"Hello, world!\";\nchar arr[10];\nstd::cin \u003e\u003e std::setw(6) \u003e\u003e arr;\nstd::cout \u003c\u003c \"Input from \\\"Hello, world!\\\" with setw(6) gave \\\"\" \u003c\u003c arr \u003c\u003c \"\\\"\\n\";\n\n// Output: 51\n// setw(7):      51\n// setw(7), more output: 13*****67 94\n\n// Input: Hello, world!\n// Output: Input from \"Hello, world!\" with setw(6) gave \"Hello\""
            ]
          ]
        },
        "type": "code",
        "version": 5,
        "code": "std::cout \u003c\u003c \"no setw:\" \u003c\u003c 51 \u003c\u003c '\\n'\n          \u003c\u003c \"setw(7): \" \u003c\u003c std::setw(7) \u003c\u003c 51 \u003c\u003c '\\n'\n          \u003c\u003c \"setw(7), more output: \" \u003c\u003c 13\n          \u003c\u003c std::setw(7) \u003c\u003c std::setfill('*') \u003c\u003c 67 \u003c\u003c ' ' \u003c\u003c 94 \u003c\u003c '\\n';\n\nchar* input = \"Hello, world!\";\nchar arr[10];\nstd::cin \u003e\u003e std::setw(6) \u003e\u003e arr;\nstd::cout \u003c\u003c \"Input from \\\"Hello, world!\\\" with setw(6) gave \\\"\" \u003c\u003c arr \u003c\u003c \"\\\"\\n\";\n\n// Output: 51\n// setw(7):      51\n// setw(7), more output: 13*****67 94\n\n// Input: Hello, world!\n// Output: Input from \"Hello, world!\" with setw(6) gave \"Hello\"",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495646,
        "id": "bf151a39-78f0-44d6-9b2c-235e3eec703c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495646,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Default is "
            ],
            [
              "std::setw(0)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Default is "
          },
          {
            "Text": "std::setw(0)",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495650,
        "id": "ffab149f-4842-445b-993d-2524b61e6baa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495650,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::left",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/left"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "std::right",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/left"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "std::internal",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/left"
                ]
              ]
            ],
            [
              " - modify the default position of the fill characters by setting "
            ],
            [
              "std::ios_base::adjustfield",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "std::ios_base::left",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "std::ios_base::right",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "std::ios_base::internal",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
                ]
              ]
            ],
            [
              " correspondingly. "
            ],
            [
              "std::left",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "std::right",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " apply to any output, "
            ],
            [
              "std::internal",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " - for integer, floating-point and monetary output. Have no effect on input streams."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::left",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/left"
          },
          {
            "Text": ", "
          },
          {
            "Text": "std::right",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/left"
          },
          {
            "Text": " and "
          },
          {
            "Text": "std::internal",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/left"
          },
          {
            "Text": " - modify the default position of the fill characters by setting "
          },
          {
            "Text": "std::ios_base::adjustfield",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
          },
          {
            "Text": " to "
          },
          {
            "Text": "std::ios_base::left",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
          },
          {
            "Text": ", "
          },
          {
            "Text": "std::ios_base::right",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
          },
          {
            "Text": " and "
          },
          {
            "Text": "std::ios_base::internal",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
          },
          {
            "Text": " correspondingly. "
          },
          {
            "Text": "std::left",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "std::right",
            "AttrFlags": 2
          },
          {
            "Text": " apply to any output, "
          },
          {
            "Text": "std::internal",
            "AttrFlags": 2
          },
          {
            "Text": " - for integer, floating-point and monetary output. Have no effect on input streams."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495650,
        "id": "9882fdcc-33f0-4e8d-8a26-1b52dc884199",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781000000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "#include \u003clocale\u003e\n...\n\nstd::cout.imbue(std::locale(\"en_US.utf8\"));\n\nstd::cout \u003c\u003c std::left \u003c\u003c std::showbase \u003c\u003c std::setfill('*')\n          \u003c\u003c \"flt: \" \u003c\u003c std::setw(15) \u003c\u003c -9.87  \u003c\u003c '\\n'\n          \u003c\u003c \"hex: \" \u003c\u003c std::setw(15) \u003c\u003c 41 \u003c\u003c '\\n'\n          \u003c\u003c \"  $: \" \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, false) \u003c\u003c '\\n'\n          \u003c\u003c \"usd: \" \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, true) \u003c\u003c '\\n'\n          \u003c\u003c \"usd: \" \u003c\u003c std::setw(15)\n          \u003c\u003c std::setfill(' ') \u003c\u003c std::put_money(367, false) \u003c\u003c '\\n';\n// Output:\n// flt: -9.87**********\n// hex: 41*************\n//   $: $3.67**********\n// usd: USD *3.67******\n// usd: $3.67          \n\nstd::cout \u003c\u003c std::internal \u003c\u003c std::showbase \u003c\u003c std::setfill('*')\n          \u003c\u003c \"flt: \" \u003c\u003c std::setw(15) \u003c\u003c -9.87  \u003c\u003c '\\n'\n          \u003c\u003c \"hex: \" \u003c\u003c std::setw(15) \u003c\u003c 41 \u003c\u003c '\\n'\n          \u003c\u003c \"  $: \" \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, false) \u003c\u003c '\\n'\n          \u003c\u003c \"usd: \" \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, true) \u003c\u003c '\\n'\n          \u003c\u003c \"usd: \" \u003c\u003c std::setw(15)\n          \u003c\u003c std::setfill(' ') \u003c\u003c std::put_money(367, true) \u003c\u003c '\\n';\n// Output:\n// flt: -**********9.87\n// hex: *************41\n//   $: $3.67**********\n// usd: USD *******3.67\n// usd: USD        3.67\n\nstd::cout \u003c\u003c std::right \u003c\u003c std::showbase \u003c\u003c std::setfill('*')\n          \u003c\u003c \"flt: \" \u003c\u003c std::setw(15) \u003c\u003c -9.87  \u003c\u003c '\\n'\n          \u003c\u003c \"hex: \" \u003c\u003c std::setw(15) \u003c\u003c 41 \u003c\u003c '\\n'\n          \u003c\u003c \"  $: \" \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, false) \u003c\u003c '\\n'\n          \u003c\u003c \"usd: \" \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, true) \u003c\u003c '\\n'\n          \u003c\u003c \"usd: \" \u003c\u003c std::setw(15)\n          \u003c\u003c std::setfill(' ') \u003c\u003c std::put_money(367, true) \u003c\u003c '\\n';\n// Output:\n// flt: **********-9.87\n// hex: *************41\n//   $: **********$3.67\n// usd: ******USD *3.67\n// usd:       USD  3.67"
            ]
          ]
        },
        "type": "code",
        "version": 5,
        "code": "#include \u003clocale\u003e\n...\n\nstd::cout.imbue(std::locale(\"en_US.utf8\"));\n\nstd::cout \u003c\u003c std::left \u003c\u003c std::showbase \u003c\u003c std::setfill('*')\n          \u003c\u003c \"flt: \" \u003c\u003c std::setw(15) \u003c\u003c -9.87  \u003c\u003c '\\n'\n          \u003c\u003c \"hex: \" \u003c\u003c std::setw(15) \u003c\u003c 41 \u003c\u003c '\\n'\n          \u003c\u003c \"  $: \" \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, false) \u003c\u003c '\\n'\n          \u003c\u003c \"usd: \" \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, true) \u003c\u003c '\\n'\n          \u003c\u003c \"usd: \" \u003c\u003c std::setw(15)\n          \u003c\u003c std::setfill(' ') \u003c\u003c std::put_money(367, false) \u003c\u003c '\\n';\n// Output:\n// flt: -9.87**********\n// hex: 41*************\n//   $: $3.67**********\n// usd: USD *3.67******\n// usd: $3.67          \n\nstd::cout \u003c\u003c std::internal \u003c\u003c std::showbase \u003c\u003c std::setfill('*')\n          \u003c\u003c \"flt: \" \u003c\u003c std::setw(15) \u003c\u003c -9.87  \u003c\u003c '\\n'\n          \u003c\u003c \"hex: \" \u003c\u003c std::setw(15) \u003c\u003c 41 \u003c\u003c '\\n'\n          \u003c\u003c \"  $: \" \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, false) \u003c\u003c '\\n'\n          \u003c\u003c \"usd: \" \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, true) \u003c\u003c '\\n'\n          \u003c\u003c \"usd: \" \u003c\u003c std::setw(15)\n          \u003c\u003c std::setfill(' ') \u003c\u003c std::put_money(367, true) \u003c\u003c '\\n';\n// Output:\n// flt: -**********9.87\n// hex: *************41\n//   $: $3.67**********\n// usd: USD *******3.67\n// usd: USD        3.67\n\nstd::cout \u003c\u003c std::right \u003c\u003c std::showbase \u003c\u003c std::setfill('*')\n          \u003c\u003c \"flt: \" \u003c\u003c std::setw(15) \u003c\u003c -9.87  \u003c\u003c '\\n'\n          \u003c\u003c \"hex: \" \u003c\u003c std::setw(15) \u003c\u003c 41 \u003c\u003c '\\n'\n          \u003c\u003c \"  $: \" \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, false) \u003c\u003c '\\n'\n          \u003c\u003c \"usd: \" \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, true) \u003c\u003c '\\n'\n          \u003c\u003c \"usd: \" \u003c\u003c std::setw(15)\n          \u003c\u003c std::setfill(' ') \u003c\u003c std::put_money(367, true) \u003c\u003c '\\n';\n// Output:\n// flt: **********-9.87\n// hex: *************41\n//   $: **********$3.67\n// usd: ******USD *3.67\n// usd:       USD  3.67",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495650,
        "id": "72158614-17c7-4883-ade7-aba30b3a43a8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495650,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "\u003c\u003c “flt: “ \u003c\u003c std::setw(15) \u003c\u003c -9.87 \u003c\u003c ‘\\n’ \u003c\u003c “hex: “ \u003c\u003c std::setw(15) \u003c\u003c 41 \u003c\u003c ‘\\n’ \u003c\u003c “ $: “ \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, false) \u003c\u003c ‘\\n’ \u003c\u003c “usd: “ \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, true) \u003c\u003c ‘\\n’ \u003c\u003c “usd: “ \u003c\u003c std::setw(15) \u003c\u003c std::setfill(’ ’) \u003c\u003c std::put_money(367, false) \u003c\u003c ‘\\n’;"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "\u003c\u003c “flt: “ \u003c\u003c std::setw(15) \u003c\u003c -9.87 \u003c\u003c ‘\\n’ \u003c\u003c “hex: “ \u003c\u003c std::setw(15) \u003c\u003c 41 \u003c\u003c ‘\\n’ \u003c\u003c “ $: “ \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, false) \u003c\u003c ‘\\n’ \u003c\u003c “usd: “ \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, true) \u003c\u003c ‘\\n’ \u003c\u003c “usd: “ \u003c\u003c std::setw(15) \u003c\u003c std::setfill(’ ’) \u003c\u003c std::put_money(367, false) \u003c\u003c ‘\\n’;"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495651,
        "id": "b02f5bbb-86bb-43ad-8d96-ce2c5e4963be",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495651,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "\u003c\u003c “flt: “ \u003c\u003c std::setw(15) \u003c\u003c -9.87 \u003c\u003c ‘\\n’ \u003c\u003c “hex: “ \u003c\u003c std::setw(15) \u003c\u003c 41 \u003c\u003c ‘\\n’ \u003c\u003c “ $: “ \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, false) \u003c\u003c ‘\\n’ \u003c\u003c “usd: “ \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, true) \u003c\u003c ‘\\n’ \u003c\u003c “usd: “ \u003c\u003c std::setw(15) \u003c\u003c std::setfill(’ ’) \u003c\u003c std::put_money(367, true) \u003c\u003c ‘\\n’;"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "\u003c\u003c “flt: “ \u003c\u003c std::setw(15) \u003c\u003c -9.87 \u003c\u003c ‘\\n’ \u003c\u003c “hex: “ \u003c\u003c std::setw(15) \u003c\u003c 41 \u003c\u003c ‘\\n’ \u003c\u003c “ $: “ \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, false) \u003c\u003c ‘\\n’ \u003c\u003c “usd: “ \u003c\u003c std::setw(15) \u003c\u003c std::put_money(367, true) \u003c\u003c ‘\\n’ \u003c\u003c “usd: “ \u003c\u003c std::setw(15) \u003c\u003c std::setfill(’ ’) \u003c\u003c std::put_money(367, true) \u003c\u003c ‘\\n’;"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495651,
        "id": "b517d439-5992-47fb-85a6-88bab5532f5c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495651,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Default is "
            ],
            [
              "std::left",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Default is "
          },
          {
            "Text": "std::left",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550781000000,
        "id": "a0a48976-baf4-4ba1-90ca-a3f6518b45e0",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781000000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "type": "text",
        "version": 4
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495652,
        "id": "3f8fb731-38ac-4909-8d04-ede09f063e47",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495652,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::fixed",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/fixed"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "std::scientific",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/fixed"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "std::hexfloat",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/fixed"
                ]
              ]
            ],
            [
              " [C++11] and "
            ],
            [
              "std::defaultfloat",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/fixed"
                ]
              ]
            ],
            [
              " [C++11] - change formatting for floating-point input/output."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::fixed",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/fixed"
          },
          {
            "Text": ", "
          },
          {
            "Text": "std::scientific",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/fixed"
          },
          {
            "Text": ", "
          },
          {
            "Text": "std::hexfloat",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/fixed"
          },
          {
            "Text": " [C++11] and "
          },
          {
            "Text": "std::defaultfloat",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/fixed"
          },
          {
            "Text": " [C++11] - change formatting for floating-point input/output."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495654,
        "id": "a2679979-02c4-41e2-9e8d-eb14c6351dfa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495654,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::fixed",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " sets the "
            ],
            [
              "std::ios_base::floatfield",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "std::ios_base::fixed",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
                ]
              ]
            ],
            [
              ","
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::fixed",
            "AttrFlags": 2
          },
          {
            "Text": " sets the "
          },
          {
            "Text": "std::ios_base::floatfield",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
          },
          {
            "Text": " to "
          },
          {
            "Text": "std::ios_base::fixed",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
          },
          {
            "Text": ","
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495654,
        "id": "372da726-d502-4fc1-9cd3-07d55e4f6173",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495654,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::scientific",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " - to "
            ],
            [
              "std::ios_base::scientific",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
                ]
              ]
            ],
            [
              ","
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::scientific",
            "AttrFlags": 2
          },
          {
            "Text": " - to "
          },
          {
            "Text": "std::ios_base::scientific",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
          },
          {
            "Text": ","
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495654,
        "id": "ee4f46f0-ba62-41f7-847d-77501599bd80",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495654,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::hexfloat",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " - to "
            ],
            [
              "std::ios_base::fixed | std::ios_base::scientific",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::hexfloat",
            "AttrFlags": 2
          },
          {
            "Text": " - to "
          },
          {
            "Text": "std::ios_base::fixed | std::ios_base::scientific",
            "AttrFlags": 2
          },
          {
            "Text": " and"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495655,
        "id": "379d8dcc-366d-43ec-bca5-4d94b63aaf6d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495655,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::defaultfloat",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " - to "
            ],
            [
              "std::ios_base::fmtflags(0)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::defaultfloat",
            "AttrFlags": 2
          },
          {
            "Text": " - to "
          },
          {
            "Text": "std::ios_base::fmtflags(0)",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495655,
        "id": "de9cf994-f839-47a3-9dbe-5c0621576e2f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495655,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "fmtflags",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "fmtflags",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495655,
        "id": "994d3ba4-c471-4734-882a-6078dc8d7807",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781060000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "#include \u003csstream\u003e\n...\n\nstd::cout \u003c\u003c '\\n'\n          \u003c\u003c \"The number 0.07 in fixed:      \" \u003c\u003c std::fixed \u003c\u003c 0.01 \u003c\u003c '\\n'\n          \u003c\u003c \"The number 0.07 in scientific: \" \u003c\u003c std::scientific \u003c\u003c 0.01 \u003c\u003c '\\n'\n          \u003c\u003c \"The number 0.07 in hexfloat:   \" \u003c\u003c std::hexfloat \u003c\u003c 0.01 \u003c\u003c '\\n'\n          \u003c\u003c \"The number 0.07 in default:    \" \u003c\u003c std::defaultfloat \u003c\u003c 0.01 \u003c\u003c '\\n';\n\ndouble f;\nstd::istringstream is(\"0x1P-1022\");\ndouble f = std::strtod(is.str().c_str(), NULL);\nstd::cout \u003c\u003c \"Parsing 0x1P-1022 as hex gives \" \u003c\u003c f \u003c\u003c '\\n';\n\n// Output:\n// The number 0.01 in fixed:      0.070000\n// The number 0.01 in scientific: 7.000000e-02\n// The number 0.01 in hexfloat:   0x1.1eb851eb851ecp-4\n// The number 0.01 in default:    0.07\n// Parsing 0x1P-1022 as hex gives 2.22507e-308"
            ]
          ]
        },
        "type": "code",
        "version": 5,
        "code": "#include \u003csstream\u003e\n...\n\nstd::cout \u003c\u003c '\\n'\n          \u003c\u003c \"The number 0.07 in fixed:      \" \u003c\u003c std::fixed \u003c\u003c 0.01 \u003c\u003c '\\n'\n          \u003c\u003c \"The number 0.07 in scientific: \" \u003c\u003c std::scientific \u003c\u003c 0.01 \u003c\u003c '\\n'\n          \u003c\u003c \"The number 0.07 in hexfloat:   \" \u003c\u003c std::hexfloat \u003c\u003c 0.01 \u003c\u003c '\\n'\n          \u003c\u003c \"The number 0.07 in default:    \" \u003c\u003c std::defaultfloat \u003c\u003c 0.01 \u003c\u003c '\\n';\n\ndouble f;\nstd::istringstream is(\"0x1P-1022\");\ndouble f = std::strtod(is.str().c_str(), NULL);\nstd::cout \u003c\u003c \"Parsing 0x1P-1022 as hex gives \" \u003c\u003c f \u003c\u003c '\\n';\n\n// Output:\n// The number 0.01 in fixed:      0.070000\n// The number 0.01 in scientific: 7.000000e-02\n// The number 0.01 in hexfloat:   0x1.1eb851eb851ecp-4\n// The number 0.01 in default:    0.07\n// Parsing 0x1P-1022 as hex gives 2.22507e-308",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495656,
        "id": "01ad182b-28aa-48be-99f8-6bab108bd051",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495656,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Default is "
            ],
            [
              "std::ios_base::fmtflags(0)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Default is "
          },
          {
            "Text": "std::ios_base::fmtflags(0)",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495656,
        "id": "01e6a886-c10b-4c85-ae47-8ebb42db5951",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495656,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There is a "
            ],
            [
              "bug",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " on some compilers which causes"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There is a "
          },
          {
            "Text": "bug",
            "AttrFlags": 1
          },
          {
            "Text": " on some compilers which causes"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495656,
        "id": "dd620b58-e676-4731-aa31-fb637a499eac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781060000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "double f;\nstd::istringstream(\"0x1P-1022\") \u003e\u003e std::hexfloat \u003e\u003e f;\nstd::cout \u003c\u003c \"Parsing 0x1P-1022 as hex gives \" \u003c\u003c f \u003c\u003c '\\n';\n// Output: Parsing 0x1P-1022 as hex gives 0"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "double f;\nstd::istringstream(\"0x1P-1022\") \u003e\u003e std::hexfloat \u003e\u003e f;\nstd::cout \u003c\u003c \"Parsing 0x1P-1022 as hex gives \" \u003c\u003c f \u003c\u003c '\\n';\n// Output: Parsing 0x1P-1022 as hex gives 0",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495656,
        "id": "da9de521-9155-4385-bfbc-9f178c4ca37a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495656,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::showpoint",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/showpoint"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "std::noshowpoint",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/showpoint"
                ]
              ]
            ],
            [
              " - control whether decimal point is always included in floating-point representation. Have no effect on input streams."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::showpoint",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/showpoint"
          },
          {
            "Text": " and "
          },
          {
            "Text": "std::noshowpoint",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/showpoint"
          },
          {
            "Text": " - control whether decimal point is always included in floating-point representation. Have no effect on input streams."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495657,
        "id": "b8b8449d-f964-4c7d-84fe-c0b0acb287bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781060000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "std::cout \u003c\u003c \"7.0 with showpoint: \" \u003c\u003c std::showpoint \u003c\u003c 7.0 \u003c\u003c '\\n'\n          \u003c\u003c \"7.0 with noshowpoint: \" \u003c\u003c std::noshowpoint \u003c\u003c 7.0 \u003c\u003c '\\n';\n// Output: 1.0 with showpoint: 7.00000\n// 1.0 with noshowpoint: 7"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "std::cout \u003c\u003c \"7.0 with showpoint: \" \u003c\u003c std::showpoint \u003c\u003c 7.0 \u003c\u003c '\\n'\n          \u003c\u003c \"7.0 with noshowpoint: \" \u003c\u003c std::noshowpoint \u003c\u003c 7.0 \u003c\u003c '\\n';\n// Output: 1.0 with showpoint: 7.00000\n// 1.0 with noshowpoint: 7",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495657,
        "id": "4e6f305a-fd04-4a6b-b9d8-30b601b85066",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495657,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Default is "
            ],
            [
              "std::showpoint",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Default is "
          },
          {
            "Text": "std::showpoint",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495658,
        "id": "3236db24-8e06-487c-9e9a-2d8d9f2f9e4b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495658,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::showpos",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/showpos"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "std::noshowpos",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/showpos"
                ]
              ]
            ],
            [
              " - control displaying of the "
            ],
            [
              "\\+",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " sign in "
            ],
            [
              "non-negative",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " output. Have no effect on input streams."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::showpos",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/showpos"
          },
          {
            "Text": " and "
          },
          {
            "Text": "std::noshowpos",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/showpos"
          },
          {
            "Text": " - control displaying of the "
          },
          {
            "Text": "\\+",
            "AttrFlags": 2
          },
          {
            "Text": " sign in "
          },
          {
            "Text": "non-negative",
            "AttrFlags": 4
          },
          {
            "Text": " output. Have no effect on input streams."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495658,
        "id": "aa5fd487-5a56-461b-8a5e-fd343beaf66a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781060000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "std::cout \u003c\u003c \"7.0 with showpoint: \" \u003c\u003c std::showpoint \u003c\u003c 7.0 \u003c\u003c '\\n'\n          \u003c\u003c \"7.0 with noshowpoint: \" \u003c\u003c std::noshowpoint \u003c\u003c 7.0 \u003c\u003c '\\n';\n// Output: 1.0 with showpoint: 7.00000\n// 1.0 with noshowpoint: 7"
            ]
          ]
        },
        "type": "code",
        "version": 5,
        "code": "std::cout \u003c\u003c \"7.0 with showpoint: \" \u003c\u003c std::showpoint \u003c\u003c 7.0 \u003c\u003c '\\n'\n          \u003c\u003c \"7.0 with noshowpoint: \" \u003c\u003c std::noshowpoint \u003c\u003c 7.0 \u003c\u003c '\\n';\n// Output: 1.0 with showpoint: 7.00000\n// 1.0 with noshowpoint: 7",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495659,
        "id": "bfdfe520-264f-499f-ada0-e54fd46fd01e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495659,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Default if "
            ],
            [
              "std::noshowpos",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Default if "
          },
          {
            "Text": "std::noshowpos",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550781060000,
        "id": "c61b9ef4-fc12-41d7-a84a-db1ccf83c38f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781060000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "type": "text",
        "version": 4
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495659,
        "id": "dc8c1c7d-9300-4384-b5a9-cbc07f6f3552",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495659,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::unitbuf",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/unitbuf"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "std::nounitbuf",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/unitbuf"
                ]
              ]
            ],
            [
              " - control flushing output stream after every operation. Have no effect on input stream. "
            ],
            [
              "std::unitbuf",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " causes flushing."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::unitbuf",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/unitbuf"
          },
          {
            "Text": ", "
          },
          {
            "Text": "std::nounitbuf",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/unitbuf"
          },
          {
            "Text": " - control flushing output stream after every operation. Have no effect on input stream. "
          },
          {
            "Text": "std::unitbuf",
            "AttrFlags": 2
          },
          {
            "Text": " causes flushing."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495660,
        "id": "6356e718-3ca1-4dec-aef9-19023ac35217",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495660,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::setbase(base)",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/setbase"
                ]
              ]
            ],
            [
              " - sets the numeric base of the stream."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::setbase(base)",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/setbase"
          },
          {
            "Text": " - sets the numeric base of the stream."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495660,
        "id": "2ae74079-f1e7-4068-b43b-575327a39910",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495660,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::setbase(8)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equals to setting "
            ],
            [
              "std::ios_base::basefield",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "std::ios_base::oct",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "std::setbase(16)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " - to "
            ],
            [
              "std::ios_base::hex",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "std::setbase(10)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " - to "
            ],
            [
              "std::ios_base::dec",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::setbase(8)",
            "AttrFlags": 2
          },
          {
            "Text": " equals to setting "
          },
          {
            "Text": "std::ios_base::basefield",
            "AttrFlags": 2
          },
          {
            "Text": " to "
          },
          {
            "Text": "std::ios_base::oct",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "std::setbase(16)",
            "AttrFlags": 2
          },
          {
            "Text": " - to "
          },
          {
            "Text": "std::ios_base::hex",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "std::setbase(10)",
            "AttrFlags": 2
          },
          {
            "Text": " - to "
          },
          {
            "Text": "std::ios_base::dec",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495661,
        "id": "b36e404e-ea9e-4a12-be17-8f07b8cee677",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495661,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If "
            ],
            [
              "base",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is other then "
            ],
            [
              "8",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "10",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "16",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " then "
            ],
            [
              "std::ios_base::basefield",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is setting to "
            ],
            [
              "std::ios_base::fmtflags(0)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". It means decimal output and prefix-dependent input."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If "
          },
          {
            "Text": "base",
            "AttrFlags": 2
          },
          {
            "Text": " is other then "
          },
          {
            "Text": "8",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "10",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "16",
            "AttrFlags": 2
          },
          {
            "Text": " then "
          },
          {
            "Text": "std::ios_base::basefield",
            "AttrFlags": 2
          },
          {
            "Text": " is setting to "
          },
          {
            "Text": "std::ios_base::fmtflags(0)",
            "AttrFlags": 2
          },
          {
            "Text": ". It means decimal output and prefix-dependent input."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495661,
        "id": "4ed88ae2-2bea-4e1d-b98d-5556be7ef261",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495661,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As default "
            ],
            [
              "std::ios_base::basefield",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is "
            ],
            [
              "std::ios_base::dec",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " then by default "
            ],
            [
              "std::setbase(10)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As default "
          },
          {
            "Text": "std::ios_base::basefield",
            "AttrFlags": 2
          },
          {
            "Text": " is "
          },
          {
            "Text": "std::ios_base::dec",
            "AttrFlags": 2
          },
          {
            "Text": " then by default "
          },
          {
            "Text": "std::setbase(10)",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495661,
        "id": "712f8649-a24e-40e4-b60f-e40844b750d3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495661,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::setprecision(n)",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/setprecision"
                ]
              ]
            ],
            [
              " - changes floating-point precision."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::setprecision(n)",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/setprecision"
          },
          {
            "Text": " - changes floating-point precision."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495662,
        "id": "6f4b8f3c-34f8-4d97-b8a1-02722b92ff81",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781120000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "#include \u003ccmath\u003e\n#include \u003climits\u003e\n...\n\ntypedef std::numeric_limits\u003clong double\u003e ld;\nconst long double pi = std::acos(-1.L);\n\nstd::cout \u003c\u003c '\\n'\n          \u003c\u003c \"default precision (6):   pi: \" \u003c\u003c pi \u003c\u003c '\\n'\n          \u003c\u003c \"                       10pi: \" \u003c\u003c 10 * pi \u003c\u003c '\\n'\n          \u003c\u003c \"std::setprecision(4):  10pi: \" \u003c\u003c std::setprecision(4) \u003c\u003c 10 * pi \u003c\u003c '\\n'\n          \u003c\u003c \"                    10000pi: \" \u003c\u003c 10000 * pi \u003c\u003c '\\n'\n          \u003c\u003c \"std::fixed:         10000pi: \" \u003c\u003c std::fixed \u003c\u003c 10000 * pi \u003c\u003c std::defaultfloat \u003c\u003c '\\n'\n          \u003c\u003c \"std::setprecision(10):   pi: \" \u003c\u003c std::setprecision(10) \u003c\u003c pi \u003c\u003c '\\n'\n          \u003c\u003c \"max-1 radix precicion:   pi: \" \u003c\u003c std::setprecision(ld::digits - 1) \u003c\u003c pi \u003c\u003c '\\n'\n          \u003c\u003c \"max+1 radix precision:   pi: \" \u003c\u003c std::setprecision(ld::digits + 1) \u003c\u003c pi \u003c\u003c '\\n'\n          \u003c\u003c \"significant digits prec: pi: \" \u003c\u003c std::setprecision(ld::digits10) \u003c\u003c pi \u003c\u003c '\\n';\n\n// Output:\n// default precision (6):   pi: 3.14159\n//                        10pi: 31.4159\n// std::setprecision(4):  10pi: 31.42\n//                     10000pi: 3.142e+04\n// std::fixed:         10000pi: 31415.9265\n// std::setprecision(10):   pi: 3.141592654\n// max-1 radix precicion:   pi: 3.14159265358979323851280895940618620443274267017841339111328125\n// max+1 radix precision:   pi: 3.14159265358979323851280895940618620443274267017841339111328125\n// significant digits prec: pi: 3.14159265358979324\n```\nDefault is `std::setprecision(6)`."
            ]
          ]
        },
        "type": "code",
        "version": 5,
        "code": "#include \u003ccmath\u003e\n#include \u003climits\u003e\n...\n\ntypedef std::numeric_limits\u003clong double\u003e ld;\nconst long double pi = std::acos(-1.L);\n\nstd::cout \u003c\u003c '\\n'\n          \u003c\u003c \"default precision (6):   pi: \" \u003c\u003c pi \u003c\u003c '\\n'\n          \u003c\u003c \"                       10pi: \" \u003c\u003c 10 * pi \u003c\u003c '\\n'\n          \u003c\u003c \"std::setprecision(4):  10pi: \" \u003c\u003c std::setprecision(4) \u003c\u003c 10 * pi \u003c\u003c '\\n'\n          \u003c\u003c \"                    10000pi: \" \u003c\u003c 10000 * pi \u003c\u003c '\\n'\n          \u003c\u003c \"std::fixed:         10000pi: \" \u003c\u003c std::fixed \u003c\u003c 10000 * pi \u003c\u003c std::defaultfloat \u003c\u003c '\\n'\n          \u003c\u003c \"std::setprecision(10):   pi: \" \u003c\u003c std::setprecision(10) \u003c\u003c pi \u003c\u003c '\\n'\n          \u003c\u003c \"max-1 radix precicion:   pi: \" \u003c\u003c std::setprecision(ld::digits - 1) \u003c\u003c pi \u003c\u003c '\\n'\n          \u003c\u003c \"max+1 radix precision:   pi: \" \u003c\u003c std::setprecision(ld::digits + 1) \u003c\u003c pi \u003c\u003c '\\n'\n          \u003c\u003c \"significant digits prec: pi: \" \u003c\u003c std::setprecision(ld::digits10) \u003c\u003c pi \u003c\u003c '\\n';\n\n// Output:\n// default precision (6):   pi: 3.14159\n//                        10pi: 31.4159\n// std::setprecision(4):  10pi: 31.42\n//                     10000pi: 3.142e+04\n// std::fixed:         10000pi: 31415.9265\n// std::setprecision(10):   pi: 3.141592654\n// max-1 radix precicion:   pi: 3.14159265358979323851280895940618620443274267017841339111328125\n// max+1 radix precision:   pi: 3.14159265358979323851280895940618620443274267017841339111328125\n// significant digits prec: pi: 3.14159265358979324\n```\nDefault is `std::setprecision(6)`.",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495662,
        "id": "35a1a5ad-4b59-4e55-ad60-7fd0c44a4b00",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495662,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Default is "
            ],
            [
              "std::setprecision(6)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Default is "
          },
          {
            "Text": "std::setprecision(6)",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550781120000,
        "id": "e85a5333-1c4e-4ad5-9e9f-172388246738",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781120000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "type": "text",
        "version": 4
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495663,
        "id": "0a638695-f49c-4d0f-a071-f6929221369e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495663,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::setiosflags(mask)",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/setiosflags"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "std::resetiosflags(mask)",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/resetiosflags"
                ]
              ]
            ],
            [
              " - set and clear flags specified in "
            ],
            [
              "mask",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " of "
            ],
            [
              "std::ios_base::fmtflags",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " type."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::setiosflags(mask)",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/setiosflags"
          },
          {
            "Text": " and "
          },
          {
            "Text": "std::resetiosflags(mask)",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/resetiosflags"
          },
          {
            "Text": " - set and clear flags specified in "
          },
          {
            "Text": "mask",
            "AttrFlags": 2
          },
          {
            "Text": " of "
          },
          {
            "Text": "std::ios_base::fmtflags",
            "AttrFlags": 2
          },
          {
            "Text": " type."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495663,
        "id": "7ff7c935-8b65-4008-beeb-e3a2f226e5bf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781120000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "std::istringstream in(\"10 010 10 010 10 010\");\nint num1, num2;\n\nin \u003e\u003e std::oct \u003e\u003e num1 \u003e\u003e num2;\nstd::cout \u003c\u003c \"Parsing \\\"10 010\\\" with std::oct gives:   \" \u003c\u003c num1 \u003c\u003c ' ' \u003c\u003c num2 \u003c\u003c '\\n';\n// Output: Parsing \"10 010\" with std::oct gives:   8 8\n\nin \u003e\u003e std::dec \u003e\u003e num1 \u003e\u003e num2;\nstd::cout \u003c\u003c \"Parsing \\\"10 010\\\" with std::dec gives:   \" \u003c\u003c num1 \u003c\u003c ' ' \u003c\u003c num2 \u003c\u003c '\\n';\n// Output: Parsing \"10 010\" with std::oct gives:   10 10\n\nin \u003e\u003e std::resetiosflags(std::ios_base::basefield) \u003e\u003e num1 \u003e\u003e num2;\nstd::cout \u003c\u003c \"Parsing \\\"10 010\\\" with autodetect gives: \" \u003c\u003c num1 \u003c\u003c ' ' \u003c\u003c num2 \u003c\u003c '\\n';\n// Parsing \"10 010\" with autodetect gives: 10 8\n\nstd::cout \u003c\u003c std::setiosflags(std::ios_base::hex |\n                              std::ios_base::uppercase |\n                              std::ios_base::showbase) \u003c\u003c 42 \u003c\u003c '\\n';\n// Output: OX2A"
            ]
          ]
        },
        "type": "code",
        "version": 5,
        "code": "std::istringstream in(\"10 010 10 010 10 010\");\nint num1, num2;\n\nin \u003e\u003e std::oct \u003e\u003e num1 \u003e\u003e num2;\nstd::cout \u003c\u003c \"Parsing \\\"10 010\\\" with std::oct gives:   \" \u003c\u003c num1 \u003c\u003c ' ' \u003c\u003c num2 \u003c\u003c '\\n';\n// Output: Parsing \"10 010\" with std::oct gives:   8 8\n\nin \u003e\u003e std::dec \u003e\u003e num1 \u003e\u003e num2;\nstd::cout \u003c\u003c \"Parsing \\\"10 010\\\" with std::dec gives:   \" \u003c\u003c num1 \u003c\u003c ' ' \u003c\u003c num2 \u003c\u003c '\\n';\n// Output: Parsing \"10 010\" with std::oct gives:   10 10\n\nin \u003e\u003e std::resetiosflags(std::ios_base::basefield) \u003e\u003e num1 \u003e\u003e num2;\nstd::cout \u003c\u003c \"Parsing \\\"10 010\\\" with autodetect gives: \" \u003c\u003c num1 \u003c\u003c ' ' \u003c\u003c num2 \u003c\u003c '\\n';\n// Parsing \"10 010\" with autodetect gives: 10 8\n\nstd::cout \u003c\u003c std::setiosflags(std::ios_base::hex |\n                              std::ios_base::uppercase |\n                              std::ios_base::showbase) \u003c\u003c 42 \u003c\u003c '\\n';\n// Output: OX2A",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495664,
        "id": "e2c589bb-5a53-402c-9217-6816579c2255",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495664,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::skipws",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/skipws"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "std::noskipws",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/skipws"
                ]
              ]
            ],
            [
              " - control skipping of leading whitespace by the formatted input functions. Have no effect on output streams."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::skipws",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/skipws"
          },
          {
            "Text": " and "
          },
          {
            "Text": "std::noskipws",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/skipws"
          },
          {
            "Text": " - control skipping of leading whitespace by the formatted input functions. Have no effect on output streams."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495664,
        "id": "c9661d6c-1d6e-428a-b57f-abe82df601eb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781120000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "#include \u003csstream\u003e\n...\n\nchar c1, c2, c3;\nstd::istringstream(\"a b c\") \u003e\u003e c1 \u003e\u003e c2 \u003e\u003e c3;\nstd::cout \u003c\u003c \"Default  behavior:  c1 = \" \u003c\u003c c1 \u003c\u003c \"  c2 = \" \u003c\u003c c2 \u003c\u003c \"  c3 = \" \u003c\u003c c3 \u003c\u003c '\\n';\n\nstd::istringstream(\"a b c\") \u003e\u003e std::noskipws \u003e\u003e c1 \u003e\u003e c2 \u003e\u003e c3;\nstd::cout \u003c\u003c \"noskipws behavior:  c1 = \" \u003c\u003c c1 \u003c\u003c \"  c2 = \" \u003c\u003c c2 \u003c\u003c \"  c3 = \" \u003c\u003c c3 \u003c\u003c '\\n';\n// Output: Default  behavior:  c1 = a  c2 = b  c3 = c\n// noskipws behavior:  c1 = a  c2 =    c3 = b"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "#include \u003csstream\u003e\n...\n\nchar c1, c2, c3;\nstd::istringstream(\"a b c\") \u003e\u003e c1 \u003e\u003e c2 \u003e\u003e c3;\nstd::cout \u003c\u003c \"Default  behavior:  c1 = \" \u003c\u003c c1 \u003c\u003c \"  c2 = \" \u003c\u003c c2 \u003c\u003c \"  c3 = \" \u003c\u003c c3 \u003c\u003c '\\n';\n\nstd::istringstream(\"a b c\") \u003e\u003e std::noskipws \u003e\u003e c1 \u003e\u003e c2 \u003e\u003e c3;\nstd::cout \u003c\u003c \"noskipws behavior:  c1 = \" \u003c\u003c c1 \u003c\u003c \"  c2 = \" \u003c\u003c c2 \u003c\u003c \"  c3 = \" \u003c\u003c c3 \u003c\u003c '\\n';\n// Output: Default  behavior:  c1 = a  c2 = b  c3 = c\n// noskipws behavior:  c1 = a  c2 =    c3 = b",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495664,
        "id": "4a339140-7e92-4c14-8d0d-80fba073091d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495664,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Default is "
            ],
            [
              "std::ios_base::skipws",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Default is "
          },
          {
            "Text": "std::ios_base::skipws",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550781180000,
        "id": "8b4ffa5b-9d74-4450-9a81-ad809ccdf966",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781180000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "type": "text",
        "version": 4
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495665,
        "id": "26634af8-0aff-43c7-80c5-92a5fa8611c6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525495665,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::quoted(s[, delim[, escape]])",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/quoted"
                ]
              ]
            ],
            [
              " [C++14] - inserts or extracts quoted strings with embedded spaces. "
            ],
            [
              "s",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " - the string to insert or extract. "
            ],
            [
              "delim",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " - the character to use as the delimiter, "
            ],
            [
              "\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " by default. "
            ],
            [
              "escape",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " - the character to use as the escape character, "
            ],
            [
              "\\\\",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " by default."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::quoted(s[, delim[, escape]])",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/manip/quoted"
          },
          {
            "Text": " [C++14] - inserts or extracts quoted strings with embedded spaces. "
          },
          {
            "Text": "s",
            "AttrFlags": 2
          },
          {
            "Text": " - the string to insert or extract. "
          },
          {
            "Text": "delim",
            "AttrFlags": 2
          },
          {
            "Text": " - the character to use as the delimiter, "
          },
          {
            "Text": "\"",
            "AttrFlags": 2
          },
          {
            "Text": " by default. "
          },
          {
            "Text": "escape",
            "AttrFlags": 2
          },
          {
            "Text": " - the character to use as the escape character, "
          },
          {
            "Text": "\\\\",
            "AttrFlags": 2
          },
          {
            "Text": " by default."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495665,
        "id": "1b4ed21f-1a35-4ead-b3dd-b1a3d72c4914",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781180000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "#include \u003csstream\u003e\n...\n \nstd::stringstream ss;\nstd::string in = \"String with spaces, and embedded \\\"quotes\\\" too\";\nstd::string out;\n \nss \u003c\u003c std::quoted(in);\nstd::cout \u003c\u003c \"read in     [\" \u003c\u003c in \u003c\u003c \"]\\n\"\n          \u003c\u003c \"stored as   [\" \u003c\u003c ss.str() \u003c\u003c \"]\\n\";\n \nss \u003e\u003e std::quoted(out);\nstd::cout \u003c\u003c \"written out [\" \u003c\u003c out \u003c\u003c \"]\\n\";\n// Output:\n// read in     [String with spaces, and embedded \"quotes\" too]\n// stored as   [\"String with spaces, and embedded \\\"quotes\\\" too\"]\n// written out [String with spaces, and embedded \"quotes\" too]"
            ]
          ]
        },
        "type": "code",
        "version": 5,
        "code": "#include \u003csstream\u003e\n...\n \nstd::stringstream ss;\nstd::string in = \"String with spaces, and embedded \\\"quotes\\\" too\";\nstd::string out;\n \nss \u003c\u003c std::quoted(in);\nstd::cout \u003c\u003c \"read in     [\" \u003c\u003c in \u003c\u003c \"]\\n\"\n          \u003c\u003c \"stored as   [\" \u003c\u003c ss.str() \u003c\u003c \"]\\n\";\n \nss \u003e\u003e std::quoted(out);\nstd::cout \u003c\u003c \"written out [\" \u003c\u003c out \u003c\u003c \"]\\n\";\n// Output:\n// read in     [String with spaces, and embedded \"quotes\" too]\n// stored as   [\"String with spaces, and embedded \\\"quotes\\\" too\"]\n// written out [String with spaces, and embedded \"quotes\" too]",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525495665,
        "id": "b4ea64c8-5a77-4d40-80af-9a50fb162e39",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781180000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For more information see:"
            ]
          ]
        },
        "type": "text",
        "version": 20,
        "inline_content": [
          {
            "Text": "For more information see:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550781379351,
        "id": "10546a3f-9e11-41e3-9526-7534c0901e05",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781360000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://en.cppreference.com/w/cpp/io/manip/booalpha",
              [
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/booalpha"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 2,
        "inline_content": [
          {
            "Text": "http://en.cppreference.com/w/cpp/io/manip/booalpha",
            "Link": "http://en.cppreference.com/w/cpp/io/manip/booalpha"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550781379351,
        "id": "376b88fb-8722-4692-a9ab-7498df3f5aac",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781360000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://en.cppreference.com/w/cpp/io/manip/showbase",
              [
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/showbase"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 2,
        "inline_content": [
          {
            "Text": "http://en.cppreference.com/w/cpp/io/manip/showbase",
            "Link": "http://en.cppreference.com/w/cpp/io/manip/showbase"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550781379351,
        "id": "8fda41fc-782b-4c32-8bc6-354de359f94e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781360000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://en.cppreference.com/w/cpp/io/manip/hex",
              [
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/hex"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 2,
        "inline_content": [
          {
            "Text": "http://en.cppreference.com/w/cpp/io/manip/hex",
            "Link": "http://en.cppreference.com/w/cpp/io/manip/hex"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550781379351,
        "id": "e5c5b7c5-99a2-4953-a3d0-0b240a7e642c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781360000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags",
              [
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 2,
        "inline_content": [
          {
            "Text": "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags",
            "Link": "http://en.cppreference.com/w/cpp/io/ios_base/fmtflags"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550781379351,
        "id": "be5a2f00-51d5-44b0-a378-c353cf785a9f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781360000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://en.cppreference.com/w/cpp/io/manip/uppercase",
              [
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/uppercase"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 2,
        "inline_content": [
          {
            "Text": "http://en.cppreference.com/w/cpp/io/manip/uppercase",
            "Link": "http://en.cppreference.com/w/cpp/io/manip/uppercase"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550781379351,
        "id": "5e68a602-f6f8-4ef5-9e66-20ca19567ab1",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781360000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://en.cppreference.com/w/cpp/io/manip/left",
              [
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/left"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 2,
        "inline_content": [
          {
            "Text": "http://en.cppreference.com/w/cpp/io/manip/left",
            "Link": "http://en.cppreference.com/w/cpp/io/manip/left"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550781379351,
        "id": "dadddf03-d4f4-4c47-a718-46027a0180f4",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781360000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://en.cppreference.com/w/cpp/io/manip/fixed",
              [
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/fixed"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 2,
        "inline_content": [
          {
            "Text": "http://en.cppreference.com/w/cpp/io/manip/fixed",
            "Link": "http://en.cppreference.com/w/cpp/io/manip/fixed"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550781379351,
        "id": "4f31a245-ef35-4085-a06d-5b82483ac3d1",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781360000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://en.cppreference.com/w/cpp/io/manip/showpoint",
              [
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/showpoint"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 2,
        "inline_content": [
          {
            "Text": "http://en.cppreference.com/w/cpp/io/manip/showpoint",
            "Link": "http://en.cppreference.com/w/cpp/io/manip/showpoint"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550781379351,
        "id": "ad975768-52cb-498b-85f3-b74cb7e2b1e7",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781360000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://en.cppreference.com/w/cpp/io/manip/showpos",
              [
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/showpos"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 2,
        "inline_content": [
          {
            "Text": "http://en.cppreference.com/w/cpp/io/manip/showpos",
            "Link": "http://en.cppreference.com/w/cpp/io/manip/showpos"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550781379351,
        "id": "ab417367-cd28-4ab8-9bb7-224015fa00e0",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781360000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://en.cppreference.com/w/cpp/io/manip/unitbuf",
              [
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/unitbuf"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 2,
        "inline_content": [
          {
            "Text": "http://en.cppreference.com/w/cpp/io/manip/unitbuf",
            "Link": "http://en.cppreference.com/w/cpp/io/manip/unitbuf"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550781379351,
        "id": "f2641429-1599-4933-b09a-be3da2022dcf",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781360000,
        "parent_id": "f38fb121-e151-4a73-ac9f-d716851f8b3f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://en.cppreference.com/w/cpp/io/manip/skipws",
              [
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/manip/skipws"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 2,
        "inline_content": [
          {
            "Text": "http://en.cppreference.com/w/cpp/io/manip/skipws",
            "Link": "http://en.cppreference.com/w/cpp/io/manip/skipws"
          }
        ]
      }
    ],
    "title": "Stream manipulators",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}