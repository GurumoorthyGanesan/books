{
  "ID": "f245683a-382e-494b-9620-a322625225ee",
  "Root": {
    "alive": true,
    "content": [
      "7038ccce-b2b0-4b32-a3e0-1a108afe6862",
      "b8d6173e-fc80-4f15-9760-3057833712c8",
      "8034e3f7-169c-489d-806a-b367e4459ce7",
      "879f60a9-12f1-40cd-8bf1-3db0c376cf54",
      "6e4e2c59-ba06-4db5-b2cb-8e6006a34208",
      "7d0f49ac-ab41-48af-b011-59922d5edf57",
      "d7ee784b-599e-4fbe-8524-9e9a63ab3b99",
      "a1f2e3c2-1f96-4568-9482-68f7847d6a30",
      "7cc7fe72-7f45-425d-bcdc-90c82d560306",
      "8448b386-1eb2-4cb3-b34a-95e9b7af765a",
      "fa9b73e4-90c4-4e0c-89e0-7ceed82ce8c9",
      "275ea89c-eef2-40b1-a65c-49319eb796a8"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522729506,
    "id": "f245683a-382e-494b-9620-a322625225ee",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550522729506,
    "parent_id": "fe5135d2-0f28-4675-bccd-611b7222102a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "060 auto and proxy objects"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522729498,
        "id": "7038ccce-b2b0-4b32-a3e0-1a108afe6862",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522729498,
        "parent_id": "f245683a-382e-494b-9620-a322625225ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sometimes "
            ],
            [
              "auto",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " may behave not quite as was expected by a programmer. It type deduces the expression, even when type deduction is not the right thing to do."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sometimes "
          },
          {
            "Text": "auto",
            "AttrFlags": 2
          },
          {
            "Text": " may behave not quite as was expected by a programmer. It type deduces the expression, even when type deduction is not the right thing to do."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522729501,
        "id": "b8d6173e-fc80-4f15-9760-3057833712c8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522729501,
        "parent_id": "f245683a-382e-494b-9620-a322625225ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As an example, when proxy objects are used in the code:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As an example, when proxy objects are used in the code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522729501,
        "id": "8034e3f7-169c-489d-806a-b367e4459ce7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522729501,
        "parent_id": "f245683a-382e-494b-9620-a322625225ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::vector\u003cbool\u003e flags{true, true, false};\nauto flag = flags[0];\nflags.push_back(true);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::vector\u003cbool\u003e flags{true, true, false};\nauto flag = flags[0];\nflags.push_back(true);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522729501,
        "id": "879f60a9-12f1-40cd-8bf1-3db0c376cf54",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522729501,
        "parent_id": "f245683a-382e-494b-9620-a322625225ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here "
            ],
            [
              "flag",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " would be not "
            ],
            [
              "bool",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", but "
            ],
            [
              "std::vector\u003cbool\u003e::reference",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", since for "
            ],
            [
              "bool",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " specialization of template "
            ],
            [
              "vector",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " the "
            ],
            [
              "operator []",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns a proxy object with conversion operator "
            ],
            [
              "operator bool",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " defined."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here "
          },
          {
            "Text": "flag",
            "AttrFlags": 2
          },
          {
            "Text": " would be not "
          },
          {
            "Text": "bool",
            "AttrFlags": 2
          },
          {
            "Text": ", but "
          },
          {
            "Text": "std::vector\u003cbool\u003e::reference",
            "AttrFlags": 2
          },
          {
            "Text": ", since for "
          },
          {
            "Text": "bool",
            "AttrFlags": 2
          },
          {
            "Text": " specialization of template "
          },
          {
            "Text": "vector",
            "AttrFlags": 2
          },
          {
            "Text": " the "
          },
          {
            "Text": "operator []",
            "AttrFlags": 2
          },
          {
            "Text": " returns a proxy object with conversion operator "
          },
          {
            "Text": "operator bool",
            "AttrFlags": 2
          },
          {
            "Text": " defined."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522729501,
        "id": "6e4e2c59-ba06-4db5-b2cb-8e6006a34208",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522729501,
        "parent_id": "f245683a-382e-494b-9620-a322625225ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When "
            ],
            [
              "flags.push_back(true)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " modifies the container, this pseudo-reference could end up dangling, referring to an element that no longer exists."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When "
          },
          {
            "Text": "flags.push_back(true)",
            "AttrFlags": 2
          },
          {
            "Text": " modifies the container, this pseudo-reference could end up dangling, referring to an element that no longer exists."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522729502,
        "id": "7d0f49ac-ab41-48af-b011-59922d5edf57",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522729502,
        "parent_id": "f245683a-382e-494b-9620-a322625225ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It also makes the next situation possible:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It also makes the next situation possible:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522729502,
        "id": "d7ee784b-599e-4fbe-8524-9e9a63ab3b99",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522729502,
        "parent_id": "f245683a-382e-494b-9620-a322625225ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void foo(bool b);\n\nstd::vector\u003cbool\u003e getFlags();\n\nauto flag = getFlags()[5];\nfoo(flag);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void foo(bool b);\n\nstd::vector\u003cbool\u003e getFlags();\n\nauto flag = getFlags()[5];\nfoo(flag);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522729502,
        "id": "a1f2e3c2-1f96-4568-9482-68f7847d6a30",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522729502,
        "parent_id": "f245683a-382e-494b-9620-a322625225ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "vector",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is discarded immediately, so "
            ],
            [
              "flag",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a pseudo-reference to an element that has been discarded. The call to "
            ],
            [
              "foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " invokes undefined behavior."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "vector",
            "AttrFlags": 2
          },
          {
            "Text": " is discarded immediately, so "
          },
          {
            "Text": "flag",
            "AttrFlags": 2
          },
          {
            "Text": " is a pseudo-reference to an element that has been discarded. The call to "
          },
          {
            "Text": "foo",
            "AttrFlags": 2
          },
          {
            "Text": " invokes undefined behavior."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522729502,
        "id": "7cc7fe72-7f45-425d-bcdc-90c82d560306",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522729502,
        "parent_id": "f245683a-382e-494b-9620-a322625225ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In cases like this you can declare a variable with "
            ],
            [
              "auto",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and initialize it by casting to the type you want to be deduced:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In cases like this you can declare a variable with "
          },
          {
            "Text": "auto",
            "AttrFlags": 2
          },
          {
            "Text": " and initialize it by casting to the type you want to be deduced:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522729502,
        "id": "8448b386-1eb2-4cb3-b34a-95e9b7af765a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522729502,
        "parent_id": "f245683a-382e-494b-9620-a322625225ee",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "auto flag = static_cast\u003cbool\u003e(getFlags()[5]);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "auto flag = static_cast\u003cbool\u003e(getFlags()[5]);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522729503,
        "id": "fa9b73e4-90c4-4e0c-89e0-7ceed82ce8c9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522729503,
        "parent_id": "f245683a-382e-494b-9620-a322625225ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "but at that point, simply replacing "
            ],
            [
              "auto",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with "
            ],
            [
              "bool",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " makes more sense."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "but at that point, simply replacing "
          },
          {
            "Text": "auto",
            "AttrFlags": 2
          },
          {
            "Text": " with "
          },
          {
            "Text": "bool",
            "AttrFlags": 2
          },
          {
            "Text": " makes more sense."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522729506,
        "id": "275ea89c-eef2-40b1-a65c-49319eb796a8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522729506,
        "parent_id": "f245683a-382e-494b-9620-a322625225ee",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another case where proxy objects can cause problems is "
            ],
            [
              "expression templates",
              [
                [
                  "a",
                  "https://stackoverflow.com/documentation/c%2B%2B/3404/expression-templates#t=201608151452546656817"
                ]
              ]
            ],
            [
              ". In that case, the templates are sometimes not designed to last beyond the current full-expression for efficiency sake, and using the proxy object on the next causes undefined behavior."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another case where proxy objects can cause problems is "
          },
          {
            "Text": "expression templates",
            "Link": "https://stackoverflow.com/documentation/c%2B%2B/3404/expression-templates#t=201608151452546656817"
          },
          {
            "Text": ". In that case, the templates are sometimes not designed to last beyond the current full-expression for efficiency sake, and using the proxy object on the next causes undefined behavior."
          }
        ]
      }
    ],
    "title": "060 auto and proxy objects"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}