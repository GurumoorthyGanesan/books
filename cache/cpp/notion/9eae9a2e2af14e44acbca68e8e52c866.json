{
  "ID": "9eae9a2e-2af1-4e44-acbc-a68e8e52c866",
  "Root": {
    "alive": true,
    "content": [
      "5c4b4fd1-c2c5-43b0-9c08-eee788960b04",
      "8645bc55-ac1b-4470-af85-32e497e4081a",
      "7598a5c6-cc5d-4330-99fc-09da903dfe8d",
      "84976619-cf2d-4e0c-9af4-633f1bf64786",
      "f43cf045-fa6a-415d-8d44-4e97f6ff5843",
      "2470785b-5b62-433c-8738-9a41672a89f9",
      "b1827bf6-3f29-4d31-9f21-5ad24bc1667e",
      "1def3c64-0163-41e2-a975-f0ef0f9f9dc5",
      "1cae97ad-f1b0-497e-84a6-c725d8908924",
      "5382c9c0-ef02-4164-ab3c-c7ddc2f9c82c",
      "563c7a81-d71a-48e4-b538-ed12d80b315d",
      "efbe63df-4c83-4362-843f-91f4583514fd",
      "4ae626ea-8b4e-47c4-9aed-00647b87a616",
      "68e5409c-1e3f-4c91-a82b-8fb88cd3e411",
      "12b97ee1-684e-4c3f-937b-37923a929005",
      "ad94adf7-029a-4732-aa6d-7421fb55d1f2"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550524665458,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "9eae9a2e-2af1-4e44-acbc-a68e8e52c866",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552297680000,
    "parent_id": "52470773-ddd6-4b1b-ad39-7b26f7b28f00",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "if, if ... else"
        ]
      ]
    },
    "type": "page",
    "version": 39,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524665454,
        "id": "5c4b4fd1-c2c5-43b0-9c08-eee788960b04",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524665454,
        "parent_id": "9eae9a2e-2af1-4e44-acbc-a68e8e52c866",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "if and else:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "if and else:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524665456,
        "id": "8645bc55-ac1b-4470-af85-32e497e4081a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524665456,
        "parent_id": "9eae9a2e-2af1-4e44-acbc-a68e8e52c866",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "it used to check whether the given expression returns true or false and acts as such:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "it used to check whether the given expression returns true or false and acts as such:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524665457,
        "id": "7598a5c6-cc5d-4330-99fc-09da903dfe8d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781840000,
        "parent_id": "9eae9a2e-2af1-4e44-acbc-a68e8e52c866",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "if (condition) statement"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "if (condition) statement",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524665457,
        "id": "84976619-cf2d-4e0c-9af4-633f1bf64786",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524665457,
        "parent_id": "9eae9a2e-2af1-4e44-acbc-a68e8e52c866",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the condition can be any valid C++ expression that returns something that be checked against truth/falsehood for example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "the condition can be any valid C++ expression that returns something that be checked against truth/falsehood for example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524665457,
        "id": "f43cf045-fa6a-415d-8d44-4e97f6ff5843",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781900000,
        "parent_id": "9eae9a2e-2af1-4e44-acbc-a68e8e52c866",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "if (true) { /* code here */ }  // evaluate that true is true and execute the code in the brackets\nif (false) { /* code here */ } // always skip the code since false is always false"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "if (true) { /* code here */ }  // evaluate that true is true and execute the code in the brackets\nif (false) { /* code here */ } // always skip the code since false is always false",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524665457,
        "id": "2470785b-5b62-433c-8738-9a41672a89f9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524665457,
        "parent_id": "9eae9a2e-2af1-4e44-acbc-a68e8e52c866",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the condition can be anything, a function, a variable, or a comparison for example"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "the condition can be anything, a function, a variable, or a comparison for example"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524665457,
        "id": "b1827bf6-3f29-4d31-9f21-5ad24bc1667e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781900000,
        "parent_id": "9eae9a2e-2af1-4e44-acbc-a68e8e52c866",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "if (istrue()) { } // evaluate the function, if it returns true, the if will execute the code\nif (isTrue(var)) { } // evalute the return of the function after passing the argument var\nif (a == b) { } // this will evaluate the return of the experssion (a==b) which will be true if equal and false if unequal\nif (a) { } // if a is a boolean type, it will evaluate for its value, if it's an integer, any non zero value will be true,"
            ]
          ]
        },
        "type": "code",
        "version": 11,
        "code": "if (istrue()) { } // evaluate the function, if it returns true, the if will execute the code\nif (isTrue(var)) { } // evalute the return of the function after passing the argument var\nif (a == b) { } // this will evaluate the return of the experssion (a==b) which will be true if equal and false if unequal\nif (a) { } // if a is a boolean type, it will evaluate for its value, if it's an integer, any non zero value will be true,",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524665457,
        "id": "1def3c64-0163-41e2-a975-f0ef0f9f9dc5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524665457,
        "parent_id": "9eae9a2e-2af1-4e44-acbc-a68e8e52c866",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "if we want to check for a multiple expressions we can do it in two ways :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "if we want to check for a multiple expressions we can do it in two ways :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524665457,
        "id": "1cae97ad-f1b0-497e-84a6-c725d8908924",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524665457,
        "parent_id": "9eae9a2e-2af1-4e44-acbc-a68e8e52c866",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "using binary operators",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "using binary operators",
            "AttrFlags": 1
          },
          {
            "Text": " :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524665457,
        "id": "5382c9c0-ef02-4164-ab3c-c7ddc2f9c82c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781900000,
        "parent_id": "9eae9a2e-2af1-4e44-acbc-a68e8e52c866",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "if (a \u0026\u0026 b) { } // will be true only if both a and b are true (binary operators are outside the scope here\nif (a || b ) { } //true if a or b is true"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "if (a \u0026\u0026 b) { } // will be true only if both a and b are true (binary operators are outside the scope here\nif (a || b ) { } //true if a or b is true",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524665458,
        "id": "563c7a81-d71a-48e4-b538-ed12d80b315d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524665458,
        "parent_id": "9eae9a2e-2af1-4e44-acbc-a68e8e52c866",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "using if/ifelse/else",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "using if/ifelse/else",
            "AttrFlags": 1
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524665458,
        "id": "efbe63df-4c83-4362-843f-91f4583514fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524665458,
        "parent_id": "9eae9a2e-2af1-4e44-acbc-a68e8e52c866",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "for a simple switch either if or else"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "for a simple switch either if or else"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524665458,
        "id": "4ae626ea-8b4e-47c4-9aed-00647b87a616",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781900000,
        "parent_id": "9eae9a2e-2af1-4e44-acbc-a68e8e52c866",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "if (a == \"test\") {\n    / /will execute if a is a string \"test\" \n} else {\n    // only if the first failed, will execute \n}"
            ]
          ]
        },
        "type": "code",
        "version": 5,
        "code": "if (a == \"test\") {\n    / /will execute if a is a string \"test\" \n} else {\n    // only if the first failed, will execute \n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524665458,
        "id": "68e5409c-1e3f-4c91-a82b-8fb88cd3e411",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524665458,
        "parent_id": "9eae9a2e-2af1-4e44-acbc-a68e8e52c866",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "for multiple choices :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "for multiple choices :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524665458,
        "id": "12b97ee1-684e-4c3f-937b-37923a929005",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550781900000,
        "parent_id": "9eae9a2e-2af1-4e44-acbc-a68e8e52c866",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "if (a == 'a') {\n  // if a is a char valued 'a'  \n} else if (a == 'b') {\n  // if a is a char valued 'b' \n} else if (a == 'c') {\n  // if a is a char valued 'c'\n} else { \n  //if a is none of the above\n}"
            ]
          ]
        },
        "type": "code",
        "version": 18,
        "code": "if (a == 'a') {\n  // if a is a char valued 'a'  \n} else if (a == 'b') {\n  // if a is a char valued 'b' \n} else if (a == 'c') {\n  // if a is a char valued 'c'\n} else { \n  //if a is none of the above\n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524665458,
        "id": "ad94adf7-029a-4732-aa6d-7421fb55d1f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524665458,
        "parent_id": "9eae9a2e-2af1-4e44-acbc-a68e8e52c866",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "however it must be noted that you should use '"
            ],
            [
              "switch",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "' instead if your code checks for the same variable's value"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "however it must be noted that you should use '"
          },
          {
            "Text": "switch",
            "AttrFlags": 1
          },
          {
            "Text": "' instead if your code checks for the same variable's value"
          }
        ]
      }
    ],
    "title": "if, if ... else",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}