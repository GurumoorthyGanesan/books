{
  "ID": "78688ec6-100c-42a0-ac7f-fd2982f34239",
  "Root": {
    "alive": true,
    "content": [
      "c94caa59-47c0-44fa-b333-c520cc775274",
      "b35ce96b-5981-4691-a6f2-88324d548470",
      "be859ceb-cee9-4826-bf70-4dbbdf23f4d7",
      "7f50624b-855a-4823-af4a-865d8bf2d0ce",
      "8696ba56-eabb-442f-8160-0e6fa323ae42",
      "a8595b17-537b-4369-ba6f-92f1e368a9ee",
      "65cce037-5f67-4766-b9b0-a3d22c8ae2bc",
      "72c4be85-1c65-4f91-a584-56a2cf7189de"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550524741540,
    "id": "78688ec6-100c-42a0-ac7f-fd2982f34239",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550524741540,
    "parent_id": "50856007-ed7d-41fb-8551-374ecae3e24b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 OpenMP Parallel Sections"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524741538,
        "id": "c94caa59-47c0-44fa-b333-c520cc775274",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524741538,
        "parent_id": "78688ec6-100c-42a0-ac7f-fd2982f34239",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example illustrates the basics of executing sections of code in parallel."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example illustrates the basics of executing sections of code in parallel."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524741539,
        "id": "b35ce96b-5981-4691-a6f2-88324d548470",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524741539,
        "parent_id": "78688ec6-100c-42a0-ac7f-fd2982f34239",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As OpenMP is a built-in compiler feature, it works on any supported compilers without including any libraries. You may wish to include "
            ],
            [
              "omp.h",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if you want to use any of the openMP API features."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As OpenMP is a built-in compiler feature, it works on any supported compilers without including any libraries. You may wish to include "
          },
          {
            "Text": "omp.h",
            "AttrFlags": 2
          },
          {
            "Text": " if you want to use any of the openMP API features."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524741539,
        "id": "be859ceb-cee9-4826-bf70-4dbbdf23f4d7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524741539,
        "parent_id": "78688ec6-100c-42a0-ac7f-fd2982f34239",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sample Code",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sample Code",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524741539,
        "id": "7f50624b-855a-4823-af4a-865d8bf2d0ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524741539,
        "parent_id": "78688ec6-100c-42a0-ac7f-fd2982f34239",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::cout \u003c\u003c \"begin \";\n//    This pragma statement hints the compiler that the\n//    contents within the { } are to be executed in as\n//    parallel sections using openMP, the compiler will\n//    generate this chunk of code for parallel execution\n#pragma omp parallel sections\n{\n    //    This pragma statement hints the compiler that\n    //    this is a section that can be executed in parallel\n    //    with other section, a single section will be executed\n    //    by a single thread.\n    //    Note that it is \"section\" as opposed to \"sections\" above\n    #pragma omp section\n    {\n        std::cout \u003c\u003c \"hello \" \u003c\u003c std::endl;\n        /** Do something **/\n    }\n    #pragma omp section\n    {\n        std::cout \u003c\u003c \"world \" \u003c\u003c std::endl;\n        /** Do something **/\n    }\n}\n//    This line will not be executed until all the\n//    sections defined above terminates\nstd::cout \u003c\u003c \"end\" \u003c\u003c std::endl;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::cout \u003c\u003c \"begin \";\n//    This pragma statement hints the compiler that the\n//    contents within the { } are to be executed in as\n//    parallel sections using openMP, the compiler will\n//    generate this chunk of code for parallel execution\n#pragma omp parallel sections\n{\n    //    This pragma statement hints the compiler that\n    //    this is a section that can be executed in parallel\n    //    with other section, a single section will be executed\n    //    by a single thread.\n    //    Note that it is \"section\" as opposed to \"sections\" above\n    #pragma omp section\n    {\n        std::cout \u003c\u003c \"hello \" \u003c\u003c std::endl;\n        /** Do something **/\n    }\n    #pragma omp section\n    {\n        std::cout \u003c\u003c \"world \" \u003c\u003c std::endl;\n        /** Do something **/\n    }\n}\n//    This line will not be executed until all the\n//    sections defined above terminates\nstd::cout \u003c\u003c \"end\" \u003c\u003c std::endl;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524741539,
        "id": "8696ba56-eabb-442f-8160-0e6fa323ae42",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524741539,
        "parent_id": "78688ec6-100c-42a0-ac7f-fd2982f34239",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Outputs",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Outputs",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524741539,
        "id": "a8595b17-537b-4369-ba6f-92f1e368a9ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524741539,
        "parent_id": "78688ec6-100c-42a0-ac7f-fd2982f34239",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example produces 2 possible outputs and is dependent on the operating system and hardware. The output also illustrates a "
            ],
            [
              "race condition",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " problem that would occur from such an implementation."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example produces 2 possible outputs and is dependent on the operating system and hardware. The output also illustrates a "
          },
          {
            "Text": "race condition",
            "AttrFlags": 1
          },
          {
            "Text": " problem that would occur from such an implementation."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524741539,
        "id": "65cce037-5f67-4766-b9b0-a3d22c8ae2bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524741539,
        "parent_id": "78688ec6-100c-42a0-ac7f-fd2982f34239",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "OUTPUT A| OUTPUT B|\n—— | —— |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "OUTPUT A| OUTPUT B|\n—— | —— |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524741540,
        "id": "72c4be85-1c65-4f91-a584-56a2cf7189de",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524741540,
        "parent_id": "78688ec6-100c-42a0-ac7f-fd2982f34239",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "|begin hello world end|begin world hello end|"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "|begin hello world end|begin world hello end|"
          }
        ]
      }
    ],
    "title": "010 OpenMP Parallel Sections"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}