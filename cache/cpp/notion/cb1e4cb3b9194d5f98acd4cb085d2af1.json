{
  "ID": "cb1e4cb3-b919-4d5f-98ac-d4cb085d2af1",
  "Root": {
    "alive": true,
    "content": [
      "c4ae3b00-2281-4c33-9de1-823426632b7e",
      "53755bea-71e8-447b-978a-17dff0d9871c",
      "17ff6104-aa9f-4f9b-96ba-2160948edde9",
      "6a0661f1-7de1-44bc-bb68-2d2641f0ce41",
      "de81a4af-cec4-470f-a1ba-00ec7907d225",
      "41ba9424-1fff-4c2e-a0f4-65254935da77",
      "ed597d62-1152-45eb-95f6-6b310dba25eb",
      "a93fce14-501a-49f0-926c-25a7e676aa5d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522031725,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "cb1e4cb3-b919-4d5f-98ac-d4cb085d2af1",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550801160000,
    "parent_id": "402ef4da-a4e3-4503-ab08-9a4aa56821b5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Getting a shared_ptr referring to this"
        ]
      ]
    },
    "type": "page",
    "version": 15,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522031721,
        "id": "c4ae3b00-2281-4c33-9de1-823426632b7e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522031721,
        "parent_id": "cb1e4cb3-b919-4d5f-98ac-d4cb085d2af1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "enable_shared_from_this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " enables you to get a valid "
            ],
            [
              "shared_ptr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instance to "
            ],
            [
              "this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "enable_shared_from_this",
            "AttrFlags": 2
          },
          {
            "Text": " enables you to get a valid "
          },
          {
            "Text": "shared_ptr",
            "AttrFlags": 2
          },
          {
            "Text": " instance to "
          },
          {
            "Text": "this",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522031724,
        "id": "53755bea-71e8-447b-978a-17dff0d9871c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522031724,
        "parent_id": "cb1e4cb3-b919-4d5f-98ac-d4cb085d2af1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By deriving your class from the class template "
            ],
            [
              "enable_shared_from_this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", you inherit a method "
            ],
            [
              "shared_from_this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that returns a "
            ],
            [
              "shared_ptr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instance to "
            ],
            [
              "this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By deriving your class from the class template "
          },
          {
            "Text": "enable_shared_from_this",
            "AttrFlags": 2
          },
          {
            "Text": ", you inherit a method "
          },
          {
            "Text": "shared_from_this",
            "AttrFlags": 2
          },
          {
            "Text": " that returns a "
          },
          {
            "Text": "shared_ptr",
            "AttrFlags": 2
          },
          {
            "Text": " instance to "
          },
          {
            "Text": "this",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522031724,
        "id": "17ff6104-aa9f-4f9b-96ba-2160948edde9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550801160000,
        "parent_id": "cb1e4cb3-b919-4d5f-98ac-d4cb085d2af1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " the object must be created as a "
            ],
            [
              "shared_ptr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in first place:"
            ]
          ]
        },
        "type": "text",
        "version": 8,
        "inline_content": [
          {
            "Text": "Note:",
            "AttrFlags": 1
          },
          {
            "Text": " the object must be created as a "
          },
          {
            "Text": "shared_ptr",
            "AttrFlags": 2
          },
          {
            "Text": " in first place:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522031724,
        "id": "6a0661f1-7de1-44bc-bb68-2d2641f0ce41",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550801160000,
        "parent_id": "cb1e4cb3-b919-4d5f-98ac-d4cb085d2af1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "#include \u003cmemory\u003e\nclass A: public enable_shared_from_this\u003cA\u003e {\n};\nA* ap1 =new A();\nshared_ptr\u003cA\u003e ap2(ap1); // First prepare a shared pointer to the object and hold it!\n// Then get a shared pointer to the object from the object itself\nshared_ptr\u003cA\u003e ap3 = ap1-\u003eshared_from_this(); \nint c3 =ap3.use_count(); // =2: pointing to the same object"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "#include \u003cmemory\u003e\nclass A: public enable_shared_from_this\u003cA\u003e {\n};\nA* ap1 =new A();\nshared_ptr\u003cA\u003e ap2(ap1); // First prepare a shared pointer to the object and hold it!\n// Then get a shared pointer to the object from the object itself\nshared_ptr\u003cA\u003e ap3 = ap1-\u003eshared_from_this(); \nint c3 =ap3.use_count(); // =2: pointing to the same object",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522031724,
        "id": "de81a4af-cec4-470f-a1ba-00ec7907d225",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550801160000,
        "parent_id": "cb1e4cb3-b919-4d5f-98ac-d4cb085d2af1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " you cannot call "
            ],
            [
              "enable_shared_from_this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " inside the constructor."
            ]
          ]
        },
        "type": "text",
        "version": 6,
        "inline_content": [
          {
            "Text": "Note:",
            "AttrFlags": 1
          },
          {
            "Text": " you cannot call "
          },
          {
            "Text": "enable_shared_from_this",
            "AttrFlags": 2
          },
          {
            "Text": " inside the constructor."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522031725,
        "id": "41ba9424-1fff-4c2e-a0f4-65254935da77",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550801160000,
        "parent_id": "cb1e4cb3-b919-4d5f-98ac-d4cb085d2af1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "#include \u003cmemory\u003e // enable_shared_from_this\n\nclass Widget : public std::enable_shared_from_this\u003c Widget \u003e\n{\npublic:\n    void DoSomething()\n    {\n        std::shared_ptr\u003c Widget \u003e self = shared_from_this();\n        someEvent -\u003e Register( self );\n    }\nprivate:\n    ...\n};\n\nint main()\n{\n    ...\n    auto w = std::make_shared\u003c Widget \u003e();\n    w -\u003e DoSomething();\n    ...\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "#include \u003cmemory\u003e // enable_shared_from_this\n\nclass Widget : public std::enable_shared_from_this\u003c Widget \u003e\n{\npublic:\n    void DoSomething()\n    {\n        std::shared_ptr\u003c Widget \u003e self = shared_from_this();\n        someEvent -\u003e Register( self );\n    }\nprivate:\n    ...\n};\n\nint main()\n{\n    ...\n    auto w = std::make_shared\u003c Widget \u003e();\n    w -\u003e DoSomething();\n    ...\n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522031725,
        "id": "ed597d62-1152-45eb-95f6-6b310dba25eb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522031725,
        "parent_id": "cb1e4cb3-b919-4d5f-98ac-d4cb085d2af1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you use "
            ],
            [
              "shared_from_this()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " on an object not owned by a "
            ],
            [
              "shared_ptr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", such as a local automatic object or a global object, then the behavior is undefined. Since C++17 it throws "
            ],
            [
              "std::bad_alloc",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instead."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you use "
          },
          {
            "Text": "shared_from_this()",
            "AttrFlags": 2
          },
          {
            "Text": " on an object not owned by a "
          },
          {
            "Text": "shared_ptr",
            "AttrFlags": 2
          },
          {
            "Text": ", such as a local automatic object or a global object, then the behavior is undefined. Since C++17 it throws "
          },
          {
            "Text": "std::bad_alloc",
            "AttrFlags": 2
          },
          {
            "Text": " instead."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522031725,
        "id": "a93fce14-501a-49f0-926c-25a7e676aa5d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522031725,
        "parent_id": "cb1e4cb3-b919-4d5f-98ac-d4cb085d2af1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using "
            ],
            [
              "shared_from_this()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " from a constructor is equivalent to using it on an object not owned by a "
            ],
            [
              "shared_ptr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", because the objects is possessed by the "
            ],
            [
              "shared_ptr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " after the constructor returns."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using "
          },
          {
            "Text": "shared_from_this()",
            "AttrFlags": 2
          },
          {
            "Text": " from a constructor is equivalent to using it on an object not owned by a "
          },
          {
            "Text": "shared_ptr",
            "AttrFlags": 2
          },
          {
            "Text": ", because the objects is possessed by the "
          },
          {
            "Text": "shared_ptr",
            "AttrFlags": 2
          },
          {
            "Text": " after the constructor returns."
          }
        ]
      }
    ],
    "title": "Getting a shared_ptr referring to this",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}