{
  "ID": "3d475fdc-c929-4df9-a1f1-768efaa00b71",
  "Root": {
    "alive": true,
    "content": [
      "1c735d7d-2d02-474e-8276-60626b882b5e",
      "cd336823-5c72-473b-afc4-9db322b4c402",
      "d3020f41-5344-49c1-acd0-f6155834ba92"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523079497,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "3d475fdc-c929-4df9-a1f1-768efaa00b71",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550800380000,
    "parent_id": "a47adf4d-f2bb-4f72-84ee-798641440dfd",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Pointer operations"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523079494,
        "id": "1c735d7d-2d02-474e-8276-60626b882b5e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523079494,
        "parent_id": "3d475fdc-c929-4df9-a1f1-768efaa00b71",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are two operators for pointers: Address-of operator (\u0026): Returns the memory address of its operand. Contents-of (Dereference) operator(*): Returns the value of the variable located at the address specified by its operator."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are two operators for pointers: Address-of operator (\u0026): Returns the memory address of its operand. Contents-of (Dereference) operator(*): Returns the value of the variable located at the address specified by its operator."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523079497,
        "id": "cd336823-5c72-473b-afc4-9db322b4c402",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550800380000,
        "parent_id": "3d475fdc-c929-4df9-a1f1-768efaa00b71",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "int var = 20;\nint *ptr;\nptr = \u0026var;\n\ncout \u003c\u003c var \u003c\u003c endl;\n//Outputs 20 (The value of var)\n\ncout \u003c\u003c ptr \u003c\u003c endl;\n//Outputs 0x234f119 (var's memory location)\n\ncout \u003c\u003c *ptr \u003c\u003c endl;\n//Outputs 20(The value of the variable stored in the pointer ptr"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "int var = 20;\nint *ptr;\nptr = \u0026var;\n\ncout \u003c\u003c var \u003c\u003c endl;\n//Outputs 20 (The value of var)\n\ncout \u003c\u003c ptr \u003c\u003c endl;\n//Outputs 0x234f119 (var's memory location)\n\ncout \u003c\u003c *ptr \u003c\u003c endl;\n//Outputs 20(The value of the variable stored in the pointer ptr",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523079497,
        "id": "d3020f41-5344-49c1-acd0-f6155834ba92",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523079497,
        "parent_id": "3d475fdc-c929-4df9-a1f1-768efaa00b71",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The asterisk (*) is used in declaring a pointer for simple purpose of indicating that it is a pointer. Don’t confuse this with the "
            ],
            [
              "dereference",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " operator, which is used to obtain the value located at the specified address. They are simply two different things represented with the same sign."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The asterisk (*) is used in declaring a pointer for simple purpose of indicating that it is a pointer. Don’t confuse this with the "
          },
          {
            "Text": "dereference",
            "AttrFlags": 1
          },
          {
            "Text": " operator, which is used to obtain the value located at the specified address. They are simply two different things represented with the same sign."
          }
        ]
      }
    ],
    "title": "Pointer operations",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}