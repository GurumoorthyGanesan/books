{
  "ID": "5e01977d-6ae7-4a5c-b2b4-6c937bf012b4",
  "Root": {
    "alive": true,
    "content": [
      "1b625a50-1c7e-4a40-b781-6ddd2aaf44f5",
      "308128ab-cdce-4ee1-b77a-c2246953ad7d",
      "5a7e9dbe-3c06-4ad6-9d60-36573863888f",
      "d41ce192-416f-4dd5-a8c4-48dbcff69929",
      "44b7fec5-5a4d-42c1-8d11-1fc8ba68f580",
      "d5594038-87b9-43fb-bb25-4f55ffe5039b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523052545,
    "id": "5e01977d-6ae7-4a5c-b2b4-6c937bf012b4",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550523052545,
    "parent_id": "1e5df2e7-ee0b-4037-ab62-15139a784f28",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "030 Stack"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523052541,
        "id": "1b625a50-1c7e-4a40-b781-6ddd2aaf44f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523052541,
        "parent_id": "5e01977d-6ae7-4a5c-b2b4-6c937bf012b4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The stack is a small region of memory into which temporary values are placed during execution. Allocating data into the stack is very fast compared to heap allocation, as all the memory has already been assigned for this purpose."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The stack is a small region of memory into which temporary values are placed during execution. Allocating data into the stack is very fast compared to heap allocation, as all the memory has already been assigned for this purpose."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523052544,
        "id": "308128ab-cdce-4ee1-b77a-c2246953ad7d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523052544,
        "parent_id": "5e01977d-6ae7-4a5c-b2b4-6c937bf012b4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int main() {\n    int a = 0; //Stored on the stack\n    return a;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int main() {\n    int a = 0; //Stored on the stack\n    return a;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523052544,
        "id": "5a7e9dbe-3c06-4ad6-9d60-36573863888f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523052544,
        "parent_id": "5e01977d-6ae7-4a5c-b2b4-6c937bf012b4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The stack is named because chains of function calls will have their temporary memory ‘stacked’ on top of each other, each one using a separate small section of memory."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The stack is named because chains of function calls will have their temporary memory ‘stacked’ on top of each other, each one using a separate small section of memory."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523052544,
        "id": "d41ce192-416f-4dd5-a8c4-48dbcff69929",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523052544,
        "parent_id": "5e01977d-6ae7-4a5c-b2b4-6c937bf012b4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "float bar() {\n    //f will be placed on the stack after anything else\n    float f = 2;\n    return f;\n}\n\ndouble foo() {\n    //d will be placed just after anything within main()\n    double d = bar();\n    return d;\n}\n\nint main() {\n    //The stack has no user variables stored in it until foo() is called\n    return (int)foo();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "float bar() {\n    //f will be placed on the stack after anything else\n    float f = 2;\n    return f;\n}\n\ndouble foo() {\n    //d will be placed just after anything within main()\n    double d = bar();\n    return d;\n}\n\nint main() {\n    //The stack has no user variables stored in it until foo() is called\n    return (int)foo();\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523052544,
        "id": "44b7fec5-5a4d-42c1-8d11-1fc8ba68f580",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523052544,
        "parent_id": "5e01977d-6ae7-4a5c-b2b4-6c937bf012b4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Data stored on the stack is only valid so long as the scope that allocated the variable is still active."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Data stored on the stack is only valid so long as the scope that allocated the variable is still active."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523052544,
        "id": "d5594038-87b9-43fb-bb25-4f55ffe5039b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523052544,
        "parent_id": "5e01977d-6ae7-4a5c-b2b4-6c937bf012b4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int* pA = nullptr;\n\nvoid foo() {\n    int b = *pA;\n    pA = \u0026b;\n}\n\nint main() {\n    int a = 5;\n    pA = \u0026a;\n    foo();\n    //Undefined behavior, the value pointed to by pA is no longer in scope\n    a = *pA;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int* pA = nullptr;\n\nvoid foo() {\n    int b = *pA;\n    pA = \u0026b;\n}\n\nint main() {\n    int a = 5;\n    pA = \u0026a;\n    foo();\n    //Undefined behavior, the value pointed to by pA is no longer in scope\n    a = *pA;\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "030 Stack"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}