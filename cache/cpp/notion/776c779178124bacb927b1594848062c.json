{
  "ID": "776c7791-7812-4bac-b927-b1594848062c",
  "Root": {
    "alive": true,
    "content": [
      "98f47f89-dc6e-42d6-8915-c016e0838aea",
      "373ddd6d-4f29-4fef-8d78-05e8ee1df47f",
      "f99cfe09-4df5-4176-9a90-c8aad01de81d",
      "5f7380f4-2746-4352-b970-b685ec6be5bc",
      "785041e4-f88f-4c58-bd5f-0dbf82b2b14d",
      "0346079b-7dd9-4449-932f-160d16c33197",
      "7223fc91-b811-41d6-8207-99d14829469e",
      "98fdc4c3-8ff0-4465-94d7-784e7973a070",
      "4bd44d8c-01d0-470c-865b-a9556f6821d2",
      "52f97f8d-b961-430b-bf40-f3a541e2d540",
      "7bffc39d-05ec-45c0-b99b-569fc1a66cfd",
      "5c0b2cff-f7cb-4184-a043-05d1f4193953",
      "6ebbef90-b93b-4849-af48-912cd47c643c",
      "5fd0f78b-f828-4d21-9496-ad1f2bfee4f8",
      "15728a8d-0b0b-45f1-9ea5-ee5488fbe881",
      "12b7310d-d52c-49cd-b9d2-832ab51310e0"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523004607,
    "id": "776c7791-7812-4bac-b927-b1594848062c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550523004607,
    "parent_id": "f05fc49e-c44c-4e93-b1f0-a05de793c5bd",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "010 Lazy Initialization"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523004603,
        "id": "98f47f89-dc6e-42d6-8915-c016e0838aea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523004603,
        "parent_id": "776c7791-7812-4bac-b927-b1594848062c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example has been lifted from the "
            ],
            [
              "Q \u0026 A",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " section here:http://stackoverflow.com/a/1008289/3807729"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example has been lifted from the "
          },
          {
            "Text": "Q \u0026 A",
            "AttrFlags": 2
          },
          {
            "Text": " section here:http://stackoverflow.com/a/1008289/3807729"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523004605,
        "id": "373ddd6d-4f29-4fef-8d78-05e8ee1df47f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523004605,
        "parent_id": "776c7791-7812-4bac-b927-b1594848062c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "See this article for a simple design for a lazy evaluated with guaranteed destruction singleton:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "See this article for a simple design for a lazy evaluated with guaranteed destruction singleton:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523004605,
        "id": "f99cfe09-4df5-4176-9a90-c8aad01de81d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523004605,
        "parent_id": "776c7791-7812-4bac-b927-b1594848062c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://stackoverflow.com/questions/270947/can-any-one-provide-me-a-sample-of-singleton-in-c/271104#271104"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "http://stackoverflow.com/questions/270947/can-any-one-provide-me-a-sample-of-singleton-in-c/271104#271104"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523004605,
        "id": "5f7380f4-2746-4352-b970-b685ec6be5bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523004605,
        "parent_id": "776c7791-7812-4bac-b927-b1594848062c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The classic lazy evaluated and correctly destroyed singleton.",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The classic lazy evaluated and correctly destroyed singleton.",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523004605,
        "id": "785041e4-f88f-4c58-bd5f-0dbf82b2b14d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523004605,
        "parent_id": "776c7791-7812-4bac-b927-b1594848062c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class S\n{\n    public:\n        static S\u0026 getInstance()\n        {\n            static S    instance; // Guaranteed to be destroyed.\n                                  // Instantiated on first use.\n            return instance;\n        }\n    private:\n        S() {};                   // Constructor? (the {} brackets) are needed here.\n\n        // C++ 03\n        // ========\n        // Dont forget to declare these two. You want to make sure they\n        // are unacceptable otherwise you may accidentally get copies of\n        // your singleton appearing.\n        S(S const\u0026);              // Don't Implement\n        void operator=(S const\u0026); // Don't implement\n\n        // C++ 11\n        // =======\n        // We can use the better technique of deleting the methods\n        // we don't want.\n    public:\n        S(S const\u0026)               = delete;\n        void operator=(S const\u0026)  = delete;\n\n        // Note: Scott Meyers mentions in his Effective Modern\n        //       C++ book, that deleted functions should generally\n        //       be public as it results in better error messages\n        //       due to the compilers behavior to check accessibility\n        //       before deleted status\n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class S\n{\n    public:\n        static S\u0026 getInstance()\n        {\n            static S    instance; // Guaranteed to be destroyed.\n                                  // Instantiated on first use.\n            return instance;\n        }\n    private:\n        S() {};                   // Constructor? (the {} brackets) are needed here.\n\n        // C++ 03\n        // ========\n        // Dont forget to declare these two. You want to make sure they\n        // are unacceptable otherwise you may accidentally get copies of\n        // your singleton appearing.\n        S(S const\u0026);              // Don't Implement\n        void operator=(S const\u0026); // Don't implement\n\n        // C++ 11\n        // =======\n        // We can use the better technique of deleting the methods\n        // we don't want.\n    public:\n        S(S const\u0026)               = delete;\n        void operator=(S const\u0026)  = delete;\n\n        // Note: Scott Meyers mentions in his Effective Modern\n        //       C++ book, that deleted functions should generally\n        //       be public as it results in better error messages\n        //       due to the compilers behavior to check accessibility\n        //       before deleted status\n};",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523004606,
        "id": "0346079b-7dd9-4449-932f-160d16c33197",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523004606,
        "parent_id": "776c7791-7812-4bac-b927-b1594848062c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "See this article about when to use a singleton: (not often)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "See this article about when to use a singleton: (not often)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523004606,
        "id": "7223fc91-b811-41d6-8207-99d14829469e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523004606,
        "parent_id": "776c7791-7812-4bac-b927-b1594848062c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://stackoverflow.com/questions/86582/singleton-how-should-it-be-used"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "http://stackoverflow.com/questions/86582/singleton-how-should-it-be-used"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523004606,
        "id": "98fdc4c3-8ff0-4465-94d7-784e7973a070",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523004606,
        "parent_id": "776c7791-7812-4bac-b927-b1594848062c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "See this two article about initialization order and how to cope:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "See this two article about initialization order and how to cope:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523004606,
        "id": "4bd44d8c-01d0-470c-865b-a9556f6821d2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523004606,
        "parent_id": "776c7791-7812-4bac-b927-b1594848062c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://stackoverflow.com/questions/211237/c-static-variables-initialisation-order/211307#211307"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "http://stackoverflow.com/questions/211237/c-static-variables-initialisation-order/211307#211307"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523004606,
        "id": "52f97f8d-b961-430b-bf40-f3a541e2d540",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523004606,
        "parent_id": "776c7791-7812-4bac-b927-b1594848062c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://stackoverflow.com/questions/335369/finding-c-static-initialization-order-problems/335746#335746"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "http://stackoverflow.com/questions/335369/finding-c-static-initialization-order-problems/335746#335746"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523004606,
        "id": "7bffc39d-05ec-45c0-b99b-569fc1a66cfd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523004606,
        "parent_id": "776c7791-7812-4bac-b927-b1594848062c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "See this article describing lifetimes:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "See this article describing lifetimes:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523004606,
        "id": "5c0b2cff-f7cb-4184-a043-05d1f4193953",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523004606,
        "parent_id": "776c7791-7812-4bac-b927-b1594848062c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://stackoverflow.com/questions/246564/what-is-the-lifetime-of-a-static-variable-in-a-c-function"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "http://stackoverflow.com/questions/246564/what-is-the-lifetime-of-a-static-variable-in-a-c-function"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523004606,
        "id": "6ebbef90-b93b-4849-af48-912cd47c643c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523004606,
        "parent_id": "776c7791-7812-4bac-b927-b1594848062c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "See this article that discusses some threading implications to singletons:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "See this article that discusses some threading implications to singletons:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523004607,
        "id": "5fd0f78b-f828-4d21-9496-ad1f2bfee4f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523004607,
        "parent_id": "776c7791-7812-4bac-b927-b1594848062c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://stackoverflow.com/questions/449436/singleton-instance-declared-as-static-variable-of-getinstance-method/449823#449823"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "http://stackoverflow.com/questions/449436/singleton-instance-declared-as-static-variable-of-getinstance-method/449823#449823"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523004607,
        "id": "15728a8d-0b0b-45f1-9ea5-ee5488fbe881",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523004607,
        "parent_id": "776c7791-7812-4bac-b927-b1594848062c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "See this article that explains why double checked locking will not work on C++:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "See this article that explains why double checked locking will not work on C++:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523004607,
        "id": "12b7310d-d52c-49cd-b9d2-832ab51310e0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523004607,
        "parent_id": "776c7791-7812-4bac-b927-b1594848062c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://stackoverflow.com/questions/367633/what-are-all-the-common-undefined-behaviour-that-c-programmer-should-know-about/367690#367690"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "http://stackoverflow.com/questions/367633/what-are-all-the-common-undefined-behaviour-that-c-programmer-should-know-about/367690#367690"
          }
        ]
      }
    ],
    "title": "010 Lazy Initialization"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}