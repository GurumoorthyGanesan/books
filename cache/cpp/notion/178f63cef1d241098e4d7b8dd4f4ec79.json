{
  "ID": "178f63ce-f1d2-4109-8e4d-7b8dd4f4ec79",
  "Root": {
    "alive": true,
    "content": [
      "7a2e64ed-d20f-4517-b2de-872ce9225449",
      "2b179bfb-f150-491f-bede-fb4a4a53961e",
      "04d2865b-96ed-4f47-8e75-ee7971fa2b0d",
      "84e51de8-18a9-4246-9fb2-bd2642806b88",
      "b54a87b2-c210-4da3-9e45-b466e3b226d7",
      "ae84f69c-0f19-4ce9-a5f9-2f1ff3edc3d1",
      "1b6435ea-9c38-4409-89a2-69ed9338ada5",
      "32323ce9-bd8c-4861-9912-71b49e03c639",
      "e402c98a-ea64-47e7-85bf-16d79dbdfdf0",
      "752a66b2-a57e-4575-9dcc-622508bdee24",
      "2c694f9d-3760-444d-b5e0-c80ba71afaa4",
      "192452e9-09fc-4b9c-9ea0-bfd36656f73b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522055428,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "178f63ce-f1d2-4109-8e4d-7b8dd4f4ec79",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550655900000,
    "parent_id": "8655f492-9c51-4f68-ad52-8b6c1e02a277",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Matrices Using Vectors"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522055426,
        "id": "7a2e64ed-d20f-4517-b2de-872ce9225449",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522055426,
        "parent_id": "178f63ce-f1d2-4109-8e4d-7b8dd4f4ec79",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Vectors can be used as a 2D matrix by defining them as a vector of vectors."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Vectors can be used as a 2D matrix by defining them as a vector of vectors."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522055427,
        "id": "2b179bfb-f150-491f-bede-fb4a4a53961e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522055427,
        "parent_id": "178f63ce-f1d2-4109-8e4d-7b8dd4f4ec79",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A matrix with 3 rows and 4 columns with each cell initialised as 0 can be defined as:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A matrix with 3 rows and 4 columns with each cell initialised as 0 can be defined as:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522055427,
        "id": "04d2865b-96ed-4f47-8e75-ee7971fa2b0d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522055427,
        "parent_id": "178f63ce-f1d2-4109-8e4d-7b8dd4f4ec79",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::vector\u003cstd::vector\u003cint\u003e \u003e matrix(3, std::vector\u003cint\u003e(4));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::vector\u003cstd::vector\u003cint\u003e \u003e matrix(3, std::vector\u003cint\u003e(4));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522055427,
        "id": "84e51de8-18a9-4246-9fb2-bd2642806b88",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522055427,
        "parent_id": "178f63ce-f1d2-4109-8e4d-7b8dd4f4ec79",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The syntax for initializing them using initialiser lists or otherwise are similar to that of a normal vector."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The syntax for initializing them using initialiser lists or otherwise are similar to that of a normal vector."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522055427,
        "id": "b54a87b2-c210-4da3-9e45-b466e3b226d7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522055427,
        "parent_id": "178f63ce-f1d2-4109-8e4d-7b8dd4f4ec79",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::vector\u003cstd::vector\u003cint\u003e\u003e matrix = { {0,1,2,3},\n                                         {4,5,6,7}, \n                                         {8,9,10,11}\n                                       };"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::vector\u003cstd::vector\u003cint\u003e\u003e matrix = { {0,1,2,3},\n                                         {4,5,6,7}, \n                                         {8,9,10,11}\n                                       };",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522055427,
        "id": "ae84f69c-0f19-4ce9-a5f9-2f1ff3edc3d1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522055427,
        "parent_id": "178f63ce-f1d2-4109-8e4d-7b8dd4f4ec79",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Values in such a vector can be accessed similar to a 2D array"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Values in such a vector can be accessed similar to a 2D array"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522055427,
        "id": "1b6435ea-9c38-4409-89a2-69ed9338ada5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522055427,
        "parent_id": "178f63ce-f1d2-4109-8e4d-7b8dd4f4ec79",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int var = matrix[0][2];"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int var = matrix[0][2];",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522055427,
        "id": "32323ce9-bd8c-4861-9912-71b49e03c639",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522055427,
        "parent_id": "178f63ce-f1d2-4109-8e4d-7b8dd4f4ec79",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Iterating over the entire matrix is similar to that of a normal vector but with an extra dimension."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Iterating over the entire matrix is similar to that of a normal vector but with an extra dimension."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522055428,
        "id": "e402c98a-ea64-47e7-85bf-16d79dbdfdf0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522055428,
        "parent_id": "178f63ce-f1d2-4109-8e4d-7b8dd4f4ec79",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "for(int i = 0; i \u003c 3; ++i)\n{\n    for(int j = 0; j \u003c 4; ++j)\n    {\n        std::cout \u003c\u003c matrix[i][j] \u003c\u003c std::endl;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "for(int i = 0; i \u003c 3; ++i)\n{\n    for(int j = 0; j \u003c 4; ++j)\n    {\n        std::cout \u003c\u003c matrix[i][j] \u003c\u003c std::endl;\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522055428,
        "id": "752a66b2-a57e-4575-9dcc-622508bdee24",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522055428,
        "parent_id": "178f63ce-f1d2-4109-8e4d-7b8dd4f4ec79",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "for(auto\u0026 row: matrix)\n{\n    for(auto\u0026 col : row)\n    { \n        std::cout \u003c\u003c col \u003c\u003c std::endl;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "for(auto\u0026 row: matrix)\n{\n    for(auto\u0026 col : row)\n    { \n        std::cout \u003c\u003c col \u003c\u003c std::endl;\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522055428,
        "id": "2c694f9d-3760-444d-b5e0-c80ba71afaa4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522055428,
        "parent_id": "178f63ce-f1d2-4109-8e4d-7b8dd4f4ec79",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A vector of vectors is a convenient way to represent a matrix but it’s not the most efficient: individual vectors are scattered around memory and the data structure isn’t cache friendly."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A vector of vectors is a convenient way to represent a matrix but it’s not the most efficient: individual vectors are scattered around memory and the data structure isn’t cache friendly."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522055428,
        "id": "192452e9-09fc-4b9c-9ea0-bfd36656f73b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522055428,
        "parent_id": "178f63ce-f1d2-4109-8e4d-7b8dd4f4ec79",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Also, in a proper matrix, the length of every row must be the same (this isn’t the case for a vector of vectors). The additional flexibility can be a source of errors."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Also, in a proper matrix, the length of every row must be the same (this isn’t the case for a vector of vectors). The additional flexibility can be a source of errors."
          }
        ]
      }
    ],
    "title": "Matrices Using Vectors",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}