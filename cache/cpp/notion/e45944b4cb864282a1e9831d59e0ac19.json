{
  "ID": "e45944b4-cb86-4282-a1e9-831d59e0ac19",
  "Root": {
    "alive": true,
    "content": [
      "dac1403c-3f97-47d8-b55c-a7a659db27b2",
      "a2ae63ce-3aea-43f8-aa86-bc89501cea58",
      "f7d92478-cbb7-4045-b01d-e0723ae64f4b",
      "6d873d0a-9472-4547-affa-3a6f64e05914",
      "6728aa0d-0314-42bd-b4b5-a9cfcbe94ad6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550524314531,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e45944b4-cb86-4282-a1e9-831d59e0ac19",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550800140000,
    "parent_id": "e197edf1-7913-4c71-bf9f-78feec182413",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Copy constructor vs assignment constructor"
        ]
      ]
    },
    "type": "page",
    "version": 17,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524314527,
        "id": "dac1403c-3f97-47d8-b55c-a7a659db27b2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524314527,
        "parent_id": "e45944b4-cb86-4282-a1e9-831d59e0ac19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Ok we have briefly looked over what the copy constructor and assignment constructor are above and gave examples of each now let’s see both of them in the same code. This code will be similar as above two. Let’s take this :"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Ok we have briefly looked over what the copy constructor and assignment constructor are above and gave examples of each now let’s see both of them in the same code. This code will be similar as above two. Let’s take this :"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524314530,
        "id": "a2ae63ce-3aea-43f8-aa86-bc89501cea58",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550800140000,
        "parent_id": "e45944b4-cb86-4282-a1e9-831d59e0ac19",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "// Copy vs Assignment Constructor\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n\nusing std::cout;\nusing std::endl;\n\nclass Foo\n{\n  public:\n    Foo(int data)\n    {\n        this-\u003edata = data;    \n    }\n    ~Foo(){};\n    Foo(const Foo\u0026 rhs)\n    {\n            data = rhs.data; \n    }\n\n    Foo\u0026 operator=(const Foo\u0026 rhs)\n    {\n        data = rhs.data; \n        return *this;\n    }\n\n    int data;\n};\n\nint main()\n{\n   Foo foo(2); //Foo(int data) / Normal Constructor called\n   Foo foo2 = foo; //Copy Constructor Called\n   cout \u003c\u003c foo2.data \u003c\u003c endl;\n\n   Foo foo3(42);\n   foo3=foo; //Assignment Constructor Called\n   cout \u003c\u003c foo3.data \u003c\u003c endl;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// Copy vs Assignment Constructor\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n\nusing std::cout;\nusing std::endl;\n\nclass Foo\n{\n  public:\n    Foo(int data)\n    {\n        this-\u003edata = data;    \n    }\n    ~Foo(){};\n    Foo(const Foo\u0026 rhs)\n    {\n            data = rhs.data; \n    }\n\n    Foo\u0026 operator=(const Foo\u0026 rhs)\n    {\n        data = rhs.data; \n        return *this;\n    }\n\n    int data;\n};\n\nint main()\n{\n   Foo foo(2); //Foo(int data) / Normal Constructor called\n   Foo foo2 = foo; //Copy Constructor Called\n   cout \u003c\u003c foo2.data \u003c\u003c endl;\n\n   Foo foo3(42);\n   foo3=foo; //Assignment Constructor Called\n   cout \u003c\u003c foo3.data \u003c\u003c endl;\n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524314530,
        "id": "f7d92478-cbb7-4045-b01d-e0723ae64f4b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524314530,
        "parent_id": "e45944b4-cb86-4282-a1e9-831d59e0ac19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524314530,
        "id": "6d873d0a-9472-4547-affa-3a6f64e05914",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524314530,
        "parent_id": "e45944b4-cb86-4282-a1e9-831d59e0ac19",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "2\n2"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "2\n2",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524314531,
        "id": "6728aa0d-0314-42bd-b4b5-a9cfcbe94ad6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524314531,
        "parent_id": "e45944b4-cb86-4282-a1e9-831d59e0ac19",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here you can see we first call the copy constructor by executing the line "
            ],
            [
              "Foo foo2 = foo;",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " . Since we didn’t initialize it previously. And then next we call the assignment operator on foo3 since it was already initialized "
            ],
            [
              "foo3=foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ";"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here you can see we first call the copy constructor by executing the line "
          },
          {
            "Text": "Foo foo2 = foo;",
            "AttrFlags": 2
          },
          {
            "Text": " . Since we didn’t initialize it previously. And then next we call the assignment operator on foo3 since it was already initialized "
          },
          {
            "Text": "foo3=foo",
            "AttrFlags": 2
          },
          {
            "Text": ";"
          }
        ]
      }
    ],
    "title": "Copy constructor vs assignment constructor",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}