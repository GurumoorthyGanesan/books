{
  "ID": "55854238-a2b9-4996-89c6-a71d87219dc4",
  "Root": {
    "alive": true,
    "content": [
      "c271442d-f8b6-4f84-a638-41495eded97f",
      "e5ca28b0-0ead-46b1-ae60-25aa65016a51",
      "25df3aae-7f4a-4857-99fe-ff7fc511866a",
      "4c04ca15-2907-4ee4-8cdd-fa5626fa737b",
      "031e2fb8-61d1-4dfc-8aaf-ec119bfd1a80"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550525101575,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "55854238-a2b9-4996-89c6-a71d87219dc4",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551688891162,
    "parent_id": "e3f32187-64e1-4609-b294-74d479b50a70",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "mutable"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525101565,
        "id": "c271442d-f8b6-4f84-a638-41495eded97f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525101565,
        "parent_id": "55854238-a2b9-4996-89c6-a71d87219dc4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A specifier that can be applied to the declaration of a non-static, non-reference data member of a class. A mutable member of a class is not "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " even when the object is "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A specifier that can be applied to the declaration of a non-static, non-reference data member of a class. A mutable member of a class is not "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " even when the object is "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525101568,
        "id": "e5ca28b0-0ead-46b1-ae60-25aa65016a51",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525101568,
        "parent_id": "55854238-a2b9-4996-89c6-a71d87219dc4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class C {\n    int x;\n    mutable int times_accessed;\n  public:\n    C(): x(0), times_accessed(0) {\n    }\n    int get_x() const {\n        ++times_accessed; // ok: const member function can modify mutable data member\n        return x;\n    }\n    void set_x(int x) {\n        ++times_accessed;\n        this-\u003ex = x;\n    }\n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class C {\n    int x;\n    mutable int times_accessed;\n  public:\n    C(): x(0), times_accessed(0) {\n    }\n    int get_x() const {\n        ++times_accessed; // ok: const member function can modify mutable data member\n        return x;\n    }\n    void set_x(int x) {\n        ++times_accessed;\n        this-\u003ex = x;\n    }\n};",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525101575,
        "id": "25df3aae-7f4a-4857-99fe-ff7fc511866a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525101575,
        "parent_id": "55854238-a2b9-4996-89c6-a71d87219dc4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A second meaning for "
            ],
            [
              "mutable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " was added in C++11. When it follows the parameter list of a lambda, it suppresses the implicit "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " on the lambda’s function call operator. Therefore, a mutable lambda can modify the values of entities captured by copy. See "
            ],
            [
              "mutable lambdas",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/2705/mutable-keyword/9059/mutable-lambdas"
                ]
              ]
            ],
            [
              " for more details."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A second meaning for "
          },
          {
            "Text": "mutable",
            "AttrFlags": 2
          },
          {
            "Text": " was added in C++11. When it follows the parameter list of a lambda, it suppresses the implicit "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " on the lambda’s function call operator. Therefore, a mutable lambda can modify the values of entities captured by copy. See "
          },
          {
            "Text": "mutable lambdas",
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/2705/mutable-keyword/9059/mutable-lambdas"
          },
          {
            "Text": " for more details."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525101575,
        "id": "4c04ca15-2907-4ee4-8cdd-fa5626fa737b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525101575,
        "parent_id": "55854238-a2b9-4996-89c6-a71d87219dc4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::vector\u003cint\u003e my_iota(int start, int count) {\n    std::vector\u003cint\u003e result(count);\n    std::generate(result.begin(), result.end(),\n                  [start]() mutable { return start++; });\n    return result;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::vector\u003cint\u003e my_iota(int start, int count) {\n    std::vector\u003cint\u003e result(count);\n    std::generate(result.begin(), result.end(),\n                  [start]() mutable { return start++; });\n    return result;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525101575,
        "id": "031e2fb8-61d1-4dfc-8aaf-ec119bfd1a80",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525101575,
        "parent_id": "55854238-a2b9-4996-89c6-a71d87219dc4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that "
            ],
            [
              "mutable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is "
            ],
            [
              "not",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " a storage class specifier when used this way to form a mutable lambda."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that "
          },
          {
            "Text": "mutable",
            "AttrFlags": 2
          },
          {
            "Text": " is "
          },
          {
            "Text": "not",
            "AttrFlags": 4
          },
          {
            "Text": " a storage class specifier when used this way to form a mutable lambda."
          }
        ]
      }
    ],
    "title": "mutable",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}