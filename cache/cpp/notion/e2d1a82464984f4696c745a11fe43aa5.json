{
  "ID": "e2d1a824-6498-4f46-96c7-45a11fe43aa5",
  "Root": {
    "alive": true,
    "content": [
      "4a598828-b579-4959-b820-79415b17260d",
      "bd1f5229-67ed-4253-ac6b-f7eddf97f3fe",
      "6f7c3254-6531-4360-b9f1-e6132ea186e8",
      "1c828651-1848-4db4-af2f-aee34889d1a4",
      "a8f4b9fb-1215-40c3-b9c6-f99bfe36f409",
      "476e05d7-db61-4fc6-abe2-bb3fbefdc2b7",
      "14263766-7796-4a0a-96ce-382f780a6ee7"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522054420,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e2d1a824-6498-4f46-96c7-45a11fe43aa5",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550655900000,
    "parent_id": "8655f492-9c51-4f68-ad52-8b6c1e02a277",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Reducing the Capacity of a Vector"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522054419,
        "id": "4a598828-b579-4959-b820-79415b17260d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522054419,
        "parent_id": "e2d1a824-6498-4f46-96c7-45a11fe43aa5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A "
            ],
            [
              "std::vector",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " automatically increases its capacity upon insertion as needed, but it never reduces its capacity after element removal."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A "
          },
          {
            "Text": "std::vector",
            "AttrFlags": 2
          },
          {
            "Text": " automatically increases its capacity upon insertion as needed, but it never reduces its capacity after element removal."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522054420,
        "id": "bd1f5229-67ed-4253-ac6b-f7eddf97f3fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522054420,
        "parent_id": "e2d1a824-6498-4f46-96c7-45a11fe43aa5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Initialize a vector with 100 elements\nstd::vector\u003cint\u003e v(100);\n\n// The vector's capacity is always at least as large as its size\nauto const old_capacity = v.capacity();\n// old_capacity \u003e= 100\n\n// Remove half of the elements\nv.erase(v.begin() + 50, v.end());  // Reduces the size from 100 to 50 (v.size() == 50),\n                                   // but not the capacity (v.capacity() == old_capacity)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Initialize a vector with 100 elements\nstd::vector\u003cint\u003e v(100);\n\n// The vector's capacity is always at least as large as its size\nauto const old_capacity = v.capacity();\n// old_capacity \u003e= 100\n\n// Remove half of the elements\nv.erase(v.begin() + 50, v.end());  // Reduces the size from 100 to 50 (v.size() == 50),\n                                   // but not the capacity (v.capacity() == old_capacity)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522054420,
        "id": "6f7c3254-6531-4360-b9f1-e6132ea186e8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522054420,
        "parent_id": "e2d1a824-6498-4f46-96c7-45a11fe43aa5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To reduce its capacity, we can copy the contents of a vector to a new temporary vector. The new vector will have the minimum capacity that is needed to store all elements of the original vector. If the size reduction of the original vector was significant, then the capacity reduction for the new vector is likely to be significant. We can then swap the original vector with the temporary one to retain its minimized capacity:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To reduce its capacity, we can copy the contents of a vector to a new temporary vector. The new vector will have the minimum capacity that is needed to store all elements of the original vector. If the size reduction of the original vector was significant, then the capacity reduction for the new vector is likely to be significant. We can then swap the original vector with the temporary one to retain its minimized capacity:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522054420,
        "id": "1c828651-1848-4db4-af2f-aee34889d1a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522054420,
        "parent_id": "e2d1a824-6498-4f46-96c7-45a11fe43aa5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::vector\u003cint\u003e(v).swap(v);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::vector\u003cint\u003e(v).swap(v);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522054420,
        "id": "a8f4b9fb-1215-40c3-b9c6-f99bfe36f409",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522054420,
        "parent_id": "e2d1a824-6498-4f46-96c7-45a11fe43aa5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In C++11 we can use the "
            ],
            [
              "shrink_to_fit()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " member function for a similar effect:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In C++11 we can use the "
          },
          {
            "Text": "shrink_to_fit()",
            "AttrFlags": 2
          },
          {
            "Text": " member function for a similar effect:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522054420,
        "id": "476e05d7-db61-4fc6-abe2-bb3fbefdc2b7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522054420,
        "parent_id": "e2d1a824-6498-4f46-96c7-45a11fe43aa5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "v.shrink_to_fit();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "v.shrink_to_fit();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522054420,
        "id": "14263766-7796-4a0a-96ce-382f780a6ee7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522054420,
        "parent_id": "e2d1a824-6498-4f46-96c7-45a11fe43aa5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: The "
            ],
            [
              "shrink_to_fit()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " member function is a request and doesn’t guarantee to reduce capacity."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: The "
          },
          {
            "Text": "shrink_to_fit()",
            "AttrFlags": 2
          },
          {
            "Text": " member function is a request and doesn’t guarantee to reduce capacity."
          }
        ]
      }
    ],
    "title": "Reducing the Capacity of a Vector",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}