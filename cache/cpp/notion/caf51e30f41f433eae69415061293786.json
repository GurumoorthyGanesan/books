{
  "ID": "caf51e30-f41f-433e-ae69-415061293786",
  "Root": {
    "alive": true,
    "content": [
      "3c81152a-66b8-4bbe-bd9d-b9647c050709",
      "505dba25-73f7-4dcf-8f3b-17f64931c500",
      "ab174f20-b8a7-4be5-9f97-f93122bf7676",
      "bb11be40-0f5f-417a-8a81-f68ab25e1826",
      "bbd369ee-9f2f-447e-b58f-7dd1ab992c1e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550524297757,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "caf51e30-f41f-433e-ae69-415061293786",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550800680000,
    "parent_id": "c0487639-ff5b-4e90-a0b3-9fe411676c2c",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "this Pointer Ref-Qualifiers"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524297752,
        "id": "3c81152a-66b8-4bbe-bd9d-b9647c050709",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524297752,
        "parent_id": "caf51e30-f41f-433e-ae69-415061293786",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Similarly to "
            ],
            [
              "this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " cv-qualifiers, we can also apply "
            ],
            [
              "ref-qualifiers",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "*this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Ref-qualifiers are used to choose between normal and rvalue reference semantics, allowing the compiler to use either copy or move semantics depending on which are more appropriate, and are applied to "
            ],
            [
              "*this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instead of "
            ],
            [
              "this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Similarly to "
          },
          {
            "Text": "this",
            "AttrFlags": 2
          },
          {
            "Text": " cv-qualifiers, we can also apply "
          },
          {
            "Text": "ref-qualifiers",
            "AttrFlags": 4
          },
          {
            "Text": " to "
          },
          {
            "Text": "*this",
            "AttrFlags": 2
          },
          {
            "Text": ". Ref-qualifiers are used to choose between normal and rvalue reference semantics, allowing the compiler to use either copy or move semantics depending on which are more appropriate, and are applied to "
          },
          {
            "Text": "*this",
            "AttrFlags": 2
          },
          {
            "Text": " instead of "
          },
          {
            "Text": "this",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524297754,
        "id": "505dba25-73f7-4dcf-8f3b-17f64931c500",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524297754,
        "parent_id": "caf51e30-f41f-433e-ae69-415061293786",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that despite ref-qualifiers using reference syntax, "
            ],
            [
              "this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " itself is still a pointer. Also note that ref-qualifiers don’t actually change the type of "
            ],
            [
              "*this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "; it’s just easier to describe and understand their effects by looking at them as if they did."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that despite ref-qualifiers using reference syntax, "
          },
          {
            "Text": "this",
            "AttrFlags": 2
          },
          {
            "Text": " itself is still a pointer. Also note that ref-qualifiers don’t actually change the type of "
          },
          {
            "Text": "*this",
            "AttrFlags": 2
          },
          {
            "Text": "; it’s just easier to describe and understand their effects by looking at them as if they did."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524297755,
        "id": "ab174f20-b8a7-4be5-9f97-f93122bf7676",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550800680000,
        "parent_id": "caf51e30-f41f-433e-ae69-415061293786",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "struct RefQualifiers {\n    std::string s;\n\n    RefQualifiers(const std::string\u0026 ss = \"The nameless one.\") : s(ss) {}\n\n    // Normal version.\n    void func() \u0026  { std::cout \u003c\u003c \"Accessed on normal instance \"    \u003c\u003c s \u003c\u003c std::endl; }\n    // Rvalue version.\n    void func() \u0026\u0026 { std::cout \u003c\u003c \"Accessed on temporary instance \" \u003c\u003c s \u003c\u003c std::endl; }\n\n    const std::string\u0026 still_a_pointer() \u0026  { return this-\u003es; }\n    const std::string\u0026 still_a_pointer() \u0026\u0026 { this-\u003es = \"Bob\"; return this-\u003es; }\n};\n\n// ...\n\nRefQualifiers rf(\"Fred\");\nrf.func();              // Output:  Accessed on normal instance Fred\nRefQualifiers{}.func(); // Output:  Accessed on temporary instance The nameless one"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "struct RefQualifiers {\n    std::string s;\n\n    RefQualifiers(const std::string\u0026 ss = \"The nameless one.\") : s(ss) {}\n\n    // Normal version.\n    void func() \u0026  { std::cout \u003c\u003c \"Accessed on normal instance \"    \u003c\u003c s \u003c\u003c std::endl; }\n    // Rvalue version.\n    void func() \u0026\u0026 { std::cout \u003c\u003c \"Accessed on temporary instance \" \u003c\u003c s \u003c\u003c std::endl; }\n\n    const std::string\u0026 still_a_pointer() \u0026  { return this-\u003es; }\n    const std::string\u0026 still_a_pointer() \u0026\u0026 { this-\u003es = \"Bob\"; return this-\u003es; }\n};\n\n// ...\n\nRefQualifiers rf(\"Fred\");\nrf.func();              // Output:  Accessed on normal instance Fred\nRefQualifiers{}.func(); // Output:  Accessed on temporary instance The nameless one",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524297757,
        "id": "bb11be40-0f5f-417a-8a81-f68ab25e1826",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524297757,
        "parent_id": "caf51e30-f41f-433e-ae69-415061293786",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A member function cannot have overloads both with and without ref-qualifiers; the programmer has to choose between one or the other. Thankfully, cv-qualifiers can be used in conjunction with ref-qualifiers, allowing "
            ],
            [
              "const",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/7217/const-correctness#t=201610111809376589726"
                ]
              ]
            ],
            [
              " correctness",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/7217/const-correctness#t=201610111809376589726"
                ]
              ]
            ],
            [
              " rules to be followed."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A member function cannot have overloads both with and without ref-qualifiers; the programmer has to choose between one or the other. Thankfully, cv-qualifiers can be used in conjunction with ref-qualifiers, allowing "
          },
          {
            "Text": "const",
            "AttrFlags": 2,
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/7217/const-correctness#t=201610111809376589726"
          },
          {
            "Text": " correctness",
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/7217/const-correctness#t=201610111809376589726"
          },
          {
            "Text": " rules to be followed."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524297757,
        "id": "bbd369ee-9f2f-447e-b58f-7dd1ab992c1e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550800680000,
        "parent_id": "caf51e30-f41f-433e-ae69-415061293786",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "struct RefCV {\n    void func() \u0026                {}\n    void func() \u0026\u0026               {}\n    void func() const\u0026           {}\n    void func() const\u0026\u0026          {}\n    void func() volatile\u0026        {}\n    void func() volatile\u0026\u0026       {}\n    void func() const volatile\u0026  {}\n    void func() const volatile\u0026\u0026 {}\n};"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "struct RefCV {\n    void func() \u0026                {}\n    void func() \u0026\u0026               {}\n    void func() const\u0026           {}\n    void func() const\u0026\u0026          {}\n    void func() volatile\u0026        {}\n    void func() volatile\u0026\u0026       {}\n    void func() const volatile\u0026  {}\n    void func() const volatile\u0026\u0026 {}\n};",
        "code_language": "C++"
      }
    ],
    "title": "this Pointer Ref-Qualifiers",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}