{
  "ID": "0dadbcda-9ae4-4181-b1a1-34b5b48e0a86",
  "Root": {
    "alive": true,
    "content": [
      "07a3fb30-4bc5-4dea-b189-2da1a91ecd60",
      "690ba7ce-eea1-4382-b9f4-8ddb5fcef6da",
      "48c6ddae-45a1-4c22-8a12-ac1700a9ca7e",
      "7710b89c-9f7f-4332-ba85-8192ed31f0cc",
      "53116992-19a1-485b-8e87-bf8d221261ce",
      "53ec8d6e-0ed7-4693-bca8-f1ef2debd239",
      "28d70548-db58-48b4-be03-734d225b1b3d",
      "1496bec3-240b-40ad-86b8-210ebe0ca1af",
      "f5d7297c-26dc-4386-bf91-7e7ac66318fb"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522661588,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "0dadbcda-9ae4-4181-b1a1-34b5b48e0a86",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550710320000,
    "parent_id": "6c5aa9dd-7698-4690-bd9e-644763376917",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Modifying a const object"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522661585,
        "id": "07a3fb30-4bc5-4dea-b189-2da1a91ecd60",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522661585,
        "parent_id": "0dadbcda-9ae4-4181-b1a1-34b5b48e0a86",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Any attempt to modify a "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object results in undefined behavior. This applies to "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variables, members of "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " objects, and class members declared "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". (However, a "
            ],
            [
              "mutable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " member of a "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object is not "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ".)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Any attempt to modify a "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " object results in undefined behavior. This applies to "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " variables, members of "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " objects, and class members declared "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": ". (However, a "
          },
          {
            "Text": "mutable",
            "AttrFlags": 2
          },
          {
            "Text": " member of a "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " object is not "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": ".)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522661586,
        "id": "690ba7ce-eea1-4382-b9f4-8ddb5fcef6da",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522661586,
        "parent_id": "0dadbcda-9ae4-4181-b1a1-34b5b48e0a86",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Such an attempt can be made through "
            ],
            [
              "const_cast",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Such an attempt can be made through "
          },
          {
            "Text": "const_cast",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522661586,
        "id": "48c6ddae-45a1-4c22-8a12-ac1700a9ca7e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550710320000,
        "parent_id": "0dadbcda-9ae4-4181-b1a1-34b5b48e0a86",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "const int x = 123;\nconst_cast\u003cint\u0026\u003e(x) = 456;\nstd::cout \u003c\u003c x \u003c\u003c '\\n';"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "const int x = 123;\nconst_cast\u003cint\u0026\u003e(x) = 456;\nstd::cout \u003c\u003c x \u003c\u003c '\\n';",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522661587,
        "id": "7710b89c-9f7f-4332-ba85-8192ed31f0cc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522661587,
        "parent_id": "0dadbcda-9ae4-4181-b1a1-34b5b48e0a86",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A compiler will usually inline the value of a "
            ],
            [
              "const int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object, so it’s possible that this code compiles and prints "
            ],
            [
              "123",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Compilers can also place "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " objects’ values in read-only memory, so a segmentation fault may occur. In any case, the behavior is undefined and the program might do anything."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A compiler will usually inline the value of a "
          },
          {
            "Text": "const int",
            "AttrFlags": 2
          },
          {
            "Text": " object, so it’s possible that this code compiles and prints "
          },
          {
            "Text": "123",
            "AttrFlags": 2
          },
          {
            "Text": ". Compilers can also place "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " objects’ values in read-only memory, so a segmentation fault may occur. In any case, the behavior is undefined and the program might do anything."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522661587,
        "id": "53116992-19a1-485b-8e87-bf8d221261ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522661587,
        "parent_id": "0dadbcda-9ae4-4181-b1a1-34b5b48e0a86",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following program conceals a far more subtle error:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following program conceals a far more subtle error:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522661587,
        "id": "53ec8d6e-0ed7-4693-bca8-f1ef2debd239",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550710320000,
        "parent_id": "0dadbcda-9ae4-4181-b1a1-34b5b48e0a86",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "#include \u003ciostream\u003e\n\nclass Foo* instance;\n\nclass Foo {\n  public:\n    int get_x() const { return m_x; }\n    void set_x(int x) { m_x = x; }\n  private:\n    Foo(int x, Foo*\u0026 this_ref): m_x(x) {\n        this_ref = this;\n    }\n    int m_x;\n    friend const Foo\u0026 getFoo();\n};\n\nconst Foo\u0026 getFoo() {\n    static const Foo foo(123, instance);\n    return foo;\n}\n\nvoid do_evil(int x) {\n    instance-\u003eset_x(x);\n}\n\nint main() {\n    const Foo\u0026 foo = getFoo();\n    do_evil(456);\n    std::cout \u003c\u003c foo.get_x() \u003c\u003c '\\n';\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "#include \u003ciostream\u003e\n\nclass Foo* instance;\n\nclass Foo {\n  public:\n    int get_x() const { return m_x; }\n    void set_x(int x) { m_x = x; }\n  private:\n    Foo(int x, Foo*\u0026 this_ref): m_x(x) {\n        this_ref = this;\n    }\n    int m_x;\n    friend const Foo\u0026 getFoo();\n};\n\nconst Foo\u0026 getFoo() {\n    static const Foo foo(123, instance);\n    return foo;\n}\n\nvoid do_evil(int x) {\n    instance-\u003eset_x(x);\n}\n\nint main() {\n    const Foo\u0026 foo = getFoo();\n    do_evil(456);\n    std::cout \u003c\u003c foo.get_x() \u003c\u003c '\\n';\n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522661587,
        "id": "28d70548-db58-48b4-be03-734d225b1b3d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522661587,
        "parent_id": "0dadbcda-9ae4-4181-b1a1-34b5b48e0a86",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this code, "
            ],
            [
              "getFoo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " creates a singleton of type "
            ],
            [
              "const Foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and its member "
            ],
            [
              "m_x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is initialized to "
            ],
            [
              "123",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Then "
            ],
            [
              "do_evil",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is called and the value of "
            ],
            [
              "foo.m_x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is apparently changed to 456. What went wrong?"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this code, "
          },
          {
            "Text": "getFoo",
            "AttrFlags": 2
          },
          {
            "Text": " creates a singleton of type "
          },
          {
            "Text": "const Foo",
            "AttrFlags": 2
          },
          {
            "Text": " and its member "
          },
          {
            "Text": "m_x",
            "AttrFlags": 2
          },
          {
            "Text": " is initialized to "
          },
          {
            "Text": "123",
            "AttrFlags": 2
          },
          {
            "Text": ". Then "
          },
          {
            "Text": "do_evil",
            "AttrFlags": 2
          },
          {
            "Text": " is called and the value of "
          },
          {
            "Text": "foo.m_x",
            "AttrFlags": 2
          },
          {
            "Text": " is apparently changed to 456. What went wrong?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522661588,
        "id": "1496bec3-240b-40ad-86b8-210ebe0ca1af",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522661588,
        "parent_id": "0dadbcda-9ae4-4181-b1a1-34b5b48e0a86",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Despite its name, "
            ],
            [
              "do_evil",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " does nothing particularly evil; all it does is call a setter through a "
            ],
            [
              "Foo*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". But that pointer points to a "
            ],
            [
              "const Foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object even though "
            ],
            [
              "const_cast",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " was not used. This pointer was obtained through "
            ],
            [
              "Foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "’s constructor. A "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object does not become "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " until its initialization is complete, so "
            ],
            [
              "this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has type "
            ],
            [
              "Foo*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", not "
            ],
            [
              "const Foo*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", within the constructor."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Despite its name, "
          },
          {
            "Text": "do_evil",
            "AttrFlags": 2
          },
          {
            "Text": " does nothing particularly evil; all it does is call a setter through a "
          },
          {
            "Text": "Foo*",
            "AttrFlags": 2
          },
          {
            "Text": ". But that pointer points to a "
          },
          {
            "Text": "const Foo",
            "AttrFlags": 2
          },
          {
            "Text": " object even though "
          },
          {
            "Text": "const_cast",
            "AttrFlags": 2
          },
          {
            "Text": " was not used. This pointer was obtained through "
          },
          {
            "Text": "Foo",
            "AttrFlags": 2
          },
          {
            "Text": "’s constructor. A "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " object does not become "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " until its initialization is complete, so "
          },
          {
            "Text": "this",
            "AttrFlags": 2
          },
          {
            "Text": " has type "
          },
          {
            "Text": "Foo*",
            "AttrFlags": 2
          },
          {
            "Text": ", not "
          },
          {
            "Text": "const Foo*",
            "AttrFlags": 2
          },
          {
            "Text": ", within the constructor."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522661588,
        "id": "f5d7297c-26dc-4386-bf91-7e7ac66318fb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522661588,
        "parent_id": "0dadbcda-9ae4-4181-b1a1-34b5b48e0a86",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Therefore, undefined behavior occurs even though there are no obviously dangerous constructs in this program."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Therefore, undefined behavior occurs even though there are no obviously dangerous constructs in this program."
          }
        ]
      }
    ],
    "title": "Modifying a const object",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}