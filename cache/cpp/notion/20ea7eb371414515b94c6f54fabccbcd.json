{
  "ID": "20ea7eb3-7141-4515-b94c-6f54fabccbcd",
  "Root": {
    "alive": true,
    "content": [
      "c61420c3-4916-4ef0-995b-e9a51c4583c2",
      "04fa38ef-0221-43e8-8e0f-8c92fcd72d9a",
      "cf4433e1-e64e-46a0-9cc8-892ac42fa5e0"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550524645467,
    "id": "20ea7eb3-7141-4515-b94c-6f54fabccbcd",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550524645467,
    "parent_id": "f6fb0c70-b2a7-438e-8fd0-214354d4363c",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "000 Literals"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524645464,
        "id": "c61420c3-4916-4ef0-995b-e9a51c4583c2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524645464,
        "parent_id": "20ea7eb3-7141-4515-b94c-6f54fabccbcd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524645465,
        "id": "04fa38ef-0221-43e8-8e0f-8c92fcd72d9a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524645465,
        "parent_id": "20ea7eb3-7141-4515-b94c-6f54fabccbcd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Traditionally, a literal is an expression denoting a constant whose type and value are evident from its spelling. For example, "
            ],
            [
              "42",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a literal, while "
            ],
            [
              "x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not since one must see its declaration to know its type and read previous lines of code to know its value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Traditionally, a literal is an expression denoting a constant whose type and value are evident from its spelling. For example, "
          },
          {
            "Text": "42",
            "AttrFlags": 2
          },
          {
            "Text": " is a literal, while "
          },
          {
            "Text": "x",
            "AttrFlags": 2
          },
          {
            "Text": " is not since one must see its declaration to know its type and read previous lines of code to know its value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524645467,
        "id": "cf4433e1-e64e-46a0-9cc8-892ac42fa5e0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524645467,
        "parent_id": "20ea7eb3-7141-4515-b94c-6f54fabccbcd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, C++11 also added "
            ],
            [
              "user-defined literals",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/2745/user-defined-literals"
                ]
              ]
            ],
            [
              ", which are not literals in the traditional sense but can be used as a shorthand for function calls."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, C++11 also added "
          },
          {
            "Text": "user-defined literals",
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/2745/user-defined-literals"
          },
          {
            "Text": ", which are not literals in the traditional sense but can be used as a shorthand for function calls."
          }
        ]
      }
    ],
    "title": "000 Literals"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}