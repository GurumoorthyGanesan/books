{
  "ID": "ea76bc17-ce89-467b-a797-7edc609c2531",
  "Root": {
    "alive": true,
    "content": [
      "a73a85cc-c373-4204-90c4-afe326b12af9",
      "96be03b7-1a5b-446f-aa92-7238551396a4"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523464509,
    "id": "ea76bc17-ce89-467b-a797-7edc609c2531",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550523464509,
    "parent_id": "289db939-0630-4d39-8987-cd9042ba485d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Lambda expressions"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523464506,
        "id": "a73a85cc-c373-4204-90c4-afe326b12af9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523464506,
        "parent_id": "ea76bc17-ce89-467b-a797-7edc609c2531",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A lambda can "
            ],
            [
              "only",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " have a trailing return type; the leading return type syntax is not applicable to lambdas. Note that in many cases it is not necessary to specify a return type for a lambda at all."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A lambda can "
          },
          {
            "Text": "only",
            "AttrFlags": 4
          },
          {
            "Text": " have a trailing return type; the leading return type syntax is not applicable to lambdas. Note that in many cases it is not necessary to specify a return type for a lambda at all."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523464509,
        "id": "96be03b7-1a5b-446f-aa92-7238551396a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523464509,
        "parent_id": "ea76bc17-ce89-467b-a797-7edc609c2531",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct Base {};\nstruct Derived1 : Base {};\nstruct Derived2 : Base {};\nauto lambda = [](bool b) -\u003e Base* { if (b) return new Derived1; else return new Derived2; };\n// ill-formed: auto lambda = Base* [](bool b) { ... };"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct Base {};\nstruct Derived1 : Base {};\nstruct Derived2 : Base {};\nauto lambda = [](bool b) -\u003e Base* { if (b) return new Derived1; else return new Derived2; };\n// ill-formed: auto lambda = Base* [](bool b) { ... };",
        "code_language": "Plain Text"
      }
    ],
    "title": "020 Lambda expressions"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}