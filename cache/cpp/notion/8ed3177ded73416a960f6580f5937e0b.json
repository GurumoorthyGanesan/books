{
  "ID": "8ed3177d-ed73-416a-960f-6580f5937e0b",
  "Root": {
    "alive": true,
    "content": [
      "fce66495-ee1b-4670-bb9c-c00abc94b751",
      "cac6ca70-bc21-47c1-90d5-8dfd9ffea2e9",
      "a2eb3e26-4415-46ab-b542-fa6c31472f96",
      "5fca275d-06fe-4e97-8a9f-884fbfc5c7e2",
      "7e599b2f-0c30-48e4-a656-8593000a3b06",
      "622522c5-80e7-494b-b449-4c39f121de47",
      "e0aa99ce-46a6-4a90-9a93-646a7292178b",
      "2876746f-bd6f-4592-bd5f-db66455ea175",
      "7597cd21-063a-4883-873c-26ef6ef704da",
      "daa4b576-a279-44ea-a4f5-b8ebe9ea9586",
      "97600f6b-1a3c-4893-b57b-5fa2e406b65e",
      "dcef1942-914c-438b-b06a-098d63438f90",
      "645d014d-1277-4afe-91e3-87a7dfad4d1b",
      "ce8e89d8-e31c-47cf-904b-a63390d65609",
      "c7fbc188-b613-4fd2-ab9f-80cf10ccd20d",
      "116208f8-42ff-48b0-be80-a6691c875103",
      "ea6aa8a6-98fb-46ad-8e8e-6fae43dea0d5",
      "a07eafc9-0211-40c3-95ee-c4a27b4bb1f7",
      "33f2419d-e829-4d18-937f-5ca815ca88dd",
      "513c7435-4cdd-450c-b7f0-dc804407efbe",
      "aab48b9c-ca05-46cd-b84f-b4af652f0a5f",
      "75093dbc-7f05-44f6-869e-f5505f3b337a",
      "ae68c085-c11b-44f7-8973-02fae6df7218",
      "24f466b2-d57a-4372-9edb-6724bf6d45de",
      "8ae77f31-f6b3-4710-9c36-3560086c01ec",
      "25b20662-1edf-413d-81b3-ffe5022fea41",
      "030ff5c8-97a4-4aa4-b72c-b0a08fb065a7",
      "7c3d4a64-1f74-423b-a51d-d9f2772b24b1",
      "61d72594-aaba-4a3a-a9de-4a9037096b90",
      "17ee5683-c5be-4cb0-8951-02a20aa4ad17",
      "49681d4d-591e-44d1-a192-39b7139c45c0",
      "ca669c1b-ef32-4a09-82b6-61bc7ed7a2a8",
      "10c7a909-5701-46af-b334-d672d6e0c341",
      "4224a1e7-17fa-4d1a-aaf7-3812e8af64b2",
      "1108e9ff-69cf-4cc6-be08-f964b5cc76f8",
      "22819dfb-4ad1-4042-b0da-fd6902d49522",
      "144df9d0-d515-4a68-83b3-3d4f50724cc0",
      "9a203ed4-89f6-44f4-9c32-ab6deb691380",
      "fd103b15-942c-4b30-951f-70335edef28a",
      "632b2d47-6d58-4f83-b554-20cbbdc2d936",
      "a262c462-543b-46c7-9b07-e577f375eedd",
      "f2d57e2b-d429-4d11-a406-8abd5e63f86f",
      "e9fababa-7a8a-4348-9f0f-521928ea90a5",
      "916190b3-b4d6-4fe1-9ef5-fd5315af0ca1",
      "8e5da09c-380d-4255-b9a6-fb40bee67515",
      "d319b04b-ad50-407c-a97e-0f7ea7af147d",
      "f5a003ab-70b1-4218-a365-a97f1ac4c04a",
      "95ac984c-7d75-419b-b0b1-f7b2acea207a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550521937498,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550734980000,
    "parent_id": "069713c9-355d-43e5-bbe3-fe65ccc5d89f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Function"
        ]
      ]
    },
    "type": "page",
    "version": 13,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937485,
        "id": "fce66495-ee1b-4670-bb9c-c00abc94b751",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937485,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A "
            ],
            [
              "function",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " is a unit of code that represents a sequence of statements."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A "
          },
          {
            "Text": "function",
            "AttrFlags": 1
          },
          {
            "Text": " is a unit of code that represents a sequence of statements."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937488,
        "id": "cac6ca70-bc21-47c1-90d5-8dfd9ffea2e9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937488,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Functions can accept "
            ],
            [
              "arguments",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " or values and "
            ],
            [
              "return",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " a single value (or not). To use a function, a "
            ],
            [
              "function call",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " is used on argument values and the use of the function call itself is replaced with its return value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Functions can accept "
          },
          {
            "Text": "arguments",
            "AttrFlags": 1
          },
          {
            "Text": " or values and "
          },
          {
            "Text": "return",
            "AttrFlags": 1
          },
          {
            "Text": " a single value (or not). To use a function, a "
          },
          {
            "Text": "function call",
            "AttrFlags": 1
          },
          {
            "Text": " is used on argument values and the use of the function call itself is replaced with its return value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937488,
        "id": "a2eb3e26-4415-46ab-b542-fa6c31472f96",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937488,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Every function has a "
            ],
            [
              "type signature",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " – the types of its arguments and the type of its return type."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Every function has a "
          },
          {
            "Text": "type signature",
            "AttrFlags": 1
          },
          {
            "Text": " – the types of its arguments and the type of its return type."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937488,
        "id": "5fca275d-06fe-4e97-8a9f-884fbfc5c7e2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937488,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Functions are inspired by the concepts of the procedure and the mathematical function."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Functions are inspired by the concepts of the procedure and the mathematical function."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937489,
        "id": "7e599b2f-0c30-48e4-a656-8593000a3b06",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937489,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: C++ functions are essentially procedures and do not follow the exact definition or rules of mathematical functions."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: C++ functions are essentially procedures and do not follow the exact definition or rules of mathematical functions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937489,
        "id": "622522c5-80e7-494b-b449-4c39f121de47",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937489,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Functions are often meant to perform a specific task. and can be called from other parts of a program. A function must be declared and defined before it is called elsewhere in a program."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Functions are often meant to perform a specific task. and can be called from other parts of a program. A function must be declared and defined before it is called elsewhere in a program."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937489,
        "id": "e0aa99ce-46a6-4a90-9a93-646a7292178b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937489,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: popular function definitions may be hidden in other included files (often for convenience and reuse across many files). This is a common use of header files."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: popular function definitions may be hidden in other included files (often for convenience and reuse across many files). This is a common use of header files."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937489,
        "id": "2876746f-bd6f-4592-bd5f-db66455ea175",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937489,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Function Declaration"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Function Declaration"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937490,
        "id": "7597cd21-063a-4883-873c-26ef6ef704da",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937490,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A "
            ],
            [
              "function declaration",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " is declares the existence of a function with its name and type signature to the compiler. The syntax is as the following:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A "
          },
          {
            "Text": "function declaration",
            "AttrFlags": 1
          },
          {
            "Text": " is declares the existence of a function with its name and type signature to the compiler. The syntax is as the following:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937490,
        "id": "daa4b576-a279-44ea-a4f5-b8ebe9ea9586",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550734680000,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "int add2(int i); // The function is of the type (int) -\u003e (int)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "int add2(int i); // The function is of the type (int) -\u003e (int)",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937490,
        "id": "97600f6b-1a3c-4893-b57b-5fa2e406b65e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937490,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the example above, the "
            ],
            [
              "int add2(int i)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function declares the following to the compiler:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the example above, the "
          },
          {
            "Text": "int add2(int i)",
            "AttrFlags": 2
          },
          {
            "Text": " function declares the following to the compiler:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937490,
        "id": "dcef1942-914c-438b-b06a-098d63438f90",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937490,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "return type",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " is "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "return type",
            "AttrFlags": 1
          },
          {
            "Text": " is "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937491,
        "id": "645d014d-1277-4afe-91e3-87a7dfad4d1b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937491,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "name",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " of the function is "
            ],
            [
              "add2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "name",
            "AttrFlags": 1
          },
          {
            "Text": " of the function is "
          },
          {
            "Text": "add2",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937491,
        "id": "ce8e89d8-e31c-47cf-904b-a63390d65609",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937491,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "number of arguments",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " to the function is 1:"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "number of arguments",
            "AttrFlags": 1
          },
          {
            "Text": " to the function is 1:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937491,
        "id": "c7fbc188-b613-4fd2-ab9f-80cf10ccd20d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937491,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The first argument is of the type "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The first argument is of the type "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937492,
        "id": "116208f8-42ff-48b0-be80-a6691c875103",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937492,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The first argument will be referred to in the function’s contents by the name "
            ],
            [
              "i",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The first argument will be referred to in the function’s contents by the name "
          },
          {
            "Text": "i",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937492,
        "id": "ea6aa8a6-98fb-46ad-8e8e-6fae43dea0d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937492,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The argument name is optional; the declaration for the function could also be the following:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The argument name is optional; the declaration for the function could also be the following:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937492,
        "id": "a07eafc9-0211-40c3-95ee-c4a27b4bb1f7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550734680000,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "int add2(int); // Omitting the function arguments' name is also permitted."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "int add2(int); // Omitting the function arguments' name is also permitted.",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937492,
        "id": "33f2419d-e829-4d18-937f-5ca815ca88dd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937492,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Per the "
            ],
            [
              "one-definition rule",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", a function with a certain type signature can only be declared or defined once in an entire C++ code base visible to the C++ compiler. In other words, functions with a specific type signature cannot be re-defined – they must only be defined once. Thus, the following is not valid C++:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Per the "
          },
          {
            "Text": "one-definition rule",
            "AttrFlags": 1
          },
          {
            "Text": ", a function with a certain type signature can only be declared or defined once in an entire C++ code base visible to the C++ compiler. In other words, functions with a specific type signature cannot be re-defined – they must only be defined once. Thus, the following is not valid C++:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937492,
        "id": "513c7435-4cdd-450c-b7f0-dc804407efbe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550734680000,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "int add2(int i);  // The compiler will note that add2 is a function (int) -\u003e int\nint add2(int j);  // As add2 already has a definition of (int) -\u003e int, the compiler\n                  // will regard this as an error."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "int add2(int i);  // The compiler will note that add2 is a function (int) -\u003e int\nint add2(int j);  // As add2 already has a definition of (int) -\u003e int, the compiler\n                  // will regard this as an error.",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937492,
        "id": "aab48b9c-ca05-46cd-b84f-b4af652f0a5f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937492,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If a function returns nothing, its return type is written as "
            ],
            [
              "void",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". If it takes no parameters, the parameter list should be empty."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If a function returns nothing, its return type is written as "
          },
          {
            "Text": "void",
            "AttrFlags": 2
          },
          {
            "Text": ". If it takes no parameters, the parameter list should be empty."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937492,
        "id": "75093dbc-7f05-44f6-869e-f5505f3b337a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550734680000,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "void do_something(); // The function takes no parameters, and does not return anything.\n                     // Note that it can still affect variables it has access to."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "void do_something(); // The function takes no parameters, and does not return anything.\n                     // Note that it can still affect variables it has access to.",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937492,
        "id": "ae68c085-c11b-44f7-8973-02fae6df7218",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937492,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Function Call"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Function Call"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937493,
        "id": "24f466b2-d57a-4372-9edb-6724bf6d45de",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937493,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A function can be called after it has been declared. For example, the following program calls "
            ],
            [
              "add2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with the value of "
            ],
            [
              "2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " within the function of "
            ],
            [
              "main",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A function can be called after it has been declared. For example, the following program calls "
          },
          {
            "Text": "add2",
            "AttrFlags": 2
          },
          {
            "Text": " with the value of "
          },
          {
            "Text": "2",
            "AttrFlags": 2
          },
          {
            "Text": " within the function of "
          },
          {
            "Text": "main",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937493,
        "id": "8ae77f31-f6b3-4710-9c36-3560086c01ec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550734680000,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "#include \u003ciostream\u003e\n\nint add2(int i);    // Declaration of add2\n\n// Note: add2 is still missing a DEFINITION.\n// Even though it doesn't appear directly in code,\n// add2's definition may be LINKED in from another object file.\n\nint main()\n{\n    std::cout \u003c\u003c add2(2) \u003c\u003c \"\\n\";  // add2(2) will be evaluated at this point,\n                                   // and the result is printed.\n    return 0;  \n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "#include \u003ciostream\u003e\n\nint add2(int i);    // Declaration of add2\n\n// Note: add2 is still missing a DEFINITION.\n// Even though it doesn't appear directly in code,\n// add2's definition may be LINKED in from another object file.\n\nint main()\n{\n    std::cout \u003c\u003c add2(2) \u003c\u003c \"\\n\";  // add2(2) will be evaluated at this point,\n                                   // and the result is printed.\n    return 0;  \n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937493,
        "id": "25b20662-1edf-413d-81b3-ffe5022fea41",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937493,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here, "
            ],
            [
              "add2(2)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the syntax for a function call."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here, "
          },
          {
            "Text": "add2(2)",
            "AttrFlags": 2
          },
          {
            "Text": " is the syntax for a function call."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937493,
        "id": "030ff5c8-97a4-4aa4-b72c-b0a08fb065a7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937493,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Function Definition"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Function Definition"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937494,
        "id": "7c3d4a64-1f74-423b-a51d-d9f2772b24b1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937494,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A "
            ],
            [
              "function definition",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "* is similar to a declaration, except it also contains the code that is executed when the function is called within its body."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A "
          },
          {
            "Text": "function definition",
            "AttrFlags": 4
          },
          {
            "Text": "* is similar to a declaration, except it also contains the code that is executed when the function is called within its body."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937494,
        "id": "61d72594-aaba-4a3a-a9de-4a9037096b90",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937494,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An example of a function definition for "
            ],
            [
              "add2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " might be:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An example of a function definition for "
          },
          {
            "Text": "add2",
            "AttrFlags": 2
          },
          {
            "Text": " might be:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937494,
        "id": "17ee5683-c5be-4cb0-8951-02a20aa4ad17",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550734680000,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "int add2(int i)       // Data that is passed into (int i) will be referred to by the name i\n{                     // while in the function's curly brackets or \"scope.\"\n                    \n    int j = i + 2;    // Definition of a variable j as the value of i+2.\n    return j;         // Returning or, in essence, substitution of j for a function call to\n                      // add2.\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "int add2(int i)       // Data that is passed into (int i) will be referred to by the name i\n{                     // while in the function's curly brackets or \"scope.\"\n                    \n    int j = i + 2;    // Definition of a variable j as the value of i+2.\n    return j;         // Returning or, in essence, substitution of j for a function call to\n                      // add2.\n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937494,
        "id": "49681d4d-591e-44d1-a192-39b7139c45c0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937494,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Function Overloading"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Function Overloading"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937494,
        "id": "ca669c1b-ef32-4a09-82b6-61bc7ed7a2a8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937494,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can create multiple functions with the same name but different parameters."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can create multiple functions with the same name but different parameters."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937494,
        "id": "10c7a909-5701-46af-b334-d672d6e0c341",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550734680000,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "int add2(int i)           // Code contained in this definition will be evaluated\n{                         // when add2() is called with one parameter.\n    int j = i + 2;\n    return j;\n}\n\nint add2(int i, int j)    // However, when add2() is called with two parameters, the\n{                         // code from the initial declaration will be overloaded,\n    int k = i + j + 2 ;   // and the code in this declaration will be evaluated\n    return k;             // instead.\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "int add2(int i)           // Code contained in this definition will be evaluated\n{                         // when add2() is called with one parameter.\n    int j = i + 2;\n    return j;\n}\n\nint add2(int i, int j)    // However, when add2() is called with two parameters, the\n{                         // code from the initial declaration will be overloaded,\n    int k = i + j + 2 ;   // and the code in this declaration will be evaluated\n    return k;             // instead.\n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937495,
        "id": "4224a1e7-17fa-4d1a-aaf7-3812e8af64b2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937495,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Both functions are called by the same name "
            ],
            [
              "add2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", but the actual function that is called depends directly on the amount and type of the parameters in the call. In most cases, the C++ compiler can compute which function to call. In some cases, the type must be explicitly stated."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Both functions are called by the same name "
          },
          {
            "Text": "add2",
            "AttrFlags": 2
          },
          {
            "Text": ", but the actual function that is called depends directly on the amount and type of the parameters in the call. In most cases, the C++ compiler can compute which function to call. In some cases, the type must be explicitly stated."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937495,
        "id": "1108e9ff-69cf-4cc6-be08-f964b5cc76f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937495,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Default Parameters"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Default Parameters"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937495,
        "id": "22819dfb-4ad1-4042-b0da-fd6902d49522",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937495,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Default values for function parameters can only be specified in function declarations."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Default values for function parameters can only be specified in function declarations."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937495,
        "id": "144df9d0-d515-4a68-83b3-3d4f50724cc0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550734740000,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "int multiply(int a, int b = 7); // b has default value of 7.\nint multiply(int a, int b)\n{\n    return a * b;               // If multiply() is called with one parameter, the\n}                               // value will be multiplied by the default, 7."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "int multiply(int a, int b = 7); // b has default value of 7.\nint multiply(int a, int b)\n{\n    return a * b;               // If multiply() is called with one parameter, the\n}                               // value will be multiplied by the default, 7.",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937496,
        "id": "9a203ed4-89f6-44f4-9c32-ab6deb691380",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937496,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example, "
            ],
            [
              "multiply()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be called with one or two parameters. If only one parameter is given, "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will have default value of 7. Default arguments must be placed in the latter arguments of the function. For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example, "
          },
          {
            "Text": "multiply()",
            "AttrFlags": 2
          },
          {
            "Text": " can be called with one or two parameters. If only one parameter is given, "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": " will have default value of 7. Default arguments must be placed in the latter arguments of the function. For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937496,
        "id": "fd103b15-942c-4b30-951f-70335edef28a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550734740000,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "int multiply(int a = 10, int b = 20); // This is legal \nint multiply(int a = 10, int b);      // This is illegal since int a is in the former"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "int multiply(int a = 10, int b = 20); // This is legal \nint multiply(int a = 10, int b);      // This is illegal since int a is in the former",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937496,
        "id": "632b2d47-6d58-4f83-b554-20cbbdc2d936",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937496,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Special Function Calls - Operators"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Special Function Calls - Operators"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937496,
        "id": "a262c462-543b-46c7-9b07-e577f375eedd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937496,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There exist special function calls in C++ which have different syntax than "
            ],
            [
              "name_of_function(value1, value2, value3)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The most common example is that of operators."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There exist special function calls in C++ which have different syntax than "
          },
          {
            "Text": "name_of_function(value1, value2, value3)",
            "AttrFlags": 2
          },
          {
            "Text": ". The most common example is that of operators."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937497,
        "id": "f2d57e2b-d429-4d11-a406-8abd5e63f86f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937497,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Certain special character sequences that will be reduced to function calls by the compiler, such as "
            ],
            [
              "\\!",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "\\+",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "\\-",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "\\*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "%",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and "
            ],
            [
              "\u003c\u003c",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and many more. These special characters are normally associated with non-programming usage or are used for aesthetics (e.g. the "
            ],
            [
              "\\+",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " character is commonly recognized as the addition symbol both within C++ programming as well as in elementary math)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Certain special character sequences that will be reduced to function calls by the compiler, such as "
          },
          {
            "Text": "\\!",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "\\+",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "\\-",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "\\*",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "%",
            "AttrFlags": 2
          },
          {
            "Text": ", and "
          },
          {
            "Text": "\u003c\u003c",
            "AttrFlags": 2
          },
          {
            "Text": " and many more. These special characters are normally associated with non-programming usage or are used for aesthetics (e.g. the "
          },
          {
            "Text": "\\+",
            "AttrFlags": 2
          },
          {
            "Text": " character is commonly recognized as the addition symbol both within C++ programming as well as in elementary math)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937497,
        "id": "e9fababa-7a8a-4348-9f0f-521928ea90a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937497,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C++ handles these character sequences with a special syntax; but, in essence, each occurrence of an operator is reduced to a function call. For example, the following C++ expression:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "C++ handles these character sequences with a special syntax; but, in essence, each occurrence of an operator is reduced to a function call. For example, the following C++ expression:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937497,
        "id": "916190b3-b4d6-4fe1-9ef5-fd5315af0ca1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550734740000,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "3+3"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "3+3",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937497,
        "id": "8e5da09c-380d-4255-b9a6-fb40bee67515",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937497,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "is equivalent to the following function call:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "is equivalent to the following function call:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937497,
        "id": "d319b04b-ad50-407c-a97e-0f7ea7af147d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550734740000,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "operator+(3, 3)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "operator+(3, 3)",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937497,
        "id": "f5a003ab-70b1-4218-a365-a97f1ac4c04a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937497,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All operator function names start with "
            ],
            [
              "operator",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All operator function names start with "
          },
          {
            "Text": "operator",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521937497,
        "id": "95ac984c-7d75-419b-b0b1-f7b2acea207a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521937497,
        "parent_id": "8ed3177d-ed73-416a-960f-6580f5937e0b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "While in C++’s immediate predecessor, C, operator function names cannot be assigned different meanings by providing additional definitions with different type signatures, in C++, this is valid. “Hiding” additional function definitions under one unique function name is referred to as "
            ],
            [
              "operator overloading",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " in C++, and is a relatively common, but not universal, convention in C++."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "While in C++’s immediate predecessor, C, operator function names cannot be assigned different meanings by providing additional definitions with different type signatures, in C++, this is valid. “Hiding” additional function definitions under one unique function name is referred to as "
          },
          {
            "Text": "operator overloading",
            "AttrFlags": 1
          },
          {
            "Text": " in C++, and is a relatively common, but not universal, convention in C++."
          }
        ]
      }
    ],
    "title": "Function",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}