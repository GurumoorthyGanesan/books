{
  "ID": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
  "Root": {
    "alive": true,
    "content": [
      "c4015092-1012-4509-86ef-e244ba68a775",
      "c54f34b3-6db0-4f00-b5f9-7f81776f6aca",
      "bab839a4-a482-4ae5-ad4d-dd6bb23d0cbc",
      "27e095f8-a64c-49bd-b023-1f2996c9af62",
      "97d81f00-4e30-4bac-bcea-b61f53ed5f38",
      "bcbbc153-d154-4112-ae24-71ec338d8cf7",
      "a22aa874-c37f-4549-bba8-66e0da9646ad",
      "d2addc38-73f8-44ac-8a51-3c4d6b34e71d",
      "16be0046-db67-4d95-8da5-001225f816d7",
      "29ec5584-09b9-4d45-b307-a7ceb040dfe4",
      "53cf237f-dde0-4a8e-bc22-88cf91b97bdf",
      "5dd3e27f-94b5-402e-9c70-3fb7f0d01dca",
      "3715a9ae-9098-4fc4-b1a9-20a7e4de9d84",
      "d5e0a0ba-99c0-4683-ae14-dc95a0f4b521",
      "4b15f164-fdab-4f5c-a693-704af247274c",
      "14d86542-b202-4a69-a145-aae7e4b76c1b",
      "1d6bdbc4-2210-4a2b-8645-776f2cdb8c8e",
      "a8015edb-ff8c-4d53-b355-e42f8941f9f3",
      "bf5fd1d3-6600-4587-8c8e-4907d0eaa4d8",
      "598d85d6-89b3-4be6-bba1-cbeaf6ad623a",
      "f0d19309-8907-4461-9bca-0d619cfcceb1",
      "4cc3eeee-0eea-4485-abe6-cdb10914e1b7"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523816947,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551687872887,
    "parent_id": "b7131d5c-8602-4af3-82a7-7c00e59ad384",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Standard type traits"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816921,
        "id": "c4015092-1012-4509-86ef-e244ba68a775",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816921,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C++11"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "C++11"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816923,
        "id": "c54f34b3-6db0-4f00-b5f9-7f81776f6aca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816923,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "type_traits",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " header contains a set of template classes and helpers to transform and check properties of types at compile-time."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "type_traits",
            "AttrFlags": 2
          },
          {
            "Text": " header contains a set of template classes and helpers to transform and check properties of types at compile-time."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816924,
        "id": "bab839a4-a482-4ae5-ad4d-dd6bb23d0cbc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816924,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These traits are typically used in templates to check for user errors, support generic programming, and allow for optimizations."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These traits are typically used in templates to check for user errors, support generic programming, and allow for optimizations."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816924,
        "id": "27e095f8-a64c-49bd-b023-1f2996c9af62",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816924,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816924,
        "id": "97d81f00-4e30-4bac-bcea-b61f53ed5f38",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816924,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Most type traits are used to check if a type fulfils some criteria. These have the following form:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Most type traits are used to check if a type fulfils some criteria. These have the following form:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816924,
        "id": "bcbbc153-d154-4112-ae24-71ec338d8cf7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816924,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "template \u003cclass T\u003e struct is_foo;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "template \u003cclass T\u003e struct is_foo;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816924,
        "id": "a22aa874-c37f-4549-bba8-66e0da9646ad",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816924,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the template class is instantiated with a type which fulfils some criteria "
            ],
            [
              "foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", then "
            ],
            [
              "is_foo\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " inherits from "
            ],
            [
              "std::integral_constant\u003cbool,true\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (a.k.a. "
            ],
            [
              "std::true_type",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "), otherwise it inherits from "
            ],
            [
              "std::integral_constant\u003cbool,false\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (a.k.a. "
            ],
            [
              "std::false_type",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "). This gives the trait the following members:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the template class is instantiated with a type which fulfils some criteria "
          },
          {
            "Text": "foo",
            "AttrFlags": 2
          },
          {
            "Text": ", then "
          },
          {
            "Text": "is_foo\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " inherits from "
          },
          {
            "Text": "std::integral_constant\u003cbool,true\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " (a.k.a. "
          },
          {
            "Text": "std::true_type",
            "AttrFlags": 2
          },
          {
            "Text": "), otherwise it inherits from "
          },
          {
            "Text": "std::integral_constant\u003cbool,false\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " (a.k.a. "
          },
          {
            "Text": "std::false_type",
            "AttrFlags": 2
          },
          {
            "Text": "). This gives the trait the following members:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816924,
        "id": "d2addc38-73f8-44ac-8a51-3c4d6b34e71d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816924,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Constants"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Constants"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816924,
        "id": "16be0046-db67-4d95-8da5-001225f816d7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816924,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "static constexpr bool value",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "static constexpr bool value",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816925,
        "id": "29ec5584-09b9-4d45-b307-a7ceb040dfe4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816925,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " fulfils the criteria "
            ],
            [
              "foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "false",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " otherwise"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": " if "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": " fulfils the criteria "
          },
          {
            "Text": "foo",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "false",
            "AttrFlags": 2
          },
          {
            "Text": " otherwise"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816925,
        "id": "53cf237f-dde0-4a8e-bc22-88cf91b97bdf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816925,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Functions"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Functions"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816925,
        "id": "5dd3e27f-94b5-402e-9c70-3fb7f0d01dca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816925,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "operator bool",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "operator bool",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816925,
        "id": "3715a9ae-9098-4fc4-b1a9-20a7e4de9d84",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816925,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Returns "
            ],
            [
              "value",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Returns "
          },
          {
            "Text": "value",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816925,
        "id": "d5e0a0ba-99c0-4683-ae14-dc95a0f4b521",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816925,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C++14"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "C++14"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816925,
        "id": "4b15f164-fdab-4f5c-a693-704af247274c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816925,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "bool operator()",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "bool operator()",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816925,
        "id": "14d86542-b202-4a69-a145-aae7e4b76c1b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816925,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Returns "
            ],
            [
              "value",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Returns "
          },
          {
            "Text": "value",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816925,
        "id": "1d6bdbc4-2210-4a2b-8645-776f2cdb8c8e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816925,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Types"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Types"
          }
        ]
      },
      {
        "alive": true,
        "collection_id": "4a7d2d23-04dc-4d85-9497-e94e5d431eda",
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816945,
        "id": "a8015edb-ff8c-4d53-b355-e42f8941f9f3",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816945,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "type": "collection_view",
        "version": 1,
        "view_ids": [
          "5139783e-9ba7-4a67-b62a-0c80230b1798"
        ],
        "collection_views": [
          {
            "CollectionView": {
              "id": "5139783e-9ba7-4a67-b62a-0c80230b1798",
              "alive": true,
              "format": {
                "table_properties": [
                  {
                    "width": 0,
                    "visible": true,
                    "property": "title"
                  },
                  {
                    "width": 0,
                    "visible": true,
                    "property": "b+Bs"
                  }
                ],
                "table_wrap": false
              },
              "name": "Show All",
              "page_sort": [
                "35014213-5260-40d8-9394-07a8ef3226c1",
                "51f9582c-fc47-4311-9029-0da6b13bd5ff"
              ],
              "parent_id": "a8015edb-ff8c-4d53-b355-e42f8941f9f3",
              "parent_table": "block",
              "query": null,
              "type": "table",
              "version": 1
            },
            "Collection": {
              "alive": true,
              "format": null,
              "id": "4a7d2d23-04dc-4d85-9497-e94e5d431eda",
              "name": null,
              "parent_id": "a8015edb-ff8c-4d53-b355-e42f8941f9f3",
              "parent_table": "block",
              "schema": {
                "b+Bs": {
                  "name": "Definition",
                  "options": null,
                  "type": "text"
                },
                "title": {
                  "name": "Name",
                  "options": null,
                  "type": "title"
                }
              },
              "version": 1
            },
            "CollectionRows": [
              {
                "alive": true,
                "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "created_time": 1550523816945,
                "id": "35014213-5260-40d8-9394-07a8ef3226c1",
                "ignore_block_count": true,
                "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "last_edited_time": 1550523816945,
                "parent_id": "4a7d2d23-04dc-4d85-9497-e94e5d431eda",
                "parent_table": "collection",
                "properties": {
                  "b+Bs": [
                    [
                      "bool"
                    ]
                  ],
                  "title": [
                    [
                      "value_type"
                    ]
                  ]
                },
                "type": "page",
                "version": 1
              },
              {
                "alive": true,
                "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "created_time": 1550523816945,
                "id": "51f9582c-fc47-4311-9029-0da6b13bd5ff",
                "ignore_block_count": true,
                "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "last_edited_time": 1550523816945,
                "parent_id": "4a7d2d23-04dc-4d85-9497-e94e5d431eda",
                "parent_table": "collection",
                "properties": {
                  "b+Bs": [
                    [
                      "std::integral_constant\u003cbool,value\u003e"
                    ]
                  ],
                  "title": [
                    [
                      "type"
                    ]
                  ]
                },
                "type": "page",
                "version": 1
              }
            ]
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816946,
        "id": "bf5fd1d3-6600-4587-8c8e-4907d0eaa4d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816946,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The trait can then be used in constructs such as "
            ],
            [
              "static_assert",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2b%2b/3822/static-assert#t=201607281007230765701"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "std::enable_if",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2b%2b/1169/sfinae-substitution-failure-is-not-an-error/3777/enable-if#t=201607281006475141537"
                ]
              ]
            ],
            [
              ". An example with "
            ],
            [
              "std::is_pointer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The trait can then be used in constructs such as "
          },
          {
            "Text": "static_assert",
            "AttrFlags": 2,
            "Link": "http://stackoverflow.com/documentation/c%2b%2b/3822/static-assert#t=201607281007230765701"
          },
          {
            "Text": " or "
          },
          {
            "Text": "std::enable_if",
            "AttrFlags": 2,
            "Link": "http://stackoverflow.com/documentation/c%2b%2b/1169/sfinae-substitution-failure-is-not-an-error/3777/enable-if#t=201607281006475141537"
          },
          {
            "Text": ". An example with "
          },
          {
            "Text": "std::is_pointer",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816946,
        "id": "598d85d6-89b3-4be6-bba1-cbeaf6ad623a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816946,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "template \u003ctypename T\u003e\nvoid i_require_a_pointer (T t) {\n    static_assert(std::is_pointer\u003cT\u003e::value, \"T must be a pointer type\");\n}\n\n//Overload for when T is not a pointer type\ntemplate \u003ctypename T\u003e\ntypename std::enable_if\u003c!std::is_pointer\u003cT\u003e::value\u003e::type\ndoes_something_special_with_pointer (T t) {\n    //Do something boring\n}\n\n//Overload for when T is a pointer type\ntemplate \u003ctypename T\u003e\ntypename std::enable_if\u003cstd::is_pointer\u003cT\u003e::value\u003e::type \ndoes_something_special_with_pointer (T t) {\n    //Do something special\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "template \u003ctypename T\u003e\nvoid i_require_a_pointer (T t) {\n    static_assert(std::is_pointer\u003cT\u003e::value, \"T must be a pointer type\");\n}\n\n//Overload for when T is not a pointer type\ntemplate \u003ctypename T\u003e\ntypename std::enable_if\u003c!std::is_pointer\u003cT\u003e::value\u003e::type\ndoes_something_special_with_pointer (T t) {\n    //Do something boring\n}\n\n//Overload for when T is a pointer type\ntemplate \u003ctypename T\u003e\ntypename std::enable_if\u003cstd::is_pointer\u003cT\u003e::value\u003e::type \ndoes_something_special_with_pointer (T t) {\n    //Do something special\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816946,
        "id": "f0d19309-8907-4461-9bca-0d619cfcceb1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816946,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523816947,
        "id": "4cc3eeee-0eea-4485-abe6-cdb10914e1b7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523816947,
        "parent_id": "c2d3416b-edf9-4471-a94a-adb95f329ec7",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are also various traits which transform types, such as "
            ],
            [
              "std::add_pointer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "std::underlying_type",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". These traits generally expose a single "
            ],
            [
              "type",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " member type which contains the transformed type. For example, "
            ],
            [
              "std::add_pointer\u003cint\u003e::type",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is "
            ],
            [
              "int*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are also various traits which transform types, such as "
          },
          {
            "Text": "std::add_pointer",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "std::underlying_type",
            "AttrFlags": 2
          },
          {
            "Text": ". These traits generally expose a single "
          },
          {
            "Text": "type",
            "AttrFlags": 2
          },
          {
            "Text": " member type which contains the transformed type. For example, "
          },
          {
            "Text": "std::add_pointer\u003cint\u003e::type",
            "AttrFlags": 2
          },
          {
            "Text": " is "
          },
          {
            "Text": "int*",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Standard type traits",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}