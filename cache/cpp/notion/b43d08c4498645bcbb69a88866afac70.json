{
  "ID": "b43d08c4-4986-45bc-bb69-a88866afac70",
  "Root": {
    "alive": true,
    "content": [
      "235b990b-0822-4c5b-8a06-fca3da56e9a2",
      "fe6c9fee-8ae5-482e-a87c-a6b91d9952be",
      "6d767543-8396-42cb-9ca2-db9877f40ef1",
      "c237a3af-dc10-4b43-99c7-0264cd896b81",
      "24296845-608c-4f53-9676-f3e98c8f4361",
      "c809195f-955c-4994-97e8-75580fe6c010",
      "844748a4-48fb-4387-bdeb-24f5f67936b3",
      "91ab0331-db80-4df5-a943-12b88300aec2",
      "03c250b1-4658-44cb-99ba-e5d2216a0cba",
      "0cd67669-2134-41d0-a34e-f5028c8ab04b",
      "7587f1f2-9746-4868-a915-7e6739ff0a3d",
      "3d06e8e5-64ff-49c1-b136-4c3c88bd4b1a",
      "e9d799dd-44fc-4cdf-b4cf-71947328fe1f",
      "62e1472e-5274-4d8f-ad49-18151dd3c8f5",
      "a2f4e194-3f64-488e-98f0-b593b32d4a17",
      "8f69fbe2-7557-42ba-ae07-37c0662961b0",
      "0d452bd4-1f3c-436b-bf6e-0657ba76345e",
      "623e2227-2709-4122-abc7-3c7e34794264",
      "ffc09a6e-1d1e-439f-9497-00a5a93e6c98",
      "2a4afb43-cf5a-49ae-8178-758a066da81a",
      "e309fbfa-17d6-4e49-82e6-1d2d74e428c7",
      "1e656315-a764-4231-993b-e6d86cbbb5fd",
      "b019b5d3-e09b-481b-bc62-364140952aea",
      "8db11890-79e1-4a94-817c-ae60993796dd",
      "e440be72-9928-4e00-b131-8c97a7145ced"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522348512,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "b43d08c4-4986-45bc-bb69-a88866afac70",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550709720000,
    "parent_id": "48a240ac-2fc8-4208-bd39-82f2c3d27cb4",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Ranges of numeric types"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348502,
        "id": "235b990b-0822-4c5b-8a06-fca3da56e9a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348502,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The ranges of the integer types are implementation-defined. The header "
            ],
            [
              "\u003climits\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " provides the "
            ],
            [
              "std::numeric_limits\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " template which provides the minimum and maximum values of all fundamental types. The values satisfy guarantees provided by the C standard through the "
            ],
            [
              "\u003cclimits\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and (\u003e= C++11) "
            ],
            [
              "\u003ccinttypes\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " headers."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The ranges of the integer types are implementation-defined. The header "
          },
          {
            "Text": "\u003climits\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " provides the "
          },
          {
            "Text": "std::numeric_limits\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " template which provides the minimum and maximum values of all fundamental types. The values satisfy guarantees provided by the C standard through the "
          },
          {
            "Text": "\u003cclimits\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " and (\u003e= C++11) "
          },
          {
            "Text": "\u003ccinttypes\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " headers."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348506,
        "id": "fe6c9fee-8ae5-482e-a87c-a6b91d9952be",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348506,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::numeric_limits\u003csigned char\u003e::min()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equals "
            ],
            [
              "SCHAR_MIN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is less than or equal to -127."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::numeric_limits\u003csigned char\u003e::min()",
            "AttrFlags": 2
          },
          {
            "Text": " equals "
          },
          {
            "Text": "SCHAR_MIN",
            "AttrFlags": 2
          },
          {
            "Text": ", which is less than or equal to -127."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348506,
        "id": "6d767543-8396-42cb-9ca2-db9877f40ef1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348506,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::numeric_limits\u003csigned char\u003e::max()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equals "
            ],
            [
              "SCHAR_MAX",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is greater than or equal to 127."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::numeric_limits\u003csigned char\u003e::max()",
            "AttrFlags": 2
          },
          {
            "Text": " equals "
          },
          {
            "Text": "SCHAR_MAX",
            "AttrFlags": 2
          },
          {
            "Text": ", which is greater than or equal to 127."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348506,
        "id": "c237a3af-dc10-4b43-99c7-0264cd896b81",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348506,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::numeric_limits\u003cunsigned char\u003e::max()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equals "
            ],
            [
              "UCHAR_MAX",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is greater than or equal to 255."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::numeric_limits\u003cunsigned char\u003e::max()",
            "AttrFlags": 2
          },
          {
            "Text": " equals "
          },
          {
            "Text": "UCHAR_MAX",
            "AttrFlags": 2
          },
          {
            "Text": ", which is greater than or equal to 255."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348506,
        "id": "24296845-608c-4f53-9676-f3e98c8f4361",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348506,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::numeric_limits\u003cshort\u003e::min()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equals "
            ],
            [
              "SHRT_MIN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is less than or equal to -32767."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::numeric_limits\u003cshort\u003e::min()",
            "AttrFlags": 2
          },
          {
            "Text": " equals "
          },
          {
            "Text": "SHRT_MIN",
            "AttrFlags": 2
          },
          {
            "Text": ", which is less than or equal to -32767."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348507,
        "id": "c809195f-955c-4994-97e8-75580fe6c010",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348507,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::numeric_limits\u003cshort\u003e::max()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equals "
            ],
            [
              "SHRT_MAX",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is greater than or equal to 32767."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::numeric_limits\u003cshort\u003e::max()",
            "AttrFlags": 2
          },
          {
            "Text": " equals "
          },
          {
            "Text": "SHRT_MAX",
            "AttrFlags": 2
          },
          {
            "Text": ", which is greater than or equal to 32767."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348507,
        "id": "844748a4-48fb-4387-bdeb-24f5f67936b3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348507,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::numeric_limits\u003cunsigned short\u003e::max()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equals "
            ],
            [
              "USHRT_MAX",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is greater than or equal to 65535."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::numeric_limits\u003cunsigned short\u003e::max()",
            "AttrFlags": 2
          },
          {
            "Text": " equals "
          },
          {
            "Text": "USHRT_MAX",
            "AttrFlags": 2
          },
          {
            "Text": ", which is greater than or equal to 65535."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348507,
        "id": "91ab0331-db80-4df5-a943-12b88300aec2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348507,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::numeric_limits\u003cint\u003e::min()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equals "
            ],
            [
              "INT_MIN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is less than or equal to -32767."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::numeric_limits\u003cint\u003e::min()",
            "AttrFlags": 2
          },
          {
            "Text": " equals "
          },
          {
            "Text": "INT_MIN",
            "AttrFlags": 2
          },
          {
            "Text": ", which is less than or equal to -32767."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348507,
        "id": "03c250b1-4658-44cb-99ba-e5d2216a0cba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348507,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::numeric_limits\u003cint\u003e::max()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equals "
            ],
            [
              "INT_MAX",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is greater than or equal to 32767."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::numeric_limits\u003cint\u003e::max()",
            "AttrFlags": 2
          },
          {
            "Text": " equals "
          },
          {
            "Text": "INT_MAX",
            "AttrFlags": 2
          },
          {
            "Text": ", which is greater than or equal to 32767."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348508,
        "id": "0cd67669-2134-41d0-a34e-f5028c8ab04b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348508,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::numeric_limits\u003cunsigned int\u003e::max()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equals "
            ],
            [
              "UINT_MAX",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is greater than or equal to 65535."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::numeric_limits\u003cunsigned int\u003e::max()",
            "AttrFlags": 2
          },
          {
            "Text": " equals "
          },
          {
            "Text": "UINT_MAX",
            "AttrFlags": 2
          },
          {
            "Text": ", which is greater than or equal to 65535."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348508,
        "id": "7587f1f2-9746-4868-a915-7e6739ff0a3d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348508,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::numeric_limits\u003clong\u003e::min()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equals "
            ],
            [
              "LONG_MIN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is less than or equal to -2147483647."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::numeric_limits\u003clong\u003e::min()",
            "AttrFlags": 2
          },
          {
            "Text": " equals "
          },
          {
            "Text": "LONG_MIN",
            "AttrFlags": 2
          },
          {
            "Text": ", which is less than or equal to -2147483647."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348508,
        "id": "3d06e8e5-64ff-49c1-b136-4c3c88bd4b1a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348508,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::numeric_limits\u003clong\u003e::max()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equals "
            ],
            [
              "LONG_MAX",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is greater than or equal to 2147483647."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::numeric_limits\u003clong\u003e::max()",
            "AttrFlags": 2
          },
          {
            "Text": " equals "
          },
          {
            "Text": "LONG_MAX",
            "AttrFlags": 2
          },
          {
            "Text": ", which is greater than or equal to 2147483647."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348509,
        "id": "e9d799dd-44fc-4cdf-b4cf-71947328fe1f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348509,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::numeric_limits\u003cunsigned long\u003e::max()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equals "
            ],
            [
              "ULONG_MAX",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is greater than or equal to 4294967295."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::numeric_limits\u003cunsigned long\u003e::max()",
            "AttrFlags": 2
          },
          {
            "Text": " equals "
          },
          {
            "Text": "ULONG_MAX",
            "AttrFlags": 2
          },
          {
            "Text": ", which is greater than or equal to 4294967295."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348509,
        "id": "62e1472e-5274-4d8f-ad49-18151dd3c8f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348509,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::numeric_limits\u003clong long\u003e::min()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equals "
            ],
            [
              "LLONG_MIN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is less than or equal to -9223372036854775807."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::numeric_limits\u003clong long\u003e::min()",
            "AttrFlags": 2
          },
          {
            "Text": " equals "
          },
          {
            "Text": "LLONG_MIN",
            "AttrFlags": 2
          },
          {
            "Text": ", which is less than or equal to -9223372036854775807."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348509,
        "id": "a2f4e194-3f64-488e-98f0-b593b32d4a17",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348509,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::numeric_limits\u003clong long\u003e::max()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equals "
            ],
            [
              "LLONG_MAX",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is greater than or equal to 9223372036854775807."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::numeric_limits\u003clong long\u003e::max()",
            "AttrFlags": 2
          },
          {
            "Text": " equals "
          },
          {
            "Text": "LLONG_MAX",
            "AttrFlags": 2
          },
          {
            "Text": ", which is greater than or equal to 9223372036854775807."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348510,
        "id": "8f69fbe2-7557-42ba-ae07-37c0662961b0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348510,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::numeric_limits\u003cunsigned long long\u003e::max()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equals "
            ],
            [
              "ULLONG_MAX",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is greater than or equal to 18446744073709551615."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::numeric_limits\u003cunsigned long long\u003e::max()",
            "AttrFlags": 2
          },
          {
            "Text": " equals "
          },
          {
            "Text": "ULLONG_MAX",
            "AttrFlags": 2
          },
          {
            "Text": ", which is greater than or equal to 18446744073709551615."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348510,
        "id": "0d452bd4-1f3c-436b-bf6e-0657ba76345e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348510,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For floating-point types "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "max()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the maximum finite value while "
            ],
            [
              "min()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the minimum positive normalized value. Additional members are provided for floating-point types, which are also implementation-defined but satisfy certain guarantees provided by the C standard through the "
            ],
            [
              "\u003ccfloat\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " header."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For floating-point types "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "max()",
            "AttrFlags": 2
          },
          {
            "Text": " is the maximum finite value while "
          },
          {
            "Text": "min()",
            "AttrFlags": 2
          },
          {
            "Text": " is the minimum positive normalized value. Additional members are provided for floating-point types, which are also implementation-defined but satisfy certain guarantees provided by the C standard through the "
          },
          {
            "Text": "\u003ccfloat\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " header."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348511,
        "id": "623e2227-2709-4122-abc7-3c7e34794264",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348511,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The member "
            ],
            [
              "digits10",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " gives the number of decimal digits of precision."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The member "
          },
          {
            "Text": "digits10",
            "AttrFlags": 2
          },
          {
            "Text": " gives the number of decimal digits of precision."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348511,
        "id": "ffc09a6e-1d1e-439f-9497-00a5a93e6c98",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348511,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "* `std::numeric_limits\u003cfloat\u003e::digits10` equals `FLT_DIG`, which is at least 6.\n* `std::numeric_limits\u003cdouble\u003e::digits10` equals `DBL_DIG`, which is at least 10.\n* `std::numeric_limits\u003clong double\u003e::digits10` equals `LDBL_DIG`, which is at least 10."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "* `std::numeric_limits\u003cfloat\u003e::digits10` equals `FLT_DIG`, which is at least 6.\n* `std::numeric_limits\u003cdouble\u003e::digits10` equals `DBL_DIG`, which is at least 10.\n* `std::numeric_limits\u003clong double\u003e::digits10` equals `LDBL_DIG`, which is at least 10.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348511,
        "id": "2a4afb43-cf5a-49ae-8178-758a066da81a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348511,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The member "
            ],
            [
              "min_exponent10",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the minimum negative E such that 10 to the power E is normal."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The member "
          },
          {
            "Text": "min_exponent10",
            "AttrFlags": 2
          },
          {
            "Text": " is the minimum negative E such that 10 to the power E is normal."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348511,
        "id": "e309fbfa-17d6-4e49-82e6-1d2d74e428c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348511,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "* `std::numeric_limits\u003cfloat\u003e::min_exponent10` equals `FLT_MIN_10_EXP`, which is at most -37.\n* `std::numeric_limits\u003cdouble\u003e::min_exponent10` equals `DBL_MIN_10_EXP`, which is at most -37."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "* `std::numeric_limits\u003cfloat\u003e::min_exponent10` equals `FLT_MIN_10_EXP`, which is at most -37.\n* `std::numeric_limits\u003cdouble\u003e::min_exponent10` equals `DBL_MIN_10_EXP`, which is at most -37.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348511,
        "id": "1e656315-a764-4231-993b-e6d86cbbb5fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348511,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::numeric_limits\u003clong double\u003e::min_exponent10",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equals "
            ],
            [
              "LDBL_MIN_10_EXP",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is at most -37."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::numeric_limits\u003clong double\u003e::min_exponent10",
            "AttrFlags": 2
          },
          {
            "Text": " equals "
          },
          {
            "Text": "LDBL_MIN_10_EXP",
            "AttrFlags": 2
          },
          {
            "Text": ", which is at most -37."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348512,
        "id": "b019b5d3-e09b-481b-bc62-364140952aea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348512,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The member "
            ],
            [
              "max_exponent10",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the maximum E such that 10 to the power E is finite."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The member "
          },
          {
            "Text": "max_exponent10",
            "AttrFlags": 2
          },
          {
            "Text": " is the maximum E such that 10 to the power E is finite."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348512,
        "id": "8db11890-79e1-4a94-817c-ae60993796dd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348512,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "* `std::numeric_limits\u003cfloat\u003e::max_exponent10` equals `FLT_MIN_10_EXP`, which is at least 37.\n* `std::numeric_limits\u003cdouble\u003e::max_exponent10` equals `DBL_MIN_10_EXP`, which is at least 37.\n* `std::numeric_limits\u003clong double\u003e::max_exponent10` equals `LDBL_MIN_10_EXP`, which is at least 37."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "* `std::numeric_limits\u003cfloat\u003e::max_exponent10` equals `FLT_MIN_10_EXP`, which is at least 37.\n* `std::numeric_limits\u003cdouble\u003e::max_exponent10` equals `DBL_MIN_10_EXP`, which is at least 37.\n* `std::numeric_limits\u003clong double\u003e::max_exponent10` equals `LDBL_MIN_10_EXP`, which is at least 37.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522348512,
        "id": "e440be72-9928-4e00-b131-8c97a7145ced",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522348512,
        "parent_id": "b43d08c4-4986-45bc-bb69-a88866afac70",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the member "
            ],
            [
              "is_iec559",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is true, the type conforms to IEC 559 / IEEE 754, and its range is therefore determined by that standard."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the member "
          },
          {
            "Text": "is_iec559",
            "AttrFlags": 2
          },
          {
            "Text": " is true, the type conforms to IEC 559 / IEEE 754, and its range is therefore determined by that standard."
          }
        ]
      }
    ],
    "title": "Ranges of numeric types",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}