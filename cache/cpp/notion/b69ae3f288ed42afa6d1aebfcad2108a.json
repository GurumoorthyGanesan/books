{
  "ID": "b69ae3f2-88ed-42af-a6d1-aebfcad2108a",
  "Root": {
    "alive": true,
    "content": [
      "5c074a1a-da0b-4856-a261-9cdf89d5790e",
      "a9f88030-91bc-46f5-bb26-2e91585fe30c",
      "8581d7ff-abee-4e59-a089-6ff74b2eba4e",
      "3f23c2af-4caa-431b-adc2-c4141cd8d976",
      "7443ce10-8479-49a7-82c3-df1d1cc72cfa",
      "1de0d69b-6214-4fca-8518-f2960eb8e206",
      "bc22ab62-f39a-41ba-b01a-0906f9812a4c",
      "f6f441b4-e73d-4a4a-8b6d-3f860b36787f",
      "e8d91f09-6f97-4174-8c67-6b4daecd2a7b",
      "f802fcb9-2c7a-4916-9f2f-c26e00675450",
      "5578536a-e79e-450d-8e6a-876cb9c16359"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522356504,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "b69ae3f2-88ed-42af-a6d1-aebfcad2108a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550709780000,
    "parent_id": "2ed71a30-e220-47b0-b0e7-1bc14fce30c0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Destructor"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522356500,
        "id": "5c074a1a-da0b-4856-a261-9cdf89d5790e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522356500,
        "parent_id": "b69ae3f2-88ed-42af-a6d1-aebfcad2108a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A "
            ],
            [
              "destructor",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " is a function without arguments that is called when a user-defined object is about to be destroyed. It is named after the type it destructs with a "
            ],
            [
              "~",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " prefix."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A "
          },
          {
            "Text": "destructor",
            "AttrFlags": 4
          },
          {
            "Text": " is a function without arguments that is called when a user-defined object is about to be destroyed. It is named after the type it destructs with a "
          },
          {
            "Text": "~",
            "AttrFlags": 2
          },
          {
            "Text": " prefix."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522356503,
        "id": "a9f88030-91bc-46f5-bb26-2e91585fe30c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522356503,
        "parent_id": "b69ae3f2-88ed-42af-a6d1-aebfcad2108a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class C{\n    int* is;\n    string s;\npublic:\n    C()\n    : is( new int[10] ){\n    }\n\n    ~C(){  // destructor definition\n        delete[] is;\n    }\n};\n\nclass C_child : public C{\n    string s_ch;\npublic:\n    C_child(){}\n    ~C_child(){} // child destructor\n};\n\nvoid f(){\n    C c1; // calls default constructor\n    C c2[2]; // calls default constructor for both elements\n    C* c3 = new C[2]; // calls default constructor for both array elements\n\n    C_child c_ch;  // when destructed calls destructor of s_ch and of C base (and in turn s)\n\n    delete[] c3; // calls destructors on c3[0] and c3[1]\n} // automatic variables are destroyed here -- i.e. c1, c2 and c_ch"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class C{\n    int* is;\n    string s;\npublic:\n    C()\n    : is( new int[10] ){\n    }\n\n    ~C(){  // destructor definition\n        delete[] is;\n    }\n};\n\nclass C_child : public C{\n    string s_ch;\npublic:\n    C_child(){}\n    ~C_child(){} // child destructor\n};\n\nvoid f(){\n    C c1; // calls default constructor\n    C c2[2]; // calls default constructor for both elements\n    C* c3 = new C[2]; // calls default constructor for both array elements\n\n    C_child c_ch;  // when destructed calls destructor of s_ch and of C base (and in turn s)\n\n    delete[] c3; // calls destructors on c3[0] and c3[1]\n} // automatic variables are destroyed here -- i.e. c1, c2 and c_ch",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522356503,
        "id": "8581d7ff-abee-4e59-a089-6ff74b2eba4e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522356503,
        "parent_id": "b69ae3f2-88ed-42af-a6d1-aebfcad2108a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Under most circumstances (i.e., a user provides no destructor, and there are no other disqualifying conditions), the compiler provides a default destructor implicitly:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Under most circumstances (i.e., a user provides no destructor, and there are no other disqualifying conditions), the compiler provides a default destructor implicitly:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522356503,
        "id": "3f23c2af-4caa-431b-adc2-c4141cd8d976",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522356503,
        "parent_id": "b69ae3f2-88ed-42af-a6d1-aebfcad2108a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class C{\n    int i;\n    string s;\n};\n\nvoid f(){\n    C* c1 = new C;\n    delete c1; // C has a destructor\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class C{\n    int i;\n    string s;\n};\n\nvoid f(){\n    C* c1 = new C;\n    delete c1; // C has a destructor\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522356503,
        "id": "7443ce10-8479-49a7-82c3-df1d1cc72cfa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522356503,
        "parent_id": "b69ae3f2-88ed-42af-a6d1-aebfcad2108a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class C{\n    int m;\nprivate:\n    ~C(){} // not public destructor!\n};\n\nclass C_container{\n    C c;\n};\n\nvoid f(){\n    C_container* c_cont = new C_container;\n    delete c_cont; // Compile ERROR: C has no accessible destructor\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class C{\n    int m;\nprivate:\n    ~C(){} // not public destructor!\n};\n\nclass C_container{\n    C c;\n};\n\nvoid f(){\n    C_container* c_cont = new C_container;\n    delete c_cont; // Compile ERROR: C has no accessible destructor\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522356503,
        "id": "1de0d69b-6214-4fca-8518-f2960eb8e206",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522356503,
        "parent_id": "b69ae3f2-88ed-42af-a6d1-aebfcad2108a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In C++11, a developer can override this behavior by preventing the compiler from providing a default destructor."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In C++11, a developer can override this behavior by preventing the compiler from providing a default destructor."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522356503,
        "id": "bc22ab62-f39a-41ba-b01a-0906f9812a4c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522356503,
        "parent_id": "b69ae3f2-88ed-42af-a6d1-aebfcad2108a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class C{\n    int m;\npublic:\n    ~C() = delete; // does NOT have implicit destructor\n};\n\nvoid f{\n    C c1; \n} // Compile ERROR: C has no destructor"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class C{\n    int m;\npublic:\n    ~C() = delete; // does NOT have implicit destructor\n};\n\nvoid f{\n    C c1; \n} // Compile ERROR: C has no destructor",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522356503,
        "id": "f6f441b4-e73d-4a4a-8b6d-3f860b36787f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522356503,
        "parent_id": "b69ae3f2-88ed-42af-a6d1-aebfcad2108a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Furthermore, a developer may also be explicit about wanting the compiler to provide a default destructor."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Furthermore, a developer may also be explicit about wanting the compiler to provide a default destructor."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522356503,
        "id": "e8d91f09-6f97-4174-8c67-6b4daecd2a7b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522356503,
        "parent_id": "b69ae3f2-88ed-42af-a6d1-aebfcad2108a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class C{\n    int m;\npublic:\n    ~C() = default; // saying explicitly it does have implicit/empty destructor\n};\n\nvoid f(){\n    C c1;\n} // C has a destructor -- c1 properly destroyed"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class C{\n    int m;\npublic:\n    ~C() = default; // saying explicitly it does have implicit/empty destructor\n};\n\nvoid f(){\n    C c1;\n} // C has a destructor -- c1 properly destroyed",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522356504,
        "id": "f802fcb9-2c7a-4916-9f2f-c26e00675450",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522356504,
        "parent_id": "b69ae3f2-88ed-42af-a6d1-aebfcad2108a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can determine whether a type has a destructor (or is a primitive type) using "
            ],
            [
              "std::is_destructible",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " from "
            ],
            [
              "\u003ctype_traits\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can determine whether a type has a destructor (or is a primitive type) using "
          },
          {
            "Text": "std::is_destructible",
            "AttrFlags": 2
          },
          {
            "Text": " from "
          },
          {
            "Text": "\u003ctype_traits\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522356504,
        "id": "5578536a-e79e-450d-8e6a-876cb9c16359",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522356504,
        "parent_id": "b69ae3f2-88ed-42af-a6d1-aebfcad2108a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class C1{ };\nclass C2{ public: ~C2() = delete };\nclass C3 : public C2{ };\n\nusing std::cout; using std::boolalpha; using std::endl;\nusing std::is_destructible;\ncout \u003c\u003c boolalpha \u003c\u003c is_destructible\u003cint\u003e() \u003c\u003c endl; // prints true\ncout \u003c\u003c boolalpha \u003c\u003c is_destructible\u003cC1\u003e() \u003c\u003c endl; // prints true\ncout \u003c\u003c boolalpha \u003c\u003c is_destructible\u003cC2\u003e() \u003c\u003c endl; // prints false\ncout \u003c\u003c boolalpha \u003c\u003c is_destructible\u003cC3\u003e() \u003c\u003c endl; // prints false"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class C1{ };\nclass C2{ public: ~C2() = delete };\nclass C3 : public C2{ };\n\nusing std::cout; using std::boolalpha; using std::endl;\nusing std::is_destructible;\ncout \u003c\u003c boolalpha \u003c\u003c is_destructible\u003cint\u003e() \u003c\u003c endl; // prints true\ncout \u003c\u003c boolalpha \u003c\u003c is_destructible\u003cC1\u003e() \u003c\u003c endl; // prints true\ncout \u003c\u003c boolalpha \u003c\u003c is_destructible\u003cC2\u003e() \u003c\u003c endl; // prints false\ncout \u003c\u003c boolalpha \u003c\u003c is_destructible\u003cC3\u003e() \u003c\u003c endl; // prints false",
        "code_language": "Plain Text"
      }
    ],
    "title": "Destructor",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}