{
  "ID": "93fe7a33-fb92-4031-a9ed-70b0afb54030",
  "Root": {
    "alive": true,
    "content": [
      "926032cb-c539-4a6b-929b-3ce3d94978c8",
      "f31beb99-a87c-4411-a19d-1443a6804742",
      "dfbff030-eda3-4629-add8-f9808c605197"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522292589,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "93fe7a33-fb92-4031-a9ed-70b0afb54030",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550655360000,
    "parent_id": "d548e856-41b8-49c8-a801-044c518c9fe5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "glvalue"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522292586,
        "id": "926032cb-c539-4a6b-929b-3ce3d94978c8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522292586,
        "parent_id": "93fe7a33-fb92-4031-a9ed-70b0afb54030",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A glvalue (a “generalized lvalue”) expression is any expression which has identity, regardless of whether it can be moved from or not. This category includes lvalues (expressions that have identity but can’t be moved from) and xvalues (expressions that have identity, and can be moved from), but excludes prvalues (expressions without identity)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A glvalue (a “generalized lvalue”) expression is any expression which has identity, regardless of whether it can be moved from or not. This category includes lvalues (expressions that have identity but can’t be moved from) and xvalues (expressions that have identity, and can be moved from), but excludes prvalues (expressions without identity)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522292588,
        "id": "f31beb99-a87c-4411-a19d-1443a6804742",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522292588,
        "parent_id": "93fe7a33-fb92-4031-a9ed-70b0afb54030",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If an expression has a "
            ],
            [
              "name",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", it’s a glvalue:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If an expression has a "
          },
          {
            "Text": "name",
            "AttrFlags": 4
          },
          {
            "Text": ", it’s a glvalue:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522292589,
        "id": "dfbff030-eda3-4629-add8-f9808c605197",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522292589,
        "parent_id": "93fe7a33-fb92-4031-a9ed-70b0afb54030",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct X { int n; };\nX foo();\n\nX x;\nx; // has a name, so it's a glvalue\nstd::move(x); // has a name (we're moving from \"x\"), so it's a glvalue\n              // can be moved from, so it's an xvalue not an lvalue\n\nfoo(); // has no name, so is a prvalue, not a glvalue\nX{};   // temporary has no name, so is a prvalue, not a glvalue\nX{}.n; // HAS a name, so is a glvalue. can be moved from, so it's an xvalue"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct X { int n; };\nX foo();\n\nX x;\nx; // has a name, so it's a glvalue\nstd::move(x); // has a name (we're moving from \"x\"), so it's a glvalue\n              // can be moved from, so it's an xvalue not an lvalue\n\nfoo(); // has no name, so is a prvalue, not a glvalue\nX{};   // temporary has no name, so is a prvalue, not a glvalue\nX{}.n; // HAS a name, so is a glvalue. can be moved from, so it's an xvalue",
        "code_language": "Plain Text"
      }
    ],
    "title": "glvalue",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}