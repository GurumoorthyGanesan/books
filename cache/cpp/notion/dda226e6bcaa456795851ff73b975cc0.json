{
  "ID": "dda226e6-bcaa-4567-9585-1ff73b975cc0",
  "Root": {
    "alive": true,
    "content": [
      "c455a262-fbf3-43cd-8c8e-881b0d2138ac",
      "73ee796b-9e94-4775-9b10-6345d831a261",
      "0949b10c-dec6-473e-bba1-6af308b438f4",
      "7e0efa5a-8bb1-4bea-b495-f2a65605ba87",
      "853ec03d-e391-46d2-9661-ea4cdeb0423e",
      "aab338cc-cb25-470a-9a88-4bbca2298bfe",
      "73c33dcc-1b76-45e0-b72f-3060ca50db6d",
      "b54abe3e-5104-4ea7-89cb-e37132e11239",
      "df792e0d-bdc5-4142-b5ed-5eb369fbdc53",
      "9804fe27-f796-41e0-a36c-8cde5ce5a1a4"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550525106632,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "dda226e6-bcaa-4567-9585-1ff73b975cc0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551688907431,
    "parent_id": "dadb2eed-6939-4a7d-9afa-46a0514a66be",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Controlling alignment"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525106629,
        "id": "c455a262-fbf3-43cd-8c8e-881b0d2138ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525106629,
        "parent_id": "dda226e6-bcaa-4567-9585-1ff73b975cc0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "alignas",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "keyword",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/4891/keywords"
                ]
              ]
            ],
            [
              " can be used to force a variable, class data member, declaration or definition of a class, or declaration or definition of an enum, to have a particular alignment, if supported. It comes in two forms:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "alignas",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "keyword",
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/4891/keywords"
          },
          {
            "Text": " can be used to force a variable, class data member, declaration or definition of a class, or declaration or definition of an enum, to have a particular alignment, if supported. It comes in two forms:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525106631,
        "id": "73ee796b-9e94-4775-9b10-6345d831a261",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525106631,
        "parent_id": "dda226e6-bcaa-4567-9585-1ff73b975cc0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "alignas(x)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", where "
            ],
            [
              "x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a constant expression, gives the entity the alignment "
            ],
            [
              "x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", if supported."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "alignas(x)",
            "AttrFlags": 2
          },
          {
            "Text": ", where "
          },
          {
            "Text": "x",
            "AttrFlags": 2
          },
          {
            "Text": " is a constant expression, gives the entity the alignment "
          },
          {
            "Text": "x",
            "AttrFlags": 2
          },
          {
            "Text": ", if supported."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525106631,
        "id": "0949b10c-dec6-473e-bba1-6af308b438f4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525106631,
        "parent_id": "dda226e6-bcaa-4567-9585-1ff73b975cc0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "alignas(T)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", where "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a type, gives the entity an alignment equal to the alignment requirement of "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", that is, "
            ],
            [
              "alignof(T)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", if supported."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "alignas(T)",
            "AttrFlags": 2
          },
          {
            "Text": ", where "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": " is a type, gives the entity an alignment equal to the alignment requirement of "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": ", that is, "
          },
          {
            "Text": "alignof(T)",
            "AttrFlags": 2
          },
          {
            "Text": ", if supported."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525106631,
        "id": "7e0efa5a-8bb1-4bea-b495-f2a65605ba87",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525106631,
        "parent_id": "dda226e6-bcaa-4567-9585-1ff73b975cc0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If multiple "
            ],
            [
              "alignas",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " specifiers are applied to the same entity, the strictest one applies."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If multiple "
          },
          {
            "Text": "alignas",
            "AttrFlags": 2
          },
          {
            "Text": " specifiers are applied to the same entity, the strictest one applies."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525106631,
        "id": "853ec03d-e391-46d2-9661-ea4cdeb0423e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525106631,
        "parent_id": "dda226e6-bcaa-4567-9585-1ff73b975cc0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example, the buffer "
            ],
            [
              "buf",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is guaranteed to be appropriately aligned to hold an "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object, even though its element type is "
            ],
            [
              "unsigned char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which may have a weaker alignment requirement."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example, the buffer "
          },
          {
            "Text": "buf",
            "AttrFlags": 2
          },
          {
            "Text": " is guaranteed to be appropriately aligned to hold an "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " object, even though its element type is "
          },
          {
            "Text": "unsigned char",
            "AttrFlags": 2
          },
          {
            "Text": ", which may have a weaker alignment requirement."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525106631,
        "id": "aab338cc-cb25-470a-9a88-4bbca2298bfe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525106631,
        "parent_id": "dda226e6-bcaa-4567-9585-1ff73b975cc0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "alignas(int) unsigned char buf[sizeof(int)];\nnew (buf) int(42);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "alignas(int) unsigned char buf[sizeof(int)];\nnew (buf) int(42);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525106632,
        "id": "73c33dcc-1b76-45e0-b72f-3060ca50db6d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525106632,
        "parent_id": "dda226e6-bcaa-4567-9585-1ff73b975cc0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "alignas",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " cannot be used to give a type a smaller alignment than the type would have without this declaration:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "alignas",
            "AttrFlags": 2
          },
          {
            "Text": " cannot be used to give a type a smaller alignment than the type would have without this declaration:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525106632,
        "id": "b54abe3e-5104-4ea7-89cb-e37132e11239",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525106632,
        "parent_id": "dda226e6-bcaa-4567-9585-1ff73b975cc0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "alignas(1) int i; //Il-formed, unless `int` on this platform is aligned to 1 byte.\nalignas(char) int j; //Il-formed, unless `int` has the same or smaller alignment than `char`."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "alignas(1) int i; //Il-formed, unless `int` on this platform is aligned to 1 byte.\nalignas(char) int j; //Il-formed, unless `int` has the same or smaller alignment than `char`.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525106632,
        "id": "df792e0d-bdc5-4142-b5ed-5eb369fbdc53",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525106632,
        "parent_id": "dda226e6-bcaa-4567-9585-1ff73b975cc0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "alignas",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", when given an integer constant expression, must be given a valid alignment. Valid alignments are always powers of two, and must be greater than zero. Compilers are required to support all valid alignments up to the alignment of the type "
            ],
            [
              "std::max_align_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". They "
            ],
            [
              "may",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " support larger alignments than this, but support for allocating memory for such objects is limited. The upper limit on alignments is implementation dependent."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "alignas",
            "AttrFlags": 2
          },
          {
            "Text": ", when given an integer constant expression, must be given a valid alignment. Valid alignments are always powers of two, and must be greater than zero. Compilers are required to support all valid alignments up to the alignment of the type "
          },
          {
            "Text": "std::max_align_t",
            "AttrFlags": 2
          },
          {
            "Text": ". They "
          },
          {
            "Text": "may",
            "AttrFlags": 4
          },
          {
            "Text": " support larger alignments than this, but support for allocating memory for such objects is limited. The upper limit on alignments is implementation dependent."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525106632,
        "id": "9804fe27-f796-41e0-a36c-8cde5ce5a1a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550525106632,
        "parent_id": "dda226e6-bcaa-4567-9585-1ff73b975cc0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C++17 features direct support in "
            ],
            [
              "operator new",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for allocating memory for over-aligned types."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "C++17 features direct support in "
          },
          {
            "Text": "operator new",
            "AttrFlags": 2
          },
          {
            "Text": " for allocating memory for over-aligned types."
          }
        ]
      }
    ],
    "title": "Controlling alignment",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}