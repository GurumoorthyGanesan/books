{
  "ID": "b92b7a27-6c8d-422c-8f57-55bafd348801",
  "Root": {
    "alive": true,
    "content": [
      "ee64de19-5b7e-4bfe-8a94-9aaceb7ab217",
      "e5b079dc-c7a5-4840-8910-a43ded09aac2",
      "73e1d4e5-2282-444b-8970-b548902d2be6",
      "6d7b2d63-4c59-462d-b36b-e59a94c44c7b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523854545,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "b92b7a27-6c8d-422c-8f57-55bafd348801",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550798460000,
    "parent_id": "193b149e-733b-4344-8898-29dc4a2ef0b0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "enum"
        ]
      ]
    },
    "type": "page",
    "version": 18,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550798460000,
        "id": "ee64de19-5b7e-4bfe-8a94-9aaceb7ab217",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550798460000,
        "parent_id": "b92b7a27-6c8d-422c-8f57-55bafd348801",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "#note dup"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "#note dup"
          }
        ]
      },
      {
        "alive": true,
        "content": [
          "76639d6c-b19e-4efb-9fe7-b481dea3bcf1",
          "1f4422e1-0cac-4a0c-a4be-12199fa5e3c6",
          "dbb33870-0567-4ef5-8233-8e6289d0a979",
          "47e5c742-0991-4f6d-bbdb-42c4671ad8fa",
          "da2e3d45-7cad-4919-8bc2-da8116201145"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523854542,
        "id": "e5b079dc-c7a5-4840-8910-a43ded09aac2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550798460000,
        "parent_id": "b92b7a27-6c8d-422c-8f57-55bafd348801",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduces the definition of an "
            ],
            [
              "enumeration type",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c%2B%2B/2796/enumeration"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 7,
        "content_resolved": [
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550523854542,
            "id": "76639d6c-b19e-4efb-9fe7-b481dea3bcf1",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550798460000,
            "parent_id": "e5b079dc-c7a5-4840-8910-a43ded09aac2",
            "parent_table": "block",
            "properties": {
              "language": [
                [
                  "C++"
                ]
              ],
              "title": [
                [
                  "enum Direction {\n    UP,\n    LEFT,\n    DOWN,\n    RIGHT\n};\nDirection d = UP;"
                ]
              ]
            },
            "type": "code",
            "version": 5,
            "code": "enum Direction {\n    UP,\n    LEFT,\n    DOWN,\n    RIGHT\n};\nDirection d = UP;",
            "code_language": "C++"
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550523854543,
            "id": "1f4422e1-0cac-4a0c-a4be-12199fa5e3c6",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550798460000,
            "parent_id": "e5b079dc-c7a5-4840-8910-a43ded09aac2",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "In C++11, "
                ],
                [
                  "enum",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  " may optionally be followed by "
                ],
                [
                  "class",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  " or "
                ],
                [
                  "struct",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  " to define a "
                ],
                [
                  "scoped enum",
                  [
                    [
                      "a",
                      "http://stackoverflow.com/documentation/c%2B%2B/2796/enumeration/13318/scoped-enums"
                    ]
                  ]
                ],
                [
                  ". Furthermore, both scoped and unscoped enums can have their underlying type explicitly specified by "
                ],
                [
                  ": T",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  " following the enum name, where "
                ],
                [
                  "T",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  " refers to an integer type."
                ]
              ]
            },
            "type": "text",
            "version": 4,
            "inline_content": [
              {
                "Text": "In C++11, "
              },
              {
                "Text": "enum",
                "AttrFlags": 2
              },
              {
                "Text": " may optionally be followed by "
              },
              {
                "Text": "class",
                "AttrFlags": 2
              },
              {
                "Text": " or "
              },
              {
                "Text": "struct",
                "AttrFlags": 2
              },
              {
                "Text": " to define a "
              },
              {
                "Text": "scoped enum",
                "Link": "http://stackoverflow.com/documentation/c%2B%2B/2796/enumeration/13318/scoped-enums"
              },
              {
                "Text": ". Furthermore, both scoped and unscoped enums can have their underlying type explicitly specified by "
              },
              {
                "Text": ": T",
                "AttrFlags": 2
              },
              {
                "Text": " following the enum name, where "
              },
              {
                "Text": "T",
                "AttrFlags": 2
              },
              {
                "Text": " refers to an integer type."
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550523854543,
            "id": "dbb33870-0567-4ef5-8233-8e6289d0a979",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550798460000,
            "parent_id": "e5b079dc-c7a5-4840-8910-a43ded09aac2",
            "parent_table": "block",
            "properties": {
              "language": [
                [
                  "C++"
                ]
              ],
              "title": [
                [
                  "enum class Format : char {\n    TEXT,\n    PDF,\n    OTHER\n};\nFormat f = Format::TEXT;\n\nenum Language : int {\n    ENGLISH,\n    FRENCH,\n    OTHER\n};"
                ]
              ]
            },
            "type": "code",
            "version": 5,
            "code": "enum class Format : char {\n    TEXT,\n    PDF,\n    OTHER\n};\nFormat f = Format::TEXT;\n\nenum Language : int {\n    ENGLISH,\n    FRENCH,\n    OTHER\n};",
            "code_language": "C++"
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550523854544,
            "id": "47e5c742-0991-4f6d-bbdb-42c4671ad8fa",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550798460000,
            "parent_id": "e5b079dc-c7a5-4840-8910-a43ded09aac2",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "Enumerators in normal "
                ],
                [
                  "enum",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  "s may also be preceded by the scope operator, although they are still considered to be in the scope the "
                ],
                [
                  "enum",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  " was defined in."
                ]
              ]
            },
            "type": "text",
            "version": 4,
            "inline_content": [
              {
                "Text": "Enumerators in normal "
              },
              {
                "Text": "enum",
                "AttrFlags": 2
              },
              {
                "Text": "s may also be preceded by the scope operator, although they are still considered to be in the scope the "
              },
              {
                "Text": "enum",
                "AttrFlags": 2
              },
              {
                "Text": " was defined in."
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550523854544,
            "id": "da2e3d45-7cad-4919-8bc2-da8116201145",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550798460000,
            "parent_id": "e5b079dc-c7a5-4840-8910-a43ded09aac2",
            "parent_table": "block",
            "properties": {
              "language": [
                [
                  "C++"
                ]
              ],
              "title": [
                [
                  "Language l1, l2;\n\nl1 = ENGLISH;\nl2 = Language::OTHER;"
                ]
              ]
            },
            "type": "code",
            "version": 5,
            "code": "Language l1, l2;\n\nl1 = ENGLISH;\nl2 = Language::OTHER;",
            "code_language": "C++"
          }
        ],
        "inline_content": [
          {
            "Text": "Introduces the definition of an "
          },
          {
            "Text": "enumeration type",
            "Link": "http://stackoverflow.com/documentation/c%2B%2B/2796/enumeration"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "content": [
          "d2063cbb-ac8f-4a4d-b87e-f2d16827361f"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523854544,
        "id": "73e1d4e5-2282-444b-8970-b548902d2be6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550798460000,
        "parent_id": "b92b7a27-6c8d-422c-8f57-55bafd348801",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduces an "
            ],
            [
              "elaborated type specifier,",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " which specifies that the following name is the name of a previously declared enum type. (An elaborated type specifier cannot be used to forward-declare an enum type.) An enum can be named in this way even if hidden by another name."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 3,
        "content_resolved": [
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550523854544,
            "id": "d2063cbb-ac8f-4a4d-b87e-f2d16827361f",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550798460000,
            "parent_id": "73e1d4e5-2282-444b-8970-b548902d2be6",
            "parent_table": "block",
            "properties": {
              "language": [
                [
                  "C++"
                ]
              ],
              "title": [
                [
                  "enum Foo { FOO };\nvoid Foo() {}\nFoo foo = FOO;      // ill-formed; Foo refers to the function\nenum Foo foo = FOO; // ok; Foo refers to the enum type"
                ]
              ]
            },
            "type": "code",
            "version": 5,
            "code": "enum Foo { FOO };\nvoid Foo() {}\nFoo foo = FOO;      // ill-formed; Foo refers to the function\nenum Foo foo = FOO; // ok; Foo refers to the enum type",
            "code_language": "C++"
          }
        ],
        "inline_content": [
          {
            "Text": "Introduces an "
          },
          {
            "Text": "elaborated type specifier,",
            "AttrFlags": 4
          },
          {
            "Text": " which specifies that the following name is the name of a previously declared enum type. (An elaborated type specifier cannot be used to forward-declare an enum type.) An enum can be named in this way even if hidden by another name."
          }
        ]
      },
      {
        "alive": true,
        "content": [
          "b5d2a6e3-b368-4cf7-955c-1751faea976f",
          "b55820f5-1611-4f23-bf20-1984cee3de3a",
          "00dc8c71-befc-4b18-abeb-705af1342d27"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523854544,
        "id": "6d7b2d63-4c59-462d-b36b-e59a94c44c7b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550798460000,
        "parent_id": "b92b7a27-6c8d-422c-8f57-55bafd348801",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduces an "
            ],
            [
              "opaque enum declaration,",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " which declares an enum without defining it. It can either redeclare a previously declared enum, or forward-declare an enum that has not been previously declared."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 5,
        "content_resolved": [
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550523854545,
            "id": "b5d2a6e3-b368-4cf7-955c-1751faea976f",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550798460000,
            "parent_id": "6d7b2d63-4c59-462d-b36b-e59a94c44c7b",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "An enum first declared as scoped cannot later be declared as unscoped, or "
                ],
                [
                  "vice versa.",
                  [
                    [
                      "i"
                    ]
                  ]
                ],
                [
                  " All declarations of an enum must agree in underlying type."
                ]
              ]
            },
            "type": "text",
            "version": 4,
            "inline_content": [
              {
                "Text": "An enum first declared as scoped cannot later be declared as unscoped, or "
              },
              {
                "Text": "vice versa.",
                "AttrFlags": 4
              },
              {
                "Text": " All declarations of an enum must agree in underlying type."
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550523854545,
            "id": "b55820f5-1611-4f23-bf20-1984cee3de3a",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550798460000,
            "parent_id": "6d7b2d63-4c59-462d-b36b-e59a94c44c7b",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "When forward-declaring an unscoped enum, the underlying type must be explicitly specified, since it cannot be inferred until the values of the enumerators are known."
                ]
              ]
            },
            "type": "text",
            "version": 4,
            "inline_content": [
              {
                "Text": "When forward-declaring an unscoped enum, the underlying type must be explicitly specified, since it cannot be inferred until the values of the enumerators are known."
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1550523854545,
            "id": "00dc8c71-befc-4b18-abeb-705af1342d27",
            "ignore_block_count": true,
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1550798460000,
            "parent_id": "6d7b2d63-4c59-462d-b36b-e59a94c44c7b",
            "parent_table": "block",
            "properties": {
              "language": [
                [
                  "C++"
                ]
              ],
              "title": [
                [
                  "enum class Format; // underlying type is implicitly int\nvoid f(Format f);\nenum class Format {\n    TEXT,\n    PDF,\n    OTHER,\n};\n\nenum Direction;    // ill-formed; must specify underlying type"
                ]
              ]
            },
            "type": "code",
            "version": 5,
            "code": "enum class Format; // underlying type is implicitly int\nvoid f(Format f);\nenum class Format {\n    TEXT,\n    PDF,\n    OTHER,\n};\n\nenum Direction;    // ill-formed; must specify underlying type",
            "code_language": "C++"
          }
        ],
        "inline_content": [
          {
            "Text": "Introduces an "
          },
          {
            "Text": "opaque enum declaration,",
            "AttrFlags": 4
          },
          {
            "Text": " which declares an enum without defining it. It can either redeclare a previously declared enum, or forward-declare an enum that has not been previously declared."
          }
        ]
      }
    ],
    "title": "enum",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}