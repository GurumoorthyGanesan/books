{
  "ID": "960cb68a-3d89-4790-8ff7-b0a2fe377c87",
  "Root": {
    "alive": true,
    "content": [
      "d642c6d2-8b42-451b-9441-2f70ba989333",
      "5235330f-acdb-480c-aa4c-b638e9c7020c",
      "5b52cc95-b2a6-45af-87b0-03706a692ea8",
      "25509af7-360a-4732-993f-c3f525827fd7",
      "1e336e5e-83d9-42d0-8e15-af108be48c21",
      "25b36600-55c4-414e-962c-2195a03724a2",
      "0674bf4c-1e66-4dc8-9479-181989438b95",
      "8868c0f4-194e-4e41-b3d0-b8387592ec72",
      "04e8dcc8-b3bc-46af-85b3-c5bfe5befb99",
      "dad4ddcb-91ba-4d91-b059-7073ca96430b",
      "5962b22a-b828-4a5c-ae5c-9f947724263a",
      "882ce7e3-d665-45c4-9125-34a4e428da6b",
      "2047bad8-cded-459c-b824-a7f7ba957856",
      "363523b2-0ccb-48dc-b846-ec0feb707196"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522285510,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "960cb68a-3d89-4790-8ff7-b0a2fe377c87",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550655300000,
    "parent_id": "f1b860db-be5a-41ed-a67b-b7b0181ec59f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Operations on the current thread"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522285505,
        "id": "d642c6d2-8b42-451b-9441-2f70ba989333",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522285505,
        "parent_id": "960cb68a-3d89-4790-8ff7-b0a2fe377c87",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::this_thread",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a "
            ],
            [
              "namespace",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which has functions to do interesting things on the current thread from function it is called from."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::this_thread",
            "AttrFlags": 2
          },
          {
            "Text": " is a "
          },
          {
            "Text": "namespace",
            "AttrFlags": 2
          },
          {
            "Text": " which has functions to do interesting things on the current thread from function it is called from."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522285508,
        "id": "5235330f-acdb-480c-aa4c-b638e9c7020c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522285508,
        "parent_id": "960cb68a-3d89-4790-8ff7-b0a2fe377c87",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Function | Description |\n–––––––| ——————————————————— |"
            ],
            [
              "get_id",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Returns the id of the thread |"
            ],
            [
              "sleep_for",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Sleeps for a specified amount of time |"
            ],
            [
              "sleep_until",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Sleeps until a specific time |"
            ],
            [
              "yield",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Reschedule running threads, giving other threads priority |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Function | Description |\n–––––––| ——————————————————— |"
          },
          {
            "Text": "get_id",
            "AttrFlags": 2
          },
          {
            "Text": " | Returns the id of the thread |"
          },
          {
            "Text": "sleep_for",
            "AttrFlags": 2
          },
          {
            "Text": " | Sleeps for a specified amount of time |"
          },
          {
            "Text": "sleep_until",
            "AttrFlags": 2
          },
          {
            "Text": " | Sleeps until a specific time |"
          },
          {
            "Text": "yield",
            "AttrFlags": 2
          },
          {
            "Text": " | Reschedule running threads, giving other threads priority |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522285508,
        "id": "5b52cc95-b2a6-45af-87b0-03706a692ea8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522285508,
        "parent_id": "960cb68a-3d89-4790-8ff7-b0a2fe377c87",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522285508,
        "id": "25509af7-360a-4732-993f-c3f525827fd7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522285508,
        "parent_id": "960cb68a-3d89-4790-8ff7-b0a2fe377c87",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Getting the current threads id using "
            ],
            [
              "std::this_thread::get_id",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Getting the current threads id using "
          },
          {
            "Text": "std::this_thread::get_id",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522285509,
        "id": "1e336e5e-83d9-42d0-8e15-af108be48c21",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522285509,
        "parent_id": "960cb68a-3d89-4790-8ff7-b0a2fe377c87",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void foo()\n{\n    //Print this threads id\n    std::cout \u003c\u003c std::this_thread::get_id() \u003c\u003c '\\n';\n}\n\nstd::thread thread{ foo };\nthread.join(); //'threads' id has now been printed, should be something like 12556\n\nfoo(); //The id of the main thread is printed, should be something like 2420"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void foo()\n{\n    //Print this threads id\n    std::cout \u003c\u003c std::this_thread::get_id() \u003c\u003c '\\n';\n}\n\nstd::thread thread{ foo };\nthread.join(); //'threads' id has now been printed, should be something like 12556\n\nfoo(); //The id of the main thread is printed, should be something like 2420",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522285509,
        "id": "25b36600-55c4-414e-962c-2195a03724a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522285509,
        "parent_id": "960cb68a-3d89-4790-8ff7-b0a2fe377c87",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522285509,
        "id": "0674bf4c-1e66-4dc8-9479-181989438b95",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522285509,
        "parent_id": "960cb68a-3d89-4790-8ff7-b0a2fe377c87",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sleeping for 3 seconds using "
            ],
            [
              "std::this_thread::sleep_for",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sleeping for 3 seconds using "
          },
          {
            "Text": "std::this_thread::sleep_for",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522285509,
        "id": "8868c0f4-194e-4e41-b3d0-b8387592ec72",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522285509,
        "parent_id": "960cb68a-3d89-4790-8ff7-b0a2fe377c87",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void foo()\n{\n    std::this_thread::sleep_for(std::chrono::seconds(3));\n}\n\nstd::thread thread{ foo };\nfoo.join();\n\nstd::cout \u003c\u003c \"Waited for 3 seconds!\\n\";"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void foo()\n{\n    std::this_thread::sleep_for(std::chrono::seconds(3));\n}\n\nstd::thread thread{ foo };\nfoo.join();\n\nstd::cout \u003c\u003c \"Waited for 3 seconds!\\n\";",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522285509,
        "id": "04e8dcc8-b3bc-46af-85b3-c5bfe5befb99",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522285509,
        "parent_id": "960cb68a-3d89-4790-8ff7-b0a2fe377c87",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522285509,
        "id": "dad4ddcb-91ba-4d91-b059-7073ca96430b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522285509,
        "parent_id": "960cb68a-3d89-4790-8ff7-b0a2fe377c87",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sleeping until 3 hours in the future using "
            ],
            [
              "std::this_thread::sleep_until",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sleeping until 3 hours in the future using "
          },
          {
            "Text": "std::this_thread::sleep_until",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522285509,
        "id": "5962b22a-b828-4a5c-ae5c-9f947724263a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522285509,
        "parent_id": "960cb68a-3d89-4790-8ff7-b0a2fe377c87",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void foo()\n{\n    std::this_thread::sleep_until(std::chrono::system_clock::now() + std::chrono::hours(3));\n}\n\nstd::thread thread{ foo };\nthread.join();\n\nstd::cout \u003c\u003c \"We are now located 3 hours after the thread has been called\\n\";"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void foo()\n{\n    std::this_thread::sleep_until(std::chrono::system_clock::now() + std::chrono::hours(3));\n}\n\nstd::thread thread{ foo };\nthread.join();\n\nstd::cout \u003c\u003c \"We are now located 3 hours after the thread has been called\\n\";",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522285509,
        "id": "882ce7e3-d665-45c4-9125-34a4e428da6b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522285509,
        "parent_id": "960cb68a-3d89-4790-8ff7-b0a2fe377c87",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522285509,
        "id": "2047bad8-cded-459c-b824-a7f7ba957856",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522285509,
        "parent_id": "960cb68a-3d89-4790-8ff7-b0a2fe377c87",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Letting other threads take priority using "
            ],
            [
              "std::this_thread::yield",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Letting other threads take priority using "
          },
          {
            "Text": "std::this_thread::yield",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522285510,
        "id": "363523b2-0ccb-48dc-b846-ec0feb707196",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522285510,
        "parent_id": "960cb68a-3d89-4790-8ff7-b0a2fe377c87",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void foo(int a)\n{\n    for (int i = 0; i \u003c al ++i)\n        std::this_thread::yield(); //Now other threads take priority, because this thread\n                                   //isn't doing anything important\n\n    std::cout \u003c\u003c \"Hello World!\\n\";\n}\n\nstd::thread thread{ foo, 10 };\nthread.join();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void foo(int a)\n{\n    for (int i = 0; i \u003c al ++i)\n        std::this_thread::yield(); //Now other threads take priority, because this thread\n                                   //isn't doing anything important\n\n    std::cout \u003c\u003c \"Hello World!\\n\";\n}\n\nstd::thread thread{ foo, 10 };\nthread.join();",
        "code_language": "Plain Text"
      }
    ],
    "title": "Operations on the current thread",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}