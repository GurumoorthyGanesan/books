{
  "ID": "106b5073-a8b4-45d8-8605-7fa501b2369e",
  "Root": {
    "alive": true,
    "content": [
      "5d984bb5-205b-4546-9ba0-178581b0ca7b",
      "957fdfcb-eb81-4331-9777-87d2d919ff75",
      "e1e8f2eb-c399-4e3d-9cfb-92afa5eabc45",
      "72b547cf-daf1-4e64-a701-a53935db60ce",
      "cec350ad-c229-4273-a69d-3110f2c72947",
      "57c7942d-2cba-4ea3-9037-39c4c5b808d4",
      "b75fa751-8758-43a9-be43-33d65a187273",
      "26272b0e-1963-46ec-9b4d-86fff8a1ac5f",
      "f0166ebb-86f0-4613-a040-a01d4188bf18",
      "a2f5a33f-5c17-4d24-b400-25e7f18cd30d",
      "b4b0909d-19e8-4134-9c03-806faf18b276",
      "c48d9b8c-ee52-48f0-9e66-c8238f676de1",
      "8463c836-52dd-4983-b89e-0aeadd470531",
      "a6b5a561-a30a-4a57-890f-5f0d708e6899",
      "c523347d-dc2c-4f39-ac7f-2c36c03563ec",
      "bbe0dd41-107a-4914-97cc-7e4e3166bc8b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523818976,
    "id": "106b5073-a8b4-45d8-8605-7fa501b2369e",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550523818976,
    "parent_id": "b7131d5c-8602-4af3-82a7-7c00e59ad384",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "040 Fundamental type traits"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523818971,
        "id": "5d984bb5-205b-4546-9ba0-178581b0ca7b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523818971,
        "parent_id": "106b5073-a8b4-45d8-8605-7fa501b2369e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are a number of different type traits that compare more general types."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are a number of different type traits that compare more general types."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523818973,
        "id": "957fdfcb-eb81-4331-9777-87d2d919ff75",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523818973,
        "parent_id": "106b5073-a8b4-45d8-8605-7fa501b2369e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Is Integral:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Is Integral:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523818974,
        "id": "e1e8f2eb-c399-4e3d-9cfb-92afa5eabc45",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523818974,
        "parent_id": "106b5073-a8b4-45d8-8605-7fa501b2369e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Evaluates as true for all integer types "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "unsigned int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " etc."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Evaluates as true for all integer types "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "long",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "unsigned int",
            "AttrFlags": 2
          },
          {
            "Text": " etc."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523818974,
        "id": "72b547cf-daf1-4e64-a701-a53935db60ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523818974,
        "parent_id": "106b5073-a8b4-45d8-8605-7fa501b2369e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::cout \u003c\u003c std::is_integral\u003cint\u003e::value \u003c\u003c \"\\n\"; // Prints true.\nstd::cout \u003c\u003c std::is_integral\u003cchar\u003e::value \u003c\u003c \"\\n\"; // Prints true.\nstd::cout \u003c\u003c std::is_integral\u003cfloat\u003e::value \u003c\u003c \"\\n\"; // Prints false."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::cout \u003c\u003c std::is_integral\u003cint\u003e::value \u003c\u003c \"\\n\"; // Prints true.\nstd::cout \u003c\u003c std::is_integral\u003cchar\u003e::value \u003c\u003c \"\\n\"; // Prints true.\nstd::cout \u003c\u003c std::is_integral\u003cfloat\u003e::value \u003c\u003c \"\\n\"; // Prints false.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523818974,
        "id": "cec350ad-c229-4273-a69d-3110f2c72947",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523818974,
        "parent_id": "106b5073-a8b4-45d8-8605-7fa501b2369e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Is Floating Point:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Is Floating Point:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523818974,
        "id": "57c7942d-2cba-4ea3-9037-39c4c5b808d4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523818974,
        "parent_id": "106b5073-a8b4-45d8-8605-7fa501b2369e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Evaluates as true for all floating point types. "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ","
            ],
            [
              "double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "long double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " etc."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Evaluates as true for all floating point types. "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": ","
          },
          {
            "Text": "double",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "long double",
            "AttrFlags": 2
          },
          {
            "Text": " etc."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523818975,
        "id": "b75fa751-8758-43a9-be43-33d65a187273",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523818975,
        "parent_id": "106b5073-a8b4-45d8-8605-7fa501b2369e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::cout \u003c\u003c std::is_floating_point\u003cfloat\u003e::value \u003c\u003c \"\\n\"; // Prints true.\nstd::cout \u003c\u003c std::is_floating_point\u003cdouble\u003e::value \u003c\u003c \"\\n\"; // Prints true.\nstd::cout \u003c\u003c std::is_floating_point\u003cchar\u003e::value \u003c\u003c \"\\n\"; // Prints false."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::cout \u003c\u003c std::is_floating_point\u003cfloat\u003e::value \u003c\u003c \"\\n\"; // Prints true.\nstd::cout \u003c\u003c std::is_floating_point\u003cdouble\u003e::value \u003c\u003c \"\\n\"; // Prints true.\nstd::cout \u003c\u003c std::is_floating_point\u003cchar\u003e::value \u003c\u003c \"\\n\"; // Prints false.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523818975,
        "id": "26272b0e-1963-46ec-9b4d-86fff8a1ac5f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523818975,
        "parent_id": "106b5073-a8b4-45d8-8605-7fa501b2369e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Is Enum:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Is Enum:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523818975,
        "id": "f0166ebb-86f0-4613-a040-a01d4188bf18",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523818975,
        "parent_id": "106b5073-a8b4-45d8-8605-7fa501b2369e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Evaluates as true for all enumerated types, including "
            ],
            [
              "enum class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Evaluates as true for all enumerated types, including "
          },
          {
            "Text": "enum class",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523818975,
        "id": "a2f5a33f-5c17-4d24-b400-25e7f18cd30d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523818975,
        "parent_id": "106b5073-a8b4-45d8-8605-7fa501b2369e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "enum fruit {apple, pair, banana};\nenum class vegetable {carrot, spinach, leek};\nstd::cout \u003c\u003c std::is_enum\u003cfruit\u003e::value \u003c\u003c \"\\n\"; // Prints true.\nstd::cout \u003c\u003c std::is_enum\u003cvegetable\u003e::value \u003c\u003c \"\\n\"; // Prints true.\nstd::cout \u003c\u003c std::is_enum\u003cint\u003e::value \u003c\u003c \"\\n\"; // Prints false."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "enum fruit {apple, pair, banana};\nenum class vegetable {carrot, spinach, leek};\nstd::cout \u003c\u003c std::is_enum\u003cfruit\u003e::value \u003c\u003c \"\\n\"; // Prints true.\nstd::cout \u003c\u003c std::is_enum\u003cvegetable\u003e::value \u003c\u003c \"\\n\"; // Prints true.\nstd::cout \u003c\u003c std::is_enum\u003cint\u003e::value \u003c\u003c \"\\n\"; // Prints false.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523818975,
        "id": "b4b0909d-19e8-4134-9c03-806faf18b276",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523818975,
        "parent_id": "106b5073-a8b4-45d8-8605-7fa501b2369e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Is Pointer:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Is Pointer:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523818975,
        "id": "c48d9b8c-ee52-48f0-9e66-c8238f676de1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523818975,
        "parent_id": "106b5073-a8b4-45d8-8605-7fa501b2369e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Evaluates as true for all pointers."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Evaluates as true for all pointers."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523818975,
        "id": "8463c836-52dd-4983-b89e-0aeadd470531",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523818975,
        "parent_id": "106b5073-a8b4-45d8-8605-7fa501b2369e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::cout \u003c\u003c std::is_pointer\u003cint *\u003e::value \u003c\u003c \"\\n\"; // Prints true.\ntypedef int* MyPTR;\nstd::cout \u003c\u003c std::is_pointer\u003cMyPTR\u003e::value \u003c\u003c \"\\n\"; // Prints true.\nstd::cout \u003c\u003c std::is_pointer\u003cint\u003e::value \u003c\u003c \"\\n\"; // Prints false."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::cout \u003c\u003c std::is_pointer\u003cint *\u003e::value \u003c\u003c \"\\n\"; // Prints true.\ntypedef int* MyPTR;\nstd::cout \u003c\u003c std::is_pointer\u003cMyPTR\u003e::value \u003c\u003c \"\\n\"; // Prints true.\nstd::cout \u003c\u003c std::is_pointer\u003cint\u003e::value \u003c\u003c \"\\n\"; // Prints false.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523818975,
        "id": "a6b5a561-a30a-4a57-890f-5f0d708e6899",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523818975,
        "parent_id": "106b5073-a8b4-45d8-8605-7fa501b2369e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Is Class:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Is Class:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523818976,
        "id": "c523347d-dc2c-4f39-ac7f-2c36c03563ec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523818976,
        "parent_id": "106b5073-a8b4-45d8-8605-7fa501b2369e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Evaluates as true for all classes and struct, with the exception of "
            ],
            [
              "enum class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Evaluates as true for all classes and struct, with the exception of "
          },
          {
            "Text": "enum class",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523818976,
        "id": "bbe0dd41-107a-4914-97cc-7e4e3166bc8b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523818976,
        "parent_id": "106b5073-a8b4-45d8-8605-7fa501b2369e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct FOO {int x, y;};\nclass BAR {\n public:\n  int x, y;\n};\nenum class fruit {apple, pair, banana};\nstd::cout \u003c\u003c std::is_class\u003cFOO\u003e::value \u003c\u003c \"\\n\"; // Prints true.\nstd::cout \u003c\u003c std::is_class\u003cBAR\u003e::value \u003c\u003c \"\\n\"; // Prints true.\nstd::cout \u003c\u003c std::is_class\u003cfruit\u003e::value \u003c\u003c \"\\n\"; // Prints false.\nstd::cout \u003c\u003c std::is_class\u003cint\u003e::value \u003c\u003c \"\\n\"; // Prints false."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct FOO {int x, y;};\nclass BAR {\n public:\n  int x, y;\n};\nenum class fruit {apple, pair, banana};\nstd::cout \u003c\u003c std::is_class\u003cFOO\u003e::value \u003c\u003c \"\\n\"; // Prints true.\nstd::cout \u003c\u003c std::is_class\u003cBAR\u003e::value \u003c\u003c \"\\n\"; // Prints true.\nstd::cout \u003c\u003c std::is_class\u003cfruit\u003e::value \u003c\u003c \"\\n\"; // Prints false.\nstd::cout \u003c\u003c std::is_class\u003cint\u003e::value \u003c\u003c \"\\n\"; // Prints false.",
        "code_language": "Plain Text"
      }
    ],
    "title": "040 Fundamental type traits"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}