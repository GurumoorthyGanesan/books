{
  "ID": "77d28940-60d5-4eea-beb2-5e5d7fc4185e",
  "Root": {
    "alive": true,
    "content": [
      "c2b76a1c-5bce-43ae-9b20-cc9e85c5d4ea",
      "113c5584-b060-4177-85a1-96f7db65c00c",
      "8a8e438f-3d28-48a4-984f-1a038df20dfd"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550524763561,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "77d28940-60d5-4eea-beb2-5e5d7fc4185e",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551688807470,
    "parent_id": "333099ca-9ef1-4569-b9ad-a7a9275c368b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Create a parameter pack consisting of integers"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524763558,
        "id": "c2b76a1c-5bce-43ae-9b20-cc9e85c5d4ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524763558,
        "parent_id": "77d28940-60d5-4eea-beb2-5e5d7fc4185e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::integer_sequence",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " itself is about holding a sequence of integers which can be turned into a parameter pack. Its primary value is the possibility to create “factory” class templates creating these sequences:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "std::integer_sequence",
            "AttrFlags": 2
          },
          {
            "Text": " itself is about holding a sequence of integers which can be turned into a parameter pack. Its primary value is the possibility to create “factory” class templates creating these sequences:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524763561,
        "id": "113c5584-b060-4177-85a1-96f7db65c00c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524763561,
        "parent_id": "77d28940-60d5-4eea-beb2-5e5d7fc4185e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003ciostream\u003e\n#include \u003cinitializer_list\u003e\n#include \u003cutility\u003e\n\ntemplate \u003ctypename T, T... I\u003e\nvoid print_sequence(std::integer_sequence\u003cT, I...\u003e) {\n    std::initializer_list\u003cbool\u003e{ bool(std::cout \u003c\u003c I \u003c\u003c ' ')... };\n    std::cout \u003c\u003c '\\n';\n}\n\ntemplate \u003cint Offset, typename T, T... I\u003e\nvoid print_offset_sequence(std::integer_sequence\u003cT, I...\u003e) {\n    print_sequence(std::integer_sequence\u003cT, T(I + Offset)...\u003e());\n}\n\nint main() {\n    // explicitly specify sequences:\n    print_sequence(std::integer_sequence\u003cint, 1, 2, 3\u003e());\n    print_sequence(std::integer_sequence\u003cchar, 'f', 'o', 'o'\u003e());\n\n    // generate sequences:\n    print_sequence(std::make_index_sequence\u003c10\u003e());\n    print_sequence(std::make_integer_sequence\u003cshort, 10\u003e());\n    print_offset_sequence\u003c'A'\u003e(std::make_integer_sequence\u003cchar, 26\u003e());\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003ciostream\u003e\n#include \u003cinitializer_list\u003e\n#include \u003cutility\u003e\n\ntemplate \u003ctypename T, T... I\u003e\nvoid print_sequence(std::integer_sequence\u003cT, I...\u003e) {\n    std::initializer_list\u003cbool\u003e{ bool(std::cout \u003c\u003c I \u003c\u003c ' ')... };\n    std::cout \u003c\u003c '\\n';\n}\n\ntemplate \u003cint Offset, typename T, T... I\u003e\nvoid print_offset_sequence(std::integer_sequence\u003cT, I...\u003e) {\n    print_sequence(std::integer_sequence\u003cT, T(I + Offset)...\u003e());\n}\n\nint main() {\n    // explicitly specify sequences:\n    print_sequence(std::integer_sequence\u003cint, 1, 2, 3\u003e());\n    print_sequence(std::integer_sequence\u003cchar, 'f', 'o', 'o'\u003e());\n\n    // generate sequences:\n    print_sequence(std::make_index_sequence\u003c10\u003e());\n    print_sequence(std::make_integer_sequence\u003cshort, 10\u003e());\n    print_offset_sequence\u003c'A'\u003e(std::make_integer_sequence\u003cchar, 26\u003e());\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550524763561,
        "id": "8a8e438f-3d28-48a4-984f-1a038df20dfd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550524763561,
        "parent_id": "77d28940-60d5-4eea-beb2-5e5d7fc4185e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "print_sequence()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function template uses an "
            ],
            [
              "std::initializer_list\u003cbool\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when expanding the integer sequence to guarantee the order of evaluation and not creating an unused [array] variable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "print_sequence()",
            "AttrFlags": 2
          },
          {
            "Text": " function template uses an "
          },
          {
            "Text": "std::initializer_list\u003cbool\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " when expanding the integer sequence to guarantee the order of evaluation and not creating an unused [array] variable."
          }
        ]
      }
    ],
    "title": "Create a parameter pack consisting of integers",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}