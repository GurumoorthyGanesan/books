{
  "ID": "4c1bf05c-5f39-4e2b-b33c-0005a7ad78a1",
  "Root": {
    "alive": true,
    "content": [
      "8383fe50-bc65-4716-b69d-3cd245be6031",
      "ea20b19e-87bc-457c-810e-26fa794214ea",
      "7fb5011b-7d11-4142-91f3-3e6d171c8aef",
      "d5fca62d-ff53-4ce7-94df-c82fdf6103d2",
      "110e592d-c163-48c5-a645-d51140230a9d",
      "cfbfbe1f-ec92-4f1b-ac6e-f8b9a4317e4e",
      "f0195d61-1a5d-41d9-87e9-753c6175398e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523888054,
    "id": "4c1bf05c-5f39-4e2b-b33c-0005a7ad78a1",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550523888054,
    "parent_id": "5644241e-ceec-479a-8322-e9c1780f1515",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "000 std variant"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523888051,
        "id": "8383fe50-bc65-4716-b69d-3cd245be6031",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523888051,
        "parent_id": "4c1bf05c-5f39-4e2b-b33c-0005a7ad78a1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Versions"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Versions"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523888053,
        "id": "ea20b19e-87bc-457c-810e-26fa794214ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523888053,
        "parent_id": "4c1bf05c-5f39-4e2b-b33c-0005a7ad78a1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "[{“Name”:“C++17”,“GroupName”:null}]"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "[{“Name”:“C++17”,“GroupName”:null}]"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523888053,
        "id": "7fb5011b-7d11-4142-91f3-3e6d171c8aef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523888053,
        "parent_id": "4c1bf05c-5f39-4e2b-b33c-0005a7ad78a1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523888053,
        "id": "d5fca62d-ff53-4ce7-94df-c82fdf6103d2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523888053,
        "parent_id": "4c1bf05c-5f39-4e2b-b33c-0005a7ad78a1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Variant is a replacement for raw "
            ],
            [
              "union",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " use. It is type-safe and knows what type it is, and it carefully constructs and destroys the objects within it when it should."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Variant is a replacement for raw "
          },
          {
            "Text": "union",
            "AttrFlags": 2
          },
          {
            "Text": " use. It is type-safe and knows what type it is, and it carefully constructs and destroys the objects within it when it should."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523888054,
        "id": "110e592d-c163-48c5-a645-d51140230a9d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523888054,
        "parent_id": "4c1bf05c-5f39-4e2b-b33c-0005a7ad78a1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is almost never empty: only in corner cases where replacing its content throws and it cannot back out safely does it end up being in an empty state."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is almost never empty: only in corner cases where replacing its content throws and it cannot back out safely does it end up being in an empty state."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523888054,
        "id": "cfbfbe1f-ec92-4f1b-ac6e-f8b9a4317e4e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523888054,
        "parent_id": "4c1bf05c-5f39-4e2b-b33c-0005a7ad78a1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It behaves somewhat like a "
            ],
            [
              "std::tuple",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and somewhat like an "
            ],
            [
              "std::optional",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It behaves somewhat like a "
          },
          {
            "Text": "std::tuple",
            "AttrFlags": 2
          },
          {
            "Text": ", and somewhat like an "
          },
          {
            "Text": "std::optional",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523888054,
        "id": "f0195d61-1a5d-41d9-87e9-753c6175398e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523888054,
        "parent_id": "4c1bf05c-5f39-4e2b-b33c-0005a7ad78a1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using "
            ],
            [
              "std::get",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "std::get_if",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is usually a bad idea. The right answer is usually "
            ],
            [
              "std::visit",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which lets you deal with every possibility right there. "
            ],
            [
              "if constexpr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be used within the "
            ],
            [
              "visit",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if you need to branch your behavior, rather than doing a sequence of runtime checks that duplicate what "
            ],
            [
              "visit",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will do more efficiently."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using "
          },
          {
            "Text": "std::get",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "std::get_if",
            "AttrFlags": 2
          },
          {
            "Text": " is usually a bad idea. The right answer is usually "
          },
          {
            "Text": "std::visit",
            "AttrFlags": 2
          },
          {
            "Text": ", which lets you deal with every possibility right there. "
          },
          {
            "Text": "if constexpr",
            "AttrFlags": 2
          },
          {
            "Text": " can be used within the "
          },
          {
            "Text": "visit",
            "AttrFlags": 2
          },
          {
            "Text": " if you need to branch your behavior, rather than doing a sequence of runtime checks that duplicate what "
          },
          {
            "Text": "visit",
            "AttrFlags": 2
          },
          {
            "Text": " will do more efficiently."
          }
        ]
      }
    ],
    "title": "000 std variant"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}