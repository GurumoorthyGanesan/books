{
  "ID": "eadb5fa2-2def-4b82-b5e3-13e4a84ba2ab",
  "Root": {
    "alive": true,
    "content": [
      "f5d13148-faf6-4243-a28c-a67979507c1d",
      "88b1300f-b853-4668-9940-1c5193ce519f",
      "e1e325da-35cb-42cb-9504-053e758d9ae6",
      "36571078-7927-4802-93e3-717e777cc383",
      "e56cf0d7-1d5c-4c35-87c2-ff1ff681b0ca",
      "df74516f-1353-40a3-abb5-3779d8870d50",
      "501064de-d0ae-494d-bbde-b948f278a040",
      "549d5599-14d6-40c0-bd2b-97c764425ff0",
      "2764ad60-c7d7-414c-8818-de08a247f4ee",
      "20116fb8-b842-48ba-8e12-449f8b310ce3",
      "e890ba83-0728-4cd4-b172-b1ea663d2df3",
      "7d7af08c-42ab-4d78-a4d6-77e0727fa596"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523875466,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "eadb5fa2-2def-4b82-b5e3-13e4a84ba2ab",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551687995735,
    "parent_id": "3b6d2215-7c30-4151-b9f1-7d1dc6e9d0de",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "What functions are found"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523875458,
        "id": "f5d13148-faf6-4243-a28c-a67979507c1d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523875458,
        "parent_id": "eadb5fa2-2def-4b82-b5e3-13e4a84ba2ab",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Functions are found by first collecting a set of "
            ],
            [
              "“associated classes”",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "“associated namespaces”",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " that include one ore more of the following, depending on the argument type "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". First, let us show the rules for classes, enumeration and class template specialization names."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Functions are found by first collecting a set of "
          },
          {
            "Text": "“associated classes”",
            "AttrFlags": 4
          },
          {
            "Text": " and "
          },
          {
            "Text": "“associated namespaces”",
            "AttrFlags": 4
          },
          {
            "Text": " that include one ore more of the following, depending on the argument type "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": ". First, let us show the rules for classes, enumeration and class template specialization names."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523875462,
        "id": "88b1300f-b853-4668-9940-1c5193ce519f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523875462,
        "parent_id": "eadb5fa2-2def-4b82-b5e3-13e4a84ba2ab",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a nested class, member enumeration, then the surrounding class of it."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": " is a nested class, member enumeration, then the surrounding class of it."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523875463,
        "id": "e1e325da-35cb-42cb-9504-053e758d9ae6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523875463,
        "parent_id": "eadb5fa2-2def-4b82-b5e3-13e4a84ba2ab",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is an enumeration (it may "
            ],
            [
              "also",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " be a class member!), the innermost namespace of it."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": " is an enumeration (it may "
          },
          {
            "Text": "also",
            "AttrFlags": 4
          },
          {
            "Text": " be a class member!), the innermost namespace of it."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523875463,
        "id": "36571078-7927-4802-93e3-717e777cc383",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523875463,
        "parent_id": "eadb5fa2-2def-4b82-b5e3-13e4a84ba2ab",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a class (it may "
            ],
            [
              "also",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " be nested!), all its base classes and the class itself. The innermost namespace of all associated classes."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": " is a class (it may "
          },
          {
            "Text": "also",
            "AttrFlags": 4
          },
          {
            "Text": " be nested!), all its base classes and the class itself. The innermost namespace of all associated classes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523875464,
        "id": "e56cf0d7-1d5c-4c35-87c2-ff1ff681b0ca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523875464,
        "parent_id": "eadb5fa2-2def-4b82-b5e3-13e4a84ba2ab",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a "
            ],
            [
              "ClassTemplate\u003cTemplateArguments\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (this is "
            ],
            [
              "also",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " a class!), the classes and namespaces associated with the template type arguments, the namespace of any template template argument and the surrounding class of any template template argument, if a template argument is a member template."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": " is a "
          },
          {
            "Text": "ClassTemplate\u003cTemplateArguments\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " (this is "
          },
          {
            "Text": "also",
            "AttrFlags": 4
          },
          {
            "Text": " a class!), the classes and namespaces associated with the template type arguments, the namespace of any template template argument and the surrounding class of any template template argument, if a template argument is a member template."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523875464,
        "id": "df74516f-1353-40a3-abb5-3779d8870d50",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523875464,
        "parent_id": "eadb5fa2-2def-4b82-b5e3-13e4a84ba2ab",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now there are a few rules for builtin types as well"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now there are a few rules for builtin types as well"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523875465,
        "id": "501064de-d0ae-494d-bbde-b948f278a040",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523875465,
        "parent_id": "eadb5fa2-2def-4b82-b5e3-13e4a84ba2ab",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a pointer to "
            ],
            [
              "U",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or array of "
            ],
            [
              "U",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the classes and namespaces associated with "
            ],
            [
              "U",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Example: "
            ],
            [
              "void (*fptr)(A); f(fptr);",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", includes the namespaces and classes associated with "
            ],
            [
              "void(A)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (see next rule)."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": " is a pointer to "
          },
          {
            "Text": "U",
            "AttrFlags": 2
          },
          {
            "Text": " or array of "
          },
          {
            "Text": "U",
            "AttrFlags": 2
          },
          {
            "Text": ", the classes and namespaces associated with "
          },
          {
            "Text": "U",
            "AttrFlags": 2
          },
          {
            "Text": ". Example: "
          },
          {
            "Text": "void (*fptr)(A); f(fptr);",
            "AttrFlags": 2
          },
          {
            "Text": ", includes the namespaces and classes associated with "
          },
          {
            "Text": "void(A)",
            "AttrFlags": 2
          },
          {
            "Text": " (see next rule)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523875465,
        "id": "549d5599-14d6-40c0-bd2b-97c764425ff0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523875465,
        "parent_id": "eadb5fa2-2def-4b82-b5e3-13e4a84ba2ab",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a function type, the classes and namespaces associated with parameter and return types. Example: "
            ],
            [
              "void(A)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " would includes the namespaces and classes associated with "
            ],
            [
              "A",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": " is a function type, the classes and namespaces associated with parameter and return types. Example: "
          },
          {
            "Text": "void(A)",
            "AttrFlags": 2
          },
          {
            "Text": " would includes the namespaces and classes associated with "
          },
          {
            "Text": "A",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523875465,
        "id": "2764ad60-c7d7-414c-8818-de08a247f4ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523875465,
        "parent_id": "eadb5fa2-2def-4b82-b5e3-13e4a84ba2ab",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a pointer to member, the classes and namespaces associated with the member type (may apply to both pointer to member functions and pointer to data member!). Example: "
            ],
            [
              "B A::*p; void (A::*pf)(B); f(p); f(pf);",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " includes the namespaces and classes associated with "
            ],
            [
              "A",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "B",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "void(B)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (which applies bullet above for function types)."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": " is a pointer to member, the classes and namespaces associated with the member type (may apply to both pointer to member functions and pointer to data member!). Example: "
          },
          {
            "Text": "B A::*p; void (A::*pf)(B); f(p); f(pf);",
            "AttrFlags": 2
          },
          {
            "Text": " includes the namespaces and classes associated with "
          },
          {
            "Text": "A",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "B",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "void(B)",
            "AttrFlags": 2
          },
          {
            "Text": " (which applies bullet above for function types)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523875466,
        "id": "20116fb8-b842-48ba-8e12-449f8b310ce3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523875466,
        "parent_id": "eadb5fa2-2def-4b82-b5e3-13e4a84ba2ab",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All functions and templates within all associated namespaces are found by argument dependent lookup.",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " In addition, "
            ],
            [
              "namespace-scope friend functions declared in associated classes are found",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", which are normally not visible. Using directives are ignored, however."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All functions and templates within all associated namespaces are found by argument dependent lookup.",
            "AttrFlags": 4
          },
          {
            "Text": " In addition, "
          },
          {
            "Text": "namespace-scope friend functions declared in associated classes are found",
            "AttrFlags": 4
          },
          {
            "Text": ", which are normally not visible. Using directives are ignored, however."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523875466,
        "id": "e890ba83-0728-4cd4-b172-b1ea663d2df3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523875466,
        "parent_id": "eadb5fa2-2def-4b82-b5e3-13e4a84ba2ab",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All of the following example calls are valid, without qualifying "
            ],
            [
              "f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " by the namespace name in the call."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All of the following example calls are valid, without qualifying "
          },
          {
            "Text": "f",
            "AttrFlags": 2
          },
          {
            "Text": " by the namespace name in the call."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523875466,
        "id": "7d7af08c-42ab-4d78-a4d6-77e0727fa596",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523875466,
        "parent_id": "eadb5fa2-2def-4b82-b5e3-13e4a84ba2ab",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "namespace A {\n   struct Z { };\n   namespace I { void g(Z); }\n   using namespace I;\n\n   struct X { struct Y { }; friend void f(Y) { } };\n   void f(X p) { }\n   void f(std::shared_ptr\u003cX\u003e p) { }\n}\n\n// example calls\nf(A::X());\nf(A::X::Y());\nf(std::make_shared\u003cA::X\u003e());\n\ng(A::Z()); // invalid: \"using namespace I;\" is ignored!"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "namespace A {\n   struct Z { };\n   namespace I { void g(Z); }\n   using namespace I;\n\n   struct X { struct Y { }; friend void f(Y) { } };\n   void f(X p) { }\n   void f(std::shared_ptr\u003cX\u003e p) { }\n}\n\n// example calls\nf(A::X());\nf(A::X::Y());\nf(std::make_shared\u003cA::X\u003e());\n\ng(A::Z()); // invalid: \"using namespace I;\" is ignored!",
        "code_language": "Plain Text"
      }
    ],
    "title": "What functions are found",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}