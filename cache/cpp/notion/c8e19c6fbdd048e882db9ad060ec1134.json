{
  "ID": "c8e19c6f-bdd0-48e8-82db-9ad060ec1134",
  "Root": {
    "alive": true,
    "content": [
      "a26756df-d3a3-468c-9419-0fe2df5cc590",
      "907b9659-736a-445f-bffd-8763e097e8da",
      "16f12326-9632-4d8a-b93b-0be8ca46469c",
      "04545916-1f8d-436f-b6ec-afc10a8b17d5",
      "cee1d514-e590-4c6b-b100-9b7868814450",
      "6b439f6d-48c4-4208-8438-baaed7f6cdcb",
      "7fae5112-f344-451f-ac4b-9b9eb70298e8",
      "5933fc75-ae7f-4021-8934-ae31d4277d02"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522051512,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c8e19c6f-bdd0-48e8-82db-9ad060ec1134",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550655840000,
    "parent_id": "8655f492-9c51-4f68-ad52-8b6c1e02a277",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Concatenating Vectors"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522051510,
        "id": "a26756df-d3a3-468c-9419-0fe2df5cc590",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522051510,
        "parent_id": "c8e19c6f-bdd0-48e8-82db-9ad060ec1134",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One "
            ],
            [
              "std::vector",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be append to another by using the member function "
            ],
            [
              "insert()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/container/vector/insert"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One "
          },
          {
            "Text": "std::vector",
            "AttrFlags": 2
          },
          {
            "Text": " can be append to another by using the member function "
          },
          {
            "Text": "insert()",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/container/vector/insert"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522051510,
        "id": "907b9659-736a-445f-bffd-8763e097e8da",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522051510,
        "parent_id": "c8e19c6f-bdd0-48e8-82db-9ad060ec1134",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::vector\u003cint\u003e a = {0, 1, 2, 3, 4};\nstd::vector\u003cint\u003e b = {5, 6, 7, 8, 9};\n\na.insert(a.end(), b.begin(), b.end());"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::vector\u003cint\u003e a = {0, 1, 2, 3, 4};\nstd::vector\u003cint\u003e b = {5, 6, 7, 8, 9};\n\na.insert(a.end(), b.begin(), b.end());",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522051511,
        "id": "16f12326-9632-4d8a-b93b-0be8ca46469c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522051511,
        "parent_id": "c8e19c6f-bdd0-48e8-82db-9ad060ec1134",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, this solution fails if you try to append a vector to itself, because the standard specifies that iterators given to "
            ],
            [
              "insert()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " must not be from the same range as the receiver object’s elements."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, this solution fails if you try to append a vector to itself, because the standard specifies that iterators given to "
          },
          {
            "Text": "insert()",
            "AttrFlags": 2
          },
          {
            "Text": " must not be from the same range as the receiver object’s elements."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522051512,
        "id": "04545916-1f8d-436f-b6ec-afc10a8b17d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522051512,
        "parent_id": "c8e19c6f-bdd0-48e8-82db-9ad060ec1134",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Instead of using the vector’s member functions, the functions "
            ],
            [
              "std::begin()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/iterator/begin"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "std::end()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/iterator/end"
                ]
              ]
            ],
            [
              " can be used:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Instead of using the vector’s member functions, the functions "
          },
          {
            "Text": "std::begin()",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/iterator/begin"
          },
          {
            "Text": " and "
          },
          {
            "Text": "std::end()",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/iterator/end"
          },
          {
            "Text": " can be used:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522051512,
        "id": "cee1d514-e590-4c6b-b100-9b7868814450",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522051512,
        "parent_id": "c8e19c6f-bdd0-48e8-82db-9ad060ec1134",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "a.insert(std::end(a), std::begin(b), std::end(b));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "a.insert(std::end(a), std::begin(b), std::end(b));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522051512,
        "id": "6b439f6d-48c4-4208-8438-baaed7f6cdcb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522051512,
        "parent_id": "c8e19c6f-bdd0-48e8-82db-9ad060ec1134",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is a more general solution, for example, because "
            ],
            [
              "b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can also be an array. However, also this solution doesn’t allow you to append a vector to itself."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is a more general solution, for example, because "
          },
          {
            "Text": "b",
            "AttrFlags": 2
          },
          {
            "Text": " can also be an array. However, also this solution doesn’t allow you to append a vector to itself."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522051512,
        "id": "7fae5112-f344-451f-ac4b-9b9eb70298e8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522051512,
        "parent_id": "c8e19c6f-bdd0-48e8-82db-9ad060ec1134",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the order of the elements in the receiving vector doesn’t matter, considering the number of elements in each vector can avoid unnecessary copy operations:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the order of the elements in the receiving vector doesn’t matter, considering the number of elements in each vector can avoid unnecessary copy operations:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522051512,
        "id": "5933fc75-ae7f-4021-8934-ae31d4277d02",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522051512,
        "parent_id": "c8e19c6f-bdd0-48e8-82db-9ad060ec1134",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if (b.size() \u003c a.size())\n  a.insert(a.end(), b.begin(), b.end());\nelse\n  b.insert(b.end(), a.begin(), a.end());"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if (b.size() \u003c a.size())\n  a.insert(a.end(), b.begin(), b.end());\nelse\n  b.insert(b.end(), a.begin(), a.end());",
        "code_language": "Plain Text"
      }
    ],
    "title": "Concatenating Vectors",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}