{
  "ID": "2b766d8e-3221-4eaa-9fa9-c8f6e9276050",
  "Root": {
    "alive": true,
    "content": [
      "c12e4ade-c1a4-43cf-b940-192ab7c4af8a",
      "ec4b78cf-174f-4109-bf31-e4c609ae54b6",
      "b18acce5-4161-4e75-8d23-990be323f584"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550521961581,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "2b766d8e-3221-4eaa-9fa9-c8f6e9276050",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550796660000,
    "parent_id": "cbd900b3-1684-4f0d-977a-5a5b2a20aff3",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "if-then-else"
        ]
      ]
    },
    "type": "page",
    "version": 11,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521961580,
        "id": "c12e4ade-c1a4-43cf-b940-192ab7c4af8a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521961580,
        "parent_id": "2b766d8e-3221-4eaa-9fa9-c8f6e9276050",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The type "
            ],
            [
              "std::conditional",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the standard library header "
            ],
            [
              "\u003ctype_traits\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can select one type or the other, based on a compile-time boolean value:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The type "
          },
          {
            "Text": "std::conditional",
            "AttrFlags": 2
          },
          {
            "Text": " in the standard library header "
          },
          {
            "Text": "\u003ctype_traits\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " can select one type or the other, based on a compile-time boolean value:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521961580,
        "id": "ec4b78cf-174f-4109-bf31-e4c609ae54b6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550796660000,
        "parent_id": "2b766d8e-3221-4eaa-9fa9-c8f6e9276050",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "template\u003ctypename T\u003e\nstruct ValueOrPointer\n{\n    typename std::conditional\u003c(sizeof(T) \u003e sizeof(void*)), T*, T\u003e::type vop;\n};"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "template\u003ctypename T\u003e\nstruct ValueOrPointer\n{\n    typename std::conditional\u003c(sizeof(T) \u003e sizeof(void*)), T*, T\u003e::type vop;\n};",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550521961581,
        "id": "b18acce5-4161-4e75-8d23-990be323f584",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550521961581,
        "parent_id": "2b766d8e-3221-4eaa-9fa9-c8f6e9276050",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This struct contains a pointer to "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is larger than the size of a pointer, or "
            ],
            [
              "T",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " itself if it is smaller or equal to a pointer’s size. Therefore "
            ],
            [
              "sizeof(ValueOrPointer)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will always be \u003c= "
            ],
            [
              "sizeof(void*)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This struct contains a pointer to "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": " if "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": " is larger than the size of a pointer, or "
          },
          {
            "Text": "T",
            "AttrFlags": 2
          },
          {
            "Text": " itself if it is smaller or equal to a pointer’s size. Therefore "
          },
          {
            "Text": "sizeof(ValueOrPointer)",
            "AttrFlags": 2
          },
          {
            "Text": " will always be \u003c= "
          },
          {
            "Text": "sizeof(void*)",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "if-then-else",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}