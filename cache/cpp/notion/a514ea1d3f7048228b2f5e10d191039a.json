{
  "ID": "a514ea1d-3f70-4822-8b2f-5e10d191039a",
  "Root": {
    "alive": true,
    "content": [
      "7e26dafa-8296-4066-b9a9-b0990926eb60",
      "63149e5b-f70a-417c-bd63-b5f420bb6645",
      "dca25087-2992-401d-a850-3f631241744d",
      "02aa9c40-800b-4ec7-919b-43768336d19f",
      "696b77b7-dd2a-4d78-82d4-6f821018814b",
      "381b8723-ba1c-441a-be89-dea4024b3b65",
      "4572b064-6b3c-4644-b9d8-09b4885a41ac",
      "431c6bfa-db38-41b0-8ae5-05c7afb5c564",
      "c08a0ff0-ae84-4d41-8a71-81a3274c5617",
      "ea4bd10e-382c-4805-a52f-a37d4563e398",
      "808b4324-4ecd-477b-9abf-29173dbe02e3",
      "fe51135d-f36d-4994-916e-0e1a51384d9b",
      "8a62b8de-c8c4-4f45-8106-7b41202e29ee"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522079445,
    "id": "a514ea1d-3f70-4822-8b2f-5e10d191039a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550522079445,
    "parent_id": "ee10cf45-84c7-467c-8068-ea9076a2401a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "050 Loop Control statements Break and Continue"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522079440,
        "id": "7e26dafa-8296-4066-b9a9-b0990926eb60",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522079440,
        "parent_id": "a514ea1d-3f70-4822-8b2f-5e10d191039a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Loop control statements are used to change the flow of execution from its normal sequence. When execution leaves a scope, all automatic objects that were created in that scope are destroyed. The "
            ],
            [
              "break",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "continue",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are loop control statements."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Loop control statements are used to change the flow of execution from its normal sequence. When execution leaves a scope, all automatic objects that were created in that scope are destroyed. The "
          },
          {
            "Text": "break",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "continue",
            "AttrFlags": 2
          },
          {
            "Text": " are loop control statements."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522079443,
        "id": "63149e5b-f70a-417c-bd63-b5f420bb6645",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522079443,
        "parent_id": "a514ea1d-3f70-4822-8b2f-5e10d191039a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "break",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement terminates a loop without any further consideration."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "break",
            "AttrFlags": 2
          },
          {
            "Text": " statement terminates a loop without any further consideration."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522079443,
        "id": "dca25087-2992-401d-a850-3f631241744d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522079443,
        "parent_id": "a514ea1d-3f70-4822-8b2f-5e10d191039a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "for (int i = 0; i \u003c 10; i++)\n{\n    if (i == 4)\n        break; // this will immediately exit our loop\n    std::cout \u003c\u003c i \u003c\u003c '\\n';\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "for (int i = 0; i \u003c 10; i++)\n{\n    if (i == 4)\n        break; // this will immediately exit our loop\n    std::cout \u003c\u003c i \u003c\u003c '\\n';\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522079443,
        "id": "02aa9c40-800b-4ec7-919b-43768336d19f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522079443,
        "parent_id": "a514ea1d-3f70-4822-8b2f-5e10d191039a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The above code will print out:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The above code will print out:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522079443,
        "id": "696b77b7-dd2a-4d78-82d4-6f821018814b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522079443,
        "parent_id": "a514ea1d-3f70-4822-8b2f-5e10d191039a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "1\n2\n3"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "1\n2\n3",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522079443,
        "id": "381b8723-ba1c-441a-be89-dea4024b3b65",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522079444,
        "parent_id": "a514ea1d-3f70-4822-8b2f-5e10d191039a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "continue",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement does not immediately exit the loop, but rather skips the rest of the loop body and goes to the top of the loop (including checking the condition)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "continue",
            "AttrFlags": 2
          },
          {
            "Text": " statement does not immediately exit the loop, but rather skips the rest of the loop body and goes to the top of the loop (including checking the condition)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522079444,
        "id": "4572b064-6b3c-4644-b9d8-09b4885a41ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522079444,
        "parent_id": "a514ea1d-3f70-4822-8b2f-5e10d191039a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "for (int i = 0; i \u003c 6; i++)\n{\n    if (i % 2 == 0) // evaluates to true if i is even\n        continue; // this will immediately go back to the start of the loop\n    /* the next line will only be reached if the above \"continue\" statement \n       does not execute  */\n    std::cout \u003c\u003c i \u003c\u003c \" is an odd number\\n\";\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "for (int i = 0; i \u003c 6; i++)\n{\n    if (i % 2 == 0) // evaluates to true if i is even\n        continue; // this will immediately go back to the start of the loop\n    /* the next line will only be reached if the above \"continue\" statement \n       does not execute  */\n    std::cout \u003c\u003c i \u003c\u003c \" is an odd number\\n\";\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522079444,
        "id": "431c6bfa-db38-41b0-8ae5-05c7afb5c564",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522079444,
        "parent_id": "a514ea1d-3f70-4822-8b2f-5e10d191039a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The above code will print out:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The above code will print out:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522079444,
        "id": "c08a0ff0-ae84-4d41-8a71-81a3274c5617",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522079444,
        "parent_id": "a514ea1d-3f70-4822-8b2f-5e10d191039a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "1 is an odd number\n3 is an odd number\n5 is an odd number"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "1 is an odd number\n3 is an odd number\n5 is an odd number",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522079444,
        "id": "ea4bd10e-382c-4805-a52f-a37d4563e398",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522079444,
        "parent_id": "a514ea1d-3f70-4822-8b2f-5e10d191039a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Because such control flow changes are sometimes difficult for humans to easily understand, "
            ],
            [
              "break",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "continue",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are used sparingly. More straightforward implementation are usually easier to read and understand. For example, the first "
            ],
            [
              "for",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " loop with the "
            ],
            [
              "break",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " above might be rewritten as:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Because such control flow changes are sometimes difficult for humans to easily understand, "
          },
          {
            "Text": "break",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "continue",
            "AttrFlags": 2
          },
          {
            "Text": " are used sparingly. More straightforward implementation are usually easier to read and understand. For example, the first "
          },
          {
            "Text": "for",
            "AttrFlags": 2
          },
          {
            "Text": " loop with the "
          },
          {
            "Text": "break",
            "AttrFlags": 2
          },
          {
            "Text": " above might be rewritten as:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522079444,
        "id": "808b4324-4ecd-477b-9abf-29173dbe02e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522079444,
        "parent_id": "a514ea1d-3f70-4822-8b2f-5e10d191039a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "for (int i = 0; i \u003c 4; i++)\n{\n    std::cout \u003c\u003c i \u003c\u003c '\\n';\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "for (int i = 0; i \u003c 4; i++)\n{\n    std::cout \u003c\u003c i \u003c\u003c '\\n';\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522079445,
        "id": "fe51135d-f36d-4994-916e-0e1a51384d9b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522079445,
        "parent_id": "a514ea1d-3f70-4822-8b2f-5e10d191039a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The second example with "
            ],
            [
              "continue",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " might be rewritten as:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The second example with "
          },
          {
            "Text": "continue",
            "AttrFlags": 2
          },
          {
            "Text": " might be rewritten as:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522079445,
        "id": "8a62b8de-c8c4-4f45-8106-7b41202e29ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522079445,
        "parent_id": "a514ea1d-3f70-4822-8b2f-5e10d191039a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "for (int i = 0; i \u003c 6; i++)\n{\n    if (i % 2 != 0) {\n        std::cout \u003c\u003c i \u003c\u003c \" is an odd number\\n\";\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "for (int i = 0; i \u003c 6; i++)\n{\n    if (i % 2 != 0) {\n        std::cout \u003c\u003c i \u003c\u003c \" is an odd number\\n\";\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "050 Loop Control statements Break and Continue"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}