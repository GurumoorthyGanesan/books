{
  "ID": "9a81e0e2-994e-41b0-aa0f-0bb41311ad7d",
  "Root": {
    "alive": true,
    "content": [
      "2aaa949b-b260-4e8a-b4a7-b14803452855",
      "38281b34-cba8-4d76-b3dc-a1ecf6183e0d",
      "e2a9bae3-a0b9-4568-83b6-fa067b1ecee0",
      "6679b07f-ae84-472b-a7d6-db07f1ae08ed",
      "0c8e661b-675c-4ed8-9071-3549e91be3a7",
      "9fc80f74-14b1-4cb8-8d70-7d671916671b",
      "3b1f81f2-75ad-49db-9093-4cb6c4ba65e7"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550525160000,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "9a81e0e2-994e-41b0-aa0f-0bb41311ad7d",
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552345800000,
    "parent_id": "ad527dc6-d4a7-420b-9234-94d0b9bfb560",
    "parent_table": "block",
    "permissions": [
      {
        "role": "editor",
        "type": "user_permission",
        "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
      }
    ],
    "properties": {
      "title": [
        [
          "std::forward_list"
        ]
      ]
    },
    "type": "page",
    "version": 50,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525178729,
        "id": "2aaa949b-b260-4e8a-b4a7-b14803452855",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552345620000,
        "parent_id": "9a81e0e2-994e-41b0-aa0f-0bb41311ad7d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "sub_header",
        "version": 3,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525178729,
        "id": "38281b34-cba8-4d76-b3dc-a1ecf6183e0d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552345620000,
        "parent_id": "9a81e0e2-994e-41b0-aa0f-0bb41311ad7d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "std::forward_list",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a container that supports fast insertion and removal of elements from anywhere in the container. Fast random access is not supported. It is implemented as a singly-linked list and essentially does not have any overhead compared to its implementation in C. Compared to "
            ],
            [
              "std::list",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " this container provides more space efficient storage when bidirectional iteration is not needed."
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "std::forward_list",
            "AttrFlags": 2
          },
          {
            "Text": " is a container that supports fast insertion and removal of elements from anywhere in the container. Fast random access is not supported. It is implemented as a singly-linked list and essentially does not have any overhead compared to its implementation in C. Compared to "
          },
          {
            "Text": "std::list",
            "AttrFlags": 2
          },
          {
            "Text": " this container provides more space efficient storage when bidirectional iteration is not needed."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525178729,
        "id": "e2a9bae3-a0b9-4568-83b6-fa067b1ecee0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552345620000,
        "parent_id": "9a81e0e2-994e-41b0-aa0f-0bb41311ad7d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 3,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525178729,
        "id": "6679b07f-ae84-472b-a7d6-db07f1ae08ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552345620000,
        "parent_id": "9a81e0e2-994e-41b0-aa0f-0bb41311ad7d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Adding, removing and moving the elements within the list, or across several lists, does not invalidate the iterators currently referring to other elements in the list. However, an iterator or reference referring to an element is invalidated when the corresponding element is removed (via erase_after) from the list. std::forward_list meets the requirements of Container (except for the size member function and that operator==’s complexity is always linear), AllocatorAwareContainer and SequenceContainer."
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "Adding, removing and moving the elements within the list, or across several lists, does not invalidate the iterators currently referring to other elements in the list. However, an iterator or reference referring to an element is invalidated when the corresponding element is removed (via erase_after) from the list. std::forward_list meets the requirements of Container (except for the size member function and that operator==’s complexity is always linear), AllocatorAwareContainer and SequenceContainer."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552345620000,
        "id": "0c8e661b-675c-4ed8-9071-3549e91be3a7",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552345620000,
        "parent_id": "9a81e0e2-994e-41b0-aa0f-0bb41311ad7d",
        "parent_table": "block",
        "type": "text",
        "version": 4
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525179473,
        "format": {
          "page_full_width": true,
          "page_small_text": true
        },
        "id": "9fc80f74-14b1-4cb8-8d70-7d671916671b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552345800000,
        "parent_id": "9a81e0e2-994e-41b0-aa0f-0bb41311ad7d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example"
            ]
          ]
        },
        "type": "page",
        "version": 7,
        "title": "Example",
        "format_page": {
          "page_cover": "",
          "page_cover_position": 0,
          "page_font": "",
          "page_full_width": true,
          "page_icon": "",
          "page_small_text": true
        }
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550525180587,
        "format": {
          "page_full_width": true,
          "page_small_text": true
        },
        "id": "3b1f81f2-75ad-49db-9093-4cb6c4ba65e7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552345740000,
        "parent_id": "9a81e0e2-994e-41b0-aa0f-0bb41311ad7d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Methods"
            ]
          ]
        },
        "type": "page",
        "version": 12,
        "title": "Methods",
        "format_page": {
          "page_cover": "",
          "page_cover_position": 0,
          "page_font": "",
          "page_full_width": true,
          "page_icon": "",
          "page_small_text": true
        }
      }
    ],
    "title": "std::forward_list",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}