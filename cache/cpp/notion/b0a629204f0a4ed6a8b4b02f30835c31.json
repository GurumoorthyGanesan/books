{
  "ID": "b0a62920-4f0a-4ed6-a8b4-b02f30835c31",
  "Root": {
    "alive": true,
    "content": [
      "1d4786a7-d57d-44d0-b5f8-44675bae594b",
      "51d9da7f-fabc-45c4-a99a-c963540a2ce5",
      "f4c7bc25-d861-4771-9263-1e6bac23c801",
      "0f7be6f1-f70a-453d-b6a1-2eab075a4a33",
      "3037d3d1-280d-40cc-8bc7-6370000fdcaf",
      "855e3f9a-a80d-4ba1-ba8b-60433b93c763",
      "5d670789-179f-471a-8d14-e4e82f84ac7c",
      "5e29504a-c451-4fa7-8856-3707895556f1",
      "db1fc5d8-9598-4346-898e-9a70b07cbff6",
      "d1aa4da9-e46e-4b12-b853-badaf32eb394",
      "03f3bdd2-40f5-4c51-9e1f-bfaabc86ee3c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522726560,
    "id": "b0a62920-4f0a-4ed6-a8b4-b02f30835c31",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550522726560,
    "parent_id": "fe5135d2-0f28-4675-bccd-611b7222102a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "030 auto const and references"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522726555,
        "id": "1d4786a7-d57d-44d0-b5f8-44675bae594b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522726555,
        "parent_id": "b0a62920-4f0a-4ed6-a8b4-b02f30835c31",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "auto",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword by itself represents a value type, similar to "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". It can be modified with the "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword and the "
            ],
            [
              "\u0026",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " symbol to represent a const type or a reference type, respectively. These modifiers can be combined."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "auto",
            "AttrFlags": 2
          },
          {
            "Text": " keyword by itself represents a value type, similar to "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": ". It can be modified with the "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " keyword and the "
          },
          {
            "Text": "\u0026",
            "AttrFlags": 2
          },
          {
            "Text": " symbol to represent a const type or a reference type, respectively. These modifiers can be combined."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522726558,
        "id": "51d9da7f-fabc-45c4-a99a-c963540a2ce5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522726558,
        "parent_id": "b0a62920-4f0a-4ed6-a8b4-b02f30835c31",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example, "
            ],
            [
              "s",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a value type (its type will be inferred as "
            ],
            [
              "std::string",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "), so each iteration of the "
            ],
            [
              "for",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " loop "
            ],
            [
              "copies",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " a string from the vector into "
            ],
            [
              "s",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example, "
          },
          {
            "Text": "s",
            "AttrFlags": 2
          },
          {
            "Text": " is a value type (its type will be inferred as "
          },
          {
            "Text": "std::string",
            "AttrFlags": 2
          },
          {
            "Text": "), so each iteration of the "
          },
          {
            "Text": "for",
            "AttrFlags": 2
          },
          {
            "Text": " loop "
          },
          {
            "Text": "copies",
            "AttrFlags": 4
          },
          {
            "Text": " a string from the vector into "
          },
          {
            "Text": "s",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522726558,
        "id": "f4c7bc25-d861-4771-9263-1e6bac23c801",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522726558,
        "parent_id": "b0a62920-4f0a-4ed6-a8b4-b02f30835c31",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::vector\u003cstd::string\u003e strings = { \"stuff\", \"things\", \"misc\" };\nfor(auto s : strings) {\n    std::cout \u003c\u003c s \u003c\u003c std::endl;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::vector\u003cstd::string\u003e strings = { \"stuff\", \"things\", \"misc\" };\nfor(auto s : strings) {\n    std::cout \u003c\u003c s \u003c\u003c std::endl;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522726558,
        "id": "0f7be6f1-f70a-453d-b6a1-2eab075a4a33",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522726558,
        "parent_id": "b0a62920-4f0a-4ed6-a8b4-b02f30835c31",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the body of the loop modifies "
            ],
            [
              "s",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (such as by calling "
            ],
            [
              "s.append(\" and stuff\")",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "), only this copy will be modified, not the original member of "
            ],
            [
              "strings",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the body of the loop modifies "
          },
          {
            "Text": "s",
            "AttrFlags": 2
          },
          {
            "Text": " (such as by calling "
          },
          {
            "Text": "s.append(\" and stuff\")",
            "AttrFlags": 2
          },
          {
            "Text": "), only this copy will be modified, not the original member of "
          },
          {
            "Text": "strings",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522726559,
        "id": "3037d3d1-280d-40cc-8bc7-6370000fdcaf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522726559,
        "parent_id": "b0a62920-4f0a-4ed6-a8b4-b02f30835c31",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "On the other hand, if "
            ],
            [
              "s",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is declared with "
            ],
            [
              "auto\u0026",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " it will be a reference type (inferred to be "
            ],
            [
              "std::string\u0026",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "), so on each iteration of the loop it will be assigned a "
            ],
            [
              "reference",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " to a string in the vector:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "On the other hand, if "
          },
          {
            "Text": "s",
            "AttrFlags": 2
          },
          {
            "Text": " is declared with "
          },
          {
            "Text": "auto\u0026",
            "AttrFlags": 2
          },
          {
            "Text": " it will be a reference type (inferred to be "
          },
          {
            "Text": "std::string\u0026",
            "AttrFlags": 2
          },
          {
            "Text": "), so on each iteration of the loop it will be assigned a "
          },
          {
            "Text": "reference",
            "AttrFlags": 4
          },
          {
            "Text": " to a string in the vector:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522726559,
        "id": "855e3f9a-a80d-4ba1-ba8b-60433b93c763",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522726559,
        "parent_id": "b0a62920-4f0a-4ed6-a8b4-b02f30835c31",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "for(auto\u0026 s : strings) {\n    std::cout \u003c\u003c s \u003c\u003c std::endl;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "for(auto\u0026 s : strings) {\n    std::cout \u003c\u003c s \u003c\u003c std::endl;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522726559,
        "id": "5d670789-179f-471a-8d14-e4e82f84ac7c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522726559,
        "parent_id": "b0a62920-4f0a-4ed6-a8b4-b02f30835c31",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the body of this loop, modifications to "
            ],
            [
              "s",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will directly affect the element of "
            ],
            [
              "strings",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that it references."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the body of this loop, modifications to "
          },
          {
            "Text": "s",
            "AttrFlags": 2
          },
          {
            "Text": " will directly affect the element of "
          },
          {
            "Text": "strings",
            "AttrFlags": 2
          },
          {
            "Text": " that it references."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522726559,
        "id": "5e29504a-c451-4fa7-8856-3707895556f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522726559,
        "parent_id": "b0a62920-4f0a-4ed6-a8b4-b02f30835c31",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finally, if "
            ],
            [
              "s",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is declared "
            ],
            [
              "const auto\u0026",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", it will be a const reference type, meaning that on each iteration of the loop it will be assigned a "
            ],
            [
              "const reference",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " to a string in the vector:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finally, if "
          },
          {
            "Text": "s",
            "AttrFlags": 2
          },
          {
            "Text": " is declared "
          },
          {
            "Text": "const auto\u0026",
            "AttrFlags": 2
          },
          {
            "Text": ", it will be a const reference type, meaning that on each iteration of the loop it will be assigned a "
          },
          {
            "Text": "const reference",
            "AttrFlags": 4
          },
          {
            "Text": " to a string in the vector:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522726560,
        "id": "db1fc5d8-9598-4346-898e-9a70b07cbff6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522726560,
        "parent_id": "b0a62920-4f0a-4ed6-a8b4-b02f30835c31",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "for(const auto\u0026 s : strings) {\n    std::cout \u003c\u003c s \u003c\u003c std::endl;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "for(const auto\u0026 s : strings) {\n    std::cout \u003c\u003c s \u003c\u003c std::endl;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522726560,
        "id": "d1aa4da9-e46e-4b12-b853-badaf32eb394",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522726560,
        "parent_id": "b0a62920-4f0a-4ed6-a8b4-b02f30835c31",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Within the body of this loop, "
            ],
            [
              "s",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " cannot be modified (i.e. no non-const methods can be called on it)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Within the body of this loop, "
          },
          {
            "Text": "s",
            "AttrFlags": 2
          },
          {
            "Text": " cannot be modified (i.e. no non-const methods can be called on it)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522726560,
        "id": "03f3bdd2-40f5-4c51-9e1f-bfaabc86ee3c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522726560,
        "parent_id": "b0a62920-4f0a-4ed6-a8b4-b02f30835c31",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When using "
            ],
            [
              "auto",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with range-based "
            ],
            [
              "for",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " loops, it is generally good practice to use "
            ],
            [
              "const auto\u0026",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if the loop body will not modify the structure being looped over, since this avoids unnecessary copies."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When using "
          },
          {
            "Text": "auto",
            "AttrFlags": 2
          },
          {
            "Text": " with range-based "
          },
          {
            "Text": "for",
            "AttrFlags": 2
          },
          {
            "Text": " loops, it is generally good practice to use "
          },
          {
            "Text": "const auto\u0026",
            "AttrFlags": 2
          },
          {
            "Text": " if the loop body will not modify the structure being looped over, since this avoids unnecessary copies."
          }
        ]
      }
    ],
    "title": "030 auto const and references"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}