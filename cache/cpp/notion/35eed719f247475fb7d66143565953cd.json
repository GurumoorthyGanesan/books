{
  "ID": "35eed719-f247-475f-b7d6-6143565953cd",
  "Root": {
    "alive": true,
    "content": [
      "d67b795e-3c15-4a33-8773-be8cc19dfaee",
      "e9c3b1b2-8661-44e4-b8db-873d1b33f788",
      "546a55c2-f111-46b3-a670-0633fdfd56fd",
      "f5de0383-e8d2-407e-bd2d-45306bd1a7f3",
      "70b5ce5c-6977-482a-9183-3d7cc0453f45",
      "f586b138-0bd8-4ef3-8751-207b15623dfa",
      "9ed464e3-4e07-4277-82a6-88ac7bef6c90",
      "ffcf1301-e7f2-4e07-be91-325f56377736",
      "93aa035a-ce26-4bf5-9913-82a979307ec3",
      "4195744d-43e2-4bd1-bf5a-b72db1536cd1",
      "01e70c15-e362-4355-a26e-77447cd80f5b",
      "368824f0-f20f-4942-b570-f5cf408682a9",
      "df39e2c3-c9da-4e50-b77b-8cbc0582b2fb",
      "680987e4-307a-4e5e-93f2-14ed69e05d6e",
      "3ef17f9d-2b38-46de-ac73-7d595d0a97fe",
      "df468820-173b-4f7b-aaf4-916a772b356f",
      "2f2731b7-e50c-4e10-b4c9-28cf35930e4e",
      "7259aa3d-2fc1-453e-8ce7-eac1cc1a8577",
      "8886834f-7d4d-4bc5-bdc1-619b09433d7b",
      "65dfd7a4-b4bc-4ee0-a1eb-bbf51e37cc29",
      "be8dca2e-17be-4a3b-86ac-93deaa13e768",
      "8eb03beb-7e7e-43dd-8d67-372254df1175",
      "076a6f99-2889-4ece-9ed2-eb17ecc236ce",
      "aa5679d4-62c9-40f2-b709-fce8e6a08a3b",
      "27fc834d-367a-4af6-9584-e1099cb97444",
      "e8cd5219-59e5-42d0-a5e8-de567af904ec",
      "f9674479-ed2b-4fff-ae6f-1fb0ed85fcf9",
      "1189277d-bc07-4944-81a4-a723d45e167f",
      "4a360421-00b8-4d16-9d10-0a4cbdeee807",
      "ef5a9730-e126-4322-a843-a334c5814117",
      "6c698888-59d7-4061-a562-06d1316b44ff",
      "a70164c9-8818-46c9-8688-196094188714",
      "404a31ec-ebb7-493f-b180-1da07429ee84",
      "22fbb0c4-adea-4c2c-a41f-2547cb83e165",
      "90e0007a-f81a-4946-8ea6-699507188a0c",
      "e6749425-ad12-4cf3-b007-5c040d1a06b9",
      "1eb6fc50-cbf7-4fbf-b834-9af21854b7c5",
      "afba8538-558b-494d-9fdf-301d5a0142f2",
      "f7a93fea-76c4-4518-90df-4949ee59acb9",
      "f2acd88c-92e1-41ce-9047-23e80b4fbae6",
      "ea3d92de-8453-4924-ba68-154622124931",
      "d088b3bb-f708-4c59-b255-44121c8f085d",
      "5a27dc91-a872-43a2-b2a3-9f03dff10229",
      "aca6f607-a08b-49a3-917b-141ce024fca5",
      "f13e5568-3a54-471f-a19a-5a132e783e5d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522344554,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "35eed719-f247-475f-b7d6-6143565953cd",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550709720000,
    "parent_id": "48a240ac-2fc8-4208-bd39-82f2c3d27cb4",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "01Size of integral types"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344536,
        "id": "d67b795e-3c15-4a33-8773-be8cc19dfaee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344536,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following types are defined as "
            ],
            [
              "integral types",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following types are defined as "
          },
          {
            "Text": "integral types",
            "AttrFlags": 4
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344539,
        "id": "e9c3b1b2-8661-44e4-b8db-873d1b33f788",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344539,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "char",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344540,
        "id": "546a55c2-f111-46b3-a670-0633fdfd56fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344540,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Signed integer types"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Signed integer types"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344540,
        "id": "f5de0383-e8d2-407e-bd2d-45306bd1a7f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344540,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Unsigned integer types"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Unsigned integer types"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344540,
        "id": "70b5ce5c-6977-482a-9183-3d7cc0453f45",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344540,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "char16_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "char32_t",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "char16_t",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "char32_t",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344540,
        "id": "f586b138-0bd8-4ef3-8751-207b15623dfa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344540,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "bool",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "bool",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344540,
        "id": "9ed464e3-4e07-4277-82a6-88ac7bef6c90",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344540,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "wchar_t",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "wchar_t",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344541,
        "id": "ffcf1301-e7f2-4e07-be91-325f56377736",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344541,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With the exception of "
            ],
            [
              "sizeof(char)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " / "
            ],
            [
              "sizeof(signed char)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " / "
            ],
            [
              "sizeof(unsigned char)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is split between § 3.9.1.1 [basic.fundamental/1] and § 5.3.3.1 [expr.sizeof], and "
            ],
            [
              "sizeof(bool)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is entirely implementation-defined and has no minimum size, the minimum size requirements of these types are given in section § 3.9.1 [basic.fundamental] of the standard, and shall be detailed below."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With the exception of "
          },
          {
            "Text": "sizeof(char)",
            "AttrFlags": 2
          },
          {
            "Text": " / "
          },
          {
            "Text": "sizeof(signed char)",
            "AttrFlags": 2
          },
          {
            "Text": " / "
          },
          {
            "Text": "sizeof(unsigned char)",
            "AttrFlags": 2
          },
          {
            "Text": ", which is split between § 3.9.1.1 [basic.fundamental/1] and § 5.3.3.1 [expr.sizeof], and "
          },
          {
            "Text": "sizeof(bool)",
            "AttrFlags": 2
          },
          {
            "Text": ", which is entirely implementation-defined and has no minimum size, the minimum size requirements of these types are given in section § 3.9.1 [basic.fundamental] of the standard, and shall be detailed below."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344541,
        "id": "93aa035a-ce26-4bf5-9913-82a979307ec3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344541,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Size of "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Size of "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344541,
        "id": "4195744d-43e2-4bd1-bf5a-b72db1536cd1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344541,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All versions of the C++ standard specify, in § 5.3.3.1, that "
            ],
            [
              "sizeof",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " yields "
            ],
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for "
            ],
            [
              "unsigned char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "signed char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (it is implementation defined whether the "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " type is "
            ],
            [
              "signed",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "unsigned",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All versions of the C++ standard specify, in § 5.3.3.1, that "
          },
          {
            "Text": "sizeof",
            "AttrFlags": 2
          },
          {
            "Text": " yields "
          },
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": " for "
          },
          {
            "Text": "unsigned char",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "signed char",
            "AttrFlags": 2
          },
          {
            "Text": ", and "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": " (it is implementation defined whether the "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": " type is "
          },
          {
            "Text": "signed",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "unsigned",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344542,
        "id": "01e70c15-e362-4355-a26e-77447cd80f5b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344542,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is large enough to represent 256 different values, to be suitable for storing UTF-8 code units."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": " is large enough to represent 256 different values, to be suitable for storing UTF-8 code units."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344542,
        "id": "368824f0-f20f-4942-b570-f5cf408682a9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344542,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Size of signed and unsigned integer types"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Size of signed and unsigned integer types"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344542,
        "id": "df39e2c3-c9da-4e50-b77b-8cbc0582b2fb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344542,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The standard specifies, in § 3.9.1.2, that in the list of "
            ],
            [
              "standard signed integer types",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", consisting of "
            ],
            [
              "signed char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "short int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "long int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and "
            ],
            [
              "long long int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", each type will provide at least as much storage as those preceding it in the list. Furthermore, as specified in § 3.9.1.3, each of these types has a corresponding "
            ],
            [
              "standard unsigned integer type",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "unsigned char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "unsigned short int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "unsigned int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "unsigned long int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and "
            ],
            [
              "unsigned long long int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which has the same size and alignment as its corresponding signed type. Additionally, as specified in § 3.9.1.1, "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has the same size and alignment requirements as both "
            ],
            [
              "signed char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "unsigned char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The standard specifies, in § 3.9.1.2, that in the list of "
          },
          {
            "Text": "standard signed integer types",
            "AttrFlags": 4
          },
          {
            "Text": ", consisting of "
          },
          {
            "Text": "signed char",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "short int",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "long int",
            "AttrFlags": 2
          },
          {
            "Text": ", and "
          },
          {
            "Text": "long long int",
            "AttrFlags": 2
          },
          {
            "Text": ", each type will provide at least as much storage as those preceding it in the list. Furthermore, as specified in § 3.9.1.3, each of these types has a corresponding "
          },
          {
            "Text": "standard unsigned integer type",
            "AttrFlags": 4
          },
          {
            "Text": ", "
          },
          {
            "Text": "unsigned char",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "unsigned short int",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "unsigned int",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "unsigned long int",
            "AttrFlags": 2
          },
          {
            "Text": ", and "
          },
          {
            "Text": "unsigned long long int",
            "AttrFlags": 2
          },
          {
            "Text": ", which has the same size and alignment as its corresponding signed type. Additionally, as specified in § 3.9.1.1, "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": " has the same size and alignment requirements as both "
          },
          {
            "Text": "signed char",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "unsigned char",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344543,
        "id": "680987e4-307a-4e5e-93f2-14ed69e05d6e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344543,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Prior to C++11, "
            ],
            [
              "long long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "unsigned long long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " were not officially part of the C++ standard. However, after their introduction to C, in C99, many compilers supported "
            ],
            [
              "long long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as an "
            ],
            [
              "extended signed integer type",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", and "
            ],
            [
              "unsigned long long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as an "
            ],
            [
              "extended unsigned integer type",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", with the same rules as the C types."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Prior to C++11, "
          },
          {
            "Text": "long long",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "unsigned long long",
            "AttrFlags": 2
          },
          {
            "Text": " were not officially part of the C++ standard. However, after their introduction to C, in C99, many compilers supported "
          },
          {
            "Text": "long long",
            "AttrFlags": 2
          },
          {
            "Text": " as an "
          },
          {
            "Text": "extended signed integer type",
            "AttrFlags": 4
          },
          {
            "Text": ", and "
          },
          {
            "Text": "unsigned long long",
            "AttrFlags": 2
          },
          {
            "Text": " as an "
          },
          {
            "Text": "extended unsigned integer type",
            "AttrFlags": 4
          },
          {
            "Text": ", with the same rules as the C types."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344543,
        "id": "3ef17f9d-2b38-46de-ac73-7d595d0a97fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344543,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The standard thus guarantees that:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The standard thus guarantees that:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344543,
        "id": "df468820-173b-4f7b-aaf4-916a772b356f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344543,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "1 == sizeof(char)  == sizeof(signed char) == sizeof(unsigned char)\n  \u003c= sizeof(short) == sizeof(unsigned short)\n  \u003c= sizeof(int)   == sizeof(unsigned int)\n  \u003c= sizeof(long)  == sizeof(unsigned long)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "1 == sizeof(char)  == sizeof(signed char) == sizeof(unsigned char)\n  \u003c= sizeof(short) == sizeof(unsigned short)\n  \u003c= sizeof(int)   == sizeof(unsigned int)\n  \u003c= sizeof(long)  == sizeof(unsigned long)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344543,
        "id": "2f2731b7-e50c-4e10-b4c9-28cf35930e4e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344543,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003c= sizeof(long long) == sizeof(unsigned long long)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003c= sizeof(long long) == sizeof(unsigned long long)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344543,
        "id": "7259aa3d-2fc1-453e-8ce7-eac1cc1a8577",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344543,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Specific minimum sizes for each type are not given by the standard. Instead, each type has a minimum range of values it can support, which is, as specified in § 3.9.1.3, inherited from the C standard, in §5.2.4.2.1. The minimum size of each type can be roughly inferred from this range, by determining the minimum number of bits required; note that for any given platform, any type’s actual supported range may be larger than the minimum. Note that for signed types, ranges correspond to one’s complement, not the more commonly used two’s complement; this is to allow a wider range of platforms to comply with the standard."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Specific minimum sizes for each type are not given by the standard. Instead, each type has a minimum range of values it can support, which is, as specified in § 3.9.1.3, inherited from the C standard, in §5.2.4.2.1. The minimum size of each type can be roughly inferred from this range, by determining the minimum number of bits required; note that for any given platform, any type’s actual supported range may be larger than the minimum. Note that for signed types, ranges correspond to one’s complement, not the more commonly used two’s complement; this is to allow a wider range of platforms to comply with the standard."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344544,
        "id": "8886834f-7d4d-4bc5-bdc1-619b09433d7b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344544,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "|Type |Minimum range |Minimum bits required| |:—————––|:———————————————————————–:|––––––––––:| |"
            ],
            [
              "signed char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |-127 to 127 (-(27 - 1) to (27 - 1)) |8 | |"
            ],
            [
              "unsigned char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |0 to 255 (0 to 28 - 1) |8 | |"
            ],
            [
              "signed short",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |-32,767 to 32,767 (-(215 - 1) to (215 - 1)) |16 | |"
            ],
            [
              "unsigned short",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |0 to 65,535 (0 to 216 - 1) |16 | |"
            ],
            [
              "signed int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |-32,767 to 32,767 (-(215 - 1) to (215 - 1)) |16 | |"
            ],
            [
              "unsigned int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |0 to 65,535 (0 to 216 - 1) |16 | |"
            ],
            [
              "signed long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |-2,147,483,647 to 2,147,483,647 (-(231 - 1) to (231 - 1))|32 | |"
            ],
            [
              "unsigned long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |0 to 4,294,967,295 (0 to 232 - 1) |32 |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "|Type |Minimum range |Minimum bits required| |:—————––|:———————————————————————–:|––––––––––:| |"
          },
          {
            "Text": "signed char",
            "AttrFlags": 2
          },
          {
            "Text": " |-127 to 127 (-(27 - 1) to (27 - 1)) |8 | |"
          },
          {
            "Text": "unsigned char",
            "AttrFlags": 2
          },
          {
            "Text": " |0 to 255 (0 to 28 - 1) |8 | |"
          },
          {
            "Text": "signed short",
            "AttrFlags": 2
          },
          {
            "Text": " |-32,767 to 32,767 (-(215 - 1) to (215 - 1)) |16 | |"
          },
          {
            "Text": "unsigned short",
            "AttrFlags": 2
          },
          {
            "Text": " |0 to 65,535 (0 to 216 - 1) |16 | |"
          },
          {
            "Text": "signed int",
            "AttrFlags": 2
          },
          {
            "Text": " |-32,767 to 32,767 (-(215 - 1) to (215 - 1)) |16 | |"
          },
          {
            "Text": "unsigned int",
            "AttrFlags": 2
          },
          {
            "Text": " |0 to 65,535 (0 to 216 - 1) |16 | |"
          },
          {
            "Text": "signed long",
            "AttrFlags": 2
          },
          {
            "Text": " |-2,147,483,647 to 2,147,483,647 (-(231 - 1) to (231 - 1))|32 | |"
          },
          {
            "Text": "unsigned long",
            "AttrFlags": 2
          },
          {
            "Text": " |0 to 4,294,967,295 (0 to 232 - 1) |32 |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344544,
        "id": "65dfd7a4-b4bc-4ee0-a1eb-bbf51e37cc29",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344544,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "|Type |Minimum range |Minimum bits required| |:—————––|:—————————————————–:|––––––––––:| |"
            ],
            [
              "signed long long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |-9,223,372,036,854,775,807 to 9,223,372,036,854,775,807 (-(263 - 1) to (263 - 1))|64 | |"
            ],
            [
              "unsigned long long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "|0 to 18,446,744,073,709,551,615 (0 to 264 - 1) |64 |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "|Type |Minimum range |Minimum bits required| |:—————––|:—————————————————–:|––––––––––:| |"
          },
          {
            "Text": "signed long long",
            "AttrFlags": 2
          },
          {
            "Text": " |-9,223,372,036,854,775,807 to 9,223,372,036,854,775,807 (-(263 - 1) to (263 - 1))|64 | |"
          },
          {
            "Text": "unsigned long long",
            "AttrFlags": 2
          },
          {
            "Text": "|0 to 18,446,744,073,709,551,615 (0 to 264 - 1) |64 |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344544,
        "id": "be8dca2e-17be-4a3b-86ac-93deaa13e768",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344544,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As each type is allowed to be greater than its minimum size requirement, types may differ in size between implementations. The most notable example of this is with the 64-bit data models LP64 and LLP64, where LLP64 systems (such as 64-bit Windows) have 32-bit "
            ],
            [
              "ints",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s, and LP64 systems (such as 64-bit Linux) have 32-bit "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s and 64-bit "
            ],
            [
              "long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s. Due to this, integer types cannot be assumed to have a fixed width across all platforms."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As each type is allowed to be greater than its minimum size requirement, types may differ in size between implementations. The most notable example of this is with the 64-bit data models LP64 and LLP64, where LLP64 systems (such as 64-bit Windows) have 32-bit "
          },
          {
            "Text": "ints",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "long",
            "AttrFlags": 2
          },
          {
            "Text": "s, and LP64 systems (such as 64-bit Linux) have 32-bit "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": "s and 64-bit "
          },
          {
            "Text": "long",
            "AttrFlags": 2
          },
          {
            "Text": "s. Due to this, integer types cannot be assumed to have a fixed width across all platforms."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344546,
        "id": "8eb03beb-7e7e-43dd-8d67-372254df1175",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344546,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If integer types with fixed width are required, use types from the "
            ],
            [
              "\u003ccstdint\u003e",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/header/cstdint"
                ]
              ]
            ],
            [
              " header, but note that the standard makes it optional for implementations to support the exact-width types "
            ],
            [
              "int8_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "int16_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "int32_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "int64_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "intptr_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "uint8_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "uint16_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "uint32_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "uint64_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "uintptr_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If integer types with fixed width are required, use types from the "
          },
          {
            "Text": "\u003ccstdint\u003e",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/header/cstdint"
          },
          {
            "Text": " header, but note that the standard makes it optional for implementations to support the exact-width types "
          },
          {
            "Text": "int8_t",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "int16_t",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "int32_t",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "int64_t",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "intptr_t",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "uint8_t",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "uint16_t",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "uint32_t",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "uint64_t",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "uintptr_t",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344547,
        "id": "076a6f99-2889-4ece-9ed2-eb17ecc236ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344547,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Size of "
            ],
            [
              "char16_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "char32_t",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Size of "
          },
          {
            "Text": "char16_t",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "char32_t",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344547,
        "id": "aa5679d4-62c9-40f2-b709-fce8e6a08a3b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344547,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The sizes of "
            ],
            [
              "char16_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "char32_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are implementation-defined, as specified in § 5.3.3.1, with the stipulations given in § 3.9.1.5:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The sizes of "
          },
          {
            "Text": "char16_t",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "char32_t",
            "AttrFlags": 2
          },
          {
            "Text": " are implementation-defined, as specified in § 5.3.3.1, with the stipulations given in § 3.9.1.5:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344548,
        "id": "27fc834d-367a-4af6-9584-e1099cb97444",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344548,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "char16_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is large enough to represent any UTF-16 code unit, and has the same size, signedness, and alignment as "
            ],
            [
              "uint_least16_t",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/header/cstdint"
                ]
              ]
            ],
            [
              "; it is thus required to be at least 16 bits in size."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "char16_t",
            "AttrFlags": 2
          },
          {
            "Text": " is large enough to represent any UTF-16 code unit, and has the same size, signedness, and alignment as "
          },
          {
            "Text": "uint_least16_t",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/header/cstdint"
          },
          {
            "Text": "; it is thus required to be at least 16 bits in size."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344550,
        "id": "e8cd5219-59e5-42d0-a5e8-de567af904ec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344550,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "char32_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is large enough to represent any UTF-32 code unit, and has the same size, signedness, and alignment as "
            ],
            [
              "uint_least32_t",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/header/cstdint"
                ]
              ]
            ],
            [
              "; it is thus required to be at least 32 bits in size."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "char32_t",
            "AttrFlags": 2
          },
          {
            "Text": " is large enough to represent any UTF-32 code unit, and has the same size, signedness, and alignment as "
          },
          {
            "Text": "uint_least32_t",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/header/cstdint"
          },
          {
            "Text": "; it is thus required to be at least 32 bits in size."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344550,
        "id": "f9674479-ed2b-4fff-ae6f-1fb0ed85fcf9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344550,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Size of "
            ],
            [
              "bool",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Size of "
          },
          {
            "Text": "bool",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344550,
        "id": "1189277d-bc07-4944-81a4-a723d45e167f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344550,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The size of "
            ],
            [
              "bool",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is implementation defined, and may or may not be "
            ],
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The size of "
          },
          {
            "Text": "bool",
            "AttrFlags": 2
          },
          {
            "Text": " is implementation defined, and may or may not be "
          },
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344551,
        "id": "4a360421-00b8-4d16-9d10-0a4cbdeee807",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344551,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Size of wchar_t"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Size of wchar_t"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344551,
        "id": "ef5a9730-e126-4322-a843-a334c5814117",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344551,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "wchar_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", as specified in § 3.9.1.5, is a distinct type, whose range of values can represent every distinct code unit of the largest extended character set among the supported locales. It has the same size, signedness, and alignment as one of the other integral types, which is known as its "
            ],
            [
              "underlying type",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". This type’s size is implementation-defined, as specified in § 5.3.3.1, and may be, for example, at least 8, 16, or 32 bits; if a system supports Unicode, for example, "
            ],
            [
              "wchar_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is required to be at least 32 bits (an exception to this rule is Windows, where "
            ],
            [
              "wchar_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is 16 bits for compatibility purposes). It is inherited from the C90 standard, ISO 9899:1990 § 4.1.5, with only minor rewording."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "wchar_t",
            "AttrFlags": 2
          },
          {
            "Text": ", as specified in § 3.9.1.5, is a distinct type, whose range of values can represent every distinct code unit of the largest extended character set among the supported locales. It has the same size, signedness, and alignment as one of the other integral types, which is known as its "
          },
          {
            "Text": "underlying type",
            "AttrFlags": 4
          },
          {
            "Text": ". This type’s size is implementation-defined, as specified in § 5.3.3.1, and may be, for example, at least 8, 16, or 32 bits; if a system supports Unicode, for example, "
          },
          {
            "Text": "wchar_t",
            "AttrFlags": 2
          },
          {
            "Text": " is required to be at least 32 bits (an exception to this rule is Windows, where "
          },
          {
            "Text": "wchar_t",
            "AttrFlags": 2
          },
          {
            "Text": " is 16 bits for compatibility purposes). It is inherited from the C90 standard, ISO 9899:1990 § 4.1.5, with only minor rewording."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344551,
        "id": "6c698888-59d7-4061-a562-06d1316b44ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344551,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Depending on the implementation, the size of "
            ],
            [
              "wchar_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is often, but not always, 8, 16, or 32 bits. The most common examples of these are:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Depending on the implementation, the size of "
          },
          {
            "Text": "wchar_t",
            "AttrFlags": 2
          },
          {
            "Text": " is often, but not always, 8, 16, or 32 bits. The most common examples of these are:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344551,
        "id": "a70164c9-8818-46c9-8688-196094188714",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344551,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Unix and Unix-like systems, "
            ],
            [
              "wchar_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is 32-bit, and is usually used for UTF-32."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Unix and Unix-like systems, "
          },
          {
            "Text": "wchar_t",
            "AttrFlags": 2
          },
          {
            "Text": " is 32-bit, and is usually used for UTF-32."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344552,
        "id": "404a31ec-ebb7-493f-b180-1da07429ee84",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344552,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Windows, "
            ],
            [
              "wchar_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is 16-bit, and is used for UTF-16."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Windows, "
          },
          {
            "Text": "wchar_t",
            "AttrFlags": 2
          },
          {
            "Text": " is 16-bit, and is used for UTF-16."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344552,
        "id": "22fbb0c4-adea-4c2c-a41f-2547cb83e165",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344552,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "On a system which only has 8-bit support, "
            ],
            [
              "wchar_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is 8 bit."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "On a system which only has 8-bit support, "
          },
          {
            "Text": "wchar_t",
            "AttrFlags": 2
          },
          {
            "Text": " is 8 bit."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344552,
        "id": "90e0007a-f81a-4946-8ea6-699507188a0c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344552,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If Unicode support is desired, it is recommended to use "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for UTF-8, "
            ],
            [
              "char16_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for UTF-16, or "
            ],
            [
              "char32_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for UTF-32, instead of using "
            ],
            [
              "wchar_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If Unicode support is desired, it is recommended to use "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": " for UTF-8, "
          },
          {
            "Text": "char16_t",
            "AttrFlags": 2
          },
          {
            "Text": " for UTF-16, or "
          },
          {
            "Text": "char32_t",
            "AttrFlags": 2
          },
          {
            "Text": " for UTF-32, instead of using "
          },
          {
            "Text": "wchar_t",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344552,
        "id": "e6749425-ad12-4cf3-b007-5c040d1a06b9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344552,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "type": "sub_header",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344552,
        "id": "1eb6fc50-cbf7-4fbf-b834-9af21854b7c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344552,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Data Models"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Data Models"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344552,
        "id": "afba8538-558b-494d-9fdf-301d5a0142f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344552,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As mentioned above, the widths of integer types can differ between platforms. The most common models are as follows, with sizes specified in bits:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As mentioned above, the widths of integer types can differ between platforms. The most common models are as follows, with sizes specified in bits:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344553,
        "id": "f7a93fea-76c4-4518-90df-4949ee59acb9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344553,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "|Model |"
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "|"
            ],
            [
              "long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "|pointer| |———––|—–|——|—––| |LP32 (2/4/4) |16 |32 |32 | |ILP32 (4/4/4)|32 |32 |32 | |LLP64 (4/4/8)|32 |32 |64 | |LP64 (4/8/8) |32 |64 |64 |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "|Model |"
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": "|"
          },
          {
            "Text": "long",
            "AttrFlags": 2
          },
          {
            "Text": "|pointer| |———––|—–|——|—––| |LP32 (2/4/4) |16 |32 |32 | |ILP32 (4/4/4)|32 |32 |32 | |LLP64 (4/4/8)|32 |32 |64 | |LP64 (4/8/8) |32 |64 |64 |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344553,
        "id": "f2acd88c-92e1-41ce-9047-23e80b4fbae6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344553,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Out of these models:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Out of these models:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344553,
        "id": "ea3d92de-8453-4924-ba68-154622124931",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344553,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "16-bit Windows used LP32."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "16-bit Windows used LP32."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344553,
        "id": "d088b3bb-f708-4c59-b255-44121c8f085d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344553,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "32-bit *nix systems (Unix, Linux, Mac OSX, and other Unix-like OSes) and Windows use ILP32."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "32-bit *nix systems (Unix, Linux, Mac OSX, and other Unix-like OSes) and Windows use ILP32."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344554,
        "id": "5a27dc91-a872-43a2-b2a3-9f03dff10229",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344554,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "64-bit Windows uses LLP64."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "64-bit Windows uses LLP64."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344554,
        "id": "aca6f607-a08b-49a3-917b-141ce024fca5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344554,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "64-bit *nix systems use LP64."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "64-bit *nix systems use LP64."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522344554,
        "id": "f13e5568-3a54-471f-a19a-5a132e783e5d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522344554,
        "parent_id": "35eed719-f247-475f-b7d6-6143565953cd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note, however, that these models aren’t specifically mentioned in the standard itself."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note, however, that these models aren’t specifically mentioned in the standard itself."
          }
        ]
      }
    ],
    "title": "01Size of integral types",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}