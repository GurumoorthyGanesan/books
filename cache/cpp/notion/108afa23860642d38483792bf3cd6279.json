{
  "ID": "108afa23-8606-42d3-8483-792bf3cd6279",
  "Root": {
    "alive": true,
    "content": [
      "11b52d08-c7e7-47da-8598-44f5a81a6e9d",
      "e54259ed-2ca9-4d60-abf9-170e852dc74e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522704477,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "108afa23-8606-42d3-8483-792bf3cd6279",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550710800000,
    "parent_id": "263edcef-95ee-480a-8c67-1e74662a250a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "std::function used with std::bind"
        ]
      ]
    },
    "type": "page",
    "version": 14,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522704474,
        "id": "11b52d08-c7e7-47da-8598-44f5a81a6e9d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522704474,
        "parent_id": "108afa23-8606-42d3-8483-792bf3cd6279",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Think about a situation where we need to callback a function with arguments. "
            ],
            [
              "std::function",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " used with "
            ],
            [
              "std::bind",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " gives a very powerful design construct as shown below."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Think about a situation where we need to callback a function with arguments. "
          },
          {
            "Text": "std::function",
            "AttrFlags": 2
          },
          {
            "Text": " used with "
          },
          {
            "Text": "std::bind",
            "AttrFlags": 2
          },
          {
            "Text": " gives a very powerful design construct as shown below."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522704477,
        "id": "e54259ed-2ca9-4d60-abf9-170e852dc74e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550710800000,
        "parent_id": "108afa23-8606-42d3-8483-792bf3cd6279",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "class A\n{\npublic:\n    std::function\u003cvoid(int, const std::string\u0026)\u003e m_CbFunc = nullptr;\n    void foo()\n    {\n        if (m_CbFunc)\n        {\n            m_CbFunc(100, \"event fired\");\n        }\n    }\n\n};\n\nclass B\n{\npublic:\n    B()\n    {\n        auto aFunc = std::bind(\u0026B::eventHandler, this, std::placeholders::_1, std::placeholders::_2);\n        anObjA.m_CbFunc = aFunc;\n    }\n    void eventHandler(int i, const std::string\u0026 s)\n    {\n        std::cout \u003c\u003c s \u003c\u003c \": \" \u003c\u003c i \u003c\u003c std::endl;\n    }\n\n    void DoSomethingOnA()\n    {\n        anObjA.foo();\n    }\n\n    A anObjA;\n};\n\nint main(int argc, char *argv[])\n{\n     B anObjB;\n     anObjB.DoSomethingOnA();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "class A\n{\npublic:\n    std::function\u003cvoid(int, const std::string\u0026)\u003e m_CbFunc = nullptr;\n    void foo()\n    {\n        if (m_CbFunc)\n        {\n            m_CbFunc(100, \"event fired\");\n        }\n    }\n\n};\n\nclass B\n{\npublic:\n    B()\n    {\n        auto aFunc = std::bind(\u0026B::eventHandler, this, std::placeholders::_1, std::placeholders::_2);\n        anObjA.m_CbFunc = aFunc;\n    }\n    void eventHandler(int i, const std::string\u0026 s)\n    {\n        std::cout \u003c\u003c s \u003c\u003c \": \" \u003c\u003c i \u003c\u003c std::endl;\n    }\n\n    void DoSomethingOnA()\n    {\n        anObjA.foo();\n    }\n\n    A anObjA;\n};\n\nint main(int argc, char *argv[])\n{\n     B anObjB;\n     anObjB.DoSomethingOnA();\n}",
        "code_language": "C++"
      }
    ],
    "title": "std::function used with std::bind",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}