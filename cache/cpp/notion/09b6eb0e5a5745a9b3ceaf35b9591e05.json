{
  "ID": "09b6eb0e-5a57-45a9-b3ce-af35b9591e05",
  "Root": {
    "alive": true,
    "content": [
      "35264e3c-179b-4ba5-bd92-cdec336cfdd3",
      "3b1a1981-a57c-4c30-a366-80550a75b359",
      "2c634c76-86ca-475e-b6a3-c2e2c29b9cb3",
      "210b8142-4407-459a-ba1f-7e56f97a6057",
      "2515fc46-b5c1-4539-a0a7-e1331dea8b64",
      "9ef534a3-4ed9-4768-9a14-8bab9274fe55",
      "0fa65e43-a70f-4b7c-a102-b51e7223c85a",
      "3504af85-4364-4e24-8312-784adf15532d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522063612,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "09b6eb0e-5a57-45a9-b3ce-af35b9591e05",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550655720000,
    "parent_id": "2be9c7d5-be12-439a-8968-ad057c67187a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Bitwise NOT operator"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522063608,
        "id": "35264e3c-179b-4ba5-bd92-cdec336cfdd3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522063608,
        "parent_id": "09b6eb0e-5a57-45a9-b3ce-af35b9591e05",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Overloading the bitwise NOT ("
            ],
            [
              "~",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") is fairly simple. Scroll down for explanation"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Overloading the bitwise NOT ("
          },
          {
            "Text": "~",
            "AttrFlags": 2
          },
          {
            "Text": ") is fairly simple. Scroll down for explanation"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522063611,
        "id": "3b1a1981-a57c-4c30-a366-80550a75b359",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522063611,
        "parent_id": "09b6eb0e-5a57-45a9-b3ce-af35b9591e05",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Overloading outside of "
            ],
            [
              "class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "/"
            ],
            [
              "struct",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Overloading outside of "
          },
          {
            "Text": "class",
            "AttrFlags": 2
          },
          {
            "Text": "/"
          },
          {
            "Text": "struct",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522063611,
        "id": "2c634c76-86ca-475e-b6a3-c2e2c29b9cb3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522063611,
        "parent_id": "09b6eb0e-5a57-45a9-b3ce-af35b9591e05",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "T operator~(T lhs)\n{\n    //Do operation\n    return lhs;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "T operator~(T lhs)\n{\n    //Do operation\n    return lhs;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522063611,
        "id": "210b8142-4407-459a-ba1f-7e56f97a6057",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522063611,
        "parent_id": "09b6eb0e-5a57-45a9-b3ce-af35b9591e05",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Overloading inside of "
            ],
            [
              "class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "/"
            ],
            [
              "struct",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Overloading inside of "
          },
          {
            "Text": "class",
            "AttrFlags": 2
          },
          {
            "Text": "/"
          },
          {
            "Text": "struct",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522063611,
        "id": "2515fc46-b5c1-4539-a0a7-e1331dea8b64",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522063611,
        "parent_id": "09b6eb0e-5a57-45a9-b3ce-af35b9591e05",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "T operator~()\n{\n    T t(*this);\n    //Do operation\n    return t;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "T operator~()\n{\n    T t(*this);\n    //Do operation\n    return t;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522063611,
        "id": "9ef534a3-4ed9-4768-9a14-8bab9274fe55",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522063611,
        "parent_id": "09b6eb0e-5a57-45a9-b3ce-af35b9591e05",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522063612,
        "id": "0fa65e43-a70f-4b7c-a102-b51e7223c85a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522063612,
        "parent_id": "09b6eb0e-5a57-45a9-b3ce-af35b9591e05",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: "
            ],
            [
              "operator~",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns by value, because it has to return a new value (the modified value), and not a reference to the value (it would be a reference to the temporary object, which would have garbage value in it as soon as the operator is done). Not "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " either because the calling code should be able to modify it afterwards (i.e. "
            ],
            [
              "int a = ~a + 1;",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " should be possible)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: "
          },
          {
            "Text": "operator~",
            "AttrFlags": 2
          },
          {
            "Text": " returns by value, because it has to return a new value (the modified value), and not a reference to the value (it would be a reference to the temporary object, which would have garbage value in it as soon as the operator is done). Not "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " either because the calling code should be able to modify it afterwards (i.e. "
          },
          {
            "Text": "int a = ~a + 1;",
            "AttrFlags": 2
          },
          {
            "Text": " should be possible)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522063612,
        "id": "3504af85-4364-4e24-8312-784adf15532d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522063612,
        "parent_id": "09b6eb0e-5a57-45a9-b3ce-af35b9591e05",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Inside the "
            ],
            [
              "class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "/"
            ],
            [
              "struct",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " you have to make a temporary object, because you can’t modify "
            ],
            [
              "this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", as it would modify the original object, which shouldn’t be the case."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Inside the "
          },
          {
            "Text": "class",
            "AttrFlags": 2
          },
          {
            "Text": "/"
          },
          {
            "Text": "struct",
            "AttrFlags": 2
          },
          {
            "Text": " you have to make a temporary object, because you can’t modify "
          },
          {
            "Text": "this",
            "AttrFlags": 2
          },
          {
            "Text": ", as it would modify the original object, which shouldn’t be the case."
          }
        ]
      }
    ],
    "title": "Bitwise NOT operator",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}