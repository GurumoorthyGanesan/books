{
  "ID": "0f3a091f-b7ee-48a1-8037-902be60a4035",
  "Root": {
    "alive": true,
    "content": [
      "8b1bc493-6950-41fc-bf36-7e828feca1d9",
      "7f65c058-77c3-483e-9468-49af2f1d7eff",
      "d9a49d21-9ab7-46fa-afc8-4f2fcbf38651",
      "ad58e03a-91ea-4094-923f-b4644db3dd01",
      "b4238b9e-4af6-451b-bba8-b0d6892878cd",
      "d3abcaec-bc19-4d03-b5d1-33ce98c30c7c",
      "6540ed02-4502-4e48-9c68-19fe2097974c",
      "a395e746-ac66-4962-8d44-79360448d306",
      "80985bd9-f687-4a96-8f40-137e7ef30ce5",
      "c1f44949-03fe-4e67-9dec-6a44d3992770"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522002534,
    "id": "0f3a091f-b7ee-48a1-8037-902be60a4035",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550656380000,
    "parent_id": "b886ff5d-614b-4aa9-9e99-851b7998439b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Finding characters in a string"
        ]
      ]
    },
    "type": "page",
    "version": 6,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522002532,
        "id": "8b1bc493-6950-41fc-bf36-7e828feca1d9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522002532,
        "parent_id": "0f3a091f-b7ee-48a1-8037-902be60a4035",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To find a character or another string, you can use "
            ],
            [
              "std::string::find",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/string/basic_string/find"
                ]
              ]
            ],
            [
              ". It returns the position of the first character of the first match. If no matches were found, the function returns "
            ],
            [
              "std::string::npos",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/string/basic_string/npos"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To find a character or another string, you can use "
          },
          {
            "Text": "std::string::find",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/string/basic_string/find"
          },
          {
            "Text": ". It returns the position of the first character of the first match. If no matches were found, the function returns "
          },
          {
            "Text": "std::string::npos",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/string/basic_string/npos"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522002532,
        "id": "7f65c058-77c3-483e-9468-49af2f1d7eff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522002532,
        "parent_id": "0f3a091f-b7ee-48a1-8037-902be60a4035",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::string str = \"Curiosity killed the cat\";\nauto it = str.find(\"cat\");\n\nif (it != std::string::npos)\n    std::cout \u003c\u003c \"Found at position: \" \u003c\u003c it \u003c\u003c '\\n';\nelse\n    std::cout \u003c\u003c \"Not found!\\n\";"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::string str = \"Curiosity killed the cat\";\nauto it = str.find(\"cat\");\n\nif (it != std::string::npos)\n    std::cout \u003c\u003c \"Found at position: \" \u003c\u003c it \u003c\u003c '\\n';\nelse\n    std::cout \u003c\u003c \"Not found!\\n\";",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522002532,
        "id": "d9a49d21-9ab7-46fa-afc8-4f2fcbf38651",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522002532,
        "parent_id": "0f3a091f-b7ee-48a1-8037-902be60a4035",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Found at position: 21"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Found at position: 21"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522002532,
        "id": "ad58e03a-91ea-4094-923f-b4644db3dd01",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522002532,
        "parent_id": "0f3a091f-b7ee-48a1-8037-902be60a4035",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522002532,
        "id": "b4238b9e-4af6-451b-bba8-b0d6892878cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522002532,
        "parent_id": "0f3a091f-b7ee-48a1-8037-902be60a4035",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The search opportunities are further expanded by the following functions:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The search opportunities are further expanded by the following functions:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522002533,
        "id": "d3abcaec-bc19-4d03-b5d1-33ce98c30c7c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522002533,
        "parent_id": "0f3a091f-b7ee-48a1-8037-902be60a4035",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "find_first_of     // Find first occurrence of characters \nfind_first_not_of // Find first absence of characters \nfind_last_of      // Find last occurrence of characters \nfind_last_not_of  // Find last absence of characters"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "find_first_of     // Find first occurrence of characters \nfind_first_not_of // Find first absence of characters \nfind_last_of      // Find last occurrence of characters \nfind_last_not_of  // Find last absence of characters",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522002533,
        "id": "6540ed02-4502-4e48-9c68-19fe2097974c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522002533,
        "parent_id": "0f3a091f-b7ee-48a1-8037-902be60a4035",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These functions can allow you to search for characters from the end of the string, as well as find the negative case (ie. characters that are not in the string). Here is an example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These functions can allow you to search for characters from the end of the string, as well as find the negative case (ie. characters that are not in the string). Here is an example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522002533,
        "id": "a395e746-ac66-4962-8d44-79360448d306",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522002533,
        "parent_id": "0f3a091f-b7ee-48a1-8037-902be60a4035",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::string str = \"dog dog cat cat\";\nstd::cout \u003c\u003c \"Found at position: \" \u003c\u003c str.find_last_of(\"gzx\") \u003c\u003c '\\n';"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::string str = \"dog dog cat cat\";\nstd::cout \u003c\u003c \"Found at position: \" \u003c\u003c str.find_last_of(\"gzx\") \u003c\u003c '\\n';",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522002533,
        "id": "80985bd9-f687-4a96-8f40-137e7ef30ce5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522002533,
        "parent_id": "0f3a091f-b7ee-48a1-8037-902be60a4035",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Found at position: 6"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Found at position: 6"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522002533,
        "id": "c1f44949-03fe-4e67-9dec-6a44d3992770",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522002533,
        "parent_id": "0f3a091f-b7ee-48a1-8037-902be60a4035",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note:",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " Be aware that the above functions do not search for substrings, but rather for characters contained in the search string. In this case, the last occurrence of "
            ],
            [
              "'g'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " was found at position "
            ],
            [
              "6",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (the other characters weren’t found)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note:",
            "AttrFlags": 5
          },
          {
            "Text": " Be aware that the above functions do not search for substrings, but rather for characters contained in the search string. In this case, the last occurrence of "
          },
          {
            "Text": "'g'",
            "AttrFlags": 2
          },
          {
            "Text": " was found at position "
          },
          {
            "Text": "6",
            "AttrFlags": 2
          },
          {
            "Text": " (the other characters weren’t found)."
          }
        ]
      }
    ],
    "title": "Finding characters in a string"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}