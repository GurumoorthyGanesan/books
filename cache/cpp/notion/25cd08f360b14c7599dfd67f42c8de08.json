{
  "ID": "25cd08f3-60b1-4c75-99df-d67f42c8de08",
  "Root": {
    "alive": true,
    "content": [
      "0fd24b0f-5ce0-48f7-be1c-e9e9b7e37c3d",
      "fc580607-d811-45c1-85f4-07c7ef6b9e58",
      "a4273f0f-2cad-4e7d-a377-fc19f1ef20aa",
      "3620b2a6-3d30-4cab-acb1-c2d16cc1ff76",
      "3750ac42-1117-4fad-8e46-7d29c0af0b53",
      "8bb12947-85d2-43c1-93f1-9ac7b7f90719",
      "7c04de3d-f959-4e25-b002-d1edc06129cf",
      "030c1339-0470-4eba-b440-5e57cd09360d",
      "a3adae8d-d8f1-4921-be9d-1240d455389e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522009496,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "25cd08f3-60b1-4c75-99df-d67f42c8de08",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550780160000,
    "parent_id": "b96c747c-3d87-49a0-b2bb-264f7c11b216",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Reading text file into a std::string"
        ]
      ]
    },
    "type": "page",
    "version": 23,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522009478,
        "id": "0fd24b0f-5ce0-48f7-be1c-e9e9b7e37c3d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550780160000,
        "parent_id": "25cd08f3-60b1-4c75-99df-d67f42c8de08",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "std::ifstream f(\"file.txt\");\n\nif (f)\n{\n  std::stringstream buffer;\n  buffer \u003c\u003c f.rdbuf();\n  f.close();\n\n  // The content of \"file.txt\" is available in the string `buffer.str()`\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "std::ifstream f(\"file.txt\");\n\nif (f)\n{\n  std::stringstream buffer;\n  buffer \u003c\u003c f.rdbuf();\n  f.close();\n\n  // The content of \"file.txt\" is available in the string `buffer.str()`\n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522009483,
        "id": "fc580607-d811-45c1-85f4-07c7ef6b9e58",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522009483,
        "parent_id": "25cd08f3-60b1-4c75-99df-d67f42c8de08",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "rdbuf()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/basic_ios/rdbuf"
                ]
              ]
            ],
            [
              " method returns a pointer to a "
            ],
            [
              "streambuf",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/basic_streambuf"
                ]
              ]
            ],
            [
              " that can be pushed into "
            ],
            [
              "buffer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " via the "
            ],
            [
              "stringstream::operator\u003c\u003c",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/io/basic_ostream/operator_ltlt"
                ]
              ]
            ],
            [
              " member function."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "rdbuf()",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/basic_ios/rdbuf"
          },
          {
            "Text": " method returns a pointer to a "
          },
          {
            "Text": "streambuf",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/basic_streambuf"
          },
          {
            "Text": " that can be pushed into "
          },
          {
            "Text": "buffer",
            "AttrFlags": 2
          },
          {
            "Text": " via the "
          },
          {
            "Text": "stringstream::operator\u003c\u003c",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/io/basic_ostream/operator_ltlt"
          },
          {
            "Text": " member function."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522009495,
        "id": "a4273f0f-2cad-4e7d-a377-fc19f1ef20aa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522009495,
        "parent_id": "25cd08f3-60b1-4c75-99df-d67f42c8de08",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another possibility (popularized in "
            ],
            [
              "Effective STL",
              [
                [
                  "a",
                  "https://www.amazon.com/Effective-STL-Specific-Standard-Template/dp/0201749629?ie=UTF8\u0026camp=1789\u0026creative=390957\u0026creativeASIN=0201749629\u0026linkCode=as2\u0026redirect=true\u0026ref_=as_li_ss_tl\u0026tag=insacodi-20"
                ]
              ]
            ],
            [
              " by "
            ],
            [
              "Scott Meyers",
              [
                [
                  "a",
                  "http://www.aristeia.com/"
                ]
              ]
            ],
            [
              ") is:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another possibility (popularized in "
          },
          {
            "Text": "Effective STL",
            "Link": "https://www.amazon.com/Effective-STL-Specific-Standard-Template/dp/0201749629?ie=UTF8\u0026camp=1789\u0026creative=390957\u0026creativeASIN=0201749629\u0026linkCode=as2\u0026redirect=true\u0026ref_=as_li_ss_tl\u0026tag=insacodi-20"
          },
          {
            "Text": " by "
          },
          {
            "Text": "Scott Meyers",
            "Link": "http://www.aristeia.com/"
          },
          {
            "Text": ") is:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522009495,
        "id": "3620b2a6-3d30-4cab-acb1-c2d16cc1ff76",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550780160000,
        "parent_id": "25cd08f3-60b1-4c75-99df-d67f42c8de08",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "std::ifstream f(\"file.txt\");\n\nif (f)\n{\n  std::string str((std::istreambuf_iterator\u003cchar\u003e(f)),\n                  std::istreambuf_iterator\u003cchar\u003e());\n\n  // Operations on `str`...\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "std::ifstream f(\"file.txt\");\n\nif (f)\n{\n  std::string str((std::istreambuf_iterator\u003cchar\u003e(f)),\n                  std::istreambuf_iterator\u003cchar\u003e());\n\n  // Operations on `str`...\n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522009495,
        "id": "3750ac42-1117-4fad-8e46-7d29c0af0b53",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522009495,
        "parent_id": "25cd08f3-60b1-4c75-99df-d67f42c8de08",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is nice because requires little code (and allows reading a file directly into any STL container, not only strings) but can be slow for big files."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is nice because requires little code (and allows reading a file directly into any STL container, not only strings) but can be slow for big files."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522009495,
        "id": "8bb12947-85d2-43c1-93f1-9ac7b7f90719",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522009495,
        "parent_id": "25cd08f3-60b1-4c75-99df-d67f42c8de08",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "NOTE",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": the extra parentheses around the first argument to the string constructor are essential to prevent the "
            ],
            [
              "most vexing parse",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " problem."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "NOTE",
            "AttrFlags": 1
          },
          {
            "Text": ": the extra parentheses around the first argument to the string constructor are essential to prevent the "
          },
          {
            "Text": "most vexing parse",
            "AttrFlags": 4
          },
          {
            "Text": " problem."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522009495,
        "id": "7c04de3d-f959-4e25-b002-d1edc06129cf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522009495,
        "parent_id": "25cd08f3-60b1-4c75-99df-d67f42c8de08",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Last but not least:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Last but not least:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522009495,
        "id": "030c1339-0470-4eba-b440-5e57cd09360d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550780160000,
        "parent_id": "25cd08f3-60b1-4c75-99df-d67f42c8de08",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "C++"
            ]
          ],
          "title": [
            [
              "std::ifstream f(\"file.txt\");\n\nif (f)\n{\n  f.seekg(0, std::ios::end);\n  const auto size = f.tellg();\n\n  std::string str(size, ' ');\n  f.seekg(0);\n  f.read(\u0026str[0], size); \n  f.close();\n\n  // Operations on `str`...\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "std::ifstream f(\"file.txt\");\n\nif (f)\n{\n  f.seekg(0, std::ios::end);\n  const auto size = f.tellg();\n\n  std::string str(size, ' ');\n  f.seekg(0);\n  f.read(\u0026str[0], size); \n  f.close();\n\n  // Operations on `str`...\n}",
        "code_language": "C++"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522009496,
        "id": "a3adae8d-d8f1-4921-be9d-1240d455389e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522009496,
        "parent_id": "25cd08f3-60b1-4c75-99df-d67f42c8de08",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "which is probably the fastest option (among the three proposed)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "which is probably the fastest option (among the three proposed)."
          }
        ]
      }
    ],
    "title": "Reading text file into a std::string",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}