{
  "ID": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
  "Root": {
    "alive": true,
    "content": [
      "34f4336a-3338-4002-b013-8119ec0fd919",
      "11de0820-39d9-4730-b278-126f4d37f688",
      "cd0ba85c-941b-4efb-a23a-c49a5d271191",
      "892b0069-f563-4f60-b587-55355cecbf45",
      "924d0ef4-7430-4aaa-81dd-597132319ef4",
      "5fb71cca-c721-4a75-9d28-2818fe28d038",
      "4043447c-f021-4ac2-a13c-b1c904c25c3a",
      "2a67ce45-9bc0-4850-9a01-38e831d8ab73",
      "c52d643d-88f4-4728-9bcc-9603613394c9",
      "9181183e-65a2-4792-b95e-d977745b62a1",
      "56d0ff2e-b1fe-47c8-aa3c-8ddb162d1533",
      "2c7ce8b3-f45b-462c-b36f-535d6e2f37d2",
      "e7ad444c-db77-4613-a582-b51d6bf52ad3",
      "0f9b4284-54de-4452-ab66-8ad6578048da",
      "ee69be8c-ac10-4ab2-a2e4-11c71118d2b4",
      "3edeffa4-c694-4a2d-80d3-ae06c9ffaf1a",
      "9a1500ca-c989-4419-bc58-3e6a66f2ee1c",
      "a6a19a74-8d85-4cdb-b368-e631d126cbd2",
      "c00ff9e0-1920-4d10-962e-1e016adc5fd5"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523492193,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551687645964,
    "parent_id": "4a738092-15a0-42a9-8178-c62e1f86c80c",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Adapter Pattern"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523492187,
        "id": "34f4336a-3338-4002-b013-8119ec0fd919",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523492187,
        "parent_id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Convert the interface of a class into another interface clients expect. Adapter (or Wrapper) lets classes work together that couldn’t otherwise because of incompatible interfaces. Adapter pattern’s motivation is that we can reuse existing software if we can modify the interface."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Convert the interface of a class into another interface clients expect. Adapter (or Wrapper) lets classes work together that couldn’t otherwise because of incompatible interfaces. Adapter pattern’s motivation is that we can reuse existing software if we can modify the interface."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523492188,
        "id": "11de0820-39d9-4730-b278-126f4d37f688",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523492188,
        "parent_id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Adapter pattern relies on object composition."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Adapter pattern relies on object composition."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523492188,
        "id": "cd0ba85c-941b-4efb-a23a-c49a5d271191",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523492188,
        "parent_id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Client calls operation on Adapter object."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Client calls operation on Adapter object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523492189,
        "id": "892b0069-f563-4f60-b587-55355cecbf45",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523492189,
        "parent_id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Adapter calls Adaptee to carry out the operation."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Adapter calls Adaptee to carry out the operation."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523492189,
        "id": "924d0ef4-7430-4aaa-81dd-597132319ef4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523492189,
        "parent_id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In STL, stack adapted from vector: When stack executes push(), underlying vector does vector::push_back()."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "In STL, stack adapted from vector: When stack executes push(), underlying vector does vector::push_back()."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523492189,
        "id": "5fb71cca-c721-4a75-9d28-2818fe28d038",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523492189,
        "parent_id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523492189,
        "id": "4043447c-f021-4ac2-a13c-b1c904c25c3a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523492189,
        "parent_id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003ciostream\u003e\n\n// Desired interface (Target)\nclass Rectangle \n{\n  public:\n    virtual void draw() = 0;\n};\n\n// Legacy component (Adaptee)\nclass LegacyRectangle \n{\n  public:\n    LegacyRectangle(int x1, int y1, int x2, int y2) {\n        x1_ = x1;\n        y1_ = y1;\n        x2_ = x2;\n        y2_ = y2;\n        std::cout \u003c\u003c \"LegacyRectangle(x1,y1,x2,y2)\\n\";\n    }\n    void oldDraw() {\n        std::cout \u003c\u003c \"LegacyRectangle:  oldDraw(). \\n\";\n    }\n  private:\n    int x1_;\n    int y1_;\n    int x2_;\n    int y2_;\n};\n\n// Adapter wrapper\nclass RectangleAdapter: public Rectangle, private LegacyRectangle \n{\n  public:\n    RectangleAdapter(int x, int y, int w, int h):\n      LegacyRectangle(x, y, x + w, y + h) {\n         std::cout \u003c\u003c \"RectangleAdapter(x,y,x+w,x+h)\\n\";\n      }\n\n    void draw() {\n        std::cout \u003c\u003c \"RectangleAdapter: draw().\\n\"; \n        oldDraw();\n    }\n};\n\nint main()\n{\n  int x = 20, y = 50, w = 300, h = 200;\n  Rectangle *r = new RectangleAdapter(x,y,w,h);\n  r-\u003edraw();\n}\n\n//Output:\n//LegacyRectangle(x1,y1,x2,y2)\n//RectangleAdapter(x,y,x+w,x+h)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003ciostream\u003e\n\n// Desired interface (Target)\nclass Rectangle \n{\n  public:\n    virtual void draw() = 0;\n};\n\n// Legacy component (Adaptee)\nclass LegacyRectangle \n{\n  public:\n    LegacyRectangle(int x1, int y1, int x2, int y2) {\n        x1_ = x1;\n        y1_ = y1;\n        x2_ = x2;\n        y2_ = y2;\n        std::cout \u003c\u003c \"LegacyRectangle(x1,y1,x2,y2)\\n\";\n    }\n    void oldDraw() {\n        std::cout \u003c\u003c \"LegacyRectangle:  oldDraw(). \\n\";\n    }\n  private:\n    int x1_;\n    int y1_;\n    int x2_;\n    int y2_;\n};\n\n// Adapter wrapper\nclass RectangleAdapter: public Rectangle, private LegacyRectangle \n{\n  public:\n    RectangleAdapter(int x, int y, int w, int h):\n      LegacyRectangle(x, y, x + w, y + h) {\n         std::cout \u003c\u003c \"RectangleAdapter(x,y,x+w,x+h)\\n\";\n      }\n\n    void draw() {\n        std::cout \u003c\u003c \"RectangleAdapter: draw().\\n\"; \n        oldDraw();\n    }\n};\n\nint main()\n{\n  int x = 20, y = 50, w = 300, h = 200;\n  Rectangle *r = new RectangleAdapter(x,y,w,h);\n  r-\u003edraw();\n}\n\n//Output:\n//LegacyRectangle(x1,y1,x2,y2)\n//RectangleAdapter(x,y,x+w,x+h)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523492190,
        "id": "2a67ce45-9bc0-4850-9a01-38e831d8ab73",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523492190,
        "parent_id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Summary of the code:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Summary of the code:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523492190,
        "id": "c52d643d-88f4-4728-9bcc-9603613394c9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523492190,
        "parent_id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The client thinks he is talking to a "
            ],
            [
              "Rectangle",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The client thinks he is talking to a "
          },
          {
            "Text": "Rectangle",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523492190,
        "id": "9181183e-65a2-4792-b95e-d977745b62a1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523492190,
        "parent_id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The target is the "
            ],
            [
              "Rectangle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class. This is what the client invokes method on."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The target is the "
          },
          {
            "Text": "Rectangle",
            "AttrFlags": 2
          },
          {
            "Text": " class. This is what the client invokes method on."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523492190,
        "id": "56d0ff2e-b1fe-47c8-aa3c-8ddb162d1533",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523492190,
        "parent_id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Rectangle *r = new RectangleAdapter(x,y,w,h);\nr-\u003edraw();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Rectangle *r = new RectangleAdapter(x,y,w,h);\nr-\u003edraw();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523492191,
        "id": "2c7ce8b3-f45b-462c-b36f-535d6e2f37d2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523492191,
        "parent_id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that the adapter class uses multiple inheritance."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that the adapter class uses multiple inheritance."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523492191,
        "id": "e7ad444c-db77-4613-a582-b51d6bf52ad3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523492191,
        "parent_id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class RectangleAdapter: public Rectangle, private LegacyRectangle {\n        ...\n    }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class RectangleAdapter: public Rectangle, private LegacyRectangle {\n        ...\n    }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523492191,
        "id": "0f9b4284-54de-4452-ab66-8ad6578048da",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523492191,
        "parent_id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The Adapter "
            ],
            [
              "RectangleAdapter",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " lets the "
            ],
            [
              "LegacyRectangle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " responds to request ("
            ],
            [
              "draw()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " on a "
            ],
            [
              "Rectangle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") by inheriting BOTH classes."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The Adapter "
          },
          {
            "Text": "RectangleAdapter",
            "AttrFlags": 2
          },
          {
            "Text": " lets the "
          },
          {
            "Text": "LegacyRectangle",
            "AttrFlags": 2
          },
          {
            "Text": " responds to request ("
          },
          {
            "Text": "draw()",
            "AttrFlags": 2
          },
          {
            "Text": " on a "
          },
          {
            "Text": "Rectangle",
            "AttrFlags": 2
          },
          {
            "Text": ") by inheriting BOTH classes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523492192,
        "id": "ee69be8c-ac10-4ab2-a2e4-11c71118d2b4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523492192,
        "parent_id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "LegacyRectangle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class does not have the same methods ("
            ],
            [
              "draw()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") as "
            ],
            [
              "Rectangle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", but the "
            ],
            [
              "Adapter(RectangleAdapter)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can take the "
            ],
            [
              "Rectangle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method calls and turn around and invoke method on the "
            ],
            [
              "LegacyRectangle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "oldDraw()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "LegacyRectangle",
            "AttrFlags": 2
          },
          {
            "Text": " class does not have the same methods ("
          },
          {
            "Text": "draw()",
            "AttrFlags": 2
          },
          {
            "Text": ") as "
          },
          {
            "Text": "Rectangle",
            "AttrFlags": 2
          },
          {
            "Text": ", but the "
          },
          {
            "Text": "Adapter(RectangleAdapter)",
            "AttrFlags": 2
          },
          {
            "Text": " can take the "
          },
          {
            "Text": "Rectangle",
            "AttrFlags": 2
          },
          {
            "Text": " method calls and turn around and invoke method on the "
          },
          {
            "Text": "LegacyRectangle",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "oldDraw()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523492192,
        "id": "3edeffa4-c694-4a2d-80d3-ae06c9ffaf1a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523492192,
        "parent_id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class RectangleAdapter: public Rectangle, private LegacyRectangle {\n      public:\n        RectangleAdapter(int x, int y, int w, int h):\n          LegacyRectangle(x, y, x + w, y + h) {\n            std::cout \u003c\u003c \"RectangleAdapter(x,y,x+w,x+h)\\n\";\n          }\n\n        void draw() {\n            std::cout \u003c\u003c \"RectangleAdapter: draw().\\n\"; \n            oldDraw();\n        }\n    };"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class RectangleAdapter: public Rectangle, private LegacyRectangle {\n      public:\n        RectangleAdapter(int x, int y, int w, int h):\n          LegacyRectangle(x, y, x + w, y + h) {\n            std::cout \u003c\u003c \"RectangleAdapter(x,y,x+w,x+h)\\n\";\n          }\n\n        void draw() {\n            std::cout \u003c\u003c \"RectangleAdapter: draw().\\n\"; \n            oldDraw();\n        }\n    };",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523492192,
        "id": "9a1500ca-c989-4419-bc58-3e6a66f2ee1c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523492192,
        "parent_id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Adapter",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " design pattern translates the interface for one class into a compatible but different interface. So, this is similar to the "
            ],
            [
              "proxy",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " pattern in that it’s a single-component wrapper. But the interface for the adapter class and the original class may be different."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Adapter",
            "AttrFlags": 1
          },
          {
            "Text": " design pattern translates the interface for one class into a compatible but different interface. So, this is similar to the "
          },
          {
            "Text": "proxy",
            "AttrFlags": 1
          },
          {
            "Text": " pattern in that it’s a single-component wrapper. But the interface for the adapter class and the original class may be different."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523492193,
        "id": "a6a19a74-8d85-4cdb-b368-e631d126cbd2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523492193,
        "parent_id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As we’ve seen in the example above, this "
            ],
            [
              "adapter",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " pattern is useful to expose a different interface for an existing API to allow it to work with other code. Also, by using adapter pattern, we can take heterogeneous interfaces, and transform them to provide consistent API."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As we’ve seen in the example above, this "
          },
          {
            "Text": "adapter",
            "AttrFlags": 1
          },
          {
            "Text": " pattern is useful to expose a different interface for an existing API to allow it to work with other code. Also, by using adapter pattern, we can take heterogeneous interfaces, and transform them to provide consistent API."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523492193,
        "id": "c00ff9e0-1920-4d10-962e-1e016adc5fd5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523492193,
        "parent_id": "a84f4b25-30c2-41ab-ae03-2e44a7dcf1e5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Bridge pattern",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " has a structure similar to an object adapter, but Bridge has a different intent: It is meant to "
            ],
            [
              "separate",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " an interface from its implementation so that they can be varied easily and independently. An "
            ],
            [
              "adapter",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " is meant to "
            ],
            [
              "change the interface",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " of an "
            ],
            [
              "existing",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Bridge pattern",
            "AttrFlags": 1
          },
          {
            "Text": " has a structure similar to an object adapter, but Bridge has a different intent: It is meant to "
          },
          {
            "Text": "separate",
            "AttrFlags": 1
          },
          {
            "Text": " an interface from its implementation so that they can be varied easily and independently. An "
          },
          {
            "Text": "adapter",
            "AttrFlags": 1
          },
          {
            "Text": " is meant to "
          },
          {
            "Text": "change the interface",
            "AttrFlags": 1
          },
          {
            "Text": " of an "
          },
          {
            "Text": "existing",
            "AttrFlags": 1
          },
          {
            "Text": " object."
          }
        ]
      }
    ],
    "title": "Adapter Pattern",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}