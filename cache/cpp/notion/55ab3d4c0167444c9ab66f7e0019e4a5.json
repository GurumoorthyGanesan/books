{
  "ID": "55ab3d4c-0167-444c-9ab6-6f7e0019e4a5",
  "Root": {
    "alive": true,
    "content": [
      "9642ab18-7d6c-4fc1-a944-a60b5900e819",
      "d36f6d05-f76c-4bd6-9555-da5d39be60d8",
      "2542ba64-eaf9-4e74-922f-d4c8812d2bab",
      "deba2437-3378-4aaf-92f7-1f786edd54d2",
      "ad3c79fa-20f8-4478-864b-3f2369f56496",
      "f16e79c8-8923-428a-b3dd-cd4e0bd90f44",
      "b86cad1c-65ed-4b18-a202-8ba0dc2c5b7f",
      "1f8604ed-1c2d-456e-ac04-8ec760dd13cd"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523034497,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "55ab3d4c-0167-444c-9ab6-6f7e0019e4a5",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551687126860,
    "parent_id": "89d591b2-5143-487b-8a09-144b6b266e4c",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Scoped enums"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523034493,
        "id": "9642ab18-7d6c-4fc1-a944-a60b5900e819",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523034493,
        "parent_id": "55ab3d4c-0167-444c-9ab6-6f7e0019e4a5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C++11 introduces what are known as "
            ],
            [
              "scoped enums",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". These are enumerations whose members must be qualified with "
            ],
            [
              "enumname::membername",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Scoped enums are declared using the "
            ],
            [
              "enum class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " syntax. For example, to store the colors in a rainbow:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "C++11 introduces what are known as "
          },
          {
            "Text": "scoped enums",
            "AttrFlags": 4
          },
          {
            "Text": ". These are enumerations whose members must be qualified with "
          },
          {
            "Text": "enumname::membername",
            "AttrFlags": 2
          },
          {
            "Text": ". Scoped enums are declared using the "
          },
          {
            "Text": "enum class",
            "AttrFlags": 2
          },
          {
            "Text": " syntax. For example, to store the colors in a rainbow:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523034496,
        "id": "d36f6d05-f76c-4bd6-9555-da5d39be60d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523034496,
        "parent_id": "55ab3d4c-0167-444c-9ab6-6f7e0019e4a5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "enum class rainbow {\n    RED,\n    ORANGE,\n    YELLOW,\n    GREEN,\n    BLUE,\n    INDIGO,\n    VIOLET\n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "enum class rainbow {\n    RED,\n    ORANGE,\n    YELLOW,\n    GREEN,\n    BLUE,\n    INDIGO,\n    VIOLET\n};",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523034496,
        "id": "2542ba64-eaf9-4e74-922f-d4c8812d2bab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523034496,
        "parent_id": "55ab3d4c-0167-444c-9ab6-6f7e0019e4a5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To access a specific color:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To access a specific color:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523034496,
        "id": "deba2437-3378-4aaf-92f7-1f786edd54d2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523034496,
        "parent_id": "55ab3d4c-0167-444c-9ab6-6f7e0019e4a5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "rainbow r = rainbow::INDIGO;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "rainbow r = rainbow::INDIGO;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523034496,
        "id": "ad3c79fa-20f8-4478-864b-3f2369f56496",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523034496,
        "parent_id": "55ab3d4c-0167-444c-9ab6-6f7e0019e4a5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "enum class",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "es cannot be implicitly converted to "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s without a cast. So "
            ],
            [
              "int x = rainbow::RED",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is invalid."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "enum class",
            "AttrFlags": 2
          },
          {
            "Text": "es cannot be implicitly converted to "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": "s without a cast. So "
          },
          {
            "Text": "int x = rainbow::RED",
            "AttrFlags": 2
          },
          {
            "Text": " is invalid."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523034497,
        "id": "f16e79c8-8923-428a-b3dd-cd4e0bd90f44",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523034497,
        "parent_id": "55ab3d4c-0167-444c-9ab6-6f7e0019e4a5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Scoped enums also allow you to specify the "
            ],
            [
              "underlying type",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", which is the type used to represent a member. By default it is "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". In a Tic-Tac-Toe game, you may store the piece as"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Scoped enums also allow you to specify the "
          },
          {
            "Text": "underlying type",
            "AttrFlags": 4
          },
          {
            "Text": ", which is the type used to represent a member. By default it is "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ". In a Tic-Tac-Toe game, you may store the piece as"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523034497,
        "id": "b86cad1c-65ed-4b18-a202-8ba0dc2c5b7f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523034497,
        "parent_id": "55ab3d4c-0167-444c-9ab6-6f7e0019e4a5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "enum class piece : char {\n    EMPTY = '\\0',\n    X = 'X',\n    O = 'O',\n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "enum class piece : char {\n    EMPTY = '\\0',\n    X = 'X',\n    O = 'O',\n};",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523034497,
        "id": "1f8604ed-1c2d-456e-ac04-8ec760dd13cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523034497,
        "parent_id": "55ab3d4c-0167-444c-9ab6-6f7e0019e4a5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As you may notice, "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s can have a trailing comma after the last member."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As you may notice, "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": "s can have a trailing comma after the last member."
          }
        ]
      }
    ],
    "title": "Scoped enums",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}