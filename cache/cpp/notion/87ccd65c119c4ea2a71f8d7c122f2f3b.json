{
  "ID": "87ccd65c-119c-4ea2-a71f-8d7c122f2f3b",
  "Root": {
    "alive": true,
    "content": [
      "50acb8c2-aa6c-4000-aa5c-523aee9510ea",
      "d91599ed-b261-4708-a3d0-de6478aea172",
      "5e0d4f6e-c995-40be-aa1d-b662d829fffb",
      "f17950fa-8806-4e69-a5c7-43b5430ec03f",
      "8f1be6bc-c07f-44f2-beb1-59648084a0ce",
      "2fdc3905-6d82-4b45-99cb-646f43677c2f",
      "f31c3f4d-ca8e-4fb2-b33c-8a85b847501f",
      "22e62973-0093-46bf-9b04-054c2bd80ab4",
      "07f8b8ec-5132-4911-9344-1f7351b85ce0"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550523858740,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "87ccd65c-119c-4ea2-a71f-8d7c122f2f3b",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551687966069,
    "parent_id": "8f46fba9-ba8b-4eaf-bb5f-2370fa61981b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Space occupied by a reference"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523858738,
        "id": "50acb8c2-aa6c-4000-aa5c-523aee9510ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523858738,
        "parent_id": "87ccd65c-119c-4ea2-a71f-8d7c122f2f3b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A reference is not an object, and unlike an object, it is not guaranteed to occupy some contiguous bytes of memory. The standard leaves it unspecified whether a reference requires any storage at all. A number of features of the language conspire to make it impossible to portably examine any storage the reference might occupy:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A reference is not an object, and unlike an object, it is not guaranteed to occupy some contiguous bytes of memory. The standard leaves it unspecified whether a reference requires any storage at all. A number of features of the language conspire to make it impossible to portably examine any storage the reference might occupy:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523858739,
        "id": "d91599ed-b261-4708-a3d0-de6478aea172",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523858739,
        "parent_id": "87ccd65c-119c-4ea2-a71f-8d7c122f2f3b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If "
            ],
            [
              "sizeof",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is applied to a reference, it returns the size of the referenced type, thereby giving no information about whether the reference occupies any storage."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If "
          },
          {
            "Text": "sizeof",
            "AttrFlags": 2
          },
          {
            "Text": " is applied to a reference, it returns the size of the referenced type, thereby giving no information about whether the reference occupies any storage."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523858739,
        "id": "5e0d4f6e-c995-40be-aa1d-b662d829fffb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523858739,
        "parent_id": "87ccd65c-119c-4ea2-a71f-8d7c122f2f3b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Arrays of references are illegal, so it is not possible to examine the addresses of two consecutive elements of a hypothetical reference of arrays in order to determine the size of a reference."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Arrays of references are illegal, so it is not possible to examine the addresses of two consecutive elements of a hypothetical reference of arrays in order to determine the size of a reference."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523858739,
        "id": "f17950fa-8806-4e69-a5c7-43b5430ec03f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523858739,
        "parent_id": "87ccd65c-119c-4ea2-a71f-8d7c122f2f3b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the address of a reference is taken, the result is the address of the referent, so we cannot get a pointer to the reference itself."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the address of a reference is taken, the result is the address of the referent, so we cannot get a pointer to the reference itself."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523858739,
        "id": "8f1be6bc-c07f-44f2-beb1-59648084a0ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523858739,
        "parent_id": "87ccd65c-119c-4ea2-a71f-8d7c122f2f3b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If a class has a reference member, attempting to extract the address of that member using "
            ],
            [
              "offsetof",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " yields undefined behavior since such a class is not a standard-layout class."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If a class has a reference member, attempting to extract the address of that member using "
          },
          {
            "Text": "offsetof",
            "AttrFlags": 2
          },
          {
            "Text": " yields undefined behavior since such a class is not a standard-layout class."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523858740,
        "id": "2fdc3905-6d82-4b45-99cb-646f43677c2f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523858740,
        "parent_id": "87ccd65c-119c-4ea2-a71f-8d7c122f2f3b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If a class has a reference member, the class is no longer standard layout, so attempts to access any data used to store the reference results in undefined or unspecified behavior."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If a class has a reference member, the class is no longer standard layout, so attempts to access any data used to store the reference results in undefined or unspecified behavior."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523858740,
        "id": "f31c3f4d-ca8e-4fb2-b33c-8a85b847501f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523858740,
        "parent_id": "87ccd65c-119c-4ea2-a71f-8d7c122f2f3b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In practice, in some cases a reference variable may be implemented similarly to a pointer variable and hence occupy the same amount of storage as a pointer, while in other cases a reference may occupy no space at all since it can be optimized out. For example, in:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In practice, in some cases a reference variable may be implemented similarly to a pointer variable and hence occupy the same amount of storage as a pointer, while in other cases a reference may occupy no space at all since it can be optimized out. For example, in:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523858740,
        "id": "22e62973-0093-46bf-9b04-054c2bd80ab4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523858740,
        "parent_id": "87ccd65c-119c-4ea2-a71f-8d7c122f2f3b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void f() {\n    int x;\n    int\u0026 r = x;\n    // do something with r\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void f() {\n    int x;\n    int\u0026 r = x;\n    // do something with r\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550523858740,
        "id": "07f8b8ec-5132-4911-9344-1f7351b85ce0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550523858740,
        "parent_id": "87ccd65c-119c-4ea2-a71f-8d7c122f2f3b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the compiler is free to simply treat "
            ],
            [
              "r",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as an alias for "
            ],
            [
              "x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and replace all occurrences of "
            ],
            [
              "r",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the rest of the function "
            ],
            [
              "f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with "
            ],
            [
              "x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and not allocate any storage to hold "
            ],
            [
              "r",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "the compiler is free to simply treat "
          },
          {
            "Text": "r",
            "AttrFlags": 2
          },
          {
            "Text": " as an alias for "
          },
          {
            "Text": "x",
            "AttrFlags": 2
          },
          {
            "Text": " and replace all occurrences of "
          },
          {
            "Text": "r",
            "AttrFlags": 2
          },
          {
            "Text": " in the rest of the function "
          },
          {
            "Text": "f",
            "AttrFlags": 2
          },
          {
            "Text": " with "
          },
          {
            "Text": "x",
            "AttrFlags": 2
          },
          {
            "Text": ", and not allocate any storage to hold "
          },
          {
            "Text": "r",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Space occupied by a reference",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}