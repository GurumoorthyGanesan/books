{
  "ID": "eef7eded-6aec-4c76-90ec-e72b74b407b6",
  "Root": {
    "alive": true,
    "content": [
      "14e3f455-8cc9-40c5-ae59-533f6f5ff1c5",
      "b7f2a3a4-d7a6-477d-b075-3e8d81ae44b4",
      "db15f7fd-9436-48df-8cb7-723bb30e18d9",
      "c01f9536-eb85-4a8a-a300-ebc5abcf8e1c",
      "4daec1dd-3461-4c1a-aa4b-8161f0baf9cd",
      "8e790e4e-876b-4527-92cb-1d19eb2424f1",
      "628f54ea-e28a-46f6-a8e0-005ee6ffc835",
      "6909e575-5571-4a31-a325-d6a09047e2b5",
      "ed2ff163-632d-40f3-bb34-2bca60c6514c",
      "26e2e34e-9631-4e66-bbbb-2ccc01654e46",
      "3dd08947-06d6-4ee9-b629-2d330f9e078d",
      "ac08a59d-9fec-4d76-b7dc-11f8c4b1d16d",
      "bfee1f21-369a-4ea1-83b6-0c07ed0ff5ff",
      "a943e8f1-52c4-4eb2-913a-2cb700a5f5b8"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550522266258,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "eef7eded-6aec-4c76-90ec-e72b74b407b6",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550655420000,
    "parent_id": "50a27510-120b-4da0-9ecb-cf15396a0108",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Accessing elements"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522266254,
        "id": "14e3f455-8cc9-40c5-ae59-533f6f5ff1c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522266254,
        "parent_id": "eef7eded-6aec-4c76-90ec-e72b74b407b6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An "
            ],
            [
              "std::map",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/container/map"
                ]
              ]
            ],
            [
              " takes "
            ],
            [
              "(key, value)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " pairs as input."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An "
          },
          {
            "Text": "std::map",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/container/map"
          },
          {
            "Text": " takes "
          },
          {
            "Text": "(key, value)",
            "AttrFlags": 2
          },
          {
            "Text": " pairs as input."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522266254,
        "id": "b7f2a3a4-d7a6-477d-b075-3e8d81ae44b4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522266254,
        "parent_id": "eef7eded-6aec-4c76-90ec-e72b74b407b6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consider the following example of "
            ],
            [
              "std::map",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/container/map"
                ]
              ]
            ],
            [
              " initialization:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consider the following example of "
          },
          {
            "Text": "std::map",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/container/map"
          },
          {
            "Text": " initialization:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522266254,
        "id": "db15f7fd-9436-48df-8cb7-723bb30e18d9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522266254,
        "parent_id": "eef7eded-6aec-4c76-90ec-e72b74b407b6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::map \u003c std::string, int \u003e ranking { std::make_pair(\"stackoverflow\", 2), \n                                        std::make_pair(\"docs-beta\", 1) };"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::map \u003c std::string, int \u003e ranking { std::make_pair(\"stackoverflow\", 2), \n                                        std::make_pair(\"docs-beta\", 1) };",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522266255,
        "id": "c01f9536-eb85-4a8a-a300-ebc5abcf8e1c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522266255,
        "parent_id": "eef7eded-6aec-4c76-90ec-e72b74b407b6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In an "
            ],
            [
              "std::map",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/container/map"
                ]
              ]
            ],
            [
              " , elements can be inserted as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In an "
          },
          {
            "Text": "std::map",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/container/map"
          },
          {
            "Text": " , elements can be inserted as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522266255,
        "id": "4daec1dd-3461-4c1a-aa4b-8161f0baf9cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522266255,
        "parent_id": "eef7eded-6aec-4c76-90ec-e72b74b407b6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "ranking[\"stackoverflow\"]=2;\nranking[\"docs-beta\"]=1;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "ranking[\"stackoverflow\"]=2;\nranking[\"docs-beta\"]=1;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522266255,
        "id": "8e790e4e-876b-4527-92cb-1d19eb2424f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522266255,
        "parent_id": "eef7eded-6aec-4c76-90ec-e72b74b407b6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the above example, if the key "
            ],
            [
              "stackoverflow",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is already present, its value will be updated to 2. If it isn’t already present, a new entry will be created."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the above example, if the key "
          },
          {
            "Text": "stackoverflow",
            "AttrFlags": 2
          },
          {
            "Text": " is already present, its value will be updated to 2. If it isn’t already present, a new entry will be created."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522266256,
        "id": "628f54ea-e28a-46f6-a8e0-005ee6ffc835",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522266256,
        "parent_id": "eef7eded-6aec-4c76-90ec-e72b74b407b6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In an "
            ],
            [
              "std::map",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/container/map"
                ]
              ]
            ],
            [
              ", elements can be accessed directly by giving the key as an index:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In an "
          },
          {
            "Text": "std::map",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/container/map"
          },
          {
            "Text": ", elements can be accessed directly by giving the key as an index:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522266256,
        "id": "6909e575-5571-4a31-a325-d6a09047e2b5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522266256,
        "parent_id": "eef7eded-6aec-4c76-90ec-e72b74b407b6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::cout \u003c\u003c ranking[ \"stackoverflow\" ] \u003c\u003c std::endl;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::cout \u003c\u003c ranking[ \"stackoverflow\" ] \u003c\u003c std::endl;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522266256,
        "id": "ed2ff163-632d-40f3-bb34-2bca60c6514c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522266256,
        "parent_id": "eef7eded-6aec-4c76-90ec-e72b74b407b6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that using the "
            ],
            [
              "operator[]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " on the map will actually "
            ],
            [
              "insert a new value",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " with the queried key into the map. This means that you cannot use it on a "
            ],
            [
              "const std::map",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", even if the key is already stored in the map. To prevent this insertion, check if the element exists (for example by using "
            ],
            [
              "find()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") or use "
            ],
            [
              "at()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as described below."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that using the "
          },
          {
            "Text": "operator[]",
            "AttrFlags": 2
          },
          {
            "Text": " on the map will actually "
          },
          {
            "Text": "insert a new value",
            "AttrFlags": 4
          },
          {
            "Text": " with the queried key into the map. This means that you cannot use it on a "
          },
          {
            "Text": "const std::map",
            "AttrFlags": 2
          },
          {
            "Text": ", even if the key is already stored in the map. To prevent this insertion, check if the element exists (for example by using "
          },
          {
            "Text": "find()",
            "AttrFlags": 2
          },
          {
            "Text": ") or use "
          },
          {
            "Text": "at()",
            "AttrFlags": 2
          },
          {
            "Text": " as described below."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522266257,
        "id": "26e2e34e-9631-4e66-bbbb-2ccc01654e46",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522266257,
        "parent_id": "eef7eded-6aec-4c76-90ec-e72b74b407b6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Elements of a "
            ],
            [
              "std::map",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be accessed with "
            ],
            [
              "at()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Elements of a "
          },
          {
            "Text": "std::map",
            "AttrFlags": 2
          },
          {
            "Text": " can be accessed with "
          },
          {
            "Text": "at()",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522266257,
        "id": "3dd08947-06d6-4ee9-b629-2d330f9e078d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522266257,
        "parent_id": "eef7eded-6aec-4c76-90ec-e72b74b407b6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "std::cout \u003c\u003c ranking.at(\"stackoverflow\") \u003c\u003c std::endl;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "std::cout \u003c\u003c ranking.at(\"stackoverflow\") \u003c\u003c std::endl;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522266257,
        "id": "ac08a59d-9fec-4d76-b7dc-11f8c4b1d16d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522266257,
        "parent_id": "eef7eded-6aec-4c76-90ec-e72b74b407b6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that "
            ],
            [
              "at()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will throw an "
            ],
            [
              "std::out_of_range",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " exception if the container does not contain the requested element."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that "
          },
          {
            "Text": "at()",
            "AttrFlags": 2
          },
          {
            "Text": " will throw an "
          },
          {
            "Text": "std::out_of_range",
            "AttrFlags": 2
          },
          {
            "Text": " exception if the container does not contain the requested element."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522266257,
        "id": "bfee1f21-369a-4ea1-83b6-0c07ed0ff5ff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522266257,
        "parent_id": "eef7eded-6aec-4c76-90ec-e72b74b407b6",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In both containers "
            ],
            [
              "std::map",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "std::multimap",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://en.cppreference.com/w/cpp/container/multimap"
                ]
              ]
            ],
            [
              ", elements can be accessed using iterators:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In both containers "
          },
          {
            "Text": "std::map",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "std::multimap",
            "AttrFlags": 2,
            "Link": "http://en.cppreference.com/w/cpp/container/multimap"
          },
          {
            "Text": ", elements can be accessed using iterators:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550522266258,
        "id": "a943e8f1-52c4-4eb2-913a-2cb700a5f5b8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550522266258,
        "parent_id": "eef7eded-6aec-4c76-90ec-e72b74b407b6",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Example using begin()\nstd::multimap \u003c int, std::string \u003e mmp { std::make_pair(2, \"stackoverflow\"),\n                                         std::make_pair(1, \"docs-beta\"),\n                                         std::make_pair(2, \"stackexchange\")  };\nauto it = mmp.begin();\nstd::cout \u003c\u003c it-\u003efirst \u003c\u003c \" : \" \u003c\u003c it-\u003esecond \u003c\u003c std::endl; // Output: \"1 : docs-beta\"\nit++;\nstd::cout \u003c\u003c it-\u003efirst \u003c\u003c \" : \" \u003c\u003c it-\u003esecond \u003c\u003c std::endl; // Output: \"2 : stackoverflow\"\nit++;\nstd::cout \u003c\u003c it-\u003efirst \u003c\u003c \" : \" \u003c\u003c it-\u003esecond \u003c\u003c std::endl; // Output: \"2 : stackexchange\"\n\n// Example using rbegin()\nstd::map \u003c int, std::string \u003e mp {  std::make_pair(2, \"stackoverflow\"),\n                                    std::make_pair(1, \"docs-beta\"),\n                                    std::make_pair(2, \"stackexchange\")  };\nauto it2 = mp.rbegin();\nstd::cout \u003c\u003c it2-\u003efirst \u003c\u003c \" : \" \u003c\u003c it2-\u003esecond \u003c\u003c std::endl; // Output: \"2 : stackoverflow\"\nit2++;\nstd::cout \u003c\u003c it2-\u003efirst \u003c\u003c \" : \" \u003c\u003c it2-\u003esecond \u003c\u003c std::endl; // Output: \"1 : docs-beta\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Example using begin()\nstd::multimap \u003c int, std::string \u003e mmp { std::make_pair(2, \"stackoverflow\"),\n                                         std::make_pair(1, \"docs-beta\"),\n                                         std::make_pair(2, \"stackexchange\")  };\nauto it = mmp.begin();\nstd::cout \u003c\u003c it-\u003efirst \u003c\u003c \" : \" \u003c\u003c it-\u003esecond \u003c\u003c std::endl; // Output: \"1 : docs-beta\"\nit++;\nstd::cout \u003c\u003c it-\u003efirst \u003c\u003c \" : \" \u003c\u003c it-\u003esecond \u003c\u003c std::endl; // Output: \"2 : stackoverflow\"\nit++;\nstd::cout \u003c\u003c it-\u003efirst \u003c\u003c \" : \" \u003c\u003c it-\u003esecond \u003c\u003c std::endl; // Output: \"2 : stackexchange\"\n\n// Example using rbegin()\nstd::map \u003c int, std::string \u003e mp {  std::make_pair(2, \"stackoverflow\"),\n                                    std::make_pair(1, \"docs-beta\"),\n                                    std::make_pair(2, \"stackexchange\")  };\nauto it2 = mp.rbegin();\nstd::cout \u003c\u003c it2-\u003efirst \u003c\u003c \" : \" \u003c\u003c it2-\u003esecond \u003c\u003c std::endl; // Output: \"2 : stackoverflow\"\nit2++;\nstd::cout \u003c\u003c it2-\u003efirst \u003c\u003c \" : \" \u003c\u003c it2-\u003esecond \u003c\u003c std::endl; // Output: \"1 : docs-beta\"",
        "code_language": "Plain Text"
      }
    ],
    "title": "Accessing elements",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}