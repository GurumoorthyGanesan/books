{
  "ID": "f4717749-1429-4d7c-a931-a07fbd76313d",
  "Root": {
    "alive": true,
    "content": [
      "8878aa4f-f8ec-4e26-a2a4-d03f037e9387",
      "8aeee9ad-0080-4038-b0ec-ec2a659fe2aa",
      "6f2053eb-1c2d-4adc-911f-f61f0ac18565",
      "e0a421e7-22ca-4b83-a1a1-296a4e66c6a5",
      "c8f7acb3-9cff-4e4e-b861-c111a351bc0a",
      "401a4fdd-416a-4eb0-87ca-2d860a8fdf54",
      "de7fea21-3b65-4b55-98c0-981a9065aa10"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551935651226,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "f4717749-1429-4d7c-a931-a07fbd76313d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551935651226,
    "parent_id": "218cbf42-b3ba-4b2a-bdab-e522009865b7",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Alignof"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935651223,
        "id": "8878aa4f-f8ec-4e26-a2a4-d03f037e9387",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935651223,
        "parent_id": "f4717749-1429-4d7c-a931-a07fbd76313d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Queries the alignment requirement for the specified type. The alignment requirement is a positive integral power of 2 representing the number of bytes between which two objects of the type may be allocated. In C, the alignment requirement is measured in "
            ],
            [
              "size_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Queries the alignment requirement for the specified type. The alignment requirement is a positive integral power of 2 representing the number of bytes between which two objects of the type may be allocated. In C, the alignment requirement is measured in "
          },
          {
            "Text": "size_t",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935651225,
        "id": "8aeee9ad-0080-4038-b0ec-ec2a659fe2aa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935651225,
        "parent_id": "f4717749-1429-4d7c-a931-a07fbd76313d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The type name may not be an incomplete type nor a function type. If an array is used as the type, the type of the array element is used."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The type name may not be an incomplete type nor a function type. If an array is used as the type, the type of the array element is used."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935651226,
        "id": "6f2053eb-1c2d-4adc-911f-f61f0ac18565",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935651226,
        "parent_id": "f4717749-1429-4d7c-a931-a07fbd76313d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This operator is often accessed through the convenience macro "
            ],
            [
              "alignof",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " from "
            ],
            [
              "\u003cstdalign.h\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This operator is often accessed through the convenience macro "
          },
          {
            "Text": "alignof",
            "AttrFlags": 2
          },
          {
            "Text": " from "
          },
          {
            "Text": "\u003cstdalign.h\u003e",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935651226,
        "id": "e0a421e7-22ca-4b83-a1a1-296a4e66c6a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935651226,
        "parent_id": "f4717749-1429-4d7c-a931-a07fbd76313d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int main(void)\n{\n    printf(\"Alignment of char = %zu\\n\", alignof(char));\n    printf(\"Alignment of max_align_t = %zu\\n\", alignof(max_align_t));\n    printf(\"alignof(float[10]) = %zu\\n\", alignof(float[10]));\n    printf(\"alignof(struct{char c; int n;}) = %zu\\n\",\n            alignof(struct {char c; int n;}));    \n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int main(void)\n{\n    printf(\"Alignment of char = %zu\\n\", alignof(char));\n    printf(\"Alignment of max_align_t = %zu\\n\", alignof(max_align_t));\n    printf(\"alignof(float[10]) = %zu\\n\", alignof(float[10]));\n    printf(\"alignof(struct{char c; int n;}) = %zu\\n\",\n            alignof(struct {char c; int n;}));    \n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935651226,
        "id": "c8f7acb3-9cff-4e4e-b861-c111a351bc0a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935651226,
        "parent_id": "f4717749-1429-4d7c-a931-a07fbd76313d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Possible Output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Possible Output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935651226,
        "id": "401a4fdd-416a-4eb0-87ca-2d860a8fdf54",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935651226,
        "parent_id": "f4717749-1429-4d7c-a931-a07fbd76313d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Alignment of char = 1\nAlignment of max_align_t = 16\nalignof(float[10]) = 4\nalignof(struct{char c; int n;}) = 4"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Alignment of char = 1\nAlignment of max_align_t = 16\nalignof(float[10]) = 4\nalignof(struct{char c; int n;}) = 4",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935651226,
        "id": "de7fea21-3b65-4b55-98c0-981a9065aa10",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935651226,
        "parent_id": "f4717749-1429-4d7c-a931-a07fbd76313d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://en.cppreference.com/w/c/language/_Alignof"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "http://en.cppreference.com/w/c/language/_Alignof"
          }
        ]
      }
    ],
    "title": "Alignof",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}