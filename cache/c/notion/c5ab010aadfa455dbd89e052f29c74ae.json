{
  "ID": "c5ab010a-adfa-455d-bd89-e052f29c74ae",
  "Root": {
    "alive": true,
    "content": [
      "98de49ed-5fe4-4c88-b0e5-dea6383981f6",
      "9e7fc4aa-9bfa-47bf-aa6f-d3257bcce452",
      "29fb16b2-2fbe-4e88-b733-93f9a4a8df8f",
      "3c019618-9258-49f1-b8ad-d913b36a4985",
      "493bb1ac-bca8-470d-b112-e110bdb7c87d",
      "0cdde5c4-8822-418e-80c3-ac764b3d563e",
      "6eb82853-f0e5-4cc4-bff7-a6a111da9f2c",
      "78941814-eba8-4438-b84a-d916613e786c",
      "261fdc98-4df7-4559-aa7b-c4d2194e746c",
      "dc09985b-4b38-48e1-95e9-f579b657a8dc",
      "d9f3034b-b9ff-4890-995d-2e7e80ec257f",
      "d2cbd206-c6f3-4e08-a936-52e355003079",
      "7bff652b-9ffd-4485-8543-d4ddda75f96c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551935737816,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c5ab010a-adfa-455d-bd89-e052f29c74ae",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551935737816,
    "parent_id": "eff989d8-e4d4-4f97-952e-6c58e46dfb73",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Data race"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935737811,
        "id": "98de49ed-5fe4-4c88-b0e5-dea6383981f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935737811,
        "parent_id": "c5ab010a-adfa-455d-bd89-e052f29c74ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C11 introduced support for multiple threads of execution, which affords the possibility of data races. A program contains a data race if an object in it is accessed1 by two different threads, where at least one of the accesses is non-atomic, at least one modifies the object, and program semantics fail to ensure that the two accesses cannot overlap temporally.2 Note well that actual concurrency of the accesses involved is not a condition for a data race; data races cover a broader class of issues arising from (allowed) inconsistencies in different threads’ views of memory."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "C11 introduced support for multiple threads of execution, which affords the possibility of data races. A program contains a data race if an object in it is accessed1 by two different threads, where at least one of the accesses is non-atomic, at least one modifies the object, and program semantics fail to ensure that the two accesses cannot overlap temporally.2 Note well that actual concurrency of the accesses involved is not a condition for a data race; data races cover a broader class of issues arising from (allowed) inconsistencies in different threads’ views of memory."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935737813,
        "id": "9e7fc4aa-9bfa-47bf-aa6f-d3257bcce452",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935737813,
        "parent_id": "c5ab010a-adfa-455d-bd89-e052f29c74ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consider this example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consider this example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935737813,
        "id": "29fb16b2-2fbe-4e88-b733-93f9a4a8df8f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935737814,
        "parent_id": "c5ab010a-adfa-455d-bd89-e052f29c74ae",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003cthreads.h\u003e\n\nint a = 0;\n\nint Function( void* ignore )\n{\n    a = 1;\n\n    return 0;\n}\n\nint main( void )\n{\n    thrd_t id;\n    thrd_create( \u0026id , Function , NULL );\n\n    int b = a;\n\n    thrd_join( id , NULL );\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003cthreads.h\u003e\n\nint a = 0;\n\nint Function( void* ignore )\n{\n    a = 1;\n\n    return 0;\n}\n\nint main( void )\n{\n    thrd_t id;\n    thrd_create( \u0026id , Function , NULL );\n\n    int b = a;\n\n    thrd_join( id , NULL );\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935737814,
        "id": "3c019618-9258-49f1-b8ad-d913b36a4985",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935737814,
        "parent_id": "c5ab010a-adfa-455d-bd89-e052f29c74ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The main thread calls "
            ],
            [
              "thrd_create",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to start a new thread running function "
            ],
            [
              "Function",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The second thread modifies "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and the main thread reads "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Neither of those access is atomic, and the two threads do nothing either individually or jointly to ensure that they do not overlap, so there is a data race."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The main thread calls "
          },
          {
            "Text": "thrd_create",
            "AttrFlags": 2
          },
          {
            "Text": " to start a new thread running function "
          },
          {
            "Text": "Function",
            "AttrFlags": 2
          },
          {
            "Text": ". The second thread modifies "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": ", and the main thread reads "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": ". Neither of those access is atomic, and the two threads do nothing either individually or jointly to ensure that they do not overlap, so there is a data race."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935737814,
        "id": "493bb1ac-bca8-470d-b112-e110bdb7c87d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935737814,
        "parent_id": "c5ab010a-adfa-455d-bd89-e052f29c74ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Among the ways this program could avoid the data race are"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Among the ways this program could avoid the data race are"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935737815,
        "id": "0cdde5c4-8822-418e-80c3-ac764b3d563e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935737815,
        "parent_id": "c5ab010a-adfa-455d-bd89-e052f29c74ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the main thread could perform its read of "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " before starting the other thread;"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "the main thread could perform its read of "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " before starting the other thread;"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935737815,
        "id": "6eb82853-f0e5-4cc4-bff7-a6a111da9f2c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935737815,
        "parent_id": "c5ab010a-adfa-455d-bd89-e052f29c74ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the main thread could perform its read of "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " after ensuring via "
            ],
            [
              "thrd_join",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that the other has terminated;"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "the main thread could perform its read of "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " after ensuring via "
          },
          {
            "Text": "thrd_join",
            "AttrFlags": 2
          },
          {
            "Text": " that the other has terminated;"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935737815,
        "id": "78941814-eba8-4438-b84a-d916613e786c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935737815,
        "parent_id": "c5ab010a-adfa-455d-bd89-e052f29c74ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the threads could synchronize their accesses via a mutex, each one locking that mutex before accessing "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and unlocking it afterward."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "the threads could synchronize their accesses via a mutex, each one locking that mutex before accessing "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " and unlocking it afterward."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935737815,
        "id": "261fdc98-4df7-4559-aa7b-c4d2194e746c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935737815,
        "parent_id": "c5ab010a-adfa-455d-bd89-e052f29c74ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As the mutex option demonstrates, avoiding a data race does not require ensuring a specific order of operations, such as the child thread modifying "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " before the main thread reads it; it is sufficient (for avoiding a data race) to ensure that for a given execution, one access will happen before the other."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As the mutex option demonstrates, avoiding a data race does not require ensuring a specific order of operations, such as the child thread modifying "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " before the main thread reads it; it is sufficient (for avoiding a data race) to ensure that for a given execution, one access will happen before the other."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935737816,
        "id": "dc09985b-4b38-48e1-95e9-f579b657a8dc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935737816,
        "parent_id": "c5ab010a-adfa-455d-bd89-e052f29c74ae",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935737816,
        "id": "d9f3034b-b9ff-4890-995d-2e7e80ec257f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935737816,
        "parent_id": "c5ab010a-adfa-455d-bd89-e052f29c74ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "1 Modifying or reading an object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "1 Modifying or reading an object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935737816,
        "id": "d2cbd206-c6f3-4e08-a936-52e355003079",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935737816,
        "parent_id": "c5ab010a-adfa-455d-bd89-e052f29c74ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "2 (Quoted from ISO:IEC 9889:201x, section 5.1.2.4 “Multi-threaded executions and data races”)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "2 (Quoted from ISO:IEC 9889:201x, section 5.1.2.4 “Multi-threaded executions and data races”)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935737816,
        "id": "7bff652b-9ffd-4485-8543-d4ddda75f96c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935737816,
        "parent_id": "c5ab010a-adfa-455d-bd89-e052f29c74ae",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The execution of a program contains a data race if it contains two conflicting actions in different threads, at least one of which is not atomic, and neither happens before the other. Any such data race results in undefined behavior."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The execution of a program contains a data race if it contains two conflicting actions in different threads, at least one of which is not atomic, and neither happens before the other. Any such data race results in undefined behavior."
          }
        ]
      }
    ],
    "title": "Data race",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}