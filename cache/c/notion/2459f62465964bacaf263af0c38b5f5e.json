{
  "ID": "2459f624-6596-4bac-af26-3af0c38b5f5e",
  "Root": {
    "alive": true,
    "content": [
      "f203166d-01a7-4eab-ac37-d9d16d31f396",
      "25115b04-957f-427c-b4e2-527b161fa6a9",
      "b548802f-221c-4a28-a0f7-951c1584d2fa",
      "14e2bae6-7e38-4897-9b10-2d83121f156d",
      "711086f3-fb93-4d30-b8b1-97699386ccac",
      "72884ac1-4983-4603-9da0-fe155062fb31",
      "73090fb4-b61f-4245-95f5-ead0784aa332",
      "7eb1583d-baa8-4eb1-9ff9-a0835fcbe872",
      "1d0b3651-98cf-4577-8773-da3a6acdb982",
      "18cbcc30-4f76-4272-b57b-e6c2bb89585e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936677572,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "2459f624-6596-4bac-af26-3af0c38b5f5e",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936677572,
    "parent_id": "2042e9e8-170e-4e88-a3c5-041aec6ba49b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Character literals"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936677564,
        "id": "f203166d-01a7-4eab-ac37-d9d16d31f396",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936677564,
        "parent_id": "2459f624-6596-4bac-af26-3af0c38b5f5e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Character literals are a special type of integer literals that are used to represent one character. They are enclosed in single quotes, e.g. "
            ],
            [
              "'a'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and have the type "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The value of the literal is an integer value according to the machine’s character set. They do not allow suffixes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Character literals are a special type of integer literals that are used to represent one character. They are enclosed in single quotes, e.g. "
          },
          {
            "Text": "'a'",
            "AttrFlags": 2
          },
          {
            "Text": " and have the type "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ". The value of the literal is an integer value according to the machine’s character set. They do not allow suffixes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936677567,
        "id": "25115b04-957f-427c-b4e2-527b161fa6a9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936677567,
        "parent_id": "2459f624-6596-4bac-af26-3af0c38b5f5e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "L",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " prefix before a character literal makes it a wide character of type "
            ],
            [
              "wchar_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Likewise since C11 "
            ],
            [
              "u",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "U",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " prefixes make it wide characters of type "
            ],
            [
              "char16_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "char32_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", respectively."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "L",
            "AttrFlags": 2
          },
          {
            "Text": " prefix before a character literal makes it a wide character of type "
          },
          {
            "Text": "wchar_t",
            "AttrFlags": 2
          },
          {
            "Text": ". Likewise since C11 "
          },
          {
            "Text": "u",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "U",
            "AttrFlags": 2
          },
          {
            "Text": " prefixes make it wide characters of type "
          },
          {
            "Text": "char16_t",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "char32_t",
            "AttrFlags": 2
          },
          {
            "Text": ", respectively."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936677567,
        "id": "b548802f-221c-4a28-a0f7-951c1584d2fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936677567,
        "parent_id": "2459f624-6596-4bac-af26-3af0c38b5f5e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When intending to represent certain special characters, such as a character that is non-printing, escape sequences are used. Escape sequences use a sequence of characters that are translated into another character. All escape sequences consist of two or more characters, the first of which is a backslash "
            ],
            [
              "\\\\",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The characters immediately following the backslash determine what character literal the sequence is interpreted as."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When intending to represent certain special characters, such as a character that is non-printing, escape sequences are used. Escape sequences use a sequence of characters that are translated into another character. All escape sequences consist of two or more characters, the first of which is a backslash "
          },
          {
            "Text": "\\\\",
            "AttrFlags": 2
          },
          {
            "Text": ". The characters immediately following the backslash determine what character literal the sequence is interpreted as."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936677568,
        "id": "14e2bae6-7e38-4897-9b10-2d83121f156d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936677568,
        "parent_id": "2459f624-6596-4bac-af26-3af0c38b5f5e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Escape Sequence | Represented Character |\n————— | ——————— |"
            ],
            [
              "\\b",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Backspace |"
            ],
            [
              "\\f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Form feed |"
            ],
            [
              "\\n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Line feed (new line) |"
            ],
            [
              "\\r",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Carriage return |"
            ],
            [
              "\\t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Horizontal tab |"
            ],
            [
              "\\v",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Vertical tab |"
            ],
            [
              "\\\\",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Backslash |"
            ],
            [
              "\\'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Single quotation mark |"
            ],
            [
              "\\\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Double quotation mark |"
            ],
            [
              "\\?",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Question mark |"
            ],
            [
              "\\nnn",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Octal value |"
            ],
            [
              "\\xnn",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "… | Hexadecimal value |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Escape Sequence | Represented Character |\n————— | ——————— |"
          },
          {
            "Text": "\\b",
            "AttrFlags": 2
          },
          {
            "Text": " | Backspace |"
          },
          {
            "Text": "\\f",
            "AttrFlags": 2
          },
          {
            "Text": " | Form feed |"
          },
          {
            "Text": "\\n",
            "AttrFlags": 2
          },
          {
            "Text": " | Line feed (new line) |"
          },
          {
            "Text": "\\r",
            "AttrFlags": 2
          },
          {
            "Text": " | Carriage return |"
          },
          {
            "Text": "\\t",
            "AttrFlags": 2
          },
          {
            "Text": " | Horizontal tab |"
          },
          {
            "Text": "\\v",
            "AttrFlags": 2
          },
          {
            "Text": " | Vertical tab |"
          },
          {
            "Text": "\\\\",
            "AttrFlags": 2
          },
          {
            "Text": " | Backslash |"
          },
          {
            "Text": "\\'",
            "AttrFlags": 2
          },
          {
            "Text": " | Single quotation mark |"
          },
          {
            "Text": "\\\"",
            "AttrFlags": 2
          },
          {
            "Text": " | Double quotation mark |"
          },
          {
            "Text": "\\?",
            "AttrFlags": 2
          },
          {
            "Text": " | Question mark |"
          },
          {
            "Text": "\\nnn",
            "AttrFlags": 2
          },
          {
            "Text": " | Octal value |"
          },
          {
            "Text": "\\xnn",
            "AttrFlags": 2
          },
          {
            "Text": "… | Hexadecimal value |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936677568,
        "id": "711086f3-fb93-4d30-b8b1-97699386ccac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936677568,
        "parent_id": "2459f624-6596-4bac-af26-3af0c38b5f5e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Escape Sequence | Represented Character |\n————— | ——————— |"
            ],
            [
              "\\a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Alert (beep, bell) |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Escape Sequence | Represented Character |\n————— | ——————— |"
          },
          {
            "Text": "\\a",
            "AttrFlags": 2
          },
          {
            "Text": " | Alert (beep, bell) |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936677568,
        "id": "72884ac1-4983-4603-9da0-fe155062fb31",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936677568,
        "parent_id": "2459f624-6596-4bac-af26-3af0c38b5f5e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Escape Sequence | Represented Character |\n————— | ———————— |"
            ],
            [
              "\\unnnn",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Universal character name |"
            ],
            [
              "\\Unnnnnnnn",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | Universal character name |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Escape Sequence | Represented Character |\n————— | ———————— |"
          },
          {
            "Text": "\\unnnn",
            "AttrFlags": 2
          },
          {
            "Text": " | Universal character name |"
          },
          {
            "Text": "\\Unnnnnnnn",
            "AttrFlags": 2
          },
          {
            "Text": " | Universal character name |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936677569,
        "id": "73090fb4-b61f-4245-95f5-ead0784aa332",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936677569,
        "parent_id": "2459f624-6596-4bac-af26-3af0c38b5f5e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A universal character name is a Unicode code point. A universal character name may map to more than one character. The digits "
            ],
            [
              "n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are interpreted as hexadecimal digits. Depending on the UTF encoding in use, a universal character name sequence may result in a code point that consists of multiple characters, instead of a single normal "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " character."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A universal character name is a Unicode code point. A universal character name may map to more than one character. The digits "
          },
          {
            "Text": "n",
            "AttrFlags": 2
          },
          {
            "Text": " are interpreted as hexadecimal digits. Depending on the UTF encoding in use, a universal character name sequence may result in a code point that consists of multiple characters, instead of a single normal "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": " character."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936677569,
        "id": "7eb1583d-baa8-4eb1-9ff9-a0835fcbe872",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936677569,
        "parent_id": "2459f624-6596-4bac-af26-3af0c38b5f5e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When using the line feed escape sequence in text mode I/O, it is converted to the OS-specific newline byte or byte sequence."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When using the line feed escape sequence in text mode I/O, it is converted to the OS-specific newline byte or byte sequence."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936677572,
        "id": "1d0b3651-98cf-4577-8773-da3a6acdb982",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936677572,
        "parent_id": "2459f624-6596-4bac-af26-3af0c38b5f5e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The question mark escape sequence is used to avoid "
            ],
            [
              "trigraphs",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c/7111/multi-character-character-sequence/23858/trigraphs#t=201701231206445520346"
                ]
              ]
            ],
            [
              ". For example, "
            ],
            [
              "??/",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is compiled as the trigraph representing a backslash character "
            ],
            [
              "'\\'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", but using "
            ],
            [
              "?\\?/",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " would result in the "
            ],
            [
              "string",
              [
                [
                  "i"
                ],
                [
                  "a",
                  "http://stackoverflow.com/documentation/c/1990/strings#t=201701231207186587708"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "\"??/\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The question mark escape sequence is used to avoid "
          },
          {
            "Text": "trigraphs",
            "Link": "http://stackoverflow.com/documentation/c/7111/multi-character-character-sequence/23858/trigraphs#t=201701231206445520346"
          },
          {
            "Text": ". For example, "
          },
          {
            "Text": "??/",
            "AttrFlags": 2
          },
          {
            "Text": " is compiled as the trigraph representing a backslash character "
          },
          {
            "Text": "'\\'",
            "AttrFlags": 2
          },
          {
            "Text": ", but using "
          },
          {
            "Text": "?\\?/",
            "AttrFlags": 2
          },
          {
            "Text": " would result in the "
          },
          {
            "Text": "string",
            "AttrFlags": 4,
            "Link": "http://stackoverflow.com/documentation/c/1990/strings#t=201701231207186587708"
          },
          {
            "Text": " "
          },
          {
            "Text": "\"??/\"",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936677572,
        "id": "18cbcc30-4f76-4272-b57b-e6c2bb89585e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936677572,
        "parent_id": "2459f624-6596-4bac-af26-3af0c38b5f5e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There may be one, two or three octal numerals "
            ],
            [
              "n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the octal value escape sequence."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There may be one, two or three octal numerals "
          },
          {
            "Text": "n",
            "AttrFlags": 2
          },
          {
            "Text": " in the octal value escape sequence."
          }
        ]
      }
    ],
    "title": "Character literals",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}